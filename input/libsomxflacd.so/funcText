.text:0000000000002000 ; ===========================================================================
.text:0000000000002000 ; Segment type: Pure code
.text:0000000000002000                 AREA .text, CODE, ALIGN=3
.text:0000000000002000                 ; ORG 0x2000
.text:0000000000002000                 CODE64
.text:0000000000002000 ; =============== S U B R O U T I N E =======================================
.text:0000000000002000                 EXPORT start
.text:0000000000002000 start                                   ; DATA XREF: LOAD:0000000000000018↑o
.text:0000000000002000                                         ; LOAD:00000000000000C0↑o ...
.text:0000000000002000 ; __unwind {
.text:0000000000002000                 ADRP            X0, #off_5000@PAGE
.text:0000000000002004                 ADD             X0, X0, #off_5000@PAGEOFF ; void *
.text:0000000000002008                 B               .__cxa_finalize
.text:0000000000002008 ; } // starts at 2000
.text:0000000000002008 ; End of function start
.text:0000000000002008 ; ---------------------------------------------------------------------------
.text:000000000000200C                 ALIGN 0x10
.text:0000000000002010 ; [00000004 BYTES: COLLAPSED FUNCTION nullsub_1. PRESS CTRL-NUMPAD+ TO EXPAND]
.text:0000000000002014                 ALIGN 8
.text:0000000000002018 ; [00000004 BYTES: COLLAPSED FUNCTION j_nullsub_1. PRESS CTRL-NUMPAD+ TO EXPAND]
.text:000000000000201C                 ALIGN 0x20
.text:0000000000002020 ; =============== S U B R O U T I N E =======================================
.text:0000000000002020 ; Attributes: bp-based frame
.text:0000000000002020                 EXPORT SOMXFLACD_Init
.text:0000000000002020 SOMXFLACD_Init                          ; CODE XREF: .SOMXFLACD_Init+C↓j
.text:0000000000002020                                         ; DATA XREF: LOAD:00000000000005D0↑o ...
.text:0000000000002020 var_10          = -0x10
.text:0000000000002020 var_s0          =  0
.text:0000000000002020 ; __unwind {
.text:0000000000002020                 STP             X20, X19, [SP,#-0x10+var_10]!
.text:0000000000002024                 STP             X29, X30, [SP,#0x10+var_s0]
.text:0000000000002028                 ADD             X29, SP, #0x10
.text:000000000000202C                 MOV             X20, X0
.text:0000000000002030                 MOV             W0, #0x50 ; 'P'
.text:0000000000002034                 BL              .SEC_OSAL_Malloc
.text:0000000000002038                 MOV             X19, X0
.text:000000000000203C                 CBZ             X0, loc_2070
.text:0000000000002040                 MOV             W2, #0x50 ; 'P'
.text:0000000000002044                 MOV             X0, X19
.text:0000000000002048                 MOV             W1, WZR
.text:000000000000204C                 BL              .SEC_OSAL_Memset
.text:0000000000002050                 BL              .sflac_init
.text:0000000000002054                 CBZ             W0, loc_20D8
.text:0000000000002058                 MOV             W8, #0x80001019
.text:0000000000002060                 MOV             X0, X19
.text:0000000000002064                 STR             W8, [X20]
.text:0000000000002068                 BL              .SEC_OSAL_Free
.text:000000000000206C                 B               loc_20F8
.text:0000000000002070 ; ---------------------------------------------------------------------------
.text:0000000000002070 loc_2070                                ; CODE XREF: SOMXFLACD_Init+1C↑j
.text:0000000000002070                 MOV             W8, #0x8000101E
.text:000000000000207C                 MOV             W1, #0x2F ; '/'
.text:0000000000002080                 MOV             W2, #0x53 ; 'S'
.text:0000000000002084                 STR             W8, [X20]
.text:0000000000002088                 ADRP            X20, #aVendorSamsungF@PAGE ; "vendor/samsung/frameworks/avcodec/mm_pr"...
.text:000000000000208C                 ADD             X20, X20, #aVendorSamsungF@PAGEOFF ; "vendor/samsung/frameworks/avcodec/mm_pr"...
.text:0000000000002090                 MOV             X0, X20
.text:0000000000002094                 BL              .__strrchr_chk
.text:0000000000002098                 CBZ             X0, loc_20B4
.text:000000000000209C                 ADRP            X0, #aVendorSamsungF@PAGE ; "vendor/samsung/frameworks/avcodec/mm_pr"...
.text:00000000000020A0                 ADD             X0, X0, #aVendorSamsungF@PAGEOFF ; "vendor/samsung/frameworks/avcodec/mm_pr"...
.text:00000000000020A4                 MOV             W1, #0x2F ; '/'
.text:00000000000020A8                 MOV             W2, #0x53 ; 'S'
.text:00000000000020AC                 BL              .__strrchr_chk
.text:00000000000020B0                 ADD             X20, X0, #1
.text:00000000000020B4 loc_20B4                                ; CODE XREF: SOMXFLACD_Init+78↑j
.text:00000000000020B4                 ADRP            X1, #aSecFlacDec@PAGE ; "SEC_FLAC_DEC"
.text:00000000000020B8                 ADRP            X2, #aSDAssertionPsf@PAGE ; "%s(%d): assertion: 'pSFlacDec' failed"
.text:00000000000020BC                 ADD             X1, X1, #aSecFlacDec@PAGEOFF ; "SEC_FLAC_DEC"
.text:00000000000020C0                 ADD             X2, X2, #aSDAssertionPsf@PAGEOFF ; "%s(%d): assertion: 'pSFlacDec' failed"
.text:00000000000020C4                 MOV             W4, #0x47 ; 'G'
.text:00000000000020C8                 MOV             W0, #3
.text:00000000000020CC                 MOV             X3, X20
.text:00000000000020D0                 BL              ._SEC_OSAL_Log
.text:00000000000020D4                 B               loc_20F8
.text:00000000000020D8 ; ---------------------------------------------------------------------------
.text:00000000000020D8 loc_20D8                                ; CODE XREF: SOMXFLACD_Init+34↑j
.text:00000000000020D8                 ADRP            X8, #xmmword_10A0@PAGE
.text:00000000000020DC                 STR             WZR, [X19,#0x4C]
.text:00000000000020E0                 MOV             X9, #0x200000010
.text:00000000000020E8                 LDR             Q0, [X8,#xmmword_10A0@PAGEOFF]
.text:00000000000020EC                 STR             X9, [X19,#0x18]
.text:00000000000020F0                 STUR            Q0, [X19,#8]
.text:00000000000020F4                 STR             WZR, [X20]
.text:00000000000020F8 loc_20F8                                ; CODE XREF: SOMXFLACD_Init+4C↑j
.text:00000000000020F8                                         ; SOMXFLACD_Init+B4↑j
.text:00000000000020F8                 LDP             X29, X30, [SP,#0x10+var_s0]
.text:00000000000020FC                 MOV             X0, X19
.text:0000000000002100                 LDP             X20, X19, [SP+0x10+var_10],#0x20
.text:0000000000002104                 RET
.text:0000000000002104 ; } // starts at 2020
.text:0000000000002104 ; End of function SOMXFLACD_Init
.text:0000000000002108 ; =============== S U B R O U T I N E =======================================
.text:0000000000002108 ; Attributes: bp-based frame
.text:0000000000002108                 EXPORT SOMXFLACD_Terminate
.text:0000000000002108 SOMXFLACD_Terminate                     ; CODE XREF: .SOMXFLACD_Terminate+C↓j
.text:0000000000002108                                         ; DATA XREF: LOAD:0000000000000678↑o ...
.text:0000000000002108 var_10          = -0x10
.text:0000000000002108 var_s0          =  0
.text:0000000000002108 ; __unwind {
.text:0000000000002108                 STR             X19, [SP,#-0x10+var_10]!
.text:000000000000210C                 STP             X29, X30, [SP,#0x10+var_s0]
.text:0000000000002110                 ADD             X29, SP, #0x10
.text:0000000000002114                 CBZ             X0, loc_2140
.text:0000000000002118                 MOV             X19, X0
.text:000000000000211C                 LDR             X0, [X0]
.text:0000000000002120                 CBZ             X0, loc_212C
.text:0000000000002124                 BL              .sflacd_delete
.text:0000000000002128                 STR             XZR, [X19]
.text:000000000000212C loc_212C                                ; CODE XREF: SOMXFLACD_Terminate+18↑j
.text:000000000000212C                 MOV             X0, X19
.text:0000000000002130                 BL              .SEC_OSAL_Free
.text:0000000000002134                 BL              .sflac_deinit
.text:0000000000002138                 MOV             W0, WZR
.text:000000000000213C                 B               loc_219C
.text:0000000000002140 ; ---------------------------------------------------------------------------
.text:0000000000002140 loc_2140                                ; CODE XREF: SOMXFLACD_Terminate+C↑j
.text:0000000000002140                 ADRP            X19, #aVendorSamsungF@PAGE ; "vendor/samsung/frameworks/avcodec/mm_pr"...
.text:0000000000002144                 ADD             X19, X19, #aVendorSamsungF@PAGEOFF ; "vendor/samsung/frameworks/avcodec/mm_pr"...
.text:0000000000002148                 MOV             W1, #0x2F ; '/'
.text:000000000000214C                 MOV             W2, #0x53 ; 'S'
.text:0000000000002150                 MOV             X0, X19
.text:0000000000002154                 BL              .__strrchr_chk
.text:0000000000002158                 CBZ             X0, loc_2174
.text:000000000000215C                 ADRP            X0, #aVendorSamsungF@PAGE ; "vendor/samsung/frameworks/avcodec/mm_pr"...
.text:0000000000002160                 ADD             X0, X0, #aVendorSamsungF@PAGEOFF ; "vendor/samsung/frameworks/avcodec/mm_pr"...
.text:0000000000002164                 MOV             W1, #0x2F ; '/'
.text:0000000000002168                 MOV             W2, #0x53 ; 'S'
.text:000000000000216C                 BL              .__strrchr_chk
.text:0000000000002170                 ADD             X19, X0, #1
.text:0000000000002174 loc_2174                                ; CODE XREF: SOMXFLACD_Terminate+50↑j
.text:0000000000002174                 ADRP            X1, #aSecFlacDec@PAGE ; "SEC_FLAC_DEC"
.text:0000000000002178                 ADRP            X2, #aSDAssertionPde@PAGE ; "%s(%d): assertion: 'pDec' failed"
.text:000000000000217C                 ADD             X1, X1, #aSecFlacDec@PAGEOFF ; "SEC_FLAC_DEC"
.text:0000000000002180                 ADD             X2, X2, #aSDAssertionPde@PAGEOFF ; "%s(%d): assertion: 'pDec' failed"
.text:0000000000002184                 MOV             W4, #0x75 ; 'u'
.text:0000000000002188                 MOV             W0, #3
.text:000000000000218C                 MOV             X3, X19
.text:0000000000002190                 BL              ._SEC_OSAL_Log
.text:0000000000002194                 MOV             W0, #0x80001005
.text:000000000000219C loc_219C                                ; CODE XREF: SOMXFLACD_Terminate+34↑j
.text:000000000000219C                 LDP             X29, X30, [SP,#0x10+var_s0]
.text:00000000000021A0                 LDR             X19, [SP+0x10+var_10],#0x20
.text:00000000000021A4                 RET
.text:00000000000021A4 ; } // starts at 2108
.text:00000000000021A4 ; End of function SOMXFLACD_Terminate
.text:00000000000021A8 ; =============== S U B R O U T I N E =======================================
.text:00000000000021A8 ; Attributes: bp-based frame
.text:00000000000021A8                 EXPORT SOMXFLACD_Decode
.text:00000000000021A8 SOMXFLACD_Decode                        ; CODE XREF: .SOMXFLACD_Decode+C↓j
.text:00000000000021A8                                         ; DATA XREF: LOAD:00000000000005B8↑o ...
.text:00000000000021A8 var_1EC         = -0x1EC
.text:00000000000021A8 var_1E8         = -0x1E8
.text:00000000000021A8 var_1E0         = -0x1E0
.text:00000000000021A8 var_1D8         = -0x1D8
.text:00000000000021A8 var_1D0         = -0x1D0
.text:00000000000021A8 var_1C4         = -0x1C4
.text:00000000000021A8 var_1BC         = -0x1BC
.text:00000000000021A8 var_1B8         = -0x1B8
.text:00000000000021A8 var_198         = -0x198
.text:00000000000021A8 var_178         = -0x178
.text:00000000000021A8 var_F8          = -0xF8
.text:00000000000021A8 var_F4          = -0xF4
.text:00000000000021A8 var_A8          = -0xA8
.text:00000000000021A8 var_98          = -0x98
.text:00000000000021A8 var_90          = -0x90
.text:00000000000021A8 var_40          = -0x40
.text:00000000000021A8 var_30          = -0x30
.text:00000000000021A8 var_20          = -0x20
.text:00000000000021A8 var_10          = -0x10
.text:00000000000021A8 var_s0          =  0
.text:00000000000021A8 ; __unwind {
.text:00000000000021A8                 STP             X28, X25, [SP,#-0x10+var_40]!
.text:00000000000021AC                 STP             X24, X23, [SP,#0x40+var_30]
.text:00000000000021B0                 STP             X22, X21, [SP,#0x40+var_20]
.text:00000000000021B4                 STP             X20, X19, [SP,#0x40+var_10]
.text:00000000000021B8                 STP             X29, X30, [SP,#0x40+var_s0]
.text:00000000000021BC                 ADD             X29, SP, #0x40
.text:00000000000021C0                 SUB             SP, SP, #0x1C0
.text:00000000000021C4                 MRS             X24, #3, c13, c0, #2
.text:00000000000021C8                 SUB             X25, X29, #-var_A8
.text:00000000000021CC                 LDR             X8, [X24,#0x28]
.text:00000000000021D0                 STR             X8, [X25,#0x60]
.text:00000000000021D4                 LDR             W8, [X1,#0x10]
.text:00000000000021D8                 CMP             W8, #1
.text:00000000000021DC                 B.LT            loc_22FC
.text:00000000000021E0                 LDR             X8, [X0]
.text:00000000000021E4                 MOV             X20, X4
.text:00000000000021E8                 MOV             X21, X3
.text:00000000000021EC                 MOV             X19, X2
.text:00000000000021F0                 MOV             X23, X1
.text:00000000000021F4                 MOV             X22, X0
.text:00000000000021F8                 CBZ             X8, loc_2304
.text:00000000000021FC loc_21FC                                ; CODE XREF: SOMXFLACD_Decode+230↓j
.text:00000000000021FC                                         ; SOMXFLACD_Decode+2A8↓j
.text:00000000000021FC                 SUB             X0, X29, #-var_A8
.text:0000000000002200                 MOV             W1, WZR
.text:0000000000002204                 MOV             W2, #0x60 ; '`'
.text:0000000000002208                 BL              .SEC_OSAL_Memset
.text:000000000000220C                 MOV             W2, #0x110
.text:0000000000002210                 ADD             X0, SP, #0x200+var_1B8
.text:0000000000002214                 MOV             W1, WZR
.text:0000000000002218                 BL              .SEC_OSAL_Memset
.text:000000000000221C                 ADD             X0, SP, #0x200+var_1D8
.text:0000000000002220                 MOV             W1, WZR
.text:0000000000002224                 MOV             W2, #0x20 ; ' '
.text:0000000000002228                 BL              .SEC_OSAL_Memset
.text:000000000000222C                 LDR             X8, [X23]
.text:0000000000002230                 SUB             X1, X29, #-var_A8
.text:0000000000002234                 LDR             W9, [X23,#0x10]
.text:0000000000002238                 ADD             X2, SP, #0x200+var_1B8
.text:000000000000223C                 LDR             W10, [X23,#0x18]
.text:0000000000002240                 ADD             X3, SP, #0x200+var_1D8
.text:0000000000002244                 STR             X8, [X25]
.text:0000000000002248                 STP             W9, WZR, [X29,#var_98]
.text:000000000000224C                 LDR             X8, [X19,#8]
.text:0000000000002250                 LDR             X0, [X22]
.text:0000000000002254                 STUR            W10, [X29,#var_90]
.text:0000000000002258                 STR             X8, [SP,#0x200+var_178]
.text:000000000000225C                 BL              .sflacd_decode
.text:0000000000002260                 CMN             W0, #9
.text:0000000000002264                 B.EQ            loc_22FC
.text:0000000000002268                 CMN             W0, #3
.text:000000000000226C                 B.EQ            loc_2390
.text:0000000000002270                 CBNZ            W0, loc_2398
.text:0000000000002274                 LDR             W8, [SP,#0x200+var_1BC]
.text:0000000000002278                 MOV             W0, WZR
.text:000000000000227C                 LDR             D0, [SP,#0x200+var_1D8]
.text:0000000000002280                 LDR             X9, [SP,#0x200+var_1D0]
.text:0000000000002284                 LDUR            X10, [SP,#0x200+var_1C4]
.text:0000000000002288                 STR             W8, [X21,#0x18]
.text:000000000000228C                 FMOV            W8, S0
.text:0000000000002290                 STR             D0, [X21]
.text:0000000000002294                 STP             X9, X10, [X21,#8]
.text:0000000000002298                 CMP             W8, #1
.text:000000000000229C                 B.NE            loc_23A8
.text:00000000000022A0                 LDR             W9, [X20]
.text:00000000000022A4                 LDR             W11, [SP,#0x200+var_F4]
.text:00000000000022A8                 LDR             W10, [SP,#0x200+var_198]
.text:00000000000022AC                 LDR             W8, [SP,#0x200+var_1B8]
.text:00000000000022B0                 LDR             W12, [SP,#0x200+var_F8]
.text:00000000000022B4                 ADD             W9, W9, #1
.text:00000000000022B8                 CMP             W11, #0x19
.text:00000000000022BC                 STR             W9, [X20]
.text:00000000000022C0                 STP             W8, W10, [X19]
.text:00000000000022C4                 STP             W12, W11, [X19,#0x18]
.text:00000000000022C8                 B.LT            loc_23A8
.text:00000000000022CC                 CBZ             W8, loc_23A8
.text:00000000000022D0                 LDR             X9, [SP,#0x200+var_178]
.text:00000000000022D4                 MOV             W10, #0x30000000
.text:00000000000022D8                 MOV             W0, WZR
.text:00000000000022DC loc_22DC                                ; CODE XREF: SOMXFLACD_Decode+14C↓j
.text:00000000000022DC                 LDR             S0, [X9]
.text:00000000000022E0                 FMOV            S1, W10
.text:00000000000022E4                 SUBS            W8, W8, #1
.text:00000000000022E8                 SCVTF           S0, S0
.text:00000000000022EC                 FMUL            S0, S0, S1
.text:00000000000022F0                 STR             S0, [X9],#4
.text:00000000000022F4                 B.NE            loc_22DC
.text:00000000000022F8                 B               loc_23A8
.text:00000000000022FC ; ---------------------------------------------------------------------------
.text:00000000000022FC loc_22FC                                ; CODE XREF: SOMXFLACD_Decode+34↑j
.text:00000000000022FC                                         ; SOMXFLACD_Decode+BC↑j
.text:00000000000022FC                 MOV             W0, #2
.text:0000000000002300                 B               loc_23A8
.text:0000000000002304 ; ---------------------------------------------------------------------------
.text:0000000000002304 loc_2304                                ; CODE XREF: SOMXFLACD_Decode+50↑j
.text:0000000000002304                 ADD             X0, SP, #0x200+var_1E8
.text:0000000000002308                 MOV             W1, WZR
.text:000000000000230C                 MOV             W2, #0x10
.text:0000000000002310                 BL              .SEC_OSAL_Memset
.text:0000000000002314                 LDR             W8, [X22,#0x4C]
.text:0000000000002318                 CBNZ            W8, loc_2340
.text:000000000000231C                 LDR             W8, [X23,#0x10]
.text:0000000000002320                 CMP             W8, #0x2A ; '*'
.text:0000000000002324                 B.NE            loc_2340
.text:0000000000002328                 LDR             X1, [X23]
.text:000000000000232C                 ADD             X0, X22, #0x20 ; ' '
.text:0000000000002330                 MOV             W2, #0x2A ; '*'
.text:0000000000002334                 BL              .SEC_OSAL_Memcpy
.text:0000000000002338                 MOV             W8, #1
.text:000000000000233C                 STR             W8, [X22,#0x4C]
.text:0000000000002340 loc_2340                                ; CODE XREF: SOMXFLACD_Decode+170↑j
.text:0000000000002340                                         ; SOMXFLACD_Decode+17C↑j
.text:0000000000002340                 LDR             W9, [X22,#0x1C]
.text:0000000000002344                 ADRP            X8, #qword_1110@PAGE
.text:0000000000002348                 ADRP            X1, #aSecFlacDec@PAGE ; "SEC_FLAC_DEC"
.text:000000000000234C                 ADRP            X2, #aSomxflacdDecod_0@PAGE ; "SOMXFLACD_Decode() init_dsc.use_normbit"...
.text:0000000000002350                 LDR             D0, [X8,#qword_1110@PAGEOFF]
.text:0000000000002354                 MOV             W8, #2
.text:0000000000002358                 CMP             W9, #4
.text:000000000000235C                 CSEL            W3, W9, W8, EQ
.text:0000000000002360                 ADD             X1, X1, #aSecFlacDec@PAGEOFF ; "SEC_FLAC_DEC"
.text:0000000000002364                 ADD             X2, X2, #aSomxflacdDecod_0@PAGEOFF ; "SOMXFLACD_Decode() init_dsc.use_normbit"...
.text:0000000000002368                 STR             D0, [SP,#0x200+var_1E8]
.text:000000000000236C                 MOV             W0, #3
.text:0000000000002370                 STP             W3, WZR, [SP,#0x200+var_1E0]
.text:0000000000002374                 BL              .__android_log_print
.text:0000000000002378                 ADD             X0, SP, #0x200+var_1E8
.text:000000000000237C                 ADD             X1, SP, #0x200+var_1EC
.text:0000000000002380                 BL              .sflacd_create
.text:0000000000002384                 LDR             W8, [SP,#0x200+var_1EC]
.text:0000000000002388                 STR             X0, [X22]
.text:000000000000238C                 CBZ             W8, loc_23D4
.text:0000000000002390 loc_2390                                ; CODE XREF: SOMXFLACD_Decode+C4↑j
.text:0000000000002390                 MOV             W0, #3
.text:0000000000002394                 B               loc_23A8
.text:0000000000002398 ; ---------------------------------------------------------------------------
.text:0000000000002398 loc_2398                                ; CODE XREF: SOMXFLACD_Decode+C8↑j
.text:0000000000002398                 LDR             X0, [X22]
.text:000000000000239C                 CBZ             X0, loc_23A4
.text:00000000000023A0                 BL              .sflacd_reset
.text:00000000000023A4 loc_23A4                                ; CODE XREF: SOMXFLACD_Decode+1F4↑j
.text:00000000000023A4                 MOV             W0, #1
.text:00000000000023A8 loc_23A8                                ; CODE XREF: SOMXFLACD_Decode+F4↑j
.text:00000000000023A8                                         ; SOMXFLACD_Decode+120↑j ...
.text:00000000000023A8                 LDR             X8, [X24,#0x28]
.text:00000000000023AC                 LDR             X9, [X25,#0x60]
.text:00000000000023B0                 CMP             X8, X9
.text:00000000000023B4                 B.NE            loc_2454
.text:00000000000023B8                 ADD             SP, SP, #0x1C0
.text:00000000000023BC                 LDP             X29, X30, [SP,#0x40+var_s0]
.text:00000000000023C0                 LDP             X20, X19, [SP,#0x40+var_10]
.text:00000000000023C4                 LDP             X22, X21, [SP,#0x40+var_20]
.text:00000000000023C8                 LDP             X24, X23, [SP,#0x40+var_30]
.text:00000000000023CC                 LDP             X28, X25, [SP+0x40+var_40],#0x50
.text:00000000000023D0                 RET
.text:00000000000023D4 ; ---------------------------------------------------------------------------
.text:00000000000023D4 loc_23D4                                ; CODE XREF: SOMXFLACD_Decode+1E4↑j
.text:00000000000023D4                 LDR             W8, [X22,#0x4C]
.text:00000000000023D8                 CBZ             W8, loc_21FC
.text:00000000000023DC                 SUB             X0, X29, #-var_A8
.text:00000000000023E0                 MOV             W1, WZR
.text:00000000000023E4                 MOV             W2, #0x60 ; '`'
.text:00000000000023E8                 BL              .SEC_OSAL_Memset
.text:00000000000023EC                 MOV             W2, #0x110
.text:00000000000023F0                 ADD             X0, SP, #0x200+var_1B8
.text:00000000000023F4                 MOV             W1, WZR
.text:00000000000023F8                 BL              .SEC_OSAL_Memset
.text:00000000000023FC                 ADD             X0, SP, #0x200+var_1D8
.text:0000000000002400                 MOV             W1, WZR
.text:0000000000002404                 MOV             W2, #0x20 ; ' '
.text:0000000000002408                 BL              .SEC_OSAL_Memset
.text:000000000000240C                 MOV             X8, X22
.text:0000000000002410                 ADRP            X9, #qword_1118@PAGE
.text:0000000000002414                 SUB             X1, X29, #-var_A8
.text:0000000000002418                 LDR             X0, [X8],#0x20
.text:000000000000241C                 LDR             D0, [X9,#qword_1118@PAGEOFF]
.text:0000000000002420                 ADD             X2, SP, #0x200+var_1B8
.text:0000000000002424                 LDR             W9, [X23,#0x18]
.text:0000000000002428                 ADD             X3, SP, #0x200+var_1D8
.text:000000000000242C                 STR             X8, [X25]
.text:0000000000002430                 STR             D0, [X25,#0x10]
.text:0000000000002434                 STUR            W9, [X29,#var_90]
.text:0000000000002438                 BL              .sflacd_decode
.text:000000000000243C                 STR             WZR, [X21]
.text:0000000000002440                 LDR             W8, [X23,#0x10]
.text:0000000000002444                 CMP             W8, #0x2A ; '*'
.text:0000000000002448                 CSEL            W8, W8, WZR, EQ
.text:000000000000244C                 STR             W8, [X21,#4]
.text:0000000000002450                 B               loc_21FC
.text:0000000000002454 ; ---------------------------------------------------------------------------
.text:0000000000002454 loc_2454                                ; CODE XREF: SOMXFLACD_Decode+20C↑j
.text:0000000000002454                 BL              .__stack_chk_fail
.text:0000000000002454 ; } // starts at 21A8
.text:0000000000002454 ; End of function SOMXFLACD_Decode
.text:0000000000002458 ; =============== S U B R O U T I N E =======================================
.text:0000000000002458 ; Attributes: bp-based frame
.text:0000000000002458                 EXPORT SOMXFLACD_Reset
.text:0000000000002458 SOMXFLACD_Reset                         ; CODE XREF: .SOMXFLACD_Reset+C↓j
.text:0000000000002458                                         ; DATA XREF: LOAD:0000000000000540↑o ...
.text:0000000000002458 var_10          = -0x10
.text:0000000000002458 var_s0          =  0
.text:0000000000002458 ; __unwind {
.text:0000000000002458                 STR             X19, [SP,#-0x10+var_10]!
.text:000000000000245C                 STP             X29, X30, [SP,#0x10+var_s0]
.text:0000000000002460                 ADD             X29, SP, #0x10
.text:0000000000002464                 CBZ             X0, loc_247C
.text:0000000000002468                 LDR             X0, [X0]
.text:000000000000246C                 CBZ             X0, loc_24D8
.text:0000000000002470                 BL              .sflacd_reset
.text:0000000000002474                 MOV             W0, WZR
.text:0000000000002478                 B               loc_24D8
.text:000000000000247C ; ---------------------------------------------------------------------------
.text:000000000000247C loc_247C                                ; CODE XREF: SOMXFLACD_Reset+C↑j
.text:000000000000247C                 ADRP            X19, #aVendorSamsungF@PAGE ; "vendor/samsung/frameworks/avcodec/mm_pr"...
.text:0000000000002480                 ADD             X19, X19, #aVendorSamsungF@PAGEOFF ; "vendor/samsung/frameworks/avcodec/mm_pr"...
.text:0000000000002484                 MOV             W1, #0x2F ; '/'
.text:0000000000002488                 MOV             W2, #0x53 ; 'S'
.text:000000000000248C                 MOV             X0, X19
.text:0000000000002490                 BL              .__strrchr_chk
.text:0000000000002494                 CBZ             X0, loc_24B0
.text:0000000000002498                 ADRP            X0, #aVendorSamsungF@PAGE ; "vendor/samsung/frameworks/avcodec/mm_pr"...
.text:000000000000249C                 ADD             X0, X0, #aVendorSamsungF@PAGEOFF ; "vendor/samsung/frameworks/avcodec/mm_pr"...
.text:00000000000024A0                 MOV             W1, #0x2F ; '/'
.text:00000000000024A4                 MOV             W2, #0x53 ; 'S'
.text:00000000000024A8                 BL              .__strrchr_chk
.text:00000000000024AC                 ADD             X19, X0, #1
.text:00000000000024B0 loc_24B0                                ; CODE XREF: SOMXFLACD_Reset+3C↑j
.text:00000000000024B0                 ADRP            X1, #aSecFlacDec@PAGE ; "SEC_FLAC_DEC"
.text:00000000000024B4                 ADRP            X2, #aSDAssertionPde@PAGE ; "%s(%d): assertion: 'pDec' failed"
.text:00000000000024B8                 ADD             X1, X1, #aSecFlacDec@PAGEOFF ; "SEC_FLAC_DEC"
.text:00000000000024BC                 ADD             X2, X2, #aSDAssertionPde@PAGEOFF ; "%s(%d): assertion: 'pDec' failed"
.text:00000000000024C0                 MOV             W4, #0x12B
.text:00000000000024C4                 MOV             W0, #3
.text:00000000000024C8                 MOV             X3, X19
.text:00000000000024CC                 BL              ._SEC_OSAL_Log
.text:00000000000024D0                 MOV             W0, #0x80001005
.text:00000000000024D8 loc_24D8                                ; CODE XREF: SOMXFLACD_Reset+14↑j
.text:00000000000024D8                                         ; SOMXFLACD_Reset+20↑j
.text:00000000000024D8                 LDP             X29, X30, [SP,#0x10+var_s0]
.text:00000000000024DC                 LDR             X19, [SP+0x10+var_10],#0x20
.text:00000000000024E0                 RET
.text:00000000000024E0 ; } // starts at 2458
.text:00000000000024E0 ; End of function SOMXFLACD_Reset
.text:00000000000024E0 ; ---------------------------------------------------------------------------
.text:00000000000024E4                 ALIGN 8
.text:00000000000024E8 ; =============== S U B R O U T I N E =======================================
.text:00000000000024E8                 EXPORT SOMXFLACD_SetParameter
.text:00000000000024E8 SOMXFLACD_SetParameter                  ; CODE XREF: .SOMXFLACD_SetParameter+C↓j
.text:00000000000024E8                                         ; DATA XREF: LOAD:0000000000000660↑o ...
.text:00000000000024E8 var_20          = -0x20
.text:00000000000024E8 var_10          = -0x10
.text:00000000000024E8 ; __unwind {
.text:00000000000024E8                 CBZ             X0, loc_252C
.text:00000000000024EC                 MOV             W8, #0x7F011000
.text:00000000000024F4                 CMP             W1, W8
.text:00000000000024F8                 B.EQ            loc_25A4
.text:00000000000024FC                 MOV             W8, #0x7F01000A
.text:0000000000002504                 CMP             W1, W8
.text:0000000000002508                 B.EQ            loc_25B4
.text:000000000000250C                 MOV             W8, #0x7F010008
.text:0000000000002514                 CMP             W1, W8
.text:0000000000002518                 B.NE            loc_25CC
.text:000000000000251C                 LDR             W9, [X2]
.text:0000000000002520                 STR             W9, [X0,#8]
.text:0000000000002524                 MOV             W0, WZR
.text:0000000000002528                 RET
.text:000000000000252C ; ---------------------------------------------------------------------------
.text:000000000000252C loc_252C                                ; CODE XREF: SOMXFLACD_SetParameter↑j
.text:000000000000252C                 STR             X19, [SP,#var_20]!
.text:0000000000002530                 STP             X29, X30, [SP,#0x20+var_10]
.text:0000000000002534                 ADD             X29, SP, #0x20+var_10
.text:0000000000002538                 ADRP            X19, #aVendorSamsungF@PAGE ; "vendor/samsung/frameworks/avcodec/mm_pr"...
.text:000000000000253C                 ADD             X19, X19, #aVendorSamsungF@PAGEOFF ; "vendor/samsung/frameworks/avcodec/mm_pr"...
.text:0000000000002540                 MOV             W1, #0x2F ; '/'
.text:0000000000002544                 MOV             W2, #0x53 ; 'S'
.text:0000000000002548                 MOV             X0, X19
.text:000000000000254C                 BL              .__strrchr_chk
.text:0000000000002550                 CBZ             X0, loc_256C
.text:0000000000002554                 ADRP            X0, #aVendorSamsungF@PAGE ; "vendor/samsung/frameworks/avcodec/mm_pr"...
.text:0000000000002558                 ADD             X0, X0, #aVendorSamsungF@PAGEOFF ; "vendor/samsung/frameworks/avcodec/mm_pr"...
.text:000000000000255C                 MOV             W1, #0x2F ; '/'
.text:0000000000002560                 MOV             W2, #0x53 ; 'S'
.text:0000000000002564                 BL              .__strrchr_chk
.text:0000000000002568                 ADD             X19, X0, #1
.text:000000000000256C loc_256C                                ; CODE XREF: SOMXFLACD_SetParameter+68↑j
.text:000000000000256C                 ADRP            X1, #aSecFlacDec@PAGE ; "SEC_FLAC_DEC"
.text:0000000000002570                 ADRP            X2, #aSDAssertionPde@PAGE ; "%s(%d): assertion: 'pDec' failed"
.text:0000000000002574                 ADD             X1, X1, #aSecFlacDec@PAGEOFF ; "SEC_FLAC_DEC"
.text:0000000000002578                 ADD             X2, X2, #aSDAssertionPde@PAGEOFF ; "%s(%d): assertion: 'pDec' failed"
.text:000000000000257C                 MOV             W4, #0x13F
.text:0000000000002580                 MOV             W0, #3
.text:0000000000002584                 MOV             X3, X19
.text:0000000000002588                 BL              ._SEC_OSAL_Log
.text:000000000000258C                 LDP             X29, X30, [SP,#0x20+var_10]
.text:0000000000002590                 MOV             W8, #0x80001005
.text:0000000000002598                 LDR             X19, [SP+0x20+var_20],#0x20
.text:000000000000259C                 MOV             W0, W8
.text:00000000000025A0                 RET
.text:00000000000025A4 ; ---------------------------------------------------------------------------
.text:00000000000025A4 loc_25A4                                ; CODE XREF: SOMXFLACD_SetParameter+10↑j
.text:00000000000025A4                 LDR             W9, [X2]
.text:00000000000025A8                 STR             W9, [X0,#0x1C]
.text:00000000000025AC                 MOV             W0, WZR
.text:00000000000025B0                 RET
.text:00000000000025B4 ; ---------------------------------------------------------------------------
.text:00000000000025B4 loc_25B4                                ; CODE XREF: SOMXFLACD_SetParameter+20↑j
.text:00000000000025B4                 LDR             W8, [X0,#0x14]
.text:00000000000025B8                 LDR             W9, [X2]
.text:00000000000025BC                 CMP             W8, W9
.text:00000000000025C0                 B.NE            loc_25D4
.text:00000000000025C4                 MOV             W0, WZR
.text:00000000000025C8                 RET
.text:00000000000025CC ; ---------------------------------------------------------------------------
.text:00000000000025CC loc_25CC                                ; CODE XREF: SOMXFLACD_SetParameter+30↑j
.text:00000000000025CC                 MOV             W0, WZR
.text:00000000000025D0                 RET
.text:00000000000025D4 ; ---------------------------------------------------------------------------
.text:00000000000025D4 loc_25D4                                ; CODE XREF: SOMXFLACD_SetParameter+D8↑j
.text:00000000000025D4                 STR             W9, [X0,#0x14]
.text:00000000000025D8                 MOV             W0, WZR
.text:00000000000025DC                 RET
.text:00000000000025DC ; } // starts at 24E8
.text:00000000000025DC ; End of function SOMXFLACD_SetParameter
.text:00000000000025E0 ; =============== S U B R O U T I N E =======================================
.text:00000000000025E0                 EXPORT SOMXFLACD_GetParameter
.text:00000000000025E0 SOMXFLACD_GetParameter                  ; CODE XREF: .SOMXFLACD_GetParameter+C↓j
.text:00000000000025E0                                         ; DATA XREF: LOAD:0000000000000648↑o ...
.text:00000000000025E0 var_20          = -0x20
.text:00000000000025E0 var_10          = -0x10
.text:00000000000025E0 ; __unwind {
.text:00000000000025E0                 CBZ             X0, loc_261C
.text:00000000000025E4                 MOV             W8, #0x7F011000
.text:00000000000025EC                 CMP             W1, W8
.text:00000000000025F0                 B.EQ            loc_2690
.text:00000000000025F4                 MOV             W8, #0x7F01000A
.text:00000000000025FC                 CMP             W1, W8
.text:0000000000002600                 B.EQ            loc_2698
.text:0000000000002604                 MOV             W8, #0x7F010008
.text:000000000000260C                 CMP             W1, W8
.text:0000000000002610                 B.NE            loc_26A8
.text:0000000000002614                 LDR             W8, [X0,#8]
.text:0000000000002618                 B               loc_269C
.text:000000000000261C ; ---------------------------------------------------------------------------
.text:000000000000261C loc_261C                                ; CODE XREF: SOMXFLACD_GetParameter↑j
.text:000000000000261C                 STR             X19, [SP,#var_20]!
.text:0000000000002620                 STP             X29, X30, [SP,#0x20+var_10]
.text:0000000000002624                 ADD             X29, SP, #0x20+var_10
.text:0000000000002628                 ADRP            X19, #aVendorSamsungF@PAGE ; "vendor/samsung/frameworks/avcodec/mm_pr"...
.text:000000000000262C                 ADD             X19, X19, #aVendorSamsungF@PAGEOFF ; "vendor/samsung/frameworks/avcodec/mm_pr"...
.text:0000000000002630                 MOV             W1, #0x2F ; '/'
.text:0000000000002634                 MOV             W2, #0x53 ; 'S'
.text:0000000000002638                 MOV             X0, X19
.text:000000000000263C                 BL              .__strrchr_chk
.text:0000000000002640                 CBZ             X0, loc_265C
.text:0000000000002644                 ADRP            X0, #aVendorSamsungF@PAGE ; "vendor/samsung/frameworks/avcodec/mm_pr"...
.text:0000000000002648                 ADD             X0, X0, #aVendorSamsungF@PAGEOFF ; "vendor/samsung/frameworks/avcodec/mm_pr"...
.text:000000000000264C                 MOV             W1, #0x2F ; '/'
.text:0000000000002650                 MOV             W2, #0x53 ; 'S'
.text:0000000000002654                 BL              .__strrchr_chk
.text:0000000000002658                 ADD             X19, X0, #1
.text:000000000000265C loc_265C                                ; CODE XREF: SOMXFLACD_GetParameter+60↑j
.text:000000000000265C                 ADRP            X1, #aSecFlacDec@PAGE ; "SEC_FLAC_DEC"
.text:0000000000002660                 ADRP            X2, #aSDAssertionPde@PAGE ; "%s(%d): assertion: 'pDec' failed"
.text:0000000000002664                 ADD             X1, X1, #aSecFlacDec@PAGEOFF ; "SEC_FLAC_DEC"
.text:0000000000002668                 ADD             X2, X2, #aSDAssertionPde@PAGEOFF ; "%s(%d): assertion: 'pDec' failed"
.text:000000000000266C                 MOV             W4, #0x173
.text:0000000000002670                 MOV             W0, #3
.text:0000000000002674                 MOV             X3, X19
.text:0000000000002678                 BL              ._SEC_OSAL_Log
.text:000000000000267C                 LDP             X29, X30, [SP,#0x20+var_10]
.text:0000000000002680                 MOV             W0, #0x80001005
.text:0000000000002688                 LDR             X19, [SP+0x20+var_20],#0x20
.text:000000000000268C                 RET
.text:0000000000002690 ; ---------------------------------------------------------------------------
.text:0000000000002690 loc_2690                                ; CODE XREF: SOMXFLACD_GetParameter+10↑j
.text:0000000000002690                 LDR             W8, [X0,#0x1C]
.text:0000000000002694                 B               loc_269C
.text:0000000000002698 ; ---------------------------------------------------------------------------
.text:0000000000002698 loc_2698                                ; CODE XREF: SOMXFLACD_GetParameter+20↑j
.text:0000000000002698                 LDR             W8, [X0,#0xC]
.text:000000000000269C loc_269C                                ; CODE XREF: SOMXFLACD_GetParameter+38↑j
.text:000000000000269C                                         ; SOMXFLACD_GetParameter+B4↑j
.text:000000000000269C                 MOV             W0, WZR
.text:00000000000026A0                 STR             W8, [X2]
.text:00000000000026A4                 RET
.text:00000000000026A8 ; ---------------------------------------------------------------------------
.text:00000000000026A8 loc_26A8                                ; CODE XREF: SOMXFLACD_GetParameter+30↑j
.text:00000000000026A8                 MOV             W0, WZR
.text:00000000000026AC                 RET
.text:00000000000026AC ; } // starts at 25E0
.text:00000000000026AC ; End of function SOMXFLACD_GetParameter
.text:00000000000026B0 ; =============== S U B R O U T I N E =======================================
.text:00000000000026B0 ; Attributes: bp-based frame
.text:00000000000026B0                 EXPORT SOMXFLACD_COMP_GetParameter
.text:00000000000026B0 SOMXFLACD_COMP_GetParameter             ; DATA XREF: LOAD:0000000000000558↑o
.text:00000000000026B0                                         ; .got:SOMXFLACD_COMP_GetParameter_ptr↓o
.text:00000000000026B0 var_30          = -0x30
.text:00000000000026B0 var_20          = -0x20
.text:00000000000026B0 var_10          = -0x10
.text:00000000000026B0 var_s0          =  0
.text:00000000000026B0 ; __unwind {
.text:00000000000026B0                 STR             X23, [SP,#-0x10+var_30]!
.text:00000000000026B4                 STP             X22, X21, [SP,#0x30+var_20]
.text:00000000000026B8                 STP             X20, X19, [SP,#0x30+var_10]
.text:00000000000026BC                 STP             X29, X30, [SP,#0x30+var_s0]
.text:00000000000026C0                 ADD             X29, SP, #0x30
.text:00000000000026C4                 CBZ             X0, loc_2734
.text:00000000000026C8                 MOV             X20, X2
.text:00000000000026CC                 CBZ             X2, loc_2734
.text:00000000000026D0                 MOV             W22, W1
.text:00000000000026D4                 MOV             W1, #0xA8
.text:00000000000026D8                 MOV             X23, X0
.text:00000000000026DC                 BL              .SEC_OMX_Check_SizeVersion
.text:00000000000026E0                 CBZ             W0, loc_27A8
.text:00000000000026E4                 ADRP            X20, #aVendorSamsungF_0@PAGE ; "vendor/samsung/frameworks/avcodec/mm_pr"...
.text:00000000000026E8                 ADD             X20, X20, #aVendorSamsungF_0@PAGEOFF ; "vendor/samsung/frameworks/avcodec/mm_pr"...
.text:00000000000026EC                 MOV             W19, W0
.text:00000000000026F0                 MOV             W1, #0x2F ; '/'
.text:00000000000026F4                 MOV             W2, #0x58 ; 'X'
.text:00000000000026F8                 MOV             X0, X20
.text:00000000000026FC                 BL              .__strrchr_chk
.text:0000000000002700                 CBZ             X0, loc_271C
.text:0000000000002704                 ADRP            X0, #aVendorSamsungF_0@PAGE ; "vendor/samsung/frameworks/avcodec/mm_pr"...
.text:0000000000002708                 ADD             X0, X0, #aVendorSamsungF_0@PAGEOFF ; "vendor/samsung/frameworks/avcodec/mm_pr"...
.text:000000000000270C                 MOV             W1, #0x2F ; '/'
.text:0000000000002710                 MOV             W2, #0x58 ; 'X'
.text:0000000000002714                 BL              .__strrchr_chk
.text:0000000000002718                 ADD             X20, X0, #1
.text:000000000000271C loc_271C                                ; CODE XREF: SOMXFLACD_COMP_GetParameter+50↑j
.text:000000000000271C                 ADRP            X1, #aSecFlacDec@PAGE ; "SEC_FLAC_DEC"
.text:0000000000002720                 ADRP            X2, #aSDAssertionRet@PAGE ; "%s(%d): assertion: 'ret == OMX_ErrorNon"...
.text:0000000000002724                 ADD             X1, X1, #aSecFlacDec@PAGEOFF ; "SEC_FLAC_DEC"
.text:0000000000002728                 ADD             X2, X2, #aSDAssertionRet@PAGEOFF ; "%s(%d): assertion: 'ret == OMX_ErrorNon"...
.text:000000000000272C                 MOV             W4, #0x52 ; 'R'
.text:0000000000002730                 B               loc_2784
.text:0000000000002734 ; ---------------------------------------------------------------------------
.text:0000000000002734 loc_2734                                ; CODE XREF: SOMXFLACD_COMP_GetParameter+14↑j
.text:0000000000002734                                         ; SOMXFLACD_COMP_GetParameter+1C↑j
.text:0000000000002734                 ADRP            X20, #aVendorSamsungF_0@PAGE ; "vendor/samsung/frameworks/avcodec/mm_pr"...
.text:0000000000002738                 ADD             X20, X20, #aVendorSamsungF_0@PAGEOFF ; "vendor/samsung/frameworks/avcodec/mm_pr"...
.text:000000000000273C                 MOV             W1, #0x2F ; '/'
.text:0000000000002740                 MOV             W2, #0x58 ; 'X'
.text:0000000000002744                 MOV             X0, X20
.text:0000000000002748                 BL              .__strrchr_chk
.text:000000000000274C                 CBZ             X0, loc_2768
.text:0000000000002750                 ADRP            X0, #aVendorSamsungF_0@PAGE ; "vendor/samsung/frameworks/avcodec/mm_pr"...
.text:0000000000002754                 ADD             X0, X0, #aVendorSamsungF_0@PAGEOFF ; "vendor/samsung/frameworks/avcodec/mm_pr"...
.text:0000000000002758                 MOV             W1, #0x2F ; '/'
.text:000000000000275C                 MOV             W2, #0x58 ; 'X'
.text:0000000000002760                 BL              .__strrchr_chk
.text:0000000000002764                 ADD             X20, X0, #1
.text:0000000000002768 loc_2768                                ; CODE XREF: SOMXFLACD_COMP_GetParameter+9C↑j
.text:0000000000002768                 MOV             W19, #0x1005
.text:000000000000276C                 ADRP            X1, #aSecFlacDec@PAGE ; "SEC_FLAC_DEC"
.text:0000000000002770                 ADRP            X2, #aSDAssertionPom@PAGE ; "%s(%d): assertion: 'pOMXComponent && pC"...
.text:0000000000002774                 MOVK            W19, #0x8000,LSL#16
.text:0000000000002778                 ADD             X1, X1, #aSecFlacDec@PAGEOFF ; "SEC_FLAC_DEC"
.text:000000000000277C                 ADD             X2, X2, #aSDAssertionPom@PAGEOFF ; "%s(%d): assertion: 'pOMXComponent && pC"...
.text:0000000000002780                 MOV             W4, #0x4E ; 'N'
.text:0000000000002784 loc_2784                                ; CODE XREF: SOMXFLACD_COMP_GetParameter+80↑j
.text:0000000000002784                                         ; SOMXFLACD_COMP_GetParameter+1AC↓j ...
.text:0000000000002784                 MOV             W0, #3
.text:0000000000002788                 MOV             X3, X20
.text:000000000000278C                 BL              ._SEC_OSAL_Log
.text:0000000000002790 loc_2790                                ; CODE XREF: SOMXFLACD_COMP_GetParameter+25C↓j
.text:0000000000002790                                         ; SOMXFLACD_COMP_GetParameter+400↓j ...
.text:0000000000002790                 MOV             W0, W19
.text:0000000000002794                 LDP             X29, X30, [SP,#0x30+var_s0]
.text:0000000000002798                 LDP             X20, X19, [SP,#0x30+var_10]
.text:000000000000279C                 LDP             X22, X21, [SP,#0x30+var_20]
.text:00000000000027A0                 LDR             X23, [SP+0x30+var_30],#0x40
.text:00000000000027A4                 RET
.text:00000000000027A8 ; ---------------------------------------------------------------------------
.text:00000000000027A8 loc_27A8                                ; CODE XREF: SOMXFLACD_COMP_GetParameter+30↑j
.text:00000000000027A8                 LDR             X8, [X23,#8]
.text:00000000000027AC                 CBZ             X8, loc_2860
.text:00000000000027B0                 LDR             W9, [X8,#0x10]
.text:00000000000027B4                 CBZ             W9, loc_28B4
.text:00000000000027B8                 LDR             X21, [X8,#0x40]
.text:00000000000027BC                 CBZ             X21, loc_2910
.text:00000000000027C0                 MOV             W8, #0x7F010007
.text:00000000000027C8                 CMP             W22, W8
.text:00000000000027CC                 B.GT            loc_2964
.text:00000000000027D0                 MOV             W8, #0x1000017
.text:00000000000027D8                 CMP             W22, W8
.text:00000000000027DC                 B.EQ            loc_29B0
.text:00000000000027E0                 MOV             W8, #0x4000002
.text:00000000000027E8                 CMP             W22, W8
.text:00000000000027EC                 B.EQ            loc_2A10
.text:00000000000027F0                 MOV             W8, #0x400001C
.text:00000000000027F8                 CMP             W22, W8
.text:00000000000027FC                 B.NE            loc_2AB4
.text:0000000000002800                 MOV             X0, X20
.text:0000000000002804                 MOV             W1, #0x18
.text:0000000000002808                 BL              .SEC_OMX_Check_SizeVersion
.text:000000000000280C                 CBZ             W0, loc_2AD4
.text:0000000000002810                 ADRP            X20, #aVendorSamsungF_0@PAGE ; "vendor/samsung/frameworks/avcodec/mm_pr"...
.text:0000000000002814                 ADD             X20, X20, #aVendorSamsungF_0@PAGEOFF ; "vendor/samsung/frameworks/avcodec/mm_pr"...
.text:0000000000002818                 MOV             W19, W0
.text:000000000000281C                 MOV             W1, #0x2F ; '/'
.text:0000000000002820                 MOV             W2, #0x58 ; 'X'
.text:0000000000002824                 MOV             X0, X20
.text:0000000000002828                 BL              .__strrchr_chk
.text:000000000000282C                 CBZ             X0, loc_2848
.text:0000000000002830                 ADRP            X0, #aVendorSamsungF_0@PAGE ; "vendor/samsung/frameworks/avcodec/mm_pr"...
.text:0000000000002834                 ADD             X0, X0, #aVendorSamsungF_0@PAGEOFF ; "vendor/samsung/frameworks/avcodec/mm_pr"...
.text:0000000000002838                 MOV             W1, #0x2F ; '/'
.text:000000000000283C                 MOV             W2, #0x58 ; 'X'
.text:0000000000002840                 BL              .__strrchr_chk
.text:0000000000002844                 ADD             X20, X0, #1
.text:0000000000002848 loc_2848                                ; CODE XREF: SOMXFLACD_COMP_GetParameter+17C↑j
.text:0000000000002848                 ADRP            X1, #aSecFlacDec@PAGE ; "SEC_FLAC_DEC"
.text:000000000000284C                 ADRP            X2, #aSDAssertionRet@PAGE ; "%s(%d): assertion: 'ret == OMX_ErrorNon"...
.text:0000000000002850                 ADD             X1, X1, #aSecFlacDec@PAGEOFF ; "SEC_FLAC_DEC"
.text:0000000000002854                 ADD             X2, X2, #aSDAssertionRet@PAGEOFF ; "%s(%d): assertion: 'ret == OMX_ErrorNon"...
.text:0000000000002858                 MOV             W4, #0x79 ; 'y'
.text:000000000000285C                 B               loc_2784
.text:0000000000002860 ; ---------------------------------------------------------------------------
.text:0000000000002860 loc_2860                                ; CODE XREF: SOMXFLACD_COMP_GetParameter+FC↑j
.text:0000000000002860                 ADRP            X20, #aVendorSamsungF_0@PAGE ; "vendor/samsung/frameworks/avcodec/mm_pr"...
.text:0000000000002864                 ADD             X20, X20, #aVendorSamsungF_0@PAGEOFF ; "vendor/samsung/frameworks/avcodec/mm_pr"...
.text:0000000000002868                 MOV             W1, #0x2F ; '/'
.text:000000000000286C                 MOV             W2, #0x58 ; 'X'
.text:0000000000002870                 MOV             X0, X20
.text:0000000000002874                 BL              .__strrchr_chk
.text:0000000000002878                 CBZ             X0, loc_2894
.text:000000000000287C                 ADRP            X0, #aVendorSamsungF_0@PAGE ; "vendor/samsung/frameworks/avcodec/mm_pr"...
.text:0000000000002880                 ADD             X0, X0, #aVendorSamsungF_0@PAGEOFF ; "vendor/samsung/frameworks/avcodec/mm_pr"...
.text:0000000000002884                 MOV             W1, #0x2F ; '/'
.text:0000000000002888                 MOV             W2, #0x58 ; 'X'
.text:000000000000288C                 BL              .__strrchr_chk
.text:0000000000002890                 ADD             X20, X0, #1
.text:0000000000002894 loc_2894                                ; CODE XREF: SOMXFLACD_COMP_GetParameter+1C8↑j
.text:0000000000002894                 MOV             W19, #0x1005
.text:0000000000002898                 ADRP            X1, #aSecFlacDec@PAGE ; "SEC_FLAC_DEC"
.text:000000000000289C                 ADRP            X2, #aSDAssertionPom_0@PAGE ; "%s(%d): assertion: 'pOMXComponent->pCom"...
.text:00000000000028A0                 MOVK            W19, #0x8000,LSL#16
.text:00000000000028A4                 ADD             X1, X1, #aSecFlacDec@PAGEOFF ; "SEC_FLAC_DEC"
.text:00000000000028A8                 ADD             X2, X2, #aSDAssertionPom_0@PAGEOFF ; "%s(%d): assertion: 'pOMXComponent->pCom"...
.text:00000000000028AC                 MOV             W4, #0x54 ; 'T'
.text:00000000000028B0                 B               loc_2784
.text:00000000000028B4 ; ---------------------------------------------------------------------------
.text:00000000000028B4 loc_28B4                                ; CODE XREF: SOMXFLACD_COMP_GetParameter+104↑j
.text:00000000000028B4                 ADRP            X19, #aVendorSamsungF_0@PAGE ; "vendor/samsung/frameworks/avcodec/mm_pr"...
.text:00000000000028B8                 ADD             X19, X19, #aVendorSamsungF_0@PAGEOFF ; "vendor/samsung/frameworks/avcodec/mm_pr"...
.text:00000000000028BC                 MOV             W1, #0x2F ; '/'
.text:00000000000028C0                 MOV             W2, #0x58 ; 'X'
.text:00000000000028C4                 MOV             X0, X19
.text:00000000000028C8                 BL              .__strrchr_chk
.text:00000000000028CC                 CBZ             X0, loc_28E8
.text:00000000000028D0                 ADRP            X0, #aVendorSamsungF_0@PAGE ; "vendor/samsung/frameworks/avcodec/mm_pr"...
.text:00000000000028D4                 ADD             X0, X0, #aVendorSamsungF_0@PAGEOFF ; "vendor/samsung/frameworks/avcodec/mm_pr"...
.text:00000000000028D8                 MOV             W1, #0x2F ; '/'
.text:00000000000028DC                 MOV             W2, #0x58 ; 'X'
.text:00000000000028E0                 BL              .__strrchr_chk
.text:00000000000028E4                 ADD             X19, X0, #1
.text:00000000000028E8 loc_28E8                                ; CODE XREF: SOMXFLACD_COMP_GetParameter+21C↑j
.text:00000000000028E8                 ADRP            X1, #aSecFlacDec@PAGE ; "SEC_FLAC_DEC"
.text:00000000000028EC                 ADRP            X2, #aSDAssertionPse@PAGE ; "%s(%d): assertion: 'pSECComponent->curr"...
.text:00000000000028F0                 ADD             X1, X1, #aSecFlacDec@PAGEOFF ; "SEC_FLAC_DEC"
.text:00000000000028F4                 ADD             X2, X2, #aSDAssertionPse@PAGEOFF ; "%s(%d): assertion: 'pSECComponent->curr"...
.text:00000000000028F8                 MOV             W4, #0x57 ; 'W'
.text:00000000000028FC                 MOV             W0, #3
.text:0000000000002900                 MOV             X3, X19
.text:0000000000002904                 BL              ._SEC_OSAL_Log
.text:0000000000002908                 MOV             W19, WZR
.text:000000000000290C                 B               loc_2790
.text:0000000000002910 ; ---------------------------------------------------------------------------
.text:0000000000002910 loc_2910                                ; CODE XREF: SOMXFLACD_COMP_GetParameter+10C↑j
.text:0000000000002910                 ADRP            X20, #aVendorSamsungF_0@PAGE ; "vendor/samsung/frameworks/avcodec/mm_pr"...
.text:0000000000002914                 ADD             X20, X20, #aVendorSamsungF_0@PAGEOFF ; "vendor/samsung/frameworks/avcodec/mm_pr"...
.text:0000000000002918                 MOV             W1, #0x2F ; '/'
.text:000000000000291C                 MOV             W2, #0x58 ; 'X'
.text:0000000000002920                 MOV             X0, X20
.text:0000000000002924                 BL              .__strrchr_chk
.text:0000000000002928                 CBZ             X0, loc_2944
.text:000000000000292C                 ADRP            X0, #aVendorSamsungF_0@PAGE ; "vendor/samsung/frameworks/avcodec/mm_pr"...
.text:0000000000002930                 ADD             X0, X0, #aVendorSamsungF_0@PAGEOFF ; "vendor/samsung/frameworks/avcodec/mm_pr"...
.text:0000000000002934                 MOV             W1, #0x2F ; '/'
.text:0000000000002938                 MOV             W2, #0x58 ; 'X'
.text:000000000000293C                 BL              .__strrchr_chk
.text:0000000000002940                 ADD             X20, X0, #1
.text:0000000000002944 loc_2944                                ; CODE XREF: SOMXFLACD_COMP_GetParameter+278↑j
.text:0000000000002944                 MOV             W19, #0x1005
.text:0000000000002948                 ADRP            X1, #aSecFlacDec@PAGE ; "SEC_FLAC_DEC"
.text:000000000000294C                 ADRP            X2, #aSDAssertionPfl@PAGE ; "%s(%d): assertion: 'pFlacDec' failed"
.text:0000000000002950                 MOVK            W19, #0x8000,LSL#16
.text:0000000000002954                 ADD             X1, X1, #aSecFlacDec@PAGEOFF ; "SEC_FLAC_DEC"
.text:0000000000002958                 ADD             X2, X2, #aSDAssertionPfl@PAGEOFF ; "%s(%d): assertion: 'pFlacDec' failed"
.text:000000000000295C                 MOV             W4, #0x5A ; 'Z'
.text:0000000000002960                 B               loc_2784
.text:0000000000002964 ; ---------------------------------------------------------------------------
.text:0000000000002964 loc_2964                                ; CODE XREF: SOMXFLACD_COMP_GetParameter+11C↑j
.text:0000000000002964                 MOV             W8, #0x7F010008
.text:000000000000296C                 CMP             W22, W8
.text:0000000000002970                 B.EQ            loc_2A70
.text:0000000000002974                 MOV             W9, #0x7F01000A
.text:000000000000297C                 CMP             W22, W9
.text:0000000000002980                 B.EQ            loc_2A90
.text:0000000000002984                 MOV             W9, #0x7F011000
.text:000000000000298C                 CMP             W22, W9
.text:0000000000002990                 B.NE            loc_2AB4
.text:0000000000002994                 LDR             X0, [X21,#0x80]
.text:0000000000002998                 CBZ             X0, loc_29A8
.text:000000000000299C                 ADD             X2, X21, #0x94
.text:00000000000029A0                 ADD             W1, W8, #0xFF8
.text:00000000000029A4                 BL              .SOMXFLACD_GetParameter
.text:00000000000029A8 loc_29A8                                ; CODE XREF: SOMXFLACD_COMP_GetParameter+2E8↑j
.text:00000000000029A8                 LDR             W8, [X21,#0x94]
.text:00000000000029AC                 B               loc_2AA8
.text:00000000000029B0 ; ---------------------------------------------------------------------------
.text:00000000000029B0 loc_29B0                                ; CODE XREF: SOMXFLACD_COMP_GetParameter+12C↑j
.text:00000000000029B0                 MOV             W1, #0x88
.text:00000000000029B4                 MOV             X0, X20
.text:00000000000029B8                 BL              .SEC_OMX_Check_SizeVersion
.text:00000000000029BC                 MOV             W19, W0
.text:00000000000029C0                 CBZ             W0, loc_2B28
.text:00000000000029C4                 ADRP            X20, #aVendorSamsungF_0@PAGE ; "vendor/samsung/frameworks/avcodec/mm_pr"...
.text:00000000000029C8                 ADD             X20, X20, #aVendorSamsungF_0@PAGEOFF ; "vendor/samsung/frameworks/avcodec/mm_pr"...
.text:00000000000029CC                 MOV             W1, #0x2F ; '/'
.text:00000000000029D0                 MOV             W2, #0x58 ; 'X'
.text:00000000000029D4                 MOV             X0, X20
.text:00000000000029D8                 BL              .__strrchr_chk
.text:00000000000029DC                 CBZ             X0, loc_29F8
.text:00000000000029E0                 ADRP            X0, #aVendorSamsungF_0@PAGE ; "vendor/samsung/frameworks/avcodec/mm_pr"...
.text:00000000000029E4                 ADD             X0, X0, #aVendorSamsungF_0@PAGEOFF ; "vendor/samsung/frameworks/avcodec/mm_pr"...
.text:00000000000029E8                 MOV             W1, #0x2F ; '/'
.text:00000000000029EC                 MOV             W2, #0x58 ; 'X'
.text:00000000000029F0                 BL              .__strrchr_chk
.text:00000000000029F4                 ADD             X20, X0, #1
.text:00000000000029F8 loc_29F8                                ; CODE XREF: SOMXFLACD_COMP_GetParameter+32C↑j
.text:00000000000029F8                 ADRP            X1, #aSecFlacDec@PAGE ; "SEC_FLAC_DEC"
.text:00000000000029FC                 ADRP            X2, #aSDAssertionRet@PAGE ; "%s(%d): assertion: 'ret == OMX_ErrorNon"...
.text:0000000000002A00                 ADD             X1, X1, #aSecFlacDec@PAGEOFF ; "SEC_FLAC_DEC"
.text:0000000000002A04                 ADD             X2, X2, #aSDAssertionRet@PAGEOFF ; "%s(%d): assertion: 'ret == OMX_ErrorNon"...
.text:0000000000002A08                 MOV             W4, #0xA6
.text:0000000000002A0C                 B               loc_2784
.text:0000000000002A10 ; ---------------------------------------------------------------------------
.text:0000000000002A10 loc_2A10                                ; CODE XREF: SOMXFLACD_COMP_GetParameter+13C↑j
.text:0000000000002A10                 MOV             W1, #0x68 ; 'h'
.text:0000000000002A14                 MOV             X0, X20
.text:0000000000002A18                 BL              .SEC_OMX_Check_SizeVersion
.text:0000000000002A1C                 CBZ             W0, loc_2B3C
.text:0000000000002A20                 ADRP            X20, #aVendorSamsungF_0@PAGE ; "vendor/samsung/frameworks/avcodec/mm_pr"...
.text:0000000000002A24                 ADD             X20, X20, #aVendorSamsungF_0@PAGEOFF ; "vendor/samsung/frameworks/avcodec/mm_pr"...
.text:0000000000002A28                 MOV             W19, W0
.text:0000000000002A2C                 MOV             W1, #0x2F ; '/'
.text:0000000000002A30                 MOV             W2, #0x58 ; 'X'
.text:0000000000002A34                 MOV             X0, X20
.text:0000000000002A38                 BL              .__strrchr_chk
.text:0000000000002A3C                 CBZ             X0, loc_2A58
.text:0000000000002A40                 ADRP            X0, #aVendorSamsungF_0@PAGE ; "vendor/samsung/frameworks/avcodec/mm_pr"...
.text:0000000000002A44                 ADD             X0, X0, #aVendorSamsungF_0@PAGEOFF ; "vendor/samsung/frameworks/avcodec/mm_pr"...
.text:0000000000002A48                 MOV             W1, #0x2F ; '/'
.text:0000000000002A4C                 MOV             W2, #0x58 ; 'X'
.text:0000000000002A50                 BL              .__strrchr_chk
.text:0000000000002A54                 ADD             X20, X0, #1
.text:0000000000002A58 loc_2A58                                ; CODE XREF: SOMXFLACD_COMP_GetParameter+38C↑j
.text:0000000000002A58                 ADRP            X1, #aSecFlacDec@PAGE ; "SEC_FLAC_DEC"
.text:0000000000002A5C                 ADRP            X2, #aSDAssertionRet@PAGE ; "%s(%d): assertion: 'ret == OMX_ErrorNon"...
.text:0000000000002A60                 ADD             X1, X1, #aSecFlacDec@PAGEOFF ; "SEC_FLAC_DEC"
.text:0000000000002A64                 ADD             X2, X2, #aSDAssertionRet@PAGEOFF ; "%s(%d): assertion: 'ret == OMX_ErrorNon"...
.text:0000000000002A68                 MOV             W4, #0x65 ; 'e'
.text:0000000000002A6C                 B               loc_2784
.text:0000000000002A70 ; ---------------------------------------------------------------------------
.text:0000000000002A70 loc_2A70                                ; CODE XREF: SOMXFLACD_COMP_GetParameter+2C0↑j
.text:0000000000002A70                 LDR             X0, [X21,#0x80]
.text:0000000000002A74                 CBZ             X0, loc_2A88
.text:0000000000002A78                 MOV             W1, #8
.text:0000000000002A7C                 ADD             X2, X21, #0x8C
.text:0000000000002A80                 MOVK            W1, #0x7F01,LSL#16
.text:0000000000002A84                 BL              .SOMXFLACD_GetParameter
.text:0000000000002A88 loc_2A88                                ; CODE XREF: SOMXFLACD_COMP_GetParameter+3C4↑j
.text:0000000000002A88                 LDR             W8, [X21,#0x8C]
.text:0000000000002A8C                 B               loc_2AA8
.text:0000000000002A90 ; ---------------------------------------------------------------------------
.text:0000000000002A90 loc_2A90                                ; CODE XREF: SOMXFLACD_COMP_GetParameter+2D0↑j
.text:0000000000002A90                 LDR             X0, [X21,#0x80]
.text:0000000000002A94                 CBZ             X0, loc_2AA4
.text:0000000000002A98                 ADD             X2, X21, #0x90
.text:0000000000002A9C                 ADD             W1, W8, #2
.text:0000000000002AA0                 BL              .SOMXFLACD_GetParameter
.text:0000000000002AA4 loc_2AA4                                ; CODE XREF: SOMXFLACD_COMP_GetParameter+3E4↑j
.text:0000000000002AA4                 LDR             W8, [X21,#0x90]
.text:0000000000002AA8 loc_2AA8                                ; CODE XREF: SOMXFLACD_COMP_GetParameter+2FC↑j
.text:0000000000002AA8                                         ; SOMXFLACD_COMP_GetParameter+3DC↑j
.text:0000000000002AA8                 MOV             W19, WZR
.text:0000000000002AAC                 STR             W8, [X20]
.text:0000000000002AB0                 B               loc_2790
.text:0000000000002AB4 ; ---------------------------------------------------------------------------
.text:0000000000002AB4 loc_2AB4                                ; CODE XREF: SOMXFLACD_COMP_GetParameter+14C↑j
.text:0000000000002AB4                                         ; SOMXFLACD_COMP_GetParameter+2E0↑j
.text:0000000000002AB4                 MOV             W1, W22
.text:0000000000002AB8                 MOV             X2, X20
.text:0000000000002ABC                 LDP             X29, X30, [SP,#0x30+var_s0]
.text:0000000000002AC0                 LDP             X20, X19, [SP,#0x30+var_10]
.text:0000000000002AC4                 LDP             X22, X21, [SP,#0x30+var_20]
.text:0000000000002AC8                 MOV             X0, X23
.text:0000000000002ACC                 LDR             X23, [SP+0x30+var_30],#0x40
.text:0000000000002AD0                 B               .SEC_OMX_AudioDecodeGetParameter
.text:0000000000002AD4 ; ---------------------------------------------------------------------------
.text:0000000000002AD4 loc_2AD4                                ; CODE XREF: SOMXFLACD_COMP_GetParameter+15C↑j
.text:0000000000002AD4                 LDR             W8, [X20,#8]
.text:0000000000002AD8                 CBZ             W8, loc_2BE8
.text:0000000000002ADC                 ADRP            X19, #aVendorSamsungF_0@PAGE ; "vendor/samsung/frameworks/avcodec/mm_pr"...
.text:0000000000002AE0                 ADD             X19, X19, #aVendorSamsungF_0@PAGEOFF ; "vendor/samsung/frameworks/avcodec/mm_pr"...
.text:0000000000002AE4                 MOV             W1, #0x2F ; '/'
.text:0000000000002AE8                 MOV             W2, #0x58 ; 'X'
.text:0000000000002AEC                 MOV             X0, X19
.text:0000000000002AF0                 BL              .__strrchr_chk
.text:0000000000002AF4                 CBZ             X0, loc_2B10
.text:0000000000002AF8                 ADRP            X0, #aVendorSamsungF_0@PAGE ; "vendor/samsung/frameworks/avcodec/mm_pr"...
.text:0000000000002AFC                 ADD             X0, X0, #aVendorSamsungF_0@PAGEOFF ; "vendor/samsung/frameworks/avcodec/mm_pr"...
.text:0000000000002B00                 MOV             W1, #0x2F ; '/'
.text:0000000000002B04                 MOV             W2, #0x58 ; 'X'
.text:0000000000002B08                 BL              .__strrchr_chk
.text:0000000000002B0C                 ADD             X19, X0, #1
.text:0000000000002B10 loc_2B10                                ; CODE XREF: SOMXFLACD_COMP_GetParameter+444↑j
.text:0000000000002B10                 ADRP            X1, #aSecFlacDec@PAGE ; "SEC_FLAC_DEC"
.text:0000000000002B14                 ADRP            X2, #aSDAssertionPds@PAGE ; "%s(%d): assertion: 'pDstFlacParam->nPor"...
.text:0000000000002B18                 ADD             X1, X1, #aSecFlacDec@PAGEOFF ; "SEC_FLAC_DEC"
.text:0000000000002B1C                 ADD             X2, X2, #aSDAssertionPds@PAGEOFF ; "%s(%d): assertion: 'pDstFlacParam->nPor"...
.text:0000000000002B20                 MOV             W4, #0x7B ; '{'
.text:0000000000002B24                 B               loc_2BCC
.text:0000000000002B28 ; ---------------------------------------------------------------------------
.text:0000000000002B28 loc_2B28                                ; CODE XREF: SOMXFLACD_COMP_GetParameter+310↑j
.text:0000000000002B28                 ADRP            X1, #aAudioDecoderFl@PAGE ; "audio_decoder.flac"
.text:0000000000002B2C                 ADD             X0, X20, #8
.text:0000000000002B30                 ADD             X1, X1, #aAudioDecoderFl@PAGEOFF ; "audio_decoder.flac"
.text:0000000000002B34                 BL              .SEC_OSAL_Strcpy
.text:0000000000002B38                 B               loc_2790
.text:0000000000002B3C ; ---------------------------------------------------------------------------
.text:0000000000002B3C loc_2B3C                                ; CODE XREF: SOMXFLACD_COMP_GetParameter+36C↑j
.text:0000000000002B3C                 LDR             W8, [X20,#8]
.text:0000000000002B40                 CMP             W8, #1
.text:0000000000002B44                 B.NE            loc_2B84
.text:0000000000002B48                 LDR             W3, [X21,#0x34]
.text:0000000000002B4C                 ADRP            X1, #aSecFlacDec@PAGE ; "SEC_FLAC_DEC"
.text:0000000000002B50                 LDR             W4, [X20,#0x1C]
.text:0000000000002B54                 ADRP            X2, #aSomxflacdCompG_0@PAGE ; "SOMXFLACD_COMP_GetParameter() bits %d:%"...
.text:0000000000002B58                 LDR             W5, [X21,#0x28]
.text:0000000000002B5C                 ADD             X1, X1, #aSecFlacDec@PAGEOFF ; "SEC_FLAC_DEC"
.text:0000000000002B60                 LDR             W6, [X20,#0x10]
.text:0000000000002B64                 ADD             X2, X2, #aSomxflacdCompG_0@PAGEOFF ; "SOMXFLACD_COMP_GetParameter() bits %d:%"...
.text:0000000000002B68                 MOV             W0, #3
.text:0000000000002B6C                 ADD             X19, X21, #0x18
.text:0000000000002B70                 BL              .__android_log_print
.text:0000000000002B74                 MOV             W2, #0x68 ; 'h'
.text:0000000000002B78                 MOV             X0, X20
.text:0000000000002B7C                 MOV             X1, X19
.text:0000000000002B80                 B               loc_2BF4
.text:0000000000002B84 ; ---------------------------------------------------------------------------
.text:0000000000002B84 loc_2B84                                ; CODE XREF: SOMXFLACD_COMP_GetParameter+494↑j
.text:0000000000002B84                 ADRP            X19, #aVendorSamsungF_0@PAGE ; "vendor/samsung/frameworks/avcodec/mm_pr"...
.text:0000000000002B88                 ADD             X19, X19, #aVendorSamsungF_0@PAGEOFF ; "vendor/samsung/frameworks/avcodec/mm_pr"...
.text:0000000000002B8C                 MOV             W1, #0x2F ; '/'
.text:0000000000002B90                 MOV             W2, #0x58 ; 'X'
.text:0000000000002B94                 MOV             X0, X19
.text:0000000000002B98                 BL              .__strrchr_chk
.text:0000000000002B9C                 CBZ             X0, loc_2BB8
.text:0000000000002BA0                 ADRP            X0, #aVendorSamsungF_0@PAGE ; "vendor/samsung/frameworks/avcodec/mm_pr"...
.text:0000000000002BA4                 ADD             X0, X0, #aVendorSamsungF_0@PAGEOFF ; "vendor/samsung/frameworks/avcodec/mm_pr"...
.text:0000000000002BA8                 MOV             W1, #0x2F ; '/'
.text:0000000000002BAC                 MOV             W2, #0x58 ; 'X'
.text:0000000000002BB0                 BL              .__strrchr_chk
.text:0000000000002BB4                 ADD             X19, X0, #1
.text:0000000000002BB8 loc_2BB8                                ; CODE XREF: SOMXFLACD_COMP_GetParameter+4EC↑j
.text:0000000000002BB8                 ADRP            X1, #aSecFlacDec@PAGE ; "SEC_FLAC_DEC"
.text:0000000000002BBC                 ADRP            X2, #aSDAssertionPds_0@PAGE ; "%s(%d): assertion: 'pDstPcmParam->nPort"...
.text:0000000000002BC0                 ADD             X1, X1, #aSecFlacDec@PAGEOFF ; "SEC_FLAC_DEC"
.text:0000000000002BC4                 ADD             X2, X2, #aSDAssertionPds_0@PAGEOFF ; "%s(%d): assertion: 'pDstPcmParam->nPort"...
.text:0000000000002BC8                 MOV             W4, #0x67 ; 'g'
.text:0000000000002BCC loc_2BCC                                ; CODE XREF: SOMXFLACD_COMP_GetParameter+474↑j
.text:0000000000002BCC                 MOV             W0, #3
.text:0000000000002BD0                 MOV             X3, X19
.text:0000000000002BD4                 BL              ._SEC_OSAL_Log
.text:0000000000002BD8                 MOV             W8, #0x80001005
.text:0000000000002BE0                 ADD             W19, W8, #0x16
.text:0000000000002BE4                 B               loc_2790
.text:0000000000002BE8 ; ---------------------------------------------------------------------------
.text:0000000000002BE8 loc_2BE8                                ; CODE XREF: SOMXFLACD_COMP_GetParameter+428↑j
.text:0000000000002BE8                 MOV             X0, X20
.text:0000000000002BEC                 MOV             X1, X21
.text:0000000000002BF0                 MOV             W2, #0x18
.text:0000000000002BF4 loc_2BF4                                ; CODE XREF: SOMXFLACD_COMP_GetParameter+4D0↑j
.text:0000000000002BF4                 BL              .SEC_OSAL_Memcpy
.text:0000000000002BF8                 MOV             W19, WZR
.text:0000000000002BFC                 B               loc_2790
.text:0000000000002BFC ; } // starts at 26B0
.text:0000000000002BFC ; End of function SOMXFLACD_COMP_GetParameter
.text:0000000000002C00 ; =============== S U B R O U T I N E =======================================
.text:0000000000002C00 ; Attributes: bp-based frame
.text:0000000000002C00                 EXPORT SOMXFLACD_COMP_SetParameter
.text:0000000000002C00 SOMXFLACD_COMP_SetParameter             ; DATA XREF: LOAD:0000000000000570↑o
.text:0000000000002C00                                         ; .got:SOMXFLACD_COMP_SetParameter_ptr↓o
.text:0000000000002C00 var_30          = -0x30
.text:0000000000002C00 var_20          = -0x20
.text:0000000000002C00 var_10          = -0x10
.text:0000000000002C00 var_s0          =  0
.text:0000000000002C00 ; __unwind {
.text:0000000000002C00                 STP             X24, X23, [SP,#-0x10+var_30]!
.text:0000000000002C04                 STP             X22, X21, [SP,#0x30+var_20]
.text:0000000000002C08                 STP             X20, X19, [SP,#0x30+var_10]
.text:0000000000002C0C                 STP             X29, X30, [SP,#0x30+var_s0]
.text:0000000000002C10                 ADD             X29, SP, #0x30
.text:0000000000002C14                 CBZ             X0, loc_2C84
.text:0000000000002C18                 MOV             X20, X2
.text:0000000000002C1C                 CBZ             X2, loc_2C84
.text:0000000000002C20                 MOV             W22, W1
.text:0000000000002C24                 MOV             W1, #0xA8
.text:0000000000002C28                 MOV             X23, X0
.text:0000000000002C2C                 BL              .SEC_OMX_Check_SizeVersion
.text:0000000000002C30                 CBZ             W0, loc_2CF8
.text:0000000000002C34                 ADRP            X20, #aVendorSamsungF_0@PAGE ; "vendor/samsung/frameworks/avcodec/mm_pr"...
.text:0000000000002C38                 ADD             X20, X20, #aVendorSamsungF_0@PAGEOFF ; "vendor/samsung/frameworks/avcodec/mm_pr"...
.text:0000000000002C3C                 MOV             W19, W0
.text:0000000000002C40                 MOV             W1, #0x2F ; '/'
.text:0000000000002C44                 MOV             W2, #0x58 ; 'X'
.text:0000000000002C48                 MOV             X0, X20
.text:0000000000002C4C                 BL              .__strrchr_chk
.text:0000000000002C50                 CBZ             X0, loc_2C6C
.text:0000000000002C54                 ADRP            X0, #aVendorSamsungF_0@PAGE ; "vendor/samsung/frameworks/avcodec/mm_pr"...
.text:0000000000002C58                 ADD             X0, X0, #aVendorSamsungF_0@PAGEOFF ; "vendor/samsung/frameworks/avcodec/mm_pr"...
.text:0000000000002C5C                 MOV             W1, #0x2F ; '/'
.text:0000000000002C60                 MOV             W2, #0x58 ; 'X'
.text:0000000000002C64                 BL              .__strrchr_chk
.text:0000000000002C68                 ADD             X20, X0, #1
.text:0000000000002C6C loc_2C6C                                ; CODE XREF: SOMXFLACD_COMP_SetParameter+50↑j
.text:0000000000002C6C                 ADRP            X1, #aSecFlacDec@PAGE ; "SEC_FLAC_DEC"
.text:0000000000002C70                 ADRP            X2, #aSDAssertionRet@PAGE ; "%s(%d): assertion: 'ret == OMX_ErrorNon"...
.text:0000000000002C74                 ADD             X1, X1, #aSecFlacDec@PAGEOFF ; "SEC_FLAC_DEC"
.text:0000000000002C78                 ADD             X2, X2, #aSDAssertionRet@PAGEOFF ; "%s(%d): assertion: 'ret == OMX_ErrorNon"...
.text:0000000000002C7C                 MOV             W4, #0xC8
.text:0000000000002C80                 B               loc_2CD4
.text:0000000000002C84 ; ---------------------------------------------------------------------------
.text:0000000000002C84 loc_2C84                                ; CODE XREF: SOMXFLACD_COMP_SetParameter+14↑j
.text:0000000000002C84                                         ; SOMXFLACD_COMP_SetParameter+1C↑j
.text:0000000000002C84                 ADRP            X20, #aVendorSamsungF_0@PAGE ; "vendor/samsung/frameworks/avcodec/mm_pr"...
.text:0000000000002C88                 ADD             X20, X20, #aVendorSamsungF_0@PAGEOFF ; "vendor/samsung/frameworks/avcodec/mm_pr"...
.text:0000000000002C8C                 MOV             W1, #0x2F ; '/'
.text:0000000000002C90                 MOV             W2, #0x58 ; 'X'
.text:0000000000002C94                 MOV             X0, X20
.text:0000000000002C98                 BL              .__strrchr_chk
.text:0000000000002C9C                 CBZ             X0, loc_2CB8
.text:0000000000002CA0                 ADRP            X0, #aVendorSamsungF_0@PAGE ; "vendor/samsung/frameworks/avcodec/mm_pr"...
.text:0000000000002CA4                 ADD             X0, X0, #aVendorSamsungF_0@PAGEOFF ; "vendor/samsung/frameworks/avcodec/mm_pr"...
.text:0000000000002CA8                 MOV             W1, #0x2F ; '/'
.text:0000000000002CAC                 MOV             W2, #0x58 ; 'X'
.text:0000000000002CB0                 BL              .__strrchr_chk
.text:0000000000002CB4                 ADD             X20, X0, #1
.text:0000000000002CB8 loc_2CB8                                ; CODE XREF: SOMXFLACD_COMP_SetParameter+9C↑j
.text:0000000000002CB8                 MOV             W19, #0x1005
.text:0000000000002CBC                 ADRP            X1, #aSecFlacDec@PAGE ; "SEC_FLAC_DEC"
.text:0000000000002CC0                 ADRP            X2, #aSDAssertionPom@PAGE ; "%s(%d): assertion: 'pOMXComponent && pC"...
.text:0000000000002CC4                 MOVK            W19, #0x8000,LSL#16
.text:0000000000002CC8                 ADD             X1, X1, #aSecFlacDec@PAGEOFF ; "SEC_FLAC_DEC"
.text:0000000000002CCC                 ADD             X2, X2, #aSDAssertionPom@PAGEOFF ; "%s(%d): assertion: 'pOMXComponent && pC"...
.text:0000000000002CD0                 MOV             W4, #0xC5
.text:0000000000002CD4 loc_2CD4                                ; CODE XREF: SOMXFLACD_COMP_SetParameter+80↑j
.text:0000000000002CD4                                         ; SOMXFLACD_COMP_SetParameter+1A8↓j ...
.text:0000000000002CD4                 MOV             W0, #3
.text:0000000000002CD8                 MOV             X3, X20
.text:0000000000002CDC loc_2CDC                                ; CODE XREF: SOMXFLACD_COMP_SetParameter+41C↓j
.text:0000000000002CDC                 BL              ._SEC_OSAL_Log
.text:0000000000002CE0 loc_2CE0                                ; CODE XREF: SOMXFLACD_COMP_SetParameter+258↓j
.text:0000000000002CE0                                         ; SOMXFLACD_COMP_SetParameter+42C↓j ...
.text:0000000000002CE0                 MOV             W0, W19
.text:0000000000002CE4                 LDP             X29, X30, [SP,#0x30+var_s0]
.text:0000000000002CE8                 LDP             X20, X19, [SP,#0x30+var_10]
.text:0000000000002CEC                 LDP             X22, X21, [SP,#0x30+var_20]
.text:0000000000002CF0                 LDP             X24, X23, [SP+0x30+var_30],#0x40
.text:0000000000002CF4                 RET
.text:0000000000002CF8 ; ---------------------------------------------------------------------------
.text:0000000000002CF8 loc_2CF8                                ; CODE XREF: SOMXFLACD_COMP_SetParameter+30↑j
.text:0000000000002CF8                 LDR             X24, [X23,#8]
.text:0000000000002CFC                 CBZ             X24, loc_2DAC
.text:0000000000002D00                 LDR             W8, [X24,#0x10]
.text:0000000000002D04                 CBZ             W8, loc_2E00
.text:0000000000002D08                 LDR             X21, [X24,#0x40]
.text:0000000000002D0C                 CBZ             X21, loc_2E5C
.text:0000000000002D10                 MOV             W8, #0x400001B
.text:0000000000002D18                 CMP             W22, W8
.text:0000000000002D1C                 B.GT            loc_2EB0
.text:0000000000002D20                 MOV             W8, #0x1FFFFFF
.text:0000000000002D24                 CMP             W22, W8
.text:0000000000002D28                 B.GT            loc_2F00
.text:0000000000002D2C                 MOV             W8, #0x1000012
.text:0000000000002D34                 CMP             W22, W8
.text:0000000000002D38                 B.EQ            loc_305C
.text:0000000000002D3C                 MOV             W8, #0x1000017
.text:0000000000002D44                 CMP             W22, W8
.text:0000000000002D48                 B.NE            loc_3064
.text:0000000000002D4C                 MOV             W1, #0x88
.text:0000000000002D50                 MOV             X0, X20
.text:0000000000002D54                 BL              .SEC_OMX_Check_SizeVersion
.text:0000000000002D58                 CBZ             W0, loc_3084
.text:0000000000002D5C                 ADRP            X20, #aVendorSamsungF_0@PAGE ; "vendor/samsung/frameworks/avcodec/mm_pr"...
.text:0000000000002D60                 ADD             X20, X20, #aVendorSamsungF_0@PAGEOFF ; "vendor/samsung/frameworks/avcodec/mm_pr"...
.text:0000000000002D64                 MOV             W19, W0
.text:0000000000002D68                 MOV             W1, #0x2F ; '/'
.text:0000000000002D6C                 MOV             W2, #0x58 ; 'X'
.text:0000000000002D70                 MOV             X0, X20
.text:0000000000002D74                 BL              .__strrchr_chk
.text:0000000000002D78                 CBZ             X0, loc_2D94
.text:0000000000002D7C                 ADRP            X0, #aVendorSamsungF_0@PAGE ; "vendor/samsung/frameworks/avcodec/mm_pr"...
.text:0000000000002D80                 ADD             X0, X0, #aVendorSamsungF_0@PAGEOFF ; "vendor/samsung/frameworks/avcodec/mm_pr"...
.text:0000000000002D84                 MOV             W1, #0x2F ; '/'
.text:0000000000002D88                 MOV             W2, #0x58 ; 'X'
.text:0000000000002D8C                 BL              .__strrchr_chk
.text:0000000000002D90                 ADD             X20, X0, #1
.text:0000000000002D94 loc_2D94                                ; CODE XREF: SOMXFLACD_COMP_SetParameter+178↑j
.text:0000000000002D94                 ADRP            X1, #aSecFlacDec@PAGE ; "SEC_FLAC_DEC"
.text:0000000000002D98                 ADRP            X2, #aSDAssertionRet@PAGE ; "%s(%d): assertion: 'ret == OMX_ErrorNon"...
.text:0000000000002D9C                 ADD             X1, X1, #aSecFlacDec@PAGEOFF ; "SEC_FLAC_DEC"
.text:0000000000002DA0                 ADD             X2, X2, #aSDAssertionRet@PAGEOFF ; "%s(%d): assertion: 'ret == OMX_ErrorNon"...
.text:0000000000002DA4                 MOV             W4, #0x12A
.text:0000000000002DA8                 B               loc_2CD4
.text:0000000000002DAC ; ---------------------------------------------------------------------------
.text:0000000000002DAC loc_2DAC                                ; CODE XREF: SOMXFLACD_COMP_SetParameter+FC↑j
.text:0000000000002DAC                 ADRP            X20, #aVendorSamsungF_0@PAGE ; "vendor/samsung/frameworks/avcodec/mm_pr"...
.text:0000000000002DB0                 ADD             X20, X20, #aVendorSamsungF_0@PAGEOFF ; "vendor/samsung/frameworks/avcodec/mm_pr"...
.text:0000000000002DB4                 MOV             W1, #0x2F ; '/'
.text:0000000000002DB8                 MOV             W2, #0x58 ; 'X'
.text:0000000000002DBC                 MOV             X0, X20
.text:0000000000002DC0                 BL              .__strrchr_chk
.text:0000000000002DC4                 CBZ             X0, loc_2DE0
.text:0000000000002DC8                 ADRP            X0, #aVendorSamsungF_0@PAGE ; "vendor/samsung/frameworks/avcodec/mm_pr"...
.text:0000000000002DCC                 ADD             X0, X0, #aVendorSamsungF_0@PAGEOFF ; "vendor/samsung/frameworks/avcodec/mm_pr"...
.text:0000000000002DD0                 MOV             W1, #0x2F ; '/'
.text:0000000000002DD4                 MOV             W2, #0x58 ; 'X'
.text:0000000000002DD8                 BL              .__strrchr_chk
.text:0000000000002DDC                 ADD             X20, X0, #1
.text:0000000000002DE0 loc_2DE0                                ; CODE XREF: SOMXFLACD_COMP_SetParameter+1C4↑j
.text:0000000000002DE0                 MOV             W19, #0x1005
.text:0000000000002DE4                 ADRP            X1, #aSecFlacDec@PAGE ; "SEC_FLAC_DEC"
.text:0000000000002DE8                 ADRP            X2, #aSDAssertionPom_0@PAGE ; "%s(%d): assertion: 'pOMXComponent->pCom"...
.text:0000000000002DEC                 MOVK            W19, #0x8000,LSL#16
.text:0000000000002DF0                 ADD             X1, X1, #aSecFlacDec@PAGEOFF ; "SEC_FLAC_DEC"
.text:0000000000002DF4                 ADD             X2, X2, #aSDAssertionPom_0@PAGEOFF ; "%s(%d): assertion: 'pOMXComponent->pCom"...
.text:0000000000002DF8                 MOV             W4, #0xC9
.text:0000000000002DFC                 B               loc_2CD4
.text:0000000000002E00 ; ---------------------------------------------------------------------------
.text:0000000000002E00 loc_2E00                                ; CODE XREF: SOMXFLACD_COMP_SetParameter+104↑j
.text:0000000000002E00                 ADRP            X19, #aVendorSamsungF_0@PAGE ; "vendor/samsung/frameworks/avcodec/mm_pr"...
.text:0000000000002E04                 ADD             X19, X19, #aVendorSamsungF_0@PAGEOFF ; "vendor/samsung/frameworks/avcodec/mm_pr"...
.text:0000000000002E08                 MOV             W1, #0x2F ; '/'
.text:0000000000002E0C                 MOV             W2, #0x58 ; 'X'
.text:0000000000002E10                 MOV             X0, X19
.text:0000000000002E14                 BL              .__strrchr_chk
.text:0000000000002E18                 CBZ             X0, loc_2E34
.text:0000000000002E1C                 ADRP            X0, #aVendorSamsungF_0@PAGE ; "vendor/samsung/frameworks/avcodec/mm_pr"...
.text:0000000000002E20                 ADD             X0, X0, #aVendorSamsungF_0@PAGEOFF ; "vendor/samsung/frameworks/avcodec/mm_pr"...
.text:0000000000002E24                 MOV             W1, #0x2F ; '/'
.text:0000000000002E28                 MOV             W2, #0x58 ; 'X'
.text:0000000000002E2C                 BL              .__strrchr_chk
.text:0000000000002E30                 ADD             X19, X0, #1
.text:0000000000002E34 loc_2E34                                ; CODE XREF: SOMXFLACD_COMP_SetParameter+218↑j
.text:0000000000002E34                 ADRP            X1, #aSecFlacDec@PAGE ; "SEC_FLAC_DEC"
.text:0000000000002E38                 ADRP            X2, #aSDAssertionPse@PAGE ; "%s(%d): assertion: 'pSECComponent->curr"...
.text:0000000000002E3C                 ADD             X1, X1, #aSecFlacDec@PAGEOFF ; "SEC_FLAC_DEC"
.text:0000000000002E40                 ADD             X2, X2, #aSDAssertionPse@PAGEOFF ; "%s(%d): assertion: 'pSECComponent->curr"...
.text:0000000000002E44                 MOV             W4, #0xCC
.text:0000000000002E48                 MOV             W0, #3
.text:0000000000002E4C                 MOV             X3, X19
.text:0000000000002E50                 BL              ._SEC_OSAL_Log
.text:0000000000002E54                 MOV             W19, WZR
.text:0000000000002E58                 B               loc_2CE0
.text:0000000000002E5C ; ---------------------------------------------------------------------------
.text:0000000000002E5C loc_2E5C                                ; CODE XREF: SOMXFLACD_COMP_SetParameter+10C↑j
.text:0000000000002E5C                 ADRP            X20, #aVendorSamsungF_0@PAGE ; "vendor/samsung/frameworks/avcodec/mm_pr"...
.text:0000000000002E60                 ADD             X20, X20, #aVendorSamsungF_0@PAGEOFF ; "vendor/samsung/frameworks/avcodec/mm_pr"...
.text:0000000000002E64                 MOV             W1, #0x2F ; '/'
.text:0000000000002E68                 MOV             W2, #0x58 ; 'X'
.text:0000000000002E6C                 MOV             X0, X20
.text:0000000000002E70                 BL              .__strrchr_chk
.text:0000000000002E74                 CBZ             X0, loc_2E90
.text:0000000000002E78                 ADRP            X0, #aVendorSamsungF_0@PAGE ; "vendor/samsung/frameworks/avcodec/mm_pr"...
.text:0000000000002E7C                 ADD             X0, X0, #aVendorSamsungF_0@PAGEOFF ; "vendor/samsung/frameworks/avcodec/mm_pr"...
.text:0000000000002E80                 MOV             W1, #0x2F ; '/'
.text:0000000000002E84                 MOV             W2, #0x58 ; 'X'
.text:0000000000002E88                 BL              .__strrchr_chk
.text:0000000000002E8C                 ADD             X20, X0, #1
.text:0000000000002E90 loc_2E90                                ; CODE XREF: SOMXFLACD_COMP_SetParameter+274↑j
.text:0000000000002E90                 MOV             W19, #0x1005
.text:0000000000002E94                 ADRP            X1, #aSecFlacDec@PAGE ; "SEC_FLAC_DEC"
.text:0000000000002E98                 ADRP            X2, #aSDAssertionPfl@PAGE ; "%s(%d): assertion: 'pFlacDec' failed"
.text:0000000000002E9C                 MOVK            W19, #0x8000,LSL#16
.text:0000000000002EA0                 ADD             X1, X1, #aSecFlacDec@PAGEOFF ; "SEC_FLAC_DEC"
.text:0000000000002EA4                 ADD             X2, X2, #aSDAssertionPfl@PAGEOFF ; "%s(%d): assertion: 'pFlacDec' failed"
.text:0000000000002EA8                 MOV             W4, #0xCE
.text:0000000000002EAC                 B               loc_2CD4
.text:0000000000002EB0 ; ---------------------------------------------------------------------------
.text:0000000000002EB0 loc_2EB0                                ; CODE XREF: SOMXFLACD_COMP_SetParameter+11C↑j
.text:0000000000002EB0                 MOV             W8, #0x7F010009
.text:0000000000002EB8                 CMP             W22, W8
.text:0000000000002EBC                 B.GT            loc_2F7C
.text:0000000000002EC0                 MOV             W8, #0x400001C
.text:0000000000002EC8                 CMP             W22, W8
.text:0000000000002ECC                 B.EQ            loc_2FB8
.text:0000000000002ED0                 MOV             W8, #0x7F010008
.text:0000000000002ED8                 CMP             W22, W8
.text:0000000000002EDC                 B.NE            loc_3064
.text:0000000000002EE0                 LDR             W8, [X20]
.text:0000000000002EE4                 STR             W8, [X21,#0x8C]!
.text:0000000000002EE8                 LDUR            X0, [X21,#-0xC]
.text:0000000000002EEC                 CBZ             X0, loc_305C
.text:0000000000002EF0                 MOV             W8, #0x7F011000
.text:0000000000002EF8                 SUB             W1, W8, #0xFF8
.text:0000000000002EFC                 B               loc_304C
.text:0000000000002F00 ; ---------------------------------------------------------------------------
.text:0000000000002F00 loc_2F00                                ; CODE XREF: SOMXFLACD_COMP_SetParameter+128↑j
.text:0000000000002F00                 MOV             W8, #0x2000000
.text:0000000000002F04                 CMP             W22, W8
.text:0000000000002F08                 B.EQ            loc_3020
.text:0000000000002F0C                 MOV             W8, #0x4000002
.text:0000000000002F14                 CMP             W22, W8
.text:0000000000002F18                 B.NE            loc_3064
.text:0000000000002F1C                 MOV             W1, #0x68 ; 'h'
.text:0000000000002F20                 MOV             X0, X20
.text:0000000000002F24                 BL              .SEC_OMX_Check_SizeVersion
.text:0000000000002F28                 CBZ             W0, loc_30FC
.text:0000000000002F2C                 ADRP            X20, #aVendorSamsungF_0@PAGE ; "vendor/samsung/frameworks/avcodec/mm_pr"...
.text:0000000000002F30                 ADD             X20, X20, #aVendorSamsungF_0@PAGEOFF ; "vendor/samsung/frameworks/avcodec/mm_pr"...
.text:0000000000002F34                 MOV             W19, W0
.text:0000000000002F38                 MOV             W1, #0x2F ; '/'
.text:0000000000002F3C                 MOV             W2, #0x58 ; 'X'
.text:0000000000002F40                 MOV             X0, X20
.text:0000000000002F44                 BL              .__strrchr_chk
.text:0000000000002F48                 CBZ             X0, loc_2F64
.text:0000000000002F4C                 ADRP            X0, #aVendorSamsungF_0@PAGE ; "vendor/samsung/frameworks/avcodec/mm_pr"...
.text:0000000000002F50                 ADD             X0, X0, #aVendorSamsungF_0@PAGEOFF ; "vendor/samsung/frameworks/avcodec/mm_pr"...
.text:0000000000002F54                 MOV             W1, #0x2F ; '/'
.text:0000000000002F58                 MOV             W2, #0x58 ; 'X'
.text:0000000000002F5C                 BL              .__strrchr_chk
.text:0000000000002F60                 ADD             X20, X0, #1
.text:0000000000002F64 loc_2F64                                ; CODE XREF: SOMXFLACD_COMP_SetParameter+348↑j
.text:0000000000002F64                 ADRP            X1, #aSecFlacDec@PAGE ; "SEC_FLAC_DEC"
.text:0000000000002F68                 ADRP            X2, #aSDAssertionRet@PAGE ; "%s(%d): assertion: 'ret == OMX_ErrorNon"...
.text:0000000000002F6C                 ADD             X1, X1, #aSecFlacDec@PAGEOFF ; "SEC_FLAC_DEC"
.text:0000000000002F70                 ADD             X2, X2, #aSDAssertionRet@PAGEOFF ; "%s(%d): assertion: 'ret == OMX_ErrorNon"...
.text:0000000000002F74                 MOV             W4, #0xDA
.text:0000000000002F78                 B               loc_2CD4
.text:0000000000002F7C ; ---------------------------------------------------------------------------
.text:0000000000002F7C loc_2F7C                                ; CODE XREF: SOMXFLACD_COMP_SetParameter+2BC↑j
.text:0000000000002F7C                 MOV             W8, #0x7F01000A
.text:0000000000002F84                 CMP             W22, W8
.text:0000000000002F88                 B.EQ            loc_3030
.text:0000000000002F8C                 MOV             W8, #0x7F011000
.text:0000000000002F94                 CMP             W22, W8
.text:0000000000002F98                 B.NE            loc_3064
.text:0000000000002F9C                 LDR             W8, [X20]
.text:0000000000002FA0                 STR             W8, [X21,#0x94]!
.text:0000000000002FA4                 LDUR            X0, [X21,#-0x14]
.text:0000000000002FA8                 CBZ             X0, loc_305C
.text:0000000000002FAC                 MOV             W1, #0x7F011000
.text:0000000000002FB4                 B               loc_304C
.text:0000000000002FB8 ; ---------------------------------------------------------------------------
.text:0000000000002FB8 loc_2FB8                                ; CODE XREF: SOMXFLACD_COMP_SetParameter+2CC↑j
.text:0000000000002FB8                 MOV             X0, X20
.text:0000000000002FBC                 MOV             W1, #0x18
.text:0000000000002FC0                 BL              .SEC_OMX_Check_SizeVersion
.text:0000000000002FC4                 CBZ             W0, loc_3168
.text:0000000000002FC8                 ADRP            X20, #aVendorSamsungF_0@PAGE ; "vendor/samsung/frameworks/avcodec/mm_pr"...
.text:0000000000002FCC                 ADD             X20, X20, #aVendorSamsungF_0@PAGEOFF ; "vendor/samsung/frameworks/avcodec/mm_pr"...
.text:0000000000002FD0                 MOV             W19, W0
.text:0000000000002FD4                 MOV             W1, #0x2F ; '/'
.text:0000000000002FD8                 MOV             W2, #0x58 ; 'X'
.text:0000000000002FDC                 MOV             X0, X20
.text:0000000000002FE0                 BL              .__strrchr_chk
.text:0000000000002FE4                 CBZ             X0, loc_3000
.text:0000000000002FE8                 ADRP            X0, #aVendorSamsungF_0@PAGE ; "vendor/samsung/frameworks/avcodec/mm_pr"...
.text:0000000000002FEC                 ADD             X0, X0, #aVendorSamsungF_0@PAGEOFF ; "vendor/samsung/frameworks/avcodec/mm_pr"...
.text:0000000000002FF0                 MOV             W1, #0x2F ; '/'
.text:0000000000002FF4                 MOV             W2, #0x58 ; 'X'
.text:0000000000002FF8                 BL              .__strrchr_chk
.text:0000000000002FFC                 ADD             X20, X0, #1
.text:0000000000003000 loc_3000                                ; CODE XREF: SOMXFLACD_COMP_SetParameter+3E4↑j
.text:0000000000003000                 ADRP            X1, #aSecFlacDec@PAGE ; "SEC_FLAC_DEC"
.text:0000000000003004                 ADRP            X2, #aSDAssertionRet@PAGE ; "%s(%d): assertion: 'ret == OMX_ErrorNon"...
.text:0000000000003008                 ADD             X1, X1, #aSecFlacDec@PAGEOFF ; "SEC_FLAC_DEC"
.text:000000000000300C                 ADD             X2, X2, #aSDAssertionRet@PAGEOFF ; "%s(%d): assertion: 'ret == OMX_ErrorNon"...
.text:0000000000003010                 MOV             W0, #3
.text:0000000000003014                 MOV             X3, X20
.text:0000000000003018                 MOV             W4, #0xFC
.text:000000000000301C                 B               loc_2CDC
.text:0000000000003020 ; ---------------------------------------------------------------------------
.text:0000000000003020 loc_3020                                ; CODE XREF: SOMXFLACD_COMP_SetParameter+308↑j
.text:0000000000003020                 MOV             W8, #1
.text:0000000000003024                 MOV             W19, WZR
.text:0000000000003028                 STR             W8, [X21,#0x98]
.text:000000000000302C                 B               loc_2CE0
.text:0000000000003030 ; ---------------------------------------------------------------------------
.text:0000000000003030 loc_3030                                ; CODE XREF: SOMXFLACD_COMP_SetParameter+388↑j
.text:0000000000003030                 LDR             W8, [X20]
.text:0000000000003034                 STR             W8, [X21,#0x90]!
.text:0000000000003038                 LDUR            X0, [X21,#-0x10]
.text:000000000000303C                 CBZ             X0, loc_305C
.text:0000000000003040                 MOV             W8, #0x7F011000
.text:0000000000003048                 SUB             W1, W8, #0xFF6
.text:000000000000304C loc_304C                                ; CODE XREF: SOMXFLACD_COMP_SetParameter+2FC↑j
.text:000000000000304C                                         ; SOMXFLACD_COMP_SetParameter+3B4↑j
.text:000000000000304C                 MOV             X2, X21
.text:0000000000003050                 BL              .SOMXFLACD_SetParameter
.text:0000000000003054                 MOV             W19, WZR
.text:0000000000003058                 B               loc_2CE0
.text:000000000000305C ; ---------------------------------------------------------------------------
.text:000000000000305C loc_305C                                ; CODE XREF: SOMXFLACD_COMP_SetParameter+138↑j
.text:000000000000305C                                         ; SOMXFLACD_COMP_SetParameter+2EC↑j ...
.text:000000000000305C                 MOV             W19, WZR
.text:0000000000003060                 B               loc_2CE0
.text:0000000000003064 ; ---------------------------------------------------------------------------
.text:0000000000003064 loc_3064                                ; CODE XREF: SOMXFLACD_COMP_SetParameter+148↑j
.text:0000000000003064                                         ; SOMXFLACD_COMP_SetParameter+2DC↑j ...
.text:0000000000003064                 MOV             W1, W22
.text:0000000000003068                 MOV             X2, X20
.text:000000000000306C                 LDP             X29, X30, [SP,#0x30+var_s0]
.text:0000000000003070                 LDP             X20, X19, [SP,#0x30+var_10]
.text:0000000000003074                 LDP             X22, X21, [SP,#0x30+var_20]
.text:0000000000003078                 MOV             X0, X23
.text:000000000000307C                 LDP             X24, X23, [SP+0x30+var_30],#0x40
.text:0000000000003080                 B               .SEC_OMX_AudioDecodeSetParameter
.text:0000000000003084 ; ---------------------------------------------------------------------------
.text:0000000000003084 loc_3084                                ; CODE XREF: SOMXFLACD_COMP_SetParameter+158↑j
.text:0000000000003084                 LDR             W8, [X24,#0x10]
.text:0000000000003088                 ORR             W8, W8, #4
.text:000000000000308C                 CMP             W8, #5
.text:0000000000003090                 B.NE            loc_3240
.text:0000000000003094                 ADRP            X1, #aAudioDecoderFl@PAGE ; "audio_decoder.flac"
.text:0000000000003098                 ADD             X0, X20, #8
.text:000000000000309C                 ADD             X1, X1, #aAudioDecoderFl@PAGEOFF ; "audio_decoder.flac"
.text:00000000000030A0                 BL              .SEC_OSAL_Strcmp
.text:00000000000030A4                 CBZ             W0, loc_32A4
.text:00000000000030A8                 ADRP            X20, #aVendorSamsungF_0@PAGE ; "vendor/samsung/frameworks/avcodec/mm_pr"...
.text:00000000000030AC                 ADD             X20, X20, #aVendorSamsungF_0@PAGEOFF ; "vendor/samsung/frameworks/avcodec/mm_pr"...
.text:00000000000030B0                 MOV             W1, #0x2F ; '/'
.text:00000000000030B4                 MOV             W2, #0x58 ; 'X'
.text:00000000000030B8                 MOV             X0, X20
.text:00000000000030BC                 BL              .__strrchr_chk
.text:00000000000030C0                 CBZ             X0, loc_30DC
.text:00000000000030C4                 ADRP            X0, #aVendorSamsungF_0@PAGE ; "vendor/samsung/frameworks/avcodec/mm_pr"...
.text:00000000000030C8                 ADD             X0, X0, #aVendorSamsungF_0@PAGEOFF ; "vendor/samsung/frameworks/avcodec/mm_pr"...
.text:00000000000030CC                 MOV             W1, #0x2F ; '/'
.text:00000000000030D0                 MOV             W2, #0x58 ; 'X'
.text:00000000000030D4                 BL              .__strrchr_chk
.text:00000000000030D8                 ADD             X20, X0, #1
.text:00000000000030DC loc_30DC                                ; CODE XREF: SOMXFLACD_COMP_SetParameter+4C0↑j
.text:00000000000030DC                 MOV             W19, #0x1005
.text:00000000000030E0                 ADRP            X1, #aSecFlacDec@PAGE ; "SEC_FLAC_DEC"
.text:00000000000030E4                 ADRP            X2, #aSDAssertionRet@PAGE ; "%s(%d): assertion: 'ret == OMX_ErrorNon"...
.text:00000000000030E8                 MOVK            W19, #0x8000,LSL#16
.text:00000000000030EC                 ADD             X1, X1, #aSecFlacDec@PAGEOFF ; "SEC_FLAC_DEC"
.text:00000000000030F0                 ADD             X2, X2, #aSDAssertionRet@PAGEOFF ; "%s(%d): assertion: 'ret == OMX_ErrorNon"...
.text:00000000000030F4                 MOV             W4, #0x134
.text:00000000000030F8                 B               loc_2CD4
.text:00000000000030FC ; ---------------------------------------------------------------------------
.text:00000000000030FC loc_30FC                                ; CODE XREF: SOMXFLACD_COMP_SetParameter+328↑j
.text:00000000000030FC                 LDR             W8, [X20,#8]
.text:0000000000003100                 CMP             W8, #1
.text:0000000000003104                 B.NE            loc_31C4
.text:0000000000003108                 LDR             W3, [X20,#0x1C]
.text:000000000000310C                 ADRP            X1, #aSecFlacDec@PAGE ; "SEC_FLAC_DEC"
.text:0000000000003110                 LDR             W4, [X21,#0x34]
.text:0000000000003114                 ADRP            X2, #aSomxflacdCompS_1@PAGE ; "SOMXFLACD_COMP_SetParameter() bits %d:%"...
.text:0000000000003118                 LDR             W5, [X20,#0x10]
.text:000000000000311C                 ADD             X1, X1, #aSecFlacDec@PAGEOFF ; "SEC_FLAC_DEC"
.text:0000000000003120                 LDR             W6, [X21,#0x28]
.text:0000000000003124                 ADD             X2, X2, #aSomxflacdCompS_1@PAGEOFF ; "SOMXFLACD_COMP_SetParameter() bits %d:%"...
.text:0000000000003128                 MOV             W0, #3
.text:000000000000312C                 BL              .__android_log_print
.text:0000000000003130                 LDR             W8, [X20,#0x1C]
.text:0000000000003134                 LSR             W8, W8, #3
.text:0000000000003138                 STR             W8, [X21,#0x94]!
.text:000000000000313C                 LDUR            X0, [X21,#-0x14]
.text:0000000000003140                 SUB             X19, X21, #0x7C ; '|'
.text:0000000000003144                 CBZ             X0, loc_3158
.text:0000000000003148                 MOV             W1, #0x7F011000
.text:0000000000003150                 MOV             X2, X21
.text:0000000000003154                 BL              .SOMXFLACD_SetParameter
.text:0000000000003158 loc_3158                                ; CODE XREF: SOMXFLACD_COMP_SetParameter+544↑j
.text:0000000000003158                 MOV             W2, #0x68 ; 'h'
.text:000000000000315C                 MOV             X0, X19
.text:0000000000003160                 MOV             X1, X20
.text:0000000000003164                 B               loc_3234
.text:0000000000003168 ; ---------------------------------------------------------------------------
.text:0000000000003168 loc_3168                                ; CODE XREF: SOMXFLACD_COMP_SetParameter+3C4↑j
.text:0000000000003168                 LDR             W8, [X20,#8]
.text:000000000000316C                 CBZ             W8, loc_3228
.text:0000000000003170                 ADRP            X19, #aVendorSamsungF_0@PAGE ; "vendor/samsung/frameworks/avcodec/mm_pr"...
.text:0000000000003174                 ADD             X19, X19, #aVendorSamsungF_0@PAGEOFF ; "vendor/samsung/frameworks/avcodec/mm_pr"...
.text:0000000000003178                 MOV             W1, #0x2F ; '/'
.text:000000000000317C                 MOV             W2, #0x58 ; 'X'
.text:0000000000003180                 MOV             X0, X19
.text:0000000000003184                 BL              .__strrchr_chk
.text:0000000000003188                 CBZ             X0, loc_31A4
.text:000000000000318C                 ADRP            X0, #aVendorSamsungF_0@PAGE ; "vendor/samsung/frameworks/avcodec/mm_pr"...
.text:0000000000003190                 ADD             X0, X0, #aVendorSamsungF_0@PAGEOFF ; "vendor/samsung/frameworks/avcodec/mm_pr"...
.text:0000000000003194                 MOV             W1, #0x2F ; '/'
.text:0000000000003198                 MOV             W2, #0x58 ; 'X'
.text:000000000000319C                 BL              .__strrchr_chk
.text:00000000000031A0                 ADD             X19, X0, #1
.text:00000000000031A4 loc_31A4                                ; CODE XREF: SOMXFLACD_COMP_SetParameter+588↑j
.text:00000000000031A4                 ADRP            X1, #aSecFlacDec@PAGE ; "SEC_FLAC_DEC"
.text:00000000000031A8                 ADRP            X2, #aSDAssertionPsr@PAGE ; "%s(%d): assertion: 'pSrcFlacParam->nPor"...
.text:00000000000031AC                 ADD             X1, X1, #aSecFlacDec@PAGEOFF ; "SEC_FLAC_DEC"
.text:00000000000031B0                 ADD             X2, X2, #aSDAssertionPsr@PAGEOFF ; "%s(%d): assertion: 'pSrcFlacParam->nPor"...
.text:00000000000031B4                 MOV             W0, #3
.text:00000000000031B8                 MOV             X3, X19
.text:00000000000031BC                 MOV             W4, #0xFE
.text:00000000000031C0                 B               loc_3214
.text:00000000000031C4 ; ---------------------------------------------------------------------------
.text:00000000000031C4 loc_31C4                                ; CODE XREF: SOMXFLACD_COMP_SetParameter+504↑j
.text:00000000000031C4                 ADRP            X19, #aVendorSamsungF_0@PAGE ; "vendor/samsung/frameworks/avcodec/mm_pr"...
.text:00000000000031C8                 ADD             X19, X19, #aVendorSamsungF_0@PAGEOFF ; "vendor/samsung/frameworks/avcodec/mm_pr"...
.text:00000000000031CC                 MOV             W1, #0x2F ; '/'
.text:00000000000031D0                 MOV             W2, #0x58 ; 'X'
.text:00000000000031D4                 MOV             X0, X19
.text:00000000000031D8                 BL              .__strrchr_chk
.text:00000000000031DC                 CBZ             X0, loc_31F8
.text:00000000000031E0                 ADRP            X0, #aVendorSamsungF_0@PAGE ; "vendor/samsung/frameworks/avcodec/mm_pr"...
.text:00000000000031E4                 ADD             X0, X0, #aVendorSamsungF_0@PAGEOFF ; "vendor/samsung/frameworks/avcodec/mm_pr"...
.text:00000000000031E8                 MOV             W1, #0x2F ; '/'
.text:00000000000031EC                 MOV             W2, #0x58 ; 'X'
.text:00000000000031F0                 BL              .__strrchr_chk
.text:00000000000031F4                 ADD             X19, X0, #1
.text:00000000000031F8 loc_31F8                                ; CODE XREF: SOMXFLACD_COMP_SetParameter+5DC↑j
.text:00000000000031F8                 ADRP            X1, #aSecFlacDec@PAGE ; "SEC_FLAC_DEC"
.text:00000000000031FC                 ADRP            X2, #aSDAssertionPsr_0@PAGE ; "%s(%d): assertion: 'pSrcPcmParam->nPort"...
.text:0000000000003200                 ADD             X1, X1, #aSecFlacDec@PAGEOFF ; "SEC_FLAC_DEC"
.text:0000000000003204                 ADD             X2, X2, #aSDAssertionPsr_0@PAGEOFF ; "%s(%d): assertion: 'pSrcPcmParam->nPort"...
.text:0000000000003208                 MOV             W4, #0xDC
.text:000000000000320C                 MOV             W0, #3
.text:0000000000003210                 MOV             X3, X19
.text:0000000000003214 loc_3214                                ; CODE XREF: SOMXFLACD_COMP_SetParameter+5C0↑j
.text:0000000000003214                 BL              ._SEC_OSAL_Log
.text:0000000000003218                 MOV             W8, #0x80001005
.text:0000000000003220                 ADD             W19, W8, #0x16
.text:0000000000003224                 B               loc_2CE0
.text:0000000000003228 ; ---------------------------------------------------------------------------
.text:0000000000003228 loc_3228                                ; CODE XREF: SOMXFLACD_COMP_SetParameter+56C↑j
.text:0000000000003228                 MOV             X0, X21
.text:000000000000322C                 MOV             X1, X20
.text:0000000000003230                 MOV             W2, #0x18
.text:0000000000003234 loc_3234                                ; CODE XREF: SOMXFLACD_COMP_SetParameter+564↑j
.text:0000000000003234                 BL              .SEC_OSAL_Memcpy
.text:0000000000003238                 MOV             W19, WZR
.text:000000000000323C                 B               loc_2CE0
.text:0000000000003240 ; ---------------------------------------------------------------------------
.text:0000000000003240 loc_3240                                ; CODE XREF: SOMXFLACD_COMP_SetParameter+490↑j
.text:0000000000003240                 ADRP            X19, #aVendorSamsungF_0@PAGE ; "vendor/samsung/frameworks/avcodec/mm_pr"...
.text:0000000000003244                 ADD             X19, X19, #aVendorSamsungF_0@PAGEOFF ; "vendor/samsung/frameworks/avcodec/mm_pr"...
.text:0000000000003248                 MOV             W1, #0x2F ; '/'
.text:000000000000324C                 MOV             W2, #0x58 ; 'X'
.text:0000000000003250                 MOV             X0, X19
.text:0000000000003254                 BL              .__strrchr_chk
.text:0000000000003258                 CBZ             X0, loc_3274
.text:000000000000325C                 ADRP            X0, #aVendorSamsungF_0@PAGE ; "vendor/samsung/frameworks/avcodec/mm_pr"...
.text:0000000000003260                 ADD             X0, X0, #aVendorSamsungF_0@PAGEOFF ; "vendor/samsung/frameworks/avcodec/mm_pr"...
.text:0000000000003264                 MOV             W1, #0x2F ; '/'
.text:0000000000003268                 MOV             W2, #0x58 ; 'X'
.text:000000000000326C                 BL              .__strrchr_chk
.text:0000000000003270                 ADD             X19, X0, #1
.text:0000000000003274 loc_3274                                ; CODE XREF: SOMXFLACD_COMP_SetParameter+658↑j
.text:0000000000003274                 ADRP            X1, #aSecFlacDec@PAGE ; "SEC_FLAC_DEC"
.text:0000000000003278                 ADRP            X2, #aSDAssertionPse_0@PAGE ; "%s(%d): assertion: '(pSECComponent->cur"...
.text:000000000000327C                 ADD             X1, X1, #aSecFlacDec@PAGEOFF ; "SEC_FLAC_DEC"
.text:0000000000003280                 ADD             X2, X2, #aSDAssertionPse_0@PAGEOFF ; "%s(%d): assertion: '(pSECComponent->cur"...
.text:0000000000003284                 MOV             W4, #0x12D
.text:0000000000003288                 MOV             W0, #3
.text:000000000000328C                 MOV             X3, X19
.text:0000000000003290                 BL              ._SEC_OSAL_Log
.text:0000000000003294                 MOV             W8, #0x80001005
.text:000000000000329C                 ADD             W19, W8, #0x13
.text:00000000000032A0                 B               loc_2CE0
.text:00000000000032A4 ; ---------------------------------------------------------------------------
.text:00000000000032A4 loc_32A4                                ; CODE XREF: SOMXFLACD_COMP_SetParameter+4A4↑j
.text:00000000000032A4                 LDR             X8, [X24,#0x1A0]
.text:00000000000032A8                 MOV             W9, #0x1C
.text:00000000000032AC                 MOV             W19, WZR
.text:00000000000032B0                 STR             W9, [X8,#0x4C]
.text:00000000000032B4                 B               loc_2CE0
.text:00000000000032B4 ; } // starts at 2C00
.text:00000000000032B4 ; End of function SOMXFLACD_COMP_SetParameter
.text:00000000000032B8 ; =============== S U B R O U T I N E =======================================
.text:00000000000032B8 ; Attributes: bp-based frame
.text:00000000000032B8                 EXPORT SOMXFLACD_COMP_SetConfig
.text:00000000000032B8 SOMXFLACD_COMP_SetConfig                ; DATA XREF: LOAD:0000000000000630↑o
.text:00000000000032B8                                         ; .got:SOMXFLACD_COMP_SetConfig_ptr↓o
.text:00000000000032B8 var_20          = -0x20
.text:00000000000032B8 var_10          = -0x10
.text:00000000000032B8 var_s0          =  0
.text:00000000000032B8 ; __unwind {
.text:00000000000032B8                 STP             X22, X21, [SP,#-0x10+var_20]!
.text:00000000000032BC                 STP             X20, X19, [SP,#0x20+var_10]
.text:00000000000032C0                 STP             X29, X30, [SP,#0x20+var_s0]
.text:00000000000032C4                 ADD             X29, SP, #0x20
.text:00000000000032C8                 CBZ             X0, loc_3334
.text:00000000000032CC                 MOV             W21, W1
.text:00000000000032D0                 MOV             W1, #0xA8
.text:00000000000032D4                 MOV             X20, X2
.text:00000000000032D8                 MOV             X22, X0
.text:00000000000032DC                 BL              .SEC_OMX_Check_SizeVersion
.text:00000000000032E0                 CBZ             W0, loc_33A4
.text:00000000000032E4                 ADRP            X20, #aVendorSamsungF_0@PAGE ; "vendor/samsung/frameworks/avcodec/mm_pr"...
.text:00000000000032E8                 ADD             X20, X20, #aVendorSamsungF_0@PAGEOFF ; "vendor/samsung/frameworks/avcodec/mm_pr"...
.text:00000000000032EC                 MOV             W19, W0
.text:00000000000032F0                 MOV             W1, #0x2F ; '/'
.text:00000000000032F4                 MOV             W2, #0x58 ; 'X'
.text:00000000000032F8                 MOV             X0, X20
.text:00000000000032FC                 BL              .__strrchr_chk
.text:0000000000003300                 CBZ             X0, loc_331C
.text:0000000000003304                 ADRP            X0, #aVendorSamsungF_0@PAGE ; "vendor/samsung/frameworks/avcodec/mm_pr"...
.text:0000000000003308                 ADD             X0, X0, #aVendorSamsungF_0@PAGEOFF ; "vendor/samsung/frameworks/avcodec/mm_pr"...
.text:000000000000330C                 MOV             W1, #0x2F ; '/'
.text:0000000000003310                 MOV             W2, #0x58 ; 'X'
.text:0000000000003314                 BL              .__strrchr_chk
.text:0000000000003318                 ADD             X20, X0, #1
.text:000000000000331C loc_331C                                ; CODE XREF: SOMXFLACD_COMP_SetConfig+48↑j
.text:000000000000331C                 ADRP            X1, #aSecFlacDec@PAGE ; "SEC_FLAC_DEC"
.text:0000000000003320                 ADRP            X2, #aSDAssertionRet@PAGE ; "%s(%d): assertion: 'ret == OMX_ErrorNon"...
.text:0000000000003324                 ADD             X1, X1, #aSecFlacDec@PAGEOFF ; "SEC_FLAC_DEC"
.text:0000000000003328                 ADD             X2, X2, #aSDAssertionRet@PAGEOFF ; "%s(%d): assertion: 'ret == OMX_ErrorNon"...
.text:000000000000332C                 MOV             W4, #0x159
.text:0000000000003330                 B               loc_3384
.text:0000000000003334 ; ---------------------------------------------------------------------------
.text:0000000000003334 loc_3334                                ; CODE XREF: SOMXFLACD_COMP_SetConfig+10↑j
.text:0000000000003334                 ADRP            X20, #aVendorSamsungF_0@PAGE ; "vendor/samsung/frameworks/avcodec/mm_pr"...
.text:0000000000003338                 ADD             X20, X20, #aVendorSamsungF_0@PAGEOFF ; "vendor/samsung/frameworks/avcodec/mm_pr"...
.text:000000000000333C                 MOV             W1, #0x2F ; '/'
.text:0000000000003340                 MOV             W2, #0x58 ; 'X'
.text:0000000000003344                 MOV             X0, X20
.text:0000000000003348                 BL              .__strrchr_chk
.text:000000000000334C                 CBZ             X0, loc_3368
.text:0000000000003350                 ADRP            X0, #aVendorSamsungF_0@PAGE ; "vendor/samsung/frameworks/avcodec/mm_pr"...
.text:0000000000003354                 ADD             X0, X0, #aVendorSamsungF_0@PAGEOFF ; "vendor/samsung/frameworks/avcodec/mm_pr"...
.text:0000000000003358                 MOV             W1, #0x2F ; '/'
.text:000000000000335C                 MOV             W2, #0x58 ; 'X'
.text:0000000000003360                 BL              .__strrchr_chk
.text:0000000000003364                 ADD             X20, X0, #1
.text:0000000000003368 loc_3368                                ; CODE XREF: SOMXFLACD_COMP_SetConfig+94↑j
.text:0000000000003368                 MOV             W19, #0x1005
.text:000000000000336C                 ADRP            X1, #aSecFlacDec@PAGE ; "SEC_FLAC_DEC"
.text:0000000000003370                 ADRP            X2, #aSDAssertionPom_1@PAGE ; "%s(%d): assertion: 'pOMXComponent' fail"...
.text:0000000000003374                 MOVK            W19, #0x8000,LSL#16
.text:0000000000003378                 ADD             X1, X1, #aSecFlacDec@PAGEOFF ; "SEC_FLAC_DEC"
.text:000000000000337C                 ADD             X2, X2, #aSDAssertionPom_1@PAGEOFF ; "%s(%d): assertion: 'pOMXComponent' fail"...
.text:0000000000003380                 MOV             W4, #0x156
.text:0000000000003384 loc_3384                                ; CODE XREF: SOMXFLACD_COMP_SetConfig+78↑j
.text:0000000000003384                                         ; SOMXFLACD_COMP_SetConfig+1A4↓j ...
.text:0000000000003384                 MOV             W0, #3
.text:0000000000003388                 MOV             X3, X20
.text:000000000000338C                 BL              ._SEC_OSAL_Log
.text:0000000000003390 loc_3390                                ; CODE XREF: SOMXFLACD_COMP_SetConfig+25C↓j
.text:0000000000003390                                         ; SOMXFLACD_COMP_SetConfig+2F8↓j ...
.text:0000000000003390                 MOV             W0, W19
.text:0000000000003394                 LDP             X29, X30, [SP,#0x20+var_s0]
.text:0000000000003398                 LDP             X20, X19, [SP,#0x20+var_10]
.text:000000000000339C                 LDP             X22, X21, [SP+0x20+var_20],#0x30
.text:00000000000033A0                 RET
.text:00000000000033A4 ; ---------------------------------------------------------------------------
.text:00000000000033A4 loc_33A4                                ; CODE XREF: SOMXFLACD_COMP_SetConfig+28↑j
.text:00000000000033A4                 LDR             X8, [X22,#8]
.text:00000000000033A8                 CBZ             X8, loc_340C
.text:00000000000033AC                 CBZ             X20, loc_3460
.text:00000000000033B0                 LDR             W9, [X8,#0x10]
.text:00000000000033B4                 CBZ             W9, loc_34B4
.text:00000000000033B8                 LDR             X2, [X8,#0x40]
.text:00000000000033BC                 CBZ             X2, loc_3518
.text:00000000000033C0                 MOV             W8, #0x7F011000
.text:00000000000033C8                 CMP             W21, W8
.text:00000000000033CC                 B.EQ            loc_356C
.text:00000000000033D0                 MOV             W8, #0x7F01000A
.text:00000000000033D8                 CMP             W21, W8
.text:00000000000033DC                 B.EQ            loc_358C
.text:00000000000033E0                 MOV             W8, #0x7F010008
.text:00000000000033E8                 CMP             W21, W8
.text:00000000000033EC                 B.NE            loc_35BC
.text:00000000000033F0                 LDR             W8, [X20]
.text:00000000000033F4                 STR             W8, [X2,#0x8C]!
.text:00000000000033F8                 LDUR            X0, [X2,#-0xC]
.text:00000000000033FC                 CBZ             X0, loc_35B4
.text:0000000000003400                 MOV             W1, #0x7F010008
.text:0000000000003408                 B               loc_35A8
.text:000000000000340C ; ---------------------------------------------------------------------------
.text:000000000000340C loc_340C                                ; CODE XREF: SOMXFLACD_COMP_SetConfig+F0↑j
.text:000000000000340C                 ADRP            X20, #aVendorSamsungF_0@PAGE ; "vendor/samsung/frameworks/avcodec/mm_pr"...
.text:0000000000003410                 ADD             X20, X20, #aVendorSamsungF_0@PAGEOFF ; "vendor/samsung/frameworks/avcodec/mm_pr"...
.text:0000000000003414                 MOV             W1, #0x2F ; '/'
.text:0000000000003418                 MOV             W2, #0x58 ; 'X'
.text:000000000000341C                 MOV             X0, X20
.text:0000000000003420                 BL              .__strrchr_chk
.text:0000000000003424                 CBZ             X0, loc_3440
.text:0000000000003428                 ADRP            X0, #aVendorSamsungF_0@PAGE ; "vendor/samsung/frameworks/avcodec/mm_pr"...
.text:000000000000342C                 ADD             X0, X0, #aVendorSamsungF_0@PAGEOFF ; "vendor/samsung/frameworks/avcodec/mm_pr"...
.text:0000000000003430                 MOV             W1, #0x2F ; '/'
.text:0000000000003434                 MOV             W2, #0x58 ; 'X'
.text:0000000000003438                 BL              .__strrchr_chk
.text:000000000000343C                 ADD             X20, X0, #1
.text:0000000000003440 loc_3440                                ; CODE XREF: SOMXFLACD_COMP_SetConfig+16C↑j
.text:0000000000003440                 MOV             W19, #0x1005
.text:0000000000003444                 ADRP            X1, #aSecFlacDec@PAGE ; "SEC_FLAC_DEC"
.text:0000000000003448                 ADRP            X2, #aSDAssertionPom_0@PAGE ; "%s(%d): assertion: 'pOMXComponent->pCom"...
.text:000000000000344C                 MOVK            W19, #0x8000,LSL#16
.text:0000000000003450                 ADD             X1, X1, #aSecFlacDec@PAGEOFF ; "SEC_FLAC_DEC"
.text:0000000000003454                 ADD             X2, X2, #aSDAssertionPom_0@PAGEOFF ; "%s(%d): assertion: 'pOMXComponent->pCom"...
.text:0000000000003458                 MOV             W4, #0x15B
.text:000000000000345C                 B               loc_3384
.text:0000000000003460 ; ---------------------------------------------------------------------------
.text:0000000000003460 loc_3460                                ; CODE XREF: SOMXFLACD_COMP_SetConfig+F4↑j
.text:0000000000003460                 ADRP            X20, #aVendorSamsungF_0@PAGE ; "vendor/samsung/frameworks/avcodec/mm_pr"...
.text:0000000000003464                 ADD             X20, X20, #aVendorSamsungF_0@PAGEOFF ; "vendor/samsung/frameworks/avcodec/mm_pr"...
.text:0000000000003468                 MOV             W1, #0x2F ; '/'
.text:000000000000346C                 MOV             W2, #0x58 ; 'X'
.text:0000000000003470                 MOV             X0, X20
.text:0000000000003474                 BL              .__strrchr_chk
.text:0000000000003478                 CBZ             X0, loc_3494
.text:000000000000347C                 ADRP            X0, #aVendorSamsungF_0@PAGE ; "vendor/samsung/frameworks/avcodec/mm_pr"...
.text:0000000000003480                 ADD             X0, X0, #aVendorSamsungF_0@PAGEOFF ; "vendor/samsung/frameworks/avcodec/mm_pr"...
.text:0000000000003484                 MOV             W1, #0x2F ; '/'
.text:0000000000003488                 MOV             W2, #0x58 ; 'X'
.text:000000000000348C                 BL              .__strrchr_chk
.text:0000000000003490                 ADD             X20, X0, #1
.text:0000000000003494 loc_3494                                ; CODE XREF: SOMXFLACD_COMP_SetConfig+1C0↑j
.text:0000000000003494                 MOV             W19, #0x1005
.text:0000000000003498                 ADRP            X1, #aSecFlacDec@PAGE ; "SEC_FLAC_DEC"
.text:000000000000349C                 ADRP            X2, #aSDAssertionPco@PAGE ; "%s(%d): assertion: 'pComponentConfigStr"...
.text:00000000000034A0                 MOVK            W19, #0x8000,LSL#16
.text:00000000000034A4                 ADD             X1, X1, #aSecFlacDec@PAGEOFF ; "SEC_FLAC_DEC"
.text:00000000000034A8                 ADD             X2, X2, #aSDAssertionPco@PAGEOFF ; "%s(%d): assertion: 'pComponentConfigStr"...
.text:00000000000034AC                 MOV             W4, #0x15F
.text:00000000000034B0                 B               loc_3384
.text:00000000000034B4 ; ---------------------------------------------------------------------------
.text:00000000000034B4 loc_34B4                                ; CODE XREF: SOMXFLACD_COMP_SetConfig+FC↑j
.text:00000000000034B4                 ADRP            X19, #aVendorSamsungF_0@PAGE ; "vendor/samsung/frameworks/avcodec/mm_pr"...
.text:00000000000034B8                 ADD             X19, X19, #aVendorSamsungF_0@PAGEOFF ; "vendor/samsung/frameworks/avcodec/mm_pr"...
.text:00000000000034BC                 MOV             W1, #0x2F ; '/'
.text:00000000000034C0                 MOV             W2, #0x58 ; 'X'
.text:00000000000034C4                 MOV             X0, X19
.text:00000000000034C8                 BL              .__strrchr_chk
.text:00000000000034CC                 CBZ             X0, loc_34E8
.text:00000000000034D0                 ADRP            X0, #aVendorSamsungF_0@PAGE ; "vendor/samsung/frameworks/avcodec/mm_pr"...
.text:00000000000034D4                 ADD             X0, X0, #aVendorSamsungF_0@PAGEOFF ; "vendor/samsung/frameworks/avcodec/mm_pr"...
.text:00000000000034D8                 MOV             W1, #0x2F ; '/'
.text:00000000000034DC                 MOV             W2, #0x58 ; 'X'
.text:00000000000034E0                 BL              .__strrchr_chk
.text:00000000000034E4                 ADD             X19, X0, #1
.text:00000000000034E8 loc_34E8                                ; CODE XREF: SOMXFLACD_COMP_SetConfig+214↑j
.text:00000000000034E8                 ADRP            X1, #aSecFlacDec@PAGE ; "SEC_FLAC_DEC"
.text:00000000000034EC                 ADRP            X2, #aSDAssertionPse@PAGE ; "%s(%d): assertion: 'pSECComponent->curr"...
.text:00000000000034F0                 ADD             X1, X1, #aSecFlacDec@PAGEOFF ; "SEC_FLAC_DEC"
.text:00000000000034F4                 ADD             X2, X2, #aSDAssertionPse@PAGEOFF ; "%s(%d): assertion: 'pSECComponent->curr"...
.text:00000000000034F8                 MOV             W4, #0x160
.text:00000000000034FC                 MOV             W0, #3
.text:0000000000003500                 MOV             X3, X19
.text:0000000000003504                 BL              ._SEC_OSAL_Log
.text:0000000000003508                 MOV             W8, #0x80001005
.text:0000000000003510                 ADD             W19, W8, #5
.text:0000000000003514                 B               loc_3390
.text:0000000000003518 ; ---------------------------------------------------------------------------
.text:0000000000003518 loc_3518                                ; CODE XREF: SOMXFLACD_COMP_SetConfig+104↑j
.text:0000000000003518                 ADRP            X20, #aVendorSamsungF_0@PAGE ; "vendor/samsung/frameworks/avcodec/mm_pr"...
.text:000000000000351C                 ADD             X20, X20, #aVendorSamsungF_0@PAGEOFF ; "vendor/samsung/frameworks/avcodec/mm_pr"...
.text:0000000000003520                 MOV             W1, #0x2F ; '/'
.text:0000000000003524                 MOV             W2, #0x58 ; 'X'
.text:0000000000003528                 MOV             X0, X20
.text:000000000000352C                 BL              .__strrchr_chk
.text:0000000000003530                 CBZ             X0, loc_354C
.text:0000000000003534                 ADRP            X0, #aVendorSamsungF_0@PAGE ; "vendor/samsung/frameworks/avcodec/mm_pr"...
.text:0000000000003538                 ADD             X0, X0, #aVendorSamsungF_0@PAGEOFF ; "vendor/samsung/frameworks/avcodec/mm_pr"...
.text:000000000000353C                 MOV             W1, #0x2F ; '/'
.text:0000000000003540                 MOV             W2, #0x58 ; 'X'
.text:0000000000003544                 BL              .__strrchr_chk
.text:0000000000003548                 ADD             X20, X0, #1
.text:000000000000354C loc_354C                                ; CODE XREF: SOMXFLACD_COMP_SetConfig+278↑j
.text:000000000000354C                 MOV             W19, #0x1005
.text:0000000000003550                 ADRP            X1, #aSecFlacDec@PAGE ; "SEC_FLAC_DEC"
.text:0000000000003554                 ADRP            X2, #aSDAssertionPfl@PAGE ; "%s(%d): assertion: 'pFlacDec' failed"
.text:0000000000003558                 MOVK            W19, #0x8000,LSL#16
.text:000000000000355C                 ADD             X1, X1, #aSecFlacDec@PAGEOFF ; "SEC_FLAC_DEC"
.text:0000000000003560                 ADD             X2, X2, #aSDAssertionPfl@PAGEOFF ; "%s(%d): assertion: 'pFlacDec' failed"
.text:0000000000003564                 MOV             W4, #0x164
.text:0000000000003568                 B               loc_3384
.text:000000000000356C ; ---------------------------------------------------------------------------
.text:000000000000356C loc_356C                                ; CODE XREF: SOMXFLACD_COMP_SetConfig+114↑j
.text:000000000000356C                 LDR             W8, [X20]
.text:0000000000003570                 STR             W8, [X2,#0x94]!
.text:0000000000003574                 LDUR            X0, [X2,#-0x14]
.text:0000000000003578                 CBZ             X0, loc_35B4
.text:000000000000357C                 MOV             W8, #0x7F010008
.text:0000000000003584                 ADD             W1, W8, #0xFF8
.text:0000000000003588                 B               loc_35A8
.text:000000000000358C ; ---------------------------------------------------------------------------
.text:000000000000358C loc_358C                                ; CODE XREF: SOMXFLACD_COMP_SetConfig+124↑j
.text:000000000000358C                 LDR             W8, [X20]
.text:0000000000003590                 STR             W8, [X2,#0x90]!
.text:0000000000003594                 LDUR            X0, [X2,#-0x10]
.text:0000000000003598                 CBZ             X0, loc_35B4
.text:000000000000359C                 MOV             W8, #0x7F010008
.text:00000000000035A4                 ADD             W1, W8, #2
.text:00000000000035A8 loc_35A8                                ; CODE XREF: SOMXFLACD_COMP_SetConfig+150↑j
.text:00000000000035A8                                         ; SOMXFLACD_COMP_SetConfig+2D0↑j
.text:00000000000035A8                 BL              .SOMXFLACD_SetParameter
.text:00000000000035AC                 MOV             W19, WZR
.text:00000000000035B0                 B               loc_3390
.text:00000000000035B4 ; ---------------------------------------------------------------------------
.text:00000000000035B4 loc_35B4                                ; CODE XREF: SOMXFLACD_COMP_SetConfig+144↑j
.text:00000000000035B4                                         ; SOMXFLACD_COMP_SetConfig+2C0↑j ...
.text:00000000000035B4                 MOV             W19, WZR
.text:00000000000035B8                 B               loc_3390
.text:00000000000035BC ; ---------------------------------------------------------------------------
.text:00000000000035BC loc_35BC                                ; CODE XREF: SOMXFLACD_COMP_SetConfig+134↑j
.text:00000000000035BC                 MOV             X2, X20
.text:00000000000035C0                 LDP             X29, X30, [SP,#0x20+var_s0]
.text:00000000000035C4                 LDP             X20, X19, [SP,#0x20+var_10]
.text:00000000000035C8                 MOV             X0, X22
.text:00000000000035CC                 MOV             W1, W21
.text:00000000000035D0                 LDP             X22, X21, [SP+0x20+var_20],#0x30
.text:00000000000035D4                 B               .SEC_OMX_SetConfig
.text:00000000000035D4 ; } // starts at 32B8
.text:00000000000035D4 ; End of function SOMXFLACD_COMP_SetConfig
.text:00000000000035D8 ; =============== S U B R O U T I N E =======================================
.text:00000000000035D8 ; Attributes: bp-based frame
.text:00000000000035D8                 EXPORT SOMXFLACD_COMP_ComponentRoleEnum
.text:00000000000035D8 SOMXFLACD_COMP_ComponentRoleEnum        ; DATA XREF: LOAD:0000000000000618↑o
.text:00000000000035D8                                         ; .got:SOMXFLACD_COMP_ComponentRoleEnum_ptr↓o
.text:00000000000035D8 var_10          = -0x10
.text:00000000000035D8 var_s0          =  0
.text:00000000000035D8 ; __unwind {
.text:00000000000035D8                 STR             X19, [SP,#-0x10+var_10]!
.text:00000000000035DC                 STP             X29, X30, [SP,#0x10+var_s0]
.text:00000000000035E0                 ADD             X29, SP, #0x10
.text:00000000000035E4                 ADRP            X19, #aVendorSamsungF_0@PAGE ; "vendor/samsung/frameworks/avcodec/mm_pr"...
.text:00000000000035E8                 ADD             X19, X19, #aVendorSamsungF_0@PAGEOFF ; "vendor/samsung/frameworks/avcodec/mm_pr"...
.text:00000000000035EC                 MOV             W1, #0x2F ; '/'
.text:00000000000035F0                 MOV             W2, #0x58 ; 'X'
.text:00000000000035F4                 MOV             X0, X19
.text:00000000000035F8                 BL              .__strrchr_chk
.text:00000000000035FC                 CBZ             X0, loc_3618
.text:0000000000003600                 ADRP            X0, #aVendorSamsungF_0@PAGE ; "vendor/samsung/frameworks/avcodec/mm_pr"...
.text:0000000000003604                 ADD             X0, X0, #aVendorSamsungF_0@PAGEOFF ; "vendor/samsung/frameworks/avcodec/mm_pr"...
.text:0000000000003608                 MOV             W1, #0x2F ; '/'
.text:000000000000360C                 MOV             W2, #0x58 ; 'X'
.text:0000000000003610                 BL              .__strrchr_chk
.text:0000000000003614                 ADD             X19, X0, #1
.text:0000000000003618 loc_3618                                ; CODE XREF: SOMXFLACD_COMP_ComponentRoleEnum+24↑j
.text:0000000000003618                 ADRP            X1, #aSecFlacDec@PAGE ; "SEC_FLAC_DEC"
.text:000000000000361C                 ADRP            X2, #aSDAssertionPom_2@PAGE ; "%s(%d): assertion: 'pOMXComponent && cR"...
.text:0000000000003620                 ADD             X1, X1, #aSecFlacDec@PAGEOFF ; "SEC_FLAC_DEC"
.text:0000000000003624                 ADD             X2, X2, #aSDAssertionPom_2@PAGEOFF ; "%s(%d): assertion: 'pOMXComponent && cR"...
.text:0000000000003628                 MOV             W4, #0x19E
.text:000000000000362C                 MOV             W0, #3
.text:0000000000003630                 MOV             X3, X19
.text:0000000000003634                 BL              ._SEC_OSAL_Log
.text:0000000000003638                 LDP             X29, X30, [SP,#0x10+var_s0]
.text:000000000000363C                 MOV             W0, #0x80001005
.text:0000000000003644                 LDR             X19, [SP+0x10+var_10],#0x20
.text:0000000000003648                 RET
.text:0000000000003648 ; } // starts at 35D8
.text:0000000000003648 ; End of function SOMXFLACD_COMP_ComponentRoleEnum
.text:0000000000003648 ; ---------------------------------------------------------------------------
.text:000000000000364C                 ALIGN 0x10
.text:0000000000003650 ; =============== S U B R O U T I N E =======================================
.text:0000000000003650 ; Attributes: bp-based frame
.text:0000000000003650                 EXPORT SOMXFLACD_COMP_Init
.text:0000000000003650 SOMXFLACD_COMP_Init                     ; DATA XREF: LOAD:00000000000006D8↑o
.text:0000000000003650                                         ; .got:SOMXFLACD_COMP_Init_ptr↓o
.text:0000000000003650 var_2C          = -0x2C
.text:0000000000003650 var_28          = -0x28
.text:0000000000003650 var_20          = -0x20
.text:0000000000003650 var_10          = -0x10
.text:0000000000003650 var_s0          =  0
.text:0000000000003650 ; __unwind {
.text:0000000000003650                 SUB             SP, SP, #0x40
.text:0000000000003654                 STP             X22, X21, [SP,#0x30+var_20]
.text:0000000000003658                 STP             X20, X19, [SP,#0x30+var_10]
.text:000000000000365C                 STP             X29, X30, [SP,#0x30+var_s0]
.text:0000000000003660                 ADD             X29, SP, #0x30
.text:0000000000003664                 MRS             X21, #3, c13, c0, #2
.text:0000000000003668                 LDR             X8, [X21,#0x28]
.text:000000000000366C                 STR             X8, [SP,#0x30+var_28]
.text:0000000000003670                 STR             WZR, [SP,#0x30+var_2C]
.text:0000000000003674                 CBZ             X0, loc_372C
.text:0000000000003678                 LDR             X22, [X0,#8]
.text:000000000000367C                 CBZ             X22, loc_3784
.text:0000000000003680                 LDR             X19, [X22,#0x40]
.text:0000000000003684                 CBZ             X19, loc_37DC
.text:0000000000003688                 MOV             W20, #0x6000
.text:000000000000368C                 STR             XZR, [X19,#0x80]
.text:0000000000003690                 MOVK            W20, #9,LSL#16
.text:0000000000003694                 STR             WZR, [X19,#0x88]
.text:0000000000003698                 MOV             W0, W20
.text:000000000000369C                 BL              .SEC_OSAL_Malloc
.text:00000000000036A0                 STR             X0, [X22,#0xF0]
.text:00000000000036A4                 CBZ             X0, loc_3834
.text:00000000000036A8                 MOV             W1, WZR
.text:00000000000036AC                 MOV             W2, W20
.text:00000000000036B0                 BL              .SEC_OSAL_Memset
.text:00000000000036B4                 ADD             X0, SP, #0x30+var_2C
.text:00000000000036B8                 STR             W20, [X22,#0xF8]
.text:00000000000036BC                 BL              .SOMXFLACD_Init
.text:00000000000036C0                 LDR             W8, [SP,#0x30+var_2C]
.text:00000000000036C4                 STR             X0, [X19,#0x80]
.text:00000000000036C8                 CBZ             W8, loc_38C0
.text:00000000000036CC                 ADRP            X19, #aVendorSamsungF_0@PAGE ; "vendor/samsung/frameworks/avcodec/mm_pr"...
.text:00000000000036D0                 ADD             X19, X19, #aVendorSamsungF_0@PAGEOFF ; "vendor/samsung/frameworks/avcodec/mm_pr"...
.text:00000000000036D4                 MOV             W1, #0x2F ; '/'
.text:00000000000036D8                 MOV             W2, #0x58 ; 'X'
.text:00000000000036DC                 MOV             X0, X19
.text:00000000000036E0                 BL              .__strrchr_chk
.text:00000000000036E4                 CBZ             X0, loc_3700
.text:00000000000036E8                 ADRP            X0, #aVendorSamsungF_0@PAGE ; "vendor/samsung/frameworks/avcodec/mm_pr"...
.text:00000000000036EC                 ADD             X0, X0, #aVendorSamsungF_0@PAGEOFF ; "vendor/samsung/frameworks/avcodec/mm_pr"...
.text:00000000000036F0                 MOV             W1, #0x2F ; '/'
.text:00000000000036F4                 MOV             W2, #0x58 ; 'X'
.text:00000000000036F8                 BL              .__strrchr_chk
.text:00000000000036FC                 ADD             X19, X0, #1
.text:0000000000003700 loc_3700                                ; CODE XREF: SOMXFLACD_COMP_Init+94↑j
.text:0000000000003700                 ADRP            X1, #aSecFlacDec@PAGE ; "SEC_FLAC_DEC"
.text:0000000000003704                 ADRP            X2, #aSDAssertionRet@PAGE ; "%s(%d): assertion: 'ret == OMX_ErrorNon"...
.text:0000000000003708                 ADD             X1, X1, #aSecFlacDec@PAGEOFF ; "SEC_FLAC_DEC"
.text:000000000000370C                 ADD             X2, X2, #aSDAssertionRet@PAGEOFF ; "%s(%d): assertion: 'ret == OMX_ErrorNon"...
.text:0000000000003710                 MOV             W4, #0x1CA
.text:0000000000003714                 MOV             W0, #3
.text:0000000000003718                 MOV             X3, X19
.text:000000000000371C                 BL              ._SEC_OSAL_Log
.text:0000000000003720                 LDR             X0, [X22,#0xF0]
.text:0000000000003724                 BL              .SEC_OSAL_Free
.text:0000000000003728                 B               loc_3898
.text:000000000000372C ; ---------------------------------------------------------------------------
.text:000000000000372C loc_372C                                ; CODE XREF: SOMXFLACD_COMP_Init+24↑j
.text:000000000000372C                 ADRP            X19, #aVendorSamsungF_0@PAGE ; "vendor/samsung/frameworks/avcodec/mm_pr"...
.text:0000000000003730                 MOV             W8, #0x1005
.text:0000000000003734                 ADD             X19, X19, #aVendorSamsungF_0@PAGEOFF ; "vendor/samsung/frameworks/avcodec/mm_pr"...
.text:0000000000003738                 MOVK            W8, #0x8000,LSL#16
.text:000000000000373C                 MOV             W1, #0x2F ; '/'
.text:0000000000003740                 MOV             W2, #0x58 ; 'X'
.text:0000000000003744                 MOV             X0, X19
.text:0000000000003748                 STR             W8, [SP,#0x30+var_2C]
.text:000000000000374C                 BL              .__strrchr_chk
.text:0000000000003750                 CBZ             X0, loc_376C
.text:0000000000003754                 ADRP            X0, #aVendorSamsungF_0@PAGE ; "vendor/samsung/frameworks/avcodec/mm_pr"...
.text:0000000000003758                 ADD             X0, X0, #aVendorSamsungF_0@PAGEOFF ; "vendor/samsung/frameworks/avcodec/mm_pr"...
.text:000000000000375C                 MOV             W1, #0x2F ; '/'
.text:0000000000003760                 MOV             W2, #0x58 ; 'X'
.text:0000000000003764                 BL              .__strrchr_chk
.text:0000000000003768                 ADD             X19, X0, #1
.text:000000000000376C loc_376C                                ; CODE XREF: SOMXFLACD_COMP_Init+100↑j
.text:000000000000376C                 ADRP            X1, #aSecFlacDec@PAGE ; "SEC_FLAC_DEC"
.text:0000000000003770                 ADRP            X2, #aSDAssertionPom_1@PAGE ; "%s(%d): assertion: 'pOMXComponent' fail"...
.text:0000000000003774                 ADD             X1, X1, #aSecFlacDec@PAGEOFF ; "SEC_FLAC_DEC"
.text:0000000000003778                 ADD             X2, X2, #aSDAssertionPom_1@PAGEOFF ; "%s(%d): assertion: 'pOMXComponent' fail"...
.text:000000000000377C                 MOV             W4, #0x1B7
.text:0000000000003780                 B               loc_388C
.text:0000000000003784 ; ---------------------------------------------------------------------------
.text:0000000000003784 loc_3784                                ; CODE XREF: SOMXFLACD_COMP_Init+2C↑j
.text:0000000000003784                 ADRP            X19, #aVendorSamsungF_0@PAGE ; "vendor/samsung/frameworks/avcodec/mm_pr"...
.text:0000000000003788                 MOV             W8, #0x1005
.text:000000000000378C                 ADD             X19, X19, #aVendorSamsungF_0@PAGEOFF ; "vendor/samsung/frameworks/avcodec/mm_pr"...
.text:0000000000003790                 MOVK            W8, #0x8000,LSL#16
.text:0000000000003794                 MOV             W1, #0x2F ; '/'
.text:0000000000003798                 MOV             W2, #0x58 ; 'X'
.text:000000000000379C                 MOV             X0, X19
.text:00000000000037A0                 STR             W8, [SP,#0x30+var_2C]
.text:00000000000037A4                 BL              .__strrchr_chk
.text:00000000000037A8                 CBZ             X0, loc_37C4
.text:00000000000037AC                 ADRP            X0, #aVendorSamsungF_0@PAGE ; "vendor/samsung/frameworks/avcodec/mm_pr"...
.text:00000000000037B0                 ADD             X0, X0, #aVendorSamsungF_0@PAGEOFF ; "vendor/samsung/frameworks/avcodec/mm_pr"...
.text:00000000000037B4                 MOV             W1, #0x2F ; '/'
.text:00000000000037B8                 MOV             W2, #0x58 ; 'X'
.text:00000000000037BC                 BL              .__strrchr_chk
.text:00000000000037C0                 ADD             X19, X0, #1
.text:00000000000037C4 loc_37C4                                ; CODE XREF: SOMXFLACD_COMP_Init+158↑j
.text:00000000000037C4                 ADRP            X1, #aSecFlacDec@PAGE ; "SEC_FLAC_DEC"
.text:00000000000037C8                 ADRP            X2, #aSDAssertionPse_1@PAGE ; "%s(%d): assertion: 'pSECComponent' fail"...
.text:00000000000037CC                 ADD             X1, X1, #aSecFlacDec@PAGEOFF ; "SEC_FLAC_DEC"
.text:00000000000037D0                 ADD             X2, X2, #aSDAssertionPse_1@PAGEOFF ; "%s(%d): assertion: 'pSECComponent' fail"...
.text:00000000000037D4                 MOV             W4, #0x1B9
.text:00000000000037D8                 B               loc_388C
.text:00000000000037DC ; ---------------------------------------------------------------------------
.text:00000000000037DC loc_37DC                                ; CODE XREF: SOMXFLACD_COMP_Init+34↑j
.text:00000000000037DC                 ADRP            X19, #aVendorSamsungF_0@PAGE ; "vendor/samsung/frameworks/avcodec/mm_pr"...
.text:00000000000037E0                 MOV             W8, #0x1005
.text:00000000000037E4                 ADD             X19, X19, #aVendorSamsungF_0@PAGEOFF ; "vendor/samsung/frameworks/avcodec/mm_pr"...
.text:00000000000037E8                 MOVK            W8, #0x8000,LSL#16
.text:00000000000037EC                 MOV             W1, #0x2F ; '/'
.text:00000000000037F0                 MOV             W2, #0x58 ; 'X'
.text:00000000000037F4                 MOV             X0, X19
.text:00000000000037F8                 STR             W8, [SP,#0x30+var_2C]
.text:00000000000037FC                 BL              .__strrchr_chk
.text:0000000000003800                 CBZ             X0, loc_381C
.text:0000000000003804                 ADRP            X0, #aVendorSamsungF_0@PAGE ; "vendor/samsung/frameworks/avcodec/mm_pr"...
.text:0000000000003808                 ADD             X0, X0, #aVendorSamsungF_0@PAGEOFF ; "vendor/samsung/frameworks/avcodec/mm_pr"...
.text:000000000000380C                 MOV             W1, #0x2F ; '/'
.text:0000000000003810                 MOV             W2, #0x58 ; 'X'
.text:0000000000003814                 BL              .__strrchr_chk
.text:0000000000003818                 ADD             X19, X0, #1
.text:000000000000381C loc_381C                                ; CODE XREF: SOMXFLACD_COMP_Init+1B0↑j
.text:000000000000381C                 ADRP            X1, #aSecFlacDec@PAGE ; "SEC_FLAC_DEC"
.text:0000000000003820                 ADRP            X2, #aSDAssertionPfl@PAGE ; "%s(%d): assertion: 'pFlacDec' failed"
.text:0000000000003824                 ADD             X1, X1, #aSecFlacDec@PAGEOFF ; "SEC_FLAC_DEC"
.text:0000000000003828                 ADD             X2, X2, #aSDAssertionPfl@PAGEOFF ; "%s(%d): assertion: 'pFlacDec' failed"
.text:000000000000382C                 MOV             W4, #0x1BC
.text:0000000000003830                 B               loc_388C
.text:0000000000003834 ; ---------------------------------------------------------------------------
.text:0000000000003834 loc_3834                                ; CODE XREF: SOMXFLACD_COMP_Init+54↑j
.text:0000000000003834                 MOV             W8, #0x1005
.text:0000000000003838                 ADRP            X19, #aVendorSamsungF_0@PAGE ; "vendor/samsung/frameworks/avcodec/mm_pr"...
.text:000000000000383C                 MOVK            W8, #0x8000,LSL#16
.text:0000000000003840                 ADD             X19, X19, #aVendorSamsungF_0@PAGEOFF ; "vendor/samsung/frameworks/avcodec/mm_pr"...
.text:0000000000003844                 SUB             W8, W8, #5
.text:0000000000003848                 MOV             W1, #0x2F ; '/'
.text:000000000000384C                 MOV             W2, #0x58 ; 'X'
.text:0000000000003850                 MOV             X0, X19
.text:0000000000003854                 STR             W8, [SP,#0x30+var_2C]
.text:0000000000003858                 BL              .__strrchr_chk
.text:000000000000385C                 CBZ             X0, loc_3878
.text:0000000000003860                 ADRP            X0, #aVendorSamsungF_0@PAGE ; "vendor/samsung/frameworks/avcodec/mm_pr"...
.text:0000000000003864                 ADD             X0, X0, #aVendorSamsungF_0@PAGEOFF ; "vendor/samsung/frameworks/avcodec/mm_pr"...
.text:0000000000003868                 MOV             W1, #0x2F ; '/'
.text:000000000000386C                 MOV             W2, #0x58 ; 'X'
.text:0000000000003870                 BL              .__strrchr_chk
.text:0000000000003874                 ADD             X19, X0, #1
.text:0000000000003878 loc_3878                                ; CODE XREF: SOMXFLACD_COMP_Init+20C↑j
.text:0000000000003878                 ADRP            X1, #aSecFlacDec@PAGE ; "SEC_FLAC_DEC"
.text:000000000000387C                 ADRP            X2, #aSDAssertionPse_2@PAGE ; "%s(%d): assertion: 'pSECComponent->proc"...
.text:0000000000003880                 ADD             X1, X1, #aSecFlacDec@PAGEOFF ; "SEC_FLAC_DEC"
.text:0000000000003884                 ADD             X2, X2, #aSDAssertionPse_2@PAGEOFF ; "%s(%d): assertion: 'pSECComponent->proc"...
.text:0000000000003888                 MOV             W4, #0x1C3
.text:000000000000388C loc_388C                                ; CODE XREF: SOMXFLACD_COMP_Init+130↑j
.text:000000000000388C                                         ; SOMXFLACD_COMP_Init+188↑j ...
.text:000000000000388C                 MOV             W0, #3
.text:0000000000003890                 MOV             X3, X19
.text:0000000000003894                 BL              ._SEC_OSAL_Log
.text:0000000000003898 loc_3898                                ; CODE XREF: SOMXFLACD_COMP_Init+D8↑j
.text:0000000000003898                                         ; SOMXFLACD_COMP_Init+2D8↓j
.text:0000000000003898                 LDR             W0, [SP,#0x30+var_2C]
.text:000000000000389C                 LDR             X8, [X21,#0x28]
.text:00000000000038A0                 LDR             X9, [SP,#0x30+var_28]
.text:00000000000038A4                 CMP             X8, X9
.text:00000000000038A8                 B.NE            loc_392C
.text:00000000000038AC                 LDP             X29, X30, [SP,#0x30+var_s0]
.text:00000000000038B0                 LDP             X20, X19, [SP,#0x30+var_10]
.text:00000000000038B4                 LDP             X22, X21, [SP,#0x30+var_20]
.text:00000000000038B8                 ADD             SP, SP, #0x40 ; '@'
.text:00000000000038BC                 RET
.text:00000000000038C0 ; ---------------------------------------------------------------------------
.text:00000000000038C0 loc_38C0                                ; CODE XREF: SOMXFLACD_COMP_Init+78↑j
.text:00000000000038C0                 MOV             W20, #0x7F010008
.text:00000000000038C8                 ADD             X2, X19, #0x8C
.text:00000000000038CC                 MOV             W1, W20
.text:00000000000038D0                 BL              .SOMXFLACD_SetParameter
.text:00000000000038D4                 LDR             X0, [X19,#0x80]
.text:00000000000038D8                 ADD             X2, X19, #0x90
.text:00000000000038DC                 ADD             W1, W20, #2
.text:00000000000038E0                 BL              .SOMXFLACD_SetParameter
.text:00000000000038E4                 LDR             X0, [X19,#0x80]
.text:00000000000038E8                 ADD             X2, X19, #0x94
.text:00000000000038EC                 ADD             W1, W20, #0xFF8
.text:00000000000038F0                 BL              .SOMXFLACD_SetParameter
.text:00000000000038F4                 ADRP            X9, #qword_10F0@PAGE
.text:00000000000038F8                 MOV             W8, #0xAC44
.text:00000000000038FC                 LDR             D0, [X9,#qword_10F0@PAGEOFF]
.text:0000000000003900                 STR             W8, [X19,#0xA0]!
.text:0000000000003904                 MOV             W8, #1
.text:0000000000003908                 STR             XZR, [X19,#8]
.text:000000000000390C                 ADD             X1, X19, #0x18
.text:0000000000003910                 STP             XZR, XZR, [X19,#0x20]
.text:0000000000003914                 MOV             X0, X19
.text:0000000000003918                 STR             D0, [X19,#0x10]
.text:000000000000391C                 STUR            W8, [X19,#-8]
.text:0000000000003920                 BL              .SOMX_TS_GetFrameDuration
.text:0000000000003924                 STR             WZR, [X22,#0x2A4]
.text:0000000000003928                 B               loc_3898
.text:000000000000392C ; ---------------------------------------------------------------------------
.text:000000000000392C loc_392C                                ; CODE XREF: SOMXFLACD_COMP_Init+258↑j
.text:000000000000392C                 BL              .__stack_chk_fail
.text:000000000000392C ; } // starts at 3650
.text:000000000000392C ; End of function SOMXFLACD_COMP_Init
.text:0000000000003930 ; =============== S U B R O U T I N E =======================================
.text:0000000000003930 ; Attributes: bp-based frame
.text:0000000000003930                 EXPORT SOMXFLACD_COMP_Terminate
.text:0000000000003930 SOMXFLACD_COMP_Terminate                ; DATA XREF: LOAD:0000000000000588↑o
.text:0000000000003930                                         ; .got:SOMXFLACD_COMP_Terminate_ptr↓o
.text:0000000000003930 var_10          = -0x10
.text:0000000000003930 var_s0          =  0
.text:0000000000003930 ; __unwind {
.text:0000000000003930                 STP             X20, X19, [SP,#-0x10+var_10]!
.text:0000000000003934                 STP             X29, X30, [SP,#0x10+var_s0]
.text:0000000000003938                 ADD             X29, SP, #0x10
.text:000000000000393C                 CBZ             X0, loc_3974
.text:0000000000003940                 LDR             X19, [X0,#8]
.text:0000000000003944                 CBZ             X19, loc_39C8
.text:0000000000003948                 LDR             X20, [X19,#0x40]
.text:000000000000394C                 CBZ             X20, loc_3A1C
.text:0000000000003950                 LDR             X0, [X19,#0xF0]
.text:0000000000003954                 CBZ             X0, loc_3964
.text:0000000000003958                 BL              .SEC_OSAL_Free
.text:000000000000395C                 STR             XZR, [X19,#0xF0]
.text:0000000000003960                 STR             WZR, [X19,#0xF8]
.text:0000000000003964 loc_3964                                ; CODE XREF: SOMXFLACD_COMP_Terminate+24↑j
.text:0000000000003964                 LDR             X0, [X20,#0x80]
.text:0000000000003968                 BL              .SOMXFLACD_Terminate
.text:000000000000396C                 MOV             W19, WZR
.text:0000000000003970                 B               loc_3A78
.text:0000000000003974 ; ---------------------------------------------------------------------------
.text:0000000000003974 loc_3974                                ; CODE XREF: SOMXFLACD_COMP_Terminate+C↑j
.text:0000000000003974                 ADRP            X20, #aVendorSamsungF_0@PAGE ; "vendor/samsung/frameworks/avcodec/mm_pr"...
.text:0000000000003978                 ADD             X20, X20, #aVendorSamsungF_0@PAGEOFF ; "vendor/samsung/frameworks/avcodec/mm_pr"...
.text:000000000000397C                 MOV             W1, #0x2F ; '/'
.text:0000000000003980                 MOV             W2, #0x58 ; 'X'
.text:0000000000003984                 MOV             X0, X20
.text:0000000000003988                 BL              .__strrchr_chk
.text:000000000000398C                 CBZ             X0, loc_39A8
.text:0000000000003990                 ADRP            X0, #aVendorSamsungF_0@PAGE ; "vendor/samsung/frameworks/avcodec/mm_pr"...
.text:0000000000003994                 ADD             X0, X0, #aVendorSamsungF_0@PAGEOFF ; "vendor/samsung/frameworks/avcodec/mm_pr"...
.text:0000000000003998                 MOV             W1, #0x2F ; '/'
.text:000000000000399C                 MOV             W2, #0x58 ; 'X'
.text:00000000000039A0                 BL              .__strrchr_chk
.text:00000000000039A4                 ADD             X20, X0, #1
.text:00000000000039A8 loc_39A8                                ; CODE XREF: SOMXFLACD_COMP_Terminate+5C↑j
.text:00000000000039A8                 MOV             W19, #0x1005
.text:00000000000039AC                 ADRP            X1, #aSecFlacDec@PAGE ; "SEC_FLAC_DEC"
.text:00000000000039B0                 ADRP            X2, #aSDAssertionPom_1@PAGE ; "%s(%d): assertion: 'pOMXComponent' fail"...
.text:00000000000039B4                 MOVK            W19, #0x8000,LSL#16
.text:00000000000039B8                 ADD             X1, X1, #aSecFlacDec@PAGEOFF ; "SEC_FLAC_DEC"
.text:00000000000039BC                 ADD             X2, X2, #aSDAssertionPom_1@PAGEOFF ; "%s(%d): assertion: 'pOMXComponent' fail"...
.text:00000000000039C0                 MOV             W4, #0x1F5
.text:00000000000039C4                 B               loc_3A6C
.text:00000000000039C8 ; ---------------------------------------------------------------------------
.text:00000000000039C8 loc_39C8                                ; CODE XREF: SOMXFLACD_COMP_Terminate+14↑j
.text:00000000000039C8                 ADRP            X20, #aVendorSamsungF_0@PAGE ; "vendor/samsung/frameworks/avcodec/mm_pr"...
.text:00000000000039CC                 ADD             X20, X20, #aVendorSamsungF_0@PAGEOFF ; "vendor/samsung/frameworks/avcodec/mm_pr"...
.text:00000000000039D0                 MOV             W1, #0x2F ; '/'
.text:00000000000039D4                 MOV             W2, #0x58 ; 'X'
.text:00000000000039D8                 MOV             X0, X20
.text:00000000000039DC                 BL              .__strrchr_chk
.text:00000000000039E0                 CBZ             X0, loc_39FC
.text:00000000000039E4                 ADRP            X0, #aVendorSamsungF_0@PAGE ; "vendor/samsung/frameworks/avcodec/mm_pr"...
.text:00000000000039E8                 ADD             X0, X0, #aVendorSamsungF_0@PAGEOFF ; "vendor/samsung/frameworks/avcodec/mm_pr"...
.text:00000000000039EC                 MOV             W1, #0x2F ; '/'
.text:00000000000039F0                 MOV             W2, #0x58 ; 'X'
.text:00000000000039F4                 BL              .__strrchr_chk
.text:00000000000039F8                 ADD             X20, X0, #1
.text:00000000000039FC loc_39FC                                ; CODE XREF: SOMXFLACD_COMP_Terminate+B0↑j
.text:00000000000039FC                 MOV             W19, #0x1005
.text:0000000000003A00                 ADRP            X1, #aSecFlacDec@PAGE ; "SEC_FLAC_DEC"
.text:0000000000003A04                 ADRP            X2, #aSDAssertionPse_1@PAGE ; "%s(%d): assertion: 'pSECComponent' fail"...
.text:0000000000003A08                 MOVK            W19, #0x8000,LSL#16
.text:0000000000003A0C                 ADD             X1, X1, #aSecFlacDec@PAGEOFF ; "SEC_FLAC_DEC"
.text:0000000000003A10                 ADD             X2, X2, #aSDAssertionPse_1@PAGEOFF ; "%s(%d): assertion: 'pSECComponent' fail"...
.text:0000000000003A14                 MOV             W4, #0x1F7
.text:0000000000003A18                 B               loc_3A6C
.text:0000000000003A1C ; ---------------------------------------------------------------------------
.text:0000000000003A1C loc_3A1C                                ; CODE XREF: SOMXFLACD_COMP_Terminate+1C↑j
.text:0000000000003A1C                 ADRP            X20, #aVendorSamsungF_0@PAGE ; "vendor/samsung/frameworks/avcodec/mm_pr"...
.text:0000000000003A20                 ADD             X20, X20, #aVendorSamsungF_0@PAGEOFF ; "vendor/samsung/frameworks/avcodec/mm_pr"...
.text:0000000000003A24                 MOV             W1, #0x2F ; '/'
.text:0000000000003A28                 MOV             W2, #0x58 ; 'X'
.text:0000000000003A2C                 MOV             X0, X20
.text:0000000000003A30                 BL              .__strrchr_chk
.text:0000000000003A34                 CBZ             X0, loc_3A50
.text:0000000000003A38                 ADRP            X0, #aVendorSamsungF_0@PAGE ; "vendor/samsung/frameworks/avcodec/mm_pr"...
.text:0000000000003A3C                 ADD             X0, X0, #aVendorSamsungF_0@PAGEOFF ; "vendor/samsung/frameworks/avcodec/mm_pr"...
.text:0000000000003A40                 MOV             W1, #0x2F ; '/'
.text:0000000000003A44                 MOV             W2, #0x58 ; 'X'
.text:0000000000003A48                 BL              .__strrchr_chk
.text:0000000000003A4C                 ADD             X20, X0, #1
.text:0000000000003A50 loc_3A50                                ; CODE XREF: SOMXFLACD_COMP_Terminate+104↑j
.text:0000000000003A50                 MOV             W19, #0x1005
.text:0000000000003A54                 ADRP            X1, #aSecFlacDec@PAGE ; "SEC_FLAC_DEC"
.text:0000000000003A58                 ADRP            X2, #aSDAssertionPfl@PAGE ; "%s(%d): assertion: 'pFlacDec' failed"
.text:0000000000003A5C                 MOVK            W19, #0x8000,LSL#16
.text:0000000000003A60                 ADD             X1, X1, #aSecFlacDec@PAGEOFF ; "SEC_FLAC_DEC"
.text:0000000000003A64                 ADD             X2, X2, #aSDAssertionPfl@PAGEOFF ; "%s(%d): assertion: 'pFlacDec' failed"
.text:0000000000003A68                 MOV             W4, #0x1F9
.text:0000000000003A6C loc_3A6C                                ; CODE XREF: SOMXFLACD_COMP_Terminate+94↑j
.text:0000000000003A6C                                         ; SOMXFLACD_COMP_Terminate+E8↑j
.text:0000000000003A6C                 MOV             W0, #3
.text:0000000000003A70                 MOV             X3, X20
.text:0000000000003A74                 BL              ._SEC_OSAL_Log
.text:0000000000003A78 loc_3A78                                ; CODE XREF: SOMXFLACD_COMP_Terminate+40↑j
.text:0000000000003A78                 LDP             X29, X30, [SP,#0x10+var_s0]
.text:0000000000003A7C                 MOV             W0, W19
.text:0000000000003A80                 LDP             X20, X19, [SP+0x10+var_10],#0x20
.text:0000000000003A84                 RET
.text:0000000000003A84 ; } // starts at 3930
.text:0000000000003A84 ; End of function SOMXFLACD_COMP_Terminate
.text:0000000000003A88 ; =============== S U B R O U T I N E =======================================
.text:0000000000003A88 ; Attributes: bp-based frame
.text:0000000000003A88                 EXPORT SOMXFLACD_COMP_Decode
.text:0000000000003A88 SOMXFLACD_COMP_Decode                   ; CODE XREF: .SOMXFLACD_COMP_Decode+C↓j
.text:0000000000003A88                                         ; DATA XREF: LOAD:00000000000006C0↑o ...
.text:0000000000003A88 var_148         = -0x148
.text:0000000000003A88 var_144         = -0x144
.text:0000000000003A88 var_140         = -0x140
.text:0000000000003A88 var_138         = -0x138
.text:0000000000003A88 var_134         = -0x134
.text:0000000000003A88 var_130         = -0x130
.text:0000000000003A88 var_128         = -0x128
.text:0000000000003A88 var_124         = -0x124
.text:0000000000003A88 var_120         = -0x120
.text:0000000000003A88 var_110         = -0x110
.text:0000000000003A88 var_10C         = -0x10C
.text:0000000000003A88 var_C0          = -0xC0
.text:0000000000003A88 var_B0          = -0xB0
.text:0000000000003A88 var_AC          = -0xAC
.text:0000000000003A88 var_60          = -0x60
.text:0000000000003A88 var_50          = -0x50
.text:0000000000003A88 var_40          = -0x40
.text:0000000000003A88 var_30          = -0x30
.text:0000000000003A88 var_20          = -0x20
.text:0000000000003A88 var_10          = -0x10
.text:0000000000003A88 var_s0          =  0
.text:0000000000003A88 ; __unwind {
.text:0000000000003A88                 SUB             SP, SP, #0x160
.text:0000000000003A8C                 STP             X28, X27, [SP,#0x150+var_50]
.text:0000000000003A90                 STP             X26, X25, [SP,#0x150+var_40]
.text:0000000000003A94                 STP             X24, X23, [SP,#0x150+var_30]
.text:0000000000003A98                 STP             X22, X21, [SP,#0x150+var_20]
.text:0000000000003A9C                 STP             X20, X19, [SP,#0x150+var_10]
.text:0000000000003AA0                 STP             X29, X30, [SP,#0x150+var_s0]
.text:0000000000003AA4                 ADD             X29, SP, #0x150
.text:0000000000003AA8                 MRS             X25, #3, c13, c0, #2
.text:0000000000003AAC                 LDR             X8, [X25,#0x28]
.text:0000000000003AB0                 STUR            X8, [X29,#var_60]
.text:0000000000003AB4                 CBZ             X0, loc_3C48
.text:0000000000003AB8                 LDR             X27, [X0,#8]
.text:0000000000003ABC                 MOV             X20, X0
.text:0000000000003AC0                 CBZ             X27, loc_3C9C
.text:0000000000003AC4                 LDR             X26, [X27,#0x40]
.text:0000000000003AC8                 CBZ             X26, loc_3CF0
.text:0000000000003ACC                 ADD             X21, X26, #0xA0
.text:0000000000003AD0                 ADD             X22, X2, #0x20 ; ' '
.text:0000000000003AD4                 MOV             X19, X1
.text:0000000000003AD8                 MOV             X0, X21
.text:0000000000003ADC                 MOV             X1, X22
.text:0000000000003AE0                 MOV             X24, X2
.text:0000000000003AE4                 BL              .SOMX_TS_GetConvertedTs
.text:0000000000003AE8                 STR             WZR, [X24,#0xC]
.text:0000000000003AEC                 STR             XZR, [X24,#0x10]
.text:0000000000003AF0                 LDR             W8, [X19,#0xC]
.text:0000000000003AF4                 CBZ             W8, loc_3D80
.text:0000000000003AF8                 ADD             X0, SP, #0x150+var_C0
.text:0000000000003AFC                 MOV             W1, WZR
.text:0000000000003B00                 MOV             W2, #0x60 ; '`'
.text:0000000000003B04                 BL              .SEC_OSAL_Memset
.text:0000000000003B08                 MOV             W2, #0x68 ; 'h'
.text:0000000000003B0C                 ADD             X0, SP, #0x150+var_128
.text:0000000000003B10                 MOV             W1, WZR
.text:0000000000003B14                 BL              .SEC_OSAL_Memset
.text:0000000000003B18                 ADD             X0, SP, #0x150+var_148
.text:0000000000003B1C                 MOV             W1, WZR
.text:0000000000003B20                 MOV             W2, #0x20 ; ' '
.text:0000000000003B24                 BL              .SEC_OSAL_Memset
.text:0000000000003B28                 LDR             X8, [X19]
.text:0000000000003B2C                 ADRP            X10, #qword_10E0@PAGE
.text:0000000000003B30                 LDP             W9, W11, [X19,#0x10]
.text:0000000000003B34                 LDR             D0, [X10,#qword_10E0@PAGEOFF]
.text:0000000000003B38                 ADD             X8, X8, X9
.text:0000000000003B3C                 STR             W11, [SP,#0x150+var_B0]
.text:0000000000003B40                 CMP             W11, #0x2A ; '*'
.text:0000000000003B44                 STUR            D0, [SP,#0x150+var_AC]
.text:0000000000003B48                 STR             X8, [SP,#0x150+var_C0]
.text:0000000000003B4C                 B.NE            loc_3BB8
.text:0000000000003B50                 LDR             X9, [X19,#0x20]
.text:0000000000003B54                 CBNZ            X9, loc_3BB8
.text:0000000000003B58                 LDRB            W9, [X8]
.text:0000000000003B5C                 CMP             W9, #0x66 ; 'f'
.text:0000000000003B60                 B.NE            loc_3BB8
.text:0000000000003B64                 LDRB            W9, [X8,#1]
.text:0000000000003B68                 CMP             W9, #0x4C ; 'L'
.text:0000000000003B6C                 B.NE            loc_3BB8
.text:0000000000003B70                 LDRB            W9, [X8,#2]
.text:0000000000003B74                 CMP             W9, #0x61 ; 'a'
.text:0000000000003B78                 B.NE            loc_3BB8
.text:0000000000003B7C                 LDRB            W9, [X8,#3]
.text:0000000000003B80                 CMP             W9, #0x43 ; 'C'
.text:0000000000003B84                 B.NE            loc_3BB8
.text:0000000000003B88                 LDRB            W9, [X8,#0xE]
.text:0000000000003B8C                 LDRB            W10, [X8,#0xD]
.text:0000000000003B90                 LDRB            W11, [X8,#0xC]
.text:0000000000003B94                 BFI             W9, W10, #8, #8
.text:0000000000003B98                 BFI             W9, W11, #0x10, #8
.text:0000000000003B9C                 STR             W9, [X26,#0xC4]
.text:0000000000003BA0                 LDRB            W9, [X8,#0x11]
.text:0000000000003BA4                 LDRB            W10, [X8,#0x10]
.text:0000000000003BA8                 LDRB            W8, [X8,#0xF]
.text:0000000000003BAC                 BFI             W9, W10, #8, #8
.text:0000000000003BB0                 BFI             W9, W8, #0x10, #8
.text:0000000000003BB4                 STR             W9, [X26,#0xC0]
.text:0000000000003BB8 loc_3BB8                                ; CODE XREF: SOMXFLACD_COMP_Decode+C4↑j
.text:0000000000003BB8                                         ; SOMXFLACD_COMP_Decode+CC↑j ...
.text:0000000000003BB8                 LDR             X8, [X24]
.text:0000000000003BBC                 ADD             X23, X26, #0x88
.text:0000000000003BC0                 LDR             X0, [X26,#0x80]
.text:0000000000003BC4                 ADD             X1, SP, #0x150+var_C0
.text:0000000000003BC8                 ADD             X2, SP, #0x150+var_128
.text:0000000000003BCC                 ADD             X3, SP, #0x150+var_148
.text:0000000000003BD0                 MOV             X4, X23
.text:0000000000003BD4                 STR             X8, [SP,#0x150+var_120]
.text:0000000000003BD8                 BL              .SOMXFLACD_Decode
.text:0000000000003BDC                 CMP             W0, #3
.text:0000000000003BE0                 B.HI            loc_3DBC
.text:0000000000003BE4                 ADRP            X9, #unk_17C4@PAGE
.text:0000000000003BE8                 MOV             W8, W0
.text:0000000000003BEC                 ADD             X9, X9, #unk_17C4@PAGEOFF
.text:0000000000003BF0                 ADR             X10, loc_3C00
.text:0000000000003BF4                 LDRB            W11, [X9,X8]
.text:0000000000003BF8                 ADD             X10, X10, X11,LSL#2
.text:0000000000003BFC                 BR              X10
.text:0000000000003C00 ; ---------------------------------------------------------------------------
.text:0000000000003C00 loc_3C00                                ; DATA XREF: SOMXFLACD_COMP_Decode+168↑o
.text:0000000000003C00                 LDR             W8, [SP,#0x150+var_148]
.text:0000000000003C04                 CBZ             W8, loc_3F64
.text:0000000000003C08                 LDR             W9, [X26,#0x98]
.text:0000000000003C0C                 LDR             W8, [SP,#0x150+var_124]
.text:0000000000003C10                 CMP             W9, #1
.text:0000000000003C14                 STR             W8, [X24,#0xC]
.text:0000000000003C18                 B.NE            loc_3E0C
.text:0000000000003C1C                 LDP             W10, W9, [SP,#0x150+var_138]
.text:0000000000003C20                 ASR             W9, W9, #3
.text:0000000000003C24                 MUL             W9, W9, W10
.text:0000000000003C28                 LDR             W10, [SP,#0x150+var_130]
.text:0000000000003C2C                 STR             W8, [X24,#0x14]
.text:0000000000003C30                 UDIV            W9, W8, W9
.text:0000000000003C34                 STR             W10, [X26,#0xA0]
.text:0000000000003C38                 STR             W9, [X26,#0xB4]
.text:0000000000003C3C                 LDR             W8, [SP,#0x150+var_110]
.text:0000000000003C40                 CBNZ            W8, loc_3E1C
.text:0000000000003C44                 B               loc_3E40
.text:0000000000003C48 ; ---------------------------------------------------------------------------
.text:0000000000003C48 loc_3C48                                ; CODE XREF: SOMXFLACD_COMP_Decode+2C↑j
.text:0000000000003C48                 ADRP            X19, #aVendorSamsungF_0@PAGE ; "vendor/samsung/frameworks/avcodec/mm_pr"...
.text:0000000000003C4C                 ADD             X19, X19, #aVendorSamsungF_0@PAGEOFF ; "vendor/samsung/frameworks/avcodec/mm_pr"...
.text:0000000000003C50                 MOV             W1, #0x2F ; '/'
.text:0000000000003C54                 MOV             W2, #0x58 ; 'X'
.text:0000000000003C58                 MOV             X0, X19
.text:0000000000003C5C                 BL              .__strrchr_chk
.text:0000000000003C60                 CBZ             X0, loc_3C7C
.text:0000000000003C64                 ADRP            X0, #aVendorSamsungF_0@PAGE ; "vendor/samsung/frameworks/avcodec/mm_pr"...
.text:0000000000003C68                 ADD             X0, X0, #aVendorSamsungF_0@PAGEOFF ; "vendor/samsung/frameworks/avcodec/mm_pr"...
.text:0000000000003C6C                 MOV             W1, #0x2F ; '/'
.text:0000000000003C70                 MOV             W2, #0x58 ; 'X'
.text:0000000000003C74                 BL              .__strrchr_chk
.text:0000000000003C78                 ADD             X19, X0, #1
.text:0000000000003C7C loc_3C7C                                ; CODE XREF: SOMXFLACD_COMP_Decode+1D8↑j
.text:0000000000003C7C                 MOV             W20, #0x1005
.text:0000000000003C80                 ADRP            X1, #aSecFlacDec@PAGE ; "SEC_FLAC_DEC"
.text:0000000000003C84                 ADRP            X2, #aSDAssertionPom_1@PAGE ; "%s(%d): assertion: 'pOMXComponent' fail"...
.text:0000000000003C88                 MOVK            W20, #0x8000,LSL#16
.text:0000000000003C8C                 ADD             X1, X1, #aSecFlacDec@PAGEOFF ; "SEC_FLAC_DEC"
.text:0000000000003C90                 ADD             X2, X2, #aSDAssertionPom_1@PAGEOFF ; "%s(%d): assertion: 'pOMXComponent' fail"...
.text:0000000000003C94                 MOV             W4, #0x218
.text:0000000000003C98                 B               loc_3D40
.text:0000000000003C9C ; ---------------------------------------------------------------------------
.text:0000000000003C9C loc_3C9C                                ; CODE XREF: SOMXFLACD_COMP_Decode+38↑j
.text:0000000000003C9C                 ADRP            X19, #aVendorSamsungF_0@PAGE ; "vendor/samsung/frameworks/avcodec/mm_pr"...
.text:0000000000003CA0                 ADD             X19, X19, #aVendorSamsungF_0@PAGEOFF ; "vendor/samsung/frameworks/avcodec/mm_pr"...
.text:0000000000003CA4                 MOV             W1, #0x2F ; '/'
.text:0000000000003CA8                 MOV             W2, #0x58 ; 'X'
.text:0000000000003CAC                 MOV             X0, X19
.text:0000000000003CB0                 BL              .__strrchr_chk
.text:0000000000003CB4                 CBZ             X0, loc_3CD0
.text:0000000000003CB8                 ADRP            X0, #aVendorSamsungF_0@PAGE ; "vendor/samsung/frameworks/avcodec/mm_pr"...
.text:0000000000003CBC                 ADD             X0, X0, #aVendorSamsungF_0@PAGEOFF ; "vendor/samsung/frameworks/avcodec/mm_pr"...
.text:0000000000003CC0                 MOV             W1, #0x2F ; '/'
.text:0000000000003CC4                 MOV             W2, #0x58 ; 'X'
.text:0000000000003CC8                 BL              .__strrchr_chk
.text:0000000000003CCC                 ADD             X19, X0, #1
.text:0000000000003CD0 loc_3CD0                                ; CODE XREF: SOMXFLACD_COMP_Decode+22C↑j
.text:0000000000003CD0                 MOV             W20, #0x1005
.text:0000000000003CD4                 ADRP            X1, #aSecFlacDec@PAGE ; "SEC_FLAC_DEC"
.text:0000000000003CD8                 ADRP            X2, #aSDAssertionPse_1@PAGE ; "%s(%d): assertion: 'pSECComponent' fail"...
.text:0000000000003CDC                 MOVK            W20, #0x8000,LSL#16
.text:0000000000003CE0                 ADD             X1, X1, #aSecFlacDec@PAGEOFF ; "SEC_FLAC_DEC"
.text:0000000000003CE4                 ADD             X2, X2, #aSDAssertionPse_1@PAGEOFF ; "%s(%d): assertion: 'pSECComponent' fail"...
.text:0000000000003CE8                 MOV             W4, #0x21A
.text:0000000000003CEC                 B               loc_3D40
.text:0000000000003CF0 ; ---------------------------------------------------------------------------
.text:0000000000003CF0 loc_3CF0                                ; CODE XREF: SOMXFLACD_COMP_Decode+40↑j
.text:0000000000003CF0                 ADRP            X19, #aVendorSamsungF_0@PAGE ; "vendor/samsung/frameworks/avcodec/mm_pr"...
.text:0000000000003CF4                 ADD             X19, X19, #aVendorSamsungF_0@PAGEOFF ; "vendor/samsung/frameworks/avcodec/mm_pr"...
.text:0000000000003CF8                 MOV             W1, #0x2F ; '/'
.text:0000000000003CFC                 MOV             W2, #0x58 ; 'X'
.text:0000000000003D00                 MOV             X0, X19
.text:0000000000003D04                 BL              .__strrchr_chk
.text:0000000000003D08                 CBZ             X0, loc_3D24
.text:0000000000003D0C                 ADRP            X0, #aVendorSamsungF_0@PAGE ; "vendor/samsung/frameworks/avcodec/mm_pr"...
.text:0000000000003D10                 ADD             X0, X0, #aVendorSamsungF_0@PAGEOFF ; "vendor/samsung/frameworks/avcodec/mm_pr"...
.text:0000000000003D14                 MOV             W1, #0x2F ; '/'
.text:0000000000003D18                 MOV             W2, #0x58 ; 'X'
.text:0000000000003D1C                 BL              .__strrchr_chk
.text:0000000000003D20                 ADD             X19, X0, #1
.text:0000000000003D24 loc_3D24                                ; CODE XREF: SOMXFLACD_COMP_Decode+280↑j
.text:0000000000003D24                 MOV             W20, #0x1005
.text:0000000000003D28                 ADRP            X1, #aSecFlacDec@PAGE ; "SEC_FLAC_DEC"
.text:0000000000003D2C                 ADRP            X2, #aSDAssertionPfl@PAGE ; "%s(%d): assertion: 'pFlacDec' failed"
.text:0000000000003D30                 MOVK            W20, #0x8000,LSL#16
.text:0000000000003D34                 ADD             X1, X1, #aSecFlacDec@PAGEOFF ; "SEC_FLAC_DEC"
.text:0000000000003D38                 ADD             X2, X2, #aSDAssertionPfl@PAGEOFF ; "%s(%d): assertion: 'pFlacDec' failed"
.text:0000000000003D3C                 MOV             W4, #0x21D
.text:0000000000003D40 loc_3D40                                ; CODE XREF: SOMXFLACD_COMP_Decode+210↑j
.text:0000000000003D40                                         ; SOMXFLACD_COMP_Decode+264↑j
.text:0000000000003D40                 MOV             W0, #3
.text:0000000000003D44                 MOV             X3, X19
.text:0000000000003D48                 BL              ._SEC_OSAL_Log
.text:0000000000003D4C loc_3D4C                                ; CODE XREF: SOMXFLACD_COMP_Decode+2FC↓j
.text:0000000000003D4C                                         ; SOMXFLACD_COMP_Decode+504↓j ...
.text:0000000000003D4C                 LDR             X8, [X25,#0x28]
.text:0000000000003D50                 LDUR            X9, [X29,#var_60]
.text:0000000000003D54                 CMP             X8, X9
.text:0000000000003D58                 B.NE            loc_3FCC
.text:0000000000003D5C                 MOV             W0, W20
.text:0000000000003D60                 LDP             X29, X30, [SP,#0x150+var_s0]
.text:0000000000003D64                 LDP             X20, X19, [SP,#0x150+var_10]
.text:0000000000003D68                 LDP             X22, X21, [SP,#0x150+var_20]
.text:0000000000003D6C                 LDP             X24, X23, [SP,#0x150+var_30]
.text:0000000000003D70                 LDP             X26, X25, [SP,#0x150+var_40]
.text:0000000000003D74                 LDP             X28, X27, [SP,#0x150+var_50]
.text:0000000000003D78                 ADD             SP, SP, #0x160
.text:0000000000003D7C                 RET
.text:0000000000003D80 ; ---------------------------------------------------------------------------
.text:0000000000003D80 loc_3D80                                ; CODE XREF: SOMXFLACD_COMP_Decode+6C↑j
.text:0000000000003D80                 MOV             W20, WZR
.text:0000000000003D84                 B               loc_3D4C
.text:0000000000003D88 ; ---------------------------------------------------------------------------
.text:0000000000003D88                 LDR             W2, [X19,#0x14]
.text:0000000000003D8C                 CMP             W2, #0x80,LSL#12
.text:0000000000003D90                 B.CC            loc_3DDC
.text:0000000000003D94                 LDP             X8, X1, [X27,#0x1B0]
.text:0000000000003D98                 MOV             W9, #0x80001005
.text:0000000000003DA0                 ADD             W3, W9, #6
.text:0000000000003DA4                 LDR             X8, [X8]
.text:0000000000003DA8                 MOV             X0, X20
.text:0000000000003DAC                 MOV             W2, #1
.text:0000000000003DB0                 MOV             W4, WZR
.text:0000000000003DB4                 MOV             X5, XZR
.text:0000000000003DB8                 BLR             X8
.text:0000000000003DBC loc_3DBC                                ; CODE XREF: SOMXFLACD_COMP_Decode+158↑j
.text:0000000000003DBC                 LDR             X8, [X19,#0x20]
.text:0000000000003DC0                 CBNZ            X8, loc_3FB8
.text:0000000000003DC4                 LDR             X8, [X26,#0xC8]
.text:0000000000003DC8                 STR             X8, [X22]
.text:0000000000003DCC                 B               loc_3FB8
.text:0000000000003DD0 ; ---------------------------------------------------------------------------
.text:0000000000003DD0                 MOV             W20, #0x80001005
.text:0000000000003DD8                 B               loc_3FBC
.text:0000000000003DDC ; ---------------------------------------------------------------------------
.text:0000000000003DDC loc_3DDC                                ; CODE XREF: SOMXFLACD_COMP_Decode+308↑j
.text:0000000000003DDC                 LDR             X0, [X19]
.text:0000000000003DE0                 LDR             W8, [X19,#0x10]
.text:0000000000003DE4                 ADD             X1, X0, X8
.text:0000000000003DE8 loc_3DE8                                ; CODE XREF: SOMXFLACD_COMP_Decode+52C↓j
.text:0000000000003DE8                 BL              .SEC_OSAL_Memmove
.text:0000000000003DEC                 LDR             W8, [X19,#0xC]
.text:0000000000003DF0                 MOV             W10, #0x1005
.text:0000000000003DF4                 LDR             W9, [X19,#0x14]
.text:0000000000003DF8                 MOVK            W10, #0x8000,LSL#16
.text:0000000000003DFC                 SUB             W20, W10, #5
.text:0000000000003E00                 STR             W8, [X19,#0x18]
.text:0000000000003E04                 STR             W9, [X19,#0xC]
.text:0000000000003E08                 B               loc_3FC4
.text:0000000000003E0C ; ---------------------------------------------------------------------------
.text:0000000000003E0C loc_3E0C                                ; CODE XREF: SOMXFLACD_COMP_Decode+190↑j
.text:0000000000003E0C                 STP             WZR, W8, [X24,#0x10]
.text:0000000000003E10                 STR             WZR, [SP,#0x150+var_144]
.text:0000000000003E14                 LDR             W8, [SP,#0x150+var_110]
.text:0000000000003E18                 CBZ             W8, loc_3E40
.text:0000000000003E1C loc_3E1C                                ; CODE XREF: SOMXFLACD_COMP_Decode+1B8↑j
.text:0000000000003E1C                 LDR             W9, [SP,#0x150+var_10C]
.text:0000000000003E20                 CBZ             W9, loc_3E40
.text:0000000000003E24                 LDR             W10, [X24,#0x14]
.text:0000000000003E28                 ASR             W9, W9, #3
.text:0000000000003E2C                 MUL             W8, W9, W8
.text:0000000000003E30                 LDR             W9, [SP,#0x150+var_130]
.text:0000000000003E34                 UDIV            W8, W10, W8
.text:0000000000003E38                 STR             W9, [X26,#0xA0]
.text:0000000000003E3C                 STR             W8, [X26,#0xB4]
.text:0000000000003E40 loc_3E40                                ; CODE XREF: SOMXFLACD_COMP_Decode+1BC↑j
.text:0000000000003E40                                         ; SOMXFLACD_COMP_Decode+390↑j ...
.text:0000000000003E40                 LDR             X8, [X19,#0x20]
.text:0000000000003E44                 CBNZ            X8, loc_3EAC
.text:0000000000003E48                 LDR             X8, [X26,#0xC8]
.text:0000000000003E4C                 CBZ             X8, loc_3E70
.text:0000000000003E50                 LDR             W9, [X26,#0xB4]
.text:0000000000003E54                 MOV             W10, #0xF4240
.text:0000000000003E5C                 LDRSW           X11, [SP,#0x150+var_130]
.text:0000000000003E60                 MUL             X9, X9, X10
.text:0000000000003E64                 SDIV            X9, X9, X11
.text:0000000000003E68                 ADD             X8, X9, X8
.text:0000000000003E6C                 B               loc_3EA4
.text:0000000000003E70 ; ---------------------------------------------------------------------------
.text:0000000000003E70 loc_3E70                                ; CODE XREF: SOMXFLACD_COMP_Decode+3C4↑j
.text:0000000000003E70                 LDR             W8, [X24,#0x14]
.text:0000000000003E74                 LDR             X9, [SP,#0x150+var_140]
.text:0000000000003E78                 LDP             W10, W12, [SP,#0x150+var_138]
.text:0000000000003E7C                 LDR             W11, [SP,#0x150+var_130]
.text:0000000000003E80                 MUL             X8, X8, X9
.text:0000000000003E84                 MOV             W9, #0xF4240
.text:0000000000003E8C                 MUL             W10, W10, W11
.text:0000000000003E90                 ASR             W11, W12, #3
.text:0000000000003E94                 MUL             X8, X8, X9
.text:0000000000003E98                 MUL             W9, W10, W11
.text:0000000000003E9C                 SXTW            X9, W9
.text:0000000000003EA0                 UDIV            X8, X8, X9
.text:0000000000003EA4 loc_3EA4                                ; CODE XREF: SOMXFLACD_COMP_Decode+3E4↑j
.text:0000000000003EA4                 STR             X8, [X26,#0xC8]
.text:0000000000003EA8                 STR             X8, [X22]
.text:0000000000003EAC loc_3EAC                                ; CODE XREF: SOMXFLACD_COMP_Decode+3BC↑j
.text:0000000000003EAC                 LDR             W9, [X26,#0x24]
.text:0000000000003EB0                 LDR             W8, [SP,#0x150+var_138]
.text:0000000000003EB4                 CMP             W9, W8
.text:0000000000003EB8                 B.NE            loc_3EFC
.text:0000000000003EBC                 LDR             W10, [X26,#0x38]
.text:0000000000003EC0                 LDR             W9, [SP,#0x150+var_130]
.text:0000000000003EC4                 CMP             W10, W9
.text:0000000000003EC8                 B.NE            loc_3F00
.text:0000000000003ECC                 LDR             W11, [X26,#0x34]
.text:0000000000003ED0                 MOV             W9, W10
.text:0000000000003ED4                 LDR             W12, [SP,#0x150+var_134]
.text:0000000000003ED8                 CMP             W11, W12
.text:0000000000003EDC                 B.NE            loc_3F00
.text:0000000000003EE0                 LDR             W8, [X26,#0x98]
.text:0000000000003EE4                 CMP             W8, #1
.text:0000000000003EE8                 B.NE            loc_3F64
.text:0000000000003EEC                 LDR             W1, [X26,#0xB4]
.text:0000000000003EF0                 MOV             X0, X21
.text:0000000000003EF4                 BL              .SOMX_TS_UpdateTs
.text:0000000000003EF8                 B               loc_3F64
.text:0000000000003EFC ; ---------------------------------------------------------------------------
.text:0000000000003EFC loc_3EFC                                ; CODE XREF: SOMXFLACD_COMP_Decode+430↑j
.text:0000000000003EFC                 LDR             W9, [SP,#0x150+var_130]
.text:0000000000003F00 loc_3F00                                ; CODE XREF: SOMXFLACD_COMP_Decode+440↑j
.text:0000000000003F00                                         ; SOMXFLACD_COMP_Decode+454↑j
.text:0000000000003F00                 LDR             W10, [SP,#0x150+var_134]
.text:0000000000003F04                 STR             W8, [X26,#0x24]
.text:0000000000003F08                 STR             W9, [X26,#0x10]
.text:0000000000003F0C                 LDR             W8, [SP,#0x150+var_138]
.text:0000000000003F10                 STR             W8, [X26,#0xC]
.text:0000000000003F14                 LDR             W8, [SP,#0x150+var_134]
.text:0000000000003F18                 STP             W10, W9, [X26,#0x34]
.text:0000000000003F1C                 CMP             W8, #0x18
.text:0000000000003F20                 B.LT            loc_3F30
.text:0000000000003F24                 MOV             W8, #0x7F000001
.text:0000000000003F2C                 STR             W8, [X26,#0x28]
.text:0000000000003F30 loc_3F30                                ; CODE XREF: SOMXFLACD_COMP_Decode+498↑j
.text:0000000000003F30                 ADD             X1, X26, #0xB8
.text:0000000000003F34                 MOV             X0, X21
.text:0000000000003F38                 BL              .SOMX_TS_GetFrameDuration
.text:0000000000003F3C                 LDP             X8, X1, [X27,#0x1B0]
.text:0000000000003F40                 MOV             X0, X20
.text:0000000000003F44                 MOV             W2, #3
.text:0000000000003F48                 MOV             W3, #1
.text:0000000000003F4C                 LDR             X8, [X8]
.text:0000000000003F50                 MOV             W4, WZR
.text:0000000000003F54                 MOV             X5, XZR
.text:0000000000003F58                 BLR             X8
.text:0000000000003F5C                 STR             WZR, [X26,#0x98]
.text:0000000000003F60                 STR             WZR, [SP,#0x150+var_144]
.text:0000000000003F64 loc_3F64                                ; CODE XREF: SOMXFLACD_COMP_Decode+17C↑j
.text:0000000000003F64                                         ; SOMXFLACD_COMP_Decode+460↑j ...
.text:0000000000003F64                 LDR             W9, [X19,#0x14]
.text:0000000000003F68                 LDR             W8, [SP,#0x150+var_144]
.text:0000000000003F6C                 SUBS            W2, W9, W8
.text:0000000000003F70                 B.LS            loc_3FB8
.text:0000000000003F74                 LDR             W9, [X19,#0x10]
.text:0000000000003F78                 MOV             W20, #0x90000002
.text:0000000000003F80                 ADD             W8, W9, W8
.text:0000000000003F84                 STP             W8, W2, [X19,#0x10]
.text:0000000000003F88                 LDR             W9, [X23]
.text:0000000000003F8C                 CBZ             W9, loc_3D4C
.text:0000000000003F90                 LDR             X9, [X19,#0x20]
.text:0000000000003F94                 CBNZ            X9, loc_3D4C
.text:0000000000003F98                 LDR             W9, [X26,#0xC0]
.text:0000000000003F9C                 CMP             W2, W9
.text:0000000000003FA0                 B.CS            loc_3D4C
.text:0000000000003FA4                 LDRB            W9, [X19,#0x1C]
.text:0000000000003FA8                 TBNZ            W9, #0, loc_3D4C
.text:0000000000003FAC                 LDR             X0, [X19]
.text:0000000000003FB0                 ADD             X1, X0, W8,UXTW
.text:0000000000003FB4                 B               loc_3DE8
.text:0000000000003FB8 ; ---------------------------------------------------------------------------
.text:0000000000003FB8 loc_3FB8                                ; CODE XREF: SOMXFLACD_COMP_Decode+338↑j
.text:0000000000003FB8                                         ; SOMXFLACD_COMP_Decode+344↑j ...
.text:0000000000003FB8                 MOV             W20, WZR
.text:0000000000003FBC loc_3FBC                                ; CODE XREF: SOMXFLACD_COMP_Decode+350↑j
.text:0000000000003FBC                 STR             WZR, [X19,#0x14]
.text:0000000000003FC0                 STR             WZR, [X19,#0xC]
.text:0000000000003FC4 loc_3FC4                                ; CODE XREF: SOMXFLACD_COMP_Decode+380↑j
.text:0000000000003FC4                 STR             WZR, [X19,#0x10]
.text:0000000000003FC8                 B               loc_3D4C
.text:0000000000003FCC ; ---------------------------------------------------------------------------
.text:0000000000003FCC loc_3FCC                                ; CODE XREF: SOMXFLACD_COMP_Decode+2D0↑j
.text:0000000000003FCC                 BL              .__stack_chk_fail
.text:0000000000003FCC ; } // starts at 3A88
.text:0000000000003FCC ; End of function SOMXFLACD_COMP_Decode
.text:0000000000003FD0 ; =============== S U B R O U T I N E =======================================
.text:0000000000003FD0 ; Attributes: bp-based frame
.text:0000000000003FD0                 EXPORT SOMXFLACD_COMP_bufferProcess
.text:0000000000003FD0 SOMXFLACD_COMP_bufferProcess            ; DATA XREF: LOAD:00000000000005A0↑o
.text:0000000000003FD0                                         ; .got:SOMXFLACD_COMP_bufferProcess_ptr↓o
.text:0000000000003FD0 var_30          = -0x30
.text:0000000000003FD0 var_20          = -0x20
.text:0000000000003FD0 var_10          = -0x10
.text:0000000000003FD0 var_s0          =  0
.text:0000000000003FD0 ; __unwind {
.text:0000000000003FD0                 STR             X23, [SP,#-0x10+var_30]!
.text:0000000000003FD4                 STP             X22, X21, [SP,#0x30+var_20]
.text:0000000000003FD8                 STP             X20, X19, [SP,#0x30+var_10]
.text:0000000000003FDC                 STP             X29, X30, [SP,#0x30+var_s0]
.text:0000000000003FE0                 ADD             X29, SP, #0x30
.text:0000000000003FE4                 CBZ             X0, loc_40C8
.text:0000000000003FE8                 LDR             X23, [X0,#8]
.text:0000000000003FEC                 MOV             X22, X0
.text:0000000000003FF0                 CBZ             X23, loc_4124
.text:0000000000003FF4                 LDR             X8, [X23,#0x1A0]
.text:0000000000003FF8                 LDR             W9, [X8,#0x2C]
.text:0000000000003FFC                 CMP             W9, #1
.text:0000000000004000                 B.NE            loc_411C
.text:0000000000004004                 LDR             W9, [X8,#0x12C]
.text:0000000000004008                 CMP             W9, #1
.text:000000000000400C                 B.NE            loc_411C
.text:0000000000004010                 LDR             W9, [X8,#0x30]
.text:0000000000004014                 CMP             W9, #1
.text:0000000000004018                 B.NE            loc_411C
.text:000000000000401C                 LDR             W8, [X8,#0x130]
.text:0000000000004020                 CMP             W8, #1
.text:0000000000004024                 B.NE            loc_411C
.text:0000000000004028                 MOV             X0, X23
.text:000000000000402C                 MOV             X20, X2
.text:0000000000004030                 MOV             X21, X1
.text:0000000000004034                 BL              .SEC_AudioDecodeCheck_BufferProcess_State
.text:0000000000004038                 CBZ             W0, loc_411C
.text:000000000000403C                 LDR             W8, [X23,#0x10]
.text:0000000000004040                 CMP             W8, #3
.text:0000000000004044                 B.NE            loc_4198
.text:0000000000004048                 MOV             X0, X22
.text:000000000000404C                 MOV             X1, X21
.text:0000000000004050                 MOV             X2, X20
.text:0000000000004054                 BL              .SOMXFLACD_COMP_Decode
.text:0000000000004058                 MOV             W19, W0
.text:000000000000405C                 MOV             W8, #0x80001000
.text:0000000000004064                 CMP             W0, W8
.text:0000000000004068                 B.EQ            loc_40A0
.text:000000000000406C                 MOV             W8, #0x90000002
.text:0000000000004074                 CMP             W19, W8
.text:0000000000004078                 B.EQ            loc_40A0
.text:000000000000407C                 CBZ             W19, loc_40A0
.text:0000000000004080                 LDP             X8, X1, [X23,#0x1B0]
.text:0000000000004084                 MOV             X0, X22
.text:0000000000004088                 MOV             W2, #1
.text:000000000000408C                 MOV             W3, W19
.text:0000000000004090                 LDR             X8, [X8]
.text:0000000000004094                 MOV             W4, WZR
.text:0000000000004098                 MOV             X5, XZR
.text:000000000000409C                 BLR             X8
.text:00000000000040A0 loc_40A0                                ; CODE XREF: SOMXFLACD_COMP_bufferProcess+98↑j
.text:00000000000040A0                                         ; SOMXFLACD_COMP_bufferProcess+A8↑j ...
.text:00000000000040A0                 MOV             W8, #0x90000002
.text:00000000000040A8                 CMP             W19, W8
.text:00000000000040AC                 B.EQ            loc_4180
.text:00000000000040B0                 LDR             W8, [X21,#0x1C]
.text:00000000000040B4                 TBZ             W8, #0, loc_4180
.text:00000000000040B8                 LDR             W8, [X20,#0x1C]
.text:00000000000040BC                 ORR             W8, W8, #1
.text:00000000000040C0                 STR             W8, [X20,#0x1C]
.text:00000000000040C4                 B               loc_4180
.text:00000000000040C8 ; ---------------------------------------------------------------------------
.text:00000000000040C8 loc_40C8                                ; CODE XREF: SOMXFLACD_COMP_bufferProcess+14↑j
.text:00000000000040C8                 ADRP            X20, #aVendorSamsungF_0@PAGE ; "vendor/samsung/frameworks/avcodec/mm_pr"...
.text:00000000000040CC                 ADD             X20, X20, #aVendorSamsungF_0@PAGEOFF ; "vendor/samsung/frameworks/avcodec/mm_pr"...
.text:00000000000040D0                 MOV             W1, #0x2F ; '/'
.text:00000000000040D4                 MOV             W2, #0x58 ; 'X'
.text:00000000000040D8                 MOV             X0, X20
.text:00000000000040DC                 BL              .__strrchr_chk
.text:00000000000040E0                 CBZ             X0, loc_40FC
.text:00000000000040E4                 ADRP            X0, #aVendorSamsungF_0@PAGE ; "vendor/samsung/frameworks/avcodec/mm_pr"...
.text:00000000000040E8                 ADD             X0, X0, #aVendorSamsungF_0@PAGEOFF ; "vendor/samsung/frameworks/avcodec/mm_pr"...
.text:00000000000040EC                 MOV             W1, #0x2F ; '/'
.text:00000000000040F0                 MOV             W2, #0x58 ; 'X'
.text:00000000000040F4                 BL              .__strrchr_chk
.text:00000000000040F8                 ADD             X20, X0, #1
.text:00000000000040FC loc_40FC                                ; CODE XREF: SOMXFLACD_COMP_bufferProcess+110↑j
.text:00000000000040FC                 MOV             W19, #0x1005
.text:0000000000004100                 ADRP            X1, #aSecFlacDec@PAGE ; "SEC_FLAC_DEC"
.text:0000000000004104                 ADRP            X2, #aSDAssertionPom_1@PAGE ; "%s(%d): assertion: 'pOMXComponent' fail"...
.text:0000000000004108                 MOVK            W19, #0x8000,LSL#16
.text:000000000000410C                 ADD             X1, X1, #aSecFlacDec@PAGEOFF ; "SEC_FLAC_DEC"
.text:0000000000004110                 ADD             X2, X2, #aSDAssertionPom_1@PAGEOFF ; "%s(%d): assertion: 'pOMXComponent' fail"...
.text:0000000000004114                 MOV             W4, #0x314
.text:0000000000004118                 B               loc_4174
.text:000000000000411C ; ---------------------------------------------------------------------------
.text:000000000000411C loc_411C                                ; CODE XREF: SOMXFLACD_COMP_bufferProcess+30↑j
.text:000000000000411C                                         ; SOMXFLACD_COMP_bufferProcess+3C↑j ...
.text:000000000000411C                 MOV             W19, WZR
.text:0000000000004120                 B               loc_4180
.text:0000000000004124 ; ---------------------------------------------------------------------------
.text:0000000000004124 loc_4124                                ; CODE XREF: SOMXFLACD_COMP_bufferProcess+20↑j
.text:0000000000004124                 ADRP            X20, #aVendorSamsungF_0@PAGE ; "vendor/samsung/frameworks/avcodec/mm_pr"...
.text:0000000000004128                 ADD             X20, X20, #aVendorSamsungF_0@PAGEOFF ; "vendor/samsung/frameworks/avcodec/mm_pr"...
.text:000000000000412C                 MOV             W1, #0x2F ; '/'
.text:0000000000004130                 MOV             W2, #0x58 ; 'X'
.text:0000000000004134                 MOV             X0, X20
.text:0000000000004138                 BL              .__strrchr_chk
.text:000000000000413C                 CBZ             X0, loc_4158
.text:0000000000004140                 ADRP            X0, #aVendorSamsungF_0@PAGE ; "vendor/samsung/frameworks/avcodec/mm_pr"...
.text:0000000000004144                 ADD             X0, X0, #aVendorSamsungF_0@PAGEOFF ; "vendor/samsung/frameworks/avcodec/mm_pr"...
.text:0000000000004148                 MOV             W1, #0x2F ; '/'
.text:000000000000414C                 MOV             W2, #0x58 ; 'X'
.text:0000000000004150                 BL              .__strrchr_chk
.text:0000000000004154                 ADD             X20, X0, #1
.text:0000000000004158 loc_4158                                ; CODE XREF: SOMXFLACD_COMP_bufferProcess+16C↑j
.text:0000000000004158                 MOV             W19, #0x1005
.text:000000000000415C                 ADRP            X1, #aSecFlacDec@PAGE ; "SEC_FLAC_DEC"
.text:0000000000004160                 ADRP            X2, #aSDAssertionPse_1@PAGE ; "%s(%d): assertion: 'pSECComponent' fail"...
.text:0000000000004164                 MOVK            W19, #0x8000,LSL#16
.text:0000000000004168                 ADD             X1, X1, #aSecFlacDec@PAGEOFF ; "SEC_FLAC_DEC"
.text:000000000000416C                 ADD             X2, X2, #aSDAssertionPse_1@PAGEOFF ; "%s(%d): assertion: 'pSECComponent' fail"...
.text:0000000000004170                 MOV             W4, #0x316
.text:0000000000004174 loc_4174                                ; CODE XREF: SOMXFLACD_COMP_bufferProcess+148↑j
.text:0000000000004174                 MOV             W0, #3
.text:0000000000004178                 MOV             X3, X20
.text:000000000000417C                 BL              ._SEC_OSAL_Log
.text:0000000000004180 loc_4180                                ; CODE XREF: SOMXFLACD_COMP_bufferProcess+DC↑j
.text:0000000000004180                                         ; SOMXFLACD_COMP_bufferProcess+E4↑j ...
.text:0000000000004180                 MOV             W0, W19
.text:0000000000004184                 LDP             X29, X30, [SP,#0x30+var_s0]
.text:0000000000004188                 LDP             X20, X19, [SP,#0x30+var_10]
.text:000000000000418C                 LDP             X22, X21, [SP,#0x30+var_20]
.text:0000000000004190                 LDR             X23, [SP+0x30+var_30],#0x40
.text:0000000000004194                 RET
.text:0000000000004198 ; ---------------------------------------------------------------------------
.text:0000000000004198 loc_4198                                ; CODE XREF: SOMXFLACD_COMP_bufferProcess+74↑j
.text:0000000000004198                 LDR             W8, [X20,#0xC]
.text:000000000000419C                 MOV             W9, #0x80001005
.text:00000000000041A4                 ADD             W19, W9, #0x13
.text:00000000000041A8                 STP             WZR, W8, [X20,#0x10]
.text:00000000000041AC                 B               loc_4180
.text:00000000000041AC ; } // starts at 3FD0
.text:00000000000041AC ; End of function SOMXFLACD_COMP_bufferProcess
.text:00000000000041B0 ; =============== S U B R O U T I N E =======================================
.text:00000000000041B0 ; Attributes: bp-based frame
.text:00000000000041B0                 EXPORT SOMXFLACD_COMP_Reset
.text:00000000000041B0 SOMXFLACD_COMP_Reset                    ; DATA XREF: LOAD:00000000000006A8↑o
.text:00000000000041B0                                         ; .got:SOMXFLACD_COMP_Reset_ptr↓o
.text:00000000000041B0 var_10          = -0x10
.text:00000000000041B0 var_s0          =  0
.text:00000000000041B0 ; __unwind {
.text:00000000000041B0                 STP             X20, X19, [SP,#-0x10+var_10]!
.text:00000000000041B4                 STP             X29, X30, [SP,#0x10+var_s0]
.text:00000000000041B8                 ADD             X29, SP, #0x10
.text:00000000000041BC                 CBZ             X0, loc_422C
.text:00000000000041C0                 LDR             X8, [X0,#8]
.text:00000000000041C4                 CBZ             X8, loc_4280
.text:00000000000041C8                 LDR             X20, [X8,#0x40]
.text:00000000000041CC                 CBZ             X20, loc_42D4
.text:00000000000041D0                 LDR             X0, [X20,#0x80]
.text:00000000000041D4                 BL              .SOMXFLACD_Reset
.text:00000000000041D8                 MOV             W19, W0
.text:00000000000041DC                 CBZ             W0, loc_4340
.text:00000000000041E0                 ADRP            X20, #aVendorSamsungF_0@PAGE ; "vendor/samsung/frameworks/avcodec/mm_pr"...
.text:00000000000041E4                 ADD             X20, X20, #aVendorSamsungF_0@PAGEOFF ; "vendor/samsung/frameworks/avcodec/mm_pr"...
.text:00000000000041E8                 MOV             W1, #0x2F ; '/'
.text:00000000000041EC                 MOV             W2, #0x58 ; 'X'
.text:00000000000041F0                 MOV             X0, X20
.text:00000000000041F4                 BL              .__strrchr_chk
.text:00000000000041F8                 CBZ             X0, loc_4214
.text:00000000000041FC                 ADRP            X0, #aVendorSamsungF_0@PAGE ; "vendor/samsung/frameworks/avcodec/mm_pr"...
.text:0000000000004200                 ADD             X0, X0, #aVendorSamsungF_0@PAGEOFF ; "vendor/samsung/frameworks/avcodec/mm_pr"...
.text:0000000000004204                 MOV             W1, #0x2F ; '/'
.text:0000000000004208                 MOV             W2, #0x58 ; 'X'
.text:000000000000420C                 BL              .__strrchr_chk
.text:0000000000004210                 ADD             X20, X0, #1
.text:0000000000004214 loc_4214                                ; CODE XREF: SOMXFLACD_COMP_Reset+48↑j
.text:0000000000004214                 ADRP            X1, #aSecFlacDec@PAGE ; "SEC_FLAC_DEC"
.text:0000000000004218                 ADRP            X2, #aSDAssertionRet@PAGE ; "%s(%d): assertion: 'ret == OMX_ErrorNon"...
.text:000000000000421C                 ADD             X1, X1, #aSecFlacDec@PAGEOFF ; "SEC_FLAC_DEC"
.text:0000000000004220                 ADD             X2, X2, #aSDAssertionRet@PAGEOFF ; "%s(%d): assertion: 'ret == OMX_ErrorNon"...
.text:0000000000004224                 MOV             W4, #0x356
.text:0000000000004228                 B               loc_4324
.text:000000000000422C ; ---------------------------------------------------------------------------
.text:000000000000422C loc_422C                                ; CODE XREF: SOMXFLACD_COMP_Reset+C↑j
.text:000000000000422C                 ADRP            X20, #aVendorSamsungF_0@PAGE ; "vendor/samsung/frameworks/avcodec/mm_pr"...
.text:0000000000004230                 ADD             X20, X20, #aVendorSamsungF_0@PAGEOFF ; "vendor/samsung/frameworks/avcodec/mm_pr"...
.text:0000000000004234                 MOV             W1, #0x2F ; '/'
.text:0000000000004238                 MOV             W2, #0x58 ; 'X'
.text:000000000000423C                 MOV             X0, X20
.text:0000000000004240                 BL              .__strrchr_chk
.text:0000000000004244                 CBZ             X0, loc_4260
.text:0000000000004248                 ADRP            X0, #aVendorSamsungF_0@PAGE ; "vendor/samsung/frameworks/avcodec/mm_pr"...
.text:000000000000424C                 ADD             X0, X0, #aVendorSamsungF_0@PAGEOFF ; "vendor/samsung/frameworks/avcodec/mm_pr"...
.text:0000000000004250                 MOV             W1, #0x2F ; '/'
.text:0000000000004254                 MOV             W2, #0x58 ; 'X'
.text:0000000000004258                 BL              .__strrchr_chk
.text:000000000000425C                 ADD             X20, X0, #1
.text:0000000000004260 loc_4260                                ; CODE XREF: SOMXFLACD_COMP_Reset+94↑j
.text:0000000000004260                 MOV             W19, #0x1005
.text:0000000000004264                 ADRP            X1, #aSecFlacDec@PAGE ; "SEC_FLAC_DEC"
.text:0000000000004268                 ADRP            X2, #aSDAssertionPom_1@PAGE ; "%s(%d): assertion: 'pOMXComponent' fail"...
.text:000000000000426C                 MOVK            W19, #0x8000,LSL#16
.text:0000000000004270                 ADD             X1, X1, #aSecFlacDec@PAGEOFF ; "SEC_FLAC_DEC"
.text:0000000000004274                 ADD             X2, X2, #aSDAssertionPom_1@PAGEOFF ; "%s(%d): assertion: 'pOMXComponent' fail"...
.text:0000000000004278                 MOV             W4, #0x34E
.text:000000000000427C                 B               loc_4324
.text:0000000000004280 ; ---------------------------------------------------------------------------
.text:0000000000004280 loc_4280                                ; CODE XREF: SOMXFLACD_COMP_Reset+14↑j
.text:0000000000004280                 ADRP            X20, #aVendorSamsungF_0@PAGE ; "vendor/samsung/frameworks/avcodec/mm_pr"...
.text:0000000000004284                 ADD             X20, X20, #aVendorSamsungF_0@PAGEOFF ; "vendor/samsung/frameworks/avcodec/mm_pr"...
.text:0000000000004288                 MOV             W1, #0x2F ; '/'
.text:000000000000428C                 MOV             W2, #0x58 ; 'X'
.text:0000000000004290                 MOV             X0, X20
.text:0000000000004294                 BL              .__strrchr_chk
.text:0000000000004298                 CBZ             X0, loc_42B4
.text:000000000000429C                 ADRP            X0, #aVendorSamsungF_0@PAGE ; "vendor/samsung/frameworks/avcodec/mm_pr"...
.text:00000000000042A0                 ADD             X0, X0, #aVendorSamsungF_0@PAGEOFF ; "vendor/samsung/frameworks/avcodec/mm_pr"...
.text:00000000000042A4                 MOV             W1, #0x2F ; '/'
.text:00000000000042A8                 MOV             W2, #0x58 ; 'X'
.text:00000000000042AC                 BL              .__strrchr_chk
.text:00000000000042B0                 ADD             X20, X0, #1
.text:00000000000042B4 loc_42B4                                ; CODE XREF: SOMXFLACD_COMP_Reset+E8↑j
.text:00000000000042B4                 MOV             W19, #0x1005
.text:00000000000042B8                 ADRP            X1, #aSecFlacDec@PAGE ; "SEC_FLAC_DEC"
.text:00000000000042BC                 ADRP            X2, #aSDAssertionPse_1@PAGE ; "%s(%d): assertion: 'pSECComponent' fail"...
.text:00000000000042C0                 MOVK            W19, #0x8000,LSL#16
.text:00000000000042C4                 ADD             X1, X1, #aSecFlacDec@PAGEOFF ; "SEC_FLAC_DEC"
.text:00000000000042C8                 ADD             X2, X2, #aSDAssertionPse_1@PAGEOFF ; "%s(%d): assertion: 'pSECComponent' fail"...
.text:00000000000042CC                 MOV             W4, #0x350
.text:00000000000042D0                 B               loc_4324
.text:00000000000042D4 ; ---------------------------------------------------------------------------
.text:00000000000042D4 loc_42D4                                ; CODE XREF: SOMXFLACD_COMP_Reset+1C↑j
.text:00000000000042D4                 ADRP            X20, #aVendorSamsungF_0@PAGE ; "vendor/samsung/frameworks/avcodec/mm_pr"...
.text:00000000000042D8                 ADD             X20, X20, #aVendorSamsungF_0@PAGEOFF ; "vendor/samsung/frameworks/avcodec/mm_pr"...
.text:00000000000042DC                 MOV             W1, #0x2F ; '/'
.text:00000000000042E0                 MOV             W2, #0x58 ; 'X'
.text:00000000000042E4                 MOV             X0, X20
.text:00000000000042E8                 BL              .__strrchr_chk
.text:00000000000042EC                 CBZ             X0, loc_4308
.text:00000000000042F0                 ADRP            X0, #aVendorSamsungF_0@PAGE ; "vendor/samsung/frameworks/avcodec/mm_pr"...
.text:00000000000042F4                 ADD             X0, X0, #aVendorSamsungF_0@PAGEOFF ; "vendor/samsung/frameworks/avcodec/mm_pr"...
.text:00000000000042F8                 MOV             W1, #0x2F ; '/'
.text:00000000000042FC                 MOV             W2, #0x58 ; 'X'
.text:0000000000004300                 BL              .__strrchr_chk
.text:0000000000004304                 ADD             X20, X0, #1
.text:0000000000004308 loc_4308                                ; CODE XREF: SOMXFLACD_COMP_Reset+13C↑j
.text:0000000000004308                 MOV             W19, #0x1005
.text:000000000000430C                 ADRP            X1, #aSecFlacDec@PAGE ; "SEC_FLAC_DEC"
.text:0000000000004310                 ADRP            X2, #aSDAssertionPfl@PAGE ; "%s(%d): assertion: 'pFlacDec' failed"
.text:0000000000004314                 MOVK            W19, #0x8000,LSL#16
.text:0000000000004318                 ADD             X1, X1, #aSecFlacDec@PAGEOFF ; "SEC_FLAC_DEC"
.text:000000000000431C                 ADD             X2, X2, #aSDAssertionPfl@PAGEOFF ; "%s(%d): assertion: 'pFlacDec' failed"
.text:0000000000004320                 MOV             W4, #0x353
.text:0000000000004324 loc_4324                                ; CODE XREF: SOMXFLACD_COMP_Reset+78↑j
.text:0000000000004324                                         ; SOMXFLACD_COMP_Reset+CC↑j ...
.text:0000000000004324                 MOV             W0, #3
.text:0000000000004328                 MOV             X3, X20
.text:000000000000432C                 BL              ._SEC_OSAL_Log
.text:0000000000004330 loc_4330                                ; CODE XREF: SOMXFLACD_COMP_Reset+194↓j
.text:0000000000004330                 LDP             X29, X30, [SP,#0x10+var_s0]
.text:0000000000004334                 MOV             W0, W19
.text:0000000000004338                 LDP             X20, X19, [SP+0x10+var_10],#0x20
.text:000000000000433C                 RET
.text:0000000000004340 ; ---------------------------------------------------------------------------
.text:0000000000004340 loc_4340                                ; CODE XREF: SOMXFLACD_COMP_Reset+2C↑j
.text:0000000000004340                 STR             XZR, [X20,#0xC8]
.text:0000000000004344                 B               loc_4330
.text:0000000000004344 ; } // starts at 41B0
.text:0000000000004344 ; End of function SOMXFLACD_COMP_Reset
.text:0000000000004348 ; =============== S U B R O U T I N E =======================================
.text:0000000000004348 ; Attributes: bp-based frame
.text:0000000000004348                 EXPORT SEC_OMX_ComponentInit
.text:0000000000004348 SEC_OMX_ComponentInit                   ; DATA XREF: LOAD:0000000000000600↑o
.text:0000000000004348 var_30          = -0x30
.text:0000000000004348 var_28          = -0x28
.text:0000000000004348 var_20          = -0x20
.text:0000000000004348 var_10          = -0x10
.text:0000000000004348 var_s0          =  0
.text:0000000000004348 ; __unwind {
.text:0000000000004348                 STR             D8, [SP,#-0x10+var_30]!
.text:000000000000434C                 STR             X23, [SP,#0x30+var_28]
.text:0000000000004350                 STP             X22, X21, [SP,#0x30+var_20]
.text:0000000000004354                 STP             X20, X19, [SP,#0x30+var_10]
.text:0000000000004358                 STP             X29, X30, [SP,#0x30+var_s0]
.text:000000000000435C                 ADD             X29, SP, #0x30
.text:0000000000004360                 CBZ             X0, loc_43D8
.text:0000000000004364                 MOV             X20, X1
.text:0000000000004368                 CBZ             X1, loc_43D8
.text:000000000000436C                 MOV             X19, X0
.text:0000000000004370                 ADRP            X0, #aOmxSecFlacDec@PAGE ; "OMX.SEC.flac.dec"
.text:0000000000004374                 ADD             X0, X0, #aOmxSecFlacDec@PAGEOFF ; "OMX.SEC.flac.dec"
.text:0000000000004378                 MOV             X1, X20
.text:000000000000437C                 BL              .SEC_OSAL_Strcmp
.text:0000000000004380                 CBZ             W0, loc_4450
.text:0000000000004384                 ADRP            X19, #aVendorSamsungF_0@PAGE ; "vendor/samsung/frameworks/avcodec/mm_pr"...
.text:0000000000004388                 ADD             X19, X19, #aVendorSamsungF_0@PAGEOFF ; "vendor/samsung/frameworks/avcodec/mm_pr"...
.text:000000000000438C                 MOV             W1, #0x2F ; '/'
.text:0000000000004390                 MOV             W2, #0x58 ; 'X'
.text:0000000000004394                 MOV             X0, X19
.text:0000000000004398                 BL              .__strrchr_chk
.text:000000000000439C                 CBZ             X0, loc_43B8
.text:00000000000043A0                 ADRP            X0, #aVendorSamsungF_0@PAGE ; "vendor/samsung/frameworks/avcodec/mm_pr"...
.text:00000000000043A4                 ADD             X0, X0, #aVendorSamsungF_0@PAGEOFF ; "vendor/samsung/frameworks/avcodec/mm_pr"...
.text:00000000000043A8                 MOV             W1, #0x2F ; '/'
.text:00000000000043AC                 MOV             W2, #0x58 ; 'X'
.text:00000000000043B0                 BL              .__strrchr_chk
.text:00000000000043B4                 ADD             X19, X0, #1
.text:00000000000043B8 loc_43B8                                ; CODE XREF: SEC_OMX_ComponentInit+54↑j
.text:00000000000043B8                 MOV             W21, #0x1005
.text:00000000000043BC                 ADRP            X1, #aSecFlacDec@PAGE ; "SEC_FLAC_DEC"
.text:00000000000043C0                 ADRP            X2, #aSDAssertionSec@PAGE ; "%s(%d): assertion: 'SEC_OSAL_Strcmp(SEC"...
.text:00000000000043C4                 MOVK            W21, #0x8000,LSL#16
.text:00000000000043C8                 ADD             X1, X1, #aSecFlacDec@PAGEOFF ; "SEC_FLAC_DEC"
.text:00000000000043CC                 ADD             X2, X2, #aSDAssertionSec@PAGEOFF ; "%s(%d): assertion: 'SEC_OSAL_Strcmp(SEC"...
.text:00000000000043D0                 MOV             W4, #0x36E
.text:00000000000043D4                 B               loc_4428
.text:00000000000043D8 ; ---------------------------------------------------------------------------
.text:00000000000043D8 loc_43D8                                ; CODE XREF: SEC_OMX_ComponentInit+18↑j
.text:00000000000043D8                                         ; SEC_OMX_ComponentInit+20↑j
.text:00000000000043D8                 ADRP            X19, #aVendorSamsungF_0@PAGE ; "vendor/samsung/frameworks/avcodec/mm_pr"...
.text:00000000000043DC                 ADD             X19, X19, #aVendorSamsungF_0@PAGEOFF ; "vendor/samsung/frameworks/avcodec/mm_pr"...
.text:00000000000043E0                 MOV             W1, #0x2F ; '/'
.text:00000000000043E4                 MOV             W2, #0x58 ; 'X'
.text:00000000000043E8                 MOV             X0, X19
.text:00000000000043EC                 BL              .__strrchr_chk
.text:00000000000043F0                 CBZ             X0, loc_440C
.text:00000000000043F4                 ADRP            X0, #aVendorSamsungF_0@PAGE ; "vendor/samsung/frameworks/avcodec/mm_pr"...
.text:00000000000043F8                 ADD             X0, X0, #aVendorSamsungF_0@PAGEOFF ; "vendor/samsung/frameworks/avcodec/mm_pr"...
.text:00000000000043FC                 MOV             W1, #0x2F ; '/'
.text:0000000000004400                 MOV             W2, #0x58 ; 'X'
.text:0000000000004404                 BL              .__strrchr_chk
.text:0000000000004408                 ADD             X19, X0, #1
.text:000000000000440C loc_440C                                ; CODE XREF: SEC_OMX_ComponentInit+A8↑j
.text:000000000000440C                 MOV             W21, #0x1005
.text:0000000000004410                 ADRP            X1, #aSecFlacDec@PAGE ; "SEC_FLAC_DEC"
.text:0000000000004414                 ADRP            X2, #aSDAssertionHco@PAGE ; "%s(%d): assertion: 'hComponent&&compone"...
.text:0000000000004418                 MOVK            W21, #0x8000,LSL#16
.text:000000000000441C                 ADD             X1, X1, #aSecFlacDec@PAGEOFF ; "SEC_FLAC_DEC"
.text:0000000000004420                 ADD             X2, X2, #aSDAssertionHco@PAGEOFF ; "%s(%d): assertion: 'hComponent&&compone"...
.text:0000000000004424                 MOV             W4, #0x36B
.text:0000000000004428 loc_4428                                ; CODE XREF: SEC_OMX_ComponentInit+8C↑j
.text:0000000000004428                 MOV             W0, #3
.text:000000000000442C                 MOV             X3, X19
.text:0000000000004430                 BL              ._SEC_OSAL_Log
.text:0000000000004434 loc_4434                                ; CODE XREF: SEC_OMX_ComponentInit+138↓j
.text:0000000000004434                                         ; SEC_OMX_ComponentInit+314↓j ...
.text:0000000000004434                 MOV             W0, W21
.text:0000000000004438                 LDR             X23, [SP,#0x30+var_28]
.text:000000000000443C                 LDP             X29, X30, [SP,#0x30+var_s0]
.text:0000000000004440                 LDP             X20, X19, [SP,#0x30+var_10]
.text:0000000000004444                 LDP             X22, X21, [SP,#0x30+var_20]
.text:0000000000004448                 LDR             D8, [SP+0x30+var_30],#0x40
.text:000000000000444C                 RET
.text:0000000000004450 ; ---------------------------------------------------------------------------
.text:0000000000004450 loc_4450                                ; CODE XREF: SEC_OMX_ComponentInit+38↑j
.text:0000000000004450                 MOV             X0, X19
.text:0000000000004454                 MOV             X1, X20
.text:0000000000004458                 BL              .SEC_OMX_AudioDecodeComponentInit
.text:000000000000445C                 CBZ             W0, loc_4484
.text:0000000000004460                 ADRP            X1, #aSecFlacDec@PAGE ; "SEC_FLAC_DEC"
.text:0000000000004464                 ADRP            X2, #aOmxErrorinsuff@PAGE ; "OMX_ErrorInsufficientResources, Line:%d"
.text:0000000000004468                 MOV             W21, W0
.text:000000000000446C                 ADD             X1, X1, #aSecFlacDec@PAGEOFF ; "SEC_FLAC_DEC"
.text:0000000000004470                 ADD             X2, X2, #aOmxErrorinsuff@PAGEOFF ; "OMX_ErrorInsufficientResources, Line:%d"
.text:0000000000004474                 MOV             W3, #0x372
.text:0000000000004478                 MOV             W0, #3
.text:000000000000447C                 BL              ._SEC_OSAL_Log
.text:0000000000004480                 B               loc_4434
.text:0000000000004484 ; ---------------------------------------------------------------------------
.text:0000000000004484 loc_4484                                ; CODE XREF: SEC_OMX_ComponentInit+114↑j
.text:0000000000004484                 LDR             X22, [X19,#8]
.text:0000000000004488                 MOV             W0, #0xD0
.text:000000000000448C                 STR             WZR, [X22,#0x18]
.text:0000000000004490                 BL              .SEC_OSAL_Malloc
.text:0000000000004494                 CBZ             X0, loc_4660
.text:0000000000004498                 MOV             W2, #0xD0
.text:000000000000449C                 MOV             W1, WZR
.text:00000000000044A0                 MOV             X20, X0
.text:00000000000044A4                 BL              .SEC_OSAL_Memset
.text:00000000000044A8                 ADRP            X8, #qword_10F8@PAGE
.text:00000000000044AC                 MOVI            V0.2S, #1
.text:00000000000044B0                 MOV             W9, #2
.text:00000000000044B4                 STR             X20, [X22,#0x40]
.text:00000000000044B8                 ADRP            X10, #xmmword_1090@PAGE
.text:00000000000044BC                 LDR             D8, [X8,#qword_10F8@PAGEOFF]
.text:00000000000044C0                 MOV             X8, #0x100000000
.text:00000000000044C4                 STR             W9, [X20,#0x94]
.text:00000000000044C8                 MOV             X9, #0x100000001
.text:00000000000044CC                 LDR             Q1, [X10,#xmmword_1090@PAGEOFF]
.text:00000000000044D0                 ADRP            X1, #aAudioFlac@PAGE ; "audio/flac"
.text:00000000000044D4                 ADD             X1, X1, #aAudioFlac@PAGEOFF ; "audio/flac"
.text:00000000000044D8                 STUR            D8, [X20,#0x8C]
.text:00000000000044DC                 LDR             X21, [X22,#0x1A0]
.text:00000000000044E0                 STR             D0, [X22,#8]
.text:00000000000044E4                 STR             X8, [X22,#0x2C0]
.text:00000000000044E8                 STR             Q1, [X22,#0x2B0]
.text:00000000000044EC                 STR             X9, [X22,#0x2C8]
.text:00000000000044F0                 LDR             X0, [X21,#0x38]
.text:00000000000044F4                 BL              .SEC_OSAL_Strcpy
.text:00000000000044F8                 ADRP            X8, #qword_1108@PAGE
.text:00000000000044FC                 STR             WZR, [X21,#0x34]
.text:0000000000004500                 ADRP            X9, #xmmword_10B0@PAGE
.text:0000000000004504                 STR             XZR, [X21,#0x40]
.text:0000000000004508                 MOV             W23, #1
.text:000000000000450C                 LDR             D0, [X8,#qword_1108@PAGEOFF]
.text:0000000000004510                 ADRP            X1, #aAudioRaw@PAGE ; "audio/raw"
.text:0000000000004514                 LDR             Q1, [X9,#xmmword_10B0@PAGEOFF]
.text:0000000000004518                 ADD             X1, X1, #aAudioRaw@PAGEOFF ; "audio/raw"
.text:000000000000451C                 STUR            X23, [X21,#0x2C]
.text:0000000000004520                 STR             D0, [X21,#0x48]
.text:0000000000004524                 STUR            Q1, [X21,#0x1C]
.text:0000000000004528                 LDR             X21, [X22,#0x1A0]
.text:000000000000452C                 LDR             X0, [X21,#0x138]
.text:0000000000004530                 STR             W23, [X21,#0x118]
.text:0000000000004534                 STR             WZR, [X21,#0x134]
.text:0000000000004538                 BL              .SEC_OSAL_Strcpy
.text:000000000000453C                 ADRP            X8, #xmmword_10D0@PAGE
.text:0000000000004540                 STR             XZR, [X21,#0x140]
.text:0000000000004544                 ADD             X9, X21, #0x12C
.text:0000000000004548                 STR             D8, [X21,#0x148]
.text:000000000000454C                 MOV             X0, X20
.text:0000000000004550                 LDR             Q0, [X8,#xmmword_10D0@PAGEOFF]
.text:0000000000004554                 ADD             X8, X21, #0x11C
.text:0000000000004558                 MOV             W1, WZR
.text:000000000000455C                 MOV             W2, #0x18
.text:0000000000004560                 MOV             W21, #0x18
.text:0000000000004564                 STR             Q0, [X8]
.text:0000000000004568                 STR             X23, [X9]
.text:000000000000456C                 BL              .SEC_OSAL_Memset
.text:0000000000004570                 ADRP            X8, #qword_1100@PAGE
.text:0000000000004574                 STR             W21, [X20]
.text:0000000000004578                 ADD             X0, X20, #0x18
.text:000000000000457C                 STRB            W23, [X20,#4]
.text:0000000000004580                 MOV             W2, #0x68 ; 'h'
.text:0000000000004584                 STR             WZR, [X20,#8]
.text:0000000000004588                 LDR             D0, [X8,#qword_1100@PAGEOFF]
.text:000000000000458C                 MOV             W1, WZR
.text:0000000000004590                 STUR            WZR, [X20,#5]
.text:0000000000004594                 STR             WZR, [X20,#0x14]
.text:0000000000004598                 STUR            D0, [X20,#0xC]
.text:000000000000459C                 BL              .SEC_OSAL_Memset
.text:00000000000045A0                 ADRP            X8, #qword_10E8@PAGE
.text:00000000000045A4                 STR             WZR, [X20,#0x28]
.text:00000000000045A8                 ADRP            X9, #SOMXFLACD_COMP_GetParameter_ptr@PAGE
.text:00000000000045AC                 ADRP            X10, #xmmword_10C0@PAGE
.text:00000000000045B0                 LDR             D0, [X8,#qword_10E8@PAGEOFF]
.text:00000000000045B4                 ADRP            X11, #SOMXFLACD_COMP_SetParameter_ptr@PAGE
.text:00000000000045B8                 LDR             X9, [X9,#SOMXFLACD_COMP_GetParameter_ptr@PAGEOFF]
.text:00000000000045BC                 MOV             X8, #0x100000068
.text:00000000000045C4                 LDR             X11, [X11,#SOMXFLACD_COMP_SetParameter_ptr@PAGEOFF]
.text:00000000000045C8                 MOV             W21, WZR
.text:00000000000045CC                 STR             D0, [X20,#0x20]
.text:00000000000045D0                 LDR             Q0, [X10,#xmmword_10C0@PAGEOFF]
.text:00000000000045D4                 ADRP            X10, #SOMXFLACD_COMP_Init_ptr@PAGE
.text:00000000000045D8                 FMOV            D1, X9
.text:00000000000045DC                 MOV             X9, #0x200000001
.text:00000000000045E4                 LDR             X10, [X10,#SOMXFLACD_COMP_Init_ptr@PAGEOFF]
.text:00000000000045E8                 STR             X8, [X20,#0x18]
.text:00000000000045EC                 ADRP            X8, #SOMXFLACD_COMP_Terminate_ptr@PAGE
.text:00000000000045F0                 STR             X9, [X20,#0x40]
.text:00000000000045F4                 ADRP            X9, #SOMXFLACD_COMP_SetConfig_ptr@PAGE
.text:00000000000045F8                 LDR             X8, [X8,#SOMXFLACD_COMP_Terminate_ptr@PAGEOFF]
.text:00000000000045FC                 INS             V1.D[1], X11
.text:0000000000004600                 STR             Q0, [X20,#0x30]
.text:0000000000004604                 FMOV            D0, X10
.text:0000000000004608                 ADRP            X10, #SOMXFLACD_COMP_ComponentRoleEnum_ptr@PAGE
.text:000000000000460C                 LDR             X9, [X9,#SOMXFLACD_COMP_SetConfig_ptr@PAGEOFF]
.text:0000000000004610                 LDR             X10, [X10,#SOMXFLACD_COMP_ComponentRoleEnum_ptr@PAGEOFF]
.text:0000000000004614                 STUR            Q1, [X19,#0x28]
.text:0000000000004618                 INS             V0.D[1], X8
.text:000000000000461C                 ADRP            X8, #SEC_OMX_ComponentDeinit_ptr@PAGE
.text:0000000000004620                 LDR             X8, [X8,#SEC_OMX_ComponentDeinit_ptr@PAGEOFF]
.text:0000000000004624                 STR             X9, [X19,#0x40]
.text:0000000000004628                 ADRP            X9, #SOMXFLACD_COMP_bufferProcess_ptr@PAGE
.text:000000000000462C                 STR             X10, [X19,#0xA0]
.text:0000000000004630                 LDR             X9, [X9,#SOMXFLACD_COMP_bufferProcess_ptr@PAGEOFF]
.text:0000000000004634                 STR             X8, [X19,#0x90]
.text:0000000000004638                 ADRP            X8, #SOMXFLACD_COMP_Reset_ptr@PAGE
.text:000000000000463C                 STR             Q0, [X22,#0x330]
.text:0000000000004640                 LDR             X8, [X8,#SOMXFLACD_COMP_Reset_ptr@PAGEOFF]
.text:0000000000004644                 STR             X9, [X22,#0x340]
.text:0000000000004648                 ADRP            X9, #sub_4700@PAGE
.text:000000000000464C                 ADD             X9, X9, #sub_4700@PAGEOFF
.text:0000000000004650                 STR             W23, [X22,#0x10]
.text:0000000000004654                 STR             X8, [X22,#0x378]
.text:0000000000004658                 STR             X9, [X22,#0x380]
.text:000000000000465C                 B               loc_4434
.text:0000000000004660 ; ---------------------------------------------------------------------------
.text:0000000000004660 loc_4660                                ; CODE XREF: SEC_OMX_ComponentInit+14C↑j
.text:0000000000004660                 MOV             X0, X19
.text:0000000000004664                 BL              .SEC_OMX_AudioDecodeComponentDeinit
.text:0000000000004668                 ADRP            X1, #aSecFlacDec@PAGE ; "SEC_FLAC_DEC"
.text:000000000000466C                 ADRP            X2, #aOmxErrorinsuff@PAGE ; "OMX_ErrorInsufficientResources, Line:%d"
.text:0000000000004670                 ADD             X1, X1, #aSecFlacDec@PAGEOFF ; "SEC_FLAC_DEC"
.text:0000000000004674                 ADD             X2, X2, #aOmxErrorinsuff@PAGEOFF ; "OMX_ErrorInsufficientResources, Line:%d"
.text:0000000000004678                 MOV             W3, #0x37D
.text:000000000000467C                 MOV             W0, #3
.text:0000000000004680                 BL              ._SEC_OSAL_Log
.text:0000000000004684                 MOV             W8, #0x80001005
.text:000000000000468C                 SUB             W21, W8, #5
.text:0000000000004690                 B               loc_4434
.text:0000000000004690 ; } // starts at 4348
.text:0000000000004690 ; End of function SEC_OMX_ComponentInit
.text:0000000000004690 ; ---------------------------------------------------------------------------
.text:0000000000004694                 ALIGN 8
.text:0000000000004698 ; =============== S U B R O U T I N E =======================================
.text:0000000000004698 ; Attributes: bp-based frame
.text:0000000000004698                 EXPORT SEC_OMX_ComponentDeinit
.text:0000000000004698 SEC_OMX_ComponentDeinit                 ; DATA XREF: LOAD:0000000000000690↑o
.text:0000000000004698                                         ; .got:SEC_OMX_ComponentDeinit_ptr↓o
.text:0000000000004698 var_10          = -0x10
.text:0000000000004698 var_s0          =  0
.text:0000000000004698 ; __unwind {
.text:0000000000004698                 STP             X20, X19, [SP,#-0x10+var_10]!
.text:000000000000469C                 STP             X29, X30, [SP,#0x10+var_s0]
.text:00000000000046A0                 ADD             X29, SP, #0x10
.text:00000000000046A4                 CBZ             X0, loc_46EC
.text:00000000000046A8                 LDR             X8, [X0,#8]
.text:00000000000046AC                 LDR             X20, [X8,#0x40]
.text:00000000000046B0                 BL              .SEC_OMX_AudioDecodeComponentDeinit
.text:00000000000046B4                 MOV             W19, W0
.text:00000000000046B8                 CBZ             W0, loc_46DC
.text:00000000000046BC                 ADRP            X1, #aSecFlacDec@PAGE ; "SEC_FLAC_DEC"
.text:00000000000046C0                 ADRP            X2, #aSCanNotRelease@PAGE ; "%s: can not release omx base component "...
.text:00000000000046C4                 ADRP            X3, #aSecOmxComponen_2@PAGE ; "SEC_OMX_ComponentDeinit"
.text:00000000000046C8                 ADD             X1, X1, #aSecFlacDec@PAGEOFF ; "SEC_FLAC_DEC"
.text:00000000000046CC                 ADD             X2, X2, #aSCanNotRelease@PAGEOFF ; "%s: can not release omx base component "...
.text:00000000000046D0                 ADD             X3, X3, #aSecOmxComponen_2@PAGEOFF ; "SEC_OMX_ComponentDeinit"
.text:00000000000046D4                 MOV             W0, #2
.text:00000000000046D8                 BL              ._SEC_OSAL_Log
.text:00000000000046DC loc_46DC                                ; CODE XREF: SEC_OMX_ComponentDeinit+20↑j
.text:00000000000046DC                 CBZ             X20, loc_46F0
.text:00000000000046E0                 MOV             X0, X20
.text:00000000000046E4                 BL              .SEC_OSAL_Free
.text:00000000000046E8                 B               loc_46F0
.text:00000000000046EC ; ---------------------------------------------------------------------------
.text:00000000000046EC loc_46EC                                ; CODE XREF: SEC_OMX_ComponentDeinit+C↑j
.text:00000000000046EC                 MOV             W19, WZR
.text:00000000000046F0 loc_46F0                                ; CODE XREF: SEC_OMX_ComponentDeinit:loc_46DC↑j
.text:00000000000046F0                                         ; SEC_OMX_ComponentDeinit+50↑j
.text:00000000000046F0                 LDP             X29, X30, [SP,#0x10+var_s0]
.text:00000000000046F4                 MOV             W0, W19
.text:00000000000046F8                 LDP             X20, X19, [SP+0x10+var_10],#0x20
.text:00000000000046FC                 RET
.text:00000000000046FC ; } // starts at 4698
.text:00000000000046FC ; End of function SEC_OMX_ComponentDeinit
.text:0000000000004700 ; =============== S U B R O U T I N E =======================================
.text:0000000000004700 sub_4700                                ; DATA XREF: SEC_OMX_ComponentInit+300↑o
.text:0000000000004700                                         ; SEC_OMX_ComponentInit+304↑o
.text:0000000000004700 ; __unwind {
.text:0000000000004700                 LDR             X8, [X0,#0x40]
.text:0000000000004704                 CBZ             X8, locret_4718
.text:0000000000004708                 LDR             W9, [X0,#0x10C]
.text:000000000000470C                 LDR             X1, [X0,#0x110]
.text:0000000000004710                 TBZ             W9, #0, loc_471C
.text:0000000000004714                 CBNZ            X1, loc_471C
.text:0000000000004718 locret_4718                             ; CODE XREF: sub_4700+4↑j
.text:0000000000004718                 RET
.text:000000000000471C ; ---------------------------------------------------------------------------
.text:000000000000471C loc_471C                                ; CODE XREF: sub_4700+10↑j
.text:000000000000471C                                         ; sub_4700+14↑j
.text:000000000000471C                 ADD             X0, X8, #0xA0
.text:0000000000004720                 B               .SOMX_TS_SetFromInputTs
.text:0000000000004720 ; } // starts at 4700
.text:0000000000004720 ; End of function sub_4700
.text:0000000000004720 ; ---------------------------------------------------------------------------
.text:0000000000004724                 ALIGN 8
.text:0000000000004728 ; =============== S U B R O U T I N E =======================================
.text:0000000000004728 ; Attributes: bp-based frame
.text:0000000000004728                 EXPORT SEC_OMX_COMPONENT_Library_Register
.text:0000000000004728 SEC_OMX_COMPONENT_Library_Register      ; DATA XREF: LOAD:00000000000005E8↑o
.text:0000000000004728 var_10          = -0x10
.text:0000000000004728 var_s0          =  0
.text:0000000000004728 ; __unwind {
.text:0000000000004728                 CBZ             X0, loc_4774
.text:000000000000472C                 STR             X19, [SP,#-0x10+var_10]!
.text:0000000000004730                 STP             X29, X30, [SP,#0x10+var_s0]
.text:0000000000004734                 ADD             X29, SP, #0x10
.text:0000000000004738                 MOV             X19, X0
.text:000000000000473C                 LDR             X0, [X0]
.text:0000000000004740                 ADRP            X1, #aOmxSecFlacDec@PAGE ; "OMX.SEC.flac.dec"
.text:0000000000004744                 ADD             X1, X1, #aOmxSecFlacDec@PAGEOFF ; "OMX.SEC.flac.dec"
.text:0000000000004748                 BL              .SEC_OSAL_Strcpy
.text:000000000000474C                 LDR             X8, [X19]
.text:0000000000004750                 ADRP            X1, #aAudioDecoderFl@PAGE ; "audio_decoder.flac"
.text:0000000000004754                 ADD             X1, X1, #aAudioDecoderFl@PAGEOFF ; "audio_decoder.flac"
.text:0000000000004758                 ADD             X0, X8, #0x80
.text:000000000000475C                 BL              .SEC_OSAL_Strcpy
.text:0000000000004760                 LDR             X8, [X19]
.text:0000000000004764                 MOV             W9, #1
.text:0000000000004768                 STR             W9, [X8,#0x580]
.text:000000000000476C                 LDP             X29, X30, [SP,#0x10+var_s0]
.text:0000000000004770                 LDR             X19, [SP+0x10+var_10],#0x20
.text:0000000000004774 loc_4774                                ; CODE XREF: SEC_OMX_COMPONENT_Library_Register↑j
.text:0000000000004774                 MOV             W0, #1
.text:0000000000004778                 RET
.text:0000000000004778 ; } // starts at 4728
.text:0000000000004778 ; End of function SEC_OMX_COMPONENT_Library_Register
.text:0000000000004778 ; .text         ends
