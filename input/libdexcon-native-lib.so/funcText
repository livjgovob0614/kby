.text:0000000000000D40 ; ===========================================================================
.text:0000000000000D40 ; Segment type: Pure code
.text:0000000000000D40                 AREA .text, CODE
.text:0000000000000D40                 ; ORG 0xD40
.text:0000000000000D40                 CODE64
.text:0000000000000D40 ; =============== S U B R O U T I N E =======================================
.text:0000000000000D40                 EXPORT start
.text:0000000000000D40 start                                   ; DATA XREF: LOAD:0000000000000018↑o
.text:0000000000000D40                                         ; LOAD:00000000000002D0↑o ...
.text:0000000000000D40                 ADRP            X0, #unk_12000@PAGE
.text:0000000000000D44                 ADD             X0, X0, #unk_12000@PAGEOFF ; void *
.text:0000000000000D48                 B               .__cxa_finalize
.text:0000000000000D48 ; End of function start
.text:0000000000000D4C ; =============== S U B R O U T I N E =======================================
.text:0000000000000D4C ; Attributes: bp-based frame
.text:0000000000000D4C sub_D4C                                 ; DATA XREF: .text:0000000000000D6C↓o
.text:0000000000000D4C                                         ; .text:0000000000000D74↓o
.text:0000000000000D4C var_s0          =  0
.text:0000000000000D4C                 STP             X29, X30, [SP,#-0x10+var_s0]!
.text:0000000000000D50                 MOV             X29, SP
.text:0000000000000D54                 CBZ             X0, loc_D5C
.text:0000000000000D58                 BLR             X0
.text:0000000000000D5C loc_D5C                                 ; CODE XREF: sub_D4C+8↑j
.text:0000000000000D5C                 LDP             X29, X30, [SP+var_s0],#0x10
.text:0000000000000D60                 RET
.text:0000000000000D60 ; End of function sub_D4C
.text:0000000000000D64 ; ---------------------------------------------------------------------------
.text:0000000000000D64                 MOV             X1, X0
.text:0000000000000D68                 ADRP            X2, #unk_12000@PAGE
.text:0000000000000D6C                 ADRP            X0, #sub_D4C@PAGE
.text:0000000000000D70                 ADD             X2, X2, #unk_12000@PAGEOFF
.text:0000000000000D74                 ADD             X0, X0, #sub_D4C@PAGEOFF
.text:0000000000000D78                 B               .__cxa_atexit
.text:0000000000000D7C ; =============== S U B R O U T I N E =======================================
.text:0000000000000D7C ; Attributes: bp-based frame
.text:0000000000000D7C                 EXPORT JNI_OnLoad
.text:0000000000000D7C JNI_OnLoad                              ; DATA XREF: LOAD:00000000000003A8↑o
.text:0000000000000D7C var_34          = -0x34
.text:0000000000000D7C var_30          = -0x30
.text:0000000000000D7C var_24          = -0x24
.text:0000000000000D7C var_20          = -0x20
.text:0000000000000D7C var_18          = -0x18
.text:0000000000000D7C var_10          = -0x10
.text:0000000000000D7C var_8           = -8
.text:0000000000000D7C var_s0          =  0
.text:0000000000000D7C ; __unwind {
.text:0000000000000D7C                 SUB             SP, SP, #0x50
.text:0000000000000D80                 STP             X29, X30, [SP,#0x40+var_s0]
.text:0000000000000D84                 ADD             X29, SP, #0x40
.text:0000000000000D88                 MOV             W2, #0x10004 ; int
.text:0000000000000D90                 SUB             X8, X29, #-var_10
.text:0000000000000D94                 MOV             X9, XZR
.text:0000000000000D98                 MOV             W10, #0xFFFFFFFF
.text:0000000000000D9C                 MRS             X11, #3, c13, c0, #2
.text:0000000000000DA0                 LDR             X11, [X11,#0x28]
.text:0000000000000DA4                 STUR            X11, [X29,#var_8]
.text:0000000000000DA8                 STUR            X0, [X29,#var_18]
.text:0000000000000DAC                 STR             X1, [SP,#0x40+var_20]
.text:0000000000000DB0                 STUR            X9, [X29,#var_10]
.text:0000000000000DB4                 STR             W10, [SP,#0x40+var_24]
.text:0000000000000DB8                 STR             X9, [SP,#0x40+var_30]
.text:0000000000000DBC                 LDUR            X0, [X29,#var_18] ; this
.text:0000000000000DC0                 MOV             X1, X8  ; void **
.text:0000000000000DC4                 BL              ._ZN7_JavaVM6GetEnvEPPvi ; _JavaVM::GetEnv(void **,int)
.text:0000000000000DC8                 CBZ             W0, loc_DD0
.text:0000000000000DCC                 B               loc_DF8
.text:0000000000000DD0 ; ---------------------------------------------------------------------------
.text:0000000000000DD0 loc_DD0                                 ; CODE XREF: JNI_OnLoad+4C↑j
.text:0000000000000DD0                 LDUR            X8, [X29,#var_10]
.text:0000000000000DD4                 STR             X8, [SP,#0x40+var_30]
.text:0000000000000DD8                 LDR             X0, [SP,#0x40+var_30]
.text:0000000000000DDC                 BL              sub_E70
.text:0000000000000DE0                 CMP             W0, #1
.text:0000000000000DE4                 B.EQ            loc_DEC
.text:0000000000000DE8                 B               loc_DF8
.text:0000000000000DEC ; ---------------------------------------------------------------------------
.text:0000000000000DEC loc_DEC                                 ; CODE XREF: JNI_OnLoad+68↑j
.text:0000000000000DEC                 MOV             W8, #0x10004
.text:0000000000000DF4                 STR             W8, [SP,#0x40+var_24]
.text:0000000000000DF8 loc_DF8                                 ; CODE XREF: JNI_OnLoad+50↑j
.text:0000000000000DF8                                         ; JNI_OnLoad+6C↑j
.text:0000000000000DF8                 LDR             W0, [SP,#0x40+var_24]
.text:0000000000000DFC                 MRS             X8, #3, c13, c0, #2
.text:0000000000000E00                 LDR             X8, [X8,#0x28]
.text:0000000000000E04                 LDUR            X9, [X29,#var_8]
.text:0000000000000E08                 CMP             X8, X9
.text:0000000000000E0C                 STR             W0, [SP,#0x40+var_34]
.text:0000000000000E10                 B.NE            loc_E24
.text:0000000000000E14                 LDR             W0, [SP,#0x40+var_34]
.text:0000000000000E18                 LDP             X29, X30, [SP,#0x40+var_s0]
.text:0000000000000E1C                 ADD             SP, SP, #0x50 ; 'P'
.text:0000000000000E20                 RET
.text:0000000000000E24 ; ---------------------------------------------------------------------------
.text:0000000000000E24 loc_E24                                 ; CODE XREF: JNI_OnLoad+94↑j
.text:0000000000000E24                 BL              .__stack_chk_fail
.text:0000000000000E24 ; } // starts at D7C
.text:0000000000000E24 ; End of function JNI_OnLoad
.text:0000000000000E28 ; =============== S U B R O U T I N E =======================================
.text:0000000000000E28 ; Attributes: bp-based frame
.text:0000000000000E28 ; __int64 __fastcall _JavaVM::GetEnv(_JavaVM *__hidden this, void **, int)
.text:0000000000000E28                 WEAK _ZN7_JavaVM6GetEnvEPPvi
.text:0000000000000E28 _ZN7_JavaVM6GetEnvEPPvi                 ; CODE XREF: _JavaVM::GetEnv(void **,int)+C↑j
.text:0000000000000E28                                         ; DATA XREF: LOAD:00000000000003D8↑o ...
.text:0000000000000E28 var_20          = -0x20
.text:0000000000000E28 var_14          = -0x14
.text:0000000000000E28 var_10          = -0x10
.text:0000000000000E28 var_8           = -8
.text:0000000000000E28 var_s0          =  0
.text:0000000000000E28 ; __unwind {
.text:0000000000000E28                 SUB             SP, SP, #0x30
.text:0000000000000E2C                 STP             X29, X30, [SP,#0x20+var_s0]
.text:0000000000000E30                 ADD             X29, SP, #0x20
.text:0000000000000E34                 STUR            X0, [X29,#var_8]
.text:0000000000000E38                 STR             X1, [SP,#0x20+var_10]
.text:0000000000000E3C                 STR             W2, [SP,#0x20+var_14]
.text:0000000000000E40                 LDUR            X0, [X29,#var_8]
.text:0000000000000E44                 LDR             X1, [X0]
.text:0000000000000E48                 LDR             X1, [X1,#0x30]
.text:0000000000000E4C                 LDR             X8, [SP,#0x20+var_10]
.text:0000000000000E50                 LDR             W2, [SP,#0x20+var_14]
.text:0000000000000E54                 STR             X1, [SP,#0x20+var_20]
.text:0000000000000E58                 MOV             X1, X8
.text:0000000000000E5C                 LDR             X8, [SP,#0x20+var_20]
.text:0000000000000E60                 BLR             X8
.text:0000000000000E64                 LDP             X29, X30, [SP,#0x20+var_s0]
.text:0000000000000E68                 ADD             SP, SP, #0x30 ; '0'
.text:0000000000000E6C                 RET
.text:0000000000000E6C ; } // starts at E28
.text:0000000000000E6C ; End of function _JavaVM::GetEnv(void **,int)
.text:0000000000000E70 ; =============== S U B R O U T I N E =======================================
.text:0000000000000E70 ; Attributes: bp-based frame
.text:0000000000000E70 sub_E70                                 ; CODE XREF: JNI_OnLoad+60↑p
.text:0000000000000E70 var_10          = -0x10
.text:0000000000000E70 var_4           = -4
.text:0000000000000E70 var_s0          =  0
.text:0000000000000E70 ; __unwind {
.text:0000000000000E70                 SUB             SP, SP, #0x20
.text:0000000000000E74                 STP             X29, X30, [SP,#0x10+var_s0]
.text:0000000000000E78                 ADD             X29, SP, #0x10
.text:0000000000000E7C                 ADRP            X8, #off_12010@PAGE ; "ccic_open"
.text:0000000000000E80                 ADD             X2, X8, #off_12010@PAGEOFF ; "ccic_open"
.text:0000000000000E84                 MOV             W3, #6
.text:0000000000000E88                 ADRP            X8, #off_12008@PAGE ; "com/samsung/android/lib/dexcontrol/uvdm"...
.text:0000000000000E8C                 ADD             X8, X8, #off_12008@PAGEOFF ; "com/samsung/android/lib/dexcontrol/uvdm"...
.text:0000000000000E90                 STR             X0, [SP,#0x10+var_10]
.text:0000000000000E94                 LDR             X0, [SP,#0x10+var_10]
.text:0000000000000E98                 LDR             X1, [X8] ; "com/samsung/android/lib/dexcontrol/uvdm"...
.text:0000000000000E9C                 BL              sub_EC4
.text:0000000000000EA0                 CBNZ            W0, loc_EAC
.text:0000000000000EA4                 STUR            WZR, [X29,#var_4]
.text:0000000000000EA8                 B               loc_EB4
.text:0000000000000EAC ; ---------------------------------------------------------------------------
.text:0000000000000EAC loc_EAC                                 ; CODE XREF: sub_E70+30↑j
.text:0000000000000EAC                 MOV             W8, #1
.text:0000000000000EB0                 STUR            W8, [X29,#var_4]
.text:0000000000000EB4 loc_EB4                                 ; CODE XREF: sub_E70+38↑j
.text:0000000000000EB4                 LDUR            W0, [X29,#var_4]
.text:0000000000000EB8                 LDP             X29, X30, [SP,#0x10+var_s0]
.text:0000000000000EBC                 ADD             SP, SP, #0x20 ; ' '
.text:0000000000000EC0                 RET
.text:0000000000000EC0 ; } // starts at E70
.text:0000000000000EC0 ; End of function sub_E70
.text:0000000000000EC4 ; =============== S U B R O U T I N E =======================================
.text:0000000000000EC4 ; Attributes: bp-based frame
.text:0000000000000EC4 sub_EC4                                 ; CODE XREF: sub_E70+2C↑p
.text:0000000000000EC4 var_30          = -0x30
.text:0000000000000EC4 var_24          = -0x24
.text:0000000000000EC4 var_20          = -0x20
.text:0000000000000EC4 var_18          = -0x18
.text:0000000000000EC4 var_10          = -0x10
.text:0000000000000EC4 var_4           = -4
.text:0000000000000EC4 var_s0          =  0
.text:0000000000000EC4 ; __unwind {
.text:0000000000000EC4                 SUB             SP, SP, #0x40
.text:0000000000000EC8                 STP             X29, X30, [SP,#0x30+var_s0]
.text:0000000000000ECC                 ADD             X29, SP, #0x30
.text:0000000000000ED0                 STUR            X0, [X29,#var_10]
.text:0000000000000ED4                 STR             X1, [SP,#0x30+var_18]
.text:0000000000000ED8                 STR             X2, [SP,#0x30+var_20]
.text:0000000000000EDC                 STR             W3, [SP,#0x30+var_24]
.text:0000000000000EE0                 LDUR            X0, [X29,#var_10] ; this
.text:0000000000000EE4                 LDR             X1, [SP,#0x30+var_18] ; char *
.text:0000000000000EE8                 BL              ._ZN7_JNIEnv9FindClassEPKc ; _JNIEnv::FindClass(char const*)
.text:0000000000000EEC                 STR             X0, [SP,#0x30+var_30]
.text:0000000000000EF0                 LDR             X0, [SP,#0x30+var_30]
.text:0000000000000EF4                 CBNZ            X0, loc_F00
.text:0000000000000EF8                 STUR            WZR, [X29,#var_4]
.text:0000000000000EFC                 B               loc_F28
.text:0000000000000F00 ; ---------------------------------------------------------------------------
.text:0000000000000F00 loc_F00                                 ; CODE XREF: sub_EC4+30↑j
.text:0000000000000F00                 LDUR            X0, [X29,#var_10]
.text:0000000000000F04                 LDR             X1, [SP,#0x30+var_30]
.text:0000000000000F08                 LDR             X2, [SP,#0x30+var_20]
.text:0000000000000F0C                 LDR             W3, [SP,#0x30+var_24]
.text:0000000000000F10                 BL              ._ZN7_JNIEnv15RegisterNativesEP7_jclassPK15JNINativeMethodi ; _JNIEnv::RegisterNatives(_jclass *,JNINativeMethod const*,int)
.text:0000000000000F14                 TBZ             W0, #0x1F, loc_F20
.text:0000000000000F18                 STUR            WZR, [X29,#var_4]
.text:0000000000000F1C                 B               loc_F28
.text:0000000000000F20 ; ---------------------------------------------------------------------------
.text:0000000000000F20 loc_F20                                 ; CODE XREF: sub_EC4+50↑j
.text:0000000000000F20                 MOV             W8, #1
.text:0000000000000F24                 STUR            W8, [X29,#var_4]
.text:0000000000000F28 loc_F28                                 ; CODE XREF: sub_EC4+38↑j
.text:0000000000000F28                                         ; sub_EC4+58↑j
.text:0000000000000F28                 LDUR            W0, [X29,#var_4]
.text:0000000000000F2C                 LDP             X29, X30, [SP,#0x30+var_s0]
.text:0000000000000F30                 ADD             SP, SP, #0x40 ; '@'
.text:0000000000000F34                 RET
.text:0000000000000F34 ; } // starts at EC4
.text:0000000000000F34 ; End of function sub_EC4
.text:0000000000000F38 ; =============== S U B R O U T I N E =======================================
.text:0000000000000F38 ; Attributes: bp-based frame
.text:0000000000000F38 ; __int64 __fastcall _JNIEnv::FindClass(_JNIEnv *__hidden this, const char *)
.text:0000000000000F38                 WEAK _ZN7_JNIEnv9FindClassEPKc
.text:0000000000000F38 _ZN7_JNIEnv9FindClassEPKc               ; CODE XREF: _JNIEnv::FindClass(char const*)+C↑j
.text:0000000000000F38                                         ; DATA XREF: LOAD:0000000000000528↑o ...
.text:0000000000000F38 var_18          = -0x18
.text:0000000000000F38 var_10          = -0x10
.text:0000000000000F38 var_8           = -8
.text:0000000000000F38 var_s0          =  0
.text:0000000000000F38 ; __unwind {
.text:0000000000000F38                 SUB             SP, SP, #0x30
.text:0000000000000F3C                 STP             X29, X30, [SP,#0x20+var_s0]
.text:0000000000000F40                 ADD             X29, SP, #0x20
.text:0000000000000F44                 STUR            X0, [X29,#var_8]
.text:0000000000000F48                 STR             X1, [SP,#0x20+var_10]
.text:0000000000000F4C                 LDUR            X0, [X29,#var_8]
.text:0000000000000F50                 LDR             X1, [X0]
.text:0000000000000F54                 LDR             X1, [X1,#0x30]
.text:0000000000000F58                 LDR             X8, [SP,#0x20+var_10]
.text:0000000000000F5C                 STR             X1, [SP,#0x20+var_18]
.text:0000000000000F60                 MOV             X1, X8
.text:0000000000000F64                 LDR             X8, [SP,#0x20+var_18]
.text:0000000000000F68                 BLR             X8
.text:0000000000000F6C                 LDP             X29, X30, [SP,#0x20+var_s0]
.text:0000000000000F70                 ADD             SP, SP, #0x30 ; '0'
.text:0000000000000F74                 RET
.text:0000000000000F74 ; } // starts at F38
.text:0000000000000F74 ; End of function _JNIEnv::FindClass(char const*)
.text:0000000000000F78 ; =============== S U B R O U T I N E =======================================
.text:0000000000000F78 ; Attributes: bp-based frame
.text:0000000000000F78 ; _JNIEnv::RegisterNatives(_jclass *, JNINativeMethod const*, int)
.text:0000000000000F78                 WEAK _ZN7_JNIEnv15RegisterNativesEP7_jclassPK15JNINativeMethodi
.text:0000000000000F78 _ZN7_JNIEnv15RegisterNativesEP7_jclassPK15JNINativeMethodi
.text:0000000000000F78                                         ; CODE XREF: _JNIEnv::RegisterNatives(_jclass *,JNINativeMethod const*,int)+C↑j
.text:0000000000000F78                                         ; DATA XREF: LOAD:0000000000000300↑o ...
.text:0000000000000F78 var_28          = -0x28
.text:0000000000000F78 var_1C          = -0x1C
.text:0000000000000F78 var_18          = -0x18
.text:0000000000000F78 var_10          = -0x10
.text:0000000000000F78 var_8           = -8
.text:0000000000000F78 var_s0          =  0
.text:0000000000000F78 ; __unwind {
.text:0000000000000F78                 SUB             SP, SP, #0x40
.text:0000000000000F7C                 STP             X29, X30, [SP,#0x30+var_s0]
.text:0000000000000F80                 ADD             X29, SP, #0x30
.text:0000000000000F84                 STUR            X0, [X29,#var_8]
.text:0000000000000F88                 STUR            X1, [X29,#var_10]
.text:0000000000000F8C                 STR             X2, [SP,#0x30+var_18]
.text:0000000000000F90                 STR             W3, [SP,#0x30+var_1C]
.text:0000000000000F94                 LDUR            X0, [X29,#var_8]
.text:0000000000000F98                 LDR             X1, [X0]
.text:0000000000000F9C                 LDR             X1, [X1,#0x6B8]
.text:0000000000000FA0                 LDUR            X2, [X29,#var_10]
.text:0000000000000FA4                 LDR             X8, [SP,#0x30+var_18]
.text:0000000000000FA8                 LDR             W3, [SP,#0x30+var_1C]
.text:0000000000000FAC                 STR             X1, [SP,#0x30+var_28]
.text:0000000000000FB0                 MOV             X1, X2
.text:0000000000000FB4                 MOV             X2, X8
.text:0000000000000FB8                 LDR             X8, [SP,#0x30+var_28]
.text:0000000000000FBC                 BLR             X8
.text:0000000000000FC0                 LDP             X29, X30, [SP,#0x30+var_s0]
.text:0000000000000FC4                 ADD             SP, SP, #0x40 ; '@'
.text:0000000000000FC8                 RET
.text:0000000000000FC8 ; } // starts at F78
.text:0000000000000FC8 ; End of function _JNIEnv::RegisterNatives(_jclass *,JNINativeMethod const*,int)
.text:0000000000000FCC ; =============== S U B R O U T I N E =======================================
.text:0000000000000FCC ; Attributes: bp-based frame
.text:0000000000000FCC sub_FCC                                 ; DATA XREF: .data:0000000000012020↓o
.text:0000000000000FCC var_10          = -0x10
.text:0000000000000FCC var_8           = -8
.text:0000000000000FCC var_s0          =  0
.text:0000000000000FCC ; __unwind {
.text:0000000000000FCC                 SUB             SP, SP, #0x20
.text:0000000000000FD0                 STP             X29, X30, [SP,#0x10+var_s0]
.text:0000000000000FD4                 ADD             X29, SP, #0x10
.text:0000000000000FD8                 STR             X0, [SP,#0x10+var_8]
.text:0000000000000FDC                 STR             X1, [SP,#0x10+var_10]
.text:0000000000000FE0                 ADRP            X0, #aDevCcicMisc@PAGE ; "/dev/ccic_misc"
.text:0000000000000FE4                 ADD             X0, X0, #aDevCcicMisc@PAGEOFF ; "/dev/ccic_misc"
.text:0000000000000FE8                 MOV             W1, #2  ; oflag
.text:0000000000000FEC                 BL              .open
.text:0000000000000FF0                 ADRP            X30, #fd_ptr@PAGE
.text:0000000000000FF4                 LDR             X30, [X30,#fd_ptr@PAGEOFF]
.text:0000000000000FF8                 STR             W0, [X30]
.text:0000000000000FFC                 LDR             W0, [X30]
.text:0000000000001000                 LDP             X29, X30, [SP,#0x10+var_s0]
.text:0000000000001004                 ADD             SP, SP, #0x20 ; ' '
.text:0000000000001008                 RET
.text:0000000000001008 ; } // starts at FCC
.text:0000000000001008 ; End of function sub_FCC
.text:000000000000100C ; =============== S U B R O U T I N E =======================================
.text:000000000000100C ; Attributes: bp-based frame
.text:000000000000100C sub_100C                                ; DATA XREF: .data:0000000000012038↓o
.text:000000000000100C var_F8          = -0xF8
.text:000000000000100C var_EC          = -0xEC
.text:000000000000100C var_E8          = -0xE8
.text:000000000000100C var_E4          = -0xE4
.text:000000000000100C var_E0          = -0xE0
.text:000000000000100C var_D8          = -0xD8
.text:000000000000100C var_D0          = -0xD0
.text:000000000000100C var_CC          = -0xCC
.text:000000000000100C var_C8          = -0xC8
.text:000000000000100C var_C0          = -0xC0
.text:000000000000100C var_B4          = -0xB4
.text:000000000000100C var_B0          = -0xB0
.text:000000000000100C var_A4          = -0xA4
.text:000000000000100C var_A0          = -0xA0
.text:000000000000100C s               = -0x98
.text:000000000000100C var_18          = -0x18
.text:000000000000100C var_10          = -0x10
.text:000000000000100C var_s0          =  0
.text:000000000000100C ; __unwind {
.text:000000000000100C                 SUB             SP, SP, #0x110
.text:0000000000001010                 STR             X28, [SP,#0x100+var_10]
.text:0000000000001014                 STP             X29, X30, [SP,#0x100+var_s0]
.text:0000000000001018                 ADD             X29, SP, #0x100
.text:000000000000101C                 ADRP            X8, #fd_ptr@PAGE
.text:0000000000001020                 LDR             X8, [X8,#fd_ptr@PAGEOFF]
.text:0000000000001024                 ADRP            X9, #buf_ptr@PAGE
.text:0000000000001028                 LDR             X9, [X9,#buf_ptr@PAGEOFF]
.text:000000000000102C                 ADRP            X10, #data_ptr@PAGE
.text:0000000000001030                 LDR             X10, [X10,#data_ptr@PAGEOFF]
.text:0000000000001034                 MOV             W11, #0xEC
.text:0000000000001038                 MOV             W12, #1
.text:000000000000103C                 MOV             W13, WZR
.text:0000000000001040                 MOV             X14, #0x80
.text:0000000000001044                 ADD             X15, SP, #0x100+s
.text:0000000000001048                 MRS             X16, #3, c13, c0, #2
.text:000000000000104C                 LDR             X16, [X16,#0x28]
.text:0000000000001050                 STUR            X16, [X29,#var_18]
.text:0000000000001054                 STR             X0, [SP,#0x100+var_A0]
.text:0000000000001058                 STR             W1, [SP,#0x100+var_A4]
.text:000000000000105C                 STR             X2, [SP,#0x100+var_B0]
.text:0000000000001060                 MOV             X0, X15 ; s
.text:0000000000001064                 UXTB            W1, W13 ; c
.text:0000000000001068                 MOV             X2, X14 ; n
.text:000000000000106C                 STR             X10, [SP,#0x100+var_C8]
.text:0000000000001070                 STR             W12, [SP,#0x100+var_CC]
.text:0000000000001074                 STR             W11, [SP,#0x100+var_D0]
.text:0000000000001078                 STR             X8, [SP,#0x100+var_D8]
.text:000000000000107C                 STR             X9, [SP,#0x100+var_E0]
.text:0000000000001080                 BL              .memset
.text:0000000000001084                 LDR             W11, [SP,#0x100+var_A4]
.text:0000000000001088                 LDR             X8, [SP,#0x100+var_C8]
.text:000000000000108C                 STRH            W11, [X8]
.text:0000000000001090                 LDR             W11, [SP,#0x100+var_CC]
.text:0000000000001094                 STRB            W11, [X8,#2]
.text:0000000000001098                 STRB            W11, [X8,#3]
.text:000000000000109C                 LDR             W12, [SP,#0x100+var_D0]
.text:00000000000010A0                 STR             W12, [X8,#4]
.text:00000000000010A4                 LDR             X9, [SP,#0x100+var_E0]
.text:00000000000010A8                 STR             X9, [X8,#8]
.text:00000000000010AC                 LDR             X10, [SP,#0x100+var_D8]
.text:00000000000010B0                 LDR             W0, [X10] ; fd
.text:00000000000010B4                 ADRP            X2, #data_ptr@PAGE
.text:00000000000010B8                 LDR             X2, [X2,#data_ptr@PAGEOFF]
.text:00000000000010BC                 MOV             W1, #0xC0104300 ; request
.text:00000000000010C4                 BL              .ioctl
.text:00000000000010C8                 ADD             X8, SP, #0x100+s
.text:00000000000010CC                 STR             W0, [SP,#0x100+var_B4]
.text:00000000000010D0                 LDR             W2, [SP,#0x100+var_B4]
.text:00000000000010D4                 ADRP            X1, #aLongreadD@PAGE ; "longRead %d"
.text:00000000000010D8                 ADD             X1, X1, #aLongreadD@PAGEOFF ; "longRead %d"
.text:00000000000010DC                 MOV             X0, X8  ; s
.text:00000000000010E0                 BL              .sprintf
.text:00000000000010E4                 ADD             X2, SP, #0x100+s
.text:00000000000010E8                 ADRP            X1, #aUvdm@PAGE ; "uvdm"
.text:00000000000010EC                 ADD             X1, X1, #aUvdm@PAGEOFF ; "uvdm"
.text:00000000000010F0                 MOV             W11, #2
.text:00000000000010F4                 MOV             X8, XZR
.text:00000000000010F8                 STR             W0, [SP,#0x100+var_E4]
.text:00000000000010FC                 MOV             W0, W11
.text:0000000000001100                 MOV             X3, X8
.text:0000000000001104                 BL              .__android_log_print
.text:0000000000001108                 LDR             W11, [SP,#0x100+var_B4]
.text:000000000000110C                 CMP             W11, #0
.text:0000000000001110                 STR             W0, [SP,#0x100+var_E8]
.text:0000000000001114                 B.GT            loc_1130
.text:0000000000001118                 MOV             W8, #1
.text:000000000000111C                 ADRP            X9, #buf_ptr@PAGE
.text:0000000000001120                 LDR             X9, [X9,#buf_ptr@PAGEOFF]
.text:0000000000001124                 LDR             W10, [SP,#0x100+var_B4]
.text:0000000000001128                 STRB            W10, [X9]
.text:000000000000112C                 STR             W8, [SP,#0x100+var_B4]
.text:0000000000001130 loc_1130                                ; CODE XREF: sub_100C+108↑j
.text:0000000000001130                 LDR             X0, [SP,#0x100+var_A0] ; this
.text:0000000000001134                 LDR             W1, [SP,#0x100+var_B4] ; int
.text:0000000000001138                 BL              ._ZN7_JNIEnv12NewByteArrayEi ; _JNIEnv::NewByteArray(int)
.text:000000000000113C                 MOV             W1, WZR
.text:0000000000001140                 ADRP            X30, #buf_ptr@PAGE
.text:0000000000001144                 LDR             X4, [X30,#buf_ptr@PAGEOFF]
.text:0000000000001148                 STR             X0, [SP,#0x100+var_C0]
.text:000000000000114C                 LDR             X0, [SP,#0x100+var_A0]
.text:0000000000001150                 LDR             X30, [SP,#0x100+var_C0]
.text:0000000000001154                 LDR             W3, [SP,#0x100+var_B4]
.text:0000000000001158                 STR             W1, [SP,#0x100+var_EC]
.text:000000000000115C                 MOV             X1, X30
.text:0000000000001160                 LDR             W2, [SP,#0x100+var_EC]
.text:0000000000001164                 BL              ._ZN7_JNIEnv18SetByteArrayRegionEP11_jbyteArrayiiPKa ; _JNIEnv::SetByteArrayRegion(_jbyteArray *,int,int,signed char const*)
.text:0000000000001168                 LDR             X0, [SP,#0x100+var_C0]
.text:000000000000116C                 MRS             X1, #3, c13, c0, #2
.text:0000000000001170                 LDR             X1, [X1,#0x28]
.text:0000000000001174                 LDUR            X4, [X29,#var_18]
.text:0000000000001178                 CMP             X1, X4
.text:000000000000117C                 STR             X0, [SP,#0x100+var_F8]
.text:0000000000001180                 B.NE            loc_1198
.text:0000000000001184                 LDR             X0, [SP,#0x100+var_F8]
.text:0000000000001188                 LDP             X29, X30, [SP,#0x100+var_s0]
.text:000000000000118C                 LDR             X28, [SP,#0x100+var_10]
.text:0000000000001190                 ADD             SP, SP, #0x110
.text:0000000000001194                 RET
.text:0000000000001198 ; ---------------------------------------------------------------------------
.text:0000000000001198 loc_1198                                ; CODE XREF: sub_100C+174↑j
.text:0000000000001198                 BL              .__stack_chk_fail
.text:0000000000001198 ; } // starts at 100C
.text:0000000000001198 ; End of function sub_100C
.text:000000000000119C ; =============== S U B R O U T I N E =======================================
.text:000000000000119C ; Attributes: bp-based frame
.text:000000000000119C sub_119C                                ; DATA XREF: .data:0000000000012050↓o
.text:000000000000119C var_2C          = -0x2C
.text:000000000000119C var_28          = -0x28
.text:000000000000119C var_1C          = -0x1C
.text:000000000000119C var_18          = -0x18
.text:000000000000119C var_C           = -0xC
.text:000000000000119C var_8           = -8
.text:000000000000119C var_s0          =  0
.text:000000000000119C ; __unwind {
.text:000000000000119C                 SUB             SP, SP, #0x40
.text:00000000000011A0                 STP             X29, X30, [SP,#0x30+var_s0]
.text:00000000000011A4                 ADD             X29, SP, #0x30
.text:00000000000011A8                 ADRP            X8, #fd_ptr@PAGE
.text:00000000000011AC                 LDR             X8, [X8,#fd_ptr@PAGEOFF]
.text:00000000000011B0                 ADRP            X9, #buf_ptr@PAGE
.text:00000000000011B4                 LDR             X9, [X9,#buf_ptr@PAGEOFF]
.text:00000000000011B8                 ADRP            X10, #data_ptr@PAGE
.text:00000000000011BC                 LDR             X10, [X10,#data_ptr@PAGEOFF]
.text:00000000000011C0                 MOV             W11, #0xEC
.text:00000000000011C4                 MOV             W12, #1
.text:00000000000011C8                 STUR            X0, [X29,#var_8]
.text:00000000000011CC                 STUR            W1, [X29,#var_C]
.text:00000000000011D0                 STR             X2, [SP,#0x30+var_18]
.text:00000000000011D4                 LDUR            W1, [X29,#var_C]
.text:00000000000011D8                 STRH            W1, [X10]
.text:00000000000011DC                 STRB            WZR, [X10,#(byte_12192 - 0x12190)]
.text:00000000000011E0                 STRB            W12, [X10,#(byte_12193 - 0x12190)]
.text:00000000000011E4                 STR             W11, [X10,#(dword_12194 - 0x12190)]
.text:00000000000011E8                 STR             X9, [X10,#(qword_12198 - 0x12190)]
.text:00000000000011EC                 LDR             W0, [X8] ; fd
.text:00000000000011F0                 ADRP            X2, #data_ptr@PAGE
.text:00000000000011F4                 LDR             X2, [X2,#data_ptr@PAGEOFF]
.text:00000000000011F8                 MOV             W1, #0xC0104300 ; request
.text:0000000000001200                 BL              .ioctl
.text:0000000000001204                 STR             W0, [SP,#0x30+var_1C]
.text:0000000000001208                 LDR             W11, [SP,#0x30+var_1C]
.text:000000000000120C                 CMP             W11, #0
.text:0000000000001210                 B.GT            loc_121C
.text:0000000000001214                 MOV             W8, #1
.text:0000000000001218                 STR             W8, [SP,#0x30+var_1C]
.text:000000000000121C loc_121C                                ; CODE XREF: sub_119C+74↑j
.text:000000000000121C                 LDUR            X0, [X29,#var_8] ; this
.text:0000000000001220                 LDR             W1, [SP,#0x30+var_1C] ; int
.text:0000000000001224                 BL              ._ZN7_JNIEnv12NewByteArrayEi ; _JNIEnv::NewByteArray(int)
.text:0000000000001228                 MOV             W1, WZR
.text:000000000000122C                 ADRP            X30, #buf_ptr@PAGE
.text:0000000000001230                 LDR             X4, [X30,#buf_ptr@PAGEOFF]
.text:0000000000001234                 STR             X0, [SP,#0x30+var_28]
.text:0000000000001238                 LDUR            X0, [X29,#var_8]
.text:000000000000123C                 LDR             X30, [SP,#0x30+var_28]
.text:0000000000001240                 LDR             W3, [SP,#0x30+var_1C]
.text:0000000000001244                 STR             W1, [SP,#0x30+var_2C]
.text:0000000000001248                 MOV             X1, X30
.text:000000000000124C                 LDR             W2, [SP,#0x30+var_2C]
.text:0000000000001250                 BL              ._ZN7_JNIEnv18SetByteArrayRegionEP11_jbyteArrayiiPKa ; _JNIEnv::SetByteArrayRegion(_jbyteArray *,int,int,signed char const*)
.text:0000000000001254                 LDR             X0, [SP,#0x30+var_28]
.text:0000000000001258                 LDP             X29, X30, [SP,#0x30+var_s0]
.text:000000000000125C                 ADD             SP, SP, #0x40 ; '@'
.text:0000000000001260                 RET
.text:0000000000001260 ; } // starts at 119C
.text:0000000000001260 ; End of function sub_119C
.text:0000000000001264 ; =============== S U B R O U T I N E =======================================
.text:0000000000001264 ; Attributes: bp-based frame
.text:0000000000001264 sub_1264                                ; DATA XREF: .data:0000000000012068↓o
.text:0000000000001264 var_E4          = -0xE4
.text:0000000000001264 var_E0          = -0xE0
.text:0000000000001264 var_DC          = -0xDC
.text:0000000000001264 var_D8          = -0xD8
.text:0000000000001264 var_D0          = -0xD0
.text:0000000000001264 var_C8          = -0xC8
.text:0000000000001264 var_BC          = -0xBC
.text:0000000000001264 var_B8          = -0xB8
.text:0000000000001264 var_AC          = -0xAC
.text:0000000000001264 var_A8          = -0xA8
.text:0000000000001264 var_9C          = -0x9C
.text:0000000000001264 var_98          = -0x98
.text:0000000000001264 var_90          = -0x90
.text:0000000000001264 s               = -0x88
.text:0000000000001264 var_s0          =  0
.text:0000000000001264 ; __unwind {
.text:0000000000001264                 SUB             SP, SP, #0x100
.text:0000000000001268                 STP             X29, X30, [SP,#0xF0+var_s0]
.text:000000000000126C                 ADD             X29, SP, #0xF0
.text:0000000000001270                 ADD             X8, SP, #0xF0+var_C8
.text:0000000000001274                 ADRP            X9, #data_ptr@PAGE
.text:0000000000001278                 LDR             X9, [X9,#data_ptr@PAGEOFF]
.text:000000000000127C                 MOV             W10, #1
.text:0000000000001280                 MRS             X11, #3, c13, c0, #2
.text:0000000000001284                 LDR             X11, [X11,#0x28]
.text:0000000000001288                 STR             X11, [X8]
.text:000000000000128C                 STR             X0, [SP,#0xF0+var_90]
.text:0000000000001290                 STR             X1, [SP,#0xF0+var_98]
.text:0000000000001294                 STR             W2, [SP,#0xF0+var_9C]
.text:0000000000001298                 STR             X3, [SP,#0xF0+var_A8]
.text:000000000000129C                 LDR             W2, [SP,#0xF0+var_9C]
.text:00000000000012A0                 STRH            W2, [X9]
.text:00000000000012A4                 STRB            W10, [X9,#(byte_12192 - 0x12190)]
.text:00000000000012A8                 STRB            WZR, [X9,#(byte_12193 - 0x12190)]
.text:00000000000012AC                 LDR             X0, [SP,#0xF0+var_90]
.text:00000000000012B0                 LDR             X9, [SP,#0xF0+var_A8]
.text:00000000000012B4                 MOV             X1, X9
.text:00000000000012B8                 STR             X8, [SP,#0xF0+var_D0]
.text:00000000000012BC                 BL              ._ZN7_JNIEnv14GetArrayLengthEP7_jarray ; _JNIEnv::GetArrayLength(_jarray *)
.text:00000000000012C0                 MOV             X8, XZR
.text:00000000000012C4                 ADRP            X9, #data_ptr@PAGE
.text:00000000000012C8                 LDR             X9, [X9,#data_ptr@PAGEOFF]
.text:00000000000012CC                 STR             W0, [SP,#0xF0+var_AC]
.text:00000000000012D0                 LDR             W10, [SP,#0xF0+var_AC]
.text:00000000000012D4                 STR             W10, [X9,#(dword_12194 - 0x12190)]
.text:00000000000012D8                 LDR             X0, [SP,#0xF0+var_90]
.text:00000000000012DC                 LDR             X1, [SP,#0xF0+var_A8]
.text:00000000000012E0                 MOV             X2, X8
.text:00000000000012E4                 BL              ._ZN7_JNIEnv20GetByteArrayElementsEP11_jbyteArrayPh ; _JNIEnv::GetByteArrayElements(_jbyteArray *,uchar *)
.text:00000000000012E8                 ADRP            X8, #fd_ptr@PAGE
.text:00000000000012EC                 LDR             X8, [X8,#fd_ptr@PAGEOFF]
.text:00000000000012F0                 ADRP            X9, #data_ptr@PAGE
.text:00000000000012F4                 LDR             X9, [X9,#data_ptr@PAGEOFF]
.text:00000000000012F8                 STR             X0, [SP,#0xF0+var_B8]
.text:00000000000012FC                 LDR             X11, [SP,#0xF0+var_B8]
.text:0000000000001300                 STR             X11, [X9,#(qword_12198 - 0x12190)]
.text:0000000000001304                 LDR             W0, [X8] ; fd
.text:0000000000001308                 ADRP            X2, #data_ptr@PAGE
.text:000000000000130C                 LDR             X2, [X2,#data_ptr@PAGEOFF]
.text:0000000000001310                 MOV             W1, #0xC0104300 ; request
.text:0000000000001318                 BL              .ioctl
.text:000000000000131C                 MOV             W10, WZR
.text:0000000000001320                 STR             W0, [SP,#0xF0+var_BC]
.text:0000000000001324                 LDR             X0, [SP,#0xF0+var_90]
.text:0000000000001328                 LDR             X1, [SP,#0xF0+var_A8]
.text:000000000000132C                 LDR             X2, [SP,#0xF0+var_B8]
.text:0000000000001330                 MOV             W3, W10
.text:0000000000001334                 BL              ._ZN7_JNIEnv24ReleaseByteArrayElementsEP11_jbyteArrayPai ; _JNIEnv::ReleaseByteArrayElements(_jbyteArray *,signed char *,int)
.text:0000000000001338                 ADD             X8, SP, #0xF0+s
.text:000000000000133C                 MOV             W10, WZR
.text:0000000000001340                 MOV             X2, #0x80 ; n
.text:0000000000001344                 MOV             X0, X8  ; s
.text:0000000000001348                 UXTB            W1, W10 ; c
.text:000000000000134C                 STR             X8, [SP,#0xF0+var_D8]
.text:0000000000001350                 BL              .memset
.text:0000000000001354                 LDR             W2, [SP,#0xF0+var_BC]
.text:0000000000001358                 ADRP            X1, #aLongwriteD@PAGE ; "longWrite %d"
.text:000000000000135C                 ADD             X1, X1, #aLongwriteD@PAGEOFF ; "longWrite %d"
.text:0000000000001360                 LDR             X0, [SP,#0xF0+var_D8] ; s
.text:0000000000001364                 BL              .sprintf
.text:0000000000001368                 ADD             X2, SP, #0xF0+s
.text:000000000000136C                 ADRP            X1, #aUvdm@PAGE ; "uvdm"
.text:0000000000001370                 ADD             X1, X1, #aUvdm@PAGEOFF ; "uvdm"
.text:0000000000001374                 MOV             W10, #2
.text:0000000000001378                 MOV             X8, XZR
.text:000000000000137C                 STR             W0, [SP,#0xF0+var_DC]
.text:0000000000001380                 MOV             W0, W10
.text:0000000000001384                 MOV             X3, X8
.text:0000000000001388                 BL              .__android_log_print
.text:000000000000138C                 LDR             W10, [SP,#0xF0+var_BC]
.text:0000000000001390                 MRS             X8, #3, c13, c0, #2
.text:0000000000001394                 LDR             X8, [X8,#0x28]
.text:0000000000001398                 LDR             X9, [SP,#0xF0+var_D0]
.text:000000000000139C                 LDR             X11, [X9]
.text:00000000000013A0                 CMP             X8, X11
.text:00000000000013A4                 STR             W0, [SP,#0xF0+var_E0]
.text:00000000000013A8                 STR             W10, [SP,#0xF0+var_E4]
.text:00000000000013AC                 B.NE            loc_13C0
.text:00000000000013B0                 LDR             W0, [SP,#0xF0+var_E4]
.text:00000000000013B4                 LDP             X29, X30, [SP,#0xF0+var_s0]
.text:00000000000013B8                 ADD             SP, SP, #0x100
.text:00000000000013BC                 RET
.text:00000000000013C0 ; ---------------------------------------------------------------------------
.text:00000000000013C0 loc_13C0                                ; CODE XREF: sub_1264+148↑j
.text:00000000000013C0                 BL              .__stack_chk_fail
.text:00000000000013C0 ; } // starts at 1264
.text:00000000000013C0 ; End of function sub_1264
.text:00000000000013C4 ; =============== S U B R O U T I N E =======================================
.text:00000000000013C4 ; Attributes: bp-based frame
.text:00000000000013C4 sub_13C4                                ; DATA XREF: .data:0000000000012080↓o
.text:00000000000013C4 var_FC          = -0xFC
.text:00000000000013C4 var_F8          = -0xF8
.text:00000000000013C4 var_F4          = -0xF4
.text:00000000000013C4 var_F0          = -0xF0
.text:00000000000013C4 var_E4          = -0xE4
.text:00000000000013C4 var_E0          = -0xE0
.text:00000000000013C4 var_D8          = -0xD8
.text:00000000000013C4 var_CC          = -0xCC
.text:00000000000013C4 var_C8          = -0xC8
.text:00000000000013C4 var_BC          = -0xBC
.text:00000000000013C4 var_B8          = -0xB8
.text:00000000000013C4 var_AC          = -0xAC
.text:00000000000013C4 var_A8          = -0xA8
.text:00000000000013C4 var_A0          = -0xA0
.text:00000000000013C4 s               = -0x98
.text:00000000000013C4 var_10          = -0x10
.text:00000000000013C4 var_s0          =  0
.text:00000000000013C4 ; __unwind {
.text:00000000000013C4                 SUB             SP, SP, #0x110
.text:00000000000013C8                 STR             X28, [SP,#0x100+var_10]
.text:00000000000013CC                 STP             X29, X30, [SP,#0x100+var_s0]
.text:00000000000013D0                 ADD             X29, SP, #0x100
.text:00000000000013D4                 ADD             X8, SP, #0x100+var_D8
.text:00000000000013D8                 ADRP            X9, #data_ptr@PAGE
.text:00000000000013DC                 LDR             X9, [X9,#data_ptr@PAGEOFF]
.text:00000000000013E0                 MRS             X10, #3, c13, c0, #2
.text:00000000000013E4                 LDR             X10, [X10,#0x28]
.text:00000000000013E8                 STR             X10, [X8]
.text:00000000000013EC                 STR             X0, [SP,#0x100+var_A0]
.text:00000000000013F0                 STR             X1, [SP,#0x100+var_A8]
.text:00000000000013F4                 STR             W2, [SP,#0x100+var_AC]
.text:00000000000013F8                 STR             X3, [SP,#0x100+var_B8]
.text:00000000000013FC                 LDR             W2, [SP,#0x100+var_AC]
.text:0000000000001400                 STRH            W2, [X9]
.text:0000000000001404                 STRB            WZR, [X9,#(byte_12192 - 0x12190)]
.text:0000000000001408                 STRB            WZR, [X9,#(byte_12193 - 0x12190)]
.text:000000000000140C                 LDR             X0, [SP,#0x100+var_A0]
.text:0000000000001410                 LDR             X9, [SP,#0x100+var_B8]
.text:0000000000001414                 MOV             X1, X9
.text:0000000000001418                 STR             X8, [SP,#0x100+var_E0]
.text:000000000000141C                 BL              ._ZN7_JNIEnv14GetArrayLengthEP7_jarray ; _JNIEnv::GetArrayLength(_jarray *)
.text:0000000000001420                 MOV             X8, XZR
.text:0000000000001424                 ADRP            X9, #data_ptr@PAGE
.text:0000000000001428                 LDR             X9, [X9,#data_ptr@PAGEOFF]
.text:000000000000142C                 STR             W0, [SP,#0x100+var_BC]
.text:0000000000001430                 LDR             W0, [SP,#0x100+var_BC]
.text:0000000000001434                 STR             W0, [X9,#(dword_12194 - 0x12190)]
.text:0000000000001438                 LDR             X0, [SP,#0x100+var_A0]
.text:000000000000143C                 LDR             X1, [SP,#0x100+var_B8]
.text:0000000000001440                 MOV             X2, X8
.text:0000000000001444                 BL              ._ZN7_JNIEnv20GetByteArrayElementsEP11_jbyteArrayPh ; _JNIEnv::GetByteArrayElements(_jbyteArray *,uchar *)
.text:0000000000001448                 ADRP            X8, #fd_ptr@PAGE
.text:000000000000144C                 LDR             X8, [X8,#fd_ptr@PAGEOFF]
.text:0000000000001450                 ADRP            X9, #data_ptr@PAGE
.text:0000000000001454                 LDR             X9, [X9,#data_ptr@PAGEOFF]
.text:0000000000001458                 STR             X0, [SP,#0x100+var_C8]
.text:000000000000145C                 LDR             X10, [SP,#0x100+var_C8]
.text:0000000000001460                 STR             X10, [X9,#(qword_12198 - 0x12190)]
.text:0000000000001464                 LDR             W0, [X8] ; fd
.text:0000000000001468                 ADRP            X2, #data_ptr@PAGE
.text:000000000000146C                 LDR             X2, [X2,#data_ptr@PAGEOFF]
.text:0000000000001470                 MOV             W1, #0xC0104300 ; request
.text:0000000000001478                 BL              .ioctl
.text:000000000000147C                 MOV             W1, WZR
.text:0000000000001480                 STR             W0, [SP,#0x100+var_CC]
.text:0000000000001484                 LDR             X0, [SP,#0x100+var_A0]
.text:0000000000001488                 LDR             X8, [SP,#0x100+var_B8]
.text:000000000000148C                 LDR             X2, [SP,#0x100+var_C8]
.text:0000000000001490                 STR             W1, [SP,#0x100+var_E4]
.text:0000000000001494                 MOV             X1, X8
.text:0000000000001498                 LDR             W3, [SP,#0x100+var_E4]
.text:000000000000149C                 BL              ._ZN7_JNIEnv24ReleaseByteArrayElementsEP11_jbyteArrayPai ; _JNIEnv::ReleaseByteArrayElements(_jbyteArray *,signed char *,int)
.text:00000000000014A0                 ADD             X8, SP, #0x100+s
.text:00000000000014A4                 MOV             W3, WZR
.text:00000000000014A8                 MOV             X2, #0x80 ; n
.text:00000000000014AC                 MOV             X0, X8  ; s
.text:00000000000014B0                 UXTB            W1, W3  ; c
.text:00000000000014B4                 STR             X8, [SP,#0x100+var_F0]
.text:00000000000014B8                 BL              .memset
.text:00000000000014BC                 LDR             W2, [SP,#0x100+var_CC]
.text:00000000000014C0                 ADRP            X1, #aShortwriteD@PAGE ; "shortWrite %d"
.text:00000000000014C4                 ADD             X1, X1, #aShortwriteD@PAGEOFF ; "shortWrite %d"
.text:00000000000014C8                 LDR             X0, [SP,#0x100+var_F0] ; s
.text:00000000000014CC                 BL              .sprintf
.text:00000000000014D0                 ADD             X2, SP, #0x100+s
.text:00000000000014D4                 ADRP            X1, #aUvdm@PAGE ; "uvdm"
.text:00000000000014D8                 ADD             X1, X1, #aUvdm@PAGEOFF ; "uvdm"
.text:00000000000014DC                 MOV             W3, #2
.text:00000000000014E0                 MOV             X8, XZR
.text:00000000000014E4                 STR             W0, [SP,#0x100+var_F4]
.text:00000000000014E8                 MOV             W0, W3
.text:00000000000014EC                 MOV             X3, X8
.text:00000000000014F0                 BL              .__android_log_print
.text:00000000000014F4                 LDR             W11, [SP,#0x100+var_CC]
.text:00000000000014F8                 MRS             X8, #3, c13, c0, #2
.text:00000000000014FC                 LDR             X8, [X8,#0x28]
.text:0000000000001500                 LDR             X9, [SP,#0x100+var_E0]
.text:0000000000001504                 LDR             X10, [X9]
.text:0000000000001508                 CMP             X8, X10
.text:000000000000150C                 STR             W0, [SP,#0x100+var_F8]
.text:0000000000001510                 STR             W11, [SP,#0x100+var_FC]
.text:0000000000001514                 B.NE            loc_152C
.text:0000000000001518                 LDR             W0, [SP,#0x100+var_FC]
.text:000000000000151C                 LDP             X29, X30, [SP,#0x100+var_s0]
.text:0000000000001520                 LDR             X28, [SP,#0x100+var_10]
.text:0000000000001524                 ADD             SP, SP, #0x110
.text:0000000000001528                 RET
.text:000000000000152C ; ---------------------------------------------------------------------------
.text:000000000000152C loc_152C                                ; CODE XREF: sub_13C4+150↑j
.text:000000000000152C                 BL              .__stack_chk_fail
.text:000000000000152C ; } // starts at 13C4
.text:000000000000152C ; End of function sub_13C4
.text:0000000000001530 ; =============== S U B R O U T I N E =======================================
.text:0000000000001530 ; Attributes: bp-based frame
.text:0000000000001530 sub_1530                                ; DATA XREF: .data:0000000000012098↓o
.text:0000000000001530 var_14          = -0x14
.text:0000000000001530 var_10          = -0x10
.text:0000000000001530 var_8           = -8
.text:0000000000001530 var_s0          =  0
.text:0000000000001530 ; __unwind {
.text:0000000000001530                 SUB             SP, SP, #0x30
.text:0000000000001534                 STP             X29, X30, [SP,#0x20+var_s0]
.text:0000000000001538                 ADD             X29, SP, #0x20
.text:000000000000153C                 ADRP            X8, #fd_ptr@PAGE
.text:0000000000001540                 LDR             X8, [X8,#fd_ptr@PAGEOFF]
.text:0000000000001544                 STUR            X0, [X29,#var_8]
.text:0000000000001548                 STR             X1, [SP,#0x20+var_10]
.text:000000000000154C                 LDR             W0, [X8] ; fd
.text:0000000000001550                 BL              .close
.text:0000000000001554                 ADRP            X8, #fd_ptr@PAGE
.text:0000000000001558                 LDR             X8, [X8,#fd_ptr@PAGEOFF]
.text:000000000000155C                 STR             WZR, [X8]
.text:0000000000001560                 LDR             W9, [X8]
.text:0000000000001564                 STR             W0, [SP,#0x20+var_14]
.text:0000000000001568                 MOV             W0, W9
.text:000000000000156C                 LDP             X29, X30, [SP,#0x20+var_s0]
.text:0000000000001570                 ADD             SP, SP, #0x30 ; '0'
.text:0000000000001574                 RET
.text:0000000000001574 ; } // starts at 1530
.text:0000000000001574 ; End of function sub_1530
.text:0000000000001578 ; =============== S U B R O U T I N E =======================================
.text:0000000000001578 ; Attributes: bp-based frame
.text:0000000000001578 ; __int64 __fastcall _JNIEnv::NewByteArray(_JNIEnv *__hidden this, int)
.text:0000000000001578                 WEAK _ZN7_JNIEnv12NewByteArrayEi
.text:0000000000001578 _ZN7_JNIEnv12NewByteArrayEi             ; CODE XREF: _JNIEnv::NewByteArray(int)+C↑j
.text:0000000000001578                                         ; DATA XREF: LOAD:00000000000004C8↑o ...
.text:0000000000001578 var_C           = -0xC
.text:0000000000001578 var_8           = -8
.text:0000000000001578 var_s0          =  0
.text:0000000000001578 ; __unwind {
.text:0000000000001578                 SUB             SP, SP, #0x20
.text:000000000000157C                 STP             X29, X30, [SP,#0x10+var_s0]
.text:0000000000001580                 ADD             X29, SP, #0x10
.text:0000000000001584                 STR             X0, [SP,#0x10+var_8]
.text:0000000000001588                 STR             W1, [SP,#0x10+var_C]
.text:000000000000158C                 LDR             X0, [SP,#0x10+var_8]
.text:0000000000001590                 LDR             X8, [X0]
.text:0000000000001594                 LDR             X8, [X8,#0x580]
.text:0000000000001598                 LDR             W1, [SP,#0x10+var_C]
.text:000000000000159C                 BLR             X8
.text:00000000000015A0                 LDP             X29, X30, [SP,#0x10+var_s0]
.text:00000000000015A4                 ADD             SP, SP, #0x20 ; ' '
.text:00000000000015A8                 RET
.text:00000000000015A8 ; } // starts at 1578
.text:00000000000015A8 ; End of function _JNIEnv::NewByteArray(int)
.text:00000000000015AC ; =============== S U B R O U T I N E =======================================
.text:00000000000015AC ; Attributes: bp-based frame
.text:00000000000015AC ; _JNIEnv::SetByteArrayRegion(_jbyteArray *, int, int, signed char const*)
.text:00000000000015AC                 WEAK _ZN7_JNIEnv18SetByteArrayRegionEP11_jbyteArrayiiPKa
.text:00000000000015AC _ZN7_JNIEnv18SetByteArrayRegionEP11_jbyteArrayiiPKa
.text:00000000000015AC                                         ; CODE XREF: _JNIEnv::SetByteArrayRegion(_jbyteArray *,int,int,signed char const*)+C↑j
.text:00000000000015AC                                         ; DATA XREF: LOAD:0000000000000360↑o ...
.text:00000000000015AC var_28          = -0x28
.text:00000000000015AC var_20          = -0x20
.text:00000000000015AC var_18          = -0x18
.text:00000000000015AC var_14          = -0x14
.text:00000000000015AC var_10          = -0x10
.text:00000000000015AC var_8           = -8
.text:00000000000015AC var_s0          =  0
.text:00000000000015AC ; __unwind {
.text:00000000000015AC                 SUB             SP, SP, #0x40
.text:00000000000015B0                 STP             X29, X30, [SP,#0x30+var_s0]
.text:00000000000015B4                 ADD             X29, SP, #0x30
.text:00000000000015B8                 STUR            X0, [X29,#var_8]
.text:00000000000015BC                 STUR            X1, [X29,#var_10]
.text:00000000000015C0                 STUR            W2, [X29,#var_14]
.text:00000000000015C4                 STR             W3, [SP,#0x30+var_18]
.text:00000000000015C8                 STR             X4, [SP,#0x30+var_20]
.text:00000000000015CC                 LDUR            X0, [X29,#var_8]
.text:00000000000015D0                 LDR             X1, [X0]
.text:00000000000015D4                 LDR             X1, [X1,#0x680]
.text:00000000000015D8                 LDUR            X4, [X29,#var_10]
.text:00000000000015DC                 LDUR            W2, [X29,#var_14]
.text:00000000000015E0                 LDR             W3, [SP,#0x30+var_18]
.text:00000000000015E4                 LDR             X8, [SP,#0x30+var_20]
.text:00000000000015E8                 STR             X1, [SP,#0x30+var_28]
.text:00000000000015EC                 MOV             X1, X4
.text:00000000000015F0                 MOV             X4, X8
.text:00000000000015F4                 LDR             X8, [SP,#0x30+var_28]
.text:00000000000015F8                 BLR             X8
.text:00000000000015FC                 LDP             X29, X30, [SP,#0x30+var_s0]
.text:0000000000001600                 ADD             SP, SP, #0x40 ; '@'
.text:0000000000001604                 RET
.text:0000000000001604 ; } // starts at 15AC
.text:0000000000001604 ; End of function _JNIEnv::SetByteArrayRegion(_jbyteArray *,int,int,signed char const*)
.text:0000000000001608 ; =============== S U B R O U T I N E =======================================
.text:0000000000001608 ; Attributes: bp-based frame
.text:0000000000001608 ; _JNIEnv::GetArrayLength(_jarray *)
.text:0000000000001608                 WEAK _ZN7_JNIEnv14GetArrayLengthEP7_jarray
.text:0000000000001608 _ZN7_JNIEnv14GetArrayLengthEP7_jarray   ; CODE XREF: _JNIEnv::GetArrayLength(_jarray *)+C↑j
.text:0000000000001608                                         ; DATA XREF: LOAD:0000000000000498↑o ...
.text:0000000000001608 var_18          = -0x18
.text:0000000000001608 var_10          = -0x10
.text:0000000000001608 var_8           = -8
.text:0000000000001608 var_s0          =  0
.text:0000000000001608 ; __unwind {
.text:0000000000001608                 SUB             SP, SP, #0x30
.text:000000000000160C                 STP             X29, X30, [SP,#0x20+var_s0]
.text:0000000000001610                 ADD             X29, SP, #0x20
.text:0000000000001614                 STUR            X0, [X29,#var_8]
.text:0000000000001618                 STR             X1, [SP,#0x20+var_10]
.text:000000000000161C                 LDUR            X0, [X29,#var_8]
.text:0000000000001620                 LDR             X1, [X0]
.text:0000000000001624                 LDR             X1, [X1,#0x558]
.text:0000000000001628                 LDR             X8, [SP,#0x20+var_10]
.text:000000000000162C                 STR             X1, [SP,#0x20+var_18]
.text:0000000000001630                 MOV             X1, X8
.text:0000000000001634                 LDR             X8, [SP,#0x20+var_18]
.text:0000000000001638                 BLR             X8
.text:000000000000163C                 LDP             X29, X30, [SP,#0x20+var_s0]
.text:0000000000001640                 ADD             SP, SP, #0x30 ; '0'
.text:0000000000001644                 RET
.text:0000000000001644 ; } // starts at 1608
.text:0000000000001644 ; End of function _JNIEnv::GetArrayLength(_jarray *)
.text:0000000000001648 ; =============== S U B R O U T I N E =======================================
.text:0000000000001648 ; Attributes: bp-based frame
.text:0000000000001648 ; _JNIEnv::GetByteArrayElements(_jbyteArray *, unsigned char *)
.text:0000000000001648                 WEAK _ZN7_JNIEnv20GetByteArrayElementsEP11_jbyteArrayPh
.text:0000000000001648 _ZN7_JNIEnv20GetByteArrayElementsEP11_jbyteArrayPh
.text:0000000000001648                                         ; CODE XREF: _JNIEnv::GetByteArrayElements(_jbyteArray *,uchar *)+C↑j
.text:0000000000001648                                         ; DATA XREF: LOAD:0000000000000378↑o ...
.text:0000000000001648 var_20          = -0x20
.text:0000000000001648 var_18          = -0x18
.text:0000000000001648 var_10          = -0x10
.text:0000000000001648 var_8           = -8
.text:0000000000001648 var_s0          =  0
.text:0000000000001648 ; __unwind {
.text:0000000000001648                 SUB             SP, SP, #0x30
.text:000000000000164C                 STP             X29, X30, [SP,#0x20+var_s0]
.text:0000000000001650                 ADD             X29, SP, #0x20
.text:0000000000001654                 STUR            X0, [X29,#var_8]
.text:0000000000001658                 STR             X1, [SP,#0x20+var_10]
.text:000000000000165C                 STR             X2, [SP,#0x20+var_18]
.text:0000000000001660                 LDUR            X0, [X29,#var_8]
.text:0000000000001664                 LDR             X1, [X0]
.text:0000000000001668                 LDR             X1, [X1,#0x5C0]
.text:000000000000166C                 LDR             X2, [SP,#0x20+var_10]
.text:0000000000001670                 LDR             X8, [SP,#0x20+var_18]
.text:0000000000001674                 STR             X1, [SP,#0x20+var_20]
.text:0000000000001678                 MOV             X1, X2
.text:000000000000167C                 MOV             X2, X8
.text:0000000000001680                 LDR             X8, [SP,#0x20+var_20]
.text:0000000000001684                 BLR             X8
.text:0000000000001688                 LDP             X29, X30, [SP,#0x20+var_s0]
.text:000000000000168C                 ADD             SP, SP, #0x30 ; '0'
.text:0000000000001690                 RET
.text:0000000000001690 ; } // starts at 1648
.text:0000000000001690 ; End of function _JNIEnv::GetByteArrayElements(_jbyteArray *,uchar *)
.text:0000000000001694 ; =============== S U B R O U T I N E =======================================
.text:0000000000001694 ; Attributes: bp-based frame
.text:0000000000001694 ; _JNIEnv::ReleaseByteArrayElements(_jbyteArray *, signed char *, int)
.text:0000000000001694                 WEAK _ZN7_JNIEnv24ReleaseByteArrayElementsEP11_jbyteArrayPai
.text:0000000000001694 _ZN7_JNIEnv24ReleaseByteArrayElementsEP11_jbyteArrayPai
.text:0000000000001694                                         ; CODE XREF: _JNIEnv::ReleaseByteArrayElements(_jbyteArray *,signed char *,int)+C↑j
.text:0000000000001694                                         ; DATA XREF: LOAD:0000000000000390↑o ...
.text:0000000000001694 var_28          = -0x28
.text:0000000000001694 var_1C          = -0x1C
.text:0000000000001694 var_18          = -0x18
.text:0000000000001694 var_10          = -0x10
.text:0000000000001694 var_8           = -8
.text:0000000000001694 var_s0          =  0
.text:0000000000001694 ; __unwind {
.text:0000000000001694                 SUB             SP, SP, #0x40
.text:0000000000001698                 STP             X29, X30, [SP,#0x30+var_s0]
.text:000000000000169C                 ADD             X29, SP, #0x30
.text:00000000000016A0                 STUR            X0, [X29,#var_8]
.text:00000000000016A4                 STUR            X1, [X29,#var_10]
.text:00000000000016A8                 STR             X2, [SP,#0x30+var_18]
.text:00000000000016AC                 STR             W3, [SP,#0x30+var_1C]
.text:00000000000016B0                 LDUR            X0, [X29,#var_8]
.text:00000000000016B4                 LDR             X1, [X0]
.text:00000000000016B8                 LDR             X1, [X1,#0x600]
.text:00000000000016BC                 LDUR            X2, [X29,#var_10]
.text:00000000000016C0                 LDR             X8, [SP,#0x30+var_18]
.text:00000000000016C4                 LDR             W3, [SP,#0x30+var_1C]
.text:00000000000016C8                 STR             X1, [SP,#0x30+var_28]
.text:00000000000016CC                 MOV             X1, X2
.text:00000000000016D0                 MOV             X2, X8
.text:00000000000016D4                 LDR             X8, [SP,#0x30+var_28]
.text:00000000000016D8                 BLR             X8
.text:00000000000016DC                 LDP             X29, X30, [SP,#0x30+var_s0]
.text:00000000000016E0                 ADD             SP, SP, #0x40 ; '@'
.text:00000000000016E4                 RET
.text:00000000000016E4 ; } // starts at 1694
.text:00000000000016E4 ; End of function _JNIEnv::ReleaseByteArrayElements(_jbyteArray *,signed char *,int)
.text:00000000000016E4 ; .text         ends
