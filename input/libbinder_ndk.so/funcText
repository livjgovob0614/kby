.rodata:000000000000523F                                         ; DATA XREF: .text:00000000000097C0↓o
.rodata:000000000000523F                                         ; .text:00000000000097C4↓o
.rodata:000000000000540D                                         ; DATA XREF: .text:0000000000009758↓o
.rodata:000000000000540D                                         ; .text:000000000000975C↓o
.text:0000000000008000 ; ===========================================================================
.text:0000000000008000 ; Segment type: Pure code
.text:0000000000008000                 AREA .text, CODE, ALIGN=3
.text:0000000000008000                 ; ORG 0x8000
.text:0000000000008000                 CODE64
.text:0000000000008000 ; =============== S U B R O U T I N E =======================================
.text:0000000000008000                 EXPORT start
.text:0000000000008000 start                                   ; DATA XREF: LOAD:0000000000000018↑o
.text:0000000000008000                                         ; LOAD:00000000000000C0↑o ...
.text:0000000000008000 ; __unwind {
.text:0000000000008000                 ADRP            X0, #off_F000@PAGE
.text:0000000000008004                 ADD             X0, X0, #off_F000@PAGEOFF ; void *
.text:0000000000008008                 B               .__cxa_finalize
.text:0000000000008008 ; } // starts at 8000
.text:0000000000008008 ; End of function start
.text:0000000000008008 ; ---------------------------------------------------------------------------
.text:000000000000800C                 ALIGN 0x10
.text:0000000000008010 ; [00000004 BYTES: COLLAPSED FUNCTION nullsub_1. PRESS CTRL-NUMPAD+ TO EXPAND]
.text:0000000000008014                 ALIGN 8
.text:0000000000008018 ; [00000004 BYTES: COLLAPSED FUNCTION j_nullsub_1. PRESS CTRL-NUMPAD+ TO EXPAND]
.text:000000000000801C                 ALIGN 0x20
.text:0000000000008020 ; [00000004 BYTES: COLLAPSED FUNCTION nullsub_2. PRESS CTRL-NUMPAD+ TO EXPAND]
.text:0000000000008024                 ALIGN 8
.text:0000000000008028 ; =============== S U B R O U T I N E =======================================
.text:0000000000008028 ; Attributes: bp-based frame
.text:0000000000008028 sub_8028                                ; DATA XREF: .got:off_109D0↓o
.text:0000000000008028 var_38          = -0x38
.text:0000000000008028 var_30          = -0x30
.text:0000000000008028 var_20          = -0x20
.text:0000000000008028 var_10          = -0x10
.text:0000000000008028 var_s0          =  0
.text:0000000000008028 ; __unwind {
.text:0000000000008028                 SUB             SP, SP, #0x50
.text:000000000000802C                 STR             X23, [SP,#0x40+var_30]
.text:0000000000008030                 STP             X22, X21, [SP,#0x40+var_20]
.text:0000000000008034                 STP             X20, X19, [SP,#0x40+var_10]
.text:0000000000008038                 STP             X29, X30, [SP,#0x40+var_s0]
.text:000000000000803C                 ADD             X29, SP, #0x40
.text:0000000000008040                 MRS             X23, #3, c13, c0, #2
.text:0000000000008044                 MOV             X19, X1
.text:0000000000008048                 LDR             X8, [X23,#0x28]
.text:000000000000804C                 ADRP            X9, #aAbpbinder@PAGE ; "ABpBinder"
.text:0000000000008050                 ADD             X9, X9, #aAbpbinder@PAGEOFF ; "ABpBinder"
.text:0000000000008054                 CMP             X0, X9
.text:0000000000008058                 STR             X8, [SP,#0x40+var_38]
.text:000000000000805C                 B.NE            loc_80A8
.text:0000000000008060                 CBZ             X19, loc_8080
.text:0000000000008064 loc_8064                                ; CODE XREF: sub_8028+110↓j
.text:0000000000008064                 LDR             X8, [X19]
.text:0000000000008068                 CBZ             X8, loc_8078
.text:000000000000806C                 LDR             X0, [X19,#8] ; this
.text:0000000000008070                 MOV             X1, X19 ; void *
.text:0000000000008074                 BL              ._ZN7android7RefBase12weakref_type7decWeakEPKv ; android::RefBase::weakref_type::decWeak(void const*)
.text:0000000000008078 loc_8078                                ; CODE XREF: sub_8028+40↑j
.text:0000000000008078                 MOV             X0, X19 ; void *
.text:000000000000807C                 BL              ._ZdlPv ; operator delete(void *)
.text:0000000000008080 loc_8080                                ; CODE XREF: sub_8028+38↑j
.text:0000000000008080                                         ; sub_8028+114↓j
.text:0000000000008080                 LDR             X8, [X23,#0x28]
.text:0000000000008084                 LDR             X9, [SP,#0x40+var_38]
.text:0000000000008088                 CMP             X8, X9
.text:000000000000808C                 B.NE            loc_8140
.text:0000000000008090                 LDP             X29, X30, [SP,#0x40+var_s0]
.text:0000000000008094                 LDP             X20, X19, [SP,#0x40+var_10]
.text:0000000000008098                 LDP             X22, X21, [SP,#0x40+var_20]
.text:000000000000809C                 LDR             X23, [SP,#0x40+var_30]
.text:00000000000080A0                 ADD             SP, SP, #0x50 ; 'P'
.text:00000000000080A4                 RET
.text:00000000000080A8 ; ---------------------------------------------------------------------------
.text:00000000000080A8 loc_80A8                                ; CODE XREF: sub_8028+34↑j
.text:00000000000080A8                 ADRP            X1, #aFrameworksNati@PAGE ; "frameworks/native/libs/binder/ndk/ibind"...
.text:00000000000080AC                 MOV             X20, X2
.text:00000000000080B0                 MOV             X21, X0
.text:00000000000080B4                 ADD             X1, X1, #aFrameworksNati@PAGEOFF ; "frameworks/native/libs/binder/ndk/ibind"...
.text:00000000000080B8                 MOV             W6, #0xFFFFFFFF
.text:00000000000080BC                 MOV             X0, SP
.text:00000000000080C0                 MOV             W2, #0x3C ; '<'
.text:00000000000080C4                 MOV             W3, WZR
.text:00000000000080C8                 MOV             W4, #6
.text:00000000000080CC                 MOV             X5, XZR
.text:00000000000080D0                 BL              ._ZN7android4base10LogMessageC1EPKcjNS0_5LogIdENS0_11LogSeverityES3_i ; android::base::LogMessage::LogMessage(char const*,uint,android::base::LogId,android::base::LogSeverity,char const*,int)
.text:00000000000080D4                 MOV             X0, SP  ; this
.text:00000000000080D8                 BL              ._ZN7android4base10LogMessage6streamEv ; android::base::LogMessage::stream(void)
.text:00000000000080DC                 ADRP            X1, #aCheckFailedIdK@PAGE ; "Check failed: id == kId"
.text:00000000000080E0                 ADD             X1, X1, #aCheckFailedIdK@PAGEOFF ; "Check failed: id == kId"
.text:00000000000080E4                 MOV             W2, #0x17
.text:00000000000080E8                 BL              sub_B548
.text:00000000000080EC                 ADRP            X22, #asc_50A3@PAGE ; " "
.text:00000000000080F0                 ADD             X22, X22, #asc_50A3@PAGEOFF ; " "
.text:00000000000080F4                 MOV             X1, X22
.text:00000000000080F8                 MOV             W2, #1
.text:00000000000080FC                 BL              sub_B548
.text:0000000000008100                 MOV             X1, X21
.text:0000000000008104                 BL              ._ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEPKv ; std::__1::basic_ostream<char,std::__1::char_traits<char>>::operator<<(void const*)
.text:0000000000008108                 MOV             X1, X22
.text:000000000000810C                 MOV             W2, #1
.text:0000000000008110                 BL              sub_B548
.text:0000000000008114                 MOV             X1, X19
.text:0000000000008118                 BL              ._ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEPKv ; std::__1::basic_ostream<char,std::__1::char_traits<char>>::operator<<(void const*)
.text:000000000000811C                 MOV             X1, X22
.text:0000000000008120                 MOV             W2, #1
.text:0000000000008124                 BL              sub_B548
.text:0000000000008128                 MOV             X1, X20
.text:000000000000812C                 BL              ._ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEPKv ; std::__1::basic_ostream<char,std::__1::char_traits<char>>::operator<<(void const*)
.text:0000000000008130                 MOV             X0, SP  ; this
.text:0000000000008134                 BL              ._ZN7android4base10LogMessageD1Ev ; android::base::LogMessage::~LogMessage()
.text:0000000000008138                 CBNZ            X19, loc_8064
.text:000000000000813C                 B               loc_8080
.text:0000000000008140 ; ---------------------------------------------------------------------------
.text:0000000000008140 loc_8140                                ; CODE XREF: sub_8028+64↑j
.text:0000000000008140                 BL              .__stack_chk_fail
.text:0000000000008140 ; } // starts at 8028
.text:0000000000008140 ; End of function sub_8028
.text:0000000000008140 ; ---------------------------------------------------------------------------
.text:0000000000008144                 ALIGN 8
.text:0000000000008148 ; __unwind {
.text:0000000000008148 qword_8148      DCQ 0xD4200020          ; DATA XREF: .data.rel.ro:off_103D0↓o
.text:0000000000008148                                         ; .data.rel.ro:00000000000103D8↓o ...
.text:0000000000008150 ; ---------------------------------------------------------------------------
.text:0000000000008150 ; START OF FUNCTION CHUNK FOR AIBinder_associateClass
.text:0000000000008150 loc_8150                                ; CODE XREF: AIBinder_associateClass+4↓j
.text:0000000000008150 ; __unwind {
.text:0000000000008150                 SUB             SP, SP, #0x60 ; '`'
.text:0000000000008154                 STR             X23, [SP,#0x60+var_40]
.text:0000000000008158                 STP             X22, X21, [SP,#0x60+var_30]
.text:000000000000815C                 STP             X20, X19, [SP,#0x60+var_20]
.text:0000000000008160                 STP             X29, X30, [SP,#0x60+var_10]
.text:0000000000008164                 ADD             X29, SP, #0x60+var_10
.text:0000000000008168                 MRS             X22, #3, c13, c0, #2
.text:000000000000816C                 LDR             X8, [X22,#0x28]
.text:0000000000008170                 STR             X8, [SP,#0x60+var_48]
.text:0000000000008174                 CBZ             X1, loc_8280
.text:0000000000008178                 LDR             X8, [X0,#8]
.text:000000000000817C                 MOV             X19, X1
.text:0000000000008180                 MOV             X20, X0
.text:0000000000008184                 CMP             X8, X1
.text:0000000000008188                 B.EQ            loc_8288
.text:000000000000818C                 ADD             X1, X19, #0x20 ; ' ' ; android::String16 *
.text:0000000000008190                 ADD             X0, SP, #0x60+s ; this
.text:0000000000008194                 BL              ._ZN7android7String8C1ERKNS_8String16E ; android::String8::String8(android::String16 const&)
.text:0000000000008198                 LDR             X8, [X20,#8]
.text:000000000000819C                 CBZ             X8, loc_8290
.text:00000000000081A0                 ADD             X1, X8, #0x20 ; ' ' ; android::String16 *
.text:00000000000081A4                 ADD             X0, SP, #0x60+var_58 ; this
.text:00000000000081A8                 BL              ._ZN7android7String8C1ERKNS_8String16E ; android::String8::String8(android::String16 const&)
.text:00000000000081AC                 LDP             X1, X0, [SP,#0x60+var_58] ; s2
.text:00000000000081B0                 BL              .strcmp
.text:00000000000081B4                 MOV             W19, W0
.text:00000000000081B8                 BL              ._ZN7android4base21GetMinimumLogSeverityEv ; android::base::GetMinimumLogSeverity(void)
.text:00000000000081BC                 CMP             W0, #4
.text:00000000000081C0                 CBZ             W19, loc_8310
.text:00000000000081C4                 B.GT            loc_8314
.text:00000000000081C8                 BL              .__errno
.text:00000000000081CC                 ADRP            X1, #aFrameworksNati@PAGE ; "frameworks/native/libs/binder/ndk/ibind"...
.text:00000000000081D0                 LDR             W23, [X0]
.text:00000000000081D4                 MOV             X19, X0
.text:00000000000081D8                 ADD             X1, X1, #aFrameworksNati@PAGEOFF ; "frameworks/native/libs/binder/ndk/ibind"...
.text:00000000000081DC                 MOV             W2, #0x53 ; 'S'
.text:00000000000081E0                 MOV             W6, #0xFFFFFFFF
.text:00000000000081E4                 MOV             X0, SP
.text:00000000000081E8                 MOV             W3, WZR
.text:00000000000081EC                 MOV             W4, #4
.text:00000000000081F0                 MOV             X5, XZR
.text:00000000000081F4                 BL              ._ZN7android4base10LogMessageC1EPKcjNS0_5LogIdENS0_11LogSeverityES3_i ; android::base::LogMessage::LogMessage(char const*,uint,android::base::LogId,android::base::LogSeverity,char const*,int)
.text:00000000000081F8                 MOV             X0, SP  ; this
.text:00000000000081FC                 BL              ._ZN7android4base10LogMessage6streamEv ; android::base::LogMessage::stream(void)
.text:0000000000008200                 ADRP            X1, #aAssociateclass@PAGE ; "associateClass"
.text:0000000000008204                 ADD             X1, X1, #aAssociateclass@PAGEOFF ; "associateClass"
.text:0000000000008208                 MOV             W2, #0xE
.text:000000000000820C                 BL              sub_B548
.text:0000000000008210                 ADRP            X1, #aClassCannotBeA@PAGE ; ": Class cannot be associated on object "...
.text:0000000000008214                 ADD             X1, X1, #aClassCannotBeA@PAGEOFF ; ": Class cannot be associated on object "...
.text:0000000000008218                 MOV             W2, #0x5A ; 'Z'
.text:000000000000821C                 BL              sub_B548
.text:0000000000008220                 LDR             X20, [SP,#0x60+s]
.text:0000000000008224                 MOV             X21, X0
.text:0000000000008228                 MOV             X0, X20 ; s
.text:000000000000822C                 BL              .strlen
.text:0000000000008230                 MOV             X2, X0
.text:0000000000008234                 MOV             X0, X21
.text:0000000000008238                 MOV             X1, X20
.text:000000000000823C                 BL              sub_B548
.text:0000000000008240                 ADRP            X1, #aButAlreadySetT@PAGE ; "' but already set to '"
.text:0000000000008244                 ADD             X1, X1, #aButAlreadySetT@PAGEOFF ; "' but already set to '"
.text:0000000000008248                 MOV             W2, #0x16
.text:000000000000824C                 BL              sub_B548
.text:0000000000008250                 LDR             X20, [SP,#0x60+var_58]
.text:0000000000008254                 MOV             X21, X0
.text:0000000000008258                 MOV             X0, X20 ; s
.text:000000000000825C                 BL              .strlen
.text:0000000000008260                 MOV             X2, X0
.text:0000000000008264                 MOV             X0, X21
.text:0000000000008268                 MOV             X1, X20
.text:000000000000826C                 BL              sub_B548
.text:0000000000008270                 ADRP            X1, #asc_540A@PAGE ; "'."
.text:0000000000008274                 ADD             X1, X1, #asc_540A@PAGEOFF ; "'."
.text:0000000000008278                 MOV             W2, #2
.text:000000000000827C                 B               loc_8510
.text:0000000000008280 ; ---------------------------------------------------------------------------
.text:0000000000008280 loc_8280                                ; CODE XREF: AIBinder_associateClass-27F4↑j
.text:0000000000008280                 MOV             W21, WZR
.text:0000000000008284                 B               loc_833C
.text:0000000000008288 ; ---------------------------------------------------------------------------
.text:0000000000008288 loc_8288                                ; CODE XREF: AIBinder_associateClass-27E0↑j
.text:0000000000008288                 MOV             W21, #1
.text:000000000000828C                 B               loc_833C
.text:0000000000008290 ; ---------------------------------------------------------------------------
.text:0000000000008290 loc_8290                                ; CODE XREF: AIBinder_associateClass-27CC↑j
.text:0000000000008290                 LDR             X8, [X20]
.text:0000000000008294                 MOV             X0, X20
.text:0000000000008298                 LDR             X8, [X8,#0x20]
.text:000000000000829C                 BLR             X8
.text:00000000000082A0                 CBZ             X0, loc_8368
.text:00000000000082A4 loc_82A4                                ; CODE XREF: AIBinder_associateClass-25AC↓j
.text:00000000000082A4                 LDR             X8, [X20]
.text:00000000000082A8                 MOV             X0, X20
.text:00000000000082AC                 LDR             X9, [X8,#0x10]
.text:00000000000082B0                 MOV             X8, SP
.text:00000000000082B4                 BLR             X9
.text:00000000000082B8                 LDR             X0, [SP,#0x60+var_60]
.text:00000000000082BC                 LDR             X8, [X0]
.text:00000000000082C0                 LDR             X8, [X8,#8]
.text:00000000000082C4                 BLR             X8
.text:00000000000082C8                 MOV             X1, X0  ; android::String16 *
.text:00000000000082CC                 ADD             X0, SP, #0x60+var_58 ; this
.text:00000000000082D0                 BL              ._ZN7android7String8C1ERKNS_8String16E ; android::String8::String8(android::String16 const&)
.text:00000000000082D4                 LDR             X8, [SP,#0x60+var_60]
.text:00000000000082D8                 CBZ             X8, loc_82F0
.text:00000000000082DC                 LDR             X9, [X8]
.text:00000000000082E0                 MOV             X1, SP  ; void *
.text:00000000000082E4                 LDUR            X9, [X9,#-0x18]
.text:00000000000082E8                 ADD             X0, X8, X9 ; this
.text:00000000000082EC                 BL              ._ZNK7android7RefBase9decStrongEPKv ; android::RefBase::decStrong(void const*)
.text:00000000000082F0 loc_82F0                                ; CODE XREF: AIBinder_associateClass-2690↑j
.text:00000000000082F0                 LDP             X0, X1, [SP,#0x60+var_58] ; s2
.text:00000000000082F4                 BL              .strcmp
.text:00000000000082F8                 CBZ             W0, loc_8324
.text:00000000000082FC                 BL              ._ZN7android4base21GetMinimumLogSeverityEv ; android::base::GetMinimumLogSeverity(void)
.text:0000000000008300                 CMP             W0, #4
.text:0000000000008304                 B.LE            loc_83C0
.text:0000000000008308                 MOV             W21, WZR
.text:000000000000830C                 B               loc_832C
.text:0000000000008310 ; ---------------------------------------------------------------------------
.text:0000000000008310 loc_8310                                ; CODE XREF: AIBinder_associateClass-27A8↑j
.text:0000000000008310                 B.LE            loc_848C
.text:0000000000008314 loc_8314                                ; CODE XREF: AIBinder_associateClass-27A4↑j
.text:0000000000008314                                         ; AIBinder_associateClass-2448↓j
.text:0000000000008314                 ADD             X0, SP, #0x60+var_58 ; this
.text:0000000000008318                 BL              ._ZN7android7String8D1Ev ; android::String8::~String8()
.text:000000000000831C                 MOV             W21, WZR
.text:0000000000008320                 B               loc_8334
.text:0000000000008324 ; ---------------------------------------------------------------------------
.text:0000000000008324 loc_8324                                ; CODE XREF: AIBinder_associateClass-2670↑j
.text:0000000000008324                 MOV             W21, #1
.text:0000000000008328                 STR             X19, [X20,#8]
.text:000000000000832C loc_832C                                ; CODE XREF: AIBinder_associateClass-265C↑j
.text:000000000000832C                                         ; AIBinder_associateClass-24E0↓j
.text:000000000000832C                 ADD             X0, SP, #0x60+var_58 ; this
.text:0000000000008330                 BL              ._ZN7android7String8D1Ev ; android::String8::~String8()
.text:0000000000008334 loc_8334                                ; CODE XREF: AIBinder_associateClass-2648↑j
.text:0000000000008334                 ADD             X0, SP, #0x60+s ; this
.text:0000000000008338                 BL              ._ZN7android7String8D1Ev ; android::String8::~String8()
.text:000000000000833C loc_833C                                ; CODE XREF: AIBinder_associateClass-26E4↑j
.text:000000000000833C                                         ; AIBinder_associateClass-26DC↑j
.text:000000000000833C                 LDR             X8, [X22,#0x28]
.text:0000000000008340                 LDR             X9, [SP,#0x60+var_48]
.text:0000000000008344                 CMP             X8, X9
.text:0000000000008348                 B.NE            loc_8524
.text:000000000000834C                 MOV             W0, W21
.text:0000000000008350                 LDR             X23, [SP,#0x60+var_40]
.text:0000000000008354                 LDP             X29, X30, [SP,#0x60+var_10]
.text:0000000000008358                 LDP             X20, X19, [SP,#0x60+var_20]
.text:000000000000835C                 LDP             X22, X21, [SP,#0x60+var_30]
.text:0000000000008360                 ADD             SP, SP, #0x60 ; '`'
.text:0000000000008364                 RET
.text:0000000000008368 ; ---------------------------------------------------------------------------
.text:0000000000008368 loc_8368                                ; CODE XREF: AIBinder_associateClass-26C8↑j
.text:0000000000008368                 ADRP            X1, #aFrameworksNati@PAGE ; "frameworks/native/libs/binder/ndk/ibind"...
.text:000000000000836C                 ADD             X1, X1, #aFrameworksNati@PAGEOFF ; "frameworks/native/libs/binder/ndk/ibind"...
.text:0000000000008370                 MOV             W2, #0x5E ; '^'
.text:0000000000008374                 MOV             W6, #0xFFFFFFFF
.text:0000000000008378                 ADD             X0, SP, #0x60+var_58
.text:000000000000837C                 MOV             W3, WZR
.text:0000000000008380                 MOV             W4, #6
.text:0000000000008384                 MOV             X5, XZR
.text:0000000000008388                 BL              ._ZN7android4base10LogMessageC1EPKcjNS0_5LogIdENS0_11LogSeverityES3_i ; android::base::LogMessage::LogMessage(char const*,uint,android::base::LogId,android::base::LogSeverity,char const*,int)
.text:000000000000838C                 ADD             X0, SP, #0x60+var_58 ; this
.text:0000000000008390                 BL              ._ZN7android4base10LogMessage6streamEv ; android::base::LogMessage::stream(void)
.text:0000000000008394                 ADRP            X1, #aCheckFailedAsa@PAGE ; "Check failed: asABpBinder() != nullptr"
.text:0000000000008398                 ADD             X1, X1, #aCheckFailedAsa@PAGEOFF ; "Check failed: asABpBinder() != nullptr"
.text:000000000000839C                 MOV             W2, #0x26 ; '&'
.text:00000000000083A0                 BL              sub_B548
.text:00000000000083A4                 ADRP            X1, #asc_50A3@PAGE ; " "
.text:00000000000083A8                 ADD             X1, X1, #asc_50A3@PAGEOFF ; " "
.text:00000000000083AC                 MOV             W2, #1
.text:00000000000083B0                 BL              sub_B548
.text:00000000000083B4                 ADD             X0, SP, #0x60+var_58 ; this
.text:00000000000083B8                 BL              ._ZN7android4base10LogMessageD1Ev ; android::base::LogMessage::~LogMessage()
.text:00000000000083BC                 B               loc_82A4
.text:00000000000083C0 ; ---------------------------------------------------------------------------
.text:00000000000083C0 loc_83C0                                ; CODE XREF: AIBinder_associateClass-2664↑j
.text:00000000000083C0                 BL              .__errno
.text:00000000000083C4                 ADRP            X1, #aFrameworksNati@PAGE ; "frameworks/native/libs/binder/ndk/ibind"...
.text:00000000000083C8                 LDR             W23, [X0]
.text:00000000000083CC                 MOV             X19, X0
.text:00000000000083D0                 ADD             X1, X1, #aFrameworksNati@PAGEOFF ; "frameworks/native/libs/binder/ndk/ibind"...
.text:00000000000083D4                 MOV             W2, #0x62 ; 'b'
.text:00000000000083D8                 MOV             W6, #0xFFFFFFFF
.text:00000000000083DC                 MOV             X0, SP
.text:00000000000083E0                 MOV             W3, WZR
.text:00000000000083E4                 MOV             W4, #4
.text:00000000000083E8                 MOV             X5, XZR
.text:00000000000083EC                 BL              ._ZN7android4base10LogMessageC1EPKcjNS0_5LogIdENS0_11LogSeverityES3_i ; android::base::LogMessage::LogMessage(char const*,uint,android::base::LogId,android::base::LogSeverity,char const*,int)
.text:00000000000083F0                 MOV             X0, SP  ; this
.text:00000000000083F4                 BL              ._ZN7android4base10LogMessage6streamEv ; android::base::LogMessage::stream(void)
.text:00000000000083F8                 ADRP            X1, #aAssociateclass@PAGE ; "associateClass"
.text:00000000000083FC                 ADD             X1, X1, #aAssociateclass@PAGEOFF ; "associateClass"
.text:0000000000008400                 MOV             W2, #0xE
.text:0000000000008404                 BL              sub_B548
.text:0000000000008408                 ADRP            X1, #aExpectingBinde@PAGE ; ": Expecting binder to have class '"
.text:000000000000840C                 ADD             X1, X1, #aExpectingBinde@PAGEOFF ; ": Expecting binder to have class '"
.text:0000000000008410                 MOV             W2, #0x22 ; '"'
.text:0000000000008414                 BL              sub_B548
.text:0000000000008418                 LDR             X20, [SP,#0x60+s]
.text:000000000000841C                 MOV             X21, X0
.text:0000000000008420                 MOV             X0, X20 ; s
.text:0000000000008424                 BL              .strlen
.text:0000000000008428                 MOV             X2, X0
.text:000000000000842C                 MOV             X0, X21
.text:0000000000008430                 MOV             X1, X20
.text:0000000000008434                 BL              sub_B548
.text:0000000000008438                 ADRP            X1, #aButDescriptorI@PAGE ; "' but descriptor is actually '"
.text:000000000000843C                 ADD             X1, X1, #aButDescriptorI@PAGEOFF ; "' but descriptor is actually '"
.text:0000000000008440                 MOV             W2, #0x1E
.text:0000000000008444                 BL              sub_B548
.text:0000000000008448                 LDR             X20, [SP,#0x60+var_58]
.text:000000000000844C                 MOV             X21, X0
.text:0000000000008450                 MOV             X0, X20 ; s
.text:0000000000008454                 BL              .strlen
.text:0000000000008458                 MOV             X2, X0
.text:000000000000845C                 MOV             X0, X21
.text:0000000000008460                 MOV             X1, X20
.text:0000000000008464                 BL              sub_B548
.text:0000000000008468                 ADRP            X1, #asc_540A@PAGE ; "'."
.text:000000000000846C                 ADD             X1, X1, #asc_540A@PAGEOFF ; "'."
.text:0000000000008470                 MOV             W2, #2
.text:0000000000008474                 BL              sub_B548
.text:0000000000008478                 MOV             X0, SP  ; this
.text:000000000000847C                 BL              ._ZN7android4base10LogMessageD1Ev ; android::base::LogMessage::~LogMessage()
.text:0000000000008480                 MOV             W21, WZR
.text:0000000000008484                 STR             W23, [X19]
.text:0000000000008488                 B               loc_832C
.text:000000000000848C ; ---------------------------------------------------------------------------
.text:000000000000848C loc_848C                                ; CODE XREF: AIBinder_associateClass:loc_8310↑j
.text:000000000000848C                 BL              .__errno
.text:0000000000008490                 ADRP            X1, #aFrameworksNati@PAGE ; "frameworks/native/libs/binder/ndk/ibind"...
.text:0000000000008494                 LDR             W23, [X0]
.text:0000000000008498                 MOV             X19, X0
.text:000000000000849C                 ADD             X1, X1, #aFrameworksNati@PAGEOFF ; "frameworks/native/libs/binder/ndk/ibind"...
.text:00000000000084A0                 MOV             W2, #0x4F ; 'O'
.text:00000000000084A4                 MOV             W6, #0xFFFFFFFF
.text:00000000000084A8                 MOV             X0, SP
.text:00000000000084AC                 MOV             W3, WZR
.text:00000000000084B0                 MOV             W4, #4
.text:00000000000084B4                 MOV             X5, XZR
.text:00000000000084B8                 BL              ._ZN7android4base10LogMessageC1EPKcjNS0_5LogIdENS0_11LogSeverityES3_i ; android::base::LogMessage::LogMessage(char const*,uint,android::base::LogId,android::base::LogSeverity,char const*,int)
.text:00000000000084BC                 MOV             X0, SP  ; this
.text:00000000000084C0                 BL              ._ZN7android4base10LogMessage6streamEv ; android::base::LogMessage::stream(void)
.text:00000000000084C4                 ADRP            X1, #aAssociateclass@PAGE ; "associateClass"
.text:00000000000084C8                 ADD             X1, X1, #aAssociateclass@PAGEOFF ; "associateClass"
.text:00000000000084CC                 MOV             W2, #0xE
.text:00000000000084D0                 BL              sub_B548
.text:00000000000084D4                 ADRP            X1, #aClassDescripto@PAGE ; ": Class descriptors '"
.text:00000000000084D8                 ADD             X1, X1, #aClassDescripto@PAGEOFF ; ": Class descriptors '"
.text:00000000000084DC                 MOV             W2, #0x15
.text:00000000000084E0                 BL              sub_B548
.text:00000000000084E4                 LDR             X20, [SP,#0x60+var_58]
.text:00000000000084E8                 MOV             X21, X0
.text:00000000000084EC                 MOV             X0, X20 ; s
.text:00000000000084F0                 BL              .strlen
.text:00000000000084F4                 MOV             X2, X0
.text:00000000000084F8                 MOV             X0, X21
.text:00000000000084FC                 MOV             X1, X20
.text:0000000000008500                 BL              sub_B548
.text:0000000000008504                 ADRP            X1, #aMatchDuringAss@PAGE ; "' match during associateClass, but they"...
.text:0000000000008508                 ADD             X1, X1, #aMatchDuringAss@PAGEOFF ; "' match during associateClass, but they"...
.text:000000000000850C                 MOV             W2, #0x60 ; '`'
.text:0000000000008510 loc_8510                                ; CODE XREF: AIBinder_associateClass-26EC↑j
.text:0000000000008510                 BL              sub_B548
.text:0000000000008514                 MOV             X0, SP  ; this
.text:0000000000008518                 BL              ._ZN7android4base10LogMessageD1Ev ; android::base::LogMessage::~LogMessage()
.text:000000000000851C                 STR             W23, [X19]
.text:0000000000008520                 B               loc_8314
.text:0000000000008524 ; ---------------------------------------------------------------------------
.text:0000000000008524 loc_8524                                ; CODE XREF: AIBinder_associateClass-2620↑j
.text:0000000000008524                 BL              .__stack_chk_fail
.text:0000000000008524 ; } // starts at 8150
.text:0000000000008524 ; END OF FUNCTION CHUNK FOR AIBinder_associateClass
.text:0000000000008528 ; ---------------------------------------------------------------------------
.text:0000000000008528 ; __unwind {
.text:0000000000008528                 STP             X20, X19, [SP,#-0x20]!
.text:000000000000852C                 STP             X29, X30, [SP,#0x10]
.text:0000000000008530                 ADD             X29, SP, #0x10
.text:0000000000008534                 ADRP            X9, #off_109A8@PAGE
.text:0000000000008538                 MOV             X19, X0
.text:000000000000853C                 MOV             X20, X0
.text:0000000000008540                 LDR             X9, [X9,#off_109A8@PAGEOFF]
.text:0000000000008544                 LDR             X12, [X0,#8]
.text:0000000000008548                 LDR             X8, [X0,#0x28]
.text:000000000000854C                 ADD             X10, X9, #0x18
.text:0000000000008550                 ADD             X11, X9, #0x130
.text:0000000000008554                 ADD             X9, X9, #0x70 ; 'p'
.text:0000000000008558                 STR             X10, [X0]
.text:000000000000855C                 MOV             X0, X8
.text:0000000000008560                 STR             X11, [X20,#0x30]!
.text:0000000000008564                 STR             X9, [X19,#0x10]!
.text:0000000000008568                 LDR             X9, [X12,#8]
.text:000000000000856C                 BLR             X9
.text:0000000000008570                 ADRP            X8, #off_109B0@PAGE
.text:0000000000008574                 MOV             X0, X19
.text:0000000000008578                 LDR             X8, [X8,#off_109B0@PAGEOFF]
.text:000000000000857C                 ADD             X1, X8, #0x18
.text:0000000000008580                 BL              ._ZN7android7BBinderD2Ev ; android::BBinder::~BBinder()
.text:0000000000008584                 LDP             X29, X30, [SP,#0x10]
.text:0000000000008588                 MOV             X0, X20
.text:000000000000858C                 LDP             X20, X19, [SP],#0x20
.text:0000000000008590                 B               ._ZN7android7RefBaseD2Ev ; android::RefBase::~RefBase()
.text:0000000000008590 ; } // starts at 8528
.text:0000000000008590 ; ---------------------------------------------------------------------------
.text:0000000000008594                 ALIGN 8
.text:0000000000008598 ; =============== S U B R O U T I N E =======================================
.text:0000000000008598 ; Attributes: bp-based frame
.text:0000000000008598 sub_8598                                ; DATA XREF: .data.rel.ro:00000000000100F0↓o
.text:0000000000008598 var_10          = -0x10
.text:0000000000008598 var_s0          =  0
.text:0000000000008598 ; __unwind {
.text:0000000000008598                 STP             X20, X19, [SP,#-0x10+var_10]!
.text:000000000000859C                 STP             X29, X30, [SP,#0x10+var_s0]
.text:00000000000085A0                 ADD             X29, SP, #0x10
.text:00000000000085A4                 ADRP            X8, #off_109A8@PAGE
.text:00000000000085A8                 MOV             X20, X0
.text:00000000000085AC                 MOV             X19, X0
.text:00000000000085B0                 LDR             X8, [X8,#off_109A8@PAGEOFF]
.text:00000000000085B4                 LDUR            X11, [X0,#-8]
.text:00000000000085B8                 ADD             X9, X8, #0x18
.text:00000000000085BC                 ADD             X10, X8, #0x130
.text:00000000000085C0                 ADD             X8, X8, #0x70 ; 'p'
.text:00000000000085C4                 STUR            X9, [X0,#-0x10]
.text:00000000000085C8                 STR             X10, [X20,#0x20]!
.text:00000000000085CC                 STR             X8, [X0]
.text:00000000000085D0                 LDR             X8, [X11,#8]
.text:00000000000085D4                 LDR             X0, [X0,#0x18]
.text:00000000000085D8                 BLR             X8
.text:00000000000085DC                 ADRP            X8, #off_109B0@PAGE
.text:00000000000085E0                 MOV             X0, X19 ; this
.text:00000000000085E4                 LDR             X8, [X8,#off_109B0@PAGEOFF]
.text:00000000000085E8                 ADD             X1, X8, #0x18
.text:00000000000085EC                 BL              ._ZN7android7BBinderD2Ev ; android::BBinder::~BBinder()
.text:00000000000085F0                 LDP             X29, X30, [SP,#0x10+var_s0]
.text:00000000000085F4                 MOV             X0, X20 ; this
.text:00000000000085F8                 LDP             X20, X19, [SP+0x10+var_10],#0x20
.text:00000000000085FC                 B               ._ZN7android7RefBaseD2Ev ; android::RefBase::~RefBase()
.text:00000000000085FC ; } // starts at 8598
.text:00000000000085FC ; End of function sub_8598
.text:0000000000008600 ; ---------------------------------------------------------------------------
.text:0000000000008600 ; __unwind {
.text:0000000000008600                 STP             X20, X19, [SP,#-0x20]!
.text:0000000000008604                 STP             X29, X30, [SP,#0x10]
.text:0000000000008608                 ADD             X29, SP, #0x10
.text:000000000000860C                 ADRP            X8, #off_109A8@PAGE
.text:0000000000008610                 LDR             X8, [X8,#off_109A8@PAGEOFF]
.text:0000000000008614                 LDR             X9, [X0]
.text:0000000000008618                 ADD             X10, X8, #0x18
.text:000000000000861C                 LDUR            X9, [X9,#-0x18]
.text:0000000000008620                 ADD             X11, X8, #0x130
.text:0000000000008624                 ADD             X8, X8, #0x70 ; 'p'
.text:0000000000008628                 ADD             X9, X0, X9
.text:000000000000862C                 MOV             X19, X9
.text:0000000000008630                 MOV             X20, X9
.text:0000000000008634                 STR             X10, [X9]
.text:0000000000008638                 LDR             X10, [X9,#8]
.text:000000000000863C                 LDR             X0, [X9,#0x28]
.text:0000000000008640                 STR             X11, [X20,#0x30]!
.text:0000000000008644                 STR             X8, [X19,#0x10]!
.text:0000000000008648                 LDR             X8, [X10,#8]
.text:000000000000864C                 BLR             X8
.text:0000000000008650                 ADRP            X8, #off_109B0@PAGE
.text:0000000000008654                 MOV             X0, X19
.text:0000000000008658                 LDR             X8, [X8,#off_109B0@PAGEOFF]
.text:000000000000865C                 ADD             X1, X8, #0x18
.text:0000000000008660                 BL              ._ZN7android7BBinderD2Ev ; android::BBinder::~BBinder()
.text:0000000000008664                 LDP             X29, X30, [SP,#0x10]
.text:0000000000008668                 MOV             X0, X20
.text:000000000000866C                 LDP             X20, X19, [SP],#0x20
.text:0000000000008670                 B               ._ZN7android7RefBaseD2Ev ; android::RefBase::~RefBase()
.text:0000000000008670 ; } // starts at 8600
.text:0000000000008670 ; ---------------------------------------------------------------------------
.text:0000000000008674                 ALIGN 8
.text:0000000000008678 ; __unwind {
.text:0000000000008678                 STR             X21, [SP,#-0x30]!
.text:000000000000867C                 STP             X20, X19, [SP,#0x10]
.text:0000000000008680                 STP             X29, X30, [SP,#0x20]
.text:0000000000008684                 ADD             X29, SP, #0x20 ; ' '
.text:0000000000008688                 ADRP            X8, #off_109A8@PAGE
.text:000000000000868C                 MOV             X20, X0
.text:0000000000008690                 MOV             X21, X0
.text:0000000000008694                 LDR             X8, [X8,#off_109A8@PAGEOFF]
.text:0000000000008698                 MOV             X19, X0
.text:000000000000869C                 LDR             X11, [X0,#8]
.text:00000000000086A0                 ADD             X9, X8, #0x18
.text:00000000000086A4                 ADD             X10, X8, #0x130
.text:00000000000086A8                 ADD             X8, X8, #0x70 ; 'p'
.text:00000000000086AC                 STR             X9, [X0]
.text:00000000000086B0                 STR             X10, [X20,#0x30]!
.text:00000000000086B4                 STR             X8, [X21,#0x10]!
.text:00000000000086B8                 LDR             X8, [X11,#8]
.text:00000000000086BC                 LDR             X0, [X0,#0x28]
.text:00000000000086C0                 BLR             X8
.text:00000000000086C4                 ADRP            X8, #off_109B0@PAGE
.text:00000000000086C8                 MOV             X0, X21
.text:00000000000086CC                 LDR             X8, [X8,#off_109B0@PAGEOFF]
.text:00000000000086D0                 ADD             X1, X8, #0x18
.text:00000000000086D4                 BL              ._ZN7android7BBinderD2Ev ; android::BBinder::~BBinder()
.text:00000000000086D8                 MOV             X0, X20
.text:00000000000086DC                 BL              ._ZN7android7RefBaseD2Ev ; android::RefBase::~RefBase()
.text:00000000000086E0                 MOV             X0, X19
.text:00000000000086E4                 LDP             X29, X30, [SP,#0x20]
.text:00000000000086E8                 LDP             X20, X19, [SP,#0x10]
.text:00000000000086EC                 LDR             X21, [SP],#0x30
.text:00000000000086F0                 B               ._ZdlPv ; operator delete(void *)
.text:00000000000086F0 ; } // starts at 8678
.text:00000000000086F0 ; ---------------------------------------------------------------------------
.text:00000000000086F4                 ALIGN 8
.text:00000000000086F8 ; =============== S U B R O U T I N E =======================================
.text:00000000000086F8 ; Attributes: bp-based frame
.text:00000000000086F8 sub_86F8                                ; DATA XREF: .data.rel.ro:00000000000100F8↓o
.text:00000000000086F8 var_20          = -0x20
.text:00000000000086F8 var_10          = -0x10
.text:00000000000086F8 var_s0          =  0
.text:00000000000086F8 ; __unwind {
.text:00000000000086F8                 STR             X21, [SP,#-0x10+var_20]!
.text:00000000000086FC                 STP             X20, X19, [SP,#0x20+var_10]
.text:0000000000008700                 STP             X29, X30, [SP,#0x20+var_s0]
.text:0000000000008704                 ADD             X29, SP, #0x20
.text:0000000000008708                 ADRP            X8, #off_109A8@PAGE
.text:000000000000870C                 MOV             X20, X0
.text:0000000000008710                 MOV             X21, X0
.text:0000000000008714                 LDR             X8, [X8,#off_109A8@PAGEOFF]
.text:0000000000008718                 MOV             X19, X0
.text:000000000000871C                 LDUR            X11, [X0,#-8]
.text:0000000000008720                 ADD             X9, X8, #0x18
.text:0000000000008724                 ADD             X10, X8, #0x130
.text:0000000000008728                 ADD             X8, X8, #0x70 ; 'p'
.text:000000000000872C                 STR             X9, [X20,#-0x10]!
.text:0000000000008730                 STR             X10, [X21,#0x20]!
.text:0000000000008734                 STR             X8, [X0]
.text:0000000000008738                 LDR             X8, [X11,#8]
.text:000000000000873C                 LDR             X0, [X0,#0x18]
.text:0000000000008740                 BLR             X8
.text:0000000000008744                 ADRP            X8, #off_109B0@PAGE
.text:0000000000008748                 MOV             X0, X19 ; this
.text:000000000000874C                 LDR             X8, [X8,#off_109B0@PAGEOFF]
.text:0000000000008750                 ADD             X1, X8, #0x18
.text:0000000000008754                 BL              ._ZN7android7BBinderD2Ev ; android::BBinder::~BBinder()
.text:0000000000008758                 MOV             X0, X21 ; this
.text:000000000000875C                 BL              ._ZN7android7RefBaseD2Ev ; android::RefBase::~RefBase()
.text:0000000000008760                 MOV             X0, X20 ; void *
.text:0000000000008764                 LDP             X29, X30, [SP,#0x20+var_s0]
.text:0000000000008768                 LDP             X20, X19, [SP,#0x20+var_10]
.text:000000000000876C                 LDR             X21, [SP+0x20+var_20],#0x30
.text:0000000000008770                 B               ._ZdlPv ; operator delete(void *)
.text:0000000000008770 ; } // starts at 86F8
.text:0000000000008770 ; End of function sub_86F8
.text:0000000000008770 ; ---------------------------------------------------------------------------
.text:0000000000008774                 ALIGN 8
.text:0000000000008778 ; __unwind {
.text:0000000000008778                 STR             X21, [SP,#-0x30]!
.text:000000000000877C                 STP             X20, X19, [SP,#0x10]
.text:0000000000008780                 STP             X29, X30, [SP,#0x20]
.text:0000000000008784                 ADD             X29, SP, #0x20 ; ' '
.text:0000000000008788                 ADRP            X8, #off_109A8@PAGE
.text:000000000000878C                 LDR             X8, [X8,#off_109A8@PAGEOFF]
.text:0000000000008790                 LDR             X9, [X0]
.text:0000000000008794                 ADD             X10, X8, #0x18
.text:0000000000008798                 LDUR            X9, [X9,#-0x18]
.text:000000000000879C                 ADD             X19, X0, X9
.text:00000000000087A0                 ADD             X9, X8, #0x130
.text:00000000000087A4                 ADD             X8, X8, #0x70 ; 'p'
.text:00000000000087A8                 MOV             X20, X19
.text:00000000000087AC                 LDR             X11, [X19,#8]
.text:00000000000087B0                 MOV             X21, X19
.text:00000000000087B4                 STR             X10, [X19]
.text:00000000000087B8                 STR             X9, [X20,#0x30]!
.text:00000000000087BC                 STR             X8, [X21,#0x10]!
.text:00000000000087C0                 LDR             X8, [X11,#8]
.text:00000000000087C4                 LDR             X0, [X19,#0x28]
.text:00000000000087C8                 BLR             X8
.text:00000000000087CC                 ADRP            X8, #off_109B0@PAGE
.text:00000000000087D0                 MOV             X0, X21
.text:00000000000087D4                 LDR             X8, [X8,#off_109B0@PAGEOFF]
.text:00000000000087D8                 ADD             X1, X8, #0x18
.text:00000000000087DC                 BL              ._ZN7android7BBinderD2Ev ; android::BBinder::~BBinder()
.text:00000000000087E0                 MOV             X0, X20
.text:00000000000087E4                 BL              ._ZN7android7RefBaseD2Ev ; android::RefBase::~RefBase()
.text:00000000000087E8                 MOV             X0, X19
.text:00000000000087EC                 LDP             X29, X30, [SP,#0x20]
.text:00000000000087F0                 LDP             X20, X19, [SP,#0x10]
.text:00000000000087F4                 LDR             X21, [SP],#0x30
.text:00000000000087F8                 B               ._ZdlPv ; operator delete(void *)
.text:00000000000087F8 ; } // starts at 8778
.text:00000000000087F8 ; ---------------------------------------------------------------------------
.text:00000000000087FC                 ALIGN 0x20
.text:0000000000008800 ; __unwind {
.text:0000000000008800                 LDR             X8, [X0,#8]
.text:0000000000008804                 ADD             X0, X8, #0x20 ; ' '
.text:0000000000008808                 RET
.text:0000000000008808 ; } // starts at 8800
.text:0000000000008808 ; ---------------------------------------------------------------------------
.text:000000000000880C                 ALIGN 0x10
.text:0000000000008810 ; =============== S U B R O U T I N E =======================================
.text:0000000000008810 sub_8810                                ; DATA XREF: .data.rel.ro:0000000000010088↓o
.text:0000000000008810 ; __unwind {
.text:0000000000008810                 LDUR            X8, [X0,#-8]
.text:0000000000008814                 ADD             X0, X8, #0x20 ; ' '
.text:0000000000008818                 RET
.text:0000000000008818 ; } // starts at 8810
.text:0000000000008818 ; End of function sub_8810
.text:0000000000008818 ; ---------------------------------------------------------------------------
.text:000000000000881C                 ALIGN 0x20
.text:0000000000008820 ; START OF FUNCTION CHUNK FOR sub_8B40
.text:0000000000008820 loc_8820                                ; CODE XREF: sub_8B40+4↓j
.text:0000000000008820 ; __unwind {
.text:0000000000008820                 SUB             SP, SP, #0xA0
.text:0000000000008824                 STR             X25, [SP,#0xA0+var_50]
.text:0000000000008828                 STP             X24, X23, [SP,#0xA0+var_40]
.text:000000000000882C                 STP             X22, X21, [SP,#0xA0+var_30]
.text:0000000000008830                 STP             X20, X19, [SP,#0xA0+var_20]
.text:0000000000008834                 STP             X29, X30, [SP,#0xA0+var_10]
.text:0000000000008838                 ADD             X29, SP, #0xA0+var_10
.text:000000000000883C                 MRS             X23, #3, c13, c0, #2
.text:0000000000008840                 LDR             X8, [X23,#0x28]
.text:0000000000008844                 STR             X8, [SP,#0xA0+var_58]
.text:0000000000008848                 LDR             X8, [X0,#8]
.text:000000000000884C                 LDR             X24, [X8,#0x18]
.text:0000000000008850                 CBZ             X24, loc_887C
.text:0000000000008854                 MOV             W21, W1
.text:0000000000008858                 LDR             X1, [X2,#0x10]
.text:000000000000885C                 MOV             X19, X2
.text:0000000000008860                 LSR             X8, X1, #0x1F
.text:0000000000008864                 CBZ             X8, loc_8884
.text:0000000000008868                 BL              ._ZN7android4base21GetMinimumLogSeverityEv ; android::base::GetMinimumLogSeverity(void)
.text:000000000000886C                 CMP             W0, #4
.text:0000000000008870                 B.LE            loc_8A04
.text:0000000000008874                 MOV             W19, #0xFFFFFFEA
.text:0000000000008878                 B               loc_89D4
.text:000000000000887C ; ---------------------------------------------------------------------------
.text:000000000000887C loc_887C                                ; CODE XREF: sub_8B40-2F0↑j
.text:000000000000887C                 MOV             W19, WZR
.text:0000000000008880                 B               loc_89D4
.text:0000000000008884 ; ---------------------------------------------------------------------------
.text:0000000000008884 loc_8884                                ; CODE XREF: sub_8B40-2DC↑j
.text:0000000000008884                 MOV             X20, X0
.text:0000000000008888                 STP             XZR, XZR, [SP,#0xA0+var_68]
.text:000000000000888C                 ADD             X0, SP, #0xA0+var_70
.text:0000000000008890                 STR             XZR, [SP,#0xA0+var_70]
.text:0000000000008894                 BL              sub_8A70
.text:0000000000008898                 LDR             X8, [X19,#0x10]
.text:000000000000889C                 STP             XZR, XZR, [SP,#0xA0+var_90+8]
.text:00000000000088A0                 STR             XZR, [SP,#0xA0+var_90]
.text:00000000000088A4                 CBZ             X8, loc_8968
.text:00000000000088A8                 LSR             X9, X8, #0x3D ; '='
.text:00000000000088AC                 CBNZ            X9, loc_8A6C
.text:00000000000088B0                 LSL             X22, X8, #3
.text:00000000000088B4                 MOV             X0, X22 ; unsigned __int64
.text:00000000000088B8                 BL              ._Znwm  ; operator new(ulong)
.text:00000000000088BC                 DUP             V0.2D, X0
.text:00000000000088C0                 MOV             X25, XZR
.text:00000000000088C4                 ADD             X8, X0, X22
.text:00000000000088C8                 STR             X8, [SP,#0xA0+var_80]
.text:00000000000088CC                 STR             Q0, [SP,#0xA0+var_90]
.text:00000000000088D0 loc_88D0                                ; CODE XREF: sub_8B40-1E4↓j
.text:00000000000088D0                 LDR             X8, [X19,#8]
.text:00000000000088D4                 ADD             X0, SP, #0xA0+var_98 ; this
.text:00000000000088D8                 ADD             X1, X8, X25,LSL#3 ; android::String16 *
.text:00000000000088DC                 BL              ._ZN7android7String8C1ERKNS_8String16E ; android::String8::String8(android::String16 const&)
.text:00000000000088E0                 LDP             X0, X8, [SP,#0xA0+var_68] ; this
.text:00000000000088E4                 CMP             X0, X8
.text:00000000000088E8                 B.CS            loc_8904
.text:00000000000088EC                 ADD             X1, SP, #0xA0+var_98 ; android::String8 *
.text:00000000000088F0                 BL              ._ZN7android7String8C1ERKS0_ ; android::String8::String8(android::String8 const&)
.text:00000000000088F4                 LDR             X8, [SP,#0xA0+var_68]
.text:00000000000088F8                 ADD             X8, X8, #8
.text:00000000000088FC                 STR             X8, [SP,#0xA0+var_68]
.text:0000000000008900                 B               loc_8910
.text:0000000000008904 ; ---------------------------------------------------------------------------
.text:0000000000008904 loc_8904                                ; CODE XREF: sub_8B40-258↑j
.text:0000000000008904                 ADD             X0, SP, #0xA0+var_70
.text:0000000000008908                 ADD             X1, SP, #0xA0+var_98
.text:000000000000890C                 BL              sub_B808
.text:0000000000008910 loc_8910                                ; CODE XREF: sub_8B40-240↑j
.text:0000000000008910                 ADD             X0, SP, #0xA0+var_98 ; this
.text:0000000000008914                 BL              ._ZN7android7String8D1Ev ; android::String8::~String8()
.text:0000000000008918                 LDR             X9, [SP,#0xA0+var_70]
.text:000000000000891C                 LDP             X8, X10, [SP,#0xA0+var_90+8]
.text:0000000000008920                 LDR             X9, [X9,X25,LSL#3]
.text:0000000000008924                 CMP             X8, X10
.text:0000000000008928                 STR             X9, [SP,#0xA0+var_98]
.text:000000000000892C                 B.CS            loc_8944
.text:0000000000008930                 STR             X9, [X8]
.text:0000000000008934                 LDR             X8, [SP,#0xA0+var_90+8]
.text:0000000000008938                 ADD             X8, X8, #8
.text:000000000000893C                 STR             X8, [SP,#0xA0+var_90+8]
.text:0000000000008940                 B               loc_8950
.text:0000000000008944 ; ---------------------------------------------------------------------------
.text:0000000000008944 loc_8944                                ; CODE XREF: sub_8B40-214↑j
.text:0000000000008944                 ADD             X0, SP, #0xA0+var_90
.text:0000000000008948                 ADD             X1, SP, #0xA0+var_98
.text:000000000000894C                 BL              loc_B928
.text:0000000000008950 loc_8950                                ; CODE XREF: sub_8B40-200↑j
.text:0000000000008950                 LDR             X8, [X19,#0x10]
.text:0000000000008954                 ADD             X25, X25, #1
.text:0000000000008958                 CMP             X25, X8
.text:000000000000895C                 B.CC            loc_88D0
.text:0000000000008960                 LDP             X2, X8, [SP,#0xA0+var_90]
.text:0000000000008964                 B               loc_896C
.text:0000000000008968 ; ---------------------------------------------------------------------------
.text:0000000000008968 loc_8968                                ; CODE XREF: sub_8B40-29C↑j
.text:0000000000008968                 MOV             X2, XZR
.text:000000000000896C loc_896C                                ; CODE XREF: sub_8B40-1DC↑j
.text:000000000000896C                 MOV             X0, X20
.text:0000000000008970                 MOV             W1, W21
.text:0000000000008974                 SUB             X8, X8, X2
.text:0000000000008978                 LSR             X3, X8, #3
.text:000000000000897C                 BLR             X24
.text:0000000000008980                 LDR             X8, [SP,#0xA0+var_90]
.text:0000000000008984                 MOV             W19, W0
.text:0000000000008988                 CBZ             X8, loc_8998
.text:000000000000898C                 MOV             X0, X8  ; void *
.text:0000000000008990                 STR             X8, [SP,#0xA0+var_90+8]
.text:0000000000008994                 BL              ._ZdlPv ; operator delete(void *)
.text:0000000000008998 loc_8998                                ; CODE XREF: sub_8B40-1B8↑j
.text:0000000000008998                 LDR             X21, [SP,#0xA0+var_70]
.text:000000000000899C                 CBZ             X21, loc_89D4
.text:00000000000089A0                 LDR             X20, [SP,#0xA0+var_68]
.text:00000000000089A4                 CMP             X20, X21
.text:00000000000089A8                 B.EQ            loc_89C8
.text:00000000000089AC loc_89AC                                ; CODE XREF: sub_8B40-184↓j
.text:00000000000089AC                 SUB             X20, X20, #8
.text:00000000000089B0                 MOV             X0, X20 ; this
.text:00000000000089B4                 BL              ._ZN7android7String8D1Ev ; android::String8::~String8()
.text:00000000000089B8                 CMP             X21, X20
.text:00000000000089BC                 B.NE            loc_89AC
.text:00000000000089C0                 LDR             X0, [SP,#0xA0+var_70]
.text:00000000000089C4                 B               loc_89CC
.text:00000000000089C8 ; ---------------------------------------------------------------------------
.text:00000000000089C8 loc_89C8                                ; CODE XREF: sub_8B40-198↑j
.text:00000000000089C8                 MOV             X0, X21 ; void *
.text:00000000000089CC loc_89CC                                ; CODE XREF: sub_8B40-17C↑j
.text:00000000000089CC                 STR             X21, [SP,#0xA0+var_68]
.text:00000000000089D0                 BL              ._ZdlPv ; operator delete(void *)
.text:00000000000089D4 loc_89D4                                ; CODE XREF: sub_8B40-2C8↑j
.text:00000000000089D4                                         ; sub_8B40-2C0↑j ...
.text:00000000000089D4                 LDR             X8, [X23,#0x28]
.text:00000000000089D8                 LDR             X9, [SP,#0xA0+var_58]
.text:00000000000089DC                 CMP             X8, X9
.text:00000000000089E0                 B.NE            loc_8A68
.text:00000000000089E4                 MOV             W0, W19
.text:00000000000089E8                 LDR             X25, [SP,#0xA0+var_50]
.text:00000000000089EC                 LDP             X29, X30, [SP,#0xA0+var_10]
.text:00000000000089F0                 LDP             X20, X19, [SP,#0xA0+var_20]
.text:00000000000089F4                 LDP             X22, X21, [SP,#0xA0+var_30]
.text:00000000000089F8                 LDP             X24, X23, [SP,#0xA0+var_40]
.text:00000000000089FC                 ADD             SP, SP, #0xA0
.text:0000000000008A00                 RET
.text:0000000000008A04 ; ---------------------------------------------------------------------------
.text:0000000000008A04 loc_8A04                                ; CODE XREF: sub_8B40-2D0↑j
.text:0000000000008A04                 BL              .__errno
.text:0000000000008A08                 ADRP            X1, #aFrameworksNati@PAGE ; "frameworks/native/libs/binder/ndk/ibind"...
.text:0000000000008A0C                 LDR             W21, [X0]
.text:0000000000008A10                 MOV             X20, X0
.text:0000000000008A14                 ADD             X1, X1, #aFrameworksNati@PAGEOFF ; "frameworks/native/libs/binder/ndk/ibind"...
.text:0000000000008A18                 MOV             W2, #0x83
.text:0000000000008A1C                 MOV             W6, #0xFFFFFFFF
.text:0000000000008A20                 ADD             X0, SP, #0xA0+var_70
.text:0000000000008A24                 MOV             W3, WZR
.text:0000000000008A28                 MOV             W4, #4
.text:0000000000008A2C                 MOV             X5, XZR
.text:0000000000008A30                 BL              ._ZN7android4base10LogMessageC1EPKcjNS0_5LogIdENS0_11LogSeverityES3_i ; android::base::LogMessage::LogMessage(char const*,uint,android::base::LogId,android::base::LogSeverity,char const*,int)
.text:0000000000008A34                 ADD             X0, SP, #0xA0+var_70 ; this
.text:0000000000008A38                 BL              ._ZN7android4base10LogMessage6streamEv ; android::base::LogMessage::stream(void)
.text:0000000000008A3C                 ADRP            X1, #aAbbinderDumpRe@PAGE ; "ABBinder::dump received too many argume"...
.text:0000000000008A40                 ADD             X1, X1, #aAbbinderDumpRe@PAGEOFF ; "ABBinder::dump received too many argume"...
.text:0000000000008A44                 MOV             W2, #0x2C ; ','
.text:0000000000008A48                 BL              sub_B548
.text:0000000000008A4C                 LDR             X1, [X19,#0x10]
.text:0000000000008A50                 BL              ._ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEm ; std::__1::basic_ostream<char,std::__1::char_traits<char>>::operator<<(ulong)
.text:0000000000008A54                 ADD             X0, SP, #0xA0+var_70 ; this
.text:0000000000008A58                 BL              ._ZN7android4base10LogMessageD1Ev ; android::base::LogMessage::~LogMessage()
.text:0000000000008A5C                 MOV             W19, #0xFFFFFFEA
.text:0000000000008A60                 STR             W21, [X20]
.text:0000000000008A64                 B               loc_89D4
.text:0000000000008A68 ; ---------------------------------------------------------------------------
.text:0000000000008A68 loc_8A68                                ; CODE XREF: sub_8B40-160↑j
.text:0000000000008A68                 BL              .__stack_chk_fail
.text:0000000000008A6C ; ---------------------------------------------------------------------------
.text:0000000000008A6C loc_8A6C                                ; CODE XREF: sub_8B40-294↑j
.text:0000000000008A6C                 BL              .abort
.text:0000000000008A6C ; } // starts at 8820
.text:0000000000008A6C ; END OF FUNCTION CHUNK FOR sub_8B40
.text:0000000000008A70 ; =============== S U B R O U T I N E =======================================
.text:0000000000008A70 ; Attributes: bp-based frame
.text:0000000000008A70 sub_8A70                                ; CODE XREF: sub_8B40-2AC↑p
.text:0000000000008A70 var_30          = -0x30
.text:0000000000008A70 var_20          = -0x20
.text:0000000000008A70 var_10          = -0x10
.text:0000000000008A70 var_s0          =  0
.text:0000000000008A70 ; __unwind {
.text:0000000000008A70                 STP             X24, X23, [SP,#-0x10+var_30]!
.text:0000000000008A74                 STP             X22, X21, [SP,#0x30+var_20]
.text:0000000000008A78                 STP             X20, X19, [SP,#0x30+var_10]
.text:0000000000008A7C                 STP             X29, X30, [SP,#0x30+var_s0]
.text:0000000000008A80                 ADD             X29, SP, #0x30
.text:0000000000008A84                 LDR             X8, [X0,#0x10]
.text:0000000000008A88                 LDR             X19, [X0]
.text:0000000000008A8C                 SUB             X8, X8, X19
.text:0000000000008A90                 CMP             X1, X8,ASR#3
.text:0000000000008A94                 B.LS            loc_8B28
.text:0000000000008A98                 LSR             X8, X1, #0x3D ; '='
.text:0000000000008A9C                 CBNZ            X8, loc_8B3C
.text:0000000000008AA0                 MOV             X21, X0
.text:0000000000008AA4                 LDR             X20, [X0,#8]
.text:0000000000008AA8                 LSL             X22, X1, #3
.text:0000000000008AAC                 MOV             X0, X22 ; unsigned __int64
.text:0000000000008AB0                 BL              ._Znwm  ; operator new(ulong)
.text:0000000000008AB4                 SUBS            X8, X20, X19
.text:0000000000008AB8                 ADD             X24, X0, X8
.text:0000000000008ABC                 ADD             X23, X0, X22
.text:0000000000008AC0                 MOV             X22, X24
.text:0000000000008AC4                 B.EQ            loc_8AE8
.text:0000000000008AC8 loc_8AC8                                ; CODE XREF: sub_8A70+70↓j
.text:0000000000008AC8                 SUB             X22, X22, #8
.text:0000000000008ACC                 SUB             X20, X20, #8
.text:0000000000008AD0                 MOV             X0, X22 ; this
.text:0000000000008AD4                 MOV             X1, X20 ; android::String8 *
.text:0000000000008AD8                 BL              ._ZN7android7String8C1ERKS0_ ; android::String8::String8(android::String8 const&)
.text:0000000000008ADC                 CMP             X19, X20
.text:0000000000008AE0                 B.NE            loc_8AC8
.text:0000000000008AE4                 LDP             X20, X19, [X21]
.text:0000000000008AE8 loc_8AE8                                ; CODE XREF: sub_8A70+54↑j
.text:0000000000008AE8                 CMP             X19, X20
.text:0000000000008AEC                 STP             X22, X24, [X21]
.text:0000000000008AF0                 STR             X23, [X21,#0x10]
.text:0000000000008AF4                 B.EQ            loc_8B0C
.text:0000000000008AF8 loc_8AF8                                ; CODE XREF: sub_8A70+98↓j
.text:0000000000008AF8                 SUB             X19, X19, #8
.text:0000000000008AFC                 MOV             X0, X19 ; this
.text:0000000000008B00                 BL              ._ZN7android7String8D1Ev ; android::String8::~String8()
.text:0000000000008B04                 CMP             X20, X19
.text:0000000000008B08                 B.NE            loc_8AF8
.text:0000000000008B0C loc_8B0C                                ; CODE XREF: sub_8A70+84↑j
.text:0000000000008B0C                 CBZ             X20, loc_8B28
.text:0000000000008B10                 MOV             X0, X20 ; void *
.text:0000000000008B14                 LDP             X29, X30, [SP,#0x30+var_s0]
.text:0000000000008B18                 LDP             X20, X19, [SP,#0x30+var_10]
.text:0000000000008B1C                 LDP             X22, X21, [SP,#0x30+var_20]
.text:0000000000008B20                 LDP             X24, X23, [SP+0x30+var_30],#0x40
.text:0000000000008B24                 B               ._ZdlPv ; operator delete(void *)
.text:0000000000008B28 ; ---------------------------------------------------------------------------
.text:0000000000008B28 loc_8B28                                ; CODE XREF: sub_8A70+24↑j
.text:0000000000008B28                                         ; sub_8A70:loc_8B0C↑j
.text:0000000000008B28                 LDP             X29, X30, [SP,#0x30+var_s0]
.text:0000000000008B2C                 LDP             X20, X19, [SP,#0x30+var_10]
.text:0000000000008B30                 LDP             X22, X21, [SP,#0x30+var_20]
.text:0000000000008B34                 LDP             X24, X23, [SP+0x30+var_30],#0x40
.text:0000000000008B38                 RET
.text:0000000000008B3C ; ---------------------------------------------------------------------------
.text:0000000000008B3C loc_8B3C                                ; CODE XREF: sub_8A70+2C↑j
.text:0000000000008B3C                 BL              .abort
.text:0000000000008B3C ; } // starts at 8A70
.text:0000000000008B3C ; End of function sub_8A70
.text:0000000000008B40 ; =============== S U B R O U T I N E =======================================
.text:0000000000008B40 sub_8B40                                ; DATA XREF: .data.rel.ro:00000000000100A0↓o
.text:0000000000008B40 var_98          = -0x98
.text:0000000000008B40 var_90          = -0x90
.text:0000000000008B40 var_80          = -0x80
.text:0000000000008B40 var_70          = -0x70
.text:0000000000008B40 var_68          = -0x68
.text:0000000000008B40 var_58          = -0x58
.text:0000000000008B40 var_50          = -0x50
.text:0000000000008B40 var_40          = -0x40
.text:0000000000008B40 var_30          = -0x30
.text:0000000000008B40 var_20          = -0x20
.text:0000000000008B40 var_10          = -0x10
.text:0000000000008B40 ; FUNCTION CHUNK AT .text:0000000000008820 SIZE 00000250 BYTES
.text:0000000000008B40 ; __unwind {
.text:0000000000008B40                 SUB             X0, X0, #0x10 ; this
.text:0000000000008B44                 B               loc_8820
.text:0000000000008B44 ; } // starts at 8B40
.text:0000000000008B44 ; End of function sub_8B40
.text:0000000000008B48 ; ---------------------------------------------------------------------------
.text:0000000000008B48 ; START OF FUNCTION CHUNK FOR sub_8C70
.text:0000000000008B48 loc_8B48                                ; CODE XREF: sub_8C70+4↓j
.text:0000000000008B48 ; __unwind {
.text:0000000000008B48                 SUB             SP, SP, #0x80
.text:0000000000008B4C                 STR             X23, [SP,#0x80+var_40]
.text:0000000000008B50                 STP             X22, X21, [SP,#0x80+var_30]
.text:0000000000008B54                 STP             X20, X19, [SP,#0x80+var_20]
.text:0000000000008B58                 STP             X29, X30, [SP,#0x80+var_10]
.text:0000000000008B5C                 ADD             X29, SP, #0x80+var_10
.text:0000000000008B60                 MRS             X23, #3, c13, c0, #2
.text:0000000000008B64                 MOV             X20, X3
.text:0000000000008B68                 LDR             X8, [X23,#0x28]
.text:0000000000008B6C                 MOV             X22, X2
.text:0000000000008B70                 MOV             W19, W1
.text:0000000000008B74                 SUB             W9, W1, #1
.text:0000000000008B78                 ADD             X1, X0, #0x10 ; android::IBinder *
.text:0000000000008B7C                 MOV             W10, #0xFFFFFE
.text:0000000000008B80                 STR             X8, [SP,#0x80+var_48]
.text:0000000000008B84                 CMP             W9, W10
.text:0000000000008B88                 B.HI            loc_8C14
.text:0000000000008B8C                 MOV             X21, X0
.text:0000000000008B90                 MOV             X0, X22 ; this
.text:0000000000008B94                 BL              ._ZNK7android6Parcel14checkInterfaceEPNS_7IBinderE ; android::Parcel::checkInterface(android::IBinder *)
.text:0000000000008B98                 TBZ             W0, #0, loc_8C3C
.text:0000000000008B9C                 LDR             X8, [X21,#8]
.text:0000000000008BA0                 ADD             X2, SP, #0x80+var_60
.text:0000000000008BA4                 STRB            WZR, [SP,#0x80+var_50]
.text:0000000000008BA8                 ADD             X3, SP, #0x80+var_78
.text:0000000000008BAC                 STRB            WZR, [SP,#0x80+var_68]
.text:0000000000008BB0                 MOV             X0, X21
.text:0000000000008BB4                 MOV             W1, W19
.text:0000000000008BB8                 LDR             X8, [X8,#0x10]
.text:0000000000008BBC                 STP             X21, X22, [SP,#0x80+var_60]
.text:0000000000008BC0                 STP             X21, X20, [SP,#0x80+var_78]
.text:0000000000008BC4                 BLR             X8
.text:0000000000008BC8                 BL              sub_E118
.text:0000000000008BCC                 LDRB            W8, [SP,#0x80+var_68]
.text:0000000000008BD0                 MOV             W19, W0
.text:0000000000008BD4                 CBZ             W8, loc_8BF0
.text:0000000000008BD8                 LDR             X20, [SP,#0x80+var_70]
.text:0000000000008BDC                 CBZ             X20, loc_8BF0
.text:0000000000008BE0                 MOV             X0, X20 ; this
.text:0000000000008BE4                 BL              ._ZN7android6ParcelD1Ev ; android::Parcel::~Parcel()
.text:0000000000008BE8                 MOV             X0, X20 ; void *
.text:0000000000008BEC                 BL              ._ZdlPv ; operator delete(void *)
.text:0000000000008BF0 loc_8BF0                                ; CODE XREF: sub_8C70-9C↑j
.text:0000000000008BF0                                         ; sub_8C70-94↑j
.text:0000000000008BF0                 LDRB            W8, [SP,#0x80+var_50]
.text:0000000000008BF4                 CBZ             W8, loc_8C40
.text:0000000000008BF8                 LDR             X20, [SP,#0x80+var_58]
.text:0000000000008BFC                 CBZ             X20, loc_8C40
.text:0000000000008C00                 MOV             X0, X20 ; this
.text:0000000000008C04                 BL              ._ZN7android6ParcelD1Ev ; android::Parcel::~Parcel()
.text:0000000000008C08                 MOV             X0, X20 ; void *
.text:0000000000008C0C                 BL              ._ZdlPv ; operator delete(void *)
.text:0000000000008C10                 B               loc_8C40
.text:0000000000008C14 ; ---------------------------------------------------------------------------
.text:0000000000008C14 loc_8C14                                ; CODE XREF: sub_8C70-E8↑j
.text:0000000000008C14                 MOV             X0, X1  ; this
.text:0000000000008C18                 MOV             W1, W19 ; unsigned int
.text:0000000000008C1C                 MOV             X2, X22 ; android::Parcel *
.text:0000000000008C20                 MOV             X3, X20 ; android::Parcel *
.text:0000000000008C24                 BL              ._ZN7android7BBinder10onTransactEjRKNS_6ParcelEPS1_j ; android::BBinder::onTransact(uint,android::Parcel const&,android::Parcel*,uint)
.text:0000000000008C28                 LDR             X8, [X23,#0x28]
.text:0000000000008C2C                 LDR             X9, [SP,#0x80+var_48]
.text:0000000000008C30                 CMP             X8, X9
.text:0000000000008C34                 B.EQ            loc_8C54
.text:0000000000008C38                 B               loc_8C6C
.text:0000000000008C3C ; ---------------------------------------------------------------------------
.text:0000000000008C3C loc_8C3C                                ; CODE XREF: sub_8C70-D8↑j
.text:0000000000008C3C                 MOV             W19, #0x80000001
.text:0000000000008C40 loc_8C40                                ; CODE XREF: sub_8C70-7C↑j
.text:0000000000008C40                                         ; sub_8C70-74↑j ...
.text:0000000000008C40                 LDR             X8, [X23,#0x28]
.text:0000000000008C44                 LDR             X9, [SP,#0x80+var_48]
.text:0000000000008C48                 CMP             X8, X9
.text:0000000000008C4C                 B.NE            loc_8C6C
.text:0000000000008C50                 MOV             W0, W19
.text:0000000000008C54 loc_8C54                                ; CODE XREF: sub_8C70-3C↑j
.text:0000000000008C54                 LDP             X29, X30, [SP,#0x80+var_10]
.text:0000000000008C58                 LDP             X20, X19, [SP,#0x80+var_20]
.text:0000000000008C5C                 LDP             X22, X21, [SP,#0x80+var_30]
.text:0000000000008C60                 LDR             X23, [SP,#0x80+var_40]
.text:0000000000008C64                 ADD             SP, SP, #0x80
.text:0000000000008C68                 RET
.text:0000000000008C6C ; ---------------------------------------------------------------------------
.text:0000000000008C6C loc_8C6C                                ; CODE XREF: sub_8C70-38↑j
.text:0000000000008C6C                                         ; sub_8C70-24↑j
.text:0000000000008C6C                 BL              .__stack_chk_fail
.text:0000000000008C6C ; } // starts at 8B48
.text:0000000000008C6C ; END OF FUNCTION CHUNK FOR sub_8C70
.text:0000000000008C70 ; =============== S U B R O U T I N E =======================================
.text:0000000000008C70 sub_8C70                                ; DATA XREF: .data.rel.ro:0000000000010100↓o
.text:0000000000008C70 var_78          = -0x78
.text:0000000000008C70 var_70          = -0x70
.text:0000000000008C70 var_68          = -0x68
.text:0000000000008C70 var_60          = -0x60
.text:0000000000008C70 var_58          = -0x58
.text:0000000000008C70 var_50          = -0x50
.text:0000000000008C70 var_48          = -0x48
.text:0000000000008C70 var_40          = -0x40
.text:0000000000008C70 var_30          = -0x30
.text:0000000000008C70 var_20          = -0x20
.text:0000000000008C70 var_10          = -0x10
.text:0000000000008C70 ; FUNCTION CHUNK AT .text:0000000000008B48 SIZE 00000128 BYTES
.text:0000000000008C70 ; __unwind {
.text:0000000000008C70                 SUB             X0, X0, #0x10
.text:0000000000008C74                 B               loc_8B48
.text:0000000000008C74 ; } // starts at 8C70
.text:0000000000008C74 ; End of function sub_8C70
.text:0000000000008C78 ; =============== S U B R O U T I N E =======================================
.text:0000000000008C78 ; Attributes: bp-based frame
.text:0000000000008C78 sub_8C78                                ; CODE XREF: sub_9088+138↓p
.text:0000000000008C78 var_28          = -0x28
.text:0000000000008C78 var_20          = -0x20
.text:0000000000008C78 var_10          = -0x10
.text:0000000000008C78 var_s0          =  0
.text:0000000000008C78 ; __unwind {
.text:0000000000008C78                 SUB             SP, SP, #0x40
.text:0000000000008C7C                 STR             X21, [SP,#0x30+var_20]
.text:0000000000008C80                 STP             X20, X19, [SP,#0x30+var_10]
.text:0000000000008C84                 STP             X29, X30, [SP,#0x30+var_s0]
.text:0000000000008C88                 ADD             X29, SP, #0x30
.text:0000000000008C8C                 MRS             X21, #3, c13, c0, #2
.text:0000000000008C90                 MOV             X20, X0
.text:0000000000008C94                 LDR             X8, [X21,#0x28]
.text:0000000000008C98                 ADD             X0, X0, #0x30 ; '0' ; this
.text:0000000000008C9C                 MOV             X19, X1
.text:0000000000008CA0                 STR             X8, [SP,#0x30+var_28]
.text:0000000000008CA4                 BL              ._ZN7android7RefBaseC2Ev ; android::RefBase::RefBase(void)
.text:0000000000008CA8                 ADRP            X8, #off_109B8@PAGE
.text:0000000000008CAC                 ADD             X0, X20, #0x10
.text:0000000000008CB0                 MOV             X2, X19
.text:0000000000008CB4                 LDR             X8, [X8,#off_109B8@PAGEOFF]
.text:0000000000008CB8                 ADD             X9, X8, #0x78 ; 'x'
.text:0000000000008CBC                 ADD             X8, X8, #0x18
.text:0000000000008CC0                 STR             X9, [X20,#0x30]
.text:0000000000008CC4                 STP             X8, XZR, [X20]
.text:0000000000008CC8                 ADRP            X8, #off_109C0@PAGE
.text:0000000000008CCC                 LDR             X8, [X8,#off_109C0@PAGEOFF]
.text:0000000000008CD0                 ADD             X1, X8, #0x18
.text:0000000000008CD4                 BL              ._ZN7android9BpRefBaseC2ERKNS_2spINS_7IBinderEEE ; android::BpRefBase::BpRefBase(android::sp<android::IBinder> const&)
.text:0000000000008CD8                 ADRP            X8, #off_109C8@PAGE
.text:0000000000008CDC                 LDR             X8, [X8,#off_109C8@PAGEOFF]
.text:0000000000008CE0                 ADD             X9, X8, #0x18
.text:0000000000008CE4                 ADD             X10, X8, #0xC0
.text:0000000000008CE8                 ADD             X8, X8, #0x60 ; '`'
.text:0000000000008CEC                 STR             X9, [X20]
.text:0000000000008CF0                 STR             X10, [X20,#0x30]
.text:0000000000008CF4                 STR             X8, [X20,#0x10]
.text:0000000000008CF8                 LDR             X8, [X19]
.text:0000000000008CFC                 CBZ             X8, loc_8D24
.text:0000000000008D00 loc_8D00                                ; CODE XREF: sub_8C78+100↓j
.text:0000000000008D00                 LDR             X8, [X21,#0x28]
.text:0000000000008D04                 LDR             X9, [SP,#0x30+var_28]
.text:0000000000008D08                 CMP             X8, X9
.text:0000000000008D0C                 B.NE            loc_8D7C
.text:0000000000008D10                 LDP             X29, X30, [SP,#0x30+var_s0]
.text:0000000000008D14                 LDP             X20, X19, [SP,#0x30+var_10]
.text:0000000000008D18                 LDR             X21, [SP,#0x30+var_20]
.text:0000000000008D1C                 ADD             SP, SP, #0x40 ; '@'
.text:0000000000008D20                 RET
.text:0000000000008D24 ; ---------------------------------------------------------------------------
.text:0000000000008D24 loc_8D24                                ; CODE XREF: sub_8C78+84↑j
.text:0000000000008D24                 ADRP            X1, #aFrameworksNati@PAGE ; "frameworks/native/libs/binder/ndk/ibind"...
.text:0000000000008D28                 ADD             X1, X1, #aFrameworksNati@PAGEOFF ; "frameworks/native/libs/binder/ndk/ibind"...
.text:0000000000008D2C                 MOV             W2, #0xA7
.text:0000000000008D30                 MOV             W6, #0xFFFFFFFF
.text:0000000000008D34                 MOV             X0, SP
.text:0000000000008D38                 MOV             W3, WZR
.text:0000000000008D3C                 MOV             W4, #6
.text:0000000000008D40                 MOV             X5, XZR
.text:0000000000008D44                 BL              ._ZN7android4base10LogMessageC1EPKcjNS0_5LogIdENS0_11LogSeverityES3_i ; android::base::LogMessage::LogMessage(char const*,uint,android::base::LogId,android::base::LogSeverity,char const*,int)
.text:0000000000008D48                 MOV             X0, SP  ; this
.text:0000000000008D4C                 BL              ._ZN7android4base10LogMessage6streamEv ; android::base::LogMessage::stream(void)
.text:0000000000008D50                 ADRP            X1, #aCheckFailedBin@PAGE ; "Check failed: binder != nullptr"
.text:0000000000008D54                 ADD             X1, X1, #aCheckFailedBin@PAGEOFF ; "Check failed: binder != nullptr"
.text:0000000000008D58                 MOV             W2, #0x1F
.text:0000000000008D5C                 BL              sub_B548
.text:0000000000008D60                 ADRP            X1, #asc_50A3@PAGE ; " "
.text:0000000000008D64                 ADD             X1, X1, #asc_50A3@PAGEOFF ; " "
.text:0000000000008D68                 MOV             W2, #1
.text:0000000000008D6C                 BL              sub_B548
.text:0000000000008D70                 MOV             X0, SP  ; this
.text:0000000000008D74                 BL              ._ZN7android4base10LogMessageD1Ev ; android::base::LogMessage::~LogMessage()
.text:0000000000008D78                 B               loc_8D00
.text:0000000000008D7C ; ---------------------------------------------------------------------------
.text:0000000000008D7C loc_8D7C                                ; CODE XREF: sub_8C78+94↑j
.text:0000000000008D7C                 BL              .__stack_chk_fail
.text:0000000000008D7C ; } // starts at 8C78
.text:0000000000008D7C ; End of function sub_8C78
.text:0000000000008D80 ; ---------------------------------------------------------------------------
.text:0000000000008D80 ; __unwind {
.text:0000000000008D80                 STR             X19, [SP,#-0x20]!
.text:0000000000008D84                 STP             X29, X30, [SP,#0x10]
.text:0000000000008D88                 ADD             X29, SP, #0x10
.text:0000000000008D8C                 ADRP            X8, #off_109C0@PAGE
.text:0000000000008D90                 MOV             X19, X0
.text:0000000000008D94                 ADD             X0, X0, #0x10
.text:0000000000008D98                 LDR             X8, [X8,#off_109C0@PAGEOFF]
.text:0000000000008D9C                 ADD             X1, X8, #0x18
.text:0000000000008DA0                 BL              ._ZN7android9BpRefBaseD2Ev ; android::BpRefBase::~BpRefBase()
.text:0000000000008DA4                 LDP             X29, X30, [SP,#0x10]
.text:0000000000008DA8                 ADD             X0, X19, #0x30 ; '0'
.text:0000000000008DAC                 LDR             X19, [SP],#0x20
.text:0000000000008DB0                 B               ._ZN7android7RefBaseD2Ev ; android::RefBase::~RefBase()
.text:0000000000008DB0 ; } // starts at 8D80
.text:0000000000008DB0 ; ---------------------------------------------------------------------------
.text:0000000000008DB4                 ALIGN 8
.text:0000000000008DB8 ; __unwind {
.text:0000000000008DB8                 STR             X19, [SP,#-0x20]!
.text:0000000000008DBC                 STP             X29, X30, [SP,#0x10]
.text:0000000000008DC0                 ADD             X29, SP, #0x10
.text:0000000000008DC4                 ADRP            X8, #off_109C0@PAGE
.text:0000000000008DC8                 MOV             X19, X0
.text:0000000000008DCC                 LDR             X8, [X8,#off_109C0@PAGEOFF]
.text:0000000000008DD0                 ADD             X1, X8, #0x18
.text:0000000000008DD4                 BL              ._ZN7android9BpRefBaseD2Ev ; android::BpRefBase::~BpRefBase()
.text:0000000000008DD8                 LDP             X29, X30, [SP,#0x10]
.text:0000000000008DDC                 ADD             X0, X19, #0x20 ; ' '
.text:0000000000008DE0                 LDR             X19, [SP],#0x20
.text:0000000000008DE4                 B               ._ZN7android7RefBaseD2Ev ; android::RefBase::~RefBase()
.text:0000000000008DE4 ; } // starts at 8DB8
.text:0000000000008DE8 ; ---------------------------------------------------------------------------
.text:0000000000008DE8 ; __unwind {
.text:0000000000008DE8                 STR             X19, [SP,#-0x20]!
.text:0000000000008DEC                 STP             X29, X30, [SP,#0x10]
.text:0000000000008DF0                 ADD             X29, SP, #0x10
.text:0000000000008DF4                 LDR             X8, [X0]
.text:0000000000008DF8                 LDUR            X8, [X8,#-0x18]
.text:0000000000008DFC                 ADD             X19, X0, X8
.text:0000000000008E00                 ADRP            X8, #off_109C0@PAGE
.text:0000000000008E04                 ADD             X0, X19, #0x10
.text:0000000000008E08                 LDR             X8, [X8,#off_109C0@PAGEOFF]
.text:0000000000008E0C                 ADD             X1, X8, #0x18
.text:0000000000008E10                 BL              ._ZN7android9BpRefBaseD2Ev ; android::BpRefBase::~BpRefBase()
.text:0000000000008E14                 LDP             X29, X30, [SP,#0x10]
.text:0000000000008E18                 ADD             X0, X19, #0x30 ; '0'
.text:0000000000008E1C                 LDR             X19, [SP],#0x20
.text:0000000000008E20                 B               ._ZN7android7RefBaseD2Ev ; android::RefBase::~RefBase()
.text:0000000000008E20 ; } // starts at 8DE8
.text:0000000000008E20 ; ---------------------------------------------------------------------------
.text:0000000000008E24                 ALIGN 8
.text:0000000000008E28 ; __unwind {
.text:0000000000008E28                 STR             X19, [SP,#-0x20]!
.text:0000000000008E2C                 STP             X29, X30, [SP,#0x10]
.text:0000000000008E30                 ADD             X29, SP, #0x10
.text:0000000000008E34                 ADRP            X8, #off_109C0@PAGE
.text:0000000000008E38                 MOV             X19, X0
.text:0000000000008E3C                 ADD             X0, X0, #0x10
.text:0000000000008E40                 LDR             X8, [X8,#off_109C0@PAGEOFF]
.text:0000000000008E44                 ADD             X1, X8, #0x18
.text:0000000000008E48                 BL              ._ZN7android9BpRefBaseD2Ev ; android::BpRefBase::~BpRefBase()
.text:0000000000008E4C                 ADD             X0, X19, #0x30 ; '0'
.text:0000000000008E50                 BL              ._ZN7android7RefBaseD2Ev ; android::RefBase::~RefBase()
.text:0000000000008E54                 LDP             X29, X30, [SP,#0x10]
.text:0000000000008E58                 MOV             X0, X19
.text:0000000000008E5C                 LDR             X19, [SP],#0x20
.text:0000000000008E60                 B               ._ZdlPv ; operator delete(void *)
.text:0000000000008E60 ; } // starts at 8E28
.text:0000000000008E60 ; ---------------------------------------------------------------------------
.text:0000000000008E64                 ALIGN 8
.text:0000000000008E68 ; __unwind {
.text:0000000000008E68                 STP             X20, X19, [SP,#-0x20]!
.text:0000000000008E6C                 STP             X29, X30, [SP,#0x10]
.text:0000000000008E70                 ADD             X29, SP, #0x10
.text:0000000000008E74                 ADRP            X8, #off_109C0@PAGE
.text:0000000000008E78                 MOV             X19, X0
.text:0000000000008E7C                 SUB             X20, X0, #0x10
.text:0000000000008E80                 LDR             X8, [X8,#off_109C0@PAGEOFF]
.text:0000000000008E84                 ADD             X1, X8, #0x18
.text:0000000000008E88                 BL              ._ZN7android9BpRefBaseD2Ev ; android::BpRefBase::~BpRefBase()
.text:0000000000008E8C                 ADD             X0, X19, #0x20 ; ' '
.text:0000000000008E90                 BL              ._ZN7android7RefBaseD2Ev ; android::RefBase::~RefBase()
.text:0000000000008E94                 LDP             X29, X30, [SP,#0x10]
.text:0000000000008E98                 MOV             X0, X20
.text:0000000000008E9C                 LDP             X20, X19, [SP],#0x20
.text:0000000000008EA0                 B               ._ZdlPv ; operator delete(void *)
.text:0000000000008EA0 ; } // starts at 8E68
.text:0000000000008EA0 ; ---------------------------------------------------------------------------
.text:0000000000008EA4                 ALIGN 8
.text:0000000000008EA8 ; __unwind {
.text:0000000000008EA8                 STR             X19, [SP,#-0x20]!
.text:0000000000008EAC                 STP             X29, X30, [SP,#0x10]
.text:0000000000008EB0                 ADD             X29, SP, #0x10
.text:0000000000008EB4                 LDR             X8, [X0]
.text:0000000000008EB8                 LDUR            X8, [X8,#-0x18]
.text:0000000000008EBC                 ADD             X19, X0, X8
.text:0000000000008EC0                 ADRP            X8, #off_109C0@PAGE
.text:0000000000008EC4                 ADD             X0, X19, #0x10
.text:0000000000008EC8                 LDR             X8, [X8,#off_109C0@PAGEOFF]
.text:0000000000008ECC                 ADD             X1, X8, #0x18
.text:0000000000008ED0                 BL              ._ZN7android9BpRefBaseD2Ev ; android::BpRefBase::~BpRefBase()
.text:0000000000008ED4                 ADD             X0, X19, #0x30 ; '0'
.text:0000000000008ED8                 BL              ._ZN7android7RefBaseD2Ev ; android::RefBase::~RefBase()
.text:0000000000008EDC                 LDP             X29, X30, [SP,#0x10]
.text:0000000000008EE0                 MOV             X0, X19
.text:0000000000008EE4                 LDR             X19, [SP],#0x20
.text:0000000000008EE8                 B               ._ZdlPv ; operator delete(void *)
.text:0000000000008EE8 ; } // starts at 8EA8
.text:0000000000008EE8 ; ---------------------------------------------------------------------------
.text:0000000000008EEC                 ALIGN 0x10
.text:0000000000008EF0 ; __unwind {
.text:0000000000008EF0                 STR             X21, [SP,#-0x30]!
.text:0000000000008EF4                 STP             X20, X19, [SP,#0x10]
.text:0000000000008EF8                 STP             X29, X30, [SP,#0x20]
.text:0000000000008EFC                 ADD             X29, SP, #0x20 ; ' '
.text:0000000000008F00                 MOV             X20, X0
.text:0000000000008F04                 ADRP            X0, #unk_11008@PAGE
.text:0000000000008F08                 ADD             X0, X0, #unk_11008@PAGEOFF
.text:0000000000008F0C                 MOV             X19, X1
.text:0000000000008F10                 BL              ._ZNSt3__15mutex4lockEv ; std::__1::mutex::lock(void)
.text:0000000000008F14                 LDR             X0, [X20,#0x18]
.text:0000000000008F18                 ADRP            X1, #aAbpbinder@PAGE ; "ABpBinder"
.text:0000000000008F1C                 ADD             X1, X1, #aAbpbinder@PAGEOFF ; "ABpBinder"
.text:0000000000008F20                 ADD             X20, X20, #0x10
.text:0000000000008F24                 LDR             X8, [X0]
.text:0000000000008F28                 LDR             X8, [X8,#0x50]
.text:0000000000008F2C                 BLR             X8
.text:0000000000008F30                 CBZ             X0, loc_8F50
.text:0000000000008F34                 LDR             X8, [X0]
.text:0000000000008F38                 MOV             X21, X0
.text:0000000000008F3C                 CBZ             X8, loc_8F4C
.text:0000000000008F40                 LDR             X0, [X21,#8]
.text:0000000000008F44                 MOV             X1, X21
.text:0000000000008F48                 BL              ._ZN7android7RefBase12weakref_type7decWeakEPKv ; android::RefBase::weakref_type::decWeak(void const*)
.text:0000000000008F4C loc_8F4C                                ; CODE XREF: .text:0000000000008F3C↑j
.text:0000000000008F4C                 STP             XZR, XZR, [X21]
.text:0000000000008F50 loc_8F50                                ; CODE XREF: .text:0000000000008F30↑j
.text:0000000000008F50                 ADRP            X0, #unk_11008@PAGE
.text:0000000000008F54                 ADD             X0, X0, #unk_11008@PAGEOFF
.text:0000000000008F58                 BL              ._ZNSt3__15mutex6unlockEv ; std::__1::mutex::unlock(void)
.text:0000000000008F5C                 MOV             X0, X20
.text:0000000000008F60                 MOV             X1, X19
.text:0000000000008F64                 LDP             X29, X30, [SP,#0x20]
.text:0000000000008F68                 LDP             X20, X19, [SP,#0x10]
.text:0000000000008F6C                 LDR             X21, [SP],#0x30
.text:0000000000008F70                 B               ._ZN7android9BpRefBase15onLastStrongRefEPKv ; android::BpRefBase::onLastStrongRef(void const*)
.text:0000000000008F70 ; } // starts at 8EF0
.text:0000000000008F70 ; ---------------------------------------------------------------------------
.text:0000000000008F74                 ALIGN 8
.text:0000000000008F78 ; =============== S U B R O U T I N E =======================================
.text:0000000000008F78 ; Attributes: bp-based frame
.text:0000000000008F78 sub_8F78                                ; DATA XREF: .data.rel.ro:0000000000010230↓o
.text:0000000000008F78 var_20          = -0x20
.text:0000000000008F78 var_10          = -0x10
.text:0000000000008F78 var_s0          =  0
.text:0000000000008F78 ; __unwind {
.text:0000000000008F78                 STR             X21, [SP,#-0x10+var_20]!
.text:0000000000008F7C                 STP             X20, X19, [SP,#0x20+var_10]
.text:0000000000008F80                 STP             X29, X30, [SP,#0x20+var_s0]
.text:0000000000008F84                 ADD             X29, SP, #0x20
.text:0000000000008F88                 MOV             X20, X0
.text:0000000000008F8C                 ADRP            X0, #unk_11008@PAGE
.text:0000000000008F90                 ADD             X0, X0, #unk_11008@PAGEOFF ; this
.text:0000000000008F94                 MOV             X19, X1
.text:0000000000008F98                 BL              ._ZNSt3__15mutex4lockEv ; std::__1::mutex::lock(void)
.text:0000000000008F9C                 LDR             X0, [X20,#8]
.text:0000000000008FA0                 ADRP            X1, #aAbpbinder@PAGE ; "ABpBinder"
.text:0000000000008FA4                 ADD             X1, X1, #aAbpbinder@PAGEOFF ; "ABpBinder"
.text:0000000000008FA8                 LDR             X8, [X0]
.text:0000000000008FAC                 LDR             X8, [X8,#0x50]
.text:0000000000008FB0                 BLR             X8
.text:0000000000008FB4                 CBZ             X0, loc_8FD4
.text:0000000000008FB8                 LDR             X8, [X0]
.text:0000000000008FBC                 MOV             X21, X0
.text:0000000000008FC0                 CBZ             X8, loc_8FD0
.text:0000000000008FC4                 LDR             X0, [X21,#8] ; this
.text:0000000000008FC8                 MOV             X1, X21 ; void *
.text:0000000000008FCC                 BL              ._ZN7android7RefBase12weakref_type7decWeakEPKv ; android::RefBase::weakref_type::decWeak(void const*)
.text:0000000000008FD0 loc_8FD0                                ; CODE XREF: sub_8F78+48↑j
.text:0000000000008FD0                 STP             XZR, XZR, [X21]
.text:0000000000008FD4 loc_8FD4                                ; CODE XREF: sub_8F78+3C↑j
.text:0000000000008FD4                 ADRP            X0, #unk_11008@PAGE
.text:0000000000008FD8                 ADD             X0, X0, #unk_11008@PAGEOFF ; this
.text:0000000000008FDC                 BL              ._ZNSt3__15mutex6unlockEv ; std::__1::mutex::unlock(void)
.text:0000000000008FE0                 MOV             X0, X20 ; this
.text:0000000000008FE4                 MOV             X1, X19 ; void *
.text:0000000000008FE8                 LDP             X29, X30, [SP,#0x20+var_s0]
.text:0000000000008FEC                 LDP             X20, X19, [SP,#0x20+var_10]
.text:0000000000008FF0                 LDR             X21, [SP+0x20+var_20],#0x30
.text:0000000000008FF4                 B               ._ZN7android9BpRefBase15onLastStrongRefEPKv ; android::BpRefBase::onLastStrongRef(void const*)
.text:0000000000008FF4 ; } // starts at 8F78
.text:0000000000008FF4 ; End of function sub_8F78
.text:0000000000008FF8 ; =============== S U B R O U T I N E =======================================
.text:0000000000008FF8 ; Attributes: bp-based frame
.text:0000000000008FF8 sub_8FF8                                ; DATA XREF: .data.rel.ro:0000000000010290↓o
.text:0000000000008FF8 var_20          = -0x20
.text:0000000000008FF8 var_10          = -0x10
.text:0000000000008FF8 var_s0          =  0
.text:0000000000008FF8 ; __unwind {
.text:0000000000008FF8                 STR             X21, [SP,#-0x10+var_20]!
.text:0000000000008FFC                 STP             X20, X19, [SP,#0x20+var_10]
.text:0000000000009000                 STP             X29, X30, [SP,#0x20+var_s0]
.text:0000000000009004                 ADD             X29, SP, #0x20
.text:0000000000009008                 LDR             X8, [X0]
.text:000000000000900C                 MOV             X19, X1
.text:0000000000009010                 LDUR            X8, [X8,#-0x28]
.text:0000000000009014                 ADD             X20, X0, X8
.text:0000000000009018                 ADRP            X0, #unk_11008@PAGE
.text:000000000000901C                 ADD             X0, X0, #unk_11008@PAGEOFF ; this
.text:0000000000009020                 BL              ._ZNSt3__15mutex4lockEv ; std::__1::mutex::lock(void)
.text:0000000000009024                 LDR             X0, [X20,#0x18]
.text:0000000000009028                 ADRP            X1, #aAbpbinder@PAGE ; "ABpBinder"
.text:000000000000902C                 ADD             X1, X1, #aAbpbinder@PAGEOFF ; "ABpBinder"
.text:0000000000009030                 ADD             X20, X20, #0x10
.text:0000000000009034                 LDR             X8, [X0]
.text:0000000000009038                 LDR             X8, [X8,#0x50]
.text:000000000000903C                 BLR             X8
.text:0000000000009040                 CBZ             X0, loc_9060
.text:0000000000009044                 LDR             X8, [X0]
.text:0000000000009048                 MOV             X21, X0
.text:000000000000904C                 CBZ             X8, loc_905C
.text:0000000000009050                 LDR             X0, [X21,#8] ; this
.text:0000000000009054                 MOV             X1, X21 ; void *
.text:0000000000009058                 BL              ._ZN7android7RefBase12weakref_type7decWeakEPKv ; android::RefBase::weakref_type::decWeak(void const*)
.text:000000000000905C loc_905C                                ; CODE XREF: sub_8FF8+54↑j
.text:000000000000905C                 STP             XZR, XZR, [X21]
.text:0000000000009060 loc_9060                                ; CODE XREF: sub_8FF8+48↑j
.text:0000000000009060                 ADRP            X0, #unk_11008@PAGE
.text:0000000000009064                 ADD             X0, X0, #unk_11008@PAGEOFF ; this
.text:0000000000009068                 BL              ._ZNSt3__15mutex6unlockEv ; std::__1::mutex::unlock(void)
.text:000000000000906C                 MOV             X0, X20 ; this
.text:0000000000009070                 MOV             X1, X19 ; void *
.text:0000000000009074                 LDP             X29, X30, [SP,#0x20+var_s0]
.text:0000000000009078                 LDP             X20, X19, [SP,#0x20+var_10]
.text:000000000000907C                 LDR             X21, [SP+0x20+var_20],#0x30
.text:0000000000009080                 B               ._ZN7android9BpRefBase15onLastStrongRefEPKv ; android::BpRefBase::onLastStrongRef(void const*)
.text:0000000000009080 ; } // starts at 8FF8
.text:0000000000009080 ; End of function sub_8FF8
.text:0000000000009080 ; ---------------------------------------------------------------------------
.text:0000000000009084                 ALIGN 8
.text:0000000000009088 ; =============== S U B R O U T I N E =======================================
.text:0000000000009088 ; Attributes: bp-based frame
.text:0000000000009088 sub_9088                                ; CODE XREF: AIBinder_fromJavaBinder+30↓p
.text:0000000000009088                                         ; AParcel_readStrongBinder+50↓p ...
.text:0000000000009088 var_40          = -0x40
.text:0000000000009088 var_38          = -0x38
.text:0000000000009088 var_30          = -0x30
.text:0000000000009088 var_20          = -0x20
.text:0000000000009088 var_10          = -0x10
.text:0000000000009088 var_s0          =  0
.text:0000000000009088 ; __unwind {
.text:0000000000009088                 SUB             SP, SP, #0x50
.text:000000000000908C                 STR             X23, [SP,#0x40+var_30]
.text:0000000000009090                 STP             X22, X21, [SP,#0x40+var_20]
.text:0000000000009094                 STP             X20, X19, [SP,#0x40+var_10]
.text:0000000000009098                 STP             X29, X30, [SP,#0x40+var_s0]
.text:000000000000909C                 ADD             X29, SP, #0x40
.text:00000000000090A0                 MRS             X23, #3, c13, c0, #2
.text:00000000000090A4                 MOV             X21, X0
.text:00000000000090A8                 LDR             X9, [X23,#0x28]
.text:00000000000090AC                 MOV             X19, X8
.text:00000000000090B0                 STR             X9, [SP,#0x40+var_38]
.text:00000000000090B4                 LDR             X0, [X0]
.text:00000000000090B8                 CBZ             X0, loc_9170
.text:00000000000090BC                 LDR             X8, [X0]
.text:00000000000090C0                 ADRP            X1, #aAbbinder@PAGE ; "ABBinder"
.text:00000000000090C4                 ADD             X1, X1, #aAbbinder@PAGEOFF ; "ABBinder"
.text:00000000000090C8                 LDR             X8, [X8,#0x50]
.text:00000000000090CC                 BLR             X8
.text:00000000000090D0                 ADRP            X8, #qword_11000@PAGE
.text:00000000000090D4                 LDR             X8, [X8,#qword_11000@PAGEOFF]
.text:00000000000090D8                 CMP             X0, X8
.text:00000000000090DC                 B.EQ            loc_9178
.text:00000000000090E0                 ADRP            X0, #unk_11008@PAGE
.text:00000000000090E4                 ADD             X0, X0, #unk_11008@PAGEOFF ; this
.text:00000000000090E8                 BL              ._ZNSt3__15mutex4lockEv ; std::__1::mutex::lock(void)
.text:00000000000090EC                 LDR             X0, [X21]
.text:00000000000090F0                 ADRP            X1, #aAbpbinder@PAGE ; "ABpBinder"
.text:00000000000090F4                 ADD             X1, X1, #aAbpbinder@PAGEOFF ; "ABpBinder"
.text:00000000000090F8                 LDR             X8, [X0]
.text:00000000000090FC                 LDR             X8, [X8,#0x50]
.text:0000000000009100                 BLR             X8
.text:0000000000009104                 MOV             X20, X0
.text:0000000000009108                 CBNZ            X0, loc_9144
.text:000000000000910C                 MOV             W0, #0x10 ; unsigned __int64
.text:0000000000009110                 BL              ._Znwm  ; operator new(ulong)
.text:0000000000009114                 MOV             X20, X0
.text:0000000000009118                 LDR             X0, [X21]
.text:000000000000911C                 ADRP            X4, #off_109D0@PAGE
.text:0000000000009120                 ADRP            X1, #aAbpbinder@PAGE ; "ABpBinder"
.text:0000000000009124                 STP             XZR, XZR, [X20]
.text:0000000000009128                 ADD             X1, X1, #aAbpbinder@PAGEOFF ; "ABpBinder"
.text:000000000000912C                 LDR             X8, [X0]
.text:0000000000009130                 MOV             X2, X20
.text:0000000000009134                 MOV             X3, XZR
.text:0000000000009138                 LDR             X8, [X8,#0x48]
.text:000000000000913C                 LDR             X4, [X4,#off_109D0@PAGEOFF]
.text:0000000000009140                 BLR             X8
.text:0000000000009144 loc_9144                                ; CODE XREF: sub_9088+80↑j
.text:0000000000009144                 STR             XZR, [SP,#0x40+var_40]
.text:0000000000009148                 LDR             X8, [X20]
.text:000000000000914C                 CBZ             X8, loc_91B0
.text:0000000000009150                 LDR             X0, [X20,#8] ; this
.text:0000000000009154                 MOV             X1, SP  ; void *
.text:0000000000009158                 BL              ._ZN7android7RefBase12weakref_type16attemptIncStrongEPKv ; android::RefBase::weakref_type::attemptIncStrong(void const*)
.text:000000000000915C                 TBZ             W0, #0, loc_91A8
.text:0000000000009160                 LDR             X8, [X20]
.text:0000000000009164                 STR             X8, [SP,#0x40+var_40]
.text:0000000000009168                 CBNZ            X8, loc_9240
.text:000000000000916C                 B               loc_91B0
.text:0000000000009170 ; ---------------------------------------------------------------------------
.text:0000000000009170 loc_9170                                ; CODE XREF: sub_9088+30↑j
.text:0000000000009170                 STR             XZR, [X19]
.text:0000000000009174                 B               loc_9250
.text:0000000000009178 ; ---------------------------------------------------------------------------
.text:0000000000009178 loc_9178                                ; CODE XREF: sub_9088+54↑j
.text:0000000000009178                 LDR             X9, [X21]
.text:000000000000917C                 SUB             X8, X9, #0x10
.text:0000000000009180                 CMP             X9, #0
.text:0000000000009184                 CSEL            X8, XZR, X8, EQ
.text:0000000000009188                 STR             X8, [X19]
.text:000000000000918C                 CBZ             X9, loc_9250
.text:0000000000009190                 LDR             X9, [X8]
.text:0000000000009194                 MOV             X1, X19 ; void *
.text:0000000000009198                 LDUR            X9, [X9,#-0x18]
.text:000000000000919C                 ADD             X0, X8, X9 ; this
.text:00000000000091A0                 BL              ._ZNK7android7RefBase9incStrongEPKv ; android::RefBase::incStrong(void const*)
.text:00000000000091A4                 B               loc_9250
.text:00000000000091A8 ; ---------------------------------------------------------------------------
.text:00000000000091A8 loc_91A8                                ; CODE XREF: sub_9088+D4↑j
.text:00000000000091A8                 LDR             X8, [SP,#0x40+var_40]
.text:00000000000091AC                 CBNZ            X8, loc_9240
.text:00000000000091B0 loc_91B0                                ; CODE XREF: sub_9088+C4↑j
.text:00000000000091B0                                         ; sub_9088+E4↑j
.text:00000000000091B0                 MOV             W0, #0x40 ; '@' ; unsigned __int64
.text:00000000000091B4                 BL              ._Znwm  ; operator new(ulong)
.text:00000000000091B8                 MOV             X1, X21
.text:00000000000091BC                 MOV             X22, X0
.text:00000000000091C0                 BL              sub_8C78
.text:00000000000091C4                 LDR             X21, [SP,#0x40+var_40]
.text:00000000000091C8                 MOV             X1, SP  ; void *
.text:00000000000091CC                 LDR             X8, [X22]
.text:00000000000091D0                 LDUR            X8, [X8,#-0x18]
.text:00000000000091D4                 ADD             X0, X22, X8 ; this
.text:00000000000091D8                 BL              ._ZNK7android7RefBase9incStrongEPKv ; android::RefBase::incStrong(void const*)
.text:00000000000091DC                 CBZ             X21, loc_91F4
.text:00000000000091E0                 LDR             X8, [X21]
.text:00000000000091E4                 MOV             X1, SP  ; void *
.text:00000000000091E8                 LDUR            X8, [X8,#-0x18]
.text:00000000000091EC                 ADD             X0, X21, X8 ; this
.text:00000000000091F0                 BL              ._ZNK7android7RefBase9decStrongEPKv ; android::RefBase::decStrong(void const*)
.text:00000000000091F4 loc_91F4                                ; CODE XREF: sub_9088+154↑j
.text:00000000000091F4                 LDR             X8, [SP,#0x40+var_40]
.text:00000000000091F8                 CMP             X21, X8
.text:00000000000091FC                 B.EQ            loc_9204
.text:0000000000009200                 BL              ._ZN7android14sp_report_raceEv ; android::sp_report_race(void)
.text:0000000000009204 loc_9204                                ; CODE XREF: sub_9088+174↑j
.text:0000000000009204                 LDR             X8, [X22]
.text:0000000000009208                 MOV             X1, X20 ; void *
.text:000000000000920C                 STR             X22, [SP,#0x40+var_40]
.text:0000000000009210                 LDUR            X8, [X8,#-0x18]
.text:0000000000009214                 ADD             X0, X22, X8 ; this
.text:0000000000009218                 BL              ._ZNK7android7RefBase10createWeakEPKv ; android::RefBase::createWeak(void const*)
.text:000000000000921C                 LDR             X8, [X20]
.text:0000000000009220                 MOV             X21, X0
.text:0000000000009224                 LDR             X22, [SP,#0x40+var_40]
.text:0000000000009228                 CBZ             X8, loc_9238
.text:000000000000922C                 LDR             X0, [X20,#8] ; this
.text:0000000000009230                 MOV             X1, X20 ; void *
.text:0000000000009234                 BL              ._ZN7android7RefBase12weakref_type7decWeakEPKv ; android::RefBase::weakref_type::decWeak(void const*)
.text:0000000000009238 loc_9238                                ; CODE XREF: sub_9088+1A0↑j
.text:0000000000009238                 STP             X22, X21, [X20]
.text:000000000000923C                 LDR             X8, [SP,#0x40+var_40]
.text:0000000000009240 loc_9240                                ; CODE XREF: sub_9088+E0↑j
.text:0000000000009240                                         ; sub_9088+124↑j
.text:0000000000009240                 ADRP            X0, #unk_11008@PAGE
.text:0000000000009244                 STR             X8, [X19]
.text:0000000000009248                 ADD             X0, X0, #unk_11008@PAGEOFF ; this
.text:000000000000924C                 BL              ._ZNSt3__15mutex6unlockEv ; std::__1::mutex::unlock(void)
.text:0000000000009250 loc_9250                                ; CODE XREF: sub_9088+EC↑j
.text:0000000000009250                                         ; sub_9088+104↑j ...
.text:0000000000009250                 LDR             X8, [X23,#0x28]
.text:0000000000009254                 LDR             X9, [SP,#0x40+var_38]
.text:0000000000009258                 CMP             X8, X9
.text:000000000000925C                 B.NE            loc_9278
.text:0000000000009260                 LDP             X29, X30, [SP,#0x40+var_s0]
.text:0000000000009264                 LDP             X20, X19, [SP,#0x40+var_10]
.text:0000000000009268                 LDP             X22, X21, [SP,#0x40+var_20]
.text:000000000000926C                 LDR             X23, [SP,#0x40+var_30]
.text:0000000000009270                 ADD             SP, SP, #0x50 ; 'P'
.text:0000000000009274                 RET
.text:0000000000009278 ; ---------------------------------------------------------------------------
.text:0000000000009278 loc_9278                                ; CODE XREF: sub_9088+1D4↑j
.text:0000000000009278                 BL              .__stack_chk_fail
.text:0000000000009278 ; } // starts at 9088
.text:0000000000009278 ; End of function sub_9088
.text:0000000000009278 ; ---------------------------------------------------------------------------
.text:000000000000927C                 ALIGN 0x20
.text:0000000000009280 ; =============== S U B R O U T I N E =======================================
.text:0000000000009280 ; Attributes: bp-based frame
.text:0000000000009280                 EXPORT AIBinder_Weak_new
.text:0000000000009280 AIBinder_Weak_new                       ; DATA XREF: LOAD:0000000000001980↑o
.text:0000000000009280 var_10          = -0x10
.text:0000000000009280 var_s0          =  0
.text:0000000000009280 ; __unwind {
.text:0000000000009280                 STP             X20, X19, [SP,#-0x10+var_10]!
.text:0000000000009284                 STP             X29, X30, [SP,#0x10+var_s0]
.text:0000000000009288                 ADD             X29, SP, #0x10
.text:000000000000928C                 CBZ             X0, loc_92C0
.text:0000000000009290                 MOV             X20, X0
.text:0000000000009294                 MOV             W0, #0x10 ; unsigned __int64
.text:0000000000009298                 BL              ._Znwm  ; operator new(ulong)
.text:000000000000929C                 LDR             X8, [X20]
.text:00000000000092A0                 MOV             X19, X0
.text:00000000000092A4                 STR             X20, [X0]
.text:00000000000092A8                 MOV             X1, X19 ; void *
.text:00000000000092AC                 LDUR            X8, [X8,#-0x18]
.text:00000000000092B0                 ADD             X0, X20, X8 ; this
.text:00000000000092B4                 BL              ._ZNK7android7RefBase10createWeakEPKv ; android::RefBase::createWeak(void const*)
.text:00000000000092B8                 STR             X0, [X19,#8]
.text:00000000000092BC                 B               loc_92C4
.text:00000000000092C0 ; ---------------------------------------------------------------------------
.text:00000000000092C0 loc_92C0                                ; CODE XREF: AIBinder_Weak_new+C↑j
.text:00000000000092C0                 MOV             X19, XZR
.text:00000000000092C4 loc_92C4                                ; CODE XREF: AIBinder_Weak_new+3C↑j
.text:00000000000092C4                 LDP             X29, X30, [SP,#0x10+var_s0]
.text:00000000000092C8                 MOV             X0, X19
.text:00000000000092CC                 LDP             X20, X19, [SP+0x10+var_10],#0x20
.text:00000000000092D0                 RET
.text:00000000000092D0 ; } // starts at 9280
.text:00000000000092D0 ; End of function AIBinder_Weak_new
.text:00000000000092D0 ; ---------------------------------------------------------------------------
.text:00000000000092D4                 ALIGN 8
.text:00000000000092D8 ; =============== S U B R O U T I N E =======================================
.text:00000000000092D8 ; Attributes: bp-based frame
.text:00000000000092D8 ; __int64 __fastcall AIBinder_Weak_delete(void *)
.text:00000000000092D8                 EXPORT AIBinder_Weak_delete
.text:00000000000092D8 AIBinder_Weak_delete                    ; DATA XREF: LOAD:00000000000016C8↑o
.text:00000000000092D8 var_10          = -0x10
.text:00000000000092D8 var_s0          =  0
.text:00000000000092D8 ; __unwind {
.text:00000000000092D8                 CBZ             X0, locret_9310
.text:00000000000092DC                 STR             X19, [SP,#-0x10+var_10]!
.text:00000000000092E0                 STP             X29, X30, [SP,#0x10+var_s0]
.text:00000000000092E4                 ADD             X29, SP, #0x10
.text:00000000000092E8                 LDR             X8, [X0]
.text:00000000000092EC                 MOV             X19, X0
.text:00000000000092F0                 CBZ             X8, loc_9300
.text:00000000000092F4                 LDR             X0, [X19,#8] ; this
.text:00000000000092F8                 MOV             X1, X19 ; void *
.text:00000000000092FC                 BL              ._ZN7android7RefBase12weakref_type7decWeakEPKv ; android::RefBase::weakref_type::decWeak(void const*)
.text:0000000000009300 loc_9300                                ; CODE XREF: AIBinder_Weak_delete+18↑j
.text:0000000000009300                 LDP             X29, X30, [SP,#0x10+var_s0]
.text:0000000000009304                 MOV             X0, X19 ; void *
.text:0000000000009308                 LDR             X19, [SP+0x10+var_10],#0x20
.text:000000000000930C                 B               ._ZdlPv ; operator delete(void *)
.text:0000000000009310 ; ---------------------------------------------------------------------------
.text:0000000000009310 locret_9310                             ; CODE XREF: AIBinder_Weak_delete↑j
.text:0000000000009310                 RET
.text:0000000000009310 ; } // starts at 92D8
.text:0000000000009310 ; End of function AIBinder_Weak_delete
.text:0000000000009310 ; ---------------------------------------------------------------------------
.text:0000000000009314                 ALIGN 8
.text:0000000000009318 ; =============== S U B R O U T I N E =======================================
.text:0000000000009318 ; Attributes: bp-based frame
.text:0000000000009318                 EXPORT AIBinder_Weak_promote
.text:0000000000009318 AIBinder_Weak_promote                   ; DATA XREF: LOAD:0000000000001788↑o
.text:0000000000009318 var_20          = -0x20
.text:0000000000009318 var_18          = -0x18
.text:0000000000009318 var_10          = -0x10
.text:0000000000009318 var_s0          =  0
.text:0000000000009318 ; __unwind {
.text:0000000000009318                 SUB             SP, SP, #0x30
.text:000000000000931C                 STP             X20, X19, [SP,#0x20+var_10]
.text:0000000000009320                 STP             X29, X30, [SP,#0x20+var_s0]
.text:0000000000009324                 ADD             X29, SP, #0x20
.text:0000000000009328                 MRS             X20, #3, c13, c0, #2
.text:000000000000932C                 MOV             X19, X0
.text:0000000000009330                 LDR             X8, [X20,#0x28]
.text:0000000000009334                 STR             X8, [SP,#0x20+var_18]
.text:0000000000009338                 CBZ             X0, loc_9390
.text:000000000000933C                 LDR             X8, [X19]
.text:0000000000009340                 STR             XZR, [SP,#0x20+var_20]
.text:0000000000009344                 CBZ             X8, loc_9364
.text:0000000000009348                 LDR             X0, [X19,#8] ; this
.text:000000000000934C                 MOV             X1, SP  ; void *
.text:0000000000009350                 BL              ._ZN7android7RefBase12weakref_type16attemptIncStrongEPKv ; android::RefBase::weakref_type::attemptIncStrong(void const*)
.text:0000000000009354                 TBZ             W0, #0, loc_936C
.text:0000000000009358                 LDR             X0, [X19]
.text:000000000000935C                 STR             X0, [SP,#0x20+var_20]
.text:0000000000009360                 B               loc_9370
.text:0000000000009364 ; ---------------------------------------------------------------------------
.text:0000000000009364 loc_9364                                ; CODE XREF: AIBinder_Weak_promote+2C↑j
.text:0000000000009364                 MOV             X0, XZR
.text:0000000000009368                 B               loc_9370
.text:000000000000936C ; ---------------------------------------------------------------------------
.text:000000000000936C loc_936C                                ; CODE XREF: AIBinder_Weak_promote+3C↑j
.text:000000000000936C                 LDR             X0, [SP,#0x20+var_20]
.text:0000000000009370 loc_9370                                ; CODE XREF: AIBinder_Weak_promote+48↑j
.text:0000000000009370                                         ; AIBinder_Weak_promote+50↑j
.text:0000000000009370                 BL              .AIBinder_incStrong
.text:0000000000009374                 LDR             X19, [SP,#0x20+var_20]
.text:0000000000009378                 CBZ             X19, loc_9390
.text:000000000000937C                 LDR             X8, [X19]
.text:0000000000009380                 MOV             X1, SP  ; void *
.text:0000000000009384                 LDUR            X8, [X8,#-0x18]
.text:0000000000009388                 ADD             X0, X19, X8 ; this
.text:000000000000938C                 BL              ._ZNK7android7RefBase9decStrongEPKv ; android::RefBase::decStrong(void const*)
.text:0000000000009390 loc_9390                                ; CODE XREF: AIBinder_Weak_promote+20↑j
.text:0000000000009390                                         ; AIBinder_Weak_promote+60↑j
.text:0000000000009390                 LDR             X8, [X20,#0x28]
.text:0000000000009394                 LDR             X9, [SP,#0x20+var_18]
.text:0000000000009398                 CMP             X8, X9
.text:000000000000939C                 B.NE            loc_93B4
.text:00000000000093A0                 MOV             X0, X19
.text:00000000000093A4                 LDP             X29, X30, [SP,#0x20+var_s0]
.text:00000000000093A8                 LDP             X20, X19, [SP,#0x20+var_10]
.text:00000000000093AC                 ADD             SP, SP, #0x30 ; '0'
.text:00000000000093B0                 RET
.text:00000000000093B4 ; ---------------------------------------------------------------------------
.text:00000000000093B4 loc_93B4                                ; CODE XREF: AIBinder_Weak_promote+84↑j
.text:00000000000093B4                 BL              .__stack_chk_fail
.text:00000000000093B4 ; } // starts at 9318
.text:00000000000093B4 ; End of function AIBinder_Weak_promote
.text:00000000000093B8 ; =============== S U B R O U T I N E =======================================
.text:00000000000093B8 ; Attributes: bp-based frame
.text:00000000000093B8                 EXPORT AIBinder_incStrong
.text:00000000000093B8 AIBinder_incStrong                      ; CODE XREF: .AIBinder_incStrong+C↓j
.text:00000000000093B8                                         ; DATA XREF: LOAD:0000000000001278↑o ...
.text:00000000000093B8 var_28          = -0x28
.text:00000000000093B8 var_20          = -0x20
.text:00000000000093B8 var_10          = -0x10
.text:00000000000093B8 var_s0          =  0
.text:00000000000093B8 ; __unwind {
.text:00000000000093B8                 SUB             SP, SP, #0x40
.text:00000000000093BC                 STR             X21, [SP,#0x30+var_20]
.text:00000000000093C0                 STP             X20, X19, [SP,#0x30+var_10]
.text:00000000000093C4                 STP             X29, X30, [SP,#0x30+var_s0]
.text:00000000000093C8                 ADD             X29, SP, #0x30
.text:00000000000093CC                 MRS             X20, #3, c13, c0, #2
.text:00000000000093D0                 LDR             X8, [X20,#0x28]
.text:00000000000093D4                 STR             X8, [SP,#0x30+var_28]
.text:00000000000093D8                 CBZ             X0, loc_93F4
.text:00000000000093DC                 LDR             X8, [X0]
.text:00000000000093E0                 MOV             X1, XZR ; void *
.text:00000000000093E4                 LDUR            X8, [X8,#-0x18]
.text:00000000000093E8                 ADD             X0, X0, X8 ; this
.text:00000000000093EC                 BL              ._ZNK7android7RefBase9incStrongEPKv ; android::RefBase::incStrong(void const*)
.text:00000000000093F0                 B               loc_9400
.text:00000000000093F4 ; ---------------------------------------------------------------------------
.text:00000000000093F4 loc_93F4                                ; CODE XREF: AIBinder_incStrong+20↑j
.text:00000000000093F4                 BL              ._ZN7android4base21GetMinimumLogSeverityEv ; android::base::GetMinimumLogSeverity(void)
.text:00000000000093F8                 CMP             W0, #4
.text:00000000000093FC                 B.LE            loc_9424
.text:0000000000009400 loc_9400                                ; CODE XREF: AIBinder_incStrong+38↑j
.text:0000000000009400                                         ; AIBinder_incStrong+D0↓j
.text:0000000000009400                 LDR             X8, [X20,#0x28]
.text:0000000000009404                 LDR             X9, [SP,#0x30+var_28]
.text:0000000000009408                 CMP             X8, X9
.text:000000000000940C                 B.NE            loc_948C
.text:0000000000009410                 LDP             X29, X30, [SP,#0x30+var_s0]
.text:0000000000009414                 LDP             X20, X19, [SP,#0x30+var_10]
.text:0000000000009418                 LDR             X21, [SP,#0x30+var_20]
.text:000000000000941C                 ADD             SP, SP, #0x40 ; '@'
.text:0000000000009420                 RET
.text:0000000000009424 ; ---------------------------------------------------------------------------
.text:0000000000009424 loc_9424                                ; CODE XREF: AIBinder_incStrong+44↑j
.text:0000000000009424                 BL              .__errno
.text:0000000000009428                 ADRP            X1, #aFrameworksNati@PAGE ; "frameworks/native/libs/binder/ndk/ibind"...
.text:000000000000942C                 LDR             W21, [X0]
.text:0000000000009430                 MOV             X19, X0
.text:0000000000009434                 ADD             X1, X1, #aFrameworksNati@PAGEOFF ; "frameworks/native/libs/binder/ndk/ibind"...
.text:0000000000009438                 MOV             W2, #0x1B7
.text:000000000000943C                 MOV             W6, #0xFFFFFFFF
.text:0000000000009440                 MOV             X0, SP
.text:0000000000009444                 MOV             W3, WZR
.text:0000000000009448                 MOV             W4, #4
.text:000000000000944C                 MOV             X5, XZR
.text:0000000000009450                 BL              ._ZN7android4base10LogMessageC1EPKcjNS0_5LogIdENS0_11LogSeverityES3_i ; android::base::LogMessage::LogMessage(char const*,uint,android::base::LogId,android::base::LogSeverity,char const*,int)
.text:0000000000009454                 MOV             X0, SP  ; this
.text:0000000000009458                 BL              ._ZN7android4base10LogMessage6streamEv ; android::base::LogMessage::stream(void)
.text:000000000000945C                 ADRP            X1, #aAibinderIncstr_0@PAGE ; "AIBinder_incStrong"
.text:0000000000009460                 ADD             X1, X1, #aAibinderIncstr_0@PAGEOFF ; "AIBinder_incStrong"
.text:0000000000009464                 MOV             W2, #0x12
.text:0000000000009468                 BL              sub_B548
.text:000000000000946C                 ADRP            X1, #aOnNullBinder@PAGE ; ": on null binder"
.text:0000000000009470                 ADD             X1, X1, #aOnNullBinder@PAGEOFF ; ": on null binder"
.text:0000000000009474                 MOV             W2, #0x10
.text:0000000000009478                 BL              sub_B548
.text:000000000000947C                 MOV             X0, SP  ; this
.text:0000000000009480                 BL              ._ZN7android4base10LogMessageD1Ev ; android::base::LogMessage::~LogMessage()
.text:0000000000009484                 STR             W21, [X19]
.text:0000000000009488                 B               loc_9400
.text:000000000000948C ; ---------------------------------------------------------------------------
.text:000000000000948C loc_948C                                ; CODE XREF: AIBinder_incStrong+54↑j
.text:000000000000948C                 BL              .__stack_chk_fail
.text:000000000000948C ; } // starts at 93B8
.text:000000000000948C ; End of function AIBinder_incStrong
.text:0000000000009490 ; =============== S U B R O U T I N E =======================================
.text:0000000000009490 ; Attributes: bp-based frame
.text:0000000000009490                 EXPORT AIBinder_Class_define
.text:0000000000009490 AIBinder_Class_define                   ; DATA XREF: LOAD:0000000000001410↑o
.text:0000000000009490 var_30          = -0x30
.text:0000000000009490 var_20          = -0x20
.text:0000000000009490 var_10          = -0x10
.text:0000000000009490 var_s0          =  0
.text:0000000000009490 ; __unwind {
.text:0000000000009490                 STR             X23, [SP,#-0x10+var_30]!
.text:0000000000009494                 STP             X22, X21, [SP,#0x30+var_20]
.text:0000000000009498                 STP             X20, X19, [SP,#0x30+var_10]
.text:000000000000949C                 STP             X29, X30, [SP,#0x30+var_s0]
.text:00000000000094A0                 ADD             X29, SP, #0x30
.text:00000000000094A4                 MOV             X19, XZR
.text:00000000000094A8                 CBZ             X0, loc_94E8
.text:00000000000094AC                 MOV             X23, X1
.text:00000000000094B0                 CBZ             X1, loc_94E8
.text:00000000000094B4                 MOV             X22, X2
.text:00000000000094B8                 CBZ             X2, loc_94E8
.text:00000000000094BC                 MOV             X21, X3
.text:00000000000094C0                 CBZ             X3, loc_94E8
.text:00000000000094C4                 MOV             X20, X0
.text:00000000000094C8                 MOV             W0, #0x28 ; '(' ; unsigned __int64
.text:00000000000094CC                 BL              ._Znwm  ; operator new(ulong)
.text:00000000000094D0                 MOV             X19, X0
.text:00000000000094D4                 ADD             X0, X0, #0x20 ; ' ' ; this
.text:00000000000094D8                 MOV             X1, X20 ; char *
.text:00000000000094DC                 STP             X23, X22, [X19]
.text:00000000000094E0                 STR             X21, [X19,#0x10]
.text:00000000000094E4                 BL              ._ZN7android8String16C1EPKc ; android::String16::String16(char const*)
.text:00000000000094E8 loc_94E8                                ; CODE XREF: AIBinder_Class_define+18↑j
.text:00000000000094E8                                         ; AIBinder_Class_define+20↑j ...
.text:00000000000094E8                 MOV             X0, X19
.text:00000000000094EC                 LDP             X29, X30, [SP,#0x30+var_s0]
.text:00000000000094F0                 LDP             X20, X19, [SP,#0x30+var_10]
.text:00000000000094F4                 LDP             X22, X21, [SP,#0x30+var_20]
.text:00000000000094F8                 LDR             X23, [SP+0x30+var_30],#0x40
.text:00000000000094FC                 RET
.text:00000000000094FC ; } // starts at 9490
.text:00000000000094FC ; End of function AIBinder_Class_define
.text:0000000000009500 ; =============== S U B R O U T I N E =======================================
.text:0000000000009500 ; Attributes: bp-based frame
.text:0000000000009500                 EXPORT AIBinder_Class_setOnDump
.text:0000000000009500 AIBinder_Class_setOnDump                ; DATA XREF: LOAD:00000000000015C0↑o
.text:0000000000009500 var_28          = -0x28
.text:0000000000009500 var_20          = -0x20
.text:0000000000009500 var_10          = -0x10
.text:0000000000009500 var_s0          =  0
.text:0000000000009500 ; __unwind {
.text:0000000000009500                 SUB             SP, SP, #0x40
.text:0000000000009504                 STR             X21, [SP,#0x30+var_20]
.text:0000000000009508                 STP             X20, X19, [SP,#0x30+var_10]
.text:000000000000950C                 STP             X29, X30, [SP,#0x30+var_s0]
.text:0000000000009510                 ADD             X29, SP, #0x30
.text:0000000000009514                 MRS             X21, #3, c13, c0, #2
.text:0000000000009518                 MOV             X19, X0
.text:000000000000951C                 LDR             X8, [X21,#0x28]
.text:0000000000009520                 MOV             X20, X1
.text:0000000000009524                 STR             X8, [SP,#0x30+var_28]
.text:0000000000009528                 CBZ             X0, loc_9554
.text:000000000000952C loc_952C                                ; CODE XREF: AIBinder_Class_setOnDump+B8↓j
.text:000000000000952C                 STR             X20, [X19,#0x18]
.text:0000000000009530                 LDR             X8, [X21,#0x28]
.text:0000000000009534                 LDR             X9, [SP,#0x30+var_28]
.text:0000000000009538                 CMP             X8, X9
.text:000000000000953C                 B.NE            loc_95BC
.text:0000000000009540                 LDP             X29, X30, [SP,#0x30+var_s0]
.text:0000000000009544                 LDP             X20, X19, [SP,#0x30+var_10]
.text:0000000000009548                 LDR             X21, [SP,#0x30+var_20]
.text:000000000000954C                 ADD             SP, SP, #0x40 ; '@'
.text:0000000000009550                 RET
.text:0000000000009554 ; ---------------------------------------------------------------------------
.text:0000000000009554 loc_9554                                ; CODE XREF: AIBinder_Class_setOnDump+28↑j
.text:0000000000009554                 ADRP            X1, #aFrameworksNati@PAGE ; "frameworks/native/libs/binder/ndk/ibind"...
.text:0000000000009558                 ADD             X1, X1, #aFrameworksNati@PAGEOFF ; "frameworks/native/libs/binder/ndk/ibind"...
.text:000000000000955C                 MOV             W2, #0x106
.text:0000000000009560                 MOV             W6, #0xFFFFFFFF
.text:0000000000009564                 MOV             X0, SP
.text:0000000000009568                 MOV             W3, WZR
.text:000000000000956C                 MOV             W4, #6
.text:0000000000009570                 MOV             X5, XZR
.text:0000000000009574                 BL              ._ZN7android4base10LogMessageC1EPKcjNS0_5LogIdENS0_11LogSeverityES3_i ; android::base::LogMessage::LogMessage(char const*,uint,android::base::LogId,android::base::LogSeverity,char const*,int)
.text:0000000000009578                 MOV             X0, SP  ; this
.text:000000000000957C                 BL              ._ZN7android4base10LogMessage6streamEv ; android::base::LogMessage::stream(void)
.text:0000000000009580                 ADRP            X1, #aCheckFailedCla@PAGE ; "Check failed: clazz != nullptr"
.text:0000000000009584                 ADD             X1, X1, #aCheckFailedCla@PAGEOFF ; "Check failed: clazz != nullptr"
.text:0000000000009588                 MOV             W2, #0x1E
.text:000000000000958C                 BL              sub_B548
.text:0000000000009590                 ADRP            X1, #asc_50A3@PAGE ; " "
.text:0000000000009594                 ADD             X1, X1, #asc_50A3@PAGEOFF ; " "
.text:0000000000009598                 MOV             W2, #1
.text:000000000000959C                 BL              sub_B548
.text:00000000000095A0                 ADRP            X1, #aSetondumpRequi@PAGE ; "setOnDump requires non-null clazz"
.text:00000000000095A4                 ADD             X1, X1, #aSetondumpRequi@PAGEOFF ; "setOnDump requires non-null clazz"
.text:00000000000095A8                 MOV             W2, #0x21 ; '!'
.text:00000000000095AC                 BL              sub_B548
.text:00000000000095B0                 MOV             X0, SP  ; this
.text:00000000000095B4                 BL              ._ZN7android4base10LogMessageD1Ev ; android::base::LogMessage::~LogMessage()
.text:00000000000095B8                 B               loc_952C
.text:00000000000095BC ; ---------------------------------------------------------------------------
.text:00000000000095BC loc_95BC                                ; CODE XREF: AIBinder_Class_setOnDump+3C↑j
.text:00000000000095BC                 BL              .__stack_chk_fail
.text:00000000000095BC ; } // starts at 9500
.text:00000000000095BC ; End of function AIBinder_Class_setOnDump
.text:00000000000095C0 ; ---------------------------------------------------------------------------
.text:00000000000095C0 ; __unwind {
.text:00000000000095C0                 SUB             SP, SP, #0x70 ; 'p'
.text:00000000000095C4                 STR             X23, [SP,#0x30]
.text:00000000000095C8                 STP             X22, X21, [SP,#0x40]
.text:00000000000095CC                 STP             X20, X19, [SP,#0x50]
.text:00000000000095D0                 STP             X29, X30, [SP,#0x60]
.text:00000000000095D4                 ADD             X29, SP, #0x60 ; '`'
.text:00000000000095D8                 MRS             X22, #3, c13, c0, #2
.text:00000000000095DC                 MOV             X20, X1
.text:00000000000095E0                 LDR             X8, [X22,#0x28]
.text:00000000000095E4                 MOV             X19, X0
.text:00000000000095E8                 STR             X8, [SP,#0x28]
.text:00000000000095EC                 LDR             X8, [X1,#8]
.text:00000000000095F0                 LDR             X9, [X0,#0x10]
.text:00000000000095F4                 CMP             X8, X9
.text:00000000000095F8                 B.NE            loc_972C
.text:00000000000095FC loc_95FC                                ; CODE XREF: .text:0000000000009780↓j
.text:00000000000095FC                 LDR             X8, [X19,#0x30]
.text:0000000000009600                 LDR             X0, [X19,#0x18]
.text:0000000000009604                 BLR             X8
.text:0000000000009608                 LDR             X8, [X19,#0x20]
.text:000000000000960C                 STR             XZR, [SP,#0x20]
.text:0000000000009610                 CBZ             X8, loc_962C
.text:0000000000009614                 LDR             X0, [X19,#0x28]
.text:0000000000009618                 ADD             X1, SP, #0x20 ; ' '
.text:000000000000961C                 BL              ._ZN7android7RefBase12weakref_type16attemptIncStrongEPKv ; android::RefBase::weakref_type::attemptIncStrong(void const*)
.text:0000000000009620                 TBZ             W0, #0, loc_962C
.text:0000000000009624                 LDR             X8, [X19,#0x20]
.text:0000000000009628                 STR             X8, [SP,#0x20]
.text:000000000000962C loc_962C                                ; CODE XREF: .text:0000000000009610↑j
.text:000000000000962C                                         ; .text:0000000000009620↑j
.text:000000000000962C                 LDR             X8, [X20]
.text:0000000000009630                 STR             XZR, [SP,#0x18]
.text:0000000000009634                 CBZ             X8, loc_9650
.text:0000000000009638                 LDR             X0, [X20,#8]
.text:000000000000963C                 ADD             X1, SP, #0x18
.text:0000000000009640                 BL              ._ZN7android7RefBase12weakref_type16attemptIncStrongEPKv ; android::RefBase::weakref_type::attemptIncStrong(void const*)
.text:0000000000009644                 TBZ             W0, #0, loc_9650
.text:0000000000009648                 LDR             X8, [X20]
.text:000000000000964C                 STR             X8, [SP,#0x18]
.text:0000000000009650 loc_9650                                ; CODE XREF: .text:0000000000009634↑j
.text:0000000000009650                                         ; .text:0000000000009644↑j
.text:0000000000009650                 LDR             X21, [SP,#0x20]
.text:0000000000009654                 ADD             X20, X19, #8
.text:0000000000009658                 CBZ             X21, loc_96C0
.text:000000000000965C                 LDR             X8, [SP,#0x18]
.text:0000000000009660                 CBZ             X8, loc_96C0
.text:0000000000009664                 STR             X8, [SP,#0x10]
.text:0000000000009668                 ADD             X1, SP, #0x10
.text:000000000000966C                 LDR             X9, [X8]
.text:0000000000009670                 LDUR            X9, [X9,#-0x18]
.text:0000000000009674                 ADD             X0, X8, X9
.text:0000000000009678                 BL              ._ZNK7android7RefBase9incStrongEPKv ; android::RefBase::incStrong(void const*)
.text:000000000000967C                 LDR             X2, [X19,#0x18]
.text:0000000000009680                 ADD             X1, SP, #0x10
.text:0000000000009684                 MOV             X0, X21
.text:0000000000009688                 BL              sub_97F8
.text:000000000000968C                 LDR             X8, [SP,#0x10]
.text:0000000000009690                 MOV             W21, W0
.text:0000000000009694                 CBZ             X8, loc_96AC
.text:0000000000009698                 LDR             X9, [X8]
.text:000000000000969C                 ADD             X1, SP, #0x10
.text:00000000000096A0                 LDUR            X9, [X9,#-0x18]
.text:00000000000096A4                 ADD             X0, X8, X9
.text:00000000000096A8                 BL              ._ZNK7android7RefBase9decStrongEPKv ; android::RefBase::decStrong(void const*)
.text:00000000000096AC loc_96AC                                ; CODE XREF: .text:0000000000009694↑j
.text:00000000000096AC                 CMN             W21, #0x20 ; ' '
.text:00000000000096B0                 B.EQ            loc_96C0
.text:00000000000096B4                 BL              ._ZN7android4base21GetMinimumLogSeverityEv ; android::base::GetMinimumLogSeverity(void)
.text:00000000000096B8                 CMP             W0, #3
.text:00000000000096BC                 B.LE            loc_9784
.text:00000000000096C0 loc_96C0                                ; CODE XREF: .text:0000000000009658↑j
.text:00000000000096C0                                         ; .text:0000000000009660↑j ...
.text:00000000000096C0                 LDR             X8, [X20]
.text:00000000000096C4                 CBZ             X8, loc_96D4
.text:00000000000096C8 loc_96C8                                ; CODE XREF: .text:00000000000097EC↓j
.text:00000000000096C8                 LDR             X0, [X19,#0x10]
.text:00000000000096CC                 MOV             X1, X20
.text:00000000000096D0                 BL              ._ZN7android7RefBase12weakref_type7decWeakEPKv ; android::RefBase::weakref_type::decWeak(void const*)
.text:00000000000096D4 loc_96D4                                ; CODE XREF: .text:00000000000096C4↑j
.text:00000000000096D4                                         ; .text:00000000000097F0↓j
.text:00000000000096D4                 LDR             X8, [SP,#0x18]
.text:00000000000096D8                 STP             XZR, XZR, [X20]
.text:00000000000096DC                 CBZ             X8, loc_96F4
.text:00000000000096E0                 LDR             X9, [X8]
.text:00000000000096E4                 ADD             X1, SP, #0x18
.text:00000000000096E8                 LDUR            X9, [X9,#-0x18]
.text:00000000000096EC                 ADD             X0, X8, X9
.text:00000000000096F0                 BL              ._ZNK7android7RefBase9decStrongEPKv ; android::RefBase::decStrong(void const*)
.text:00000000000096F4 loc_96F4                                ; CODE XREF: .text:00000000000096DC↑j
.text:00000000000096F4                 LDR             X0, [SP,#0x20]
.text:00000000000096F8                 CBZ             X0, loc_9704
.text:00000000000096FC                 ADD             X1, SP, #0x20 ; ' '
.text:0000000000009700                 BL              ._ZNK7android7RefBase9decStrongEPKv ; android::RefBase::decStrong(void const*)
.text:0000000000009704 loc_9704                                ; CODE XREF: .text:00000000000096F8↑j
.text:0000000000009704                 LDR             X8, [X22,#0x28]
.text:0000000000009708                 LDR             X9, [SP,#0x28]
.text:000000000000970C                 CMP             X8, X9
.text:0000000000009710                 B.NE            loc_97F4
.text:0000000000009714                 LDP             X29, X30, [SP,#0x60]
.text:0000000000009718                 LDP             X20, X19, [SP,#0x50]
.text:000000000000971C                 LDP             X22, X21, [SP,#0x40]
.text:0000000000009720                 LDR             X23, [SP,#0x30]
.text:0000000000009724                 ADD             SP, SP, #0x70 ; 'p'
.text:0000000000009728                 RET
.text:000000000000972C ; ---------------------------------------------------------------------------
.text:000000000000972C loc_972C                                ; CODE XREF: .text:00000000000095F8↑j
.text:000000000000972C                 ADRP            X1, #aFrameworksNati@PAGE ; "frameworks/native/libs/binder/ndk/ibind"...
.text:0000000000009730                 ADD             X1, X1, #aFrameworksNati@PAGEOFF ; "frameworks/native/libs/binder/ndk/ibind"...
.text:0000000000009734                 MOV             W2, #0x10D
.text:0000000000009738                 MOV             W6, #0xFFFFFFFF
.text:000000000000973C                 ADD             X0, SP, #0x20 ; ' '
.text:0000000000009740                 MOV             W3, WZR
.text:0000000000009744                 MOV             W4, #6
.text:0000000000009748                 MOV             X5, XZR
.text:000000000000974C                 BL              ._ZN7android4base10LogMessageC1EPKcjNS0_5LogIdENS0_11LogSeverityES3_i ; android::base::LogMessage::LogMessage(char const*,uint,android::base::LogId,android::base::LogSeverity,char const*,int)
.text:0000000000009750                 ADD             X0, SP, #0x20 ; ' '
.text:0000000000009754                 BL              ._ZN7android4base10LogMessage6streamEv ; android::base::LogMessage::stream(void)
.text:0000000000009758                 ADRP            X1, #aCheckFailedWho@PAGE ; "Check failed: who == mWho"
.text:000000000000975C                 ADD             X1, X1, #aCheckFailedWho@PAGEOFF ; "Check failed: who == mWho"
.text:0000000000009760                 MOV             W2, #0x19
.text:0000000000009764                 BL              sub_B548
.text:0000000000009768                 ADRP            X1, #asc_50A3@PAGE ; " "
.text:000000000000976C                 ADD             X1, X1, #asc_50A3@PAGEOFF ; " "
.text:0000000000009770                 MOV             W2, #1
.text:0000000000009774                 BL              sub_B548
.text:0000000000009778                 ADD             X0, SP, #0x20 ; ' '
.text:000000000000977C                 BL              ._ZN7android4base10LogMessageD1Ev ; android::base::LogMessage::~LogMessage()
.text:0000000000009780                 B               loc_95FC
.text:0000000000009784 ; ---------------------------------------------------------------------------
.text:0000000000009784 loc_9784                                ; CODE XREF: .text:00000000000096BC↑j
.text:0000000000009784                 BL              .__errno
.text:0000000000009788                 ADRP            X1, #aFrameworksNati@PAGE ; "frameworks/native/libs/binder/ndk/ibind"...
.text:000000000000978C                 STR             X22, [SP]
.text:0000000000009790                 MOV             X22, X0
.text:0000000000009794                 LDR             W23, [X0]
.text:0000000000009798                 ADD             X1, X1, #aFrameworksNati@PAGEOFF ; "frameworks/native/libs/binder/ndk/ibind"...
.text:000000000000979C                 MOV             W2, #0x118
.text:00000000000097A0                 MOV             W6, #0xFFFFFFFF
.text:00000000000097A4                 ADD             X0, SP, #8
.text:00000000000097A8                 MOV             W3, WZR
.text:00000000000097AC                 MOV             W4, #3
.text:00000000000097B0                 MOV             X5, XZR
.text:00000000000097B4                 BL              ._ZN7android4base10LogMessageC1EPKcjNS0_5LogIdENS0_11LogSeverityES3_i ; android::base::LogMessage::LogMessage(char const*,uint,android::base::LogId,android::base::LogSeverity,char const*,int)
.text:00000000000097B8                 ADD             X0, SP, #8
.text:00000000000097BC                 BL              ._ZN7android4base10LogMessage6streamEv ; android::base::LogMessage::stream(void)
.text:00000000000097C0                 ADRP            X1, #aUnlinkingToDea@PAGE ; "Unlinking to dead binder resulted in: "
.text:00000000000097C4                 ADD             X1, X1, #aUnlinkingToDea@PAGEOFF ; "Unlinking to dead binder resulted in: "
.text:00000000000097C8                 MOV             W2, #0x26 ; '&'
.text:00000000000097CC                 BL              sub_B548
.text:00000000000097D0                 MOV             W1, W21
.text:00000000000097D4                 BL              ._ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEi ; std::__1::basic_ostream<char,std::__1::char_traits<char>>::operator<<(int)
.text:00000000000097D8                 ADD             X0, SP, #8
.text:00000000000097DC                 BL              ._ZN7android4base10LogMessageD1Ev ; android::base::LogMessage::~LogMessage()
.text:00000000000097E0                 STR             W23, [X22]
.text:00000000000097E4                 LDR             X22, [SP]
.text:00000000000097E8                 LDR             X8, [X20]
.text:00000000000097EC                 CBNZ            X8, loc_96C8
.text:00000000000097F0                 B               loc_96D4
.text:00000000000097F4 ; ---------------------------------------------------------------------------
.text:00000000000097F4 loc_97F4                                ; CODE XREF: .text:0000000000009710↑j
.text:00000000000097F4                 BL              .__stack_chk_fail
.text:00000000000097F4 ; } // starts at 95C0
.text:00000000000097F8 ; =============== S U B R O U T I N E =======================================
.text:00000000000097F8 ; Attributes: bp-based frame
.text:00000000000097F8 sub_97F8                                ; CODE XREF: .text:0000000000009688↑p
.text:00000000000097F8                                         ; AIBinder_unlinkToDeath+4C↓p
.text:00000000000097F8 var_70          = -0x70
.text:00000000000097F8 var_68          = -0x68
.text:00000000000097F8 var_60          = -0x60
.text:00000000000097F8 var_58          = -0x58
.text:00000000000097F8 var_50          = -0x50
.text:00000000000097F8 var_40          = -0x40
.text:00000000000097F8 var_30          = -0x30
.text:00000000000097F8 var_20          = -0x20
.text:00000000000097F8 var_10          = -0x10
.text:00000000000097F8 var_s0          =  0
.text:00000000000097F8 ; __unwind {
.text:00000000000097F8                 SUB             SP, SP, #0x80
.text:00000000000097FC                 STP             X28, X27, [SP,#0x70+var_50]
.text:0000000000009800                 STP             X26, X25, [SP,#0x70+var_40]
.text:0000000000009804                 STP             X24, X23, [SP,#0x70+var_30]
.text:0000000000009808                 STP             X22, X21, [SP,#0x70+var_20]
.text:000000000000980C                 STP             X20, X19, [SP,#0x70+var_10]
.text:0000000000009810                 STP             X29, X30, [SP,#0x70+var_s0]
.text:0000000000009814                 ADD             X29, SP, #0x70
.text:0000000000009818                 MRS             X25, #3, c13, c0, #2
.text:000000000000981C                 MOV             X19, X2
.text:0000000000009820                 LDR             X8, [X25,#0x28]
.text:0000000000009824                 MOV             X20, X1
.text:0000000000009828                 MOV             X21, X0
.text:000000000000982C                 STR             X8, [SP,#0x70+var_58]
.text:0000000000009830                 LDR             X8, [X1]
.text:0000000000009834                 CBZ             X8, loc_9AC0
.text:0000000000009838 loc_9838                                ; CODE XREF: sub_97F8+31C↓j
.text:0000000000009838                 ADD             X22, X21, #0x10
.text:000000000000983C                 MOV             X0, X22 ; this
.text:0000000000009840                 BL              ._ZNSt3__15mutex4lockEv ; std::__1::mutex::lock(void)
.text:0000000000009844                 LDR             X27, [X21,#0x40]
.text:0000000000009848                 ADRP            X23, #aRemovedReferen@PAGE ; ": removed reference to death recipient "...
.text:000000000000984C                 ADD             X23, X23, #aRemovedReferen@PAGEOFF ; ": removed reference to death recipient "...
.text:0000000000009850 loc_9850                                ; CODE XREF: sub_97F8:loc_98A4↓j
.text:0000000000009850                 LDR             X8, [X21,#0x38]
.text:0000000000009854                 CMP             X27, X8
.text:0000000000009858                 B.EQ            loc_9A80
.text:000000000000985C                 LDR             X8, [X27,#-8]!
.text:0000000000009860                 STR             X8, [SP,#0x70+var_60]
.text:0000000000009864                 ADD             X1, SP, #0x70+var_60 ; void *
.text:0000000000009868                 LDR             X9, [X8]
.text:000000000000986C                 LDUR            X9, [X9,#-0x18]
.text:0000000000009870                 ADD             X0, X8, X9 ; this
.text:0000000000009874                 BL              ._ZNK7android7RefBase9incStrongEPKv ; android::RefBase::incStrong(void const*)
.text:0000000000009878                 LDR             X8, [SP,#0x70+var_60]
.text:000000000000987C                 LDR             X9, [X8,#0x18]
.text:0000000000009880                 CMP             X9, X19
.text:0000000000009884                 B.EQ            loc_98AC
.text:0000000000009888                 MOV             W26, WZR
.text:000000000000988C                 CBZ             X8, loc_98A4
.text:0000000000009890 loc_9890                                ; CODE XREF: sub_97F8+E0↓j
.text:0000000000009890                                         ; sub_97F8+21C↓j
.text:0000000000009890                 LDR             X9, [X8]
.text:0000000000009894                 ADD             X1, SP, #0x70+var_60 ; void *
.text:0000000000009898                 LDUR            X9, [X9,#-0x18]
.text:000000000000989C                 ADD             X0, X8, X9 ; this
.text:00000000000098A0                 BL              ._ZNK7android7RefBase9decStrongEPKv ; android::RefBase::decStrong(void const*)
.text:00000000000098A4 loc_98A4                                ; CODE XREF: sub_97F8+94↑j
.text:00000000000098A4                                         ; sub_97F8+E4↓j ...
.text:00000000000098A4                 CBZ             W26, loc_9850
.text:00000000000098A8                 B               loc_9A84
.text:00000000000098AC ; ---------------------------------------------------------------------------
.text:00000000000098AC loc_98AC                                ; CODE XREF: sub_97F8+8C↑j
.text:00000000000098AC                 LDR             X9, [X20]
.text:00000000000098B0                 CBZ             X9, loc_98E0
.text:00000000000098B4                 LDR             X10, [X9]
.text:00000000000098B8                 LDR             X26, [X8,#0x10]
.text:00000000000098BC                 LDUR            X10, [X10,#-0x18]
.text:00000000000098C0                 ADD             X0, X9, X10 ; this
.text:00000000000098C4                 BL              ._ZNK7android7RefBase11getWeakRefsEv ; android::RefBase::getWeakRefs(void)
.text:00000000000098C8                 CMP             X26, X0
.text:00000000000098CC                 B.EQ            loc_98E8
.text:00000000000098D0 loc_98D0                                ; CODE XREF: sub_97F8+EC↓j
.text:00000000000098D0                 MOV             W26, WZR
.text:00000000000098D4                 LDR             X8, [SP,#0x70+var_60]
.text:00000000000098D8                 CBNZ            X8, loc_9890
.text:00000000000098DC                 B               loc_98A4
.text:00000000000098E0 ; ---------------------------------------------------------------------------
.text:00000000000098E0 loc_98E0                                ; CODE XREF: sub_97F8+B8↑j
.text:00000000000098E0                 LDR             X8, [X8,#8]
.text:00000000000098E4                 CBNZ            X8, loc_98D0
.text:00000000000098E8 loc_98E8                                ; CODE XREF: sub_97F8+D4↑j
.text:00000000000098E8                 LDR             X28, [X21,#0x40]
.text:00000000000098EC                 ADD             X8, X27, #8
.text:00000000000098F0                 CMP             X8, X28
.text:00000000000098F4                 B.EQ            loc_9954
.text:00000000000098F8                 MOV             X24, X27
.text:00000000000098FC loc_98FC                                ; CODE XREF: sub_97F8+148↓j
.text:00000000000098FC                 LDR             X26, [X24]
.text:0000000000009900                 CBZ             X26, loc_9918
.text:0000000000009904                 LDR             X8, [X26]
.text:0000000000009908                 MOV             X1, X24 ; void *
.text:000000000000990C                 LDUR            X8, [X8,#-0x18]
.text:0000000000009910                 ADD             X0, X26, X8 ; this
.text:0000000000009914                 BL              ._ZNK7android7RefBase9decStrongEPKv ; android::RefBase::decStrong(void const*)
.text:0000000000009918 loc_9918                                ; CODE XREF: sub_97F8+108↑j
.text:0000000000009918                 LDR             X8, [X24]
.text:000000000000991C                 CMP             X26, X8
.text:0000000000009920                 B.EQ            loc_9928
.text:0000000000009924                 BL              ._ZN7android14sp_report_raceEv ; android::sp_report_race(void)
.text:0000000000009928 loc_9928                                ; CODE XREF: sub_97F8+128↑j
.text:0000000000009928                 MOV             X26, X24
.text:000000000000992C                 LDR             X8, [X26,#8]!
.text:0000000000009930                 STR             X8, [X24],#0x10
.text:0000000000009934                 CMP             X24, X28
.text:0000000000009938                 MOV             X24, X26
.text:000000000000993C                 STR             XZR, [X26]
.text:0000000000009940                 B.NE            loc_98FC
.text:0000000000009944                 LDR             X8, [X21,#0x40]
.text:0000000000009948                 CMP             X8, X26
.text:000000000000994C                 B.NE            loc_9958
.text:0000000000009950                 B               loc_9984
.text:0000000000009954 ; ---------------------------------------------------------------------------
.text:0000000000009954 loc_9954                                ; CODE XREF: sub_97F8+FC↑j
.text:0000000000009954                 MOV             X26, X27
.text:0000000000009958 loc_9958                                ; CODE XREF: sub_97F8+154↑j
.text:0000000000009958                 MOV             X24, X8
.text:000000000000995C loc_995C                                ; CODE XREF: sub_97F8+188↓j
.text:000000000000995C                 LDR             X9, [X24,#-8]!
.text:0000000000009960                 CBZ             X9, loc_9978
.text:0000000000009964                 LDR             X10, [X9]
.text:0000000000009968                 SUB             X1, X8, #8 ; void *
.text:000000000000996C                 LDUR            X10, [X10,#-0x18]
.text:0000000000009970                 ADD             X0, X9, X10 ; this
.text:0000000000009974                 BL              ._ZNK7android7RefBase9decStrongEPKv ; android::RefBase::decStrong(void const*)
.text:0000000000009978 loc_9978                                ; CODE XREF: sub_97F8+168↑j
.text:0000000000009978                 MOV             X8, X24
.text:000000000000997C                 CMP             X26, X24
.text:0000000000009980                 B.NE            loc_995C
.text:0000000000009984 loc_9984                                ; CODE XREF: sub_97F8+158↑j
.text:0000000000009984                 STR             X26, [X21,#0x40]
.text:0000000000009988                 LDR             X8, [SP,#0x70+var_60]
.text:000000000000998C                 LDR             X24, [X20]
.text:0000000000009990                 STR             X8, [SP,#0x70+var_70]
.text:0000000000009994                 CBZ             X8, loc_99B0
.text:0000000000009998                 LDR             X9, [X8]
.text:000000000000999C                 MOV             X1, SP  ; void *
.text:00000000000099A0                 LDUR            X9, [X9,#-0x18]
.text:00000000000099A4                 ADD             X0, X8, X9 ; this
.text:00000000000099A8                 BL              ._ZNK7android7RefBase10createWeakEPKv ; android::RefBase::createWeak(void const*)
.text:00000000000099AC                 B               loc_99B4
.text:00000000000099B0 ; ---------------------------------------------------------------------------
.text:00000000000099B0 loc_99B0                                ; CODE XREF: sub_97F8+19C↑j
.text:00000000000099B0                 MOV             X0, XZR
.text:00000000000099B4 loc_99B4                                ; CODE XREF: sub_97F8+1B4↑j
.text:00000000000099B4                 STR             X0, [SP,#0x70+var_68]
.text:00000000000099B8                 MOV             X1, SP
.text:00000000000099BC                 LDR             X8, [X24]
.text:00000000000099C0                 MOV             X0, X24
.text:00000000000099C4                 MOV             X2, X19
.text:00000000000099C8                 MOV             W3, WZR
.text:00000000000099CC                 MOV             X4, XZR
.text:00000000000099D0                 LDR             X8, [X8,#0x38]
.text:00000000000099D4                 BLR             X8
.text:00000000000099D8                 LDR             X8, [SP,#0x70+var_70]
.text:00000000000099DC                 MOV             W24, W0
.text:00000000000099E0                 CBZ             X8, loc_99F0
.text:00000000000099E4                 LDR             X0, [SP,#0x70+var_68] ; this
.text:00000000000099E8                 MOV             X1, SP  ; void *
.text:00000000000099EC                 BL              ._ZN7android7RefBase12weakref_type7decWeakEPKv ; android::RefBase::weakref_type::decWeak(void const*)
.text:00000000000099F0 loc_99F0                                ; CODE XREF: sub_97F8+1E8↑j
.text:00000000000099F0                 CBZ             W24, loc_9A00
.text:00000000000099F4                 BL              ._ZN7android4base21GetMinimumLogSeverityEv ; android::base::GetMinimumLogSeverity(void)
.text:00000000000099F8                 CMP             W0, #4
.text:00000000000099FC                 B.LE            loc_9A1C
.text:0000000000009A00 loc_9A00                                ; CODE XREF: sub_97F8:loc_99F0↑j
.text:0000000000009A00                                         ; sub_97F8+284↓j
.text:0000000000009A00                 MOV             W0, W24
.text:0000000000009A04                 BL              sub_E118
.text:0000000000009A08                 MOV             W24, W0
.text:0000000000009A0C                 MOV             W26, #1
.text:0000000000009A10                 LDR             X8, [SP,#0x70+var_60]
.text:0000000000009A14                 CBNZ            X8, loc_9890
.text:0000000000009A18                 B               loc_98A4
.text:0000000000009A1C ; ---------------------------------------------------------------------------
.text:0000000000009A1C loc_9A1C                                ; CODE XREF: sub_97F8+204↑j
.text:0000000000009A1C                 BL              .__errno
.text:0000000000009A20                 ADRP            X1, #aFrameworksNati@PAGE ; "frameworks/native/libs/binder/ndk/ibind"...
.text:0000000000009A24                 LDR             W26, [X0]
.text:0000000000009A28                 MOV             X28, X0
.text:0000000000009A2C                 MOV             X0, SP
.text:0000000000009A30                 ADD             X1, X1, #aFrameworksNati@PAGEOFF ; "frameworks/native/libs/binder/ndk/ibind"...
.text:0000000000009A34                 MOV             W2, #0x14C
.text:0000000000009A38                 MOV             W3, WZR
.text:0000000000009A3C                 MOV             W4, #4
.text:0000000000009A40                 MOV             X5, XZR
.text:0000000000009A44                 MOV             W6, #0xFFFFFFFF
.text:0000000000009A48                 BL              ._ZN7android4base10LogMessageC1EPKcjNS0_5LogIdENS0_11LogSeverityES3_i ; android::base::LogMessage::LogMessage(char const*,uint,android::base::LogId,android::base::LogSeverity,char const*,int)
.text:0000000000009A4C                 MOV             X0, SP  ; this
.text:0000000000009A50                 BL              ._ZN7android4base10LogMessage6streamEv ; android::base::LogMessage::stream(void)
.text:0000000000009A54                 ADRP            X1, #aUnlinktodeath@PAGE ; "unlinkToDeath"
.text:0000000000009A58                 ADD             X1, X1, #aUnlinktodeath@PAGEOFF ; "unlinkToDeath"
.text:0000000000009A5C                 MOV             W2, #0xD
.text:0000000000009A60                 BL              sub_B548
.text:0000000000009A64                 MOV             X1, X23
.text:0000000000009A68                 MOV             W2, #0x39 ; '9'
.text:0000000000009A6C                 BL              sub_B548
.text:0000000000009A70                 MOV             X0, SP  ; this
.text:0000000000009A74                 BL              ._ZN7android4base10LogMessageD1Ev ; android::base::LogMessage::~LogMessage()
.text:0000000000009A78                 STR             W26, [X28]
.text:0000000000009A7C                 B               loc_9A00
.text:0000000000009A80 ; ---------------------------------------------------------------------------
.text:0000000000009A80 loc_9A80                                ; CODE XREF: sub_97F8+60↑j
.text:0000000000009A80                 MOV             W24, #0xFFFFFFFE
.text:0000000000009A84 loc_9A84                                ; CODE XREF: sub_97F8+B0↑j
.text:0000000000009A84                 MOV             X0, X22 ; this
.text:0000000000009A88                 BL              ._ZNSt3__15mutex6unlockEv ; std::__1::mutex::unlock(void)
.text:0000000000009A8C                 LDR             X8, [X25,#0x28]
.text:0000000000009A90                 LDR             X9, [SP,#0x70+var_58]
.text:0000000000009A94                 CMP             X8, X9
.text:0000000000009A98                 B.NE            loc_9B18
.text:0000000000009A9C                 MOV             W0, W24
.text:0000000000009AA0                 LDP             X29, X30, [SP,#0x70+var_s0]
.text:0000000000009AA4                 LDP             X20, X19, [SP,#0x70+var_10]
.text:0000000000009AA8                 LDP             X22, X21, [SP,#0x70+var_20]
.text:0000000000009AAC                 LDP             X24, X23, [SP,#0x70+var_30]
.text:0000000000009AB0                 LDP             X26, X25, [SP,#0x70+var_40]
.text:0000000000009AB4                 LDP             X28, X27, [SP,#0x70+var_50]
.text:0000000000009AB8                 ADD             SP, SP, #0x80
.text:0000000000009ABC                 RET
.text:0000000000009AC0 ; ---------------------------------------------------------------------------
.text:0000000000009AC0 loc_9AC0                                ; CODE XREF: sub_97F8+3C↑j
.text:0000000000009AC0                 ADRP            X1, #aFrameworksNati@PAGE ; "frameworks/native/libs/binder/ndk/ibind"...
.text:0000000000009AC4                 ADD             X1, X1, #aFrameworksNati@PAGEOFF ; "frameworks/native/libs/binder/ndk/ibind"...
.text:0000000000009AC8                 MOV             W2, #0x140
.text:0000000000009ACC                 MOV             W6, #0xFFFFFFFF
.text:0000000000009AD0                 MOV             X0, SP
.text:0000000000009AD4                 MOV             W3, WZR
.text:0000000000009AD8                 MOV             W4, #6
.text:0000000000009ADC                 MOV             X5, XZR
.text:0000000000009AE0                 BL              ._ZN7android4base10LogMessageC1EPKcjNS0_5LogIdENS0_11LogSeverityES3_i ; android::base::LogMessage::LogMessage(char const*,uint,android::base::LogId,android::base::LogSeverity,char const*,int)
.text:0000000000009AE4                 MOV             X0, SP  ; this
.text:0000000000009AE8                 BL              ._ZN7android4base10LogMessage6streamEv ; android::base::LogMessage::stream(void)
.text:0000000000009AEC                 ADRP            X1, #aCheckFailedBin@PAGE ; "Check failed: binder != nullptr"
.text:0000000000009AF0                 ADD             X1, X1, #aCheckFailedBin@PAGEOFF ; "Check failed: binder != nullptr"
.text:0000000000009AF4                 MOV             W2, #0x1F
.text:0000000000009AF8                 BL              sub_B548
.text:0000000000009AFC                 ADRP            X1, #asc_50A3@PAGE ; " "
.text:0000000000009B00                 ADD             X1, X1, #asc_50A3@PAGEOFF ; " "
.text:0000000000009B04                 MOV             W2, #1
.text:0000000000009B08                 BL              sub_B548
.text:0000000000009B0C                 MOV             X0, SP  ; this
.text:0000000000009B10                 BL              ._ZN7android4base10LogMessageD1Ev ; android::base::LogMessage::~LogMessage()
.text:0000000000009B14                 B               loc_9838
.text:0000000000009B18 ; ---------------------------------------------------------------------------
.text:0000000000009B18 loc_9B18                                ; CODE XREF: sub_97F8+2A0↑j
.text:0000000000009B18                 BL              .__stack_chk_fail
.text:0000000000009B18 ; } // starts at 97F8
.text:0000000000009B18 ; End of function sub_97F8
.text:0000000000009B18 ; ---------------------------------------------------------------------------
.text:0000000000009B1C                 ALIGN 0x20
.text:0000000000009B20 ; =============== S U B R O U T I N E =======================================
.text:0000000000009B20 ; Attributes: bp-based frame
.text:0000000000009B20 sub_9B20                                ; CODE XREF: sub_9CF8+250↓p
.text:0000000000009B20 var_30          = -0x30
.text:0000000000009B20 var_20          = -0x20
.text:0000000000009B20 var_10          = -0x10
.text:0000000000009B20 var_s0          =  0
.text:0000000000009B20 ; __unwind {
.text:0000000000009B20                 STP             X24, X23, [SP,#-0x10+var_30]!
.text:0000000000009B24                 STP             X22, X21, [SP,#0x30+var_20]
.text:0000000000009B28                 STP             X20, X19, [SP,#0x30+var_10]
.text:0000000000009B2C                 STP             X29, X30, [SP,#0x30+var_s0]
.text:0000000000009B30                 ADD             X29, SP, #0x30
.text:0000000000009B34                 MOV             X19, X0
.text:0000000000009B38                 MOV             X22, X0
.text:0000000000009B3C                 LDR             X21, [X19,#0x38]!
.text:0000000000009B40                 LDR             X20, [X19,#8]
.text:0000000000009B44                 CMP             X21, X20
.text:0000000000009B48                 B.EQ            loc_9B7C
.text:0000000000009B4C                 LDR             X8, [X21]
.text:0000000000009B50                 LDR             X8, [X8,#8]
.text:0000000000009B54                 CBZ             X8, loc_9B7C
.text:0000000000009B58                 SUB             X8, X20, #8
.text:0000000000009B5C                 MOV             X9, X21
.text:0000000000009B60 loc_9B60                                ; CODE XREF: sub_9B20+58↓j
.text:0000000000009B60                 CMP             X8, X9
.text:0000000000009B64                 B.EQ            loc_9BE4
.text:0000000000009B68                 LDR             X10, [X9,#8]
.text:0000000000009B6C                 ADD             X21, X9, #8
.text:0000000000009B70                 MOV             X9, X21
.text:0000000000009B74                 LDR             X10, [X10,#8]
.text:0000000000009B78                 CBNZ            X10, loc_9B60
.text:0000000000009B7C loc_9B7C                                ; CODE XREF: sub_9B20+28↑j
.text:0000000000009B7C                                         ; sub_9B20+34↑j
.text:0000000000009B7C                 CMP             X21, X20
.text:0000000000009B80                 ADD             X23, X21, #8
.text:0000000000009B84                 CCMP            X23, X20, #4, NE
.text:0000000000009B88                 B.EQ            loc_9BE8
.text:0000000000009B8C loc_9B8C                                ; CODE XREF: sub_9B20+B8↓j
.text:0000000000009B8C                 LDR             X8, [X23]
.text:0000000000009B90                 LDR             X8, [X8,#8]
.text:0000000000009B94                 CBZ             X8, loc_9BD0
.text:0000000000009B98                 LDR             X24, [X21]
.text:0000000000009B9C                 CBZ             X24, loc_9BB4
.text:0000000000009BA0                 LDR             X8, [X24]
.text:0000000000009BA4                 MOV             X1, X21 ; void *
.text:0000000000009BA8                 LDUR            X8, [X8,#-0x18]
.text:0000000000009BAC                 ADD             X0, X24, X8 ; this
.text:0000000000009BB0                 BL              ._ZNK7android7RefBase9decStrongEPKv ; android::RefBase::decStrong(void const*)
.text:0000000000009BB4 loc_9BB4                                ; CODE XREF: sub_9B20+7C↑j
.text:0000000000009BB4                 LDR             X8, [X21]
.text:0000000000009BB8                 CMP             X24, X8
.text:0000000000009BBC                 B.EQ            loc_9BC4
.text:0000000000009BC0                 BL              ._ZN7android14sp_report_raceEv ; android::sp_report_race(void)
.text:0000000000009BC4 loc_9BC4                                ; CODE XREF: sub_9B20+9C↑j
.text:0000000000009BC4                 LDR             X8, [X23]
.text:0000000000009BC8                 STR             X8, [X21],#8
.text:0000000000009BCC                 STR             XZR, [X23]
.text:0000000000009BD0 loc_9BD0                                ; CODE XREF: sub_9B20+74↑j
.text:0000000000009BD0                 ADD             X23, X23, #8
.text:0000000000009BD4                 CMP             X20, X23
.text:0000000000009BD8                 B.NE            loc_9B8C
.text:0000000000009BDC                 LDR             X20, [X22,#0x40]
.text:0000000000009BE0                 B               loc_9BE8
.text:0000000000009BE4 ; ---------------------------------------------------------------------------
.text:0000000000009BE4 loc_9BE4                                ; CODE XREF: sub_9B20+44↑j
.text:0000000000009BE4                 MOV             X21, X20
.text:0000000000009BE8 loc_9BE8                                ; CODE XREF: sub_9B20+68↑j
.text:0000000000009BE8                                         ; sub_9B20+C0↑j
.text:0000000000009BE8                 MOV             X0, X19
.text:0000000000009BEC                 MOV             X1, X21
.text:0000000000009BF0                 MOV             X2, X20
.text:0000000000009BF4                 LDP             X29, X30, [SP,#0x30+var_s0]
.text:0000000000009BF8                 LDP             X20, X19, [SP,#0x30+var_10]
.text:0000000000009BFC                 LDP             X22, X21, [SP,#0x30+var_20]
.text:0000000000009C00                 LDP             X24, X23, [SP+0x30+var_30],#0x40
.text:0000000000009C04                 B               loc_9C08
.text:0000000000009C04 ; } // starts at 9B20
.text:0000000000009C08 ; ---------------------------------------------------------------------------
.text:0000000000009C08 loc_9C08                                ; CODE XREF: sub_9B20+E4↑j
.text:0000000000009C08 ; __unwind {
.text:0000000000009C08                 STP             X24, X23, [SP,#-0x10+var_30]!
.text:0000000000009C0C                 STP             X22, X21, [SP,#0x30+var_20]
.text:0000000000009C10                 STP             X20, X19, [SP,#0x30+var_10]
.text:0000000000009C14                 STP             X29, X30, [SP,#0x30+var_s0]
.text:0000000000009C18                 ADD             X29, SP, #0x30 ; '0'
.text:0000000000009C1C                 MOV             X19, X1
.text:0000000000009C20                 CMP             X1, X2
.text:0000000000009C24                 B.EQ            loc_9CE0
.text:0000000000009C28                 LDR             X9, [X0,#8]
.text:0000000000009C2C                 SUB             X10, X2, X19
.text:0000000000009C30                 MOV             X20, X0
.text:0000000000009C34                 ADD             X8, X19, X10
.text:0000000000009C38                 CMP             X8, X9
.text:0000000000009C3C                 B.EQ            loc_9CA4
.text:0000000000009C40                 ASR             X8, X10, #3
.text:0000000000009C44                 SUB             X22, X9, X8,LSL#3
.text:0000000000009C48                 MOV             X21, X19
.text:0000000000009C4C                 LSL             X23, X8, #3
.text:0000000000009C50 loc_9C50                                ; CODE XREF: sub_9B20+170↓j
.text:0000000000009C50                 LDR             X24, [X21]
.text:0000000000009C54                 CBZ             X24, loc_9C6C
.text:0000000000009C58                 LDR             X8, [X24]
.text:0000000000009C5C                 MOV             X1, X21 ; void *
.text:0000000000009C60                 LDUR            X8, [X8,#-0x18]
.text:0000000000009C64                 ADD             X0, X24, X8 ; this
.text:0000000000009C68                 BL              ._ZNK7android7RefBase9decStrongEPKv ; android::RefBase::decStrong(void const*)
.text:0000000000009C6C loc_9C6C                                ; CODE XREF: sub_9B20+134↑j
.text:0000000000009C6C                 LDR             X8, [X21]
.text:0000000000009C70                 CMP             X24, X8
.text:0000000000009C74                 B.EQ            loc_9C7C
.text:0000000000009C78                 BL              ._ZN7android14sp_report_raceEv ; android::sp_report_race(void)
.text:0000000000009C7C loc_9C7C                                ; CODE XREF: sub_9B20+154↑j
.text:0000000000009C7C                 LDR             X8, [X21,X23]
.text:0000000000009C80                 STR             X8, [X21]
.text:0000000000009C84                 STR             XZR, [X21,X23]
.text:0000000000009C88                 ADD             X21, X21, #8
.text:0000000000009C8C                 CMP             X22, X21
.text:0000000000009C90                 B.NE            loc_9C50
.text:0000000000009C94                 LDR             X8, [X20,#8]
.text:0000000000009C98                 CMP             X8, X21
.text:0000000000009C9C                 B.NE            loc_9CB0
.text:0000000000009CA0                 B               loc_9CDC
.text:0000000000009CA4 ; ---------------------------------------------------------------------------
.text:0000000000009CA4 loc_9CA4                                ; CODE XREF: sub_9B20+11C↑j
.text:0000000000009CA4                 MOV             X21, X19
.text:0000000000009CA8                 CMP             X8, X21
.text:0000000000009CAC                 B.EQ            loc_9CDC
.text:0000000000009CB0 loc_9CB0                                ; CODE XREF: sub_9B20+17C↑j
.text:0000000000009CB0                 MOV             X22, X8
.text:0000000000009CB4 loc_9CB4                                ; CODE XREF: sub_9B20+1B8↓j
.text:0000000000009CB4                 LDR             X9, [X22,#-8]!
.text:0000000000009CB8                 CBZ             X9, loc_9CD0
.text:0000000000009CBC                 LDR             X10, [X9]
.text:0000000000009CC0                 SUB             X1, X8, #8 ; void *
.text:0000000000009CC4                 LDUR            X10, [X10,#-0x18]
.text:0000000000009CC8                 ADD             X0, X9, X10 ; this
.text:0000000000009CCC                 BL              ._ZNK7android7RefBase9decStrongEPKv ; android::RefBase::decStrong(void const*)
.text:0000000000009CD0 loc_9CD0                                ; CODE XREF: sub_9B20+198↑j
.text:0000000000009CD0                 MOV             X8, X22
.text:0000000000009CD4                 CMP             X21, X22
.text:0000000000009CD8                 B.NE            loc_9CB4
.text:0000000000009CDC loc_9CDC                                ; CODE XREF: sub_9B20+180↑j
.text:0000000000009CDC                                         ; sub_9B20+18C↑j
.text:0000000000009CDC                 STR             X21, [X20,#8]
.text:0000000000009CE0 loc_9CE0                                ; CODE XREF: sub_9B20+104↑j
.text:0000000000009CE0                 MOV             X0, X19
.text:0000000000009CE4                 LDP             X29, X30, [SP,#0x30+var_s0]
.text:0000000000009CE8                 LDP             X20, X19, [SP,#0x30+var_10]
.text:0000000000009CEC                 LDP             X22, X21, [SP,#0x30+var_20]
.text:0000000000009CF0                 LDP             X24, X23, [SP+0x30+var_30],#0x40
.text:0000000000009CF4                 RET
.text:0000000000009CF4 ; } // starts at 9C08
.text:0000000000009CF4 ; End of function sub_9B20
.text:0000000000009CF8 ; =============== S U B R O U T I N E =======================================
.text:0000000000009CF8 ; Attributes: bp-based frame
.text:0000000000009CF8 sub_9CF8                                ; CODE XREF: AIBinder_linkToDeath+4C↓p
.text:0000000000009CF8 var_70          = -0x70
.text:0000000000009CF8 var_68          = -0x68
.text:0000000000009CF8 var_60          = -0x60
.text:0000000000009CF8 var_58          = -0x58
.text:0000000000009CF8 var_50          = -0x50
.text:0000000000009CF8 var_48          = -0x48
.text:0000000000009CF8 var_40          = -0x40
.text:0000000000009CF8 var_30          = -0x30
.text:0000000000009CF8 var_20          = -0x20
.text:0000000000009CF8 var_10          = -0x10
.text:0000000000009CF8 var_s0          =  0
.text:0000000000009CF8 ; __unwind {
.text:0000000000009CF8                 SUB             SP, SP, #0x80
.text:0000000000009CFC                 STR             X25, [SP,#0x70+var_40]
.text:0000000000009D00                 STP             X24, X23, [SP,#0x70+var_30]
.text:0000000000009D04                 STP             X22, X21, [SP,#0x70+var_20]
.text:0000000000009D08                 STP             X20, X19, [SP,#0x70+var_10]
.text:0000000000009D0C                 STP             X29, X30, [SP,#0x70+var_s0]
.text:0000000000009D10                 ADD             X29, SP, #0x70
.text:0000000000009D14                 MRS             X24, #3, c13, c0, #2
.text:0000000000009D18                 MOV             X21, X2
.text:0000000000009D1C                 LDR             X8, [X24,#0x28]
.text:0000000000009D20                 MOV             X22, X1
.text:0000000000009D24                 MOV             X19, X0
.text:0000000000009D28                 STR             X8, [SP,#0x70+var_48]
.text:0000000000009D2C                 LDR             X8, [X1]
.text:0000000000009D30                 CBZ             X8, loc_9F5C
.text:0000000000009D34 loc_9D34                                ; CODE XREF: sub_9CF8+2B8↓j
.text:0000000000009D34                 ADD             X20, X19, #0x10
.text:0000000000009D38                 MOV             X0, X20 ; this
.text:0000000000009D3C                 BL              ._ZNSt3__15mutex4lockEv ; std::__1::mutex::lock(void)
.text:0000000000009D40                 MOV             W0, #0x48 ; 'H' ; unsigned __int64
.text:0000000000009D44                 BL              ._Znwm  ; operator new(ulong)
.text:0000000000009D48                 LDR             X8, [X22]
.text:0000000000009D4C                 MOV             X23, X0
.text:0000000000009D50                 STR             X8, [SP,#0x70+var_60]
.text:0000000000009D54                 CBZ             X8, loc_9D70
.text:0000000000009D58                 LDR             X9, [X8]
.text:0000000000009D5C                 ADD             X1, SP, #0x70+var_60 ; void *
.text:0000000000009D60                 LDUR            X9, [X9,#-0x18]
.text:0000000000009D64                 ADD             X0, X8, X9 ; this
.text:0000000000009D68                 BL              ._ZNK7android7RefBase10createWeakEPKv ; android::RefBase::createWeak(void const*)
.text:0000000000009D6C                 B               loc_9D74
.text:0000000000009D70 ; ---------------------------------------------------------------------------
.text:0000000000009D70 loc_9D70                                ; CODE XREF: sub_9CF8+5C↑j
.text:0000000000009D70                 MOV             X0, XZR
.text:0000000000009D74 loc_9D74                                ; CODE XREF: sub_9CF8+74↑j
.text:0000000000009D74                 STR             X0, [SP,#0x70+var_58]
.text:0000000000009D78                 STR             X19, [SP,#0x70+var_70]
.text:0000000000009D7C                 CBZ             X19, loc_9D94
.text:0000000000009D80                 MOV             X1, SP  ; void *
.text:0000000000009D84                 MOV             X0, X19 ; this
.text:0000000000009D88                 BL              ._ZNK7android7RefBase10createWeakEPKv ; android::RefBase::createWeak(void const*)
.text:0000000000009D8C                 STR             X0, [SP,#0x70+var_68]
.text:0000000000009D90                 B               loc_9D98
.text:0000000000009D94 ; ---------------------------------------------------------------------------
.text:0000000000009D94 loc_9D94                                ; CODE XREF: sub_9CF8+84↑j
.text:0000000000009D94                 MOV             X0, XZR
.text:0000000000009D98 loc_9D98                                ; CODE XREF: sub_9CF8+98↑j
.text:0000000000009D98                 ADD             X8, X23, #0x38 ; '8'
.text:0000000000009D9C                 LDR             X25, [X19,#0x50]
.text:0000000000009DA0                 STR             X0, [SP,#0x70+var_68]
.text:0000000000009DA4                 MOV             X0, X8  ; this
.text:0000000000009DA8                 BL              ._ZN7android7RefBaseC2Ev ; android::RefBase::RefBase(void)
.text:0000000000009DAC                 ADRP            X8, #off_109D8@PAGE
.text:0000000000009DB0                 MOV             X1, X23
.text:0000000000009DB4                 LDR             X8, [X8,#off_109D8@PAGEOFF]
.text:0000000000009DB8                 LDP             X9, X0, [SP,#0x70+var_60] ; this
.text:0000000000009DBC                 ADD             X10, X8, #0x18
.text:0000000000009DC0                 ADD             X8, X8, #0x68 ; 'h'
.text:0000000000009DC4                 STR             X9, [X1,#8]! ; void *
.text:0000000000009DC8                 STR             X10, [X23]
.text:0000000000009DCC                 STR             X8, [X23,#0x38]
.text:0000000000009DD0                 STR             X0, [X23,#0x10]
.text:0000000000009DD4                 CBZ             X9, loc_9DDC
.text:0000000000009DD8                 BL              ._ZN7android7RefBase12weakref_type7incWeakEPKv ; android::RefBase::weakref_type::incWeak(void const*)
.text:0000000000009DDC loc_9DDC                                ; CODE XREF: sub_9CF8+DC↑j
.text:0000000000009DDC                 LDP             X8, X0, [SP,#0x70+var_70] ; this
.text:0000000000009DE0                 MOV             X1, X23
.text:0000000000009DE4                 STR             X8, [X1,#0x20]! ; void *
.text:0000000000009DE8                 STUR            X21, [X1,#-8]
.text:0000000000009DEC                 STR             X0, [X1,#8]
.text:0000000000009DF0                 CBZ             X8, loc_9DF8
.text:0000000000009DF4                 BL              ._ZN7android7RefBase12weakref_type7incWeakEPKv ; android::RefBase::weakref_type::incWeak(void const*)
.text:0000000000009DF8 loc_9DF8                                ; CODE XREF: sub_9CF8+F8↑j
.text:0000000000009DF8                 LDR             X8, [X23]
.text:0000000000009DFC                 ADD             X1, SP, #0x70+var_50 ; void *
.text:0000000000009E00                 STR             X25, [X23,#0x30]
.text:0000000000009E04                 STR             X23, [SP,#0x70+var_50]
.text:0000000000009E08                 LDUR            X8, [X8,#-0x18]
.text:0000000000009E0C                 ADD             X0, X23, X8 ; this
.text:0000000000009E10                 BL              ._ZNK7android7RefBase9incStrongEPKv ; android::RefBase::incStrong(void const*)
.text:0000000000009E14                 LDR             X8, [SP,#0x70+var_70]
.text:0000000000009E18                 CBZ             X8, loc_9E28
.text:0000000000009E1C                 LDR             X0, [SP,#0x70+var_68] ; this
.text:0000000000009E20                 MOV             X1, SP  ; void *
.text:0000000000009E24                 BL              ._ZN7android7RefBase12weakref_type7decWeakEPKv ; android::RefBase::weakref_type::decWeak(void const*)
.text:0000000000009E28 loc_9E28                                ; CODE XREF: sub_9CF8+120↑j
.text:0000000000009E28                 LDR             X8, [SP,#0x70+var_60]
.text:0000000000009E2C                 CBZ             X8, loc_9E3C
.text:0000000000009E30                 LDR             X0, [SP,#0x70+var_58] ; this
.text:0000000000009E34                 ADD             X1, SP, #0x70+var_60 ; void *
.text:0000000000009E38                 BL              ._ZN7android7RefBase12weakref_type7decWeakEPKv ; android::RefBase::weakref_type::decWeak(void const*)
.text:0000000000009E3C loc_9E3C                                ; CODE XREF: sub_9CF8+134↑j
.text:0000000000009E3C                 LDR             X8, [SP,#0x70+var_50]
.text:0000000000009E40                 LDR             X22, [X22]
.text:0000000000009E44                 STR             X8, [SP,#0x70+var_60]
.text:0000000000009E48                 CBZ             X8, loc_9E60
.text:0000000000009E4C                 LDR             X9, [X8]
.text:0000000000009E50                 ADD             X1, SP, #0x70+var_60 ; void *
.text:0000000000009E54                 LDUR            X9, [X9,#-0x18]
.text:0000000000009E58                 ADD             X0, X8, X9 ; this
.text:0000000000009E5C                 BL              ._ZNK7android7RefBase9incStrongEPKv ; android::RefBase::incStrong(void const*)
.text:0000000000009E60 loc_9E60                                ; CODE XREF: sub_9CF8+150↑j
.text:0000000000009E60                 LDR             X8, [X22]
.text:0000000000009E64                 ADD             X1, SP, #0x70+var_60
.text:0000000000009E68                 MOV             X0, X22
.text:0000000000009E6C                 MOV             X2, X21
.text:0000000000009E70                 MOV             W3, WZR
.text:0000000000009E74                 LDR             X8, [X8,#0x30]
.text:0000000000009E78                 BLR             X8
.text:0000000000009E7C                 LDR             X8, [SP,#0x70+var_60]
.text:0000000000009E80                 MOV             W21, W0
.text:0000000000009E84                 CBZ             X8, loc_9E9C
.text:0000000000009E88                 LDR             X9, [X8]
.text:0000000000009E8C                 ADD             X1, SP, #0x70+var_60 ; void *
.text:0000000000009E90                 LDUR            X9, [X9,#-0x18]
.text:0000000000009E94                 ADD             X0, X8, X9 ; this
.text:0000000000009E98                 BL              ._ZNK7android7RefBase9decStrongEPKv ; android::RefBase::decStrong(void const*)
.text:0000000000009E9C loc_9E9C                                ; CODE XREF: sub_9CF8+18C↑j
.text:0000000000009E9C                 CBZ             W21, loc_9F00
.text:0000000000009EA0                 MOV             W0, W21
.text:0000000000009EA4                 BL              sub_E118
.text:0000000000009EA8                 MOV             W19, W0
.text:0000000000009EAC                 LDR             X8, [SP,#0x70+var_50]
.text:0000000000009EB0                 CBZ             X8, loc_9EC8
.text:0000000000009EB4 loc_9EB4                                ; CODE XREF: sub_9CF8+25C↓j
.text:0000000000009EB4                 LDR             X9, [X8]
.text:0000000000009EB8                 ADD             X1, SP, #0x70+var_50 ; void *
.text:0000000000009EBC                 LDUR            X9, [X9,#-0x18]
.text:0000000000009EC0                 ADD             X0, X8, X9 ; this
.text:0000000000009EC4                 BL              ._ZNK7android7RefBase9decStrongEPKv ; android::RefBase::decStrong(void const*)
.text:0000000000009EC8 loc_9EC8                                ; CODE XREF: sub_9CF8+1B8↑j
.text:0000000000009EC8                                         ; sub_9CF8+260↓j
.text:0000000000009EC8                 MOV             X0, X20 ; this
.text:0000000000009ECC                 BL              ._ZNSt3__15mutex6unlockEv ; std::__1::mutex::unlock(void)
.text:0000000000009ED0                 LDR             X8, [X24,#0x28]
.text:0000000000009ED4                 LDR             X9, [SP,#0x70+var_48]
.text:0000000000009ED8                 CMP             X8, X9
.text:0000000000009EDC                 B.NE            loc_9FB4
.text:0000000000009EE0                 MOV             W0, W19
.text:0000000000009EE4                 LDR             X25, [SP,#0x70+var_40]
.text:0000000000009EE8                 LDP             X29, X30, [SP,#0x70+var_s0]
.text:0000000000009EEC                 LDP             X20, X19, [SP,#0x70+var_10]
.text:0000000000009EF0                 LDP             X22, X21, [SP,#0x70+var_20]
.text:0000000000009EF4                 LDP             X24, X23, [SP,#0x70+var_30]
.text:0000000000009EF8                 ADD             SP, SP, #0x80
.text:0000000000009EFC                 RET
.text:0000000000009F00 ; ---------------------------------------------------------------------------
.text:0000000000009F00 loc_9F00                                ; CODE XREF: sub_9CF8:loc_9E9C↑j
.text:0000000000009F00                 LDP             X1, X8, [X19,#0x40] ; void *
.text:0000000000009F04                 CMP             X1, X8
.text:0000000000009F08                 B.EQ            loc_9F38
.text:0000000000009F0C                 LDR             X8, [SP,#0x70+var_50]
.text:0000000000009F10                 STR             X8, [X1]
.text:0000000000009F14                 CBZ             X8, loc_9F28
.text:0000000000009F18                 LDR             X9, [X8]
.text:0000000000009F1C                 LDUR            X9, [X9,#-0x18]
.text:0000000000009F20                 ADD             X0, X8, X9 ; this
.text:0000000000009F24                 BL              ._ZNK7android7RefBase9incStrongEPKv ; android::RefBase::incStrong(void const*)
.text:0000000000009F28 loc_9F28                                ; CODE XREF: sub_9CF8+21C↑j
.text:0000000000009F28                 LDR             X8, [X19,#0x40]
.text:0000000000009F2C                 ADD             X8, X8, #8
.text:0000000000009F30                 STR             X8, [X19,#0x40]
.text:0000000000009F34                 B               loc_9F44
.text:0000000000009F38 ; ---------------------------------------------------------------------------
.text:0000000000009F38 loc_9F38                                ; CODE XREF: sub_9CF8+210↑j
.text:0000000000009F38                 ADD             X0, X19, #0x38 ; '8'
.text:0000000000009F3C                 ADD             X1, SP, #0x70+var_50
.text:0000000000009F40                 BL              loc_BA20
.text:0000000000009F44 loc_9F44                                ; CODE XREF: sub_9CF8+23C↑j
.text:0000000000009F44                 MOV             X0, X19
.text:0000000000009F48                 BL              sub_9B20
.text:0000000000009F4C                 MOV             W19, WZR
.text:0000000000009F50                 LDR             X8, [SP,#0x70+var_50]
.text:0000000000009F54                 CBNZ            X8, loc_9EB4
.text:0000000000009F58                 B               loc_9EC8
.text:0000000000009F5C ; ---------------------------------------------------------------------------
.text:0000000000009F5C loc_9F5C                                ; CODE XREF: sub_9CF8+38↑j
.text:0000000000009F5C                 ADRP            X1, #aFrameworksNati@PAGE ; "frameworks/native/libs/binder/ndk/ibind"...
.text:0000000000009F60                 ADD             X1, X1, #aFrameworksNati@PAGEOFF ; "frameworks/native/libs/binder/ndk/ibind"...
.text:0000000000009F64                 MOV             W2, #0x12D
.text:0000000000009F68                 MOV             W6, #0xFFFFFFFF
.text:0000000000009F6C                 ADD             X0, SP, #0x70+var_60
.text:0000000000009F70                 MOV             W3, WZR
.text:0000000000009F74                 MOV             W4, #6
.text:0000000000009F78                 MOV             X5, XZR
.text:0000000000009F7C                 BL              ._ZN7android4base10LogMessageC1EPKcjNS0_5LogIdENS0_11LogSeverityES3_i ; android::base::LogMessage::LogMessage(char const*,uint,android::base::LogId,android::base::LogSeverity,char const*,int)
.text:0000000000009F80                 ADD             X0, SP, #0x70+var_60 ; this
.text:0000000000009F84                 BL              ._ZN7android4base10LogMessage6streamEv ; android::base::LogMessage::stream(void)
.text:0000000000009F88                 ADRP            X1, #aCheckFailedBin@PAGE ; "Check failed: binder != nullptr"
.text:0000000000009F8C                 ADD             X1, X1, #aCheckFailedBin@PAGEOFF ; "Check failed: binder != nullptr"
.text:0000000000009F90                 MOV             W2, #0x1F
.text:0000000000009F94                 BL              sub_B548
.text:0000000000009F98                 ADRP            X1, #asc_50A3@PAGE ; " "
.text:0000000000009F9C                 ADD             X1, X1, #asc_50A3@PAGEOFF ; " "
.text:0000000000009FA0                 MOV             W2, #1
.text:0000000000009FA4                 BL              sub_B548
.text:0000000000009FA8                 ADD             X0, SP, #0x70+var_60 ; this
.text:0000000000009FAC                 BL              ._ZN7android4base10LogMessageD1Ev ; android::base::LogMessage::~LogMessage()
.text:0000000000009FB0                 B               loc_9D34
.text:0000000000009FB4 ; ---------------------------------------------------------------------------
.text:0000000000009FB4 loc_9FB4                                ; CODE XREF: sub_9CF8+1E4↑j
.text:0000000000009FB4                 BL              .__stack_chk_fail
.text:0000000000009FB4 ; } // starts at 9CF8
.text:0000000000009FB4 ; End of function sub_9CF8
.text:0000000000009FB8 ; =============== S U B R O U T I N E =======================================
.text:0000000000009FB8 ; Attributes: bp-based frame
.text:0000000000009FB8                 EXPORT AIBinder_new
.text:0000000000009FB8 AIBinder_new                            ; DATA XREF: LOAD:0000000000001530↑o
.text:0000000000009FB8 var_48          = -0x48
.text:0000000000009FB8 var_40          = -0x40
.text:0000000000009FB8 var_38          = -0x38
.text:0000000000009FB8 var_30          = -0x30
.text:0000000000009FB8 var_20          = -0x20
.text:0000000000009FB8 var_10          = -0x10
.text:0000000000009FB8 var_s0          =  0
.text:0000000000009FB8 ; __unwind {
.text:0000000000009FB8                 SUB             SP, SP, #0x60
.text:0000000000009FBC                 STR             X23, [SP,#0x50+var_30]
.text:0000000000009FC0                 STP             X22, X21, [SP,#0x50+var_20]
.text:0000000000009FC4                 STP             X20, X19, [SP,#0x50+var_10]
.text:0000000000009FC8                 STP             X29, X30, [SP,#0x50+var_s0]
.text:0000000000009FCC                 ADD             X29, SP, #0x50
.text:0000000000009FD0                 MRS             X23, #3, c13, c0, #2
.text:0000000000009FD4                 LDR             X8, [X23,#0x28]
.text:0000000000009FD8                 STR             X8, [SP,#0x50+var_38]
.text:0000000000009FDC                 CBZ             X0, loc_A0EC
.text:0000000000009FE0                 LDR             X8, [X0]
.text:0000000000009FE4                 MOV             X19, X0
.text:0000000000009FE8                 MOV             X0, X1
.text:0000000000009FEC                 BLR             X8
.text:0000000000009FF0                 MOV             X20, X0
.text:0000000000009FF4                 MOV             W0, #0x40 ; '@' ; unsigned __int64
.text:0000000000009FF8                 BL              ._Znwm  ; operator new(ulong)
.text:0000000000009FFC                 ADD             X22, X0, #0x30 ; '0'
.text:000000000000A000                 MOV             X21, X0
.text:000000000000A004                 MOV             X0, X22 ; this
.text:000000000000A008                 BL              ._ZN7android7RefBaseC2Ev ; android::RefBase::RefBase(void)
.text:000000000000A00C                 ADRP            X8, #off_109E0@PAGE
.text:000000000000A010                 ADD             X0, X21, #0x10 ; this
.text:000000000000A014                 LDR             X8, [X8,#off_109E0@PAGEOFF]
.text:000000000000A018                 ADD             X9, X8, #0x78 ; 'x'
.text:000000000000A01C                 ADD             X8, X8, #0x18
.text:000000000000A020                 STR             X9, [X21,#0x30]
.text:000000000000A024                 STP             X8, X19, [X21]
.text:000000000000A028                 ADRP            X8, #off_109B0@PAGE
.text:000000000000A02C                 LDR             X8, [X8,#off_109B0@PAGEOFF]
.text:000000000000A030                 ADD             X1, X8, #0x18
.text:000000000000A034                 BL              ._ZN7android7BBinderC2Ev ; android::BBinder::BBinder(void)
.text:000000000000A038                 ADRP            X8, #off_109A8@PAGE
.text:000000000000A03C                 ADD             X1, SP, #0x50+var_40 ; void *
.text:000000000000A040                 MOV             X0, X22 ; this
.text:000000000000A044                 LDR             X8, [X8,#off_109A8@PAGEOFF]
.text:000000000000A048                 STR             X21, [SP,#0x50+var_40]
.text:000000000000A04C                 ADD             X9, X8, #0x18
.text:000000000000A050                 ADD             X10, X8, #0x130
.text:000000000000A054                 ADD             X8, X8, #0x70 ; 'p'
.text:000000000000A058                 STR             X9, [X21]
.text:000000000000A05C                 STP             X20, X10, [X21,#0x28]
.text:000000000000A060                 STR             X8, [X21,#0x10]
.text:000000000000A064                 BL              ._ZNK7android7RefBase9incStrongEPKv ; android::RefBase::incStrong(void const*)
.text:000000000000A068                 LDR             X0, [SP,#0x50+var_40]
.text:000000000000A06C                 LDR             X8, [X0]
.text:000000000000A070                 LDR             X9, [X8,#0x10]
.text:000000000000A074                 ADD             X8, SP, #0x50+var_48
.text:000000000000A078                 BLR             X9
.text:000000000000A07C                 LDR             X0, [SP,#0x50+var_48]
.text:000000000000A080                 ADRP            X8, #qword_11000@PAGE
.text:000000000000A084                 ADRP            X4, #off_109E8@PAGE
.text:000000000000A088                 ADRP            X1, #aAbbinder@PAGE ; "ABBinder"
.text:000000000000A08C                 LDR             X2, [X8,#qword_11000@PAGEOFF]
.text:000000000000A090                 ADD             X1, X1, #aAbbinder@PAGEOFF ; "ABBinder"
.text:000000000000A094                 LDR             X9, [X0]
.text:000000000000A098                 MOV             X3, XZR
.text:000000000000A09C                 LDR             X8, [X9,#0x48]
.text:000000000000A0A0                 LDR             X4, [X4,#off_109E8@PAGEOFF]
.text:000000000000A0A4                 BLR             X8
.text:000000000000A0A8                 LDR             X8, [SP,#0x50+var_48]
.text:000000000000A0AC                 CBZ             X8, loc_A0C4
.text:000000000000A0B0                 LDR             X9, [X8]
.text:000000000000A0B4                 ADD             X1, SP, #0x50+var_48 ; void *
.text:000000000000A0B8                 LDUR            X9, [X9,#-0x18]
.text:000000000000A0BC                 ADD             X0, X8, X9 ; this
.text:000000000000A0C0                 BL              ._ZNK7android7RefBase9decStrongEPKv ; android::RefBase::decStrong(void const*)
.text:000000000000A0C4 loc_A0C4                                ; CODE XREF: AIBinder_new+F4↑j
.text:000000000000A0C4                 LDR             X0, [SP,#0x50+var_40]
.text:000000000000A0C8                 BL              .AIBinder_incStrong
.text:000000000000A0CC                 LDR             X19, [SP,#0x50+var_40]
.text:000000000000A0D0                 CBZ             X19, loc_A0FC
.text:000000000000A0D4                 LDR             X8, [X19]
.text:000000000000A0D8                 ADD             X1, SP, #0x50+var_40 ; void *
.text:000000000000A0DC                 LDUR            X8, [X8,#-0x18]
.text:000000000000A0E0                 ADD             X0, X19, X8 ; this
.text:000000000000A0E4                 BL              ._ZNK7android7RefBase9decStrongEPKv ; android::RefBase::decStrong(void const*)
.text:000000000000A0E8                 B               loc_A0FC
.text:000000000000A0EC ; ---------------------------------------------------------------------------
.text:000000000000A0EC loc_A0EC                                ; CODE XREF: AIBinder_new+24↑j
.text:000000000000A0EC                 BL              ._ZN7android4base21GetMinimumLogSeverityEv ; android::base::GetMinimumLogSeverity(void)
.text:000000000000A0F0                 CMP             W0, #4
.text:000000000000A0F4                 B.LE            loc_A128
.text:000000000000A0F8                 MOV             X19, XZR
.text:000000000000A0FC loc_A0FC                                ; CODE XREF: AIBinder_new+118↑j
.text:000000000000A0FC                                         ; AIBinder_new+130↑j ...
.text:000000000000A0FC                 LDR             X8, [X23,#0x28]
.text:000000000000A100                 LDR             X9, [SP,#0x50+var_38]
.text:000000000000A104                 CMP             X8, X9
.text:000000000000A108                 B.NE            loc_A194
.text:000000000000A10C                 MOV             X0, X19
.text:000000000000A110                 LDR             X23, [SP,#0x50+var_30]
.text:000000000000A114                 LDP             X29, X30, [SP,#0x50+var_s0]
.text:000000000000A118                 LDP             X20, X19, [SP,#0x50+var_10]
.text:000000000000A11C                 LDP             X22, X21, [SP,#0x50+var_20]
.text:000000000000A120                 ADD             SP, SP, #0x60 ; '`'
.text:000000000000A124                 RET
.text:000000000000A128 ; ---------------------------------------------------------------------------
.text:000000000000A128 loc_A128                                ; CODE XREF: AIBinder_new+13C↑j
.text:000000000000A128                 BL              .__errno
.text:000000000000A12C                 ADRP            X1, #aFrameworksNati@PAGE ; "frameworks/native/libs/binder/ndk/ibind"...
.text:000000000000A130                 LDR             W21, [X0]
.text:000000000000A134                 MOV             X20, X0
.text:000000000000A138                 ADD             X1, X1, #aFrameworksNati@PAGEOFF ; "frameworks/native/libs/binder/ndk/ibind"...
.text:000000000000A13C                 MOV             W2, #0x15A
.text:000000000000A140                 MOV             W6, #0xFFFFFFFF
.text:000000000000A144                 ADD             X0, SP, #0x50+var_40
.text:000000000000A148                 MOV             W3, WZR
.text:000000000000A14C                 MOV             W4, #4
.text:000000000000A150                 MOV             X5, XZR
.text:000000000000A154                 BL              ._ZN7android4base10LogMessageC1EPKcjNS0_5LogIdENS0_11LogSeverityES3_i ; android::base::LogMessage::LogMessage(char const*,uint,android::base::LogId,android::base::LogSeverity,char const*,int)
.text:000000000000A158                 ADD             X0, SP, #0x50+var_40 ; this
.text:000000000000A15C                 BL              ._ZN7android4base10LogMessage6streamEv ; android::base::LogMessage::stream(void)
.text:000000000000A160                 ADRP            X1, #aAibinderNew_0@PAGE ; "AIBinder_new"
.text:000000000000A164                 ADD             X1, X1, #aAibinderNew_0@PAGEOFF ; "AIBinder_new"
.text:000000000000A168                 MOV             W2, #0xC
.text:000000000000A16C                 BL              sub_B548
.text:000000000000A170                 ADRP            X1, #aMustProvideCla@PAGE ; ": Must provide class to construct local"...
.text:000000000000A174                 ADD             X1, X1, #aMustProvideCla@PAGEOFF ; ": Must provide class to construct local"...
.text:000000000000A178                 MOV             W2, #0x2F ; '/'
.text:000000000000A17C                 BL              sub_B548
.text:000000000000A180                 ADD             X0, SP, #0x50+var_40 ; this
.text:000000000000A184                 BL              ._ZN7android4base10LogMessageD1Ev ; android::base::LogMessage::~LogMessage()
.text:000000000000A188                 MOV             X19, XZR
.text:000000000000A18C                 STR             W21, [X20]
.text:000000000000A190                 B               loc_A0FC
.text:000000000000A194 ; ---------------------------------------------------------------------------
.text:000000000000A194 loc_A194                                ; CODE XREF: AIBinder_new+150↑j
.text:000000000000A194                 BL              .__stack_chk_fail
.text:000000000000A194 ; } // starts at 9FB8
.text:000000000000A194 ; End of function AIBinder_new
.text:000000000000A198 ; =============== S U B R O U T I N E =======================================
.text:000000000000A198 ; Attributes: bp-based frame
.text:000000000000A198                 EXPORT AIBinder_isRemote
.text:000000000000A198 AIBinder_isRemote                       ; DATA XREF: LOAD:00000000000013B0↑o
.text:000000000000A198 var_20          = -0x20
.text:000000000000A198 var_18          = -0x18
.text:000000000000A198 var_10          = -0x10
.text:000000000000A198 var_s0          =  0
.text:000000000000A198 ; __unwind {
.text:000000000000A198                 SUB             SP, SP, #0x30
.text:000000000000A19C                 STP             X20, X19, [SP,#0x20+var_10]
.text:000000000000A1A0                 STP             X29, X30, [SP,#0x20+var_s0]
.text:000000000000A1A4                 ADD             X29, SP, #0x20
.text:000000000000A1A8                 MRS             X20, #3, c13, c0, #2
.text:000000000000A1AC                 LDR             X8, [X20,#0x28]
.text:000000000000A1B0                 STR             X8, [SP,#0x20+var_18]
.text:000000000000A1B4                 CBZ             X0, loc_A200
.text:000000000000A1B8                 LDR             X8, [X0]
.text:000000000000A1BC                 LDR             X9, [X8,#0x10]
.text:000000000000A1C0                 MOV             X8, SP
.text:000000000000A1C4                 BLR             X9
.text:000000000000A1C8                 LDR             X0, [SP,#0x20+var_20]
.text:000000000000A1CC                 LDR             X8, [X0]
.text:000000000000A1D0                 LDR             X8, [X8,#0x68]
.text:000000000000A1D4                 BLR             X8
.text:000000000000A1D8                 LDR             X8, [SP,#0x20+var_20]
.text:000000000000A1DC                 CMP             X0, #0
.text:000000000000A1E0                 CSET            W19, NE
.text:000000000000A1E4                 CBZ             X8, loc_A204
.text:000000000000A1E8                 LDR             X9, [X8]
.text:000000000000A1EC                 MOV             X1, SP  ; void *
.text:000000000000A1F0                 LDUR            X9, [X9,#-0x18]
.text:000000000000A1F4                 ADD             X0, X8, X9 ; this
.text:000000000000A1F8                 BL              ._ZNK7android7RefBase9decStrongEPKv ; android::RefBase::decStrong(void const*)
.text:000000000000A1FC                 B               loc_A204
.text:000000000000A200 ; ---------------------------------------------------------------------------
.text:000000000000A200 loc_A200                                ; CODE XREF: AIBinder_isRemote+1C↑j
.text:000000000000A200                 MOV             W19, WZR
.text:000000000000A204 loc_A204                                ; CODE XREF: AIBinder_isRemote+4C↑j
.text:000000000000A204                                         ; AIBinder_isRemote+64↑j
.text:000000000000A204                 LDR             X8, [X20,#0x28]
.text:000000000000A208                 LDR             X9, [SP,#0x20+var_18]
.text:000000000000A20C                 CMP             X8, X9
.text:000000000000A210                 B.NE            loc_A228
.text:000000000000A214                 MOV             W0, W19
.text:000000000000A218                 LDP             X29, X30, [SP,#0x20+var_s0]
.text:000000000000A21C                 LDP             X20, X19, [SP,#0x20+var_10]
.text:000000000000A220                 ADD             SP, SP, #0x30 ; '0'
.text:000000000000A224                 RET
.text:000000000000A228 ; ---------------------------------------------------------------------------
.text:000000000000A228 loc_A228                                ; CODE XREF: AIBinder_isRemote+78↑j
.text:000000000000A228                 BL              .__stack_chk_fail
.text:000000000000A228 ; } // starts at A198
.text:000000000000A228 ; End of function AIBinder_isRemote
.text:000000000000A228 ; ---------------------------------------------------------------------------
.text:000000000000A22C                 ALIGN 0x10
.text:000000000000A230 ; =============== S U B R O U T I N E =======================================
.text:000000000000A230 ; Attributes: bp-based frame
.text:000000000000A230                 EXPORT AIBinder_isAlive
.text:000000000000A230 AIBinder_isAlive                        ; DATA XREF: LOAD:0000000000001800↑o
.text:000000000000A230 var_20          = -0x20
.text:000000000000A230 var_18          = -0x18
.text:000000000000A230 var_10          = -0x10
.text:000000000000A230 var_s0          =  0
.text:000000000000A230 ; __unwind {
.text:000000000000A230                 SUB             SP, SP, #0x30
.text:000000000000A234                 STP             X20, X19, [SP,#0x20+var_10]
.text:000000000000A238                 STP             X29, X30, [SP,#0x20+var_s0]
.text:000000000000A23C                 ADD             X29, SP, #0x20
.text:000000000000A240                 MRS             X20, #3, c13, c0, #2
.text:000000000000A244                 LDR             X8, [X20,#0x28]
.text:000000000000A248                 STR             X8, [SP,#0x20+var_18]
.text:000000000000A24C                 CBZ             X0, loc_A294
.text:000000000000A250                 LDR             X8, [X0]
.text:000000000000A254                 LDR             X9, [X8,#0x10]
.text:000000000000A258                 MOV             X8, SP
.text:000000000000A25C                 BLR             X9
.text:000000000000A260                 LDR             X0, [SP,#0x20+var_20]
.text:000000000000A264                 LDR             X8, [X0]
.text:000000000000A268                 LDR             X8, [X8,#0x10]
.text:000000000000A26C                 BLR             X8
.text:000000000000A270                 LDR             X8, [SP,#0x20+var_20]
.text:000000000000A274                 MOV             W19, W0
.text:000000000000A278                 CBZ             X8, loc_A298
.text:000000000000A27C                 LDR             X9, [X8]
.text:000000000000A280                 MOV             X1, SP  ; void *
.text:000000000000A284                 LDUR            X9, [X9,#-0x18]
.text:000000000000A288                 ADD             X0, X8, X9 ; this
.text:000000000000A28C                 BL              ._ZNK7android7RefBase9decStrongEPKv ; android::RefBase::decStrong(void const*)
.text:000000000000A290                 B               loc_A298
.text:000000000000A294 ; ---------------------------------------------------------------------------
.text:000000000000A294 loc_A294                                ; CODE XREF: AIBinder_isAlive+1C↑j
.text:000000000000A294                 MOV             W19, WZR
.text:000000000000A298 loc_A298                                ; CODE XREF: AIBinder_isAlive+48↑j
.text:000000000000A298                                         ; AIBinder_isAlive+60↑j
.text:000000000000A298                 LDR             X8, [X20,#0x28]
.text:000000000000A29C                 LDR             X9, [SP,#0x20+var_18]
.text:000000000000A2A0                 CMP             X8, X9
.text:000000000000A2A4                 B.NE            loc_A2BC
.text:000000000000A2A8                 AND             W0, W19, #1
.text:000000000000A2AC                 LDP             X29, X30, [SP,#0x20+var_s0]
.text:000000000000A2B0                 LDP             X20, X19, [SP,#0x20+var_10]
.text:000000000000A2B4                 ADD             SP, SP, #0x30 ; '0'
.text:000000000000A2B8                 RET
.text:000000000000A2BC ; ---------------------------------------------------------------------------
.text:000000000000A2BC loc_A2BC                                ; CODE XREF: AIBinder_isAlive+74↑j
.text:000000000000A2BC                 BL              .__stack_chk_fail
.text:000000000000A2BC ; } // starts at A230
.text:000000000000A2BC ; End of function AIBinder_isAlive
.text:000000000000A2C0 ; =============== S U B R O U T I N E =======================================
.text:000000000000A2C0 ; Attributes: bp-based frame
.text:000000000000A2C0                 EXPORT AIBinder_ping
.text:000000000000A2C0 AIBinder_ping                           ; DATA XREF: LOAD:0000000000001710↑o
.text:000000000000A2C0 var_20          = -0x20
.text:000000000000A2C0 var_18          = -0x18
.text:000000000000A2C0 var_10          = -0x10
.text:000000000000A2C0 var_s0          =  0
.text:000000000000A2C0 ; __unwind {
.text:000000000000A2C0                 SUB             SP, SP, #0x30
.text:000000000000A2C4                 STP             X20, X19, [SP,#0x20+var_10]
.text:000000000000A2C8                 STP             X29, X30, [SP,#0x20+var_s0]
.text:000000000000A2CC                 ADD             X29, SP, #0x20
.text:000000000000A2D0                 MRS             X20, #3, c13, c0, #2
.text:000000000000A2D4                 LDR             X8, [X20,#0x28]
.text:000000000000A2D8                 STR             X8, [SP,#0x20+var_18]
.text:000000000000A2DC                 CBZ             X0, loc_A328
.text:000000000000A2E0                 LDR             X8, [X0]
.text:000000000000A2E4                 LDR             X9, [X8,#0x10]
.text:000000000000A2E8                 MOV             X8, SP
.text:000000000000A2EC                 BLR             X9
.text:000000000000A2F0                 LDR             X0, [SP,#0x20+var_20]
.text:000000000000A2F4                 LDR             X8, [X0]
.text:000000000000A2F8                 LDR             X8, [X8,#0x18]
.text:000000000000A2FC                 BLR             X8
.text:000000000000A300                 BL              sub_E118
.text:000000000000A304                 LDR             X8, [SP,#0x20+var_20]
.text:000000000000A308                 MOV             W19, W0
.text:000000000000A30C                 CBZ             X8, loc_A330
.text:000000000000A310                 LDR             X9, [X8]
.text:000000000000A314                 MOV             X1, SP  ; void *
.text:000000000000A318                 LDUR            X9, [X9,#-0x18]
.text:000000000000A31C                 ADD             X0, X8, X9 ; this
.text:000000000000A320                 BL              ._ZNK7android7RefBase9decStrongEPKv ; android::RefBase::decStrong(void const*)
.text:000000000000A324                 B               loc_A330
.text:000000000000A328 ; ---------------------------------------------------------------------------
.text:000000000000A328 loc_A328                                ; CODE XREF: AIBinder_ping+1C↑j
.text:000000000000A328                 MOV             W19, #0x80000008
.text:000000000000A330 loc_A330                                ; CODE XREF: AIBinder_ping+4C↑j
.text:000000000000A330                                         ; AIBinder_ping+64↑j
.text:000000000000A330                 LDR             X8, [X20,#0x28]
.text:000000000000A334                 LDR             X9, [SP,#0x20+var_18]
.text:000000000000A338                 CMP             X8, X9
.text:000000000000A33C                 B.NE            loc_A354
.text:000000000000A340                 MOV             W0, W19
.text:000000000000A344                 LDP             X29, X30, [SP,#0x20+var_s0]
.text:000000000000A348                 LDP             X20, X19, [SP,#0x20+var_10]
.text:000000000000A34C                 ADD             SP, SP, #0x30 ; '0'
.text:000000000000A350                 RET
.text:000000000000A354 ; ---------------------------------------------------------------------------
.text:000000000000A354 loc_A354                                ; CODE XREF: AIBinder_ping+7C↑j
.text:000000000000A354                 BL              .__stack_chk_fail
.text:000000000000A354 ; } // starts at A2C0
.text:000000000000A354 ; End of function AIBinder_ping
.text:000000000000A358 ; =============== S U B R O U T I N E =======================================
.text:000000000000A358 ; Attributes: bp-based frame
.text:000000000000A358                 EXPORT AIBinder_dump
.text:000000000000A358 AIBinder_dump                           ; DATA XREF: LOAD:00000000000011D0↑o
.text:000000000000A358 var_78          = -0x78
.text:000000000000A358 var_70          = -0x70
.text:000000000000A358 var_48          = -0x48
.text:000000000000A358 var_40          = -0x40
.text:000000000000A358 var_30          = -0x30
.text:000000000000A358 var_20          = -0x20
.text:000000000000A358 var_10          = -0x10
.text:000000000000A358 var_s0          =  0
.text:000000000000A358 ; __unwind {
.text:000000000000A358                 SUB             SP, SP, #0x90
.text:000000000000A35C                 STR             X25, [SP,#0x80+var_40]
.text:000000000000A360                 STP             X24, X23, [SP,#0x80+var_30]
.text:000000000000A364                 STP             X22, X21, [SP,#0x80+var_20]
.text:000000000000A368                 STP             X20, X19, [SP,#0x80+var_10]
.text:000000000000A36C                 STP             X29, X30, [SP,#0x80+var_s0]
.text:000000000000A370                 ADD             X29, SP, #0x80
.text:000000000000A374                 MRS             X24, #3, c13, c0, #2
.text:000000000000A378                 LDR             X8, [X24,#0x28]
.text:000000000000A37C                 STR             X8, [SP,#0x80+var_48]
.text:000000000000A380                 CBZ             X0, loc_A3D8
.text:000000000000A384                 LDR             X8, [X0]
.text:000000000000A388                 MOV             W22, W3
.text:000000000000A38C                 MOV             X20, X2
.text:000000000000A390                 MOV             X21, X0
.text:000000000000A394                 MOV             W19, W1
.text:000000000000A398                 LDR             X8, [X8,#0x18]
.text:000000000000A39C                 BLR             X8
.text:000000000000A3A0                 CBZ             X0, loc_A3E4
.text:000000000000A3A4                 LDR             X8, [X21,#8]
.text:000000000000A3A8                 LDR             X8, [X8,#0x18]
.text:000000000000A3AC                 CBZ             X8, loc_A4C8
.text:000000000000A3B0                 MOV             W1, W19
.text:000000000000A3B4                 MOV             X2, X20
.text:000000000000A3B8                 MOV             W3, W22
.text:000000000000A3BC                 BLR             X8
.text:000000000000A3C0                 BL              sub_E118
.text:000000000000A3C4                 LDR             X8, [X24,#0x28]
.text:000000000000A3C8                 LDR             X9, [SP,#0x80+var_48]
.text:000000000000A3CC                 CMP             X8, X9
.text:000000000000A3D0                 B.EQ            loc_A4E0
.text:000000000000A3D4                 B               loc_A4FC
.text:000000000000A3D8 ; ---------------------------------------------------------------------------
.text:000000000000A3D8 loc_A3D8                                ; CODE XREF: AIBinder_dump+28↑j
.text:000000000000A3D8                 MOV             W19, #0x80000008
.text:000000000000A3E0                 B               loc_A4CC
.text:000000000000A3E4 ; ---------------------------------------------------------------------------
.text:000000000000A3E4 loc_A3E4                                ; CODE XREF: AIBinder_dump+48↑j
.text:000000000000A3E4                 ADD             X0, SP, #0x80+var_70 ; this
.text:000000000000A3E8                 MOV             W1, #8  ; unsigned __int64
.text:000000000000A3EC                 MOV             W2, WZR ; unsigned int
.text:000000000000A3F0                 BL              ._ZN7android10VectorImplC2Emj ; android::VectorImpl::VectorImpl(ulong,uint)
.text:000000000000A3F4                 ADRP            X25, #off_109F0@PAGE
.text:000000000000A3F8                 MOV             W23, W22
.text:000000000000A3FC                 ADD             X0, SP, #0x80+var_70 ; this
.text:000000000000A400                 LDR             X25, [X25,#off_109F0@PAGEOFF]
.text:000000000000A404                 MOV             X1, X23 ; unsigned __int64
.text:000000000000A408                 ADD             X8, X25, #0x10
.text:000000000000A40C                 STR             X8, [SP,#0x80+var_70]
.text:000000000000A410                 BL              ._ZN7android10VectorImpl11setCapacityEm ; android::VectorImpl::setCapacity(ulong)
.text:000000000000A414                 CBZ             W22, loc_A454
.text:000000000000A418 loc_A418                                ; CODE XREF: AIBinder_dump+F8↓j
.text:000000000000A418                 LDR             X1, [X20],#8 ; char *
.text:000000000000A41C                 MOV             X0, SP  ; this
.text:000000000000A420                 BL              ._ZN7android7String8C1EPKc ; android::String8::String8(char const*)
.text:000000000000A424                 ADD             X0, SP, #0x80+var_78 ; this
.text:000000000000A428                 MOV             X1, SP  ; android::String8 *
.text:000000000000A42C                 BL              ._ZN7android8String16C1ERKNS_7String8E ; android::String16::String16(android::String8 const&)
.text:000000000000A430                 ADD             X0, SP, #0x80+var_70 ; this
.text:000000000000A434                 ADD             X1, SP, #0x80+var_78 ; void *
.text:000000000000A438                 BL              ._ZN7android10VectorImpl4pushEPKv ; android::VectorImpl::push(void const*)
.text:000000000000A43C                 ADD             X0, SP, #0x80+var_78 ; this
.text:000000000000A440                 BL              ._ZN7android8String16D1Ev ; android::String16::~String16()
.text:000000000000A444                 MOV             X0, SP  ; this
.text:000000000000A448                 BL              ._ZN7android7String8D1Ev ; android::String8::~String8()
.text:000000000000A44C                 SUBS            X23, X23, #1
.text:000000000000A450                 B.NE            loc_A418
.text:000000000000A454 loc_A454                                ; CODE XREF: AIBinder_dump+BC↑j
.text:000000000000A454                 LDR             X8, [X21]
.text:000000000000A458                 MOV             X0, X21
.text:000000000000A45C                 LDR             X9, [X8,#0x10]
.text:000000000000A460                 ADD             X8, SP, #0x80+var_78
.text:000000000000A464                 BLR             X9
.text:000000000000A468                 LDR             X0, [SP,#0x80+var_78]
.text:000000000000A46C                 ADD             X2, SP, #0x80+var_70
.text:000000000000A470                 MOV             W1, W19
.text:000000000000A474                 LDR             X8, [X0]
.text:000000000000A478                 LDR             X8, [X8,#0x20]
.text:000000000000A47C                 BLR             X8
.text:000000000000A480                 LDR             X8, [SP,#0x80+var_78]
.text:000000000000A484                 MOV             W19, W0
.text:000000000000A488                 CBZ             X8, loc_A4A0
.text:000000000000A48C                 LDR             X9, [X8]
.text:000000000000A490                 ADD             X1, SP, #0x80+var_78 ; void *
.text:000000000000A494                 LDUR            X9, [X9,#-0x18]
.text:000000000000A498                 ADD             X0, X8, X9 ; this
.text:000000000000A49C                 BL              ._ZNK7android7RefBase9decStrongEPKv ; android::RefBase::decStrong(void const*)
.text:000000000000A4A0 loc_A4A0                                ; CODE XREF: AIBinder_dump+130↑j
.text:000000000000A4A0                 MOV             W0, W19
.text:000000000000A4A4                 BL              sub_E118
.text:000000000000A4A8                 ADD             X8, X25, #0x10
.text:000000000000A4AC                 MOV             W19, W0
.text:000000000000A4B0                 ADD             X0, SP, #0x80+var_70 ; this
.text:000000000000A4B4                 STR             X8, [SP,#0x80+var_70]
.text:000000000000A4B8                 BL              ._ZN7android10VectorImpl13finish_vectorEv ; android::VectorImpl::finish_vector(void)
.text:000000000000A4BC                 ADD             X0, SP, #0x80+var_70 ; this
.text:000000000000A4C0                 BL              ._ZN7android10VectorImplD2Ev ; android::VectorImpl::~VectorImpl()
.text:000000000000A4C4                 B               loc_A4CC
.text:000000000000A4C8 ; ---------------------------------------------------------------------------
.text:000000000000A4C8 loc_A4C8                                ; CODE XREF: AIBinder_dump+54↑j
.text:000000000000A4C8                 MOV             W19, WZR
.text:000000000000A4CC loc_A4CC                                ; CODE XREF: AIBinder_dump+88↑j
.text:000000000000A4CC                                         ; AIBinder_dump+16C↑j
.text:000000000000A4CC                 LDR             X8, [X24,#0x28]
.text:000000000000A4D0                 LDR             X9, [SP,#0x80+var_48]
.text:000000000000A4D4                 CMP             X8, X9
.text:000000000000A4D8                 B.NE            loc_A4FC
.text:000000000000A4DC                 MOV             W0, W19
.text:000000000000A4E0 loc_A4E0                                ; CODE XREF: AIBinder_dump+78↑j
.text:000000000000A4E0                 LDP             X29, X30, [SP,#0x80+var_s0]
.text:000000000000A4E4                 LDP             X20, X19, [SP,#0x80+var_10]
.text:000000000000A4E8                 LDP             X22, X21, [SP,#0x80+var_20]
.text:000000000000A4EC                 LDP             X24, X23, [SP,#0x80+var_30]
.text:000000000000A4F0                 LDR             X25, [SP,#0x80+var_40]
.text:000000000000A4F4                 ADD             SP, SP, #0x90
.text:000000000000A4F8                 RET
.text:000000000000A4FC ; ---------------------------------------------------------------------------
.text:000000000000A4FC loc_A4FC                                ; CODE XREF: AIBinder_dump+7C↑j
.text:000000000000A4FC                                         ; AIBinder_dump+180↑j
.text:000000000000A4FC                 BL              .__stack_chk_fail
.text:000000000000A4FC ; } // starts at A358
.text:000000000000A4FC ; End of function AIBinder_dump
.text:000000000000A500 ; ---------------------------------------------------------------------------
.text:000000000000A500 ; __unwind {
.text:000000000000A500                 STR             X19, [SP,#-0x20]!
.text:000000000000A504                 STP             X29, X30, [SP,#0x10]
.text:000000000000A508                 ADD             X29, SP, #0x10
.text:000000000000A50C                 ADRP            X8, #off_109F0@PAGE
.text:000000000000A510                 MOV             X19, X0
.text:000000000000A514                 LDR             X8, [X8,#off_109F0@PAGEOFF]
.text:000000000000A518                 ADD             X8, X8, #0x10
.text:000000000000A51C                 STR             X8, [X0]
.text:000000000000A520                 BL              ._ZN7android10VectorImpl13finish_vectorEv ; android::VectorImpl::finish_vector(void)
.text:000000000000A524                 LDP             X29, X30, [SP,#0x10]
.text:000000000000A528                 MOV             X0, X19
.text:000000000000A52C                 LDR             X19, [SP],#0x20
.text:000000000000A530                 B               ._ZN7android10VectorImplD2Ev ; android::VectorImpl::~VectorImpl()
.text:000000000000A530 ; } // starts at A500
.text:000000000000A530 ; ---------------------------------------------------------------------------
.text:000000000000A534                 ALIGN 8
.text:000000000000A538 ; =============== S U B R O U T I N E =======================================
.text:000000000000A538 ; Attributes: bp-based frame
.text:000000000000A538                 EXPORT AIBinder_linkToDeath
.text:000000000000A538 AIBinder_linkToDeath                    ; DATA XREF: LOAD:0000000000001188↑o
.text:000000000000A538 var_38          = -0x38
.text:000000000000A538 var_30          = -0x30
.text:000000000000A538 var_28          = -0x28
.text:000000000000A538 var_20          = -0x20
.text:000000000000A538 var_10          = -0x10
.text:000000000000A538 var_s0          =  0
.text:000000000000A538 ; __unwind {
.text:000000000000A538                 SUB             SP, SP, #0x50
.text:000000000000A53C                 STP             X22, X21, [SP,#0x40+var_20]
.text:000000000000A540                 STP             X20, X19, [SP,#0x40+var_10]
.text:000000000000A544                 STP             X29, X30, [SP,#0x40+var_s0]
.text:000000000000A548                 ADD             X29, SP, #0x40
.text:000000000000A54C                 MRS             X21, #3, c13, c0, #2
.text:000000000000A550                 LDR             X8, [X21,#0x28]
.text:000000000000A554                 STR             X8, [SP,#0x40+var_28]
.text:000000000000A558                 CBZ             X0, loc_A5AC
.text:000000000000A55C                 MOV             X20, X1
.text:000000000000A560                 CBZ             X1, loc_A5AC
.text:000000000000A564                 LDR             X8, [X0]
.text:000000000000A568                 MOV             X19, X2
.text:000000000000A56C                 LDR             X9, [X8,#0x10]
.text:000000000000A570                 ADD             X8, SP, #0x40+var_38
.text:000000000000A574                 BLR             X9
.text:000000000000A578                 ADD             X1, SP, #0x40+var_38
.text:000000000000A57C                 MOV             X0, X20
.text:000000000000A580                 MOV             X2, X19
.text:000000000000A584                 BL              sub_9CF8
.text:000000000000A588                 LDR             X8, [SP,#0x40+var_38]
.text:000000000000A58C                 MOV             W19, W0
.text:000000000000A590                 CBZ             X8, loc_A5C0
.text:000000000000A594                 LDR             X9, [X8]
.text:000000000000A598                 ADD             X1, SP, #0x40+var_38 ; void *
.text:000000000000A59C                 LDUR            X9, [X9,#-0x18]
.text:000000000000A5A0                 ADD             X0, X8, X9 ; this
.text:000000000000A5A4                 BL              ._ZNK7android7RefBase9decStrongEPKv ; android::RefBase::decStrong(void const*)
.text:000000000000A5A8                 B               loc_A5C0
.text:000000000000A5AC ; ---------------------------------------------------------------------------
.text:000000000000A5AC loc_A5AC                                ; CODE XREF: AIBinder_linkToDeath+20↑j
.text:000000000000A5AC                                         ; AIBinder_linkToDeath+28↑j
.text:000000000000A5AC                 MOV             W19, #0x80000008
.text:000000000000A5B4                 BL              ._ZN7android4base21GetMinimumLogSeverityEv ; android::base::GetMinimumLogSeverity(void)
.text:000000000000A5B8                 CMP             W0, #4
.text:000000000000A5BC                 B.LE            loc_A5E8
.text:000000000000A5C0 loc_A5C0                                ; CODE XREF: AIBinder_linkToDeath+58↑j
.text:000000000000A5C0                                         ; AIBinder_linkToDeath+70↑j ...
.text:000000000000A5C0                 LDR             X8, [X21,#0x28]
.text:000000000000A5C4                 LDR             X9, [SP,#0x40+var_28]
.text:000000000000A5C8                 CMP             X8, X9
.text:000000000000A5CC                 B.NE            loc_A650
.text:000000000000A5D0                 MOV             W0, W19
.text:000000000000A5D4                 LDP             X29, X30, [SP,#0x40+var_s0]
.text:000000000000A5D8                 LDP             X20, X19, [SP,#0x40+var_10]
.text:000000000000A5DC                 LDP             X22, X21, [SP,#0x40+var_20]
.text:000000000000A5E0                 ADD             SP, SP, #0x50 ; 'P'
.text:000000000000A5E4                 RET
.text:000000000000A5E8 ; ---------------------------------------------------------------------------
.text:000000000000A5E8 loc_A5E8                                ; CODE XREF: AIBinder_linkToDeath+84↑j
.text:000000000000A5E8                 BL              .__errno
.text:000000000000A5EC                 ADRP            X1, #aFrameworksNati@PAGE ; "frameworks/native/libs/binder/ndk/ibind"...
.text:000000000000A5F0                 LDR             W22, [X0]
.text:000000000000A5F4                 MOV             X20, X0
.text:000000000000A5F8                 ADD             X1, X1, #aFrameworksNati@PAGEOFF ; "frameworks/native/libs/binder/ndk/ibind"...
.text:000000000000A5FC                 MOV             W2, #0x19A
.text:000000000000A600                 MOV             W6, #0xFFFFFFFF
.text:000000000000A604                 ADD             X0, SP, #0x40+var_30
.text:000000000000A608                 MOV             W3, WZR
.text:000000000000A60C                 MOV             W4, #4
.text:000000000000A610                 MOV             X5, XZR
.text:000000000000A614                 BL              ._ZN7android4base10LogMessageC1EPKcjNS0_5LogIdENS0_11LogSeverityES3_i ; android::base::LogMessage::LogMessage(char const*,uint,android::base::LogId,android::base::LogSeverity,char const*,int)
.text:000000000000A618                 ADD             X0, SP, #0x40+var_30 ; this
.text:000000000000A61C                 BL              ._ZN7android4base10LogMessage6streamEv ; android::base::LogMessage::stream(void)
.text:000000000000A620                 ADRP            X1, #aAibinderLinkto_0@PAGE ; "AIBinder_linkToDeath"
.text:000000000000A624                 ADD             X1, X1, #aAibinderLinkto_0@PAGEOFF ; "AIBinder_linkToDeath"
.text:000000000000A628                 MOV             W2, #0x14
.text:000000000000A62C                 BL              sub_B548
.text:000000000000A630                 ADRP            X1, #aMustProvideBin@PAGE ; ": Must provide binder and recipient."
.text:000000000000A634                 ADD             X1, X1, #aMustProvideBin@PAGEOFF ; ": Must provide binder and recipient."
.text:000000000000A638                 MOV             W2, #0x24 ; '$'
.text:000000000000A63C                 BL              sub_B548
.text:000000000000A640                 ADD             X0, SP, #0x40+var_30 ; this
.text:000000000000A644                 BL              ._ZN7android4base10LogMessageD1Ev ; android::base::LogMessage::~LogMessage()
.text:000000000000A648                 STR             W22, [X20]
.text:000000000000A64C                 B               loc_A5C0
.text:000000000000A650 ; ---------------------------------------------------------------------------
.text:000000000000A650 loc_A650                                ; CODE XREF: AIBinder_linkToDeath+94↑j
.text:000000000000A650                 BL              .__stack_chk_fail
.text:000000000000A650 ; } // starts at A538
.text:000000000000A650 ; End of function AIBinder_linkToDeath
.text:000000000000A650 ; ---------------------------------------------------------------------------
.text:000000000000A654                 ALIGN 8
.text:000000000000A658 ; =============== S U B R O U T I N E =======================================
.text:000000000000A658 ; Attributes: bp-based frame
.text:000000000000A658                 EXPORT AIBinder_unlinkToDeath
.text:000000000000A658 AIBinder_unlinkToDeath                  ; DATA XREF: LOAD:00000000000011B8↑o
.text:000000000000A658 var_38          = -0x38
.text:000000000000A658 var_30          = -0x30
.text:000000000000A658 var_28          = -0x28
.text:000000000000A658 var_20          = -0x20
.text:000000000000A658 var_10          = -0x10
.text:000000000000A658 var_s0          =  0
.text:000000000000A658 ; __unwind {
.text:000000000000A658                 SUB             SP, SP, #0x50
.text:000000000000A65C                 STP             X22, X21, [SP,#0x40+var_20]
.text:000000000000A660                 STP             X20, X19, [SP,#0x40+var_10]
.text:000000000000A664                 STP             X29, X30, [SP,#0x40+var_s0]
.text:000000000000A668                 ADD             X29, SP, #0x40
.text:000000000000A66C                 MRS             X21, #3, c13, c0, #2
.text:000000000000A670                 LDR             X8, [X21,#0x28]
.text:000000000000A674                 STR             X8, [SP,#0x40+var_28]
.text:000000000000A678                 CBZ             X0, loc_A6CC
.text:000000000000A67C                 MOV             X20, X1
.text:000000000000A680                 CBZ             X1, loc_A6CC
.text:000000000000A684                 LDR             X8, [X0]
.text:000000000000A688                 MOV             X19, X2
.text:000000000000A68C                 LDR             X9, [X8,#0x10]
.text:000000000000A690                 ADD             X8, SP, #0x40+var_38
.text:000000000000A694                 BLR             X9
.text:000000000000A698                 ADD             X1, SP, #0x40+var_38
.text:000000000000A69C                 MOV             X0, X20
.text:000000000000A6A0                 MOV             X2, X19
.text:000000000000A6A4                 BL              sub_97F8
.text:000000000000A6A8                 LDR             X8, [SP,#0x40+var_38]
.text:000000000000A6AC                 MOV             W19, W0
.text:000000000000A6B0                 CBZ             X8, loc_A6E0
.text:000000000000A6B4                 LDR             X9, [X8]
.text:000000000000A6B8                 ADD             X1, SP, #0x40+var_38 ; void *
.text:000000000000A6BC                 LDUR            X9, [X9,#-0x18]
.text:000000000000A6C0                 ADD             X0, X8, X9 ; this
.text:000000000000A6C4                 BL              ._ZNK7android7RefBase9decStrongEPKv ; android::RefBase::decStrong(void const*)
.text:000000000000A6C8                 B               loc_A6E0
.text:000000000000A6CC ; ---------------------------------------------------------------------------
.text:000000000000A6CC loc_A6CC                                ; CODE XREF: AIBinder_unlinkToDeath+20↑j
.text:000000000000A6CC                                         ; AIBinder_unlinkToDeath+28↑j
.text:000000000000A6CC                 MOV             W19, #0x80000008
.text:000000000000A6D4                 BL              ._ZN7android4base21GetMinimumLogSeverityEv ; android::base::GetMinimumLogSeverity(void)
.text:000000000000A6D8                 CMP             W0, #4
.text:000000000000A6DC                 B.LE            loc_A708
.text:000000000000A6E0 loc_A6E0                                ; CODE XREF: AIBinder_unlinkToDeath+58↑j
.text:000000000000A6E0                                         ; AIBinder_unlinkToDeath+70↑j ...
.text:000000000000A6E0                 LDR             X8, [X21,#0x28]
.text:000000000000A6E4                 LDR             X9, [SP,#0x40+var_28]
.text:000000000000A6E8                 CMP             X8, X9
.text:000000000000A6EC                 B.NE            loc_A770
.text:000000000000A6F0                 MOV             W0, W19
.text:000000000000A6F4                 LDP             X29, X30, [SP,#0x40+var_s0]
.text:000000000000A6F8                 LDP             X20, X19, [SP,#0x40+var_10]
.text:000000000000A6FC                 LDP             X22, X21, [SP,#0x40+var_20]
.text:000000000000A700                 ADD             SP, SP, #0x50 ; 'P'
.text:000000000000A704                 RET
.text:000000000000A708 ; ---------------------------------------------------------------------------
.text:000000000000A708 loc_A708                                ; CODE XREF: AIBinder_unlinkToDeath+84↑j
.text:000000000000A708                 BL              .__errno
.text:000000000000A70C                 ADRP            X1, #aFrameworksNati@PAGE ; "frameworks/native/libs/binder/ndk/ibind"...
.text:000000000000A710                 LDR             W22, [X0]
.text:000000000000A714                 MOV             X20, X0
.text:000000000000A718                 ADD             X1, X1, #aFrameworksNati@PAGEOFF ; "frameworks/native/libs/binder/ndk/ibind"...
.text:000000000000A71C                 MOV             W2, #0x1A5
.text:000000000000A720                 MOV             W6, #0xFFFFFFFF
.text:000000000000A724                 ADD             X0, SP, #0x40+var_30
.text:000000000000A728                 MOV             W3, WZR
.text:000000000000A72C                 MOV             W4, #4
.text:000000000000A730                 MOV             X5, XZR
.text:000000000000A734                 BL              ._ZN7android4base10LogMessageC1EPKcjNS0_5LogIdENS0_11LogSeverityES3_i ; android::base::LogMessage::LogMessage(char const*,uint,android::base::LogId,android::base::LogSeverity,char const*,int)
.text:000000000000A738                 ADD             X0, SP, #0x40+var_30 ; this
.text:000000000000A73C                 BL              ._ZN7android4base10LogMessage6streamEv ; android::base::LogMessage::stream(void)
.text:000000000000A740                 ADRP            X1, #aAibinderUnlink_0@PAGE ; "AIBinder_unlinkToDeath"
.text:000000000000A744                 ADD             X1, X1, #aAibinderUnlink_0@PAGEOFF ; "AIBinder_unlinkToDeath"
.text:000000000000A748                 MOV             W2, #0x16
.text:000000000000A74C                 BL              sub_B548
.text:000000000000A750                 ADRP            X1, #aMustProvideBin@PAGE ; ": Must provide binder and recipient."
.text:000000000000A754                 ADD             X1, X1, #aMustProvideBin@PAGEOFF ; ": Must provide binder and recipient."
.text:000000000000A758                 MOV             W2, #0x24 ; '$'
.text:000000000000A75C                 BL              sub_B548
.text:000000000000A760                 ADD             X0, SP, #0x40+var_30 ; this
.text:000000000000A764                 BL              ._ZN7android4base10LogMessageD1Ev ; android::base::LogMessage::~LogMessage()
.text:000000000000A768                 STR             W22, [X20]
.text:000000000000A76C                 B               loc_A6E0
.text:000000000000A770 ; ---------------------------------------------------------------------------
.text:000000000000A770 loc_A770                                ; CODE XREF: AIBinder_unlinkToDeath+94↑j
.text:000000000000A770                 BL              .__stack_chk_fail
.text:000000000000A770 ; } // starts at A658
.text:000000000000A770 ; End of function AIBinder_unlinkToDeath
.text:000000000000A770 ; ---------------------------------------------------------------------------
.text:000000000000A774                 ALIGN 8
.text:000000000000A778 ; =============== S U B R O U T I N E =======================================
.text:000000000000A778 ; Attributes: bp-based frame
.text:000000000000A778                 EXPORT AIBinder_getCallingUid
.text:000000000000A778 AIBinder_getCallingUid                  ; DATA XREF: LOAD:00000000000016E0↑o
.text:000000000000A778 var_s0          =  0
.text:000000000000A778 ; __unwind {
.text:000000000000A778                 STP             X29, X30, [SP,#-0x10+var_s0]!
.text:000000000000A77C                 MOV             X29, SP
.text:000000000000A780                 BL              ._ZN7android14IPCThreadState4selfEv ; android::IPCThreadState::self(void)
.text:000000000000A784                 LDP             X29, X30, [SP+var_s0],#0x10
.text:000000000000A788                 B               ._ZNK7android14IPCThreadState13getCallingUidEv ; android::IPCThreadState::getCallingUid(void)
.text:000000000000A788 ; } // starts at A778
.text:000000000000A788 ; End of function AIBinder_getCallingUid
.text:000000000000A788 ; ---------------------------------------------------------------------------
.text:000000000000A78C                 ALIGN 0x10
.text:000000000000A790 ; =============== S U B R O U T I N E =======================================
.text:000000000000A790 ; Attributes: bp-based frame
.text:000000000000A790                 EXPORT AIBinder_getCallingPid
.text:000000000000A790 AIBinder_getCallingPid                  ; DATA XREF: LOAD:0000000000001968↑o
.text:000000000000A790 var_s0          =  0
.text:000000000000A790 ; __unwind {
.text:000000000000A790                 STP             X29, X30, [SP,#-0x10+var_s0]!
.text:000000000000A794                 MOV             X29, SP
.text:000000000000A798                 BL              ._ZN7android14IPCThreadState4selfEv ; android::IPCThreadState::self(void)
.text:000000000000A79C                 LDP             X29, X30, [SP+var_s0],#0x10
.text:000000000000A7A0                 B               ._ZNK7android14IPCThreadState13getCallingPidEv ; android::IPCThreadState::getCallingPid(void)
.text:000000000000A7A0 ; } // starts at A790
.text:000000000000A7A0 ; End of function AIBinder_getCallingPid
.text:000000000000A7A0 ; ---------------------------------------------------------------------------
.text:000000000000A7A4                 ALIGN 8
.text:000000000000A7A8 ; =============== S U B R O U T I N E =======================================
.text:000000000000A7A8 ; Attributes: bp-based frame
.text:000000000000A7A8                 EXPORT AIBinder_decStrong
.text:000000000000A7A8 AIBinder_decStrong                      ; DATA XREF: LOAD:0000000000001398↑o
.text:000000000000A7A8 var_28          = -0x28
.text:000000000000A7A8 var_20          = -0x20
.text:000000000000A7A8 var_10          = -0x10
.text:000000000000A7A8 var_s0          =  0
.text:000000000000A7A8 ; __unwind {
.text:000000000000A7A8                 SUB             SP, SP, #0x40
.text:000000000000A7AC                 STR             X21, [SP,#0x30+var_20]
.text:000000000000A7B0                 STP             X20, X19, [SP,#0x30+var_10]
.text:000000000000A7B4                 STP             X29, X30, [SP,#0x30+var_s0]
.text:000000000000A7B8                 ADD             X29, SP, #0x30
.text:000000000000A7BC                 MRS             X20, #3, c13, c0, #2
.text:000000000000A7C0                 LDR             X8, [X20,#0x28]
.text:000000000000A7C4                 STR             X8, [SP,#0x30+var_28]
.text:000000000000A7C8                 CBZ             X0, loc_A7E4
.text:000000000000A7CC                 LDR             X8, [X0]
.text:000000000000A7D0                 MOV             X1, XZR ; void *
.text:000000000000A7D4                 LDUR            X8, [X8,#-0x18]
.text:000000000000A7D8                 ADD             X0, X0, X8 ; this
.text:000000000000A7DC                 BL              ._ZNK7android7RefBase9decStrongEPKv ; android::RefBase::decStrong(void const*)
.text:000000000000A7E0                 B               loc_A7F0
.text:000000000000A7E4 ; ---------------------------------------------------------------------------
.text:000000000000A7E4 loc_A7E4                                ; CODE XREF: AIBinder_decStrong+20↑j
.text:000000000000A7E4                 BL              ._ZN7android4base21GetMinimumLogSeverityEv ; android::base::GetMinimumLogSeverity(void)
.text:000000000000A7E8                 CMP             W0, #4
.text:000000000000A7EC                 B.LE            loc_A814
.text:000000000000A7F0 loc_A7F0                                ; CODE XREF: AIBinder_decStrong+38↑j
.text:000000000000A7F0                                         ; AIBinder_decStrong+D0↓j
.text:000000000000A7F0                 LDR             X8, [X20,#0x28]
.text:000000000000A7F4                 LDR             X9, [SP,#0x30+var_28]
.text:000000000000A7F8                 CMP             X8, X9
.text:000000000000A7FC                 B.NE            loc_A87C
.text:000000000000A800                 LDP             X29, X30, [SP,#0x30+var_s0]
.text:000000000000A804                 LDP             X20, X19, [SP,#0x30+var_10]
.text:000000000000A808                 LDR             X21, [SP,#0x30+var_20]
.text:000000000000A80C                 ADD             SP, SP, #0x40 ; '@'
.text:000000000000A810                 RET
.text:000000000000A814 ; ---------------------------------------------------------------------------
.text:000000000000A814 loc_A814                                ; CODE XREF: AIBinder_decStrong+44↑j
.text:000000000000A814                 BL              .__errno
.text:000000000000A818                 ADRP            X1, #aFrameworksNati@PAGE ; "frameworks/native/libs/binder/ndk/ibind"...
.text:000000000000A81C                 LDR             W21, [X0]
.text:000000000000A820                 MOV             X19, X0
.text:000000000000A824                 ADD             X1, X1, #aFrameworksNati@PAGEOFF ; "frameworks/native/libs/binder/ndk/ibind"...
.text:000000000000A828                 MOV             W2, #0x1BF
.text:000000000000A82C                 MOV             W6, #0xFFFFFFFF
.text:000000000000A830                 MOV             X0, SP
.text:000000000000A834                 MOV             W3, WZR
.text:000000000000A838                 MOV             W4, #4
.text:000000000000A83C                 MOV             X5, XZR
.text:000000000000A840                 BL              ._ZN7android4base10LogMessageC1EPKcjNS0_5LogIdENS0_11LogSeverityES3_i ; android::base::LogMessage::LogMessage(char const*,uint,android::base::LogId,android::base::LogSeverity,char const*,int)
.text:000000000000A844                 MOV             X0, SP  ; this
.text:000000000000A848                 BL              ._ZN7android4base10LogMessage6streamEv ; android::base::LogMessage::stream(void)
.text:000000000000A84C                 ADRP            X1, #aAibinderDecstr_0@PAGE ; "AIBinder_decStrong"
.text:000000000000A850                 ADD             X1, X1, #aAibinderDecstr_0@PAGEOFF ; "AIBinder_decStrong"
.text:000000000000A854                 MOV             W2, #0x12
.text:000000000000A858                 BL              sub_B548
.text:000000000000A85C                 ADRP            X1, #aOnNullBinder@PAGE ; ": on null binder"
.text:000000000000A860                 ADD             X1, X1, #aOnNullBinder@PAGEOFF ; ": on null binder"
.text:000000000000A864                 MOV             W2, #0x10
.text:000000000000A868                 BL              sub_B548
.text:000000000000A86C                 MOV             X0, SP  ; this
.text:000000000000A870                 BL              ._ZN7android4base10LogMessageD1Ev ; android::base::LogMessage::~LogMessage()
.text:000000000000A874                 STR             W21, [X19]
.text:000000000000A878                 B               loc_A7F0
.text:000000000000A87C ; ---------------------------------------------------------------------------
.text:000000000000A87C loc_A87C                                ; CODE XREF: AIBinder_decStrong+54↑j
.text:000000000000A87C                 BL              .__stack_chk_fail
.text:000000000000A87C ; } // starts at A7A8
.text:000000000000A87C ; End of function AIBinder_decStrong
.text:000000000000A880 ; =============== S U B R O U T I N E =======================================
.text:000000000000A880 ; Attributes: bp-based frame
.text:000000000000A880                 EXPORT AIBinder_debugGetRefCount
.text:000000000000A880 AIBinder_debugGetRefCount               ; DATA XREF: LOAD:00000000000019B0↑o
.text:000000000000A880 var_28          = -0x28
.text:000000000000A880 var_20          = -0x20
.text:000000000000A880 var_10          = -0x10
.text:000000000000A880 var_s0          =  0
.text:000000000000A880 ; __unwind {
.text:000000000000A880                 SUB             SP, SP, #0x40
.text:000000000000A884                 STR             X21, [SP,#0x30+var_20]
.text:000000000000A888                 STP             X20, X19, [SP,#0x30+var_10]
.text:000000000000A88C                 STP             X29, X30, [SP,#0x30+var_s0]
.text:000000000000A890                 ADD             X29, SP, #0x30
.text:000000000000A894                 MRS             X20, #3, c13, c0, #2
.text:000000000000A898                 LDR             X8, [X20,#0x28]
.text:000000000000A89C                 STR             X8, [SP,#0x30+var_28]
.text:000000000000A8A0                 CBZ             X0, loc_A8C8
.text:000000000000A8A4                 LDR             X8, [X0]
.text:000000000000A8A8                 LDUR            X8, [X8,#-0x18]
.text:000000000000A8AC                 ADD             X0, X0, X8 ; this
.text:000000000000A8B0                 BL              ._ZNK7android7RefBase14getStrongCountEv ; android::RefBase::getStrongCount(void)
.text:000000000000A8B4                 LDR             X8, [X20,#0x28]
.text:000000000000A8B8                 LDR             X9, [SP,#0x30+var_28]
.text:000000000000A8BC                 CMP             X8, X9
.text:000000000000A8C0                 B.EQ            loc_A8E8
.text:000000000000A8C4                 B               loc_A964
.text:000000000000A8C8 ; ---------------------------------------------------------------------------
.text:000000000000A8C8 loc_A8C8                                ; CODE XREF: AIBinder_debugGetRefCount+20↑j
.text:000000000000A8C8                 BL              ._ZN7android4base21GetMinimumLogSeverityEv ; android::base::GetMinimumLogSeverity(void)
.text:000000000000A8CC                 CMP             W0, #4
.text:000000000000A8D0                 B.LE            loc_A8FC
.text:000000000000A8D4 loc_A8D4                                ; CODE XREF: AIBinder_debugGetRefCount+E0↓j
.text:000000000000A8D4                 LDR             X8, [X20,#0x28]
.text:000000000000A8D8                 LDR             X9, [SP,#0x30+var_28]
.text:000000000000A8DC                 CMP             X8, X9
.text:000000000000A8E0                 B.NE            loc_A964
.text:000000000000A8E4                 MOV             W0, #0xFFFFFFFF
.text:000000000000A8E8 loc_A8E8                                ; CODE XREF: AIBinder_debugGetRefCount+40↑j
.text:000000000000A8E8                 LDP             X29, X30, [SP,#0x30+var_s0]
.text:000000000000A8EC                 LDP             X20, X19, [SP,#0x30+var_10]
.text:000000000000A8F0                 LDR             X21, [SP,#0x30+var_20]
.text:000000000000A8F4                 ADD             SP, SP, #0x40 ; '@'
.text:000000000000A8F8                 RET
.text:000000000000A8FC ; ---------------------------------------------------------------------------
.text:000000000000A8FC loc_A8FC                                ; CODE XREF: AIBinder_debugGetRefCount+50↑j
.text:000000000000A8FC                 BL              .__errno
.text:000000000000A900                 ADRP            X1, #aFrameworksNati@PAGE ; "frameworks/native/libs/binder/ndk/ibind"...
.text:000000000000A904                 LDR             W21, [X0]
.text:000000000000A908                 MOV             X19, X0
.text:000000000000A90C                 ADD             X1, X1, #aFrameworksNati@PAGEOFF ; "frameworks/native/libs/binder/ndk/ibind"...
.text:000000000000A910                 MOV             W2, #0x1C7
.text:000000000000A914                 MOV             W6, #0xFFFFFFFF
.text:000000000000A918                 MOV             X0, SP
.text:000000000000A91C                 MOV             W3, WZR
.text:000000000000A920                 MOV             W4, #4
.text:000000000000A924                 MOV             X5, XZR
.text:000000000000A928                 BL              ._ZN7android4base10LogMessageC1EPKcjNS0_5LogIdENS0_11LogSeverityES3_i ; android::base::LogMessage::LogMessage(char const*,uint,android::base::LogId,android::base::LogSeverity,char const*,int)
.text:000000000000A92C                 MOV             X0, SP  ; this
.text:000000000000A930                 BL              ._ZN7android4base10LogMessage6streamEv ; android::base::LogMessage::stream(void)
.text:000000000000A934                 ADRP            X1, #aAibinderDebugg_0@PAGE ; "AIBinder_debugGetRefCount"
.text:000000000000A938                 ADD             X1, X1, #aAibinderDebugg_0@PAGEOFF ; "AIBinder_debugGetRefCount"
.text:000000000000A93C                 MOV             W2, #0x19
.text:000000000000A940                 BL              sub_B548
.text:000000000000A944                 ADRP            X1, #aOnNullBinder@PAGE ; ": on null binder"
.text:000000000000A948                 ADD             X1, X1, #aOnNullBinder@PAGEOFF ; ": on null binder"
.text:000000000000A94C                 MOV             W2, #0x10
.text:000000000000A950                 BL              sub_B548
.text:000000000000A954                 MOV             X0, SP  ; this
.text:000000000000A958                 BL              ._ZN7android4base10LogMessageD1Ev ; android::base::LogMessage::~LogMessage()
.text:000000000000A95C                 STR             W21, [X19]
.text:000000000000A960                 B               loc_A8D4
.text:000000000000A964 ; ---------------------------------------------------------------------------
.text:000000000000A964 loc_A964                                ; CODE XREF: AIBinder_debugGetRefCount+44↑j
.text:000000000000A964                                         ; AIBinder_debugGetRefCount+60↑j
.text:000000000000A964                 BL              .__stack_chk_fail
.text:000000000000A964 ; } // starts at A880
.text:000000000000A964 ; End of function AIBinder_debugGetRefCount
.text:000000000000A968 ; =============== S U B R O U T I N E =======================================
.text:000000000000A968                 EXPORT AIBinder_associateClass
.text:000000000000A968 AIBinder_associateClass                 ; DATA XREF: LOAD:0000000000001998↑o
.text:000000000000A968 var_60          = -0x60
.text:000000000000A968 var_58          = -0x58
.text:000000000000A968 s               = -0x50
.text:000000000000A968 var_48          = -0x48
.text:000000000000A968 var_40          = -0x40
.text:000000000000A968 var_30          = -0x30
.text:000000000000A968 var_20          = -0x20
.text:000000000000A968 var_10          = -0x10
.text:000000000000A968 ; FUNCTION CHUNK AT .text:0000000000008150 SIZE 000003D8 BYTES
.text:000000000000A968 ; __unwind {
.text:000000000000A968                 CBZ             X0, locret_A970
.text:000000000000A96C                 B               loc_8150
.text:000000000000A970 ; ---------------------------------------------------------------------------
.text:000000000000A970 locret_A970                             ; CODE XREF: AIBinder_associateClass↑j
.text:000000000000A970                 RET
.text:000000000000A970 ; } // starts at A968
.text:000000000000A970 ; End of function AIBinder_associateClass
.text:000000000000A970 ; ---------------------------------------------------------------------------
.text:000000000000A974                 ALIGN 8
.text:000000000000A978 ; =============== S U B R O U T I N E =======================================
.text:000000000000A978                 EXPORT AIBinder_getClass
.text:000000000000A978 AIBinder_getClass                       ; DATA XREF: LOAD:00000000000017A0↑o
.text:000000000000A978 ; __unwind {
.text:000000000000A978                 CBZ             X0, locret_A980
.text:000000000000A97C                 LDR             X0, [X0,#8]
.text:000000000000A980 locret_A980                             ; CODE XREF: AIBinder_getClass↑j
.text:000000000000A980                 RET
.text:000000000000A980 ; } // starts at A978
.text:000000000000A980 ; End of function AIBinder_getClass
.text:000000000000A980 ; ---------------------------------------------------------------------------
.text:000000000000A984                 ALIGN 8
.text:000000000000A988 ; =============== S U B R O U T I N E =======================================
.text:000000000000A988 ; Attributes: bp-based frame
.text:000000000000A988                 EXPORT AIBinder_getUserData
.text:000000000000A988 AIBinder_getUserData                    ; DATA XREF: LOAD:00000000000016F8↑o
.text:000000000000A988 var_s0          =  0
.text:000000000000A988 ; __unwind {
.text:000000000000A988                 CBZ             X0, locret_A9AC
.text:000000000000A98C                 STP             X29, X30, [SP,#-0x10+var_s0]!
.text:000000000000A990                 MOV             X29, SP
.text:000000000000A994                 LDR             X8, [X0]
.text:000000000000A998                 LDR             X8, [X8,#0x18]
.text:000000000000A99C                 BLR             X8
.text:000000000000A9A0                 LDP             X29, X30, [SP+var_s0],#0x10
.text:000000000000A9A4                 CBZ             X0, locret_A9AC
.text:000000000000A9A8                 LDR             X0, [X0,#0x28]
.text:000000000000A9AC locret_A9AC                             ; CODE XREF: AIBinder_getUserData↑j
.text:000000000000A9AC                                         ; AIBinder_getUserData+1C↑j
.text:000000000000A9AC                 RET
.text:000000000000A9AC ; } // starts at A988
.text:000000000000A9AC ; End of function AIBinder_getUserData
.text:000000000000A9B0 ; =============== S U B R O U T I N E =======================================
.text:000000000000A9B0 ; Attributes: bp-based frame
.text:000000000000A9B0                 EXPORT AIBinder_prepareTransaction
.text:000000000000A9B0 AIBinder_prepareTransaction             ; DATA XREF: LOAD:00000000000011A0↑o
.text:000000000000A9B0 var_40          = -0x40
.text:000000000000A9B0 var_38          = -0x38
.text:000000000000A9B0 var_30          = -0x30
.text:000000000000A9B0 var_20          = -0x20
.text:000000000000A9B0 var_10          = -0x10
.text:000000000000A9B0 var_s0          =  0
.text:000000000000A9B0 ; __unwind {
.text:000000000000A9B0                 SUB             SP, SP, #0x50
.text:000000000000A9B4                 STP             X24, X23, [SP,#0x40+var_30]
.text:000000000000A9B8                 STP             X22, X21, [SP,#0x40+var_20]
.text:000000000000A9BC                 STP             X20, X19, [SP,#0x40+var_10]
.text:000000000000A9C0                 STP             X29, X30, [SP,#0x40+var_s0]
.text:000000000000A9C4                 ADD             X29, SP, #0x40
.text:000000000000A9C8                 MRS             X23, #3, c13, c0, #2
.text:000000000000A9CC                 LDR             X8, [X23,#0x28]
.text:000000000000A9D0                 STR             X8, [SP,#0x40+var_38]
.text:000000000000A9D4                 CBZ             X0, loc_AABC
.text:000000000000A9D8                 MOV             X19, X1
.text:000000000000A9DC                 CBZ             X1, loc_AABC
.text:000000000000A9E0                 LDR             X24, [X0,#8]
.text:000000000000A9E4                 MOV             X20, X0
.text:000000000000A9E8                 CBZ             X24, loc_AB38
.text:000000000000A9EC                 LDR             X8, [X20]
.text:000000000000A9F0                 MOV             X0, X20
.text:000000000000A9F4                 LDR             X9, [X8,#0x10]
.text:000000000000A9F8                 MOV             X8, SP
.text:000000000000A9FC                 BLR             X9
.text:000000000000AA00                 LDR             X0, [SP,#0x40+var_40]
.text:000000000000AA04                 LDR             X8, [X0]
.text:000000000000AA08                 LDR             X8, [X8,#0x68]
.text:000000000000AA0C                 BLR             X8
.text:000000000000AA10                 LDR             X8, [SP,#0x40+var_40]
.text:000000000000AA14                 MOV             X21, X0
.text:000000000000AA18                 CBZ             X8, loc_AA30
.text:000000000000AA1C                 LDR             X9, [X8]
.text:000000000000AA20                 MOV             X1, SP  ; void *
.text:000000000000AA24                 LDUR            X9, [X9,#-0x18]
.text:000000000000AA28                 ADD             X0, X8, X9 ; this
.text:000000000000AA2C                 BL              ._ZNK7android7RefBase9decStrongEPKv ; android::RefBase::decStrong(void const*)
.text:000000000000AA30 loc_AA30                                ; CODE XREF: AIBinder_prepareTransaction+68↑j
.text:000000000000AA30                 CBNZ            X21, loc_AA40
.text:000000000000AA34                 BL              ._ZN7android4base21GetMinimumLogSeverityEv ; android::base::GetMinimumLogSeverity(void)
.text:000000000000AA38                 CMP             W0, #3
.text:000000000000AA3C                 B.LE            loc_ABE0
.text:000000000000AA40 loc_AA40                                ; CODE XREF: AIBinder_prepareTransaction:loc_AA30↑j
.text:000000000000AA40                                         ; AIBinder_prepareTransaction+29C↓j
.text:000000000000AA40                 MOV             W0, #0x18 ; unsigned __int64
.text:000000000000AA44                 BL              ._Znwm  ; operator new(ulong)
.text:000000000000AA48                 MOV             X21, X0
.text:000000000000AA4C                 MOV             W0, #0x78 ; 'x' ; unsigned __int64
.text:000000000000AA50                 BL              ._Znwm  ; operator new(ulong)
.text:000000000000AA54                 MOV             X22, X0
.text:000000000000AA58                 BL              ._ZN7android6ParcelC1Ev ; android::Parcel::Parcel(void)
.text:000000000000AA5C                 MOV             W8, #1
.text:000000000000AA60                 STP             X20, X22, [X21]
.text:000000000000AA64                 ADD             X1, X24, #0x20 ; ' ' ; android::String16 *
.text:000000000000AA68                 MOV             X0, X22 ; this
.text:000000000000AA6C                 STRB            W8, [X21,#0x10]
.text:000000000000AA70                 STR             X21, [X19]
.text:000000000000AA74                 BL              ._ZN7android6Parcel19writeInterfaceTokenERKNS_8String16E ; android::Parcel::writeInterfaceToken(android::String16 const&)
.text:000000000000AA78                 BL              sub_E118
.text:000000000000AA7C                 MOV             W20, W0
.text:000000000000AA80                 CBZ             W0, loc_AB48
.text:000000000000AA84                 LDR             X21, [X19]
.text:000000000000AA88                 CBZ             X21, loc_AAB4
.text:000000000000AA8C                 LDRB            W8, [X21,#0x10]
.text:000000000000AA90                 CBZ             W8, loc_AAAC
.text:000000000000AA94                 LDR             X22, [X21,#8]
.text:000000000000AA98                 CBZ             X22, loc_AAAC
.text:000000000000AA9C                 MOV             X0, X22 ; this
.text:000000000000AAA0                 BL              ._ZN7android6ParcelD1Ev ; android::Parcel::~Parcel()
.text:000000000000AAA4                 MOV             X0, X22 ; void *
.text:000000000000AAA8                 BL              ._ZdlPv ; operator delete(void *)
.text:000000000000AAAC loc_AAAC                                ; CODE XREF: AIBinder_prepareTransaction+E0↑j
.text:000000000000AAAC                                         ; AIBinder_prepareTransaction+E8↑j
.text:000000000000AAAC                 MOV             X0, X21 ; void *
.text:000000000000AAB0                 BL              ._ZdlPv ; operator delete(void *)
.text:000000000000AAB4 loc_AAB4                                ; CODE XREF: AIBinder_prepareTransaction+D8↑j
.text:000000000000AAB4                 STR             XZR, [X19]
.text:000000000000AAB8                 B               loc_AB48
.text:000000000000AABC ; ---------------------------------------------------------------------------
.text:000000000000AABC loc_AABC                                ; CODE XREF: AIBinder_prepareTransaction+24↑j
.text:000000000000AABC                                         ; AIBinder_prepareTransaction+2C↑j
.text:000000000000AABC                 MOV             W20, #0x80000008
.text:000000000000AAC4                 BL              ._ZN7android4base21GetMinimumLogSeverityEv ; android::base::GetMinimumLogSeverity(void)
.text:000000000000AAC8                 CMP             W0, #4
.text:000000000000AACC                 B.GT            loc_AB48
.text:000000000000AAD0                 BL              .__errno
.text:000000000000AAD4                 ADRP            X1, #aFrameworksNati@PAGE ; "frameworks/native/libs/binder/ndk/ibind"...
.text:000000000000AAD8                 LDR             W21, [X0]
.text:000000000000AADC                 MOV             X19, X0
.text:000000000000AAE0                 ADD             X1, X1, #aFrameworksNati@PAGEOFF ; "frameworks/native/libs/binder/ndk/ibind"...
.text:000000000000AAE4                 MOV             W2, #0x1ED
.text:000000000000AAE8                 MOV             W6, #0xFFFFFFFF
.text:000000000000AAEC                 MOV             X0, SP
.text:000000000000AAF0                 MOV             W3, WZR
.text:000000000000AAF4                 MOV             W4, #4
.text:000000000000AAF8                 MOV             X5, XZR
.text:000000000000AAFC                 BL              ._ZN7android4base10LogMessageC1EPKcjNS0_5LogIdENS0_11LogSeverityES3_i ; android::base::LogMessage::LogMessage(char const*,uint,android::base::LogId,android::base::LogSeverity,char const*,int)
.text:000000000000AB00                 MOV             X0, SP  ; this
.text:000000000000AB04                 BL              ._ZN7android4base10LogMessage6streamEv ; android::base::LogMessage::stream(void)
.text:000000000000AB08                 ADRP            X1, #aAibinderPrepar_0@PAGE ; "AIBinder_prepareTransaction"
.text:000000000000AB0C                 ADD             X1, X1, #aAibinderPrepar_0@PAGEOFF ; "AIBinder_prepareTransaction"
.text:000000000000AB10                 MOV             W2, #0x1B
.text:000000000000AB14                 BL              sub_B548
.text:000000000000AB18                 ADRP            X1, #aRequiresNonNul@PAGE ; ": requires non-null parameters."
.text:000000000000AB1C                 ADD             X1, X1, #aRequiresNonNul@PAGEOFF ; ": requires non-null parameters."
.text:000000000000AB20                 MOV             W2, #0x1F
.text:000000000000AB24                 BL              sub_B548
.text:000000000000AB28                 MOV             X0, SP  ; this
.text:000000000000AB2C                 BL              ._ZN7android4base10LogMessageD1Ev ; android::base::LogMessage::~LogMessage()
.text:000000000000AB30                 STR             W21, [X19]
.text:000000000000AB34                 B               loc_AB48
.text:000000000000AB38 ; ---------------------------------------------------------------------------
.text:000000000000AB38 loc_AB38                                ; CODE XREF: AIBinder_prepareTransaction+38↑j
.text:000000000000AB38                 BL              ._ZN7android4base21GetMinimumLogSeverityEv ; android::base::GetMinimumLogSeverity(void)
.text:000000000000AB3C                 CMP             W0, #4
.text:000000000000AB40                 B.LE            loc_AB74
.text:000000000000AB44                 MOV             W20, #0xFFFFFFDA
.text:000000000000AB48 loc_AB48                                ; CODE XREF: AIBinder_prepareTransaction+D0↑j
.text:000000000000AB48                                         ; AIBinder_prepareTransaction+108↑j ...
.text:000000000000AB48                 LDR             X8, [X23,#0x28]
.text:000000000000AB4C                 LDR             X9, [SP,#0x40+var_38]
.text:000000000000AB50                 CMP             X8, X9
.text:000000000000AB54                 B.NE            loc_AC50
.text:000000000000AB58                 MOV             W0, W20
.text:000000000000AB5C                 LDP             X29, X30, [SP,#0x40+var_s0]
.text:000000000000AB60                 LDP             X20, X19, [SP,#0x40+var_10]
.text:000000000000AB64                 LDP             X22, X21, [SP,#0x40+var_20]
.text:000000000000AB68                 LDP             X24, X23, [SP,#0x40+var_30]
.text:000000000000AB6C                 ADD             SP, SP, #0x50 ; 'P'
.text:000000000000AB70                 RET
.text:000000000000AB74 ; ---------------------------------------------------------------------------
.text:000000000000AB74 loc_AB74                                ; CODE XREF: AIBinder_prepareTransaction+190↑j
.text:000000000000AB74                 BL              .__errno
.text:000000000000AB78                 ADRP            X1, #aFrameworksNati@PAGE ; "frameworks/native/libs/binder/ndk/ibind"...
.text:000000000000AB7C                 LDR             W21, [X0]
.text:000000000000AB80                 MOV             X19, X0
.text:000000000000AB84                 ADD             X1, X1, #aFrameworksNati@PAGEOFF ; "frameworks/native/libs/binder/ndk/ibind"...
.text:000000000000AB88                 MOV             W2, #0x1F2
.text:000000000000AB8C                 MOV             W6, #0xFFFFFFFF
.text:000000000000AB90                 MOV             X0, SP
.text:000000000000AB94                 MOV             W3, WZR
.text:000000000000AB98                 MOV             W4, #4
.text:000000000000AB9C                 MOV             X5, XZR
.text:000000000000ABA0                 BL              ._ZN7android4base10LogMessageC1EPKcjNS0_5LogIdENS0_11LogSeverityES3_i ; android::base::LogMessage::LogMessage(char const*,uint,android::base::LogId,android::base::LogSeverity,char const*,int)
.text:000000000000ABA4                 MOV             X0, SP  ; this
.text:000000000000ABA8                 BL              ._ZN7android4base10LogMessage6streamEv ; android::base::LogMessage::stream(void)
.text:000000000000ABAC                 ADRP            X1, #aAibinderPrepar_0@PAGE ; "AIBinder_prepareTransaction"
.text:000000000000ABB0                 ADD             X1, X1, #aAibinderPrepar_0@PAGEOFF ; "AIBinder_prepareTransaction"
.text:000000000000ABB4                 MOV             W2, #0x1B
.text:000000000000ABB8                 BL              sub_B548
.text:000000000000ABBC                 ADRP            X1, #aClassMustBeDef@PAGE ; ": Class must be defined for a remote bi"...
.text:000000000000ABC0                 ADD             X1, X1, #aClassMustBeDef@PAGEOFF ; ": Class must be defined for a remote bi"...
.text:000000000000ABC4                 MOV             W2, #0x55 ; 'U'
.text:000000000000ABC8                 BL              sub_B548
.text:000000000000ABCC                 MOV             X0, SP  ; this
.text:000000000000ABD0                 BL              ._ZN7android4base10LogMessageD1Ev ; android::base::LogMessage::~LogMessage()
.text:000000000000ABD4                 MOV             W20, #0xFFFFFFDA
.text:000000000000ABD8                 STR             W21, [X19]
.text:000000000000ABDC                 B               loc_AB48
.text:000000000000ABE0 ; ---------------------------------------------------------------------------
.text:000000000000ABE0 loc_ABE0                                ; CODE XREF: AIBinder_prepareTransaction+8C↑j
.text:000000000000ABE0                 BL              .__errno
.text:000000000000ABE4                 ADRP            X1, #aFrameworksNati@PAGE ; "frameworks/native/libs/binder/ndk/ibind"...
.text:000000000000ABE8                 LDR             W22, [X0]
.text:000000000000ABEC                 MOV             X21, X0
.text:000000000000ABF0                 ADD             X1, X1, #aFrameworksNati@PAGEOFF ; "frameworks/native/libs/binder/ndk/ibind"...
.text:000000000000ABF4                 MOV             W2, #0x1F9
.text:000000000000ABF8                 MOV             W6, #0xFFFFFFFF
.text:000000000000ABFC                 MOV             X0, SP
.text:000000000000AC00                 MOV             W3, WZR
.text:000000000000AC04                 MOV             W4, #3
.text:000000000000AC08                 MOV             X5, XZR
.text:000000000000AC0C                 BL              ._ZN7android4base10LogMessageC1EPKcjNS0_5LogIdENS0_11LogSeverityES3_i ; android::base::LogMessage::LogMessage(char const*,uint,android::base::LogId,android::base::LogSeverity,char const*,int)
.text:000000000000AC10                 MOV             X0, SP  ; this
.text:000000000000AC14                 BL              ._ZN7android4base10LogMessage6streamEv ; android::base::LogMessage::stream(void)
.text:000000000000AC18                 ADRP            X1, #aABinderObjectA@PAGE ; "A binder object at "
.text:000000000000AC1C                 ADD             X1, X1, #aABinderObjectA@PAGEOFF ; "A binder object at "
.text:000000000000AC20                 MOV             W2, #0x13
.text:000000000000AC24                 BL              sub_B548
.text:000000000000AC28                 MOV             X1, X20
.text:000000000000AC2C                 BL              ._ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEPKv ; std::__1::basic_ostream<char,std::__1::char_traits<char>>::operator<<(void const*)
.text:000000000000AC30                 ADRP            X1, #aIsBeingTransac@PAGE ; " is being transacted on, however, this "...
.text:000000000000AC34                 ADD             X1, X1, #aIsBeingTransac@PAGEOFF ; " is being transacted on, however, this "...
.text:000000000000AC38                 MOV             W2, #0xCA
.text:000000000000AC3C                 BL              sub_B548
.text:000000000000AC40                 MOV             X0, SP  ; this
.text:000000000000AC44                 BL              ._ZN7android4base10LogMessageD1Ev ; android::base::LogMessage::~LogMessage()
.text:000000000000AC48                 STR             W22, [X21]
.text:000000000000AC4C                 B               loc_AA40
.text:000000000000AC50 ; ---------------------------------------------------------------------------
.text:000000000000AC50 loc_AC50                                ; CODE XREF: AIBinder_prepareTransaction+1A4↑j
.text:000000000000AC50                 BL              .__stack_chk_fail
.text:000000000000AC50 ; } // starts at A9B0
.text:000000000000AC50 ; End of function AIBinder_prepareTransaction
.text:000000000000AC50 ; ---------------------------------------------------------------------------
.text:000000000000AC54                 ALIGN 8
.text:000000000000AC58 ; =============== S U B R O U T I N E =======================================
.text:000000000000AC58 ; Attributes: bp-based frame
.text:000000000000AC58                 EXPORT AIBinder_transact
.text:000000000000AC58 AIBinder_transact                       ; DATA XREF: LOAD:00000000000015D8↑o
.text:000000000000AC58 var_50          = -0x50
.text:000000000000AC58 var_48          = -0x48
.text:000000000000AC58 var_40          = -0x40
.text:000000000000AC58 var_30          = -0x30
.text:000000000000AC58 var_20          = -0x20
.text:000000000000AC58 var_10          = -0x10
.text:000000000000AC58 var_s0          =  0
.text:000000000000AC58 ; __unwind {
.text:000000000000AC58                 SUB             SP, SP, #0x60
.text:000000000000AC5C                 STP             X26, X25, [SP,#0x50+var_40]
.text:000000000000AC60                 STP             X24, X23, [SP,#0x50+var_30]
.text:000000000000AC64                 STP             X22, X21, [SP,#0x50+var_20]
.text:000000000000AC68                 STP             X20, X19, [SP,#0x50+var_10]
.text:000000000000AC6C                 STP             X29, X30, [SP,#0x50+var_s0]
.text:000000000000AC70                 ADD             X29, SP, #0x50
.text:000000000000AC74                 MRS             X26, #3, c13, c0, #2
.text:000000000000AC78                 LDR             X8, [X26,#0x28]
.text:000000000000AC7C                 STR             X8, [SP,#0x50+var_48]
.text:000000000000AC80                 CBZ             X2, loc_ACEC
.text:000000000000AC84                 MOV             X19, X2
.text:000000000000AC88                 MOV             W23, W1
.text:000000000000AC8C                 SUB             W8, W1, #1
.text:000000000000AC90                 MOV             W9, #0xFFFFFF
.text:000000000000AC94                 CMP             W8, W9
.text:000000000000AC98                 B.CS            loc_AD68
.text:000000000000AC9C                 MOV             W20, W4
.text:000000000000ACA0                 CMP             W4, #2
.text:000000000000ACA4                 B.CC            loc_AD84
.text:000000000000ACA8                 BL              ._ZN7android4base21GetMinimumLogSeverityEv ; android::base::GetMinimumLogSeverity(void)
.text:000000000000ACAC                 CMP             W0, #4
.text:000000000000ACB0                 B.LE            loc_AFE0
.text:000000000000ACB4 loc_ACB4                                ; CODE XREF: AIBinder_transact+158↓j
.text:000000000000ACB4                 MOV             W20, #0xFFFFFFEA
.text:000000000000ACB8                 LDR             X21, [X19]
.text:000000000000ACBC                 CBZ             X21, loc_AE6C
.text:000000000000ACC0 loc_ACC0                                ; CODE XREF: AIBinder_transact+124↓j
.text:000000000000ACC0                                         ; AIBinder_transact+1F0↓j ...
.text:000000000000ACC0                 LDRB            W8, [X21,#0x10]
.text:000000000000ACC4                 CBZ             W8, loc_ACE0
.text:000000000000ACC8                 LDR             X22, [X21,#8]
.text:000000000000ACCC                 CBZ             X22, loc_ACE0
.text:000000000000ACD0                 MOV             X0, X22 ; this
.text:000000000000ACD4                 BL              ._ZN7android6ParcelD1Ev ; android::Parcel::~Parcel()
.text:000000000000ACD8                 MOV             X0, X22 ; void *
.text:000000000000ACDC                 BL              ._ZdlPv ; operator delete(void *)
.text:000000000000ACE0 loc_ACE0                                ; CODE XREF: AIBinder_transact+6C↑j
.text:000000000000ACE0                                         ; AIBinder_transact+74↑j
.text:000000000000ACE0                 MOV             X0, X21 ; void *
.text:000000000000ACE4                 BL              ._ZdlPv ; operator delete(void *)
.text:000000000000ACE8                 B               loc_AE6C
.text:000000000000ACEC ; ---------------------------------------------------------------------------
.text:000000000000ACEC loc_ACEC                                ; CODE XREF: AIBinder_transact+28↑j
.text:000000000000ACEC                 MOV             W20, #0x80000008
.text:000000000000ACF4                 BL              ._ZN7android4base21GetMinimumLogSeverityEv ; android::base::GetMinimumLogSeverity(void)
.text:000000000000ACF8                 CMP             W0, #4
.text:000000000000ACFC                 B.GT            loc_AE70
.text:000000000000AD00                 BL              .__errno
.text:000000000000AD04                 ADRP            X1, #aFrameworksNati@PAGE ; "frameworks/native/libs/binder/ndk/ibind"...
.text:000000000000AD08                 LDR             W21, [X0]
.text:000000000000AD0C                 MOV             X19, X0
.text:000000000000AD10                 ADD             X1, X1, #aFrameworksNati@PAGEOFF ; "frameworks/native/libs/binder/ndk/ibind"...
.text:000000000000AD14                 MOV             W2, #0x213
.text:000000000000AD18                 MOV             W6, #0xFFFFFFFF
.text:000000000000AD1C                 MOV             X0, SP
.text:000000000000AD20                 MOV             W3, WZR
.text:000000000000AD24                 MOV             W4, #4
.text:000000000000AD28                 MOV             X5, XZR
.text:000000000000AD2C                 BL              ._ZN7android4base10LogMessageC1EPKcjNS0_5LogIdENS0_11LogSeverityES3_i ; android::base::LogMessage::LogMessage(char const*,uint,android::base::LogId,android::base::LogSeverity,char const*,int)
.text:000000000000AD30                 MOV             X0, SP  ; this
.text:000000000000AD34                 BL              ._ZN7android4base10LogMessage6streamEv ; android::base::LogMessage::stream(void)
.text:000000000000AD38                 ADRP            X1, #aAibinderTransa_0@PAGE ; "AIBinder_transact"
.text:000000000000AD3C                 ADD             X1, X1, #aAibinderTransa_0@PAGEOFF ; "AIBinder_transact"
.text:000000000000AD40                 MOV             W2, #0x11
.text:000000000000AD44                 BL              sub_B548
.text:000000000000AD48                 ADRP            X1, #aRequiresNonNul_0@PAGE ; ": requires non-null in parameter"
.text:000000000000AD4C                 ADD             X1, X1, #aRequiresNonNul_0@PAGEOFF ; ": requires non-null in parameter"
.text:000000000000AD50                 MOV             W2, #0x20 ; ' '
.text:000000000000AD54                 BL              sub_B548
.text:000000000000AD58                 MOV             X0, SP  ; this
.text:000000000000AD5C                 BL              ._ZN7android4base10LogMessageD1Ev ; android::base::LogMessage::~LogMessage()
.text:000000000000AD60                 STR             W21, [X19]
.text:000000000000AD64                 B               loc_AE70
.text:000000000000AD68 ; ---------------------------------------------------------------------------
.text:000000000000AD68 loc_AD68                                ; CODE XREF: AIBinder_transact+40↑j
.text:000000000000AD68                 BL              ._ZN7android4base21GetMinimumLogSeverityEv ; android::base::GetMinimumLogSeverity(void)
.text:000000000000AD6C                 CMP             W0, #4
.text:000000000000AD70                 B.LE            loc_AF78
.text:000000000000AD74                 MOV             W20, #0xFFFFFFB6
.text:000000000000AD78                 LDR             X21, [X19]
.text:000000000000AD7C                 CBNZ            X21, loc_ACC0
.text:000000000000AD80                 B               loc_AE6C
.text:000000000000AD84 ; ---------------------------------------------------------------------------
.text:000000000000AD84 loc_AD84                                ; CODE XREF: AIBinder_transact+4C↑j
.text:000000000000AD84                 MOV             X22, X0
.text:000000000000AD88                 CBZ             X0, loc_AE50
.text:000000000000AD8C                 MOV             X21, X3
.text:000000000000AD90                 CBZ             X3, loc_AE50
.text:000000000000AD94                 LDR             X8, [X19]
.text:000000000000AD98                 CBZ             X8, loc_AE50
.text:000000000000AD9C                 LDR             X8, [X8]
.text:000000000000ADA0                 CMP             X8, X22
.text:000000000000ADA4                 B.EQ            loc_AEA0
.text:000000000000ADA8                 BL              ._ZN7android4base21GetMinimumLogSeverityEv ; android::base::GetMinimumLogSeverity(void)
.text:000000000000ADAC                 CMP             W0, #4
.text:000000000000ADB0                 B.GT            loc_ACB4
.text:000000000000ADB4                 BL              .__errno
.text:000000000000ADB8                 ADRP            X1, #aFrameworksNati@PAGE ; "frameworks/native/libs/binder/ndk/ibind"...
.text:000000000000ADBC                 LDR             W23, [X0]
.text:000000000000ADC0                 MOV             X21, X0
.text:000000000000ADC4                 ADD             X1, X1, #aFrameworksNati@PAGEOFF ; "frameworks/native/libs/binder/ndk/ibind"...
.text:000000000000ADC8                 MOV             W2, #0x22C
.text:000000000000ADCC                 MOV             W6, #0xFFFFFFFF
.text:000000000000ADD0                 MOV             X0, SP
.text:000000000000ADD4                 MOV             W3, WZR
.text:000000000000ADD8                 MOV             W4, #4
.text:000000000000ADDC                 MOV             X5, XZR
.text:000000000000ADE0                 BL              ._ZN7android4base10LogMessageC1EPKcjNS0_5LogIdENS0_11LogSeverityES3_i ; android::base::LogMessage::LogMessage(char const*,uint,android::base::LogId,android::base::LogSeverity,char const*,int)
.text:000000000000ADE4                 MOV             X0, SP  ; this
.text:000000000000ADE8                 BL              ._ZN7android4base10LogMessage6streamEv ; android::base::LogMessage::stream(void)
.text:000000000000ADEC                 ADRP            X1, #aAibinderTransa_0@PAGE ; "AIBinder_transact"
.text:000000000000ADF0                 MOV             W20, #0x11
.text:000000000000ADF4                 ADD             X1, X1, #aAibinderTransa_0@PAGEOFF ; "AIBinder_transact"
.text:000000000000ADF8                 MOV             X2, X20
.text:000000000000ADFC                 BL              sub_B548
.text:000000000000AE00                 ADRP            X1, #aParcelIsAssoci@PAGE ; ": parcel is associated with binder obje"...
.text:000000000000AE04                 ADD             X1, X1, #aParcelIsAssoci@PAGEOFF ; ": parcel is associated with binder obje"...
.text:000000000000AE08                 MOV             W2, #0x2A ; '*'
.text:000000000000AE0C                 BL              sub_B548
.text:000000000000AE10                 MOV             X1, X22
.text:000000000000AE14                 BL              ._ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEPKv ; std::__1::basic_ostream<char,std::__1::char_traits<char>>::operator<<(void const*)
.text:000000000000AE18                 ADRP            X1, #aButCalledWith@PAGE ; " but called with "
.text:000000000000AE1C                 ADD             X1, X1, #aButCalledWith@PAGEOFF ; " but called with "
.text:000000000000AE20                 MOV             X2, X20
.text:000000000000AE24                 BL              sub_B548
.text:000000000000AE28                 LDR             X8, [X19]
.text:000000000000AE2C                 LDR             X1, [X8]
.text:000000000000AE30                 BL              ._ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEPKv ; std::__1::basic_ostream<char,std::__1::char_traits<char>>::operator<<(void const*)
.text:000000000000AE34                 MOV             X0, SP  ; this
.text:000000000000AE38                 BL              ._ZN7android4base10LogMessageD1Ev ; android::base::LogMessage::~LogMessage()
.text:000000000000AE3C                 MOV             W20, #0xFFFFFFEA
.text:000000000000AE40                 STR             W23, [X21]
.text:000000000000AE44                 LDR             X21, [X19]
.text:000000000000AE48                 CBNZ            X21, loc_ACC0
.text:000000000000AE4C                 B               loc_AE6C
.text:000000000000AE50 ; ---------------------------------------------------------------------------
.text:000000000000AE50 loc_AE50                                ; CODE XREF: AIBinder_transact+130↑j
.text:000000000000AE50                                         ; AIBinder_transact+138↑j ...
.text:000000000000AE50                 MOV             W20, #0x80000008
.text:000000000000AE58                 BL              ._ZN7android4base21GetMinimumLogSeverityEv ; android::base::GetMinimumLogSeverity(void)
.text:000000000000AE5C                 CMP             W0, #4
.text:000000000000AE60                 B.LE            loc_B050
.text:000000000000AE64 loc_AE64                                ; CODE XREF: AIBinder_transact+2DC↓j
.text:000000000000AE64                 LDR             X21, [X19]
.text:000000000000AE68                 CBNZ            X21, loc_ACC0
.text:000000000000AE6C loc_AE6C                                ; CODE XREF: AIBinder_transact+64↑j
.text:000000000000AE6C                                         ; AIBinder_transact+90↑j ...
.text:000000000000AE6C                 STR             XZR, [X19]
.text:000000000000AE70 loc_AE70                                ; CODE XREF: AIBinder_transact+A4↑j
.text:000000000000AE70                                         ; AIBinder_transact+10C↑j
.text:000000000000AE70                 LDR             X8, [X26,#0x28]
.text:000000000000AE74                 LDR             X9, [SP,#0x50+var_48]
.text:000000000000AE78                 CMP             X8, X9
.text:000000000000AE7C                 B.NE            loc_B0C0
.text:000000000000AE80                 MOV             W0, W20
.text:000000000000AE84                 LDP             X29, X30, [SP,#0x50+var_s0]
.text:000000000000AE88                 LDP             X20, X19, [SP,#0x50+var_10]
.text:000000000000AE8C                 LDP             X22, X21, [SP,#0x50+var_20]
.text:000000000000AE90                 LDP             X24, X23, [SP,#0x50+var_30]
.text:000000000000AE94                 LDP             X26, X25, [SP,#0x50+var_40]
.text:000000000000AE98                 ADD             SP, SP, #0x60 ; '`'
.text:000000000000AE9C                 RET
.text:000000000000AEA0 ; ---------------------------------------------------------------------------
.text:000000000000AEA0 loc_AEA0                                ; CODE XREF: AIBinder_transact+14C↑j
.text:000000000000AEA0                 MOV             W0, #0x18 ; unsigned __int64
.text:000000000000AEA4                 BL              ._Znwm  ; operator new(ulong)
.text:000000000000AEA8                 MOV             X24, X0
.text:000000000000AEAC                 MOV             W0, #0x78 ; 'x' ; unsigned __int64
.text:000000000000AEB0                 BL              ._Znwm  ; operator new(ulong)
.text:000000000000AEB4                 MOV             X25, X0
.text:000000000000AEB8                 BL              ._ZN7android6ParcelC1Ev ; android::Parcel::Parcel(void)
.text:000000000000AEBC                 STR             X24, [X21]
.text:000000000000AEC0                 MOV             W8, #1
.text:000000000000AEC4                 LDR             X9, [X22]
.text:000000000000AEC8                 MOV             X0, X22
.text:000000000000AECC                 STP             X22, X25, [X24]
.text:000000000000AED0                 STRB            W8, [X24,#0x10]
.text:000000000000AED4                 MOV             X8, SP
.text:000000000000AED8                 LDR             X9, [X9,#0x10]
.text:000000000000AEDC                 BLR             X9
.text:000000000000AEE0                 LDR             X0, [SP,#0x50+var_50]
.text:000000000000AEE4                 MOV             W1, W23
.text:000000000000AEE8                 LDR             X8, [X19]
.text:000000000000AEEC                 MOV             W4, W20
.text:000000000000AEF0                 LDR             X9, [X21]
.text:000000000000AEF4                 LDR             X10, [X0]
.text:000000000000AEF8                 LDR             X2, [X8,#8]
.text:000000000000AEFC                 LDR             X3, [X9,#8]
.text:000000000000AF00                 LDR             X8, [X10,#0x28]
.text:000000000000AF04                 BLR             X8
.text:000000000000AF08                 LDR             X8, [SP,#0x50+var_50]
.text:000000000000AF0C                 MOV             W20, W0
.text:000000000000AF10                 CBZ             X8, loc_AF28
.text:000000000000AF14                 LDR             X9, [X8]
.text:000000000000AF18                 MOV             X1, SP  ; void *
.text:000000000000AF1C                 LDUR            X9, [X9,#-0x18]
.text:000000000000AF20                 ADD             X0, X8, X9 ; this
.text:000000000000AF24                 BL              ._ZNK7android7RefBase9decStrongEPKv ; android::RefBase::decStrong(void const*)
.text:000000000000AF28 loc_AF28                                ; CODE XREF: AIBinder_transact+2B8↑j
.text:000000000000AF28                 MOV             W0, W20
.text:000000000000AF2C                 BL              sub_E118
.text:000000000000AF30                 MOV             W20, W0
.text:000000000000AF34                 CBZ             W0, loc_AE64
.text:000000000000AF38                 LDR             X22, [X21]
.text:000000000000AF3C                 CBZ             X22, loc_AF68
.text:000000000000AF40                 LDRB            W8, [X22,#0x10]
.text:000000000000AF44                 CBZ             W8, loc_AF60
.text:000000000000AF48                 LDR             X23, [X22,#8]
.text:000000000000AF4C                 CBZ             X23, loc_AF60
.text:000000000000AF50                 MOV             X0, X23 ; this
.text:000000000000AF54                 BL              ._ZN7android6ParcelD1Ev ; android::Parcel::~Parcel()
.text:000000000000AF58                 MOV             X0, X23 ; void *
.text:000000000000AF5C                 BL              ._ZdlPv ; operator delete(void *)
.text:000000000000AF60 loc_AF60                                ; CODE XREF: AIBinder_transact+2EC↑j
.text:000000000000AF60                                         ; AIBinder_transact+2F4↑j
.text:000000000000AF60                 MOV             X0, X22 ; void *
.text:000000000000AF64                 BL              ._ZdlPv ; operator delete(void *)
.text:000000000000AF68 loc_AF68                                ; CODE XREF: AIBinder_transact+2E4↑j
.text:000000000000AF68                 STR             XZR, [X21]
.text:000000000000AF6C                 LDR             X21, [X19]
.text:000000000000AF70                 CBNZ            X21, loc_ACC0
.text:000000000000AF74                 B               loc_AE6C
.text:000000000000AF78 ; ---------------------------------------------------------------------------
.text:000000000000AF78 loc_AF78                                ; CODE XREF: AIBinder_transact+118↑j
.text:000000000000AF78                 BL              .__errno
.text:000000000000AF7C                 ADRP            X1, #aFrameworksNati@PAGE ; "frameworks/native/libs/binder/ndk/ibind"...
.text:000000000000AF80                 LDR             W22, [X0]
.text:000000000000AF84                 MOV             X21, X0
.text:000000000000AF88                 ADD             X1, X1, #aFrameworksNati@PAGEOFF ; "frameworks/native/libs/binder/ndk/ibind"...
.text:000000000000AF8C                 MOV             W2, #0x21D
.text:000000000000AF90                 MOV             W6, #0xFFFFFFFF
.text:000000000000AF94                 MOV             X0, SP
.text:000000000000AF98                 MOV             W3, WZR
.text:000000000000AF9C                 MOV             W4, #4
.text:000000000000AFA0                 MOV             X5, XZR
.text:000000000000AFA4                 BL              ._ZN7android4base10LogMessageC1EPKcjNS0_5LogIdENS0_11LogSeverityES3_i ; android::base::LogMessage::LogMessage(char const*,uint,android::base::LogId,android::base::LogSeverity,char const*,int)
.text:000000000000AFA8                 MOV             X0, SP  ; this
.text:000000000000AFAC                 BL              ._ZN7android4base10LogMessage6streamEv ; android::base::LogMessage::stream(void)
.text:000000000000AFB0                 ADRP            X1, #aAibinderTransa_0@PAGE ; "AIBinder_transact"
.text:000000000000AFB4                 ADD             X1, X1, #aAibinderTransa_0@PAGEOFF ; "AIBinder_transact"
.text:000000000000AFB8                 MOV             W2, #0x11
.text:000000000000AFBC                 BL              sub_B548
.text:000000000000AFC0                 ADRP            X1, #aOnlyUserDefine@PAGE ; ": Only user-defined transactions can be"...
.text:000000000000AFC4                 ADD             X1, X1, #aOnlyUserDefine@PAGEOFF ; ": Only user-defined transactions can be"...
.text:000000000000AFC8                 MOV             W2, #0x3A ; ':'
.text:000000000000AFCC                 BL              sub_B548
.text:000000000000AFD0                 MOV             X0, SP  ; this
.text:000000000000AFD4                 BL              ._ZN7android4base10LogMessageD1Ev ; android::base::LogMessage::~LogMessage()
.text:000000000000AFD8                 MOV             W20, #0xFFFFFFB6
.text:000000000000AFDC                 B               loc_B0B0
.text:000000000000AFE0 ; ---------------------------------------------------------------------------
.text:000000000000AFE0 loc_AFE0                                ; CODE XREF: AIBinder_transact+58↑j
.text:000000000000AFE0                 BL              .__errno
.text:000000000000AFE4                 ADRP            X1, #aFrameworksNati@PAGE ; "frameworks/native/libs/binder/ndk/ibind"...
.text:000000000000AFE8                 LDR             W22, [X0]
.text:000000000000AFEC                 MOV             X21, X0
.text:000000000000AFF0                 ADD             X1, X1, #aFrameworksNati@PAGEOFF ; "frameworks/native/libs/binder/ndk/ibind"...
.text:000000000000AFF4                 MOV             W2, #0x222
.text:000000000000AFF8                 MOV             W6, #0xFFFFFFFF
.text:000000000000AFFC                 MOV             X0, SP
.text:000000000000B000                 MOV             W3, WZR
.text:000000000000B004                 MOV             W4, #4
.text:000000000000B008                 MOV             X5, XZR
.text:000000000000B00C                 BL              ._ZN7android4base10LogMessageC1EPKcjNS0_5LogIdENS0_11LogSeverityES3_i ; android::base::LogMessage::LogMessage(char const*,uint,android::base::LogId,android::base::LogSeverity,char const*,int)
.text:000000000000B010                 MOV             X0, SP  ; this
.text:000000000000B014                 BL              ._ZN7android4base10LogMessage6streamEv ; android::base::LogMessage::stream(void)
.text:000000000000B018                 ADRP            X1, #aAibinderTransa_0@PAGE ; "AIBinder_transact"
.text:000000000000B01C                 ADD             X1, X1, #aAibinderTransa_0@PAGEOFF ; "AIBinder_transact"
.text:000000000000B020                 MOV             W2, #0x11
.text:000000000000B024                 BL              sub_B548
.text:000000000000B028                 ADRP            X1, #aUnrecognizedFl@PAGE ; ": Unrecognized flags sent: "
.text:000000000000B02C                 ADD             X1, X1, #aUnrecognizedFl@PAGEOFF ; ": Unrecognized flags sent: "
.text:000000000000B030                 MOV             W2, #0x1B
.text:000000000000B034                 BL              sub_B548
.text:000000000000B038                 MOV             W1, W20
.text:000000000000B03C                 BL              ._ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEj ; std::__1::basic_ostream<char,std::__1::char_traits<char>>::operator<<(uint)
.text:000000000000B040                 MOV             X0, SP  ; this
.text:000000000000B044                 BL              ._ZN7android4base10LogMessageD1Ev ; android::base::LogMessage::~LogMessage()
.text:000000000000B048                 MOV             W20, #0xFFFFFFEA
.text:000000000000B04C                 B               loc_B0B0
.text:000000000000B050 ; ---------------------------------------------------------------------------
.text:000000000000B050 loc_B050                                ; CODE XREF: AIBinder_transact+208↑j
.text:000000000000B050                 BL              .__errno
.text:000000000000B054                 ADRP            X1, #aFrameworksNati@PAGE ; "frameworks/native/libs/binder/ndk/ibind"...
.text:000000000000B058                 LDR             W22, [X0]
.text:000000000000B05C                 MOV             X21, X0
.text:000000000000B060                 ADD             X1, X1, #aFrameworksNati@PAGEOFF ; "frameworks/native/libs/binder/ndk/ibind"...
.text:000000000000B064                 MOV             W2, #0x227
.text:000000000000B068                 MOV             W6, #0xFFFFFFFF
.text:000000000000B06C                 MOV             X0, SP
.text:000000000000B070                 MOV             W3, WZR
.text:000000000000B074                 MOV             W4, #4
.text:000000000000B078                 MOV             X5, XZR
.text:000000000000B07C                 BL              ._ZN7android4base10LogMessageC1EPKcjNS0_5LogIdENS0_11LogSeverityES3_i ; android::base::LogMessage::LogMessage(char const*,uint,android::base::LogId,android::base::LogSeverity,char const*,int)
.text:000000000000B080                 MOV             X0, SP  ; this
.text:000000000000B084                 BL              ._ZN7android4base10LogMessage6streamEv ; android::base::LogMessage::stream(void)
.text:000000000000B088                 ADRP            X1, #aAibinderTransa_0@PAGE ; "AIBinder_transact"
.text:000000000000B08C                 ADD             X1, X1, #aAibinderTransa_0@PAGEOFF ; "AIBinder_transact"
.text:000000000000B090                 MOV             W2, #0x11
.text:000000000000B094                 BL              sub_B548
.text:000000000000B098                 ADRP            X1, #aRequiresNonNul@PAGE ; ": requires non-null parameters."
.text:000000000000B09C                 ADD             X1, X1, #aRequiresNonNul@PAGEOFF ; ": requires non-null parameters."
.text:000000000000B0A0                 MOV             W2, #0x1F
.text:000000000000B0A4                 BL              sub_B548
.text:000000000000B0A8                 MOV             X0, SP  ; this
.text:000000000000B0AC                 BL              ._ZN7android4base10LogMessageD1Ev ; android::base::LogMessage::~LogMessage()
.text:000000000000B0B0 loc_B0B0                                ; CODE XREF: AIBinder_transact+384↑j
.text:000000000000B0B0                                         ; AIBinder_transact+3F4↑j
.text:000000000000B0B0                 STR             W22, [X21]
.text:000000000000B0B4                 LDR             X21, [X19]
.text:000000000000B0B8                 CBNZ            X21, loc_ACC0
.text:000000000000B0BC                 B               loc_AE6C
.text:000000000000B0C0 ; ---------------------------------------------------------------------------
.text:000000000000B0C0 loc_B0C0                                ; CODE XREF: AIBinder_transact+224↑j
.text:000000000000B0C0                 BL              .__stack_chk_fail
.text:000000000000B0C0 ; } // starts at AC58
.text:000000000000B0C0 ; End of function AIBinder_transact
.text:000000000000B0C0 ; ---------------------------------------------------------------------------
.text:000000000000B0C4                 ALIGN 8
.text:000000000000B0C8 ; =============== S U B R O U T I N E =======================================
.text:000000000000B0C8 ; Attributes: bp-based frame
.text:000000000000B0C8                 EXPORT AIBinder_DeathRecipient_new
.text:000000000000B0C8 AIBinder_DeathRecipient_new             ; DATA XREF: LOAD:0000000000001878↑o
.text:000000000000B0C8 var_28          = -0x28
.text:000000000000B0C8 var_20          = -0x20
.text:000000000000B0C8 var_10          = -0x10
.text:000000000000B0C8 var_s0          =  0
.text:000000000000B0C8 ; __unwind {
.text:000000000000B0C8                 SUB             SP, SP, #0x40
.text:000000000000B0CC                 STP             X22, X21, [SP,#0x30+var_20]
.text:000000000000B0D0                 STP             X20, X19, [SP,#0x30+var_10]
.text:000000000000B0D4                 STP             X29, X30, [SP,#0x30+var_s0]
.text:000000000000B0D8                 ADD             X29, SP, #0x30
.text:000000000000B0DC                 MRS             X21, #3, c13, c0, #2
.text:000000000000B0E0                 LDR             X8, [X21,#0x28]
.text:000000000000B0E4                 STR             X8, [SP,#0x30+var_28]
.text:000000000000B0E8                 CBZ             X0, loc_B130
.text:000000000000B0EC                 MOV             X20, X0
.text:000000000000B0F0                 MOV             W0, #0x58 ; 'X' ; unsigned __int64
.text:000000000000B0F4                 BL              ._Znwm  ; operator new(ulong)
.text:000000000000B0F8                 MOV             X19, X0
.text:000000000000B0FC                 BL              ._ZN7android7RefBaseC2Ev ; android::RefBase::RefBase(void)
.text:000000000000B100                 ADRP            X8, #off_109F8@PAGE
.text:000000000000B104                 MOVI            V0.2D, #0
.text:000000000000B108                 MOV             X0, X19 ; this
.text:000000000000B10C                 MOV             X1, XZR ; void *
.text:000000000000B110                 LDR             X8, [X8,#off_109F8@PAGEOFF]
.text:000000000000B114                 STR             X20, [X19,#0x50]
.text:000000000000B118                 STP             Q0, Q0, [X19,#0x30]
.text:000000000000B11C                 ADD             X8, X8, #0x10
.text:000000000000B120                 STP             Q0, Q0, [X19,#0x10]
.text:000000000000B124                 STR             X8, [X19]
.text:000000000000B128                 BL              ._ZNK7android7RefBase9incStrongEPKv ; android::RefBase::incStrong(void const*)
.text:000000000000B12C                 B               loc_B140
.text:000000000000B130 ; ---------------------------------------------------------------------------
.text:000000000000B130 loc_B130                                ; CODE XREF: AIBinder_DeathRecipient_new+20↑j
.text:000000000000B130                 BL              ._ZN7android4base21GetMinimumLogSeverityEv ; android::base::GetMinimumLogSeverity(void)
.text:000000000000B134                 CMP             W0, #4
.text:000000000000B138                 B.LE            loc_B168
.text:000000000000B13C                 MOV             X19, XZR
.text:000000000000B140 loc_B140                                ; CODE XREF: AIBinder_DeathRecipient_new+64↑j
.text:000000000000B140                                         ; AIBinder_DeathRecipient_new+108↓j
.text:000000000000B140                 LDR             X8, [X21,#0x28]
.text:000000000000B144                 LDR             X9, [SP,#0x30+var_28]
.text:000000000000B148                 CMP             X8, X9
.text:000000000000B14C                 B.NE            loc_B1D4
.text:000000000000B150                 MOV             X0, X19
.text:000000000000B154                 LDP             X29, X30, [SP,#0x30+var_s0]
.text:000000000000B158                 LDP             X20, X19, [SP,#0x30+var_10]
.text:000000000000B15C                 LDP             X22, X21, [SP,#0x30+var_20]
.text:000000000000B160                 ADD             SP, SP, #0x40 ; '@'
.text:000000000000B164                 RET
.text:000000000000B168 ; ---------------------------------------------------------------------------
.text:000000000000B168 loc_B168                                ; CODE XREF: AIBinder_DeathRecipient_new+70↑j
.text:000000000000B168                 BL              .__errno
.text:000000000000B16C                 ADRP            X1, #aFrameworksNati@PAGE ; "frameworks/native/libs/binder/ndk/ibind"...
.text:000000000000B170                 LDR             W22, [X0]
.text:000000000000B174                 MOV             X20, X0
.text:000000000000B178                 ADD             X1, X1, #aFrameworksNati@PAGEOFF ; "frameworks/native/libs/binder/ndk/ibind"...
.text:000000000000B17C                 MOV             W2, #0x241
.text:000000000000B180                 MOV             W6, #0xFFFFFFFF
.text:000000000000B184                 MOV             X0, SP
.text:000000000000B188                 MOV             W3, WZR
.text:000000000000B18C                 MOV             W4, #4
.text:000000000000B190                 MOV             X5, XZR
.text:000000000000B194                 BL              ._ZN7android4base10LogMessageC1EPKcjNS0_5LogIdENS0_11LogSeverityES3_i ; android::base::LogMessage::LogMessage(char const*,uint,android::base::LogId,android::base::LogSeverity,char const*,int)
.text:000000000000B198                 MOV             X0, SP  ; this
.text:000000000000B19C                 BL              ._ZN7android4base10LogMessage6streamEv ; android::base::LogMessage::stream(void)
.text:000000000000B1A0                 ADRP            X1, #aAibinderDeathr_1@PAGE ; "AIBinder_DeathRecipient_new"
.text:000000000000B1A4                 ADD             X1, X1, #aAibinderDeathr_1@PAGEOFF ; "AIBinder_DeathRecipient_new"
.text:000000000000B1A8                 MOV             W2, #0x1B
.text:000000000000B1AC                 BL              sub_B548
.text:000000000000B1B0                 ADRP            X1, #aRequiresNonNul_1@PAGE ; ": requires non-null onBinderDied parame"...
.text:000000000000B1B4                 ADD             X1, X1, #aRequiresNonNul_1@PAGEOFF ; ": requires non-null onBinderDied parame"...
.text:000000000000B1B8                 MOV             W2, #0x2B ; '+'
.text:000000000000B1BC                 BL              sub_B548
.text:000000000000B1C0                 MOV             X0, SP  ; this
.text:000000000000B1C4                 BL              ._ZN7android4base10LogMessageD1Ev ; android::base::LogMessage::~LogMessage()
.text:000000000000B1C8                 MOV             X19, XZR
.text:000000000000B1CC                 STR             W22, [X20]
.text:000000000000B1D0                 B               loc_B140
.text:000000000000B1D4 ; ---------------------------------------------------------------------------
.text:000000000000B1D4 loc_B1D4                                ; CODE XREF: AIBinder_DeathRecipient_new+84↑j
.text:000000000000B1D4                 BL              .__stack_chk_fail
.text:000000000000B1D4 ; } // starts at B0C8
.text:000000000000B1D4 ; End of function AIBinder_DeathRecipient_new
.text:000000000000B1D8 ; =============== S U B R O U T I N E =======================================
.text:000000000000B1D8                 EXPORT AIBinder_DeathRecipient_delete
.text:000000000000B1D8 AIBinder_DeathRecipient_delete          ; DATA XREF: LOAD:0000000000001638↑o
.text:000000000000B1D8 ; __unwind {
.text:000000000000B1D8                 CBZ             X0, locret_B1E4
.text:000000000000B1DC                 MOV             X1, XZR ; void *
.text:000000000000B1E0                 B               ._ZNK7android7RefBase9decStrongEPKv ; android::RefBase::decStrong(void const*)
.text:000000000000B1E4 ; ---------------------------------------------------------------------------
.text:000000000000B1E4 locret_B1E4                             ; CODE XREF: AIBinder_DeathRecipient_delete↑j
.text:000000000000B1E4                 RET
.text:000000000000B1E4 ; } // starts at B1D8
.text:000000000000B1E4 ; End of function AIBinder_DeathRecipient_delete
.text:000000000000B1E8 ; ---------------------------------------------------------------------------
.text:000000000000B1E8 ; __unwind {
.text:000000000000B1E8                 STP             X20, X19, [SP,#-0x20]!
.text:000000000000B1EC                 STP             X29, X30, [SP,#0x10]
.text:000000000000B1F0                 ADD             X29, SP, #0x10
.text:000000000000B1F4                 ADRP            X8, #off_109D8@PAGE
.text:000000000000B1F8                 MOV             X19, X0
.text:000000000000B1FC                 MOV             X1, X0
.text:000000000000B200                 LDR             X8, [X8,#off_109D8@PAGEOFF]
.text:000000000000B204                 MOV             X20, X0
.text:000000000000B208                 ADD             X9, X8, #0x68 ; 'h'
.text:000000000000B20C                 ADD             X8, X8, #0x18
.text:000000000000B210                 STR             X9, [X19,#0x38]!
.text:000000000000B214                 STR             X8, [X0]
.text:000000000000B218                 LDR             X8, [X1,#0x20]!
.text:000000000000B21C                 CBZ             X8, loc_B228
.text:000000000000B220                 LDR             X0, [X20,#0x28]
.text:000000000000B224                 BL              ._ZN7android7RefBase12weakref_type7decWeakEPKv ; android::RefBase::weakref_type::decWeak(void const*)
.text:000000000000B228 loc_B228                                ; CODE XREF: .text:000000000000B21C↑j
.text:000000000000B228                 MOV             X1, X20
.text:000000000000B22C                 LDR             X8, [X1,#8]!
.text:000000000000B230                 CBZ             X8, loc_B23C
.text:000000000000B234                 LDR             X0, [X20,#0x10]
.text:000000000000B238                 BL              ._ZN7android7RefBase12weakref_type7decWeakEPKv ; android::RefBase::weakref_type::decWeak(void const*)
.text:000000000000B23C loc_B23C                                ; CODE XREF: .text:000000000000B230↑j
.text:000000000000B23C                 LDP             X29, X30, [SP,#0x10]
.text:000000000000B240                 MOV             X0, X19
.text:000000000000B244                 LDP             X20, X19, [SP],#0x20
.text:000000000000B248                 B               ._ZN7android7RefBaseD2Ev ; android::RefBase::~RefBase()
.text:000000000000B248 ; } // starts at B1E8
.text:000000000000B248 ; ---------------------------------------------------------------------------
.text:000000000000B24C                 ALIGN 0x10
.text:000000000000B250 ; __unwind {
.text:000000000000B250                 STP             X20, X19, [SP,#-0x20]!
.text:000000000000B254                 STP             X29, X30, [SP,#0x10]
.text:000000000000B258                 ADD             X29, SP, #0x10
.text:000000000000B25C                 ADRP            X8, #off_109D8@PAGE
.text:000000000000B260                 MOV             X20, X0
.text:000000000000B264                 MOV             X1, X0
.text:000000000000B268                 LDR             X8, [X8,#off_109D8@PAGEOFF]
.text:000000000000B26C                 MOV             X19, X0
.text:000000000000B270                 ADD             X9, X8, #0x68 ; 'h'
.text:000000000000B274                 ADD             X8, X8, #0x18
.text:000000000000B278                 STR             X9, [X20,#0x38]!
.text:000000000000B27C                 STR             X8, [X0]
.text:000000000000B280                 LDR             X8, [X1,#0x20]!
.text:000000000000B284                 CBZ             X8, loc_B290
.text:000000000000B288                 LDR             X0, [X19,#0x28]
.text:000000000000B28C                 BL              ._ZN7android7RefBase12weakref_type7decWeakEPKv ; android::RefBase::weakref_type::decWeak(void const*)
.text:000000000000B290 loc_B290                                ; CODE XREF: .text:000000000000B284↑j
.text:000000000000B290                 MOV             X1, X19
.text:000000000000B294                 LDR             X8, [X1,#8]!
.text:000000000000B298                 CBZ             X8, loc_B2A4
.text:000000000000B29C                 LDR             X0, [X19,#0x10]
.text:000000000000B2A0                 BL              ._ZN7android7RefBase12weakref_type7decWeakEPKv ; android::RefBase::weakref_type::decWeak(void const*)
.text:000000000000B2A4 loc_B2A4                                ; CODE XREF: .text:000000000000B298↑j
.text:000000000000B2A4                 MOV             X0, X20
.text:000000000000B2A8                 BL              ._ZN7android7RefBaseD2Ev ; android::RefBase::~RefBase()
.text:000000000000B2AC                 LDP             X29, X30, [SP,#0x10]
.text:000000000000B2B0                 MOV             X0, X19
.text:000000000000B2B4                 LDP             X20, X19, [SP],#0x20
.text:000000000000B2B8                 B               ._ZdlPv ; operator delete(void *)
.text:000000000000B2B8 ; } // starts at B250
.text:000000000000B2B8 ; ---------------------------------------------------------------------------
.text:000000000000B2BC                 ALIGN 0x20
.text:000000000000B2C0 ; __unwind {
.text:000000000000B2C0                 STP             X20, X19, [SP,#-0x20]!
.text:000000000000B2C4                 STP             X29, X30, [SP,#0x10]
.text:000000000000B2C8                 ADD             X29, SP, #0x10
.text:000000000000B2CC                 ADRP            X8, #off_109D8@PAGE
.text:000000000000B2D0                 LDR             X8, [X8,#off_109D8@PAGEOFF]
.text:000000000000B2D4                 LDR             X9, [X0]
.text:000000000000B2D8                 ADD             X10, X8, #0x68 ; 'h'
.text:000000000000B2DC                 LDUR            X9, [X9,#-0x18]
.text:000000000000B2E0                 ADD             X8, X8, #0x18
.text:000000000000B2E4                 ADD             X20, X0, X9
.text:000000000000B2E8                 MOV             X19, X20
.text:000000000000B2EC                 MOV             X1, X20
.text:000000000000B2F0                 STR             X10, [X19,#0x38]!
.text:000000000000B2F4                 STR             X8, [X20]
.text:000000000000B2F8                 LDR             X8, [X1,#0x20]!
.text:000000000000B2FC                 CBZ             X8, loc_B308
.text:000000000000B300                 LDR             X0, [X20,#0x28]
.text:000000000000B304                 BL              ._ZN7android7RefBase12weakref_type7decWeakEPKv ; android::RefBase::weakref_type::decWeak(void const*)
.text:000000000000B308 loc_B308                                ; CODE XREF: .text:000000000000B2FC↑j
.text:000000000000B308                 MOV             X1, X20
.text:000000000000B30C                 LDR             X8, [X1,#8]!
.text:000000000000B310                 CBZ             X8, loc_B31C
.text:000000000000B314                 LDR             X0, [X20,#0x10]
.text:000000000000B318                 BL              ._ZN7android7RefBase12weakref_type7decWeakEPKv ; android::RefBase::weakref_type::decWeak(void const*)
.text:000000000000B31C loc_B31C                                ; CODE XREF: .text:000000000000B310↑j
.text:000000000000B31C                 LDP             X29, X30, [SP,#0x10]
.text:000000000000B320                 MOV             X0, X19
.text:000000000000B324                 LDP             X20, X19, [SP],#0x20
.text:000000000000B328                 B               ._ZN7android7RefBaseD2Ev ; android::RefBase::~RefBase()
.text:000000000000B328 ; } // starts at B2C0
.text:000000000000B328 ; ---------------------------------------------------------------------------
.text:000000000000B32C                 ALIGN 0x10
.text:000000000000B330 ; __unwind {
.text:000000000000B330                 STP             X20, X19, [SP,#-0x20]!
.text:000000000000B334                 STP             X29, X30, [SP,#0x10]
.text:000000000000B338                 ADD             X29, SP, #0x10
.text:000000000000B33C                 ADRP            X8, #off_109D8@PAGE
.text:000000000000B340                 LDR             X8, [X8,#off_109D8@PAGEOFF]
.text:000000000000B344                 LDR             X9, [X0]
.text:000000000000B348                 ADD             X10, X8, #0x68 ; 'h'
.text:000000000000B34C                 LDUR            X9, [X9,#-0x18]
.text:000000000000B350                 ADD             X8, X8, #0x18
.text:000000000000B354                 ADD             X19, X0, X9
.text:000000000000B358                 MOV             X20, X19
.text:000000000000B35C                 MOV             X1, X19
.text:000000000000B360                 STR             X10, [X20,#0x38]!
.text:000000000000B364                 STR             X8, [X19]
.text:000000000000B368                 LDR             X8, [X1,#0x20]!
.text:000000000000B36C                 CBZ             X8, loc_B378
.text:000000000000B370                 LDR             X0, [X19,#0x28]
.text:000000000000B374                 BL              ._ZN7android7RefBase12weakref_type7decWeakEPKv ; android::RefBase::weakref_type::decWeak(void const*)
.text:000000000000B378 loc_B378                                ; CODE XREF: .text:000000000000B36C↑j
.text:000000000000B378                 MOV             X1, X19
.text:000000000000B37C                 LDR             X8, [X1,#8]!
.text:000000000000B380                 CBZ             X8, loc_B38C
.text:000000000000B384                 LDR             X0, [X19,#0x10]
.text:000000000000B388                 BL              ._ZN7android7RefBase12weakref_type7decWeakEPKv ; android::RefBase::weakref_type::decWeak(void const*)
.text:000000000000B38C loc_B38C                                ; CODE XREF: .text:000000000000B380↑j
.text:000000000000B38C                 MOV             X0, X20
.text:000000000000B390                 BL              ._ZN7android7RefBaseD2Ev ; android::RefBase::~RefBase()
.text:000000000000B394                 LDP             X29, X30, [SP,#0x10]
.text:000000000000B398                 MOV             X0, X19
.text:000000000000B39C                 LDP             X20, X19, [SP],#0x20
.text:000000000000B3A0                 B               ._ZdlPv ; operator delete(void *)
.text:000000000000B3A0 ; } // starts at B330
.text:000000000000B3A0 ; ---------------------------------------------------------------------------
.text:000000000000B3A4                 ALIGN 8
.text:000000000000B3A8 ; =============== S U B R O U T I N E =======================================
.text:000000000000B3A8 sub_B3A8                                ; DATA XREF: .data.rel.ro:00000000000103E8↓o
.text:000000000000B3A8                                         ; .data.rel.ro:00000000000103F0↓o
.text:000000000000B3A8 ; __unwind {
.text:000000000000B3A8                 MOV             X0, XZR
.text:000000000000B3AC                 RET
.text:000000000000B3AC ; } // starts at B3A8
.text:000000000000B3AC ; End of function sub_B3A8
.text:000000000000B3B0 ; ---------------------------------------------------------------------------
.text:000000000000B3B0 ; __unwind {
.text:000000000000B3B0                 ADD             X9, X0, #0x10
.text:000000000000B3B4                 CMP             X0, #0
.text:000000000000B3B8                 CSEL            X10, XZR, X9, EQ
.text:000000000000B3BC                 STR             X10, [X8]
.text:000000000000B3C0                 CBZ             X0, locret_B3D8
.text:000000000000B3C4                 LDR             X10, [X9]
.text:000000000000B3C8                 MOV             X1, X8
.text:000000000000B3CC                 LDUR            X10, [X10,#-0x18]
.text:000000000000B3D0                 ADD             X0, X9, X10
.text:000000000000B3D4                 B               ._ZNK7android7RefBase9incStrongEPKv ; android::RefBase::incStrong(void const*)
.text:000000000000B3D8 ; ---------------------------------------------------------------------------
.text:000000000000B3D8 locret_B3D8                             ; CODE XREF: .text:000000000000B3C0↑j
.text:000000000000B3D8                 RET
.text:000000000000B3D8 ; } // starts at B3B0
.text:000000000000B3D8 ; ---------------------------------------------------------------------------
.text:000000000000B3DC                 ALIGN 0x20
.text:000000000000B3E0 ; __unwind {
.text:000000000000B3E0                 RET
.text:000000000000B3E0 ; } // starts at B3E0
.text:000000000000B3E0 ; ---------------------------------------------------------------------------
.text:000000000000B3E4                 ALIGN 8
.text:000000000000B3E8 ; __unwind {
.text:000000000000B3E8                 LDR             X9, [X0,#0x18]
.text:000000000000B3EC                 STR             X9, [X8]
.text:000000000000B3F0                 CBZ             X9, locret_B408
.text:000000000000B3F4                 LDR             X10, [X9]
.text:000000000000B3F8                 MOV             X1, X8
.text:000000000000B3FC                 LDUR            X10, [X10,#-0x18]
.text:000000000000B400                 ADD             X0, X9, X10
.text:000000000000B404                 B               ._ZNK7android7RefBase9incStrongEPKv ; android::RefBase::incStrong(void const*)
.text:000000000000B408 ; ---------------------------------------------------------------------------
.text:000000000000B408 locret_B408                             ; CODE XREF: .text:000000000000B3F0↑j
.text:000000000000B408                 RET
.text:000000000000B408 ; } // starts at B3E8
.text:000000000000B408 ; ---------------------------------------------------------------------------
.text:000000000000B40C                 ALIGN 0x10
.text:000000000000B410 ; __unwind {
.text:000000000000B410                 STR             X21, [SP,#-0x30]!
.text:000000000000B414                 STP             X20, X19, [SP,#0x10]
.text:000000000000B418                 STP             X29, X30, [SP,#0x20]
.text:000000000000B41C                 ADD             X29, SP, #0x20 ; ' '
.text:000000000000B420                 ADRP            X8, #off_109F8@PAGE
.text:000000000000B424                 MOV             X19, X0
.text:000000000000B428                 LDR             X8, [X8,#off_109F8@PAGEOFF]
.text:000000000000B42C                 LDR             X20, [X0,#0x38]
.text:000000000000B430                 ADD             X8, X8, #0x10
.text:000000000000B434                 STR             X8, [X0]
.text:000000000000B438                 CBZ             X20, loc_B488
.text:000000000000B43C                 LDR             X8, [X19,#0x40]
.text:000000000000B440                 CMP             X8, X20
.text:000000000000B444                 B.EQ            loc_B47C
.text:000000000000B448                 MOV             X21, X8
.text:000000000000B44C loc_B44C                                ; CODE XREF: .text:000000000000B470↓j
.text:000000000000B44C                 LDR             X9, [X21,#-8]!
.text:000000000000B450                 CBZ             X9, loc_B468
.text:000000000000B454                 LDR             X10, [X9]
.text:000000000000B458                 SUB             X1, X8, #8
.text:000000000000B45C                 LDUR            X10, [X10,#-0x18]
.text:000000000000B460                 ADD             X0, X9, X10
.text:000000000000B464                 BL              ._ZNK7android7RefBase9decStrongEPKv ; android::RefBase::decStrong(void const*)
.text:000000000000B468 loc_B468                                ; CODE XREF: .text:000000000000B450↑j
.text:000000000000B468                 MOV             X8, X21
.text:000000000000B46C                 CMP             X20, X21
.text:000000000000B470                 B.NE            loc_B44C
.text:000000000000B474                 LDR             X0, [X19,#0x38]
.text:000000000000B478                 B               loc_B480
.text:000000000000B47C ; ---------------------------------------------------------------------------
.text:000000000000B47C loc_B47C                                ; CODE XREF: .text:000000000000B444↑j
.text:000000000000B47C                 MOV             X0, X20
.text:000000000000B480 loc_B480                                ; CODE XREF: .text:000000000000B478↑j
.text:000000000000B480                 STR             X20, [X19,#0x40]
.text:000000000000B484                 BL              ._ZdlPv ; operator delete(void *)
.text:000000000000B488 loc_B488                                ; CODE XREF: .text:000000000000B438↑j
.text:000000000000B488                 ADD             X0, X19, #0x10
.text:000000000000B48C                 BL              ._ZNSt3__15mutexD1Ev ; std::__1::mutex::~mutex()
.text:000000000000B490                 MOV             X0, X19
.text:000000000000B494                 LDP             X29, X30, [SP,#0x20]
.text:000000000000B498                 LDP             X20, X19, [SP,#0x10]
.text:000000000000B49C                 LDR             X21, [SP],#0x30
.text:000000000000B4A0                 B               ._ZN7android7RefBaseD2Ev ; android::RefBase::~RefBase()
.text:000000000000B4A0 ; } // starts at B410
.text:000000000000B4A0 ; ---------------------------------------------------------------------------
.text:000000000000B4A4                 ALIGN 8
.text:000000000000B4A8 ; __unwind {
.text:000000000000B4A8                 STR             X21, [SP,#-0x30]!
.text:000000000000B4AC                 STP             X20, X19, [SP,#0x10]
.text:000000000000B4B0                 STP             X29, X30, [SP,#0x20]
.text:000000000000B4B4                 ADD             X29, SP, #0x20 ; ' '
.text:000000000000B4B8                 ADRP            X8, #off_109F8@PAGE
.text:000000000000B4BC                 MOV             X19, X0
.text:000000000000B4C0                 LDR             X8, [X8,#off_109F8@PAGEOFF]
.text:000000000000B4C4                 LDR             X20, [X0,#0x38]
.text:000000000000B4C8                 ADD             X8, X8, #0x10
.text:000000000000B4CC                 STR             X8, [X0]
.text:000000000000B4D0                 CBZ             X20, loc_B520
.text:000000000000B4D4                 LDR             X8, [X19,#0x40]
.text:000000000000B4D8                 CMP             X8, X20
.text:000000000000B4DC                 B.EQ            loc_B514
.text:000000000000B4E0                 MOV             X21, X8
.text:000000000000B4E4 loc_B4E4                                ; CODE XREF: .text:000000000000B508↓j
.text:000000000000B4E4                 LDR             X9, [X21,#-8]!
.text:000000000000B4E8                 CBZ             X9, loc_B500
.text:000000000000B4EC                 LDR             X10, [X9]
.text:000000000000B4F0                 SUB             X1, X8, #8
.text:000000000000B4F4                 LDUR            X10, [X10,#-0x18]
.text:000000000000B4F8                 ADD             X0, X9, X10
.text:000000000000B4FC                 BL              ._ZNK7android7RefBase9decStrongEPKv ; android::RefBase::decStrong(void const*)
.text:000000000000B500 loc_B500                                ; CODE XREF: .text:000000000000B4E8↑j
.text:000000000000B500                 MOV             X8, X21
.text:000000000000B504                 CMP             X20, X21
.text:000000000000B508                 B.NE            loc_B4E4
.text:000000000000B50C                 LDR             X0, [X19,#0x38]
.text:000000000000B510                 B               loc_B518
.text:000000000000B514 ; ---------------------------------------------------------------------------
.text:000000000000B514 loc_B514                                ; CODE XREF: .text:000000000000B4DC↑j
.text:000000000000B514                 MOV             X0, X20
.text:000000000000B518 loc_B518                                ; CODE XREF: .text:000000000000B510↑j
.text:000000000000B518                 STR             X20, [X19,#0x40]
.text:000000000000B51C                 BL              ._ZdlPv ; operator delete(void *)
.text:000000000000B520 loc_B520                                ; CODE XREF: .text:000000000000B4D0↑j
.text:000000000000B520                 ADD             X0, X19, #0x10
.text:000000000000B524                 BL              ._ZNSt3__15mutexD1Ev ; std::__1::mutex::~mutex()
.text:000000000000B528                 MOV             X0, X19
.text:000000000000B52C                 BL              ._ZN7android7RefBaseD2Ev ; android::RefBase::~RefBase()
.text:000000000000B530                 MOV             X0, X19
.text:000000000000B534                 LDP             X29, X30, [SP,#0x20]
.text:000000000000B538                 LDP             X20, X19, [SP,#0x10]
.text:000000000000B53C                 LDR             X21, [SP],#0x30
.text:000000000000B540                 B               ._ZdlPv ; operator delete(void *)
.text:000000000000B540 ; } // starts at B4A8
.text:000000000000B540 ; ---------------------------------------------------------------------------
.text:000000000000B544                 ALIGN 8
.text:000000000000B548 ; =============== S U B R O U T I N E =======================================
.text:000000000000B548 ; Attributes: bp-based frame
.text:000000000000B548 sub_B548                                ; CODE XREF: sub_8028+C0↑p
.text:000000000000B548                                         ; sub_8028+D4↑p ...
.text:000000000000B548 var_60          = -0x60
.text:000000000000B548 var_50          = -0x50
.text:000000000000B548 var_48          = -0x48
.text:000000000000B548 var_40          = -0x40
.text:000000000000B548 var_30          = -0x30
.text:000000000000B548 var_20          = -0x20
.text:000000000000B548 var_10          = -0x10
.text:000000000000B548 var_s0          =  0
.text:000000000000B548 ; __unwind {
.text:000000000000B548                 SUB             SP, SP, #0x70
.text:000000000000B54C                 STP             X26, X25, [SP,#0x60+var_40]
.text:000000000000B550                 STP             X24, X23, [SP,#0x60+var_30]
.text:000000000000B554                 STP             X22, X21, [SP,#0x60+var_20]
.text:000000000000B558                 STP             X20, X19, [SP,#0x60+var_10]
.text:000000000000B55C                 STP             X29, X30, [SP,#0x60+var_s0]
.text:000000000000B560                 ADD             X29, SP, #0x60
.text:000000000000B564                 MRS             X26, #3, c13, c0, #2
.text:000000000000B568                 MOV             X19, X0
.text:000000000000B56C                 LDR             X8, [X26,#0x28]
.text:000000000000B570                 MOV             X20, X1
.text:000000000000B574                 MOV             X0, SP
.text:000000000000B578                 MOV             X1, X19
.text:000000000000B57C                 MOV             X22, X2
.text:000000000000B580                 STR             X8, [SP,#0x60+var_48]
.text:000000000000B584                 BL              ._ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryC1ERS3_ ; std::__1::basic_ostream<char,std::__1::char_traits<char>>::sentry::sentry(std::__1::basic_ostream<char,std::__1::char_traits<char>>&)
.text:000000000000B588                 LDRB            W8, [SP,#0x60+var_60]
.text:000000000000B58C                 CBZ             W8, loc_B63C
.text:000000000000B590                 LDR             X8, [X19]
.text:000000000000B594                 MOV             W9, #0xB0
.text:000000000000B598                 ADD             X22, X20, X22
.text:000000000000B59C                 LDUR            X8, [X8,#-0x18]
.text:000000000000B5A0                 ADD             X21, X19, X8
.text:000000000000B5A4                 LDR             W8, [X21,#8]
.text:000000000000B5A8                 LDR             W5, [X21,#0x90]
.text:000000000000B5AC                 LDR             X24, [X21,#0x28]
.text:000000000000B5B0                 AND             W8, W8, W9
.text:000000000000B5B4                 CMP             W8, #0x20 ; ' '
.text:000000000000B5B8                 CSEL            X23, X22, X20, EQ
.text:000000000000B5BC                 CMN             W5, #1
.text:000000000000B5C0                 B.NE            loc_B604
.text:000000000000B5C4                 ADD             X8, SP, #0x60+var_50
.text:000000000000B5C8                 MOV             X0, X21 ; this
.text:000000000000B5CC                 BL              ._ZNKSt3__18ios_base6getlocEv ; std::__1::ios_base::getloc(void)
.text:000000000000B5D0                 ADRP            X1, #_ZNSt3__15ctypeIcE2idE_ptr@PAGE
.text:000000000000B5D4                 ADD             X0, SP, #0x60+var_50
.text:000000000000B5D8                 LDR             X1, [X1,#_ZNSt3__15ctypeIcE2idE_ptr@PAGEOFF]
.text:000000000000B5DC                 BL              ._ZNKSt3__16locale9use_facetERNS0_2idE ; std::__1::locale::use_facet(std::__1::locale::id &)
.text:000000000000B5E0                 LDR             X8, [X0]
.text:000000000000B5E4                 MOV             W1, #0x20 ; ' '
.text:000000000000B5E8                 LDR             X8, [X8,#0x38]
.text:000000000000B5EC                 BLR             X8
.text:000000000000B5F0                 MOV             W25, W0
.text:000000000000B5F4                 ADD             X0, SP, #0x60+var_50 ; this
.text:000000000000B5F8                 BL              ._ZNSt3__16localeD1Ev ; std::__1::locale::~locale()
.text:000000000000B5FC                 AND             W5, W25, #0xFF
.text:000000000000B600                 STR             W5, [X21,#0x90]
.text:000000000000B604 loc_B604                                ; CODE XREF: sub_B548+78↑j
.text:000000000000B604                 MOV             X0, X24
.text:000000000000B608                 MOV             X1, X20
.text:000000000000B60C                 MOV             X2, X23
.text:000000000000B610                 MOV             X3, X22
.text:000000000000B614                 MOV             X4, X21
.text:000000000000B618                 BL              sub_B678
.text:000000000000B61C                 CBNZ            X0, loc_B63C
.text:000000000000B620                 LDR             X8, [X19]
.text:000000000000B624                 MOV             W9, #5
.text:000000000000B628                 LDUR            X8, [X8,#-0x18]
.text:000000000000B62C                 ADD             X0, X19, X8 ; this
.text:000000000000B630                 LDR             W8, [X0,#0x20]
.text:000000000000B634                 ORR             W1, W8, W9 ; unsigned int
.text:000000000000B638                 BL              ._ZNSt3__18ios_base5clearEj ; std::__1::ios_base::clear(uint)
.text:000000000000B63C loc_B63C                                ; CODE XREF: sub_B548+44↑j
.text:000000000000B63C                                         ; sub_B548+D4↑j
.text:000000000000B63C                 MOV             X0, SP
.text:000000000000B640                 BL              ._ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryD1Ev ; std::__1::basic_ostream<char,std::__1::char_traits<char>>::sentry::~sentry()
.text:000000000000B644                 LDR             X8, [X26,#0x28]
.text:000000000000B648                 LDR             X9, [SP,#0x60+var_48]
.text:000000000000B64C                 CMP             X8, X9
.text:000000000000B650                 B.NE            loc_B674
.text:000000000000B654                 MOV             X0, X19
.text:000000000000B658                 LDP             X29, X30, [SP,#0x60+var_s0]
.text:000000000000B65C                 LDP             X20, X19, [SP,#0x60+var_10]
.text:000000000000B660                 LDP             X22, X21, [SP,#0x60+var_20]
.text:000000000000B664                 LDP             X24, X23, [SP,#0x60+var_30]
.text:000000000000B668                 LDP             X26, X25, [SP,#0x60+var_40]
.text:000000000000B66C                 ADD             SP, SP, #0x70 ; 'p'
.text:000000000000B670                 RET
.text:000000000000B674 ; ---------------------------------------------------------------------------
.text:000000000000B674 loc_B674                                ; CODE XREF: sub_B548+108↑j
.text:000000000000B674                 BL              .__stack_chk_fail
.text:000000000000B674 ; } // starts at B548
.text:000000000000B674 ; End of function sub_B548
.text:000000000000B678 ; =============== S U B R O U T I N E =======================================
.text:000000000000B678 ; Attributes: bp-based frame
.text:000000000000B678 sub_B678                                ; CODE XREF: sub_B548+D0↑p
.text:000000000000B678 var_70          = -0x70
.text:000000000000B678 var_68          = -0x68
.text:000000000000B678 var_60          = -0x60
.text:000000000000B678 var_58          = -0x58
.text:000000000000B678 var_50          = -0x50
.text:000000000000B678 var_40          = -0x40
.text:000000000000B678 var_30          = -0x30
.text:000000000000B678 var_20          = -0x20
.text:000000000000B678 var_10          = -0x10
.text:000000000000B678 var_s0          =  0
.text:000000000000B678 ; __unwind {
.text:000000000000B678                 SUB             SP, SP, #0x80
.text:000000000000B67C                 STR             X27, [SP,#0x70+var_50]
.text:000000000000B680                 STP             X26, X25, [SP,#0x70+var_40]
.text:000000000000B684                 STP             X24, X23, [SP,#0x70+var_30]
.text:000000000000B688                 STP             X22, X21, [SP,#0x70+var_20]
.text:000000000000B68C                 STP             X20, X19, [SP,#0x70+var_10]
.text:000000000000B690                 STP             X29, X30, [SP,#0x70+var_s0]
.text:000000000000B694                 ADD             X29, SP, #0x70
.text:000000000000B698                 MRS             X27, #3, c13, c0, #2
.text:000000000000B69C                 MOV             X19, X0
.text:000000000000B6A0                 LDR             X8, [X27,#0x28]
.text:000000000000B6A4                 STR             X8, [SP,#0x70+var_58]
.text:000000000000B6A8                 CBZ             X0, loc_B7D0
.text:000000000000B6AC                 LDR             X8, [X4,#0x18]
.text:000000000000B6B0                 SUB             X9, X3, X1
.text:000000000000B6B4                 MOV             W24, W5
.text:000000000000B6B8                 MOV             X20, X4
.text:000000000000B6BC                 MOV             X22, X3
.text:000000000000B6C0                 SUBS            X8, X8, X9
.text:000000000000B6C4                 MOV             X21, X2
.text:000000000000B6C8                 CSEL            X23, X8, XZR, GT
.text:000000000000B6CC                 SUB             X25, X2, X1
.text:000000000000B6D0                 CMP             X25, #1
.text:000000000000B6D4                 B.LT            loc_B6F4
.text:000000000000B6D8                 LDR             X8, [X19]
.text:000000000000B6DC                 MOV             X0, X19
.text:000000000000B6E0                 MOV             X2, X25
.text:000000000000B6E4                 LDR             X8, [X8,#0x60]
.text:000000000000B6E8                 BLR             X8
.text:000000000000B6EC                 CMP             X0, X25
.text:000000000000B6F0                 B.NE            loc_B7CC
.text:000000000000B6F4 loc_B6F4                                ; CODE XREF: sub_B678+5C↑j
.text:000000000000B6F4                 CMP             X23, #1
.text:000000000000B6F8                 B.LT            loc_B798
.text:000000000000B6FC                 CMP             X23, #0x17
.text:000000000000B700                 STP             XZR, XZR, [SP,#0x70+var_68]
.text:000000000000B704                 STR             XZR, [SP,#0x70+var_70]
.text:000000000000B708                 B.CS            loc_B720
.text:000000000000B70C                 MOV             X26, SP
.text:000000000000B710                 ORR             X25, X26, #1
.text:000000000000B714                 LSL             W8, W23, #1
.text:000000000000B718                 STRB            W8, [SP,#0x70+var_70]
.text:000000000000B71C                 B               loc_B744
.text:000000000000B720 ; ---------------------------------------------------------------------------
.text:000000000000B720 loc_B720                                ; CODE XREF: sub_B678+90↑j
.text:000000000000B720                 ADD             X8, X23, #0x10
.text:000000000000B724                 AND             X26, X8, #0xFFFFFFFFFFFFFFF0
.text:000000000000B728                 MOV             X0, X26 ; unsigned __int64
.text:000000000000B72C                 BL              ._Znwm  ; operator new(ulong)
.text:000000000000B730                 ORR             X8, X26, #1
.text:000000000000B734                 STP             X23, X0, [SP,#0x70+var_68]
.text:000000000000B738                 MOV             X25, X0
.text:000000000000B73C                 MOV             X26, SP
.text:000000000000B740                 STR             X8, [SP,#0x70+var_70]
.text:000000000000B744 loc_B744                                ; CODE XREF: sub_B678+A4↑j
.text:000000000000B744                 MOV             X0, X25 ; s
.text:000000000000B748                 MOV             W1, W24 ; c
.text:000000000000B74C                 MOV             X2, X23 ; n
.text:000000000000B750                 BL              .memset
.text:000000000000B754                 STRB            WZR, [X25,X23]
.text:000000000000B758                 MOV             X0, X19
.text:000000000000B75C                 LDRB            W8, [SP,#0x70+var_70]
.text:000000000000B760                 MOV             X2, X23
.text:000000000000B764                 LDR             X9, [X19]
.text:000000000000B768                 LDR             X10, [SP,#0x70+var_60]
.text:000000000000B76C                 TST             W8, #1
.text:000000000000B770                 LDR             X8, [X9,#0x60]
.text:000000000000B774                 CSINC           X1, X10, X26, NE
.text:000000000000B778                 BLR             X8
.text:000000000000B77C                 LDRB            W8, [SP,#0x70+var_70]
.text:000000000000B780                 MOV             X24, X0
.text:000000000000B784                 TBZ             W8, #0, loc_B790
.text:000000000000B788                 LDR             X0, [SP,#0x70+var_60] ; void *
.text:000000000000B78C                 BL              ._ZdlPv ; operator delete(void *)
.text:000000000000B790 loc_B790                                ; CODE XREF: sub_B678+10C↑j
.text:000000000000B790                 CMP             X24, X23
.text:000000000000B794                 B.NE            loc_B7CC
.text:000000000000B798 loc_B798                                ; CODE XREF: sub_B678+80↑j
.text:000000000000B798                 SUB             X22, X22, X21
.text:000000000000B79C                 CMP             X22, #1
.text:000000000000B7A0                 B.LT            loc_B7C4
.text:000000000000B7A4                 LDR             X8, [X19]
.text:000000000000B7A8                 MOV             X0, X19
.text:000000000000B7AC                 MOV             X1, X21
.text:000000000000B7B0                 MOV             X2, X22
.text:000000000000B7B4                 LDR             X8, [X8,#0x60]
.text:000000000000B7B8                 BLR             X8
.text:000000000000B7BC                 CMP             X0, X22
.text:000000000000B7C0                 B.NE            loc_B7CC
.text:000000000000B7C4 loc_B7C4                                ; CODE XREF: sub_B678+128↑j
.text:000000000000B7C4                 STR             XZR, [X20,#0x18]
.text:000000000000B7C8                 B               loc_B7D0
.text:000000000000B7CC ; ---------------------------------------------------------------------------
.text:000000000000B7CC loc_B7CC                                ; CODE XREF: sub_B678+78↑j
.text:000000000000B7CC                                         ; sub_B678+11C↑j ...
.text:000000000000B7CC                 MOV             X19, XZR
.text:000000000000B7D0 loc_B7D0                                ; CODE XREF: sub_B678+30↑j
.text:000000000000B7D0                                         ; sub_B678+150↑j
.text:000000000000B7D0                 LDR             X8, [X27,#0x28]
.text:000000000000B7D4                 LDR             X9, [SP,#0x70+var_58]
.text:000000000000B7D8                 CMP             X8, X9
.text:000000000000B7DC                 B.NE            loc_B804
.text:000000000000B7E0                 MOV             X0, X19
.text:000000000000B7E4                 LDR             X27, [SP,#0x70+var_50]
.text:000000000000B7E8                 LDP             X29, X30, [SP,#0x70+var_s0]
.text:000000000000B7EC                 LDP             X20, X19, [SP,#0x70+var_10]
.text:000000000000B7F0                 LDP             X22, X21, [SP,#0x70+var_20]
.text:000000000000B7F4                 LDP             X24, X23, [SP,#0x70+var_30]
.text:000000000000B7F8                 LDP             X26, X25, [SP,#0x70+var_40]
.text:000000000000B7FC                 ADD             SP, SP, #0x80
.text:000000000000B800                 RET
.text:000000000000B804 ; ---------------------------------------------------------------------------
.text:000000000000B804 loc_B804                                ; CODE XREF: sub_B678+164↑j
.text:000000000000B804                 BL              .__stack_chk_fail
.text:000000000000B804 ; } // starts at B678
.text:000000000000B804 ; End of function sub_B678
.text:000000000000B808 ; =============== S U B R O U T I N E =======================================
.text:000000000000B808 ; Attributes: bp-based frame
.text:000000000000B808 sub_B808                                ; CODE XREF: sub_8B40-234↑p
.text:000000000000B808 var_30          = -0x30
.text:000000000000B808 var_20          = -0x20
.text:000000000000B808 var_10          = -0x10
.text:000000000000B808 var_s0          =  0
.text:000000000000B808 ; __unwind {
.text:000000000000B808                 STP             X24, X23, [SP,#-0x10+var_30]!
.text:000000000000B80C                 STP             X22, X21, [SP,#0x30+var_20]
.text:000000000000B810                 STP             X20, X19, [SP,#0x30+var_10]
.text:000000000000B814                 STP             X29, X30, [SP,#0x30+var_s0]
.text:000000000000B818                 ADD             X29, SP, #0x30
.text:000000000000B81C                 LDP             X9, X8, [X0]
.text:000000000000B820                 MOV             X19, X0
.text:000000000000B824                 SUB             X8, X8, X9
.text:000000000000B828                 ASR             X21, X8, #3
.text:000000000000B82C                 ADD             X8, X21, #1
.text:000000000000B830                 LSR             X10, X8, #0x3D ; '='
.text:000000000000B834                 CBNZ            X10, loc_B920
.text:000000000000B838                 LDR             X10, [X19,#0x10]
.text:000000000000B83C                 MOV             X20, X1
.text:000000000000B840                 SUB             X9, X10, X9
.text:000000000000B844                 MOV             X10, #0xFFFFFFFFFFFFFFE
.text:000000000000B848                 CMP             X10, X9,ASR#3
.text:000000000000B84C                 B.CC            loc_B86C
.text:000000000000B850                 ASR             X9, X9, #2
.text:000000000000B854                 CMP             X9, X8
.text:000000000000B858                 CSEL            X22, X8, X9, CC
.text:000000000000B85C                 CBZ             X22, loc_B918
.text:000000000000B860                 LSR             X8, X22, #0x3D ; '='
.text:000000000000B864                 CBZ             X8, loc_B870
.text:000000000000B868                 BL              .abort
.text:000000000000B86C ; ---------------------------------------------------------------------------
.text:000000000000B86C loc_B86C                                ; CODE XREF: sub_B808+44↑j
.text:000000000000B86C                 MOV             X22, #0x1FFFFFFFFFFFFFFF
.text:000000000000B870 loc_B870                                ; CODE XREF: sub_B808+5C↑j
.text:000000000000B870                 LSL             X0, X22, #3 ; unsigned __int64
.text:000000000000B874                 BL              ._Znwm  ; operator new(ulong)
.text:000000000000B878 loc_B878                                ; CODE XREF: sub_B808+114↓j
.text:000000000000B878                 ADD             X21, X0, X21,LSL#3
.text:000000000000B87C                 ADD             X23, X0, X22,LSL#3
.text:000000000000B880                 MOV             X0, X21 ; this
.text:000000000000B884                 MOV             X1, X20 ; android::String8 *
.text:000000000000B888                 BL              ._ZN7android7String8C1ERKS0_ ; android::String8::String8(android::String8 const&)
.text:000000000000B88C                 LDP             X20, X22, [X19]
.text:000000000000B890                 ADD             X24, X21, #8
.text:000000000000B894                 CMP             X22, X20
.text:000000000000B898                 B.EQ            loc_B8C0
.text:000000000000B89C loc_B89C                                ; CODE XREF: sub_B808+AC↓j
.text:000000000000B89C                 SUB             X21, X21, #8
.text:000000000000B8A0                 SUB             X22, X22, #8
.text:000000000000B8A4                 MOV             X0, X21 ; this
.text:000000000000B8A8                 MOV             X1, X22 ; android::String8 *
.text:000000000000B8AC                 BL              ._ZN7android7String8C1ERKS0_ ; android::String8::String8(android::String8 const&)
.text:000000000000B8B0                 CMP             X20, X22
.text:000000000000B8B4                 B.NE            loc_B89C
.text:000000000000B8B8                 LDP             X22, X20, [X19]
.text:000000000000B8BC                 B               loc_B8C4
.text:000000000000B8C0 ; ---------------------------------------------------------------------------
.text:000000000000B8C0 loc_B8C0                                ; CODE XREF: sub_B808+90↑j
.text:000000000000B8C0                 MOV             X22, X20
.text:000000000000B8C4 loc_B8C4                                ; CODE XREF: sub_B808+B4↑j
.text:000000000000B8C4                 CMP             X20, X22
.text:000000000000B8C8                 STP             X21, X24, [X19]
.text:000000000000B8CC                 STR             X23, [X19,#0x10]
.text:000000000000B8D0                 B.EQ            loc_B8E8
.text:000000000000B8D4 loc_B8D4                                ; CODE XREF: sub_B808+DC↓j
.text:000000000000B8D4                 SUB             X20, X20, #8
.text:000000000000B8D8                 MOV             X0, X20 ; this
.text:000000000000B8DC                 BL              ._ZN7android7String8D1Ev ; android::String8::~String8()
.text:000000000000B8E0                 CMP             X22, X20
.text:000000000000B8E4                 B.NE            loc_B8D4
.text:000000000000B8E8 loc_B8E8                                ; CODE XREF: sub_B808+C8↑j
.text:000000000000B8E8                 CBZ             X22, loc_B904
.text:000000000000B8EC                 MOV             X0, X22 ; void *
.text:000000000000B8F0                 LDP             X29, X30, [SP,#0x30+var_s0]
.text:000000000000B8F4                 LDP             X20, X19, [SP,#0x30+var_10]
.text:000000000000B8F8                 LDP             X22, X21, [SP,#0x30+var_20]
.text:000000000000B8FC                 LDP             X24, X23, [SP+0x30+var_30],#0x40
.text:000000000000B900                 B               ._ZdlPv ; operator delete(void *)
.text:000000000000B904 ; ---------------------------------------------------------------------------
.text:000000000000B904 loc_B904                                ; CODE XREF: sub_B808:loc_B8E8↑j
.text:000000000000B904                 LDP             X29, X30, [SP,#0x30+var_s0]
.text:000000000000B908                 LDP             X20, X19, [SP,#0x30+var_10]
.text:000000000000B90C                 LDP             X22, X21, [SP,#0x30+var_20]
.text:000000000000B910                 LDP             X24, X23, [SP+0x30+var_30],#0x40
.text:000000000000B914                 RET
.text:000000000000B918 ; ---------------------------------------------------------------------------
.text:000000000000B918 loc_B918                                ; CODE XREF: sub_B808+54↑j
.text:000000000000B918                 MOV             X0, XZR
.text:000000000000B91C                 B               loc_B878
.text:000000000000B920 ; ---------------------------------------------------------------------------
.text:000000000000B920 loc_B920                                ; CODE XREF: sub_B808+2C↑j
.text:000000000000B920                 MOV             X0, X19
.text:000000000000B924                 BL              ._ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv ; std::__1::__vector_base_common<true>::__throw_length_error(void)
.text:000000000000B924 ; } // starts at B808
.text:000000000000B924 ; End of function sub_B808
.text:000000000000B928 loc_B928                                ; CODE XREF: sub_8B40-1F4↑p
.text:000000000000B928 ; __unwind {
.text:000000000000B928                 STR             X25, [SP,#-0x50]!
.text:000000000000B92C                 STP             X24, X23, [SP,#0x10]
.text:000000000000B930                 STP             X22, X21, [SP,#0x20]
.text:000000000000B934                 STP             X20, X19, [SP,#0x30]
.text:000000000000B938                 STP             X29, X30, [SP,#0x40]
.text:000000000000B93C                 ADD             X29, SP, #0x40 ; '@'
.text:000000000000B940                 LDP             X20, X8, [X0]
.text:000000000000B944                 MOV             X19, X0
.text:000000000000B948                 SUB             X21, X8, X20
.text:000000000000B94C                 ASR             X24, X21, #3
.text:000000000000B950                 ADD             X8, X24, #1
.text:000000000000B954                 LSR             X9, X8, #0x3D ; '='
.text:000000000000B958                 CBNZ            X9, loc_BA14
.text:000000000000B95C                 LDR             X9, [X19,#0x10]
.text:000000000000B960                 MOV             X22, X1
.text:000000000000B964                 MOV             X10, #0xFFFFFFFFFFFFFFE
.text:000000000000B968                 SUB             X9, X9, X20
.text:000000000000B96C                 CMP             X10, X9,ASR#3
.text:000000000000B970                 B.CC            loc_B990
.text:000000000000B974                 ASR             X9, X9, #2
.text:000000000000B978                 CMP             X9, X8
.text:000000000000B97C                 CSEL            X25, X8, X9, CC
.text:000000000000B980                 CBZ             X25, loc_BA0C
.text:000000000000B984                 LSR             X8, X25, #0x3D ; '='
.text:000000000000B988                 CBZ             X8, loc_B994
.text:000000000000B98C                 BL              .abort
.text:000000000000B990 ; ---------------------------------------------------------------------------
.text:000000000000B990 loc_B990                                ; CODE XREF: .text:000000000000B970↑j
.text:000000000000B990                 MOV             X25, #0x1FFFFFFFFFFFFFFF
.text:000000000000B994 loc_B994                                ; CODE XREF: .text:000000000000B988↑j
.text:000000000000B994                 LSL             X0, X25, #3
.text:000000000000B998                 BL              ._Znwm  ; operator new(ulong)
.text:000000000000B99C                 MOV             X23, X0
.text:000000000000B9A0 loc_B9A0                                ; CODE XREF: .text:000000000000BA10↓j
.text:000000000000B9A0                 LDR             X8, [X22]
.text:000000000000B9A4                 ADD             X22, X23, X24,LSL#3
.text:000000000000B9A8                 ADD             X24, X23, X25,LSL#3
.text:000000000000B9AC                 CMP             X21, #1
.text:000000000000B9B0                 STR             X8, [X22],#8
.text:000000000000B9B4                 B.LT            loc_B9CC
.text:000000000000B9B8                 MOV             X0, X23
.text:000000000000B9BC                 MOV             X1, X20
.text:000000000000B9C0                 MOV             X2, X21
.text:000000000000B9C4                 BL              .memcpy
.text:000000000000B9C8                 LDR             X20, [X19]
.text:000000000000B9CC loc_B9CC                                ; CODE XREF: .text:000000000000B9B4↑j
.text:000000000000B9CC                 STP             X23, X22, [X19]
.text:000000000000B9D0                 STR             X24, [X19,#0x10]
.text:000000000000B9D4                 CBZ             X20, loc_B9F4
.text:000000000000B9D8                 MOV             X0, X20
.text:000000000000B9DC                 LDP             X29, X30, [SP,#0x40]
.text:000000000000B9E0                 LDP             X20, X19, [SP,#0x30]
.text:000000000000B9E4                 LDP             X22, X21, [SP,#0x20]
.text:000000000000B9E8                 LDP             X24, X23, [SP,#0x10]
.text:000000000000B9EC                 LDR             X25, [SP],#0x50
.text:000000000000B9F0                 B               ._ZdlPv ; operator delete(void *)
.text:000000000000B9F4 ; ---------------------------------------------------------------------------
.text:000000000000B9F4 loc_B9F4                                ; CODE XREF: .text:000000000000B9D4↑j
.text:000000000000B9F4                 LDP             X29, X30, [SP,#0x40]
.text:000000000000B9F8                 LDP             X20, X19, [SP,#0x30]
.text:000000000000B9FC                 LDP             X22, X21, [SP,#0x20]
.text:000000000000BA00                 LDP             X24, X23, [SP,#0x10]
.text:000000000000BA04                 LDR             X25, [SP],#0x50
.text:000000000000BA08                 RET
.text:000000000000BA0C ; ---------------------------------------------------------------------------
.text:000000000000BA0C loc_BA0C                                ; CODE XREF: .text:000000000000B980↑j
.text:000000000000BA0C                 MOV             X23, XZR
.text:000000000000BA10                 B               loc_B9A0
.text:000000000000BA14 ; ---------------------------------------------------------------------------
.text:000000000000BA14 loc_BA14                                ; CODE XREF: .text:000000000000B958↑j
.text:000000000000BA14                 MOV             X0, X19
.text:000000000000BA18                 BL              ._ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv ; std::__1::__vector_base_common<true>::__throw_length_error(void)
.text:000000000000BA18 ; } // starts at B928
.text:000000000000BA18 ; ---------------------------------------------------------------------------
.text:000000000000BA1C                 DCD 0
.text:000000000000BA20 ; ---------------------------------------------------------------------------
.text:000000000000BA20 loc_BA20                                ; CODE XREF: sub_9CF8+248↑p
.text:000000000000BA20 ; __unwind {
.text:000000000000BA20                 STR             X25, [SP,#-0x50]!
.text:000000000000BA24                 STP             X24, X23, [SP,#0x10]
.text:000000000000BA28                 STP             X22, X21, [SP,#0x20]
.text:000000000000BA2C                 STP             X20, X19, [SP,#0x30]
.text:000000000000BA30                 STP             X29, X30, [SP,#0x40]
.text:000000000000BA34                 ADD             X29, SP, #0x40 ; '@'
.text:000000000000BA38                 LDP             X19, X23, [X0]
.text:000000000000BA3C                 MOV             X20, X0
.text:000000000000BA40                 SUB             X8, X23, X19
.text:000000000000BA44                 ASR             X25, X8, #3
.text:000000000000BA48                 ADD             X8, X25, #1
.text:000000000000BA4C                 LSR             X9, X8, #0x3D ; '='
.text:000000000000BA50                 CBNZ            X9, loc_BB64
.text:000000000000BA54                 LDR             X9, [X20,#0x10]
.text:000000000000BA58                 MOV             X21, X1
.text:000000000000BA5C                 MOV             X10, #0xFFFFFFFFFFFFFFE
.text:000000000000BA60                 SUB             X9, X9, X19
.text:000000000000BA64                 CMP             X10, X9,ASR#3
.text:000000000000BA68                 B.CC            loc_BA88
.text:000000000000BA6C                 ASR             X9, X9, #2
.text:000000000000BA70                 CMP             X9, X8
.text:000000000000BA74                 CSEL            X24, X8, X9, CC
.text:000000000000BA78                 CBZ             X24, loc_BB5C
.text:000000000000BA7C                 LSR             X8, X24, #0x3D ; '='
.text:000000000000BA80                 CBZ             X8, loc_BA8C
.text:000000000000BA84                 BL              .abort
.text:000000000000BA88 ; ---------------------------------------------------------------------------
.text:000000000000BA88 loc_BA88                                ; CODE XREF: .text:000000000000BA68↑j
.text:000000000000BA88                 MOV             X24, #0x1FFFFFFFFFFFFFFF
.text:000000000000BA8C loc_BA8C                                ; CODE XREF: .text:000000000000BA80↑j
.text:000000000000BA8C                 LSL             X0, X24, #3
.text:000000000000BA90                 BL              ._Znwm  ; operator new(ulong)
.text:000000000000BA94                 MOV             X22, X0
.text:000000000000BA98 loc_BA98                                ; CODE XREF: .text:000000000000BB60↓j
.text:000000000000BA98                 LDR             X8, [X21]
.text:000000000000BA9C                 ADD             X21, X22, X25,LSL#3
.text:000000000000BAA0                 STR             X8, [X21]
.text:000000000000BAA4                 CBZ             X8, loc_BAC0
.text:000000000000BAA8                 LDR             X9, [X8]
.text:000000000000BAAC                 MOV             X1, X21
.text:000000000000BAB0                 LDUR            X9, [X9,#-0x18]
.text:000000000000BAB4                 ADD             X0, X8, X9
.text:000000000000BAB8                 BL              ._ZNK7android7RefBase9incStrongEPKv ; android::RefBase::incStrong(void const*)
.text:000000000000BABC                 LDP             X19, X23, [X20]
.text:000000000000BAC0 loc_BAC0                                ; CODE XREF: .text:000000000000BAA4↑j
.text:000000000000BAC0                 ADD             X8, X22, X24,LSL#3
.text:000000000000BAC4                 ADD             X9, X21, #8
.text:000000000000BAC8                 CMP             X23, X19
.text:000000000000BACC                 B.EQ            loc_BAE8
.text:000000000000BAD0 loc_BAD0                                ; CODE XREF: .text:000000000000BAE0↓j
.text:000000000000BAD0                 LDR             X10, [X23,#-8]!
.text:000000000000BAD4                 STR             X10, [X21,#-8]!
.text:000000000000BAD8                 CMP             X19, X23
.text:000000000000BADC                 STR             XZR, [X23]
.text:000000000000BAE0                 B.NE            loc_BAD0
.text:000000000000BAE4                 LDP             X19, X23, [X20]
.text:000000000000BAE8 loc_BAE8                                ; CODE XREF: .text:000000000000BACC↑j
.text:000000000000BAE8                 CMP             X23, X19
.text:000000000000BAEC                 STP             X21, X9, [X20]
.text:000000000000BAF0                 STR             X8, [X20,#0x10]
.text:000000000000BAF4                 B.EQ            loc_BB24
.text:000000000000BAF8                 MOV             X20, X23
.text:000000000000BAFC loc_BAFC                                ; CODE XREF: .text:000000000000BB20↓j
.text:000000000000BAFC                 LDR             X8, [X20,#-8]!
.text:000000000000BB00                 CBZ             X8, loc_BB18
.text:000000000000BB04                 LDR             X9, [X8]
.text:000000000000BB08                 SUB             X1, X23, #8
.text:000000000000BB0C                 LDUR            X9, [X9,#-0x18]
.text:000000000000BB10                 ADD             X0, X8, X9
.text:000000000000BB14                 BL              ._ZNK7android7RefBase9decStrongEPKv ; android::RefBase::decStrong(void const*)
.text:000000000000BB18 loc_BB18                                ; CODE XREF: .text:000000000000BB00↑j
.text:000000000000BB18                 MOV             X23, X20
.text:000000000000BB1C                 CMP             X19, X20
.text:000000000000BB20                 B.NE            loc_BAFC
.text:000000000000BB24 loc_BB24                                ; CODE XREF: .text:000000000000BAF4↑j
.text:000000000000BB24                 CBZ             X19, loc_BB44
.text:000000000000BB28                 MOV             X0, X19
.text:000000000000BB2C                 LDP             X29, X30, [SP,#0x40]
.text:000000000000BB30                 LDP             X20, X19, [SP,#0x30]
.text:000000000000BB34                 LDP             X22, X21, [SP,#0x20]
.text:000000000000BB38                 LDP             X24, X23, [SP,#0x10]
.text:000000000000BB3C                 LDR             X25, [SP],#0x50
.text:000000000000BB40                 B               ._ZdlPv ; operator delete(void *)
.text:000000000000BB44 ; ---------------------------------------------------------------------------
.text:000000000000BB44 loc_BB44                                ; CODE XREF: .text:loc_BB24↑j
.text:000000000000BB44                 LDP             X29, X30, [SP,#0x40]
.text:000000000000BB48                 LDP             X20, X19, [SP,#0x30]
.text:000000000000BB4C                 LDP             X22, X21, [SP,#0x20]
.text:000000000000BB50                 LDP             X24, X23, [SP,#0x10]
.text:000000000000BB54                 LDR             X25, [SP],#0x50
.text:000000000000BB58                 RET
.text:000000000000BB5C ; ---------------------------------------------------------------------------
.text:000000000000BB5C loc_BB5C                                ; CODE XREF: .text:000000000000BA78↑j
.text:000000000000BB5C                 MOV             X22, XZR
.text:000000000000BB60                 B               loc_BA98
.text:000000000000BB64 ; ---------------------------------------------------------------------------
.text:000000000000BB64 loc_BB64                                ; CODE XREF: .text:000000000000BA50↑j
.text:000000000000BB64                 MOV             X0, X20
.text:000000000000BB68                 BL              ._ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv ; std::__1::__vector_base_common<true>::__throw_length_error(void)
.text:000000000000BB68 ; } // starts at BA20
.text:000000000000BB68 ; ---------------------------------------------------------------------------
.text:000000000000BB6C                 DCD 0
.text:000000000000BB70 ; ---------------------------------------------------------------------------
.text:000000000000BB70 ; __unwind {
.text:000000000000BB70                 STR             X19, [SP,#-0x20]!
.text:000000000000BB74                 STP             X29, X30, [SP,#0x10]
.text:000000000000BB78                 ADD             X29, SP, #0x10
.text:000000000000BB7C                 ADRP            X8, #off_109F0@PAGE
.text:000000000000BB80                 MOV             X19, X0
.text:000000000000BB84                 LDR             X8, [X8,#off_109F0@PAGEOFF]
.text:000000000000BB88                 ADD             X8, X8, #0x10
.text:000000000000BB8C                 STR             X8, [X0]
.text:000000000000BB90                 BL              ._ZN7android10VectorImpl13finish_vectorEv ; android::VectorImpl::finish_vector(void)
.text:000000000000BB94                 MOV             X0, X19
.text:000000000000BB98                 BL              ._ZN7android10VectorImplD2Ev ; android::VectorImpl::~VectorImpl()
.text:000000000000BB9C                 LDP             X29, X30, [SP,#0x10]
.text:000000000000BBA0                 MOV             X0, X19
.text:000000000000BBA4                 LDR             X19, [SP],#0x20
.text:000000000000BBA8                 B               ._ZdlPv ; operator delete(void *)
.text:000000000000BBA8 ; } // starts at BB70
.text:000000000000BBA8 ; ---------------------------------------------------------------------------
.text:000000000000BBAC                 ALIGN 0x10
.text:000000000000BBB0 ; __unwind {
.text:000000000000BBB0                 STP             X20, X19, [SP,#-0x20]!
.text:000000000000BBB4                 STP             X29, X30, [SP,#0x10]
.text:000000000000BBB8                 ADD             X29, SP, #0x10
.text:000000000000BBBC                 CBZ             X2, loc_BBDC
.text:000000000000BBC0                 MOV             X19, X2
.text:000000000000BBC4                 MOV             X0, X1
.text:000000000000BBC8 loc_BBC8                                ; CODE XREF: .text:000000000000BBD8↓j
.text:000000000000BBC8                 SUB             X19, X19, #1
.text:000000000000BBCC                 ADD             X20, X0, #8
.text:000000000000BBD0                 BL              ._ZN7android8String16C1Ev ; android::String16::String16(void)
.text:000000000000BBD4                 MOV             X0, X20
.text:000000000000BBD8                 CBNZ            X19, loc_BBC8
.text:000000000000BBDC loc_BBDC                                ; CODE XREF: .text:000000000000BBBC↑j
.text:000000000000BBDC                 LDP             X29, X30, [SP,#0x10]
.text:000000000000BBE0                 LDP             X20, X19, [SP],#0x20
.text:000000000000BBE4                 RET
.text:000000000000BBE4 ; } // starts at BBB0
.text:000000000000BBE8 ; ---------------------------------------------------------------------------
.text:000000000000BBE8 ; __unwind {
.text:000000000000BBE8                 STP             X20, X19, [SP,#-0x20]!
.text:000000000000BBEC                 STP             X29, X30, [SP,#0x10]
.text:000000000000BBF0                 ADD             X29, SP, #0x10
.text:000000000000BBF4                 CBZ             X2, loc_BC14
.text:000000000000BBF8                 MOV             X19, X2
.text:000000000000BBFC                 MOV             X20, X1
.text:000000000000BC00 loc_BC00                                ; CODE XREF: .text:000000000000BC10↓j
.text:000000000000BC00                 MOV             X0, X20
.text:000000000000BC04                 SUB             X19, X19, #1
.text:000000000000BC08                 BL              ._ZN7android8String16D1Ev ; android::String16::~String16()
.text:000000000000BC0C                 ADD             X20, X20, #8
.text:000000000000BC10                 CBNZ            X19, loc_BC00
.text:000000000000BC14 loc_BC14                                ; CODE XREF: .text:000000000000BBF4↑j
.text:000000000000BC14                 LDP             X29, X30, [SP,#0x10]
.text:000000000000BC18                 LDP             X20, X19, [SP],#0x20
.text:000000000000BC1C                 RET
.text:000000000000BC1C ; } // starts at BBE8
.text:000000000000BC20 ; ---------------------------------------------------------------------------
.text:000000000000BC20 ; __unwind {
.text:000000000000BC20                 STR             X21, [SP,#-0x30]!
.text:000000000000BC24                 STP             X20, X19, [SP,#0x10]
.text:000000000000BC28                 STP             X29, X30, [SP,#0x20]
.text:000000000000BC2C                 ADD             X29, SP, #0x20 ; ' '
.text:000000000000BC30                 CBZ             X3, loc_BC5C
.text:000000000000BC34                 MOV             X19, X3
.text:000000000000BC38                 MOV             X20, X2
.text:000000000000BC3C                 MOV             X21, X1
.text:000000000000BC40 loc_BC40                                ; CODE XREF: .text:000000000000BC58↓j
.text:000000000000BC40                 MOV             X0, X21
.text:000000000000BC44                 MOV             X1, X20
.text:000000000000BC48                 SUB             X19, X19, #1
.text:000000000000BC4C                 BL              ._ZN7android8String16C1ERKS0_ ; android::String16::String16(android::String16 const&)
.text:000000000000BC50                 ADD             X21, X21, #8
.text:000000000000BC54                 ADD             X20, X20, #8
.text:000000000000BC58                 CBNZ            X19, loc_BC40
.text:000000000000BC5C loc_BC5C                                ; CODE XREF: .text:000000000000BC30↑j
.text:000000000000BC5C                 LDP             X29, X30, [SP,#0x20]
.text:000000000000BC60                 LDP             X20, X19, [SP,#0x10]
.text:000000000000BC64                 LDR             X21, [SP],#0x30
.text:000000000000BC68                 RET
.text:000000000000BC68 ; } // starts at BC20
.text:000000000000BC68 ; ---------------------------------------------------------------------------
.text:000000000000BC6C                 ALIGN 0x10
.text:000000000000BC70 ; __unwind {
.text:000000000000BC70                 STR             X21, [SP,#-0x30]!
.text:000000000000BC74                 STP             X20, X19, [SP,#0x10]
.text:000000000000BC78                 STP             X29, X30, [SP,#0x20]
.text:000000000000BC7C                 ADD             X29, SP, #0x20 ; ' '
.text:000000000000BC80                 CBZ             X3, loc_BCA8
.text:000000000000BC84                 MOV             X19, X3
.text:000000000000BC88                 MOV             X20, X2
.text:000000000000BC8C                 MOV             X21, X1
.text:000000000000BC90 loc_BC90                                ; CODE XREF: .text:000000000000BCA4↓j
.text:000000000000BC90                 MOV             X0, X21
.text:000000000000BC94                 MOV             X1, X20
.text:000000000000BC98                 SUB             X19, X19, #1
.text:000000000000BC9C                 BL              ._ZN7android8String16C1ERKS0_ ; android::String16::String16(android::String16 const&)
.text:000000000000BCA0                 ADD             X21, X21, #8
.text:000000000000BCA4                 CBNZ            X19, loc_BC90
.text:000000000000BCA8 loc_BCA8                                ; CODE XREF: .text:000000000000BC80↑j
.text:000000000000BCA8                 LDP             X29, X30, [SP,#0x20]
.text:000000000000BCAC                 LDP             X20, X19, [SP,#0x10]
.text:000000000000BCB0                 LDR             X21, [SP],#0x30
.text:000000000000BCB4                 RET
.text:000000000000BCB4 ; } // starts at BC70
.text:000000000000BCB8 ; ---------------------------------------------------------------------------
.text:000000000000BCB8 ; __unwind {
.text:000000000000BCB8                 STP             X29, X30, [SP,#-0x10]!
.text:000000000000BCBC                 MOV             X29, SP
.text:000000000000BCC0                 MOV             X8, X2
.text:000000000000BCC4                 MOV             X0, X1
.text:000000000000BCC8                 MOV             X1, X8
.text:000000000000BCCC                 LSL             X2, X3, #3
.text:000000000000BCD0                 BL              .memmove
.text:000000000000BCD4                 LDP             X29, X30, [SP],#0x10
.text:000000000000BCD8                 RET
.text:000000000000BCD8 ; } // starts at BCB8
.text:000000000000BCD8 ; ---------------------------------------------------------------------------
.text:000000000000BCDC                 ALIGN 0x20
.text:000000000000BCE0 ; =============== S U B R O U T I N E =======================================
.text:000000000000BCE0 ; Attributes: bp-based frame
.text:000000000000BCE0 sub_BCE0                                ; DATA XREF: .init_array:0000000000010760↓o
.text:000000000000BCE0 var_10          = -0x10
.text:000000000000BCE0 var_s0          =  0
.text:000000000000BCE0 ; __unwind {
.text:000000000000BCE0                 STR             X19, [SP,#-0x10+var_10]!
.text:000000000000BCE4                 STP             X29, X30, [SP,#0x10+var_s0]
.text:000000000000BCE8                 ADD             X29, SP, #0x10
.text:000000000000BCEC                 MOV             W0, #1  ; unsigned __int64
.text:000000000000BCF0                 MOV             W19, #1
.text:000000000000BCF4                 BL              ._Znwm  ; operator new(ulong)
.text:000000000000BCF8                 MOV             X8, X0
.text:000000000000BCFC                 ADRP            X9, #qword_11000@PAGE
.text:000000000000BD00                 ADRP            X0, #_ZNSt3__15mutexD1Ev_ptr@PAGE
.text:000000000000BD04                 ADRP            X1, #unk_11008@PAGE
.text:000000000000BD08                 ADRP            X2, #off_F000@PAGE
.text:000000000000BD0C                 LDR             X0, [X0,#_ZNSt3__15mutexD1Ev_ptr@PAGEOFF] ; lpfunc
.text:000000000000BD10                 ADD             X1, X1, #unk_11008@PAGEOFF ; obj
.text:000000000000BD14                 STRB            W19, [X8]
.text:000000000000BD18                 ADD             X2, X2, #off_F000@PAGEOFF ; lpdso_handle
.text:000000000000BD1C                 STR             X8, [X9,#qword_11000@PAGEOFF]
.text:000000000000BD20                 LDP             X29, X30, [SP,#0x10+var_s0]
.text:000000000000BD24                 LDR             X19, [SP+0x10+var_10],#0x20
.text:000000000000BD28                 B               .__cxa_atexit
.text:000000000000BD28 ; } // starts at BCE0
.text:000000000000BD28 ; End of function sub_BCE0
.text:000000000000BD28 ; ---------------------------------------------------------------------------
.text:000000000000BD2C                 ALIGN 0x10
.text:000000000000BD30 ; =============== S U B R O U T I N E =======================================
.text:000000000000BD30 ; Attributes: bp-based frame
.text:000000000000BD30                 EXPORT AIBinder_fromJavaBinder
.text:000000000000BD30 AIBinder_fromJavaBinder                 ; DATA XREF: LOAD:0000000000001290↑o
.text:000000000000BD30 var_28          = -0x28
.text:000000000000BD30 var_20          = -0x20
.text:000000000000BD30 var_18          = -0x18
.text:000000000000BD30 var_10          = -0x10
.text:000000000000BD30 var_s0          =  0
.text:000000000000BD30 ; __unwind {
.text:000000000000BD30                 SUB             SP, SP, #0x40
.text:000000000000BD34                 STP             X20, X19, [SP,#0x30+var_10]
.text:000000000000BD38                 STP             X29, X30, [SP,#0x30+var_s0]
.text:000000000000BD3C                 ADD             X29, SP, #0x30
.text:000000000000BD40                 MRS             X20, #3, c13, c0, #2
.text:000000000000BD44                 LDR             X8, [X20,#0x28]
.text:000000000000BD48                 STR             X8, [SP,#0x30+var_18]
.text:000000000000BD4C                 CBZ             X1, loc_BDA8
.text:000000000000BD50                 ADD             X8, SP, #0x30+var_20
.text:000000000000BD54                 BL              ._ZN7android20ibinderForJavaObjectEP7_JNIEnvP8_jobject ; android::ibinderForJavaObject(_JNIEnv *,_jobject *)
.text:000000000000BD58                 ADD             X8, SP, #0x30+var_28
.text:000000000000BD5C                 ADD             X0, SP, #0x30+var_20
.text:000000000000BD60                 BL              sub_9088
.text:000000000000BD64                 LDR             X0, [SP,#0x30+var_28]
.text:000000000000BD68                 BL              .AIBinder_incStrong
.text:000000000000BD6C                 LDR             X19, [SP,#0x30+var_28]
.text:000000000000BD70                 CBZ             X19, loc_BD88
.text:000000000000BD74                 LDR             X8, [X19]
.text:000000000000BD78                 ADD             X1, SP, #0x30+var_28 ; void *
.text:000000000000BD7C                 LDUR            X8, [X8,#-0x18]
.text:000000000000BD80                 ADD             X0, X19, X8 ; this
.text:000000000000BD84                 BL              ._ZNK7android7RefBase9decStrongEPKv ; android::RefBase::decStrong(void const*)
.text:000000000000BD88 loc_BD88                                ; CODE XREF: AIBinder_fromJavaBinder+40↑j
.text:000000000000BD88                 LDR             X8, [SP,#0x30+var_20]
.text:000000000000BD8C                 CBZ             X8, loc_BDAC
.text:000000000000BD90                 LDR             X9, [X8]
.text:000000000000BD94                 ADD             X1, SP, #0x30+var_20 ; void *
.text:000000000000BD98                 LDUR            X9, [X9,#-0x18]
.text:000000000000BD9C                 ADD             X0, X8, X9 ; this
.text:000000000000BDA0                 BL              ._ZNK7android7RefBase9decStrongEPKv ; android::RefBase::decStrong(void const*)
.text:000000000000BDA4                 B               loc_BDAC
.text:000000000000BDA8 ; ---------------------------------------------------------------------------
.text:000000000000BDA8 loc_BDA8                                ; CODE XREF: AIBinder_fromJavaBinder+1C↑j
.text:000000000000BDA8                 MOV             X19, XZR
.text:000000000000BDAC loc_BDAC                                ; CODE XREF: AIBinder_fromJavaBinder+5C↑j
.text:000000000000BDAC                                         ; AIBinder_fromJavaBinder+74↑j
.text:000000000000BDAC                 LDR             X8, [X20,#0x28]
.text:000000000000BDB0                 LDR             X9, [SP,#0x30+var_18]
.text:000000000000BDB4                 CMP             X8, X9
.text:000000000000BDB8                 B.NE            loc_BDD0
.text:000000000000BDBC                 MOV             X0, X19
.text:000000000000BDC0                 LDP             X29, X30, [SP,#0x30+var_s0]
.text:000000000000BDC4                 LDP             X20, X19, [SP,#0x30+var_10]
.text:000000000000BDC8                 ADD             SP, SP, #0x40 ; '@'
.text:000000000000BDCC                 RET
.text:000000000000BDD0 ; ---------------------------------------------------------------------------
.text:000000000000BDD0 loc_BDD0                                ; CODE XREF: AIBinder_fromJavaBinder+88↑j
.text:000000000000BDD0                 BL              .__stack_chk_fail
.text:000000000000BDD0 ; } // starts at BD30
.text:000000000000BDD0 ; End of function AIBinder_fromJavaBinder
.text:000000000000BDD0 ; ---------------------------------------------------------------------------
.text:000000000000BDD4                 ALIGN 8
.text:000000000000BDD8 ; =============== S U B R O U T I N E =======================================
.text:000000000000BDD8 ; Attributes: bp-based frame
.text:000000000000BDD8                 EXPORT AIBinder_toJavaBinder
.text:000000000000BDD8 AIBinder_toJavaBinder                   ; DATA XREF: LOAD:0000000000001380↑o
.text:000000000000BDD8 var_20          = -0x20
.text:000000000000BDD8 var_18          = -0x18
.text:000000000000BDD8 var_10          = -0x10
.text:000000000000BDD8 var_s0          =  0
.text:000000000000BDD8 ; __unwind {
.text:000000000000BDD8                 SUB             SP, SP, #0x30
.text:000000000000BDDC                 STP             X20, X19, [SP,#0x20+var_10]
.text:000000000000BDE0                 STP             X29, X30, [SP,#0x20+var_s0]
.text:000000000000BDE4                 ADD             X29, SP, #0x20
.text:000000000000BDE8                 MRS             X20, #3, c13, c0, #2
.text:000000000000BDEC                 LDR             X8, [X20,#0x28]
.text:000000000000BDF0                 STR             X8, [SP,#0x20+var_18]
.text:000000000000BDF4                 CBZ             X1, loc_BE40
.text:000000000000BDF8                 LDR             X8, [X1]
.text:000000000000BDFC                 MOV             X19, X0
.text:000000000000BE00                 MOV             X0, X1
.text:000000000000BE04                 LDR             X9, [X8,#0x10]
.text:000000000000BE08                 MOV             X8, SP
.text:000000000000BE0C                 BLR             X9
.text:000000000000BE10                 MOV             X1, SP
.text:000000000000BE14                 MOV             X0, X19
.text:000000000000BE18                 BL              ._ZN7android20javaObjectForIBinderEP7_JNIEnvRKNS_2spINS_7IBinderEEE ; android::javaObjectForIBinder(_JNIEnv *,android::sp<android::IBinder> const&)
.text:000000000000BE1C                 LDR             X8, [SP,#0x20+var_20]
.text:000000000000BE20                 MOV             X19, X0
.text:000000000000BE24                 CBZ             X8, loc_BE44
.text:000000000000BE28                 LDR             X9, [X8]
.text:000000000000BE2C                 MOV             X1, SP  ; void *
.text:000000000000BE30                 LDUR            X9, [X9,#-0x18]
.text:000000000000BE34                 ADD             X0, X8, X9 ; this
.text:000000000000BE38                 BL              ._ZNK7android7RefBase9decStrongEPKv ; android::RefBase::decStrong(void const*)
.text:000000000000BE3C                 B               loc_BE44
.text:000000000000BE40 ; ---------------------------------------------------------------------------
.text:000000000000BE40 loc_BE40                                ; CODE XREF: AIBinder_toJavaBinder+1C↑j
.text:000000000000BE40                 MOV             X19, XZR
.text:000000000000BE44 loc_BE44                                ; CODE XREF: AIBinder_toJavaBinder+4C↑j
.text:000000000000BE44                                         ; AIBinder_toJavaBinder+64↑j
.text:000000000000BE44                 LDR             X8, [X20,#0x28]
.text:000000000000BE48                 LDR             X9, [SP,#0x20+var_18]
.text:000000000000BE4C                 CMP             X8, X9
.text:000000000000BE50                 B.NE            loc_BE68
.text:000000000000BE54                 MOV             X0, X19
.text:000000000000BE58                 LDP             X29, X30, [SP,#0x20+var_s0]
.text:000000000000BE5C                 LDP             X20, X19, [SP,#0x20+var_10]
.text:000000000000BE60                 ADD             SP, SP, #0x30 ; '0'
.text:000000000000BE64                 RET
.text:000000000000BE68 ; ---------------------------------------------------------------------------
.text:000000000000BE68 loc_BE68                                ; CODE XREF: AIBinder_toJavaBinder+78↑j
.text:000000000000BE68                 BL              .__stack_chk_fail
.text:000000000000BE68 ; } // starts at BDD8
.text:000000000000BE68 ; End of function AIBinder_toJavaBinder
.text:000000000000BE68 ; ---------------------------------------------------------------------------
.text:000000000000BE6C                 ALIGN 0x10
.text:000000000000BE70 ; =============== S U B R O U T I N E =======================================
.text:000000000000BE70 ; Attributes: bp-based frame
.text:000000000000BE70 sub_BE70                                ; CODE XREF: AParcel_writeStringArray+3C↓p
.text:000000000000BE70                                         ; AParcel_writeParcelableArray+28↓p ...
.text:000000000000BE70 var_38          = -0x38
.text:000000000000BE70 var_30          = -0x30
.text:000000000000BE70 var_28          = -0x28
.text:000000000000BE70 var_20          = -0x20
.text:000000000000BE70 var_10          = -0x10
.text:000000000000BE70 var_s0          =  0
.text:000000000000BE70 ; __unwind {
.text:000000000000BE70                 SUB             SP, SP, #0x50
.text:000000000000BE74                 STR             X21, [SP,#0x40+var_20]
.text:000000000000BE78                 STP             X20, X19, [SP,#0x40+var_10]
.text:000000000000BE7C                 STP             X29, X30, [SP,#0x40+var_s0]
.text:000000000000BE80                 ADD             X29, SP, #0x40
.text:000000000000BE84                 MRS             X20, #3, c13, c0, #2
.text:000000000000BE88                 CMN             W2, #1
.text:000000000000BE8C                 LDR             X8, [X20,#0x28]
.text:000000000000BE90                 STR             X8, [SP,#0x40+var_28]
.text:000000000000BE94                 B.LT            loc_BF34
.text:000000000000BE98                 MOV             W19, W2
.text:000000000000BE9C                 B.NE            loc_BF1C
.text:000000000000BEA0                 TBNZ            W1, #0, loc_BF1C
.text:000000000000BEA4                 BL              ._ZN7android4base21GetMinimumLogSeverityEv ; android::base::GetMinimumLogSeverity(void)
.text:000000000000BEA8                 CMP             W0, #4
.text:000000000000BEAC                 B.GT            loc_BF34
.text:000000000000BEB0                 BL              .__errno
.text:000000000000BEB4                 ADRP            X1, #aFrameworksNati_0@PAGE ; "frameworks/native/libs/binder/ndk/parce"...
.text:000000000000BEB8                 LDR             W21, [X0]
.text:000000000000BEBC                 MOV             X19, X0
.text:000000000000BEC0                 ADD             X1, X1, #aFrameworksNati_0@PAGEOFF ; "frameworks/native/libs/binder/ndk/parce"...
.text:000000000000BEC4                 MOV             W2, #0x35 ; '5'
.text:000000000000BEC8                 MOV             W6, #0xFFFFFFFF
.text:000000000000BECC                 ADD             X0, SP, #0x40+var_30
.text:000000000000BED0                 MOV             W3, WZR
.text:000000000000BED4                 MOV             W4, #4
.text:000000000000BED8                 MOV             X5, XZR
.text:000000000000BEDC                 BL              ._ZN7android4base10LogMessageC1EPKcjNS0_5LogIdENS0_11LogSeverityES3_i ; android::base::LogMessage::LogMessage(char const*,uint,android::base::LogId,android::base::LogSeverity,char const*,int)
.text:000000000000BEE0                 ADD             X0, SP, #0x40+var_30 ; this
.text:000000000000BEE4                 BL              ._ZN7android4base10LogMessage6streamEv ; android::base::LogMessage::stream(void)
.text:000000000000BEE8                 ADRP            X1, #aWriteandvalida@PAGE ; "WriteAndValidateArraySize"
.text:000000000000BEEC                 ADD             X1, X1, #aWriteandvalida@PAGEOFF ; "WriteAndValidateArraySize"
.text:000000000000BEF0                 MOV             W2, #0x19
.text:000000000000BEF4                 BL              sub_B548
.text:000000000000BEF8                 ADRP            X1, #aNullArrayMustB@PAGE ; ": null array must be used with length ="...
.text:000000000000BEFC                 ADD             X1, X1, #aNullArrayMustB@PAGEOFF ; ": null array must be used with length ="...
.text:000000000000BF00                 MOV             W2, #0x2C ; ','
.text:000000000000BF04                 BL              sub_B548
.text:000000000000BF08                 ADD             X0, SP, #0x40+var_30 ; this
.text:000000000000BF0C                 BL              ._ZN7android4base10LogMessageD1Ev ; android::base::LogMessage::~LogMessage()
.text:000000000000BF10                 MOV             W0, #0xFFFFFFEA ; this
.text:000000000000BF14                 STR             W21, [X19]
.text:000000000000BF18                 B               loc_BF38
.text:000000000000BF1C ; ---------------------------------------------------------------------------
.text:000000000000BF1C loc_BF1C                                ; CODE XREF: sub_BE70+2C↑j
.text:000000000000BF1C                                         ; sub_BE70+30↑j
.text:000000000000BF1C                 CMP             W19, #1
.text:000000000000BF20                 B.LT            loc_BF5C
.text:000000000000BF24                 TBZ             W1, #0, loc_BF5C
.text:000000000000BF28                 BL              ._ZN7android4base21GetMinimumLogSeverityEv ; android::base::GetMinimumLogSeverity(void)
.text:000000000000BF2C                 CMP             W0, #4
.text:000000000000BF30                 B.LE            loc_BF74
.text:000000000000BF34 loc_BF34                                ; CODE XREF: sub_BE70+24↑j
.text:000000000000BF34                                         ; sub_BE70+3C↑j
.text:000000000000BF34                 MOV             W0, #0xFFFFFFEA
.text:000000000000BF38 loc_BF38                                ; CODE XREF: sub_BE70+A8↑j
.text:000000000000BF38                                         ; sub_BE70+F8↓j ...
.text:000000000000BF38                 LDR             X8, [X20,#0x28]
.text:000000000000BF3C                 LDR             X9, [SP,#0x40+var_28]
.text:000000000000BF40                 CMP             X8, X9
.text:000000000000BF44                 B.NE            loc_C000
.text:000000000000BF48                 LDP             X29, X30, [SP,#0x40+var_s0]
.text:000000000000BF4C                 LDP             X20, X19, [SP,#0x40+var_10]
.text:000000000000BF50                 LDR             X21, [SP,#0x40+var_20]
.text:000000000000BF54                 ADD             SP, SP, #0x50 ; 'P'
.text:000000000000BF58                 RET
.text:000000000000BF5C ; ---------------------------------------------------------------------------
.text:000000000000BF5C loc_BF5C                                ; CODE XREF: sub_BE70+B0↑j
.text:000000000000BF5C                                         ; sub_BE70+B4↑j
.text:000000000000BF5C                 LDR             X0, [X0,#8] ; this
.text:000000000000BF60                 MOV             W1, W19 ; int
.text:000000000000BF64                 BL              ._ZN7android6Parcel10writeInt32Ei ; android::Parcel::writeInt32(int)
.text:000000000000BF68                 CBZ             W0, loc_BF38
.text:000000000000BF6C                 BL              sub_E118
.text:000000000000BF70                 B               loc_BF38
.text:000000000000BF74 ; ---------------------------------------------------------------------------
.text:000000000000BF74 loc_BF74                                ; CODE XREF: sub_BE70+C0↑j
.text:000000000000BF74                 BL              .__errno
.text:000000000000BF78                 ADRP            X1, #aFrameworksNati_0@PAGE ; "frameworks/native/libs/binder/ndk/parce"...
.text:000000000000BF7C                 STR             X20, [SP,#0x40+var_38]
.text:000000000000BF80                 MOV             X20, X0
.text:000000000000BF84                 LDR             W21, [X0]
.text:000000000000BF88                 ADD             X1, X1, #aFrameworksNati_0@PAGEOFF ; "frameworks/native/libs/binder/ndk/parce"...
.text:000000000000BF8C                 MOV             W2, #0x39 ; '9'
.text:000000000000BF90                 MOV             W6, #0xFFFFFFFF
.text:000000000000BF94                 ADD             X0, SP, #0x40+var_30
.text:000000000000BF98                 MOV             W3, WZR
.text:000000000000BF9C                 MOV             W4, #4
.text:000000000000BFA0                 MOV             X5, XZR
.text:000000000000BFA4                 BL              ._ZN7android4base10LogMessageC1EPKcjNS0_5LogIdENS0_11LogSeverityES3_i ; android::base::LogMessage::LogMessage(char const*,uint,android::base::LogId,android::base::LogSeverity,char const*,int)
.text:000000000000BFA8                 ADD             X0, SP, #0x40+var_30 ; this
.text:000000000000BFAC                 BL              ._ZN7android4base10LogMessage6streamEv ; android::base::LogMessage::stream(void)
.text:000000000000BFB0                 ADRP            X1, #aWriteandvalida@PAGE ; "WriteAndValidateArraySize"
.text:000000000000BFB4                 ADD             X1, X1, #aWriteandvalida@PAGEOFF ; "WriteAndValidateArraySize"
.text:000000000000BFB8                 MOV             W2, #0x19
.text:000000000000BFBC                 BL              sub_B548
.text:000000000000BFC0                 ADRP            X1, #aNullBufferCann@PAGE ; ": null buffer cannot be for size "
.text:000000000000BFC4                 ADD             X1, X1, #aNullBufferCann@PAGEOFF ; ": null buffer cannot be for size "
.text:000000000000BFC8                 MOV             W2, #0x21 ; '!'
.text:000000000000BFCC                 BL              sub_B548
.text:000000000000BFD0                 MOV             W1, W19
.text:000000000000BFD4                 BL              ._ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEi ; std::__1::basic_ostream<char,std::__1::char_traits<char>>::operator<<(int)
.text:000000000000BFD8                 ADRP            X1, #aArray@PAGE ; " array."
.text:000000000000BFDC                 ADD             X1, X1, #aArray@PAGEOFF ; " array."
.text:000000000000BFE0                 MOV             W2, #7
.text:000000000000BFE4                 BL              sub_B548
.text:000000000000BFE8                 ADD             X0, SP, #0x40+var_30 ; this
.text:000000000000BFEC                 BL              ._ZN7android4base10LogMessageD1Ev ; android::base::LogMessage::~LogMessage()
.text:000000000000BFF0                 STR             W21, [X20]
.text:000000000000BFF4                 MOV             W0, #0xFFFFFFEA
.text:000000000000BFF8                 LDR             X20, [SP,#0x40+var_38]
.text:000000000000BFFC                 B               loc_BF38
.text:000000000000C000 ; ---------------------------------------------------------------------------
.text:000000000000C000 loc_C000                                ; CODE XREF: sub_BE70+D4↑j
.text:000000000000C000                 BL              .__stack_chk_fail
.text:000000000000C000 ; } // starts at BE70
.text:000000000000C000 ; End of function sub_BE70
.text:000000000000C000 ; ---------------------------------------------------------------------------
.text:000000000000C004                 ALIGN 8
.text:000000000000C008 ; =============== S U B R O U T I N E =======================================
.text:000000000000C008 ; Attributes: bp-based frame
.text:000000000000C008 AParcel_readCharArray_0                 ; CODE XREF: AParcel_readCharArray↓j
.text:000000000000C008 var_38          = -0x38
.text:000000000000C008 var_2C          = -0x2C
.text:000000000000C008 var_28          = -0x28
.text:000000000000C008 var_20          = -0x20
.text:000000000000C008 var_10          = -0x10
.text:000000000000C008 var_s0          =  0
.text:000000000000C008 ; __unwind {
.text:000000000000C008                 SUB             SP, SP, #0x50
.text:000000000000C00C                 STP             X22, X21, [SP,#0x40+var_20]
.text:000000000000C010                 STP             X20, X19, [SP,#0x40+var_10]
.text:000000000000C014                 STP             X29, X30, [SP,#0x40+var_s0]
.text:000000000000C018                 ADD             X29, SP, #0x40
.text:000000000000C01C                 MRS             X22, #3, c13, c0, #2
.text:000000000000C020                 MOV             X21, X1
.text:000000000000C024                 LDR             X8, [X22,#0x28]
.text:000000000000C028                 ADD             X1, SP, #0x40+var_2C ; int *
.text:000000000000C02C                 MOV             X20, X2
.text:000000000000C030                 STR             X8, [SP,#0x40+var_28]
.text:000000000000C034                 LDR             X19, [X0,#8]
.text:000000000000C038                 MOV             X0, X19 ; this
.text:000000000000C03C                 BL              ._ZNK7android6Parcel9readInt32EPi ; android::Parcel::readInt32(int *)
.text:000000000000C040                 CBZ             W0, loc_C04C
.text:000000000000C044 loc_C044                                ; CODE XREF: AParcel_readCharArray_0+94↓j
.text:000000000000C044                                         ; AParcel_readCharArray_0+CC↓j
.text:000000000000C044                 BL              sub_E118
.text:000000000000C048                 B               loc_C0DC
.text:000000000000C04C ; ---------------------------------------------------------------------------
.text:000000000000C04C loc_C04C                                ; CODE XREF: AParcel_readCharArray_0+38↑j
.text:000000000000C04C                 LDR             W1, [SP,#0x40+var_2C]
.text:000000000000C050                 CMN             W1, #1
.text:000000000000C054                 B.GE            loc_C060
.text:000000000000C058                 MOV             W0, #0xFFFFFFEA
.text:000000000000C05C                 B               loc_C0DC
.text:000000000000C060 ; ---------------------------------------------------------------------------
.text:000000000000C060 loc_C060                                ; CODE XREF: AParcel_readCharArray_0+4C↑j
.text:000000000000C060                 ADD             X2, SP, #0x40+var_38
.text:000000000000C064                 MOV             X0, X21
.text:000000000000C068                 BLR             X20
.text:000000000000C06C                 TBZ             W0, #0, loc_C08C
.text:000000000000C070                 LDR             W8, [SP,#0x40+var_2C]
.text:000000000000C074                 CMP             W8, #1
.text:000000000000C078                 B.LT            loc_C0D8
.text:000000000000C07C                 LDR             X1, [SP,#0x40+var_38] ; char16_t *
.text:000000000000C080                 CBZ             X1, loc_C08C
.text:000000000000C084                 CMN             W8, W8
.text:000000000000C088                 B.VC            loc_C094
.text:000000000000C08C loc_C08C                                ; CODE XREF: AParcel_readCharArray_0+64↑j
.text:000000000000C08C                                         ; AParcel_readCharArray_0+78↑j
.text:000000000000C08C                 MOV             W0, #0xFFFFFFF4
.text:000000000000C090                 B               loc_C0DC
.text:000000000000C094 ; ---------------------------------------------------------------------------
.text:000000000000C094 loc_C094                                ; CODE XREF: AParcel_readCharArray_0+80↑j
.text:000000000000C094                 MOV             X0, X19 ; this
.text:000000000000C098                 BL              ._ZNK7android6Parcel8readCharEPDs ; android::Parcel::readChar(char16_t *)
.text:000000000000C09C                 CBNZ            W0, loc_C044
.text:000000000000C0A0                 MOV             X20, XZR
.text:000000000000C0A4                 MOV             W8, #2
.text:000000000000C0A8 loc_C0A8                                ; CODE XREF: AParcel_readCharArray_0+C8↓j
.text:000000000000C0A8                 LDRSW           X9, [SP,#0x40+var_2C]
.text:000000000000C0AC                 ADD             X20, X20, #1
.text:000000000000C0B0                 CMP             X20, X9
.text:000000000000C0B4                 B.GE            loc_C0D8
.text:000000000000C0B8                 LDR             X9, [SP,#0x40+var_38]
.text:000000000000C0BC                 MOV             X0, X19 ; this
.text:000000000000C0C0                 ADD             X21, X8, #2
.text:000000000000C0C4                 ADD             X1, X9, X8 ; char16_t *
.text:000000000000C0C8                 BL              ._ZNK7android6Parcel8readCharEPDs ; android::Parcel::readChar(char16_t *)
.text:000000000000C0CC                 MOV             X8, X21
.text:000000000000C0D0                 CBZ             W0, loc_C0A8
.text:000000000000C0D4                 B               loc_C044
.text:000000000000C0D8 ; ---------------------------------------------------------------------------
.text:000000000000C0D8 loc_C0D8                                ; CODE XREF: AParcel_readCharArray_0+70↑j
.text:000000000000C0D8                                         ; AParcel_readCharArray_0+AC↑j
.text:000000000000C0D8                 MOV             W0, WZR
.text:000000000000C0DC loc_C0DC                                ; CODE XREF: AParcel_readCharArray_0+40↑j
.text:000000000000C0DC                                         ; AParcel_readCharArray_0+54↑j ...
.text:000000000000C0DC                 LDR             X8, [X22,#0x28]
.text:000000000000C0E0                 LDR             X9, [SP,#0x40+var_28]
.text:000000000000C0E4                 CMP             X8, X9
.text:000000000000C0E8                 B.NE            loc_C100
.text:000000000000C0EC                 LDP             X29, X30, [SP,#0x40+var_s0]
.text:000000000000C0F0                 LDP             X20, X19, [SP,#0x40+var_10]
.text:000000000000C0F4                 LDP             X22, X21, [SP,#0x40+var_20]
.text:000000000000C0F8                 ADD             SP, SP, #0x50 ; 'P'
.text:000000000000C0FC                 RET
.text:000000000000C100 ; ---------------------------------------------------------------------------
.text:000000000000C100 loc_C100                                ; CODE XREF: AParcel_readCharArray_0+E0↑j
.text:000000000000C100                 BL              .__stack_chk_fail
.text:000000000000C100 ; } // starts at C008
.text:000000000000C100 ; End of function AParcel_readCharArray_0
.text:000000000000C100 ; ---------------------------------------------------------------------------
.text:000000000000C104                 ALIGN 8
.text:000000000000C108 ; =============== S U B R O U T I N E =======================================
.text:000000000000C108 ; Attributes: bp-based frame
.text:000000000000C108 ; __int64 __fastcall AParcel_delete(void *)
.text:000000000000C108                 EXPORT AParcel_delete
.text:000000000000C108 AParcel_delete                          ; DATA XREF: LOAD:00000000000019C8↑o
.text:000000000000C108 var_10          = -0x10
.text:000000000000C108 var_s0          =  0
.text:000000000000C108 ; __unwind {
.text:000000000000C108                 CBZ             X0, locret_C14C
.text:000000000000C10C                 STP             X20, X19, [SP,#-0x10+var_10]!
.text:000000000000C110                 STP             X29, X30, [SP,#0x10+var_s0]
.text:000000000000C114                 ADD             X29, SP, #0x10
.text:000000000000C118                 LDRB            W8, [X0,#0x10]
.text:000000000000C11C                 MOV             X19, X0
.text:000000000000C120                 CBZ             W8, loc_C13C
.text:000000000000C124                 LDR             X20, [X19,#8]
.text:000000000000C128                 CBZ             X20, loc_C13C
.text:000000000000C12C                 MOV             X0, X20 ; this
.text:000000000000C130                 BL              ._ZN7android6ParcelD1Ev ; android::Parcel::~Parcel()
.text:000000000000C134                 MOV             X0, X20 ; void *
.text:000000000000C138                 BL              ._ZdlPv ; operator delete(void *)
.text:000000000000C13C loc_C13C                                ; CODE XREF: AParcel_delete+18↑j
.text:000000000000C13C                                         ; AParcel_delete+20↑j
.text:000000000000C13C                 LDP             X29, X30, [SP,#0x10+var_s0]
.text:000000000000C140                 MOV             X0, X19 ; void *
.text:000000000000C144                 LDP             X20, X19, [SP+0x10+var_10],#0x20
.text:000000000000C148                 B               ._ZdlPv ; operator delete(void *)
.text:000000000000C14C ; ---------------------------------------------------------------------------
.text:000000000000C14C locret_C14C                             ; CODE XREF: AParcel_delete↑j
.text:000000000000C14C                 RET
.text:000000000000C14C ; } // starts at C108
.text:000000000000C14C ; End of function AParcel_delete
.text:000000000000C150 ; =============== S U B R O U T I N E =======================================
.text:000000000000C150 ; Attributes: bp-based frame
.text:000000000000C150                 EXPORT AParcel_setDataPosition
.text:000000000000C150 AParcel_setDataPosition                 ; DATA XREF: LOAD:0000000000001440↑o
.text:000000000000C150 var_s0          =  0
.text:000000000000C150 ; __unwind {
.text:000000000000C150                 TBNZ            W1, #0x1F, loc_C174
.text:000000000000C154                 STP             X29, X30, [SP,#-0x10+var_s0]!
.text:000000000000C158                 MOV             X29, SP
.text:000000000000C15C                 LDR             X0, [X0,#8] ; this
.text:000000000000C160                 SXTW            X1, W1  ; unsigned __int64
.text:000000000000C164                 BL              ._ZNK7android6Parcel15setDataPositionEm ; android::Parcel::setDataPosition(ulong)
.text:000000000000C168                 MOV             W0, WZR
.text:000000000000C16C                 LDP             X29, X30, [SP+var_s0],#0x10
.text:000000000000C170                 RET
.text:000000000000C174 ; ---------------------------------------------------------------------------
.text:000000000000C174 loc_C174                                ; CODE XREF: AParcel_setDataPosition↑j
.text:000000000000C174                 MOV             W0, #0xFFFFFFEA
.text:000000000000C178                 RET
.text:000000000000C178 ; } // starts at C150
.text:000000000000C178 ; End of function AParcel_setDataPosition
.text:000000000000C178 ; ---------------------------------------------------------------------------
.text:000000000000C17C                 ALIGN 0x20
.text:000000000000C180 ; =============== S U B R O U T I N E =======================================
.text:000000000000C180 ; Attributes: bp-based frame
.text:000000000000C180                 EXPORT AParcel_getDataPosition
.text:000000000000C180 AParcel_getDataPosition                 ; DATA XREF: LOAD:00000000000012A8↑o
.text:000000000000C180 var_s0          =  0
.text:000000000000C180 ; __unwind {
.text:000000000000C180                 STP             X29, X30, [SP,#-0x10+var_s0]!
.text:000000000000C184                 MOV             X29, SP
.text:000000000000C188                 LDR             X0, [X0,#8] ; this
.text:000000000000C18C                 BL              ._ZNK7android6Parcel12dataPositionEv ; android::Parcel::dataPosition(void)
.text:000000000000C190                 LDP             X29, X30, [SP+var_s0],#0x10
.text:000000000000C194                 RET
.text:000000000000C194 ; } // starts at C180
.text:000000000000C194 ; End of function AParcel_getDataPosition
.text:000000000000C198 ; =============== S U B R O U T I N E =======================================
.text:000000000000C198 ; Attributes: bp-based frame
.text:000000000000C198                 EXPORT AParcel_writeStrongBinder
.text:000000000000C198 AParcel_writeStrongBinder               ; DATA XREF: LOAD:0000000000001A10↑o
.text:000000000000C198 var_20          = -0x20
.text:000000000000C198 var_18          = -0x18
.text:000000000000C198 var_10          = -0x10
.text:000000000000C198 var_s0          =  0
.text:000000000000C198 ; __unwind {
.text:000000000000C198                 SUB             SP, SP, #0x30
.text:000000000000C19C                 STP             X20, X19, [SP,#0x20+var_10]
.text:000000000000C1A0                 STP             X29, X30, [SP,#0x20+var_s0]
.text:000000000000C1A4                 ADD             X29, SP, #0x20
.text:000000000000C1A8                 MRS             X20, #3, c13, c0, #2
.text:000000000000C1AC                 MOV             X19, X0
.text:000000000000C1B0                 LDR             X8, [X20,#0x28]
.text:000000000000C1B4                 STR             X8, [SP,#0x20+var_18]
.text:000000000000C1B8                 CBZ             X1, loc_C1D4
.text:000000000000C1BC                 LDR             X8, [X1]
.text:000000000000C1C0                 MOV             X0, X1
.text:000000000000C1C4                 LDR             X9, [X8,#0x10]
.text:000000000000C1C8                 MOV             X8, SP
.text:000000000000C1CC                 BLR             X9
.text:000000000000C1D0                 B               loc_C1D8
.text:000000000000C1D4 ; ---------------------------------------------------------------------------
.text:000000000000C1D4 loc_C1D4                                ; CODE XREF: AParcel_writeStrongBinder+20↑j
.text:000000000000C1D4                 STR             XZR, [SP,#0x20+var_20]
.text:000000000000C1D8 loc_C1D8                                ; CODE XREF: AParcel_writeStrongBinder+38↑j
.text:000000000000C1D8                 LDR             X0, [X19,#8]
.text:000000000000C1DC                 MOV             X1, SP
.text:000000000000C1E0                 BL              ._ZN7android6Parcel17writeStrongBinderERKNS_2spINS_7IBinderEEE ; android::Parcel::writeStrongBinder(android::sp<android::IBinder> const&)
.text:000000000000C1E4                 LDR             X8, [SP,#0x20+var_20]
.text:000000000000C1E8                 MOV             W19, W0
.text:000000000000C1EC                 CBZ             X8, loc_C204
.text:000000000000C1F0                 LDR             X9, [X8]
.text:000000000000C1F4                 MOV             X1, SP  ; void *
.text:000000000000C1F8                 LDUR            X9, [X9,#-0x18]
.text:000000000000C1FC                 ADD             X0, X8, X9 ; this
.text:000000000000C200                 BL              ._ZNK7android7RefBase9decStrongEPKv ; android::RefBase::decStrong(void const*)
.text:000000000000C204 loc_C204                                ; CODE XREF: AParcel_writeStrongBinder+54↑j
.text:000000000000C204                 LDR             X8, [X20,#0x28]
.text:000000000000C208                 LDR             X9, [SP,#0x20+var_18]
.text:000000000000C20C                 CMP             X8, X9
.text:000000000000C210                 B.NE            loc_C228
.text:000000000000C214                 MOV             W0, W19
.text:000000000000C218                 LDP             X29, X30, [SP,#0x20+var_s0]
.text:000000000000C21C                 LDP             X20, X19, [SP,#0x20+var_10]
.text:000000000000C220                 ADD             SP, SP, #0x30 ; '0'
.text:000000000000C224                 RET
.text:000000000000C228 ; ---------------------------------------------------------------------------
.text:000000000000C228 loc_C228                                ; CODE XREF: AParcel_writeStrongBinder+78↑j
.text:000000000000C228                 BL              .__stack_chk_fail
.text:000000000000C228 ; } // starts at C198
.text:000000000000C228 ; End of function AParcel_writeStrongBinder
.text:000000000000C228 ; ---------------------------------------------------------------------------
.text:000000000000C22C                 ALIGN 0x10
.text:000000000000C230 ; =============== S U B R O U T I N E =======================================
.text:000000000000C230 ; Attributes: bp-based frame
.text:000000000000C230                 EXPORT AParcel_readStrongBinder
.text:000000000000C230 AParcel_readStrongBinder                ; DATA XREF: LOAD:0000000000001920↑o
.text:000000000000C230 var_28          = -0x28
.text:000000000000C230 var_20          = -0x20
.text:000000000000C230 var_18          = -0x18
.text:000000000000C230 var_10          = -0x10
.text:000000000000C230 var_s0          =  0
.text:000000000000C230 ; __unwind {
.text:000000000000C230                 SUB             SP, SP, #0x40
.text:000000000000C234                 STP             X20, X19, [SP,#0x30+var_10]
.text:000000000000C238                 STP             X29, X30, [SP,#0x30+var_s0]
.text:000000000000C23C                 ADD             X29, SP, #0x30
.text:000000000000C240                 MRS             X20, #3, c13, c0, #2
.text:000000000000C244                 MOV             X19, X1
.text:000000000000C248                 LDR             X8, [X20,#0x28]
.text:000000000000C24C                 ADD             X1, SP, #0x30+var_20
.text:000000000000C250                 STR             X8, [SP,#0x30+var_18]
.text:000000000000C254                 LDR             X0, [X0,#8]
.text:000000000000C258                 STR             XZR, [SP,#0x30+var_20]
.text:000000000000C25C                 BL              ._ZNK7android6Parcel24readNullableStrongBinderEPNS_2spINS_7IBinderEEE ; android::Parcel::readNullableStrongBinder(android::sp<android::IBinder> *)
.text:000000000000C260                 CBZ             W0, loc_C278
.text:000000000000C264                 BL              sub_E118
.text:000000000000C268                 MOV             W19, W0
.text:000000000000C26C                 LDR             X8, [SP,#0x30+var_20]
.text:000000000000C270                 CBNZ            X8, loc_C2C4
.text:000000000000C274                 B               loc_C2D8
.text:000000000000C278 ; ---------------------------------------------------------------------------
.text:000000000000C278 loc_C278                                ; CODE XREF: AParcel_readStrongBinder+30↑j
.text:000000000000C278                 ADD             X8, SP, #0x30+var_28
.text:000000000000C27C                 ADD             X0, SP, #0x30+var_20
.text:000000000000C280                 BL              sub_9088
.text:000000000000C284                 LDR             X0, [SP,#0x30+var_28]
.text:000000000000C288                 BL              .AIBinder_incStrong
.text:000000000000C28C                 LDR             X8, [SP,#0x30+var_28]
.text:000000000000C290                 MOV             W0, WZR
.text:000000000000C294                 STR             X8, [X19]
.text:000000000000C298                 BL              sub_E118
.text:000000000000C29C                 LDR             X8, [SP,#0x30+var_28]
.text:000000000000C2A0                 MOV             W19, W0
.text:000000000000C2A4                 CBZ             X8, loc_C2BC
.text:000000000000C2A8                 LDR             X9, [X8]
.text:000000000000C2AC                 ADD             X1, SP, #0x30+var_28 ; void *
.text:000000000000C2B0                 LDUR            X9, [X9,#-0x18]
.text:000000000000C2B4                 ADD             X0, X8, X9 ; this
.text:000000000000C2B8                 BL              ._ZNK7android7RefBase9decStrongEPKv ; android::RefBase::decStrong(void const*)
.text:000000000000C2BC loc_C2BC                                ; CODE XREF: AParcel_readStrongBinder+74↑j
.text:000000000000C2BC                 LDR             X8, [SP,#0x30+var_20]
.text:000000000000C2C0                 CBZ             X8, loc_C2D8
.text:000000000000C2C4 loc_C2C4                                ; CODE XREF: AParcel_readStrongBinder+40↑j
.text:000000000000C2C4                 LDR             X9, [X8]
.text:000000000000C2C8                 ADD             X1, SP, #0x30+var_20 ; void *
.text:000000000000C2CC                 LDUR            X9, [X9,#-0x18]
.text:000000000000C2D0                 ADD             X0, X8, X9 ; this
.text:000000000000C2D4                 BL              ._ZNK7android7RefBase9decStrongEPKv ; android::RefBase::decStrong(void const*)
.text:000000000000C2D8 loc_C2D8                                ; CODE XREF: AParcel_readStrongBinder+44↑j
.text:000000000000C2D8                                         ; AParcel_readStrongBinder+90↑j
.text:000000000000C2D8                 LDR             X8, [X20,#0x28]
.text:000000000000C2DC                 LDR             X9, [SP,#0x30+var_18]
.text:000000000000C2E0                 CMP             X8, X9
.text:000000000000C2E4                 B.NE            loc_C2FC
.text:000000000000C2E8                 MOV             W0, W19
.text:000000000000C2EC                 LDP             X29, X30, [SP,#0x30+var_s0]
.text:000000000000C2F0                 LDP             X20, X19, [SP,#0x30+var_10]
.text:000000000000C2F4                 ADD             SP, SP, #0x40 ; '@'
.text:000000000000C2F8                 RET
.text:000000000000C2FC ; ---------------------------------------------------------------------------
.text:000000000000C2FC loc_C2FC                                ; CODE XREF: AParcel_readStrongBinder+B4↑j
.text:000000000000C2FC                 BL              .__stack_chk_fail
.text:000000000000C2FC ; } // starts at C230
.text:000000000000C2FC ; End of function AParcel_readStrongBinder
.text:000000000000C300 ; =============== S U B R O U T I N E =======================================
.text:000000000000C300 ; Attributes: bp-based frame
.text:000000000000C300                 EXPORT AParcel_writeParcelFileDescriptor
.text:000000000000C300 AParcel_writeParcelFileDescriptor       ; DATA XREF: LOAD:0000000000001248↑o
.text:000000000000C300 fd              = -0x58
.text:000000000000C300 var_50          = -0x50
.text:000000000000C300 var_48          = -0x48
.text:000000000000C300 var_40          = -0x40
.text:000000000000C300 var_30          = -0x30
.text:000000000000C300 var_20          = -0x20
.text:000000000000C300 var_10          = -0x10
.text:000000000000C300 var_s0          =  0
.text:000000000000C300 ; __unwind {
.text:000000000000C300                 SUB             SP, SP, #0x70
.text:000000000000C304                 STR             X25, [SP,#0x60+var_40]
.text:000000000000C308                 STP             X24, X23, [SP,#0x60+var_30]
.text:000000000000C30C                 STP             X22, X21, [SP,#0x60+var_20]
.text:000000000000C310                 STP             X20, X19, [SP,#0x60+var_10]
.text:000000000000C314                 STP             X29, X30, [SP,#0x60+var_s0]
.text:000000000000C318                 ADD             X29, SP, #0x60
.text:000000000000C31C                 MRS             X24, #3, c13, c0, #2
.text:000000000000C320                 MOV             X20, X0
.text:000000000000C324                 LDR             X8, [X24,#0x28]
.text:000000000000C328                 STR             X8, [SP,#0x60+var_48]
.text:000000000000C32C                 TBNZ            W1, #0x1F, loc_C398
.text:000000000000C330                 MOV             W8, #0xFFFFFFFF
.text:000000000000C334                 ADD             X0, SP, #0x60+fd
.text:000000000000C338                 MOV             X2, XZR
.text:000000000000C33C                 STR             W8, [SP,#0x60+fd]
.text:000000000000C340                 BL              sub_DB10
.text:000000000000C344                 ADD             X8, SP, #0x60+var_50
.text:000000000000C348                 ADD             X0, SP, #0x60+fd
.text:000000000000C34C                 BL              sub_C4D8
.text:000000000000C350                 LDR             X19, [SP,#0x60+var_50]
.text:000000000000C354                 STR             XZR, [SP,#0x60+var_50]
.text:000000000000C358                 BL              .__errno
.text:000000000000C35C                 LDR             W22, [SP,#0x60+fd]
.text:000000000000C360                 MOV             X21, X0
.text:000000000000C364                 LDR             W23, [X0]
.text:000000000000C368                 CMN             W22, #1
.text:000000000000C36C                 B.EQ            loc_C3B0
.text:000000000000C370                 ADRP            X8, #android_fdsan_close_with_tag_ptr@PAGE
.text:000000000000C374                 LDR             X8, [X8,#android_fdsan_close_with_tag_ptr@PAGEOFF]
.text:000000000000C378                 CBZ             X8, loc_C3A8
.text:000000000000C37C                 ADD             X1, SP, #0x60+fd
.text:000000000000C380                 MOV             W0, #3
.text:000000000000C384                 BL              .android_fdsan_create_owner_tag
.text:000000000000C388                 MOV             X1, X0
.text:000000000000C38C                 MOV             W0, W22
.text:000000000000C390                 BL              .android_fdsan_close_with_tag
.text:000000000000C394                 B               loc_C3B0
.text:000000000000C398 ; ---------------------------------------------------------------------------
.text:000000000000C398 loc_C398                                ; CODE XREF: AParcel_writeParcelFileDescriptor+2C↑j
.text:000000000000C398                 CMN             W1, #1
.text:000000000000C39C                 B.EQ            loc_C4CC
.text:000000000000C3A0                 MOV             W20, #0x80000000
.text:000000000000C3A4                 B               loc_C49C
.text:000000000000C3A8 ; ---------------------------------------------------------------------------
.text:000000000000C3A8 loc_C3A8                                ; CODE XREF: AParcel_writeParcelFileDescriptor+78↑j
.text:000000000000C3A8                 MOV             W0, W22 ; fd
.text:000000000000C3AC                 BL              .close
.text:000000000000C3B0 loc_C3B0                                ; CODE XREF: AParcel_writeParcelFileDescriptor+6C↑j
.text:000000000000C3B0                                         ; AParcel_writeParcelFileDescriptor+94↑j
.text:000000000000C3B0                 STR             W23, [X21]
.text:000000000000C3B4 loc_C3B4                                ; CODE XREF: AParcel_writeParcelFileDescriptor+1D0↓j
.text:000000000000C3B4                 LDR             X0, [X20,#8]
.text:000000000000C3B8                 MOV             X1, X19
.text:000000000000C3BC                 BL              ._ZN7android6Parcel26writeRawNullableParcelableEPKNS_10ParcelableE ; android::Parcel::writeRawNullableParcelable(android::Parcelable const*)
.text:000000000000C3C0                 MOV             W20, W0
.text:000000000000C3C4                 CBZ             X19, loc_C458
.text:000000000000C3C8                 MOV             X21, X19
.text:000000000000C3CC                 ADRP            X8, #android_fdsan_exchange_owner_tag_ptr@PAGE
.text:000000000000C3D0                 MOV             W25, #0xFFFFFFFF
.text:000000000000C3D4                 LDR             X8, [X8,#android_fdsan_exchange_owner_tag_ptr@PAGEOFF]
.text:000000000000C3D8                 LDR             W22, [X21,#8]!
.text:000000000000C3DC                 STR             W25, [SP,#0x60+var_50]
.text:000000000000C3E0                 CBZ             X8, loc_C468
.text:000000000000C3E4                 MOV             W0, #3
.text:000000000000C3E8                 MOV             X1, X21
.text:000000000000C3EC                 BL              .android_fdsan_create_owner_tag
.text:000000000000C3F0                 MOV             X23, X0
.text:000000000000C3F4                 MOV             W0, #3
.text:000000000000C3F8                 MOV             X1, XZR
.text:000000000000C3FC                 BL              .android_fdsan_create_owner_tag
.text:000000000000C400                 MOV             X2, X0
.text:000000000000C404                 MOV             W0, W22
.text:000000000000C408                 MOV             X1, X23
.text:000000000000C40C                 BL              .android_fdsan_exchange_owner_tag
.text:000000000000C410                 LDR             W1, [X21]
.text:000000000000C414                 ADD             X0, SP, #0x60+var_50
.text:000000000000C418                 MOV             X2, XZR
.text:000000000000C41C                 STR             W25, [X21]
.text:000000000000C420                 BL              sub_DB10
.text:000000000000C424                 LDR             W21, [SP,#0x60+var_50]
.text:000000000000C428                 ADD             X1, SP, #0x60+var_50
.text:000000000000C42C                 MOV             W0, #3
.text:000000000000C430                 BL              .android_fdsan_create_owner_tag
.text:000000000000C434                 MOV             X22, X0
.text:000000000000C438                 MOV             W0, #3
.text:000000000000C43C                 MOV             X1, XZR
.text:000000000000C440                 BL              .android_fdsan_create_owner_tag
.text:000000000000C444                 MOV             X2, X0
.text:000000000000C448                 MOV             W0, W21
.text:000000000000C44C                 MOV             X1, X22
.text:000000000000C450                 BL              .android_fdsan_exchange_owner_tag
.text:000000000000C454                 B               loc_C47C
.text:000000000000C458 ; ---------------------------------------------------------------------------
.text:000000000000C458 loc_C458                                ; CODE XREF: AParcel_writeParcelFileDescriptor+C4↑j
.text:000000000000C458                 MOV             W0, W20
.text:000000000000C45C                 BL              sub_E118
.text:000000000000C460                 MOV             W20, W0
.text:000000000000C464                 B               loc_C49C
.text:000000000000C468 ; ---------------------------------------------------------------------------
.text:000000000000C468 loc_C468                                ; CODE XREF: AParcel_writeParcelFileDescriptor+E0↑j
.text:000000000000C468                 ADD             X0, SP, #0x60+var_50
.text:000000000000C46C                 STR             W25, [X21]
.text:000000000000C470                 MOV             W1, W22
.text:000000000000C474                 MOV             X2, XZR
.text:000000000000C478                 BL              sub_DB10
.text:000000000000C47C loc_C47C                                ; CODE XREF: AParcel_writeParcelFileDescriptor+154↑j
.text:000000000000C47C                 MOV             W0, W20
.text:000000000000C480                 STR             W25, [SP,#0x60+var_50]
.text:000000000000C484                 BL              sub_E118
.text:000000000000C488                 LDR             X8, [X19]
.text:000000000000C48C                 MOV             W20, W0
.text:000000000000C490                 MOV             X0, X19
.text:000000000000C494                 LDR             X8, [X8,#8]
.text:000000000000C498                 BLR             X8
.text:000000000000C49C loc_C49C                                ; CODE XREF: AParcel_writeParcelFileDescriptor+A4↑j
.text:000000000000C49C                                         ; AParcel_writeParcelFileDescriptor+164↑j
.text:000000000000C49C                 LDR             X8, [X24,#0x28]
.text:000000000000C4A0                 LDR             X9, [SP,#0x60+var_48]
.text:000000000000C4A4                 CMP             X8, X9
.text:000000000000C4A8                 B.NE            loc_C4D4
.text:000000000000C4AC                 MOV             W0, W20
.text:000000000000C4B0                 LDR             X25, [SP,#0x60+var_40]
.text:000000000000C4B4                 LDP             X29, X30, [SP,#0x60+var_s0]
.text:000000000000C4B8                 LDP             X20, X19, [SP,#0x60+var_10]
.text:000000000000C4BC                 LDP             X22, X21, [SP,#0x60+var_20]
.text:000000000000C4C0                 LDP             X24, X23, [SP,#0x60+var_30]
.text:000000000000C4C4                 ADD             SP, SP, #0x70 ; 'p'
.text:000000000000C4C8                 RET
.text:000000000000C4CC ; ---------------------------------------------------------------------------
.text:000000000000C4CC loc_C4CC                                ; CODE XREF: AParcel_writeParcelFileDescriptor+9C↑j
.text:000000000000C4CC                 MOV             X19, XZR
.text:000000000000C4D0                 B               loc_C3B4
.text:000000000000C4D4 ; ---------------------------------------------------------------------------
.text:000000000000C4D4 loc_C4D4                                ; CODE XREF: AParcel_writeParcelFileDescriptor+1A8↑j
.text:000000000000C4D4                 BL              .__stack_chk_fail
.text:000000000000C4D4 ; } // starts at C300
.text:000000000000C4D4 ; End of function AParcel_writeParcelFileDescriptor
.text:000000000000C4D8 ; =============== S U B R O U T I N E =======================================
.text:000000000000C4D8 ; Attributes: bp-based frame
.text:000000000000C4D8 sub_C4D8                                ; CODE XREF: AParcel_writeParcelFileDescriptor+4C↑p
.text:000000000000C4D8 fd              = -0x50
.text:000000000000C4D8 var_48          = -0x48
.text:000000000000C4D8 var_40          = -0x40
.text:000000000000C4D8 var_30          = -0x30
.text:000000000000C4D8 var_20          = -0x20
.text:000000000000C4D8 var_10          = -0x10
.text:000000000000C4D8 var_s0          =  0
.text:000000000000C4D8 ; __unwind {
.text:000000000000C4D8                 SUB             SP, SP, #0x60
.text:000000000000C4DC                 STR             X25, [SP,#0x50+var_40]
.text:000000000000C4E0                 STP             X24, X23, [SP,#0x50+var_30]
.text:000000000000C4E4                 STP             X22, X21, [SP,#0x50+var_20]
.text:000000000000C4E8                 STP             X20, X19, [SP,#0x50+var_10]
.text:000000000000C4EC                 STP             X29, X30, [SP,#0x50+var_s0]
.text:000000000000C4F0                 ADD             X29, SP, #0x50
.text:000000000000C4F4                 MRS             X24, #3, c13, c0, #2
.text:000000000000C4F8                 MOV             X20, X0
.text:000000000000C4FC                 LDR             X9, [X24,#0x28]
.text:000000000000C500                 MOV             W0, #0x10 ; unsigned __int64
.text:000000000000C504                 MOV             X19, X8
.text:000000000000C508                 STR             X9, [SP,#0x50+var_48]
.text:000000000000C50C                 BL              ._Znwm  ; operator new(ulong)
.text:000000000000C510                 ADRP            X8, #android_fdsan_exchange_owner_tag_ptr@PAGE
.text:000000000000C514                 MOV             W25, #0xFFFFFFFF
.text:000000000000C518                 MOV             X21, X0
.text:000000000000C51C                 LDR             X8, [X8,#android_fdsan_exchange_owner_tag_ptr@PAGEOFF]
.text:000000000000C520                 STR             W25, [SP,#0x50+fd]
.text:000000000000C524                 CBZ             X8, loc_C558
.text:000000000000C528                 LDR             W22, [X20]
.text:000000000000C52C                 MOV             W0, #3
.text:000000000000C530                 MOV             X1, X20
.text:000000000000C534                 BL              .android_fdsan_create_owner_tag
.text:000000000000C538                 MOV             X23, X0
.text:000000000000C53C                 MOV             W0, #3
.text:000000000000C540                 MOV             X1, XZR
.text:000000000000C544                 BL              .android_fdsan_create_owner_tag
.text:000000000000C548                 MOV             X2, X0
.text:000000000000C54C                 MOV             W0, W22
.text:000000000000C550                 MOV             X1, X23
.text:000000000000C554                 BL              .android_fdsan_exchange_owner_tag
.text:000000000000C558 loc_C558                                ; CODE XREF: sub_C4D8+4C↑j
.text:000000000000C558                 LDR             W1, [X20]
.text:000000000000C55C                 MOV             X0, SP
.text:000000000000C560                 MOV             X2, XZR
.text:000000000000C564                 STR             W25, [X20]
.text:000000000000C568                 BL              sub_DB10
.text:000000000000C56C                 MOV             X1, SP
.text:000000000000C570                 MOV             X0, X21
.text:000000000000C574                 BL              ._ZN7android2os20ParcelFileDescriptorC1ENS_4base14unique_fd_implINS2_13DefaultCloserEEE ; android::os::ParcelFileDescriptor::ParcelFileDescriptor(android::base::unique_fd_impl<android::base::DefaultCloser>)
.text:000000000000C578                 STR             X21, [X19]
.text:000000000000C57C                 BL              .__errno
.text:000000000000C580                 LDR             W20, [SP,#0x50+fd]
.text:000000000000C584                 MOV             X19, X0
.text:000000000000C588                 LDR             W21, [X0]
.text:000000000000C58C                 CMN             W20, #1
.text:000000000000C590                 B.EQ            loc_C5C4
.text:000000000000C594                 ADRP            X8, #android_fdsan_close_with_tag_ptr@PAGE
.text:000000000000C598                 LDR             X8, [X8,#android_fdsan_close_with_tag_ptr@PAGEOFF]
.text:000000000000C59C                 CBZ             X8, loc_C5BC
.text:000000000000C5A0                 MOV             X1, SP
.text:000000000000C5A4                 MOV             W0, #3
.text:000000000000C5A8                 BL              .android_fdsan_create_owner_tag
.text:000000000000C5AC                 MOV             X1, X0
.text:000000000000C5B0                 MOV             W0, W20
.text:000000000000C5B4                 BL              .android_fdsan_close_with_tag
.text:000000000000C5B8                 B               loc_C5C4
.text:000000000000C5BC ; ---------------------------------------------------------------------------
.text:000000000000C5BC loc_C5BC                                ; CODE XREF: sub_C4D8+C4↑j
.text:000000000000C5BC                 MOV             W0, W20 ; fd
.text:000000000000C5C0                 BL              .close
.text:000000000000C5C4 loc_C5C4                                ; CODE XREF: sub_C4D8+B8↑j
.text:000000000000C5C4                                         ; sub_C4D8+E0↑j
.text:000000000000C5C4                 STR             W21, [X19]
.text:000000000000C5C8                 LDR             X8, [X24,#0x28]
.text:000000000000C5CC                 LDR             X9, [SP,#0x50+var_48]
.text:000000000000C5D0                 CMP             X8, X9
.text:000000000000C5D4                 B.NE            loc_C5F4
.text:000000000000C5D8                 LDP             X29, X30, [SP,#0x50+var_s0]
.text:000000000000C5DC                 LDP             X20, X19, [SP,#0x50+var_10]
.text:000000000000C5E0                 LDP             X22, X21, [SP,#0x50+var_20]
.text:000000000000C5E4                 LDP             X24, X23, [SP,#0x50+var_30]
.text:000000000000C5E8                 LDR             X25, [SP,#0x50+var_40]
.text:000000000000C5EC                 ADD             SP, SP, #0x60 ; '`'
.text:000000000000C5F0                 RET
.text:000000000000C5F4 ; ---------------------------------------------------------------------------
.text:000000000000C5F4 loc_C5F4                                ; CODE XREF: sub_C4D8+FC↑j
.text:000000000000C5F4                 BL              .__stack_chk_fail
.text:000000000000C5F4 ; } // starts at C4D8
.text:000000000000C5F4 ; End of function sub_C4D8
.text:000000000000C5F8 ; =============== S U B R O U T I N E =======================================
.text:000000000000C5F8 ; Attributes: bp-based frame
.text:000000000000C5F8                 EXPORT AParcel_readParcelFileDescriptor
.text:000000000000C5F8 AParcel_readParcelFileDescriptor        ; DATA XREF: LOAD:00000000000013F8↑o
.text:000000000000C5F8 var_48          = -0x48
.text:000000000000C5F8 var_40          = -0x40
.text:000000000000C5F8 var_38          = -0x38
.text:000000000000C5F8 var_30          = -0x30
.text:000000000000C5F8 var_20          = -0x20
.text:000000000000C5F8 var_10          = -0x10
.text:000000000000C5F8 var_s0          =  0
.text:000000000000C5F8 ; __unwind {
.text:000000000000C5F8                 SUB             SP, SP, #0x60
.text:000000000000C5FC                 STP             X24, X23, [SP,#0x50+var_30]
.text:000000000000C600                 STP             X22, X21, [SP,#0x50+var_20]
.text:000000000000C604                 STP             X20, X19, [SP,#0x50+var_10]
.text:000000000000C608                 STP             X29, X30, [SP,#0x50+var_s0]
.text:000000000000C60C                 ADD             X29, SP, #0x50
.text:000000000000C610                 MRS             X23, #3, c13, c0, #2
.text:000000000000C614                 MOV             X19, X1
.text:000000000000C618                 LDR             X8, [X23,#0x28]
.text:000000000000C61C                 ADD             X1, SP, #0x50+var_40
.text:000000000000C620                 STR             X8, [SP,#0x50+var_38]
.text:000000000000C624                 LDR             X0, [X0,#8]
.text:000000000000C628                 STR             XZR, [SP,#0x50+var_40]
.text:000000000000C62C                 BL              sub_C748
.text:000000000000C630                 CBZ             W0, loc_C640
.text:000000000000C634                 BL              sub_E118
.text:000000000000C638                 MOV             W20, W0
.text:000000000000C63C                 B               loc_C700
.text:000000000000C640 ; ---------------------------------------------------------------------------
.text:000000000000C640 loc_C640                                ; CODE XREF: AParcel_readParcelFileDescriptor+38↑j
.text:000000000000C640                 LDR             X20, [SP,#0x50+var_40]
.text:000000000000C644                 CBZ             X20, loc_C6D4
.text:000000000000C648                 ADRP            X8, #android_fdsan_exchange_owner_tag_ptr@PAGE
.text:000000000000C64C                 LDR             W21, [X20,#8]!
.text:000000000000C650                 MOV             W24, #0xFFFFFFFF
.text:000000000000C654                 LDR             X8, [X8,#android_fdsan_exchange_owner_tag_ptr@PAGEOFF]
.text:000000000000C658                 STR             W24, [SP,#0x50+var_48]
.text:000000000000C65C                 CBZ             X8, loc_C6DC
.text:000000000000C660                 MOV             W0, #3
.text:000000000000C664                 MOV             X1, X20
.text:000000000000C668                 BL              .android_fdsan_create_owner_tag
.text:000000000000C66C                 MOV             X22, X0
.text:000000000000C670                 MOV             W0, #3
.text:000000000000C674                 MOV             X1, XZR
.text:000000000000C678                 BL              .android_fdsan_create_owner_tag
.text:000000000000C67C                 MOV             X2, X0
.text:000000000000C680                 MOV             W0, W21
.text:000000000000C684                 MOV             X1, X22
.text:000000000000C688                 BL              .android_fdsan_exchange_owner_tag
.text:000000000000C68C                 LDR             W1, [X20]
.text:000000000000C690                 ADD             X0, SP, #0x50+var_48
.text:000000000000C694                 MOV             X2, XZR
.text:000000000000C698                 STR             W24, [X20]
.text:000000000000C69C                 BL              sub_DB10
.text:000000000000C6A0                 LDR             W20, [SP,#0x50+var_48]
.text:000000000000C6A4                 ADD             X1, SP, #0x50+var_48
.text:000000000000C6A8                 MOV             W0, #3
.text:000000000000C6AC                 BL              .android_fdsan_create_owner_tag
.text:000000000000C6B0                 MOV             X21, X0
.text:000000000000C6B4                 MOV             W0, #3
.text:000000000000C6B8                 MOV             X1, XZR
.text:000000000000C6BC                 BL              .android_fdsan_create_owner_tag
.text:000000000000C6C0                 MOV             X2, X0
.text:000000000000C6C4                 MOV             W0, W20
.text:000000000000C6C8                 MOV             X1, X21
.text:000000000000C6CC                 BL              .android_fdsan_exchange_owner_tag
.text:000000000000C6D0                 B               loc_C6F0
.text:000000000000C6D4 ; ---------------------------------------------------------------------------
.text:000000000000C6D4 loc_C6D4                                ; CODE XREF: AParcel_readParcelFileDescriptor+4C↑j
.text:000000000000C6D4                 MOV             W8, #0xFFFFFFFF
.text:000000000000C6D8                 B               loc_C6FC
.text:000000000000C6DC ; ---------------------------------------------------------------------------
.text:000000000000C6DC loc_C6DC                                ; CODE XREF: AParcel_readParcelFileDescriptor+64↑j
.text:000000000000C6DC                 ADD             X0, SP, #0x50+var_48
.text:000000000000C6E0                 STR             W24, [X20]
.text:000000000000C6E4                 MOV             W1, W21
.text:000000000000C6E8                 MOV             X2, XZR
.text:000000000000C6EC                 BL              sub_DB10
.text:000000000000C6F0 loc_C6F0                                ; CODE XREF: AParcel_readParcelFileDescriptor+D8↑j
.text:000000000000C6F0                 LDR             W8, [SP,#0x50+var_48]
.text:000000000000C6F4                 MOV             W20, WZR
.text:000000000000C6F8                 STR             W24, [SP,#0x50+var_48]
.text:000000000000C6FC loc_C6FC                                ; CODE XREF: AParcel_readParcelFileDescriptor+E0↑j
.text:000000000000C6FC                 STR             W8, [X19]
.text:000000000000C700 loc_C700                                ; CODE XREF: AParcel_readParcelFileDescriptor+44↑j
.text:000000000000C700                 LDR             X0, [SP,#0x50+var_40]
.text:000000000000C704                 STR             XZR, [SP,#0x50+var_40]
.text:000000000000C708                 CBZ             X0, loc_C718
.text:000000000000C70C                 LDR             X8, [X0]
.text:000000000000C710                 LDR             X8, [X8,#8]
.text:000000000000C714                 BLR             X8
.text:000000000000C718 loc_C718                                ; CODE XREF: AParcel_readParcelFileDescriptor+110↑j
.text:000000000000C718                 LDR             X8, [X23,#0x28]
.text:000000000000C71C                 LDR             X9, [SP,#0x50+var_38]
.text:000000000000C720                 CMP             X8, X9
.text:000000000000C724                 B.NE            loc_C744
.text:000000000000C728                 MOV             W0, W20
.text:000000000000C72C                 LDP             X29, X30, [SP,#0x50+var_s0]
.text:000000000000C730                 LDP             X20, X19, [SP,#0x50+var_10]
.text:000000000000C734                 LDP             X22, X21, [SP,#0x50+var_20]
.text:000000000000C738                 LDP             X24, X23, [SP,#0x50+var_30]
.text:000000000000C73C                 ADD             SP, SP, #0x60 ; '`'
.text:000000000000C740                 RET
.text:000000000000C744 ; ---------------------------------------------------------------------------
.text:000000000000C744 loc_C744                                ; CODE XREF: AParcel_readParcelFileDescriptor+12C↑j
.text:000000000000C744                 BL              .__stack_chk_fail
.text:000000000000C744 ; } // starts at C5F8
.text:000000000000C744 ; End of function AParcel_readParcelFileDescriptor
.text:000000000000C748 ; =============== S U B R O U T I N E =======================================
.text:000000000000C748 ; Attributes: bp-based frame
.text:000000000000C748 sub_C748                                ; CODE XREF: AParcel_readParcelFileDescriptor+34↑p
.text:000000000000C748 var_3C          = -0x3C
.text:000000000000C748 var_38          = -0x38
.text:000000000000C748 var_30          = -0x30
.text:000000000000C748 var_20          = -0x20
.text:000000000000C748 var_10          = -0x10
.text:000000000000C748 var_s0          =  0
.text:000000000000C748 ; __unwind {
.text:000000000000C748                 SUB             SP, SP, #0x50
.text:000000000000C74C                 STR             X23, [SP,#0x40+var_30]
.text:000000000000C750                 STP             X22, X21, [SP,#0x40+var_20]
.text:000000000000C754                 STP             X20, X19, [SP,#0x40+var_10]
.text:000000000000C758                 STP             X29, X30, [SP,#0x40+var_s0]
.text:000000000000C75C                 ADD             X29, SP, #0x40
.text:000000000000C760                 MRS             X23, #3, c13, c0, #2
.text:000000000000C764                 MOV             X19, X1
.text:000000000000C768                 LDR             X8, [X23,#0x28]
.text:000000000000C76C                 MOV             X20, X0
.text:000000000000C770                 STR             X8, [SP,#0x40+var_38]
.text:000000000000C774                 BL              ._ZNK7android6Parcel12dataPositionEv ; android::Parcel::dataPosition(void)
.text:000000000000C778                 MOV             X22, X0
.text:000000000000C77C                 ADD             X1, SP, #0x40+var_3C ; int *
.text:000000000000C780                 MOV             X0, X20 ; this
.text:000000000000C784                 BL              ._ZNK7android6Parcel9readInt32EPi ; android::Parcel::readInt32(int *)
.text:000000000000C788                 LDR             X8, [X19]
.text:000000000000C78C                 MOV             W21, W0
.text:000000000000C790                 STR             XZR, [X19]
.text:000000000000C794                 CBZ             X8, loc_C7A8
.text:000000000000C798                 LDR             X9, [X8]
.text:000000000000C79C                 MOV             X0, X8
.text:000000000000C7A0                 LDR             X9, [X9,#8]
.text:000000000000C7A4                 BLR             X9
.text:000000000000C7A8 loc_C7A8                                ; CODE XREF: sub_C748+4C↑j
.text:000000000000C7A8                 CBNZ            W21, loc_C818
.text:000000000000C7AC                 LDR             W8, [SP,#0x40+var_3C]
.text:000000000000C7B0                 CBZ             W8, loc_C818
.text:000000000000C7B4                 MOV             X0, X20 ; this
.text:000000000000C7B8                 MOV             X1, X22 ; unsigned __int64
.text:000000000000C7BC                 BL              ._ZNK7android6Parcel15setDataPositionEm ; android::Parcel::setDataPosition(ulong)
.text:000000000000C7C0                 MOV             W0, #0x10 ; unsigned __int64
.text:000000000000C7C4                 BL              ._Znwm  ; operator new(ulong)
.text:000000000000C7C8                 MOV             X21, X0
.text:000000000000C7CC                 BL              ._ZN7android2os20ParcelFileDescriptorC1Ev ; android::os::ParcelFileDescriptor::ParcelFileDescriptor(void)
.text:000000000000C7D0                 LDR             X0, [X19]
.text:000000000000C7D4                 STR             X21, [X19]
.text:000000000000C7D8                 CBZ             X0, loc_C7EC
.text:000000000000C7DC                 LDR             X8, [X0]
.text:000000000000C7E0                 LDR             X8, [X8,#8]
.text:000000000000C7E4                 BLR             X8
.text:000000000000C7E8                 LDR             X21, [X19]
.text:000000000000C7EC loc_C7EC                                ; CODE XREF: sub_C748+90↑j
.text:000000000000C7EC                 MOV             X0, X20
.text:000000000000C7F0                 MOV             X1, X21
.text:000000000000C7F4                 BL              ._ZNK7android6Parcel14readParcelableEPNS_10ParcelableE ; android::Parcel::readParcelable(android::Parcelable *)
.text:000000000000C7F8                 MOV             W21, W0
.text:000000000000C7FC                 CBZ             W0, loc_C818
.text:000000000000C800                 LDR             X0, [X19]
.text:000000000000C804                 STR             XZR, [X19]
.text:000000000000C808                 CBZ             X0, loc_C818
.text:000000000000C80C                 LDR             X8, [X0]
.text:000000000000C810                 LDR             X8, [X8,#8]
.text:000000000000C814                 BLR             X8
.text:000000000000C818 loc_C818                                ; CODE XREF: sub_C748:loc_C7A8↑j
.text:000000000000C818                                         ; sub_C748+68↑j ...
.text:000000000000C818                 LDR             X8, [X23,#0x28]
.text:000000000000C81C                 LDR             X9, [SP,#0x40+var_38]
.text:000000000000C820                 CMP             X8, X9
.text:000000000000C824                 B.NE            loc_C844
.text:000000000000C828                 MOV             W0, W21
.text:000000000000C82C                 LDR             X23, [SP,#0x40+var_30]
.text:000000000000C830                 LDP             X29, X30, [SP,#0x40+var_s0]
.text:000000000000C834                 LDP             X20, X19, [SP,#0x40+var_10]
.text:000000000000C838                 LDP             X22, X21, [SP,#0x40+var_20]
.text:000000000000C83C                 ADD             SP, SP, #0x50 ; 'P'
.text:000000000000C840                 RET
.text:000000000000C844 ; ---------------------------------------------------------------------------
.text:000000000000C844 loc_C844                                ; CODE XREF: sub_C748+DC↑j
.text:000000000000C844                 BL              .__stack_chk_fail
.text:000000000000C844 ; } // starts at C748
.text:000000000000C844 ; End of function sub_C748
.text:000000000000C848 ; =============== S U B R O U T I N E =======================================
.text:000000000000C848 ; Attributes: bp-based frame
.text:000000000000C848                 EXPORT AParcel_writeStatusHeader
.text:000000000000C848 AParcel_writeStatusHeader               ; DATA XREF: LOAD:00000000000019F8↑o
.text:000000000000C848 var_s0          =  0
.text:000000000000C848 ; __unwind {
.text:000000000000C848                 STP             X29, X30, [SP,#-0x10+var_s0]!
.text:000000000000C84C                 MOV             X29, SP
.text:000000000000C850                 LDR             X8, [X0,#8]
.text:000000000000C854                 MOV             X0, X1  ; this
.text:000000000000C858                 MOV             X1, X8  ; android::Parcel *
.text:000000000000C85C                 BL              ._ZNK7android6binder6Status13writeToParcelEPNS_6ParcelE ; android::binder::Status::writeToParcel(android::Parcel *)
.text:000000000000C860                 LDP             X29, X30, [SP+var_s0],#0x10
.text:000000000000C864                 B               sub_E118
.text:000000000000C864 ; } // starts at C848
.text:000000000000C864 ; End of function AParcel_writeStatusHeader
.text:000000000000C868 ; =============== S U B R O U T I N E =======================================
.text:000000000000C868 ; Attributes: bp-based frame
.text:000000000000C868                 EXPORT AParcel_readStatusHeader
.text:000000000000C868 AParcel_readStatusHeader                ; DATA XREF: LOAD:0000000000001908↑o
.text:000000000000C868 var_48          = -0x48
.text:000000000000C868 var_38          = -0x38
.text:000000000000C868 var_30          = -0x30
.text:000000000000C868 var_20          = -0x20
.text:000000000000C868 var_10          = -0x10
.text:000000000000C868 var_s0          =  0
.text:000000000000C868 ; __unwind {
.text:000000000000C868                 SUB             SP, SP, #0x60
.text:000000000000C86C                 STR             X23, [SP,#0x50+var_30]
.text:000000000000C870                 STP             X22, X21, [SP,#0x50+var_20]
.text:000000000000C874                 STP             X20, X19, [SP,#0x50+var_10]
.text:000000000000C878                 STP             X29, X30, [SP,#0x50+var_s0]
.text:000000000000C87C                 ADD             X29, SP, #0x50
.text:000000000000C880                 MRS             X23, #3, c13, c0, #2
.text:000000000000C884                 ADD             X9, SP, #0x50+var_48
.text:000000000000C888                 LDR             X8, [X23,#0x28]
.text:000000000000C88C                 ADD             X19, X9, #8
.text:000000000000C890                 MOV             X21, X0
.text:000000000000C894                 MOV             X0, X19 ; this
.text:000000000000C898                 MOV             X20, X1
.text:000000000000C89C                 STR             X8, [SP,#0x50+var_38]
.text:000000000000C8A0                 STR             XZR, [SP,#0x50+var_48]
.text:000000000000C8A4                 BL              ._ZN7android7String8C1Ev ; android::String8::String8(void)
.text:000000000000C8A8                 LDR             X1, [X21,#8] ; android::Parcel *
.text:000000000000C8AC                 ADD             X0, SP, #0x50+var_48 ; this
.text:000000000000C8B0                 BL              ._ZN7android6binder6Status14readFromParcelERKNS_6ParcelE ; android::binder::Status::readFromParcel(android::Parcel const&)
.text:000000000000C8B4                 BL              sub_E118
.text:000000000000C8B8                 MOV             W21, W0
.text:000000000000C8BC                 CBNZ            W0, loc_C8E0
.text:000000000000C8C0                 MOV             W0, #0x10 ; unsigned __int64
.text:000000000000C8C4                 BL              ._Znwm  ; operator new(ulong)
.text:000000000000C8C8                 LDR             X8, [SP,#0x50+var_48]
.text:000000000000C8CC                 MOV             X1, X19 ; android::String8 *
.text:000000000000C8D0                 MOV             X22, X0
.text:000000000000C8D4                 STR             X8, [X0],#8 ; this
.text:000000000000C8D8                 BL              ._ZN7android7String8C1ERKS0_ ; android::String8::String8(android::String8 const&)
.text:000000000000C8DC                 STR             X22, [X20]
.text:000000000000C8E0 loc_C8E0                                ; CODE XREF: AParcel_readStatusHeader+54↑j
.text:000000000000C8E0                 MOV             W0, W21
.text:000000000000C8E4                 BL              sub_E118
.text:000000000000C8E8                 MOV             W20, W0
.text:000000000000C8EC                 MOV             X0, X19 ; this
.text:000000000000C8F0                 BL              ._ZN7android7String8D1Ev ; android::String8::~String8()
.text:000000000000C8F4                 LDR             X8, [X23,#0x28]
.text:000000000000C8F8                 LDR             X9, [SP,#0x50+var_38]
.text:000000000000C8FC                 CMP             X8, X9
.text:000000000000C900                 B.NE            loc_C920
.text:000000000000C904                 MOV             W0, W20
.text:000000000000C908                 LDR             X23, [SP,#0x50+var_30]
.text:000000000000C90C                 LDP             X29, X30, [SP,#0x50+var_s0]
.text:000000000000C910                 LDP             X20, X19, [SP,#0x50+var_10]
.text:000000000000C914                 LDP             X22, X21, [SP,#0x50+var_20]
.text:000000000000C918                 ADD             SP, SP, #0x60 ; '`'
.text:000000000000C91C                 RET
.text:000000000000C920 ; ---------------------------------------------------------------------------
.text:000000000000C920 loc_C920                                ; CODE XREF: AParcel_readStatusHeader+98↑j
.text:000000000000C920                 BL              .__stack_chk_fail
.text:000000000000C920 ; } // starts at C868
.text:000000000000C920 ; End of function AParcel_readStatusHeader
.text:000000000000C920 ; ---------------------------------------------------------------------------
.text:000000000000C924                 ALIGN 8
.text:000000000000C928 ; =============== S U B R O U T I N E =======================================
.text:000000000000C928 ; Attributes: bp-based frame
.text:000000000000C928                 EXPORT AParcel_writeString
.text:000000000000C928 AParcel_writeString                     ; CODE XREF: .AParcel_writeString+C↓j
.text:000000000000C928                                         ; DATA XREF: LOAD:00000000000018C0↑o ...
.text:000000000000C928 var_38          = -0x38
.text:000000000000C928 var_30          = -0x30
.text:000000000000C928 var_20          = -0x20
.text:000000000000C928 var_10          = -0x10
.text:000000000000C928 var_s0          =  0
.text:000000000000C928 ; __unwind {
.text:000000000000C928                 SUB             SP, SP, #0x50
.text:000000000000C92C                 STR             X23, [SP,#0x40+var_30]
.text:000000000000C930                 STP             X22, X21, [SP,#0x40+var_20]
.text:000000000000C934                 STP             X20, X19, [SP,#0x40+var_10]
.text:000000000000C938                 STP             X29, X30, [SP,#0x40+var_s0]
.text:000000000000C93C                 ADD             X29, SP, #0x40
.text:000000000000C940                 MRS             X23, #3, c13, c0, #2
.text:000000000000C944                 MOV             W19, W2
.text:000000000000C948                 LDR             X8, [X23,#0x28]
.text:000000000000C94C                 MOV             X22, X0
.text:000000000000C950                 STR             X8, [SP,#0x40+var_38]
.text:000000000000C954                 CBZ             X1, loc_C9C4
.text:000000000000C958                 TBNZ            W19, #0x1F, loc_CA44
.text:000000000000C95C                 MOV             X20, X1
.text:000000000000C960                 SXTW            X21, W19
.text:000000000000C964                 MOV             X0, X1
.text:000000000000C968                 MOV             X1, X21
.text:000000000000C96C                 MOV             W2, WZR
.text:000000000000C970                 BL              .utf8_to_utf16_length
.text:000000000000C974                 MOV             X19, X0
.text:000000000000C978                 MOV             W8, #0x7FFFFFFF
.text:000000000000C97C                 CMP             X0, X8
.text:000000000000C980                 B.CS            loc_CAB4
.text:000000000000C984                 LDR             X0, [X22,#8] ; this
.text:000000000000C988                 MOV             W1, W19 ; int
.text:000000000000C98C                 BL              ._ZN7android6Parcel10writeInt32Ei ; android::Parcel::writeInt32(int)
.text:000000000000C990                 CBNZ            W0, loc_CAD4
.text:000000000000C994                 LDR             X0, [X22,#8] ; this
.text:000000000000C998                 ADD             X19, X19, #1
.text:000000000000C99C                 LSL             X1, X19, #1 ; unsigned __int64
.text:000000000000C9A0                 BL              ._ZN7android6Parcel12writeInplaceEm ; android::Parcel::writeInplace(ulong)
.text:000000000000C9A4                 CBZ             X0, loc_CB00
.text:000000000000C9A8                 MOV             X2, X0
.text:000000000000C9AC                 MOV             X0, X20
.text:000000000000C9B0                 MOV             X1, X21
.text:000000000000C9B4                 MOV             X3, X19
.text:000000000000C9B8                 BL              .utf8_to_utf16
.text:000000000000C9BC                 MOV             W0, WZR ; this
.text:000000000000C9C0                 B               loc_CAD8
.text:000000000000C9C4 ; ---------------------------------------------------------------------------
.text:000000000000C9C4 loc_C9C4                                ; CODE XREF: AParcel_writeString+2C↑j
.text:000000000000C9C4                 CMN             W19, #1
.text:000000000000C9C8                 B.EQ            loc_CAC8
.text:000000000000C9CC                 BL              ._ZN7android4base21GetMinimumLogSeverityEv ; android::base::GetMinimumLogSeverity(void)
.text:000000000000C9D0                 CMP             W0, #3
.text:000000000000C9D4                 B.GT            loc_CAC0
.text:000000000000C9D8                 BL              .__errno
.text:000000000000C9DC                 ADRP            X1, #aFrameworksNati_0@PAGE ; "frameworks/native/libs/binder/ndk/parce"...
.text:000000000000C9E0                 LDR             W20, [X0]
.text:000000000000C9E4                 MOV             X19, X0
.text:000000000000C9E8                 ADD             X1, X1, #aFrameworksNati_0@PAGEOFF ; "frameworks/native/libs/binder/ndk/parce"...
.text:000000000000C9EC                 MOV             W2, #0x128
.text:000000000000C9F0                 MOV             W6, #0xFFFFFFFF
.text:000000000000C9F4                 MOV             X0, SP
.text:000000000000C9F8                 MOV             W3, WZR
.text:000000000000C9FC                 MOV             W4, #3
.text:000000000000CA00                 MOV             X5, XZR
.text:000000000000CA04                 BL              ._ZN7android4base10LogMessageC1EPKcjNS0_5LogIdENS0_11LogSeverityES3_i ; android::base::LogMessage::LogMessage(char const*,uint,android::base::LogId,android::base::LogSeverity,char const*,int)
.text:000000000000CA08                 MOV             X0, SP  ; this
.text:000000000000CA0C                 BL              ._ZN7android4base10LogMessage6streamEv ; android::base::LogMessage::stream(void)
.text:000000000000CA10                 ADRP            X1, #aAparcelWritest_3@PAGE ; "AParcel_writeString"
.text:000000000000CA14                 ADD             X1, X1, #aAparcelWritest_3@PAGEOFF ; "AParcel_writeString"
.text:000000000000CA18                 MOV             W2, #0x13
.text:000000000000CA1C                 BL              sub_B548
.text:000000000000CA20                 ADRP            X1, #aNullStringMust@PAGE ; ": null string must be used with length "...
.text:000000000000CA24                 ADD             X1, X1, #aNullStringMust@PAGEOFF ; ": null string must be used with length "...
.text:000000000000CA28                 MOV             W2, #0x2D ; '-'
.text:000000000000CA2C                 BL              sub_B548
.text:000000000000CA30                 MOV             X0, SP  ; this
.text:000000000000CA34                 BL              ._ZN7android4base10LogMessageD1Ev ; android::base::LogMessage::~LogMessage()
.text:000000000000CA38                 MOV             W0, #0xFFFFFFEA ; this
.text:000000000000CA3C                 STR             W20, [X19]
.text:000000000000CA40                 B               loc_CAD8
.text:000000000000CA44 ; ---------------------------------------------------------------------------
.text:000000000000CA44 loc_CA44                                ; CODE XREF: AParcel_writeString+30↑j
.text:000000000000CA44                 BL              ._ZN7android4base21GetMinimumLogSeverityEv ; android::base::GetMinimumLogSeverity(void)
.text:000000000000CA48                 CMP             W0, #3
.text:000000000000CA4C                 B.GT            loc_CAC0
.text:000000000000CA50                 BL              .__errno
.text:000000000000CA54                 ADRP            X1, #aFrameworksNati_0@PAGE ; "frameworks/native/libs/binder/ndk/parce"...
.text:000000000000CA58                 LDR             W21, [X0]
.text:000000000000CA5C                 MOV             X20, X0
.text:000000000000CA60                 ADD             X1, X1, #aFrameworksNati_0@PAGEOFF ; "frameworks/native/libs/binder/ndk/parce"...
.text:000000000000CA64                 MOV             W2, #0x131
.text:000000000000CA68                 MOV             W6, #0xFFFFFFFF
.text:000000000000CA6C                 MOV             X0, SP
.text:000000000000CA70                 MOV             W3, WZR
.text:000000000000CA74                 MOV             W4, #3
.text:000000000000CA78                 MOV             X5, XZR
.text:000000000000CA7C                 BL              ._ZN7android4base10LogMessageC1EPKcjNS0_5LogIdENS0_11LogSeverityES3_i ; android::base::LogMessage::LogMessage(char const*,uint,android::base::LogId,android::base::LogSeverity,char const*,int)
.text:000000000000CA80                 MOV             X0, SP  ; this
.text:000000000000CA84                 BL              ._ZN7android4base10LogMessage6streamEv ; android::base::LogMessage::stream(void)
.text:000000000000CA88                 ADRP            X1, #aAparcelWritest_3@PAGE ; "AParcel_writeString"
.text:000000000000CA8C                 ADD             X1, X1, #aAparcelWritest_3@PAGEOFF ; "AParcel_writeString"
.text:000000000000CA90                 MOV             W2, #0x13
.text:000000000000CA94                 BL              sub_B548
.text:000000000000CA98                 ADRP            X1, #aNegativeString@PAGE ; ": Negative string length: "
.text:000000000000CA9C                 ADD             X1, X1, #aNegativeString@PAGEOFF ; ": Negative string length: "
.text:000000000000CAA0                 MOV             W2, #0x1A
.text:000000000000CAA4                 BL              sub_B548
.text:000000000000CAA8                 MOV             W1, W19
.text:000000000000CAAC                 BL              ._ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEi ; std::__1::basic_ostream<char,std::__1::char_traits<char>>::operator<<(int)
.text:000000000000CAB0                 B               loc_CB68
.text:000000000000CAB4 ; ---------------------------------------------------------------------------
.text:000000000000CAB4 loc_CAB4                                ; CODE XREF: AParcel_writeString+58↑j
.text:000000000000CAB4                 BL              ._ZN7android4base21GetMinimumLogSeverityEv ; android::base::GetMinimumLogSeverity(void)
.text:000000000000CAB8                 CMP             W0, #3
.text:000000000000CABC                 B.LE            loc_CB08
.text:000000000000CAC0 loc_CAC0                                ; CODE XREF: AParcel_writeString+AC↑j
.text:000000000000CAC0                                         ; AParcel_writeString+124↑j
.text:000000000000CAC0                 MOV             W0, #0xFFFFFFEA
.text:000000000000CAC4                 B               loc_CAD8
.text:000000000000CAC8 ; ---------------------------------------------------------------------------
.text:000000000000CAC8 loc_CAC8                                ; CODE XREF: AParcel_writeString+A0↑j
.text:000000000000CAC8                 LDR             X0, [X22,#8] ; this
.text:000000000000CACC                 MOV             W1, #0xFFFFFFFF ; int
.text:000000000000CAD0                 BL              ._ZN7android6Parcel10writeInt32Ei ; android::Parcel::writeInt32(int)
.text:000000000000CAD4 loc_CAD4                                ; CODE XREF: AParcel_writeString+68↑j
.text:000000000000CAD4                 BL              sub_E118
.text:000000000000CAD8 loc_CAD8                                ; CODE XREF: AParcel_writeString+98↑j
.text:000000000000CAD8                                         ; AParcel_writeString+118↑j ...
.text:000000000000CAD8                 LDR             X8, [X23,#0x28]
.text:000000000000CADC                 LDR             X9, [SP,#0x40+var_38]
.text:000000000000CAE0                 CMP             X8, X9
.text:000000000000CAE4                 B.NE            loc_CB7C
.text:000000000000CAE8                 LDP             X29, X30, [SP,#0x40+var_s0]
.text:000000000000CAEC                 LDP             X20, X19, [SP,#0x40+var_10]
.text:000000000000CAF0                 LDP             X22, X21, [SP,#0x40+var_20]
.text:000000000000CAF4                 LDR             X23, [SP,#0x40+var_30]
.text:000000000000CAF8                 ADD             SP, SP, #0x50 ; 'P'
.text:000000000000CAFC                 RET
.text:000000000000CB00 ; ---------------------------------------------------------------------------
.text:000000000000CB00 loc_CB00                                ; CODE XREF: AParcel_writeString+7C↑j
.text:000000000000CB00                 MOV             W0, #0xFFFFFFF4
.text:000000000000CB04                 B               loc_CAD8
.text:000000000000CB08 ; ---------------------------------------------------------------------------
.text:000000000000CB08 loc_CB08                                ; CODE XREF: AParcel_writeString+194↑j
.text:000000000000CB08                 BL              .__errno
.text:000000000000CB0C                 ADRP            X1, #aFrameworksNati_0@PAGE ; "frameworks/native/libs/binder/ndk/parce"...
.text:000000000000CB10                 LDR             W21, [X0]
.text:000000000000CB14                 MOV             X20, X0
.text:000000000000CB18                 ADD             X1, X1, #aFrameworksNati_0@PAGEOFF ; "frameworks/native/libs/binder/ndk/parce"...
.text:000000000000CB1C                 MOV             W2, #0x139
.text:000000000000CB20                 MOV             W6, #0xFFFFFFFF
.text:000000000000CB24                 MOV             X0, SP
.text:000000000000CB28                 MOV             W3, WZR
.text:000000000000CB2C                 MOV             W4, #3
.text:000000000000CB30                 MOV             X5, XZR
.text:000000000000CB34                 BL              ._ZN7android4base10LogMessageC1EPKcjNS0_5LogIdENS0_11LogSeverityES3_i ; android::base::LogMessage::LogMessage(char const*,uint,android::base::LogId,android::base::LogSeverity,char const*,int)
.text:000000000000CB38                 MOV             X0, SP  ; this
.text:000000000000CB3C                 BL              ._ZN7android4base10LogMessage6streamEv ; android::base::LogMessage::stream(void)
.text:000000000000CB40                 ADRP            X1, #aAparcelWritest_3@PAGE ; "AParcel_writeString"
.text:000000000000CB44                 ADD             X1, X1, #aAparcelWritest_3@PAGEOFF ; "AParcel_writeString"
.text:000000000000CB48                 MOV             W2, #0x13
.text:000000000000CB4C                 BL              sub_B548
.text:000000000000CB50                 ADRP            X1, #aInvalidStringL@PAGE ; ": Invalid string length: "
.text:000000000000CB54                 ADD             X1, X1, #aInvalidStringL@PAGEOFF ; ": Invalid string length: "
.text:000000000000CB58                 MOV             W2, #0x19
.text:000000000000CB5C                 BL              sub_B548
.text:000000000000CB60                 MOV             X1, X19
.text:000000000000CB64                 BL              ._ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEl ; std::__1::basic_ostream<char,std::__1::char_traits<char>>::operator<<(long)
.text:000000000000CB68 loc_CB68                                ; CODE XREF: AParcel_writeString+188↑j
.text:000000000000CB68                 MOV             X0, SP  ; this
.text:000000000000CB6C                 BL              ._ZN7android4base10LogMessageD1Ev ; android::base::LogMessage::~LogMessage()
.text:000000000000CB70                 MOV             W0, #0xFFFFFFEA
.text:000000000000CB74                 STR             W21, [X20]
.text:000000000000CB78                 B               loc_CAD8
.text:000000000000CB7C ; ---------------------------------------------------------------------------
.text:000000000000CB7C loc_CB7C                                ; CODE XREF: AParcel_writeString+1BC↑j
.text:000000000000CB7C                 BL              .__stack_chk_fail
.text:000000000000CB7C ; } // starts at C928
.text:000000000000CB7C ; End of function AParcel_writeString
.text:000000000000CB80 ; =============== S U B R O U T I N E =======================================
.text:000000000000CB80 ; Attributes: bp-based frame
.text:000000000000CB80                 EXPORT AParcel_readString
.text:000000000000CB80 AParcel_readString                      ; CODE XREF: .AParcel_readString+C↓j
.text:000000000000CB80                                         ; DATA XREF: LOAD:00000000000017B8↑o ...
.text:000000000000CB80 var_48          = -0x48
.text:000000000000CB80 var_40          = -0x40
.text:000000000000CB80 var_38          = -0x38
.text:000000000000CB80 var_30          = -0x30
.text:000000000000CB80 var_20          = -0x20
.text:000000000000CB80 var_10          = -0x10
.text:000000000000CB80 var_s0          =  0
.text:000000000000CB80 ; __unwind {
.text:000000000000CB80                 SUB             SP, SP, #0x60
.text:000000000000CB84                 STR             X23, [SP,#0x50+var_30]
.text:000000000000CB88                 STP             X22, X21, [SP,#0x50+var_20]
.text:000000000000CB8C                 STP             X20, X19, [SP,#0x50+var_10]
.text:000000000000CB90                 STP             X29, X30, [SP,#0x50+var_s0]
.text:000000000000CB94                 ADD             X29, SP, #0x50
.text:000000000000CB98                 MRS             X23, #3, c13, c0, #2
.text:000000000000CB9C                 MOV             X22, X1
.text:000000000000CBA0                 LDR             X8, [X23,#0x28]
.text:000000000000CBA4                 ADD             X1, SP, #0x50+var_40 ; unsigned __int64 *
.text:000000000000CBA8                 MOV             X20, X2
.text:000000000000CBAC                 STR             X8, [SP,#0x50+var_38]
.text:000000000000CBB0                 LDR             X0, [X0,#8] ; this
.text:000000000000CBB4                 BL              ._ZNK7android6Parcel19readString16InplaceEPm ; android::Parcel::readString16Inplace(ulong *)
.text:000000000000CBB8                 CBZ             X0, loc_CBF4
.text:000000000000CBBC                 LDR             X1, [SP,#0x50+var_40]
.text:000000000000CBC0                 MOV             X21, X0
.text:000000000000CBC4                 CBZ             X1, loc_CC18
.text:000000000000CBC8                 MOV             X0, X21
.text:000000000000CBCC                 BL              .utf16_to_utf8_length
.text:000000000000CBD0                 ADD             X19, X0, #1
.text:000000000000CBD4                 MOV             W8, #0x7FFFFFFF
.text:000000000000CBD8                 CMP             X0, X8
.text:000000000000CBDC                 B.CC            loc_CC1C
.text:000000000000CBE0                 BL              ._ZN7android4base21GetMinimumLogSeverityEv ; android::base::GetMinimumLogSeverity(void)
.text:000000000000CBE4                 CMP             W0, #3
.text:000000000000CBE8                 B.LE            loc_CCF4
.text:000000000000CBEC                 MOV             W0, #0xFFFFFFEA
.text:000000000000CBF0                 B               loc_CC60
.text:000000000000CBF4 ; ---------------------------------------------------------------------------
.text:000000000000CBF4 loc_CBF4                                ; CODE XREF: AParcel_readString+38↑j
.text:000000000000CBF4                 MOV             W1, #0xFFFFFFFF
.text:000000000000CBF8                 MOV             X0, X22
.text:000000000000CBFC                 MOV             X2, XZR
.text:000000000000CC00                 BLR             X20
.text:000000000000CC04                 MOV             W8, #8
.text:000000000000CC08                 TST             W0, #1
.text:000000000000CC0C                 MOVK            W8, #0x8000,LSL#16
.text:000000000000CC10                 CSEL            W0, WZR, W8, NE
.text:000000000000CC14                 B               loc_CC60
.text:000000000000CC18 ; ---------------------------------------------------------------------------
.text:000000000000CC18 loc_CC18                                ; CODE XREF: AParcel_readString+44↑j
.text:000000000000CC18                 MOV             W19, #1
.text:000000000000CC1C loc_CC1C                                ; CODE XREF: AParcel_readString+5C↑j
.text:000000000000CC1C                 ADD             X2, SP, #0x50+var_48
.text:000000000000CC20                 MOV             X0, X22
.text:000000000000CC24                 MOV             W1, W19
.text:000000000000CC28                 BLR             X20
.text:000000000000CC2C                 LDR             X2, [SP,#0x50+var_48]
.text:000000000000CC30                 CBZ             X2, loc_CC50
.text:000000000000CC34                 TBZ             W0, #0, loc_CC50
.text:000000000000CC38                 LDR             X1, [SP,#0x50+var_40]
.text:000000000000CC3C                 MOV             X0, X21
.text:000000000000CC40                 MOV             X3, X19
.text:000000000000CC44                 BL              .utf16_to_utf8
.text:000000000000CC48                 MOV             W0, WZR
.text:000000000000CC4C                 B               loc_CC60
.text:000000000000CC50 ; ---------------------------------------------------------------------------
.text:000000000000CC50 loc_CC50                                ; CODE XREF: AParcel_readString+B0↑j
.text:000000000000CC50                                         ; AParcel_readString+B4↑j
.text:000000000000CC50                 BL              ._ZN7android4base21GetMinimumLogSeverityEv ; android::base::GetMinimumLogSeverity(void)
.text:000000000000CC54                 CMP             W0, #3
.text:000000000000CC58                 B.LE            loc_CC88
.text:000000000000CC5C                 MOV             W0, #0xFFFFFFF4
.text:000000000000CC60 loc_CC60                                ; CODE XREF: AParcel_readString+70↑j
.text:000000000000CC60                                         ; AParcel_readString+94↑j ...
.text:000000000000CC60                 LDR             X8, [X23,#0x28]
.text:000000000000CC64                 LDR             X9, [SP,#0x50+var_38]
.text:000000000000CC68                 CMP             X8, X9
.text:000000000000CC6C                 B.NE            loc_CD68
.text:000000000000CC70                 LDP             X29, X30, [SP,#0x50+var_s0]
.text:000000000000CC74                 LDP             X20, X19, [SP,#0x50+var_10]
.text:000000000000CC78                 LDP             X22, X21, [SP,#0x50+var_20]
.text:000000000000CC7C                 LDR             X23, [SP,#0x50+var_30]
.text:000000000000CC80                 ADD             SP, SP, #0x60 ; '`'
.text:000000000000CC84                 RET
.text:000000000000CC88 ; ---------------------------------------------------------------------------
.text:000000000000CC88 loc_CC88                                ; CODE XREF: AParcel_readString+D8↑j
.text:000000000000CC88                 BL              .__errno
.text:000000000000CC8C                 ADRP            X1, #aFrameworksNati_0@PAGE ; "frameworks/native/libs/binder/ndk/parce"...
.text:000000000000CC90                 LDR             W20, [X0]
.text:000000000000CC94                 MOV             X19, X0
.text:000000000000CC98                 ADD             X1, X1, #aFrameworksNati_0@PAGEOFF ; "frameworks/native/libs/binder/ndk/parce"...
.text:000000000000CC9C                 MOV             W2, #0x16A
.text:000000000000CCA0                 MOV             W6, #0xFFFFFFFF
.text:000000000000CCA4                 MOV             X0, SP
.text:000000000000CCA8                 MOV             W3, WZR
.text:000000000000CCAC                 MOV             W4, #3
.text:000000000000CCB0                 MOV             X5, XZR
.text:000000000000CCB4                 BL              ._ZN7android4base10LogMessageC1EPKcjNS0_5LogIdENS0_11LogSeverityES3_i ; android::base::LogMessage::LogMessage(char const*,uint,android::base::LogId,android::base::LogSeverity,char const*,int)
.text:000000000000CCB8                 MOV             X0, SP  ; this
.text:000000000000CCBC                 BL              ._ZN7android4base10LogMessage6streamEv ; android::base::LogMessage::stream(void)
.text:000000000000CCC0                 ADRP            X1, #aAparcelReadstr_2@PAGE ; "AParcel_readString"
.text:000000000000CCC4                 ADD             X1, X1, #aAparcelReadstr_2@PAGEOFF ; "AParcel_readString"
.text:000000000000CCC8                 MOV             W2, #0x12
.text:000000000000CCCC                 BL              sub_B548
.text:000000000000CCD0                 ADRP            X1, #aAparcelStringa@PAGE ; ": AParcel_stringAllocator failed to all"...
.text:000000000000CCD4                 ADD             X1, X1, #aAparcelStringa@PAGEOFF ; ": AParcel_stringAllocator failed to all"...
.text:000000000000CCD8                 MOV             W2, #0x2D ; '-'
.text:000000000000CCDC                 BL              sub_B548
.text:000000000000CCE0                 MOV             X0, SP  ; this
.text:000000000000CCE4                 BL              ._ZN7android4base10LogMessageD1Ev ; android::base::LogMessage::~LogMessage()
.text:000000000000CCE8                 MOV             W0, #0xFFFFFFF4
.text:000000000000CCEC                 STR             W20, [X19]
.text:000000000000CCF0                 B               loc_CC60
.text:000000000000CCF4 ; ---------------------------------------------------------------------------
.text:000000000000CCF4 loc_CCF4                                ; CODE XREF: AParcel_readString+68↑j
.text:000000000000CCF4                 BL              .__errno
.text:000000000000CCF8                 ADRP            X1, #aFrameworksNati_0@PAGE ; "frameworks/native/libs/binder/ndk/parce"...
.text:000000000000CCFC                 LDR             W21, [X0]
.text:000000000000CD00                 MOV             X20, X0
.text:000000000000CD04                 ADD             X1, X1, #aFrameworksNati_0@PAGEOFF ; "frameworks/native/libs/binder/ndk/parce"...
.text:000000000000CD08                 MOV             W2, #0x162
.text:000000000000CD0C                 MOV             W6, #0xFFFFFFFF
.text:000000000000CD10                 ADD             X0, SP, #0x50+var_48
.text:000000000000CD14                 MOV             W3, WZR
.text:000000000000CD18                 MOV             W4, #3
.text:000000000000CD1C                 MOV             X5, XZR
.text:000000000000CD20                 BL              ._ZN7android4base10LogMessageC1EPKcjNS0_5LogIdENS0_11LogSeverityES3_i ; android::base::LogMessage::LogMessage(char const*,uint,android::base::LogId,android::base::LogSeverity,char const*,int)
.text:000000000000CD24                 ADD             X0, SP, #0x50+var_48 ; this
.text:000000000000CD28                 BL              ._ZN7android4base10LogMessage6streamEv ; android::base::LogMessage::stream(void)
.text:000000000000CD2C                 ADRP            X1, #aAparcelReadstr_2@PAGE ; "AParcel_readString"
.text:000000000000CD30                 ADD             X1, X1, #aAparcelReadstr_2@PAGEOFF ; "AParcel_readString"
.text:000000000000CD34                 MOV             W2, #0x12
.text:000000000000CD38                 BL              sub_B548
.text:000000000000CD3C                 ADRP            X1, #aInvalidStringL@PAGE ; ": Invalid string length: "
.text:000000000000CD40                 ADD             X1, X1, #aInvalidStringL@PAGEOFF ; ": Invalid string length: "
.text:000000000000CD44                 MOV             W2, #0x19
.text:000000000000CD48                 BL              sub_B548
.text:000000000000CD4C                 MOV             X1, X19
.text:000000000000CD50                 BL              ._ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEl ; std::__1::basic_ostream<char,std::__1::char_traits<char>>::operator<<(long)
.text:000000000000CD54                 ADD             X0, SP, #0x50+var_48 ; this
.text:000000000000CD58                 BL              ._ZN7android4base10LogMessageD1Ev ; android::base::LogMessage::~LogMessage()
.text:000000000000CD5C                 MOV             W0, #0xFFFFFFEA
.text:000000000000CD60                 STR             W21, [X20]
.text:000000000000CD64                 B               loc_CC60
.text:000000000000CD68 ; ---------------------------------------------------------------------------
.text:000000000000CD68 loc_CD68                                ; CODE XREF: AParcel_readString+EC↑j
.text:000000000000CD68                 BL              .__stack_chk_fail
.text:000000000000CD68 ; } // starts at CB80
.text:000000000000CD68 ; End of function AParcel_readString
.text:000000000000CD68 ; ---------------------------------------------------------------------------
.text:000000000000CD6C                 ALIGN 0x10
.text:000000000000CD70 ; =============== S U B R O U T I N E =======================================
.text:000000000000CD70 ; Attributes: bp-based frame
.text:000000000000CD70                 EXPORT AParcel_writeStringArray
.text:000000000000CD70 AParcel_writeStringArray                ; DATA XREF: LOAD:00000000000018D8↑o
.text:000000000000CD70 var_4C          = -0x4C
.text:000000000000CD70 var_48          = -0x48
.text:000000000000CD70 var_40          = -0x40
.text:000000000000CD70 var_30          = -0x30
.text:000000000000CD70 var_20          = -0x20
.text:000000000000CD70 var_10          = -0x10
.text:000000000000CD70 var_s0          =  0
.text:000000000000CD70 ; __unwind {
.text:000000000000CD70                 SUB             SP, SP, #0x60
.text:000000000000CD74                 STR             X25, [SP,#0x50+var_40]
.text:000000000000CD78                 STP             X24, X23, [SP,#0x50+var_30]
.text:000000000000CD7C                 STP             X22, X21, [SP,#0x50+var_20]
.text:000000000000CD80                 STP             X20, X19, [SP,#0x50+var_10]
.text:000000000000CD84                 STP             X29, X30, [SP,#0x50+var_s0]
.text:000000000000CD88                 ADD             X29, SP, #0x50
.text:000000000000CD8C                 MRS             X25, #3, c13, c0, #2
.text:000000000000CD90                 MOV             X21, X1
.text:000000000000CD94                 LDR             X8, [X25,#0x28]
.text:000000000000CD98                 LSR             W1, W2, #0x1F
.text:000000000000CD9C                 MOV             X20, X3
.text:000000000000CDA0                 MOV             W24, W2
.text:000000000000CDA4                 MOV             X22, X0
.text:000000000000CDA8                 STR             X8, [SP,#0x50+var_48]
.text:000000000000CDAC                 BL              sub_BE70
.text:000000000000CDB0                 MOV             W19, W0
.text:000000000000CDB4                 CMP             W24, #1
.text:000000000000CDB8                 B.LT            loc_CE18
.text:000000000000CDBC                 CBNZ            W19, loc_CE18
.text:000000000000CDC0                 MOV             X23, XZR
.text:000000000000CDC4                 MOV             W19, #0xFFFFFFEA
.text:000000000000CDC8                 SXTW            X24, W24
.text:000000000000CDCC loc_CDCC                                ; CODE XREF: AParcel_writeStringArray+98↓j
.text:000000000000CDCC                 ADD             X2, SP, #0x50+var_4C
.text:000000000000CDD0                 STR             WZR, [SP,#0x50+var_4C]
.text:000000000000CDD4                 MOV             X0, X21
.text:000000000000CDD8                 MOV             X1, X23
.text:000000000000CDDC                 BLR             X20
.text:000000000000CDE0                 LDR             W2, [SP,#0x50+var_4C]
.text:000000000000CDE4                 MOV             X1, X0
.text:000000000000CDE8                 CBNZ            X0, loc_CDF4
.text:000000000000CDEC                 CMN             W2, #1
.text:000000000000CDF0                 B.NE            loc_CE18
.text:000000000000CDF4 loc_CDF4                                ; CODE XREF: AParcel_writeStringArray+78↑j
.text:000000000000CDF4                 MOV             X0, X22
.text:000000000000CDF8                 BL              .AParcel_writeString
.text:000000000000CDFC                 CBNZ            W0, loc_CE14
.text:000000000000CE00                 ADD             X23, X23, #1
.text:000000000000CE04                 CMP             X23, X24
.text:000000000000CE08                 B.LT            loc_CDCC
.text:000000000000CE0C                 MOV             W19, WZR
.text:000000000000CE10                 B               loc_CE18
.text:000000000000CE14 ; ---------------------------------------------------------------------------
.text:000000000000CE14 loc_CE14                                ; CODE XREF: AParcel_writeStringArray+8C↑j
.text:000000000000CE14                 MOV             W19, W0
.text:000000000000CE18 loc_CE18                                ; CODE XREF: AParcel_writeStringArray+48↑j
.text:000000000000CE18                                         ; AParcel_writeStringArray+4C↑j ...
.text:000000000000CE18                 LDR             X8, [X25,#0x28]
.text:000000000000CE1C                 LDR             X9, [SP,#0x50+var_48]
.text:000000000000CE20                 CMP             X8, X9
.text:000000000000CE24                 B.NE            loc_CE48
.text:000000000000CE28                 MOV             W0, W19
.text:000000000000CE2C                 LDR             X25, [SP,#0x50+var_40]
.text:000000000000CE30                 LDP             X29, X30, [SP,#0x50+var_s0]
.text:000000000000CE34                 LDP             X20, X19, [SP,#0x50+var_10]
.text:000000000000CE38                 LDP             X22, X21, [SP,#0x50+var_20]
.text:000000000000CE3C                 LDP             X24, X23, [SP,#0x50+var_30]
.text:000000000000CE40                 ADD             SP, SP, #0x60 ; '`'
.text:000000000000CE44                 RET
.text:000000000000CE48 ; ---------------------------------------------------------------------------
.text:000000000000CE48 loc_CE48                                ; CODE XREF: AParcel_writeStringArray+B4↑j
.text:000000000000CE48                 BL              .__stack_chk_fail
.text:000000000000CE48 ; } // starts at CD70
.text:000000000000CE48 ; End of function AParcel_writeStringArray
.text:000000000000CE48 ; ---------------------------------------------------------------------------
.text:000000000000CE4C                 ALIGN 0x10
.text:000000000000CE50 ; =============== S U B R O U T I N E =======================================
.text:000000000000CE50 ; Attributes: bp-based frame
.text:000000000000CE50                 EXPORT AParcel_readStringArray
.text:000000000000CE50 AParcel_readStringArray                 ; DATA XREF: LOAD:0000000000001680↑o
.text:000000000000CE50 var_58          = -0x58
.text:000000000000CE50 var_50          = -0x50
.text:000000000000CE50 var_48          = -0x48
.text:000000000000CE50 var_3C          = -0x3C
.text:000000000000CE50 var_38          = -0x38
.text:000000000000CE50 var_30          = -0x30
.text:000000000000CE50 var_20          = -0x20
.text:000000000000CE50 var_10          = -0x10
.text:000000000000CE50 var_s0          =  0
.text:000000000000CE50 ; __unwind {
.text:000000000000CE50                 SUB             SP, SP, #0x70
.text:000000000000CE54                 STR             X23, [SP,#0x60+var_30]
.text:000000000000CE58                 STP             X22, X21, [SP,#0x60+var_20]
.text:000000000000CE5C                 STP             X20, X19, [SP,#0x60+var_10]
.text:000000000000CE60                 STP             X29, X30, [SP,#0x60+var_s0]
.text:000000000000CE64                 ADD             X29, SP, #0x60
.text:000000000000CE68                 MRS             X23, #3, c13, c0, #2
.text:000000000000CE6C                 MOV             X19, X0
.text:000000000000CE70                 LDR             X8, [X23,#0x28]
.text:000000000000CE74                 MOV             X21, X1
.text:000000000000CE78                 ADD             X1, SP, #0x60+var_3C ; int *
.text:000000000000CE7C                 MOV             X20, X3
.text:000000000000CE80                 MOV             X22, X2
.text:000000000000CE84                 STR             X8, [SP,#0x60+var_38]
.text:000000000000CE88                 LDR             X0, [X0,#8] ; this
.text:000000000000CE8C                 BL              ._ZNK7android6Parcel9readInt32EPi ; android::Parcel::readInt32(int *)
.text:000000000000CE90                 CBZ             W0, loc_CE9C
.text:000000000000CE94                 BL              sub_E118
.text:000000000000CE98                 B               loc_CF1C
.text:000000000000CE9C ; ---------------------------------------------------------------------------
.text:000000000000CE9C loc_CE9C                                ; CODE XREF: AParcel_readStringArray+40↑j
.text:000000000000CE9C                 LDR             W1, [SP,#0x60+var_3C]
.text:000000000000CEA0                 CMN             W1, #1
.text:000000000000CEA4                 B.GE            loc_CEB0
.text:000000000000CEA8                 MOV             W0, #0xFFFFFFEA
.text:000000000000CEAC                 B               loc_CF1C
.text:000000000000CEB0 ; ---------------------------------------------------------------------------
.text:000000000000CEB0 loc_CEB0                                ; CODE XREF: AParcel_readStringArray+54↑j
.text:000000000000CEB0                 MOV             X0, X21
.text:000000000000CEB4                 BLR             X22
.text:000000000000CEB8                 TBZ             W0, #0, loc_CF18
.text:000000000000CEBC                 LDR             W8, [SP,#0x60+var_3C]
.text:000000000000CEC0                 CMN             W8, #1
.text:000000000000CEC4                 B.EQ            loc_CF10
.text:000000000000CEC8                 CMP             W8, #1
.text:000000000000CECC                 STR             X21, [SP,#0x60+var_58]
.text:000000000000CED0                 STR             WZR, [SP,#0x60+var_50]
.text:000000000000CED4                 STR             X20, [SP,#0x60+var_48]
.text:000000000000CED8                 B.LT            loc_CF10
.text:000000000000CEDC                 ADRP            X20, #sub_CF48@PAGE
.text:000000000000CEE0                 ADD             X20, X20, #sub_CF48@PAGEOFF
.text:000000000000CEE4 loc_CEE4                                ; CODE XREF: AParcel_readStringArray+BC↓j
.text:000000000000CEE4                 ADD             X1, SP, #0x60+var_58
.text:000000000000CEE8                 MOV             X0, X19
.text:000000000000CEEC                 MOV             X2, X20
.text:000000000000CEF0                 BL              .AParcel_readString
.text:000000000000CEF4                 CBNZ            W0, loc_CF1C
.text:000000000000CEF8                 LDR             W8, [SP,#0x60+var_50]
.text:000000000000CEFC                 LDR             W9, [SP,#0x60+var_3C]
.text:000000000000CF00                 ADD             W8, W8, #1
.text:000000000000CF04                 CMP             W8, W9
.text:000000000000CF08                 STR             W8, [SP,#0x60+var_50]
.text:000000000000CF0C                 B.LT            loc_CEE4
.text:000000000000CF10 loc_CF10                                ; CODE XREF: AParcel_readStringArray+74↑j
.text:000000000000CF10                                         ; AParcel_readStringArray+88↑j
.text:000000000000CF10                 MOV             W0, WZR
.text:000000000000CF14                 B               loc_CF1C
.text:000000000000CF18 ; ---------------------------------------------------------------------------
.text:000000000000CF18 loc_CF18                                ; CODE XREF: AParcel_readStringArray+68↑j
.text:000000000000CF18                 MOV             W0, #0xFFFFFFF4
.text:000000000000CF1C loc_CF1C                                ; CODE XREF: AParcel_readStringArray+48↑j
.text:000000000000CF1C                                         ; AParcel_readStringArray+5C↑j ...
.text:000000000000CF1C                 LDR             X8, [X23,#0x28]
.text:000000000000CF20                 LDR             X9, [SP,#0x60+var_38]
.text:000000000000CF24                 CMP             X8, X9
.text:000000000000CF28                 B.NE            loc_CF44
.text:000000000000CF2C                 LDP             X29, X30, [SP,#0x60+var_s0]
.text:000000000000CF30                 LDP             X20, X19, [SP,#0x60+var_10]
.text:000000000000CF34                 LDP             X22, X21, [SP,#0x60+var_20]
.text:000000000000CF38                 LDR             X23, [SP,#0x60+var_30]
.text:000000000000CF3C                 ADD             SP, SP, #0x70 ; 'p'
.text:000000000000CF40                 RET
.text:000000000000CF44 ; ---------------------------------------------------------------------------
.text:000000000000CF44 loc_CF44                                ; CODE XREF: AParcel_readStringArray+D8↑j
.text:000000000000CF44                 BL              .__stack_chk_fail
.text:000000000000CF44 ; } // starts at CE50
.text:000000000000CF44 ; End of function AParcel_readStringArray
.text:000000000000CF48 ; =============== S U B R O U T I N E =======================================
.text:000000000000CF48 sub_CF48                                ; DATA XREF: AParcel_readStringArray+8C↑o
.text:000000000000CF48                                         ; AParcel_readStringArray+90↑o
.text:000000000000CF48 ; __unwind {
.text:000000000000CF48                 MOV             X8, X0
.text:000000000000CF4C                 LDR             X0, [X0]
.text:000000000000CF50                 MOV             X3, X2
.text:000000000000CF54                 MOV             W2, W1
.text:000000000000CF58                 LDRSW           X9, [X8,#8]
.text:000000000000CF5C                 LDR             X4, [X8,#0x10]
.text:000000000000CF60                 MOV             X1, X9
.text:000000000000CF64                 BR              X4
.text:000000000000CF64 ; } // starts at CF48
.text:000000000000CF64 ; End of function sub_CF48
.text:000000000000CF68 ; =============== S U B R O U T I N E =======================================
.text:000000000000CF68 ; Attributes: bp-based frame
.text:000000000000CF68                 EXPORT AParcel_writeParcelableArray
.text:000000000000CF68 AParcel_writeParcelableArray            ; DATA XREF: LOAD:0000000000001758↑o
.text:000000000000CF68 var_30          = -0x30
.text:000000000000CF68 var_20          = -0x20
.text:000000000000CF68 var_10          = -0x10
.text:000000000000CF68 var_s0          =  0
.text:000000000000CF68 ; __unwind {
.text:000000000000CF68                 STR             X23, [SP,#-0x10+var_30]!
.text:000000000000CF6C                 STP             X22, X21, [SP,#0x30+var_20]
.text:000000000000CF70                 STP             X20, X19, [SP,#0x30+var_10]
.text:000000000000CF74                 STP             X29, X30, [SP,#0x30+var_s0]
.text:000000000000CF78                 ADD             X29, SP, #0x30
.text:000000000000CF7C                 MOV             X20, X1
.text:000000000000CF80                 LSR             W1, W2, #0x1F
.text:000000000000CF84                 MOV             X19, X3
.text:000000000000CF88                 MOV             W22, W2
.text:000000000000CF8C                 MOV             X21, X0
.text:000000000000CF90                 BL              sub_BE70
.text:000000000000CF94                 CMP             W22, #1
.text:000000000000CF98                 B.LT            loc_CFCC
.text:000000000000CF9C                 CBNZ            W0, loc_CFCC
.text:000000000000CFA0                 MOV             X23, XZR
.text:000000000000CFA4                 SXTW            X22, W22
.text:000000000000CFA8 loc_CFA8                                ; CODE XREF: AParcel_writeParcelableArray+5C↓j
.text:000000000000CFA8                 MOV             X0, X21
.text:000000000000CFAC                 MOV             X1, X20
.text:000000000000CFB0                 MOV             X2, X23
.text:000000000000CFB4                 BLR             X19
.text:000000000000CFB8                 CBNZ            W0, loc_CFCC
.text:000000000000CFBC                 ADD             X23, X23, #1
.text:000000000000CFC0                 CMP             X23, X22
.text:000000000000CFC4                 B.LT            loc_CFA8
.text:000000000000CFC8                 MOV             W0, WZR
.text:000000000000CFCC loc_CFCC                                ; CODE XREF: AParcel_writeParcelableArray+30↑j
.text:000000000000CFCC                                         ; AParcel_writeParcelableArray+34↑j ...
.text:000000000000CFCC                 LDP             X29, X30, [SP,#0x30+var_s0]
.text:000000000000CFD0                 LDP             X20, X19, [SP,#0x30+var_10]
.text:000000000000CFD4                 LDP             X22, X21, [SP,#0x30+var_20]
.text:000000000000CFD8                 LDR             X23, [SP+0x30+var_30],#0x40
.text:000000000000CFDC                 RET
.text:000000000000CFDC ; } // starts at CF68
.text:000000000000CFDC ; End of function AParcel_writeParcelableArray
.text:000000000000CFE0 ; =============== S U B R O U T I N E =======================================
.text:000000000000CFE0 ; Attributes: bp-based frame
.text:000000000000CFE0                 EXPORT AParcel_readParcelableArray
.text:000000000000CFE0 AParcel_readParcelableArray             ; DATA XREF: LOAD:0000000000001668↑o
.text:000000000000CFE0 var_3C          = -0x3C
.text:000000000000CFE0 var_38          = -0x38
.text:000000000000CFE0 var_30          = -0x30
.text:000000000000CFE0 var_20          = -0x20
.text:000000000000CFE0 var_10          = -0x10
.text:000000000000CFE0 var_s0          =  0
.text:000000000000CFE0 ; __unwind {
.text:000000000000CFE0                 SUB             SP, SP, #0x50
.text:000000000000CFE4                 STR             X23, [SP,#0x40+var_30]
.text:000000000000CFE8                 STP             X22, X21, [SP,#0x40+var_20]
.text:000000000000CFEC                 STP             X20, X19, [SP,#0x40+var_10]
.text:000000000000CFF0                 STP             X29, X30, [SP,#0x40+var_s0]
.text:000000000000CFF4                 ADD             X29, SP, #0x40
.text:000000000000CFF8                 MRS             X23, #3, c13, c0, #2
.text:000000000000CFFC                 MOV             X20, X0
.text:000000000000D000                 LDR             X8, [X23,#0x28]
.text:000000000000D004                 MOV             X21, X1
.text:000000000000D008                 ADD             X1, SP, #0x40+var_3C ; int *
.text:000000000000D00C                 MOV             X19, X3
.text:000000000000D010                 MOV             X22, X2
.text:000000000000D014                 STR             X8, [SP,#0x40+var_38]
.text:000000000000D018                 LDR             X0, [X0,#8] ; this
.text:000000000000D01C                 BL              ._ZNK7android6Parcel9readInt32EPi ; android::Parcel::readInt32(int *)
.text:000000000000D020                 CBZ             W0, loc_D02C
.text:000000000000D024                 BL              sub_E118
.text:000000000000D028                 B               loc_D090
.text:000000000000D02C ; ---------------------------------------------------------------------------
.text:000000000000D02C loc_D02C                                ; CODE XREF: AParcel_readParcelableArray+40↑j
.text:000000000000D02C                 LDR             W1, [SP,#0x40+var_3C]
.text:000000000000D030                 CMN             W1, #1
.text:000000000000D034                 B.GE            loc_D040
.text:000000000000D038                 MOV             W0, #0xFFFFFFEA
.text:000000000000D03C                 B               loc_D090
.text:000000000000D040 ; ---------------------------------------------------------------------------
.text:000000000000D040 loc_D040                                ; CODE XREF: AParcel_readParcelableArray+54↑j
.text:000000000000D040                 MOV             X0, X21
.text:000000000000D044                 BLR             X22
.text:000000000000D048                 TBZ             W0, #0, loc_D084
.text:000000000000D04C                 LDR             W8, [SP,#0x40+var_3C]
.text:000000000000D050                 CMP             W8, #1
.text:000000000000D054                 B.LT            loc_D08C
.text:000000000000D058                 MOV             X22, XZR
.text:000000000000D05C loc_D05C                                ; CODE XREF: AParcel_readParcelableArray+9C↓j
.text:000000000000D05C                 MOV             X0, X20
.text:000000000000D060                 MOV             X1, X21
.text:000000000000D064                 MOV             X2, X22
.text:000000000000D068                 BLR             X19
.text:000000000000D06C                 CBNZ            W0, loc_D090
.text:000000000000D070                 LDRSW           X8, [SP,#0x40+var_3C]
.text:000000000000D074                 ADD             X22, X22, #1
.text:000000000000D078                 CMP             X22, X8
.text:000000000000D07C                 B.LT            loc_D05C
.text:000000000000D080                 B               loc_D090
.text:000000000000D084 ; ---------------------------------------------------------------------------
.text:000000000000D084 loc_D084                                ; CODE XREF: AParcel_readParcelableArray+68↑j
.text:000000000000D084                 MOV             W0, #0xFFFFFFF4
.text:000000000000D088                 B               loc_D090
.text:000000000000D08C ; ---------------------------------------------------------------------------
.text:000000000000D08C loc_D08C                                ; CODE XREF: AParcel_readParcelableArray+74↑j
.text:000000000000D08C                 MOV             W0, WZR
.text:000000000000D090 loc_D090                                ; CODE XREF: AParcel_readParcelableArray+48↑j
.text:000000000000D090                                         ; AParcel_readParcelableArray+5C↑j ...
.text:000000000000D090                 LDR             X8, [X23,#0x28]
.text:000000000000D094                 LDR             X9, [SP,#0x40+var_38]
.text:000000000000D098                 CMP             X8, X9
.text:000000000000D09C                 B.NE            loc_D0B8
.text:000000000000D0A0                 LDP             X29, X30, [SP,#0x40+var_s0]
.text:000000000000D0A4                 LDP             X20, X19, [SP,#0x40+var_10]
.text:000000000000D0A8                 LDP             X22, X21, [SP,#0x40+var_20]
.text:000000000000D0AC                 LDR             X23, [SP,#0x40+var_30]
.text:000000000000D0B0                 ADD             SP, SP, #0x50 ; 'P'
.text:000000000000D0B4                 RET
.text:000000000000D0B8 ; ---------------------------------------------------------------------------
.text:000000000000D0B8 loc_D0B8                                ; CODE XREF: AParcel_readParcelableArray+BC↑j
.text:000000000000D0B8                 BL              .__stack_chk_fail
.text:000000000000D0B8 ; } // starts at CFE0
.text:000000000000D0B8 ; End of function AParcel_readParcelableArray
.text:000000000000D0B8 ; ---------------------------------------------------------------------------
.text:000000000000D0BC                 ALIGN 0x20
.text:000000000000D0C0 ; =============== S U B R O U T I N E =======================================
.text:000000000000D0C0 ; Attributes: bp-based frame
.text:000000000000D0C0                 EXPORT AParcel_writeInt32
.text:000000000000D0C0 AParcel_writeInt32                      ; DATA XREF: LOAD:00000000000019E0↑o
.text:000000000000D0C0 var_s0          =  0
.text:000000000000D0C0 ; __unwind {
.text:000000000000D0C0                 STP             X29, X30, [SP,#-0x10+var_s0]!
.text:000000000000D0C4                 MOV             X29, SP
.text:000000000000D0C8                 LDR             X0, [X0,#8] ; this
.text:000000000000D0CC                 BL              ._ZN7android6Parcel10writeInt32Ei ; android::Parcel::writeInt32(int)
.text:000000000000D0D0                 LDP             X29, X30, [SP+var_s0],#0x10
.text:000000000000D0D4                 B               sub_E118
.text:000000000000D0D4 ; } // starts at D0C0
.text:000000000000D0D4 ; End of function AParcel_writeInt32
.text:000000000000D0D8 ; =============== S U B R O U T I N E =======================================
.text:000000000000D0D8 ; Attributes: bp-based frame
.text:000000000000D0D8                 EXPORT AParcel_writeUint32
.text:000000000000D0D8 AParcel_writeUint32                     ; DATA XREF: LOAD:00000000000018F0↑o
.text:000000000000D0D8 var_s0          =  0
.text:000000000000D0D8 ; __unwind {
.text:000000000000D0D8                 STP             X29, X30, [SP,#-0x10+var_s0]!
.text:000000000000D0DC                 MOV             X29, SP
.text:000000000000D0E0                 LDR             X0, [X0,#8] ; this
.text:000000000000D0E4                 BL              ._ZN7android6Parcel11writeUint32Ej ; android::Parcel::writeUint32(uint)
.text:000000000000D0E8                 LDP             X29, X30, [SP+var_s0],#0x10
.text:000000000000D0EC                 B               sub_E118
.text:000000000000D0EC ; } // starts at D0D8
.text:000000000000D0EC ; End of function AParcel_writeUint32
.text:000000000000D0F0 ; =============== S U B R O U T I N E =======================================
.text:000000000000D0F0 ; Attributes: bp-based frame
.text:000000000000D0F0                 EXPORT AParcel_writeInt64
.text:000000000000D0F0 AParcel_writeInt64                      ; DATA XREF: LOAD:0000000000001470↑o
.text:000000000000D0F0 var_s0          =  0
.text:000000000000D0F0 ; __unwind {
.text:000000000000D0F0                 STP             X29, X30, [SP,#-0x10+var_s0]!
.text:000000000000D0F4                 MOV             X29, SP
.text:000000000000D0F8                 LDR             X0, [X0,#8] ; this
.text:000000000000D0FC                 BL              ._ZN7android6Parcel10writeInt64El ; android::Parcel::writeInt64(long)
.text:000000000000D100                 LDP             X29, X30, [SP+var_s0],#0x10
.text:000000000000D104                 B               sub_E118
.text:000000000000D104 ; } // starts at D0F0
.text:000000000000D104 ; End of function AParcel_writeInt64
.text:000000000000D108 ; =============== S U B R O U T I N E =======================================
.text:000000000000D108 ; Attributes: bp-based frame
.text:000000000000D108                 EXPORT AParcel_writeUint64
.text:000000000000D108 AParcel_writeUint64                     ; DATA XREF: LOAD:0000000000001320↑o
.text:000000000000D108 var_s0          =  0
.text:000000000000D108 ; __unwind {
.text:000000000000D108                 STP             X29, X30, [SP,#-0x10+var_s0]!
.text:000000000000D10C                 MOV             X29, SP
.text:000000000000D110                 LDR             X0, [X0,#8] ; this
.text:000000000000D114                 BL              ._ZN7android6Parcel11writeUint64Em ; android::Parcel::writeUint64(ulong)
.text:000000000000D118                 LDP             X29, X30, [SP+var_s0],#0x10
.text:000000000000D11C                 B               sub_E118
.text:000000000000D11C ; } // starts at D108
.text:000000000000D11C ; End of function AParcel_writeUint64
.text:000000000000D120 ; =============== S U B R O U T I N E =======================================
.text:000000000000D120 ; Attributes: bp-based frame
.text:000000000000D120                 EXPORT AParcel_writeFloat
.text:000000000000D120 AParcel_writeFloat                      ; DATA XREF: LOAD:00000000000018A8↑o
.text:000000000000D120 var_s0          =  0
.text:000000000000D120 ; __unwind {
.text:000000000000D120                 STP             X29, X30, [SP,#-0x10+var_s0]!
.text:000000000000D124                 MOV             X29, SP
.text:000000000000D128                 LDR             X0, [X0,#8] ; this
.text:000000000000D12C                 BL              ._ZN7android6Parcel10writeFloatEf ; android::Parcel::writeFloat(float)
.text:000000000000D130                 LDP             X29, X30, [SP+var_s0],#0x10
.text:000000000000D134                 B               sub_E118
.text:000000000000D134 ; } // starts at D120
.text:000000000000D134 ; End of function AParcel_writeFloat
.text:000000000000D138 ; =============== S U B R O U T I N E =======================================
.text:000000000000D138 ; Attributes: bp-based frame
.text:000000000000D138                 EXPORT AParcel_writeDouble
.text:000000000000D138 AParcel_writeDouble                     ; DATA XREF: LOAD:0000000000001620↑o
.text:000000000000D138 var_s0          =  0
.text:000000000000D138 ; __unwind {
.text:000000000000D138                 STP             X29, X30, [SP,#-0x10+var_s0]!
.text:000000000000D13C                 MOV             X29, SP
.text:000000000000D140                 LDR             X0, [X0,#8] ; this
.text:000000000000D144                 BL              ._ZN7android6Parcel11writeDoubleEd ; android::Parcel::writeDouble(double)
.text:000000000000D148                 LDP             X29, X30, [SP+var_s0],#0x10
.text:000000000000D14C                 B               sub_E118
.text:000000000000D14C ; } // starts at D138
.text:000000000000D14C ; End of function AParcel_writeDouble
.text:000000000000D150 ; =============== S U B R O U T I N E =======================================
.text:000000000000D150 ; Attributes: bp-based frame
.text:000000000000D150                 EXPORT AParcel_writeBool
.text:000000000000D150 AParcel_writeBool                       ; DATA XREF: LOAD:00000000000012F0↑o
.text:000000000000D150 var_s0          =  0
.text:000000000000D150 ; __unwind {
.text:000000000000D150                 STP             X29, X30, [SP,#-0x10+var_s0]!
.text:000000000000D154                 MOV             X29, SP
.text:000000000000D158                 LDR             X0, [X0,#8] ; this
.text:000000000000D15C                 AND             W1, W1, #1 ; bool
.text:000000000000D160                 BL              ._ZN7android6Parcel9writeBoolEb ; android::Parcel::writeBool(bool)
.text:000000000000D164                 LDP             X29, X30, [SP+var_s0],#0x10
.text:000000000000D168                 B               sub_E118
.text:000000000000D168 ; } // starts at D150
.text:000000000000D168 ; End of function AParcel_writeBool
.text:000000000000D168 ; ---------------------------------------------------------------------------
.text:000000000000D16C                 ALIGN 0x10
.text:000000000000D170 ; =============== S U B R O U T I N E =======================================
.text:000000000000D170 ; Attributes: bp-based frame
.text:000000000000D170                 EXPORT AParcel_writeChar
.text:000000000000D170 AParcel_writeChar                       ; DATA XREF: LOAD:00000000000014D0↑o
.text:000000000000D170 var_s0          =  0
.text:000000000000D170 ; __unwind {
.text:000000000000D170                 STP             X29, X30, [SP,#-0x10+var_s0]!
.text:000000000000D174                 MOV             X29, SP
.text:000000000000D178                 LDR             X0, [X0,#8] ; this
.text:000000000000D17C                 BL              ._ZN7android6Parcel9writeCharEDs ; android::Parcel::writeChar(char16_t)
.text:000000000000D180                 LDP             X29, X30, [SP+var_s0],#0x10
.text:000000000000D184                 B               sub_E118
.text:000000000000D184 ; } // starts at D170
.text:000000000000D184 ; End of function AParcel_writeChar
.text:000000000000D188 ; =============== S U B R O U T I N E =======================================
.text:000000000000D188 ; Attributes: bp-based frame
.text:000000000000D188                 EXPORT AParcel_writeByte
.text:000000000000D188 AParcel_writeByte                       ; DATA XREF: LOAD:0000000000001608↑o
.text:000000000000D188 var_s0          =  0
.text:000000000000D188 ; __unwind {
.text:000000000000D188                 STP             X29, X30, [SP,#-0x10+var_s0]!
.text:000000000000D18C                 MOV             X29, SP
.text:000000000000D190                 LDR             X0, [X0,#8] ; this
.text:000000000000D194                 BL              ._ZN7android6Parcel9writeByteEa ; android::Parcel::writeByte(signed char)
.text:000000000000D198                 LDP             X29, X30, [SP+var_s0],#0x10
.text:000000000000D19C                 B               sub_E118
.text:000000000000D19C ; } // starts at D188
.text:000000000000D19C ; End of function AParcel_writeByte
.text:000000000000D1A0 ; =============== S U B R O U T I N E =======================================
.text:000000000000D1A0 ; Attributes: bp-based frame
.text:000000000000D1A0                 EXPORT AParcel_readInt32
.text:000000000000D1A0 AParcel_readInt32                       ; DATA XREF: LOAD:0000000000001818↑o
.text:000000000000D1A0 var_s0          =  0
.text:000000000000D1A0 ; __unwind {
.text:000000000000D1A0                 STP             X29, X30, [SP,#-0x10+var_s0]!
.text:000000000000D1A4                 MOV             X29, SP
.text:000000000000D1A8                 LDR             X0, [X0,#8] ; this
.text:000000000000D1AC                 BL              ._ZNK7android6Parcel9readInt32EPi ; android::Parcel::readInt32(int *)
.text:000000000000D1B0                 LDP             X29, X30, [SP+var_s0],#0x10
.text:000000000000D1B4                 B               sub_E118
.text:000000000000D1B4 ; } // starts at D1A0
.text:000000000000D1B4 ; End of function AParcel_readInt32
.text:000000000000D1B8 ; =============== S U B R O U T I N E =======================================
.text:000000000000D1B8 ; Attributes: bp-based frame
.text:000000000000D1B8                 EXPORT AParcel_readUint32
.text:000000000000D1B8 AParcel_readUint32                      ; DATA XREF: LOAD:00000000000017D0↑o
.text:000000000000D1B8 var_s0          =  0
.text:000000000000D1B8 ; __unwind {
.text:000000000000D1B8                 STP             X29, X30, [SP,#-0x10+var_s0]!
.text:000000000000D1BC                 MOV             X29, SP
.text:000000000000D1C0                 LDR             X0, [X0,#8] ; this
.text:000000000000D1C4                 BL              ._ZNK7android6Parcel10readUint32EPj ; android::Parcel::readUint32(uint *)
.text:000000000000D1C8                 LDP             X29, X30, [SP+var_s0],#0x10
.text:000000000000D1CC                 B               sub_E118
.text:000000000000D1CC ; } // starts at D1B8
.text:000000000000D1CC ; End of function AParcel_readUint32
.text:000000000000D1D0 ; =============== S U B R O U T I N E =======================================
.text:000000000000D1D0 ; Attributes: bp-based frame
.text:000000000000D1D0                 EXPORT AParcel_readInt64
.text:000000000000D1D0 AParcel_readInt64                       ; DATA XREF: LOAD:00000000000012C0↑o
.text:000000000000D1D0 var_s0          =  0
.text:000000000000D1D0 ; __unwind {
.text:000000000000D1D0                 STP             X29, X30, [SP,#-0x10+var_s0]!
.text:000000000000D1D4                 MOV             X29, SP
.text:000000000000D1D8                 LDR             X0, [X0,#8] ; this
.text:000000000000D1DC                 BL              ._ZNK7android6Parcel9readInt64EPl ; android::Parcel::readInt64(long *)
.text:000000000000D1E0                 LDP             X29, X30, [SP+var_s0],#0x10
.text:000000000000D1E4                 B               sub_E118
.text:000000000000D1E4 ; } // starts at D1D0
.text:000000000000D1E4 ; End of function AParcel_readInt64
.text:000000000000D1E8 ; =============== S U B R O U T I N E =======================================
.text:000000000000D1E8 ; Attributes: bp-based frame
.text:000000000000D1E8                 EXPORT AParcel_readUint64
.text:000000000000D1E8 AParcel_readUint64                      ; DATA XREF: LOAD:0000000000001230↑o
.text:000000000000D1E8 var_s0          =  0
.text:000000000000D1E8 ; __unwind {
.text:000000000000D1E8                 STP             X29, X30, [SP,#-0x10+var_s0]!
.text:000000000000D1EC                 MOV             X29, SP
.text:000000000000D1F0                 LDR             X0, [X0,#8] ; this
.text:000000000000D1F4                 BL              ._ZNK7android6Parcel10readUint64EPm ; android::Parcel::readUint64(ulong *)
.text:000000000000D1F8                 LDP             X29, X30, [SP+var_s0],#0x10
.text:000000000000D1FC                 B               sub_E118
.text:000000000000D1FC ; } // starts at D1E8
.text:000000000000D1FC ; End of function AParcel_readUint64
.text:000000000000D200 ; =============== S U B R O U T I N E =======================================
.text:000000000000D200 ; Attributes: bp-based frame
.text:000000000000D200                 EXPORT AParcel_readFloat
.text:000000000000D200 AParcel_readFloat                       ; DATA XREF: LOAD:0000000000001650↑o
.text:000000000000D200 var_s0          =  0
.text:000000000000D200 ; __unwind {
.text:000000000000D200                 STP             X29, X30, [SP,#-0x10+var_s0]!
.text:000000000000D204                 MOV             X29, SP
.text:000000000000D208                 LDR             X0, [X0,#8] ; this
.text:000000000000D20C                 BL              ._ZNK7android6Parcel9readFloatEPf ; android::Parcel::readFloat(float *)
.text:000000000000D210                 LDP             X29, X30, [SP+var_s0],#0x10
.text:000000000000D214                 B               sub_E118
.text:000000000000D214 ; } // starts at D200
.text:000000000000D214 ; End of function AParcel_readFloat
.text:000000000000D218 ; =============== S U B R O U T I N E =======================================
.text:000000000000D218 ; Attributes: bp-based frame
.text:000000000000D218                 EXPORT AParcel_readDouble
.text:000000000000D218 AParcel_readDouble                      ; DATA XREF: LOAD:0000000000001548↑o
.text:000000000000D218 var_s0          =  0
.text:000000000000D218 ; __unwind {
.text:000000000000D218                 STP             X29, X30, [SP,#-0x10+var_s0]!
.text:000000000000D21C                 MOV             X29, SP
.text:000000000000D220                 LDR             X0, [X0,#8] ; this
.text:000000000000D224                 BL              ._ZNK7android6Parcel10readDoubleEPd ; android::Parcel::readDouble(double *)
.text:000000000000D228                 LDP             X29, X30, [SP+var_s0],#0x10
.text:000000000000D22C                 B               sub_E118
.text:000000000000D22C ; } // starts at D218
.text:000000000000D22C ; End of function AParcel_readDouble
.text:000000000000D230 ; =============== S U B R O U T I N E =======================================
.text:000000000000D230 ; Attributes: bp-based frame
.text:000000000000D230                 EXPORT AParcel_readBool
.text:000000000000D230 AParcel_readBool                        ; DATA XREF: LOAD:00000000000013C8↑o
.text:000000000000D230 var_s0          =  0
.text:000000000000D230 ; __unwind {
.text:000000000000D230                 STP             X29, X30, [SP,#-0x10+var_s0]!
.text:000000000000D234                 MOV             X29, SP
.text:000000000000D238                 LDR             X0, [X0,#8] ; this
.text:000000000000D23C                 BL              ._ZNK7android6Parcel8readBoolEPb ; android::Parcel::readBool(bool *)
.text:000000000000D240                 LDP             X29, X30, [SP+var_s0],#0x10
.text:000000000000D244                 B               sub_E118
.text:000000000000D244 ; } // starts at D230
.text:000000000000D244 ; End of function AParcel_readBool
.text:000000000000D248 ; =============== S U B R O U T I N E =======================================
.text:000000000000D248 ; Attributes: bp-based frame
.text:000000000000D248                 EXPORT AParcel_readChar
.text:000000000000D248 AParcel_readChar                        ; DATA XREF: LOAD:00000000000015F0↑o
.text:000000000000D248 var_s0          =  0
.text:000000000000D248 ; __unwind {
.text:000000000000D248                 STP             X29, X30, [SP,#-0x10+var_s0]!
.text:000000000000D24C                 MOV             X29, SP
.text:000000000000D250                 LDR             X0, [X0,#8] ; this
.text:000000000000D254                 BL              ._ZNK7android6Parcel8readCharEPDs ; android::Parcel::readChar(char16_t *)
.text:000000000000D258                 LDP             X29, X30, [SP+var_s0],#0x10
.text:000000000000D25C                 B               sub_E118
.text:000000000000D25C ; } // starts at D248
.text:000000000000D25C ; End of function AParcel_readChar
.text:000000000000D260 ; =============== S U B R O U T I N E =======================================
.text:000000000000D260 ; Attributes: bp-based frame
.text:000000000000D260                 EXPORT AParcel_readByte
.text:000000000000D260 AParcel_readByte                        ; DATA XREF: LOAD:0000000000001728↑o
.text:000000000000D260 var_s0          =  0
.text:000000000000D260 ; __unwind {
.text:000000000000D260                 STP             X29, X30, [SP,#-0x10+var_s0]!
.text:000000000000D264                 MOV             X29, SP
.text:000000000000D268                 LDR             X0, [X0,#8] ; this
.text:000000000000D26C                 BL              ._ZNK7android6Parcel8readByteEPa ; android::Parcel::readByte(signed char *)
.text:000000000000D270                 LDP             X29, X30, [SP+var_s0],#0x10
.text:000000000000D274                 B               sub_E118
.text:000000000000D274 ; } // starts at D260
.text:000000000000D274 ; End of function AParcel_readByte
.text:000000000000D278 ; =============== S U B R O U T I N E =======================================
.text:000000000000D278 ; Attributes: bp-based frame
.text:000000000000D278                 EXPORT AParcel_writeInt32Array
.text:000000000000D278 AParcel_writeInt32Array                 ; DATA XREF: LOAD:0000000000001848↑o
.text:000000000000D278 var_20          = -0x20
.text:000000000000D278 var_10          = -0x10
.text:000000000000D278 var_s0          =  0
.text:000000000000D278 ; __unwind {
.text:000000000000D278                 STR             X21, [SP,#-0x10+var_20]!
.text:000000000000D27C                 STP             X20, X19, [SP,#0x20+var_10]
.text:000000000000D280                 STP             X29, X30, [SP,#0x20+var_s0]
.text:000000000000D284                 ADD             X29, SP, #0x20
.text:000000000000D288                 CMP             X1, #0
.text:000000000000D28C                 MOV             X19, X1
.text:000000000000D290                 CSET            W1, EQ
.text:000000000000D294                 MOV             W21, W2
.text:000000000000D298                 MOV             X20, X0
.text:000000000000D29C                 BL              sub_BE70
.text:000000000000D2A0                 CBNZ            W0, loc_D2EC
.text:000000000000D2A4                 CMP             W21, #1
.text:000000000000D2A8                 B.LT            loc_D2E0
.text:000000000000D2AC                 SBFIZ           X8, X21, #2, #0x20 ; ' '
.text:000000000000D2B0                 SXTW            X9, W21
.text:000000000000D2B4                 UBFX            X9, X9, #0x1E, #0x20 ; ' '
.text:000000000000D2B8                 CMP             W9, W8,ASR#31
.text:000000000000D2BC                 B.NE            loc_D2E8
.text:000000000000D2C0                 LDR             X0, [X20,#8] ; this
.text:000000000000D2C4                 SXTW            X20, W8
.text:000000000000D2C8                 MOV             X1, X20 ; unsigned __int64
.text:000000000000D2CC                 BL              ._ZN7android6Parcel12writeInplaceEm ; android::Parcel::writeInplace(ulong)
.text:000000000000D2D0                 CBZ             X0, loc_D2E8
.text:000000000000D2D4                 MOV             X1, X19 ; src
.text:000000000000D2D8                 MOV             X2, X20 ; n
.text:000000000000D2DC                 BL              .memcpy
.text:000000000000D2E0 loc_D2E0                                ; CODE XREF: AParcel_writeInt32Array+30↑j
.text:000000000000D2E0                 MOV             W0, WZR
.text:000000000000D2E4                 B               loc_D2EC
.text:000000000000D2E8 ; ---------------------------------------------------------------------------
.text:000000000000D2E8 loc_D2E8                                ; CODE XREF: AParcel_writeInt32Array+44↑j
.text:000000000000D2E8                                         ; AParcel_writeInt32Array+58↑j
.text:000000000000D2E8                 MOV             W0, #0xFFFFFFF4
.text:000000000000D2EC loc_D2EC                                ; CODE XREF: AParcel_writeInt32Array+28↑j
.text:000000000000D2EC                                         ; AParcel_writeInt32Array+6C↑j
.text:000000000000D2EC                 LDP             X29, X30, [SP,#0x20+var_s0]
.text:000000000000D2F0                 LDP             X20, X19, [SP,#0x20+var_10]
.text:000000000000D2F4                 LDR             X21, [SP+0x20+var_20],#0x30
.text:000000000000D2F8                 RET
.text:000000000000D2F8 ; } // starts at D278
.text:000000000000D2F8 ; End of function AParcel_writeInt32Array
.text:000000000000D2F8 ; ---------------------------------------------------------------------------
.text:000000000000D2FC                 ALIGN 0x20
.text:000000000000D300 ; =============== S U B R O U T I N E =======================================
.text:000000000000D300 ; Attributes: bp-based frame
.text:000000000000D300                 EXPORT AParcel_writeUint32Array
.text:000000000000D300 AParcel_writeUint32Array                ; DATA XREF: LOAD:0000000000001200↑o
.text:000000000000D300 var_20          = -0x20
.text:000000000000D300 var_10          = -0x10
.text:000000000000D300 var_s0          =  0
.text:000000000000D300 ; __unwind {
.text:000000000000D300                 STR             X21, [SP,#-0x10+var_20]!
.text:000000000000D304                 STP             X20, X19, [SP,#0x20+var_10]
.text:000000000000D308                 STP             X29, X30, [SP,#0x20+var_s0]
.text:000000000000D30C                 ADD             X29, SP, #0x20
.text:000000000000D310                 CMP             X1, #0
.text:000000000000D314                 MOV             X19, X1
.text:000000000000D318                 CSET            W1, EQ
.text:000000000000D31C                 MOV             W21, W2
.text:000000000000D320                 MOV             X20, X0
.text:000000000000D324                 BL              sub_BE70
.text:000000000000D328                 CBNZ            W0, loc_D374
.text:000000000000D32C                 CMP             W21, #1
.text:000000000000D330                 B.LT            loc_D368
.text:000000000000D334                 SBFIZ           X8, X21, #2, #0x20 ; ' '
.text:000000000000D338                 SXTW            X9, W21
.text:000000000000D33C                 UBFX            X9, X9, #0x1E, #0x20 ; ' '
.text:000000000000D340                 CMP             W9, W8,ASR#31
.text:000000000000D344                 B.NE            loc_D370
.text:000000000000D348                 LDR             X0, [X20,#8] ; this
.text:000000000000D34C                 SXTW            X20, W8
.text:000000000000D350                 MOV             X1, X20 ; unsigned __int64
.text:000000000000D354                 BL              ._ZN7android6Parcel12writeInplaceEm ; android::Parcel::writeInplace(ulong)
.text:000000000000D358                 CBZ             X0, loc_D370
.text:000000000000D35C                 MOV             X1, X19 ; src
.text:000000000000D360                 MOV             X2, X20 ; n
.text:000000000000D364                 BL              .memcpy
.text:000000000000D368 loc_D368                                ; CODE XREF: AParcel_writeUint32Array+30↑j
.text:000000000000D368                 MOV             W0, WZR
.text:000000000000D36C                 B               loc_D374
.text:000000000000D370 ; ---------------------------------------------------------------------------
.text:000000000000D370 loc_D370                                ; CODE XREF: AParcel_writeUint32Array+44↑j
.text:000000000000D370                                         ; AParcel_writeUint32Array+58↑j
.text:000000000000D370                 MOV             W0, #0xFFFFFFF4
.text:000000000000D374 loc_D374                                ; CODE XREF: AParcel_writeUint32Array+28↑j
.text:000000000000D374                                         ; AParcel_writeUint32Array+6C↑j
.text:000000000000D374                 LDP             X29, X30, [SP,#0x20+var_s0]
.text:000000000000D378                 LDP             X20, X19, [SP,#0x20+var_10]
.text:000000000000D37C                 LDR             X21, [SP+0x20+var_20],#0x30
.text:000000000000D380                 RET
.text:000000000000D380 ; } // starts at D300
.text:000000000000D380 ; End of function AParcel_writeUint32Array
.text:000000000000D380 ; ---------------------------------------------------------------------------
.text:000000000000D384                 ALIGN 8
.text:000000000000D388 ; =============== S U B R O U T I N E =======================================
.text:000000000000D388 ; Attributes: bp-based frame
.text:000000000000D388                 EXPORT AParcel_writeInt64Array
.text:000000000000D388 AParcel_writeInt64Array                 ; DATA XREF: LOAD:0000000000001740↑o
.text:000000000000D388 var_20          = -0x20
.text:000000000000D388 var_10          = -0x10
.text:000000000000D388 var_s0          =  0
.text:000000000000D388 ; __unwind {
.text:000000000000D388                 STR             X21, [SP,#-0x10+var_20]!
.text:000000000000D38C                 STP             X20, X19, [SP,#0x20+var_10]
.text:000000000000D390                 STP             X29, X30, [SP,#0x20+var_s0]
.text:000000000000D394                 ADD             X29, SP, #0x20
.text:000000000000D398                 CMP             X1, #0
.text:000000000000D39C                 MOV             X19, X1
.text:000000000000D3A0                 CSET            W1, EQ
.text:000000000000D3A4                 MOV             W21, W2
.text:000000000000D3A8                 MOV             X20, X0
.text:000000000000D3AC                 BL              sub_BE70
.text:000000000000D3B0                 CBNZ            W0, loc_D3FC
.text:000000000000D3B4                 CMP             W21, #1
.text:000000000000D3B8                 B.LT            loc_D3F0
.text:000000000000D3BC                 SBFIZ           X8, X21, #3, #0x20 ; ' '
.text:000000000000D3C0                 SXTW            X9, W21
.text:000000000000D3C4                 UBFX            X9, X9, #0x1D, #0x20 ; ' '
.text:000000000000D3C8                 CMP             W9, W8,ASR#31
.text:000000000000D3CC                 B.NE            loc_D3F8
.text:000000000000D3D0                 LDR             X0, [X20,#8] ; this
.text:000000000000D3D4                 SXTW            X20, W8
.text:000000000000D3D8                 MOV             X1, X20 ; unsigned __int64
.text:000000000000D3DC                 BL              ._ZN7android6Parcel12writeInplaceEm ; android::Parcel::writeInplace(ulong)
.text:000000000000D3E0                 CBZ             X0, loc_D3F8
.text:000000000000D3E4                 MOV             X1, X19 ; src
.text:000000000000D3E8                 MOV             X2, X20 ; n
.text:000000000000D3EC                 BL              .memcpy
.text:000000000000D3F0 loc_D3F0                                ; CODE XREF: AParcel_writeInt64Array+30↑j
.text:000000000000D3F0                 MOV             W0, WZR
.text:000000000000D3F4                 B               loc_D3FC
.text:000000000000D3F8 ; ---------------------------------------------------------------------------
.text:000000000000D3F8 loc_D3F8                                ; CODE XREF: AParcel_writeInt64Array+44↑j
.text:000000000000D3F8                                         ; AParcel_writeInt64Array+58↑j
.text:000000000000D3F8                 MOV             W0, #0xFFFFFFF4
.text:000000000000D3FC loc_D3FC                                ; CODE XREF: AParcel_writeInt64Array+28↑j
.text:000000000000D3FC                                         ; AParcel_writeInt64Array+6C↑j
.text:000000000000D3FC                 LDP             X29, X30, [SP,#0x20+var_s0]
.text:000000000000D400                 LDP             X20, X19, [SP,#0x20+var_10]
.text:000000000000D404                 LDR             X21, [SP+0x20+var_20],#0x30
.text:000000000000D408                 RET
.text:000000000000D408 ; } // starts at D388
.text:000000000000D408 ; End of function AParcel_writeInt64Array
.text:000000000000D408 ; ---------------------------------------------------------------------------
.text:000000000000D40C                 ALIGN 0x10
.text:000000000000D410 ; =============== S U B R O U T I N E =======================================
.text:000000000000D410 ; Attributes: bp-based frame
.text:000000000000D410                 EXPORT AParcel_writeUint64Array
.text:000000000000D410 AParcel_writeUint64Array                ; DATA XREF: LOAD:0000000000001A28↑o
.text:000000000000D410 var_20          = -0x20
.text:000000000000D410 var_10          = -0x10
.text:000000000000D410 var_s0          =  0
.text:000000000000D410 ; __unwind {
.text:000000000000D410                 STR             X21, [SP,#-0x10+var_20]!
.text:000000000000D414                 STP             X20, X19, [SP,#0x20+var_10]
.text:000000000000D418                 STP             X29, X30, [SP,#0x20+var_s0]
.text:000000000000D41C                 ADD             X29, SP, #0x20
.text:000000000000D420                 CMP             X1, #0
.text:000000000000D424                 MOV             X19, X1
.text:000000000000D428                 CSET            W1, EQ
.text:000000000000D42C                 MOV             W21, W2
.text:000000000000D430                 MOV             X20, X0
.text:000000000000D434                 BL              sub_BE70
.text:000000000000D438                 CBNZ            W0, loc_D484
.text:000000000000D43C                 CMP             W21, #1
.text:000000000000D440                 B.LT            loc_D478
.text:000000000000D444                 SBFIZ           X8, X21, #3, #0x20 ; ' '
.text:000000000000D448                 SXTW            X9, W21
.text:000000000000D44C                 UBFX            X9, X9, #0x1D, #0x20 ; ' '
.text:000000000000D450                 CMP             W9, W8,ASR#31
.text:000000000000D454                 B.NE            loc_D480
.text:000000000000D458                 LDR             X0, [X20,#8] ; this
.text:000000000000D45C                 SXTW            X20, W8
.text:000000000000D460                 MOV             X1, X20 ; unsigned __int64
.text:000000000000D464                 BL              ._ZN7android6Parcel12writeInplaceEm ; android::Parcel::writeInplace(ulong)
.text:000000000000D468                 CBZ             X0, loc_D480
.text:000000000000D46C                 MOV             X1, X19 ; src
.text:000000000000D470                 MOV             X2, X20 ; n
.text:000000000000D474                 BL              .memcpy
.text:000000000000D478 loc_D478                                ; CODE XREF: AParcel_writeUint64Array+30↑j
.text:000000000000D478                 MOV             W0, WZR
.text:000000000000D47C                 B               loc_D484
.text:000000000000D480 ; ---------------------------------------------------------------------------
.text:000000000000D480 loc_D480                                ; CODE XREF: AParcel_writeUint64Array+44↑j
.text:000000000000D480                                         ; AParcel_writeUint64Array+58↑j
.text:000000000000D480                 MOV             W0, #0xFFFFFFF4
.text:000000000000D484 loc_D484                                ; CODE XREF: AParcel_writeUint64Array+28↑j
.text:000000000000D484                                         ; AParcel_writeUint64Array+6C↑j
.text:000000000000D484                 LDP             X29, X30, [SP,#0x20+var_s0]
.text:000000000000D488                 LDP             X20, X19, [SP,#0x20+var_10]
.text:000000000000D48C                 LDR             X21, [SP+0x20+var_20],#0x30
.text:000000000000D490                 RET
.text:000000000000D490 ; } // starts at D410
.text:000000000000D490 ; End of function AParcel_writeUint64Array
.text:000000000000D490 ; ---------------------------------------------------------------------------
.text:000000000000D494                 ALIGN 8
.text:000000000000D498 ; =============== S U B R O U T I N E =======================================
.text:000000000000D498 ; Attributes: bp-based frame
.text:000000000000D498                 EXPORT AParcel_writeFloatArray
.text:000000000000D498 AParcel_writeFloatArray                 ; DATA XREF: LOAD:0000000000001308↑o
.text:000000000000D498 var_20          = -0x20
.text:000000000000D498 var_10          = -0x10
.text:000000000000D498 var_s0          =  0
.text:000000000000D498 ; __unwind {
.text:000000000000D498                 STR             X21, [SP,#-0x10+var_20]!
.text:000000000000D49C                 STP             X20, X19, [SP,#0x20+var_10]
.text:000000000000D4A0                 STP             X29, X30, [SP,#0x20+var_s0]
.text:000000000000D4A4                 ADD             X29, SP, #0x20
.text:000000000000D4A8                 CMP             X1, #0
.text:000000000000D4AC                 MOV             X19, X1
.text:000000000000D4B0                 CSET            W1, EQ
.text:000000000000D4B4                 MOV             W21, W2
.text:000000000000D4B8                 MOV             X20, X0
.text:000000000000D4BC                 BL              sub_BE70
.text:000000000000D4C0                 CBNZ            W0, loc_D50C
.text:000000000000D4C4                 CMP             W21, #1
.text:000000000000D4C8                 B.LT            loc_D500
.text:000000000000D4CC                 SBFIZ           X8, X21, #2, #0x20 ; ' '
.text:000000000000D4D0                 SXTW            X9, W21
.text:000000000000D4D4                 UBFX            X9, X9, #0x1E, #0x20 ; ' '
.text:000000000000D4D8                 CMP             W9, W8,ASR#31
.text:000000000000D4DC                 B.NE            loc_D508
.text:000000000000D4E0                 LDR             X0, [X20,#8] ; this
.text:000000000000D4E4                 SXTW            X20, W8
.text:000000000000D4E8                 MOV             X1, X20 ; unsigned __int64
.text:000000000000D4EC                 BL              ._ZN7android6Parcel12writeInplaceEm ; android::Parcel::writeInplace(ulong)
.text:000000000000D4F0                 CBZ             X0, loc_D508
.text:000000000000D4F4                 MOV             X1, X19 ; src
.text:000000000000D4F8                 MOV             X2, X20 ; n
.text:000000000000D4FC                 BL              .memcpy
.text:000000000000D500 loc_D500                                ; CODE XREF: AParcel_writeFloatArray+30↑j
.text:000000000000D500                 MOV             W0, WZR
.text:000000000000D504                 B               loc_D50C
.text:000000000000D508 ; ---------------------------------------------------------------------------
.text:000000000000D508 loc_D508                                ; CODE XREF: AParcel_writeFloatArray+44↑j
.text:000000000000D508                                         ; AParcel_writeFloatArray+58↑j
.text:000000000000D508                 MOV             W0, #0xFFFFFFF4
.text:000000000000D50C loc_D50C                                ; CODE XREF: AParcel_writeFloatArray+28↑j
.text:000000000000D50C                                         ; AParcel_writeFloatArray+6C↑j
.text:000000000000D50C                 LDP             X29, X30, [SP,#0x20+var_s0]
.text:000000000000D510                 LDP             X20, X19, [SP,#0x20+var_10]
.text:000000000000D514                 LDR             X21, [SP+0x20+var_20],#0x30
.text:000000000000D518                 RET
.text:000000000000D518 ; } // starts at D498
.text:000000000000D518 ; End of function AParcel_writeFloatArray
.text:000000000000D518 ; ---------------------------------------------------------------------------
.text:000000000000D51C                 ALIGN 0x20
.text:000000000000D520 ; =============== S U B R O U T I N E =======================================
.text:000000000000D520 ; Attributes: bp-based frame
.text:000000000000D520                 EXPORT AParcel_writeDoubleArray
.text:000000000000D520 AParcel_writeDoubleArray                ; DATA XREF: LOAD:00000000000017E8↑o
.text:000000000000D520 var_20          = -0x20
.text:000000000000D520 var_10          = -0x10
.text:000000000000D520 var_s0          =  0
.text:000000000000D520 ; __unwind {
.text:000000000000D520                 STR             X21, [SP,#-0x10+var_20]!
.text:000000000000D524                 STP             X20, X19, [SP,#0x20+var_10]
.text:000000000000D528                 STP             X29, X30, [SP,#0x20+var_s0]
.text:000000000000D52C                 ADD             X29, SP, #0x20
.text:000000000000D530                 CMP             X1, #0
.text:000000000000D534                 MOV             X19, X1
.text:000000000000D538                 CSET            W1, EQ
.text:000000000000D53C                 MOV             W21, W2
.text:000000000000D540                 MOV             X20, X0
.text:000000000000D544                 BL              sub_BE70
.text:000000000000D548                 CBNZ            W0, loc_D594
.text:000000000000D54C                 CMP             W21, #1
.text:000000000000D550                 B.LT            loc_D588
.text:000000000000D554                 SBFIZ           X8, X21, #3, #0x20 ; ' '
.text:000000000000D558                 SXTW            X9, W21
.text:000000000000D55C                 UBFX            X9, X9, #0x1D, #0x20 ; ' '
.text:000000000000D560                 CMP             W9, W8,ASR#31
.text:000000000000D564                 B.NE            loc_D590
.text:000000000000D568                 LDR             X0, [X20,#8] ; this
.text:000000000000D56C                 SXTW            X20, W8
.text:000000000000D570                 MOV             X1, X20 ; unsigned __int64
.text:000000000000D574                 BL              ._ZN7android6Parcel12writeInplaceEm ; android::Parcel::writeInplace(ulong)
.text:000000000000D578                 CBZ             X0, loc_D590
.text:000000000000D57C                 MOV             X1, X19 ; src
.text:000000000000D580                 MOV             X2, X20 ; n
.text:000000000000D584                 BL              .memcpy
.text:000000000000D588 loc_D588                                ; CODE XREF: AParcel_writeDoubleArray+30↑j
.text:000000000000D588                 MOV             W0, WZR
.text:000000000000D58C                 B               loc_D594
.text:000000000000D590 ; ---------------------------------------------------------------------------
.text:000000000000D590 loc_D590                                ; CODE XREF: AParcel_writeDoubleArray+44↑j
.text:000000000000D590                                         ; AParcel_writeDoubleArray+58↑j
.text:000000000000D590                 MOV             W0, #0xFFFFFFF4
.text:000000000000D594 loc_D594                                ; CODE XREF: AParcel_writeDoubleArray+28↑j
.text:000000000000D594                                         ; AParcel_writeDoubleArray+6C↑j
.text:000000000000D594                 LDP             X29, X30, [SP,#0x20+var_s0]
.text:000000000000D598                 LDP             X20, X19, [SP,#0x20+var_10]
.text:000000000000D59C                 LDR             X21, [SP+0x20+var_20],#0x30
.text:000000000000D5A0                 RET
.text:000000000000D5A0 ; } // starts at D520
.text:000000000000D5A0 ; End of function AParcel_writeDoubleArray
.text:000000000000D5A0 ; ---------------------------------------------------------------------------
.text:000000000000D5A4                 ALIGN 8
.text:000000000000D5A8 ; =============== S U B R O U T I N E =======================================
.text:000000000000D5A8 ; Attributes: bp-based frame
.text:000000000000D5A8                 EXPORT AParcel_writeBoolArray
.text:000000000000D5A8 AParcel_writeBoolArray                  ; DATA XREF: LOAD:0000000000001560↑o
.text:000000000000D5A8 var_30          = -0x30
.text:000000000000D5A8 var_20          = -0x20
.text:000000000000D5A8 var_10          = -0x10
.text:000000000000D5A8 var_s0          =  0
.text:000000000000D5A8 ; __unwind {
.text:000000000000D5A8                 STR             X23, [SP,#-0x10+var_30]!
.text:000000000000D5AC                 STP             X22, X21, [SP,#0x30+var_20]
.text:000000000000D5B0                 STP             X20, X19, [SP,#0x30+var_10]
.text:000000000000D5B4                 STP             X29, X30, [SP,#0x30+var_s0]
.text:000000000000D5B8                 ADD             X29, SP, #0x30
.text:000000000000D5BC                 MOV             X20, X1
.text:000000000000D5C0                 LSR             W1, W2, #0x1F
.text:000000000000D5C4                 MOV             X19, X3
.text:000000000000D5C8                 MOV             W22, W2
.text:000000000000D5CC                 MOV             X21, X0
.text:000000000000D5D0                 BL              sub_BE70
.text:000000000000D5D4                 CBNZ            W0, loc_D618
.text:000000000000D5D8                 CMP             W22, #1
.text:000000000000D5DC                 B.LT            loc_D614
.text:000000000000D5E0                 LDR             X21, [X21,#8]
.text:000000000000D5E4                 MOV             X23, XZR
.text:000000000000D5E8                 SXTW            X22, W22
.text:000000000000D5EC loc_D5EC                                ; CODE XREF: AParcel_writeBoolArray+68↓j
.text:000000000000D5EC                 MOV             X0, X20
.text:000000000000D5F0                 MOV             X1, X23
.text:000000000000D5F4                 BLR             X19
.text:000000000000D5F8                 AND             W1, W0, #1 ; bool
.text:000000000000D5FC                 MOV             X0, X21 ; this
.text:000000000000D600                 BL              ._ZN7android6Parcel9writeBoolEb ; android::Parcel::writeBool(bool)
.text:000000000000D604                 CBNZ            W0, loc_D62C
.text:000000000000D608                 ADD             X23, X23, #1
.text:000000000000D60C                 CMP             X23, X22
.text:000000000000D610                 B.LT            loc_D5EC
.text:000000000000D614 loc_D614                                ; CODE XREF: AParcel_writeBoolArray+34↑j
.text:000000000000D614                 MOV             W0, WZR
.text:000000000000D618 loc_D618                                ; CODE XREF: AParcel_writeBoolArray+2C↑j
.text:000000000000D618                 LDP             X29, X30, [SP,#0x30+var_s0]
.text:000000000000D61C                 LDP             X20, X19, [SP,#0x30+var_10]
.text:000000000000D620                 LDP             X22, X21, [SP,#0x30+var_20]
.text:000000000000D624                 LDR             X23, [SP+0x30+var_30],#0x40
.text:000000000000D628                 RET
.text:000000000000D62C ; ---------------------------------------------------------------------------
.text:000000000000D62C loc_D62C                                ; CODE XREF: AParcel_writeBoolArray+5C↑j
.text:000000000000D62C                 LDP             X29, X30, [SP,#0x30+var_s0]
.text:000000000000D630                 LDP             X20, X19, [SP,#0x30+var_10]
.text:000000000000D634                 LDP             X22, X21, [SP,#0x30+var_20]
.text:000000000000D638                 LDR             X23, [SP+0x30+var_30],#0x40
.text:000000000000D63C                 B               sub_E118
.text:000000000000D63C ; } // starts at D5A8
.text:000000000000D63C ; End of function AParcel_writeBoolArray
.text:000000000000D640 ; =============== S U B R O U T I N E =======================================
.text:000000000000D640 ; Attributes: bp-based frame
.text:000000000000D640                 EXPORT AParcel_writeCharArray
.text:000000000000D640 AParcel_writeCharArray                  ; DATA XREF: LOAD:00000000000011E8↑o
.text:000000000000D640 var_20          = -0x20
.text:000000000000D640 var_10          = -0x10
.text:000000000000D640 var_s0          =  0
.text:000000000000D640 ; __unwind {
.text:000000000000D640                 STP             X22, X21, [SP,#-0x10+var_20]!
.text:000000000000D644                 STP             X20, X19, [SP,#0x20+var_10]
.text:000000000000D648                 STP             X29, X30, [SP,#0x20+var_s0]
.text:000000000000D64C                 ADD             X29, SP, #0x20
.text:000000000000D650                 CMP             X1, #0
.text:000000000000D654                 MOV             X19, X1
.text:000000000000D658                 CSET            W1, EQ
.text:000000000000D65C                 MOV             W20, W2
.text:000000000000D660                 MOV             X21, X0
.text:000000000000D664                 BL              sub_BE70
.text:000000000000D668                 CBNZ            W0, loc_D6B0
.text:000000000000D66C                 CMP             W20, #1
.text:000000000000D670                 B.LT            loc_D6AC
.text:000000000000D674                 CMN             W20, W20
.text:000000000000D678                 B.VC            loc_D684
.text:000000000000D67C                 MOV             W0, #0xFFFFFFF4
.text:000000000000D680                 B               loc_D6B0
.text:000000000000D684 ; ---------------------------------------------------------------------------
.text:000000000000D684 loc_D684                                ; CODE XREF: AParcel_writeCharArray+38↑j
.text:000000000000D684                 LDR             X21, [X21,#8]
.text:000000000000D688                 MOV             X22, XZR
.text:000000000000D68C                 SXTW            X20, W20
.text:000000000000D690 loc_D690                                ; CODE XREF: AParcel_writeCharArray+68↓j
.text:000000000000D690                 LDRH            W1, [X19,X22,LSL#1] ; char16_t
.text:000000000000D694                 MOV             X0, X21 ; this
.text:000000000000D698                 BL              ._ZN7android6Parcel9writeCharEDs ; android::Parcel::writeChar(char16_t)
.text:000000000000D69C                 CBNZ            W0, loc_D6C0
.text:000000000000D6A0                 ADD             X22, X22, #1
.text:000000000000D6A4                 CMP             X22, X20
.text:000000000000D6A8                 B.LT            loc_D690
.text:000000000000D6AC loc_D6AC                                ; CODE XREF: AParcel_writeCharArray+30↑j
.text:000000000000D6AC                 MOV             W0, WZR
.text:000000000000D6B0 loc_D6B0                                ; CODE XREF: AParcel_writeCharArray+28↑j
.text:000000000000D6B0                                         ; AParcel_writeCharArray+40↑j
.text:000000000000D6B0                 LDP             X29, X30, [SP,#0x20+var_s0]
.text:000000000000D6B4                 LDP             X20, X19, [SP,#0x20+var_10]
.text:000000000000D6B8                 LDP             X22, X21, [SP+0x20+var_20],#0x30
.text:000000000000D6BC                 RET
.text:000000000000D6C0 ; ---------------------------------------------------------------------------
.text:000000000000D6C0 loc_D6C0                                ; CODE XREF: AParcel_writeCharArray+5C↑j
.text:000000000000D6C0                 LDP             X29, X30, [SP,#0x20+var_s0]
.text:000000000000D6C4                 LDP             X20, X19, [SP,#0x20+var_10]
.text:000000000000D6C8                 LDP             X22, X21, [SP+0x20+var_20],#0x30
.text:000000000000D6CC                 B               sub_E118
.text:000000000000D6CC ; } // starts at D640
.text:000000000000D6CC ; End of function AParcel_writeCharArray
.text:000000000000D6D0 ; =============== S U B R O U T I N E =======================================
.text:000000000000D6D0 ; Attributes: bp-based frame
.text:000000000000D6D0                 EXPORT AParcel_writeByteArray
.text:000000000000D6D0 AParcel_writeByteArray                  ; DATA XREF: LOAD:0000000000001458↑o
.text:000000000000D6D0 var_20          = -0x20
.text:000000000000D6D0 var_10          = -0x10
.text:000000000000D6D0 var_s0          =  0
.text:000000000000D6D0 ; __unwind {
.text:000000000000D6D0                 STR             X21, [SP,#-0x10+var_20]!
.text:000000000000D6D4                 STP             X20, X19, [SP,#0x20+var_10]
.text:000000000000D6D8                 STP             X29, X30, [SP,#0x20+var_s0]
.text:000000000000D6DC                 ADD             X29, SP, #0x20
.text:000000000000D6E0                 CMP             X1, #0
.text:000000000000D6E4                 MOV             X19, X1
.text:000000000000D6E8                 CSET            W1, EQ
.text:000000000000D6EC                 MOV             W20, W2
.text:000000000000D6F0                 MOV             X21, X0
.text:000000000000D6F4                 BL              sub_BE70
.text:000000000000D6F8                 CBNZ            W0, loc_D730
.text:000000000000D6FC                 CMP             W20, #1
.text:000000000000D700                 B.LT            loc_D724
.text:000000000000D704                 LDR             X0, [X21,#8] ; this
.text:000000000000D708                 SXTW            X20, W20
.text:000000000000D70C                 MOV             X1, X20 ; unsigned __int64
.text:000000000000D710                 BL              ._ZN7android6Parcel12writeInplaceEm ; android::Parcel::writeInplace(ulong)
.text:000000000000D714                 CBZ             X0, loc_D72C
.text:000000000000D718                 MOV             X1, X19 ; src
.text:000000000000D71C                 MOV             X2, X20 ; n
.text:000000000000D720                 BL              .memcpy
.text:000000000000D724 loc_D724                                ; CODE XREF: AParcel_writeByteArray+30↑j
.text:000000000000D724                 MOV             W0, WZR
.text:000000000000D728                 B               loc_D730
.text:000000000000D72C ; ---------------------------------------------------------------------------
.text:000000000000D72C loc_D72C                                ; CODE XREF: AParcel_writeByteArray+44↑j
.text:000000000000D72C                 MOV             W0, #0xFFFFFFF4
.text:000000000000D730 loc_D730                                ; CODE XREF: AParcel_writeByteArray+28↑j
.text:000000000000D730                                         ; AParcel_writeByteArray+58↑j
.text:000000000000D730                 LDP             X29, X30, [SP,#0x20+var_s0]
.text:000000000000D734                 LDP             X20, X19, [SP,#0x20+var_10]
.text:000000000000D738                 LDR             X21, [SP+0x20+var_20],#0x30
.text:000000000000D73C                 RET
.text:000000000000D73C ; } // starts at D6D0
.text:000000000000D73C ; End of function AParcel_writeByteArray
.text:000000000000D740 ; =============== S U B R O U T I N E =======================================
.text:000000000000D740                 EXPORT AParcel_readInt32Array
.text:000000000000D740 AParcel_readInt32Array                  ; DATA XREF: LOAD:0000000000001428↑o
.text:000000000000D740 dest            = -0x48
.text:000000000000D740 var_3C          = -0x3C
.text:000000000000D740 var_38          = -0x38
.text:000000000000D740 var_30          = -0x30
.text:000000000000D740 var_20          = -0x20
.text:000000000000D740 var_10          = -0x10
.text:000000000000D740 ; __unwind {
.text:000000000000D740                 B               AParcel_readUint32Array_0
.text:000000000000D740 ; } // starts at D740
.text:000000000000D740 ; ---------------------------------------------------------------------------
.text:000000000000D744                 ALIGN 8
.text:000000000000D748 AParcel_readUint32Array_0               ; CODE XREF: AParcel_readInt32Array↑j
.text:000000000000D748                                         ; AParcel_readUint32Array↓j ...
.text:000000000000D748 ; __unwind {
.text:000000000000D748                 SUB             SP, SP, #0x50 ; 'P'
.text:000000000000D74C                 STP             X22, X21, [SP,#0x50+var_30]
.text:000000000000D750                 STP             X20, X19, [SP,#0x50+var_20]
.text:000000000000D754                 STP             X29, X30, [SP,#0x50+var_10]
.text:000000000000D758                 ADD             X29, SP, #0x50+var_10
.text:000000000000D75C                 MRS             X22, #3, c13, c0, #2
.text:000000000000D760                 MOV             X21, X1
.text:000000000000D764                 LDR             X8, [X22,#0x28]
.text:000000000000D768                 ADD             X1, SP, #0x50+var_3C ; int *
.text:000000000000D76C                 MOV             X20, X2
.text:000000000000D770                 STR             X8, [SP,#0x50+var_38]
.text:000000000000D774                 LDR             X19, [X0,#8]
.text:000000000000D778                 MOV             X0, X19 ; this
.text:000000000000D77C                 BL              ._ZNK7android6Parcel9readInt32EPi ; android::Parcel::readInt32(int *)
.text:000000000000D780                 CBZ             W0, loc_D78C
.text:000000000000D784                 BL              sub_E118
.text:000000000000D788                 B               loc_D808
.text:000000000000D78C ; ---------------------------------------------------------------------------
.text:000000000000D78C loc_D78C                                ; CODE XREF: AParcel_readInt32Array+40↑j
.text:000000000000D78C                 LDR             W1, [SP,#0x50+var_3C]
.text:000000000000D790                 CMN             W1, #1
.text:000000000000D794                 B.GE            loc_D7A0
.text:000000000000D798                 MOV             W0, #0xFFFFFFEA
.text:000000000000D79C                 B               loc_D808
.text:000000000000D7A0 ; ---------------------------------------------------------------------------
.text:000000000000D7A0 loc_D7A0                                ; CODE XREF: AParcel_readInt32Array+54↑j
.text:000000000000D7A0                 ADD             X2, SP, #0x50+dest
.text:000000000000D7A4                 MOV             X0, X21
.text:000000000000D7A8                 BLR             X20
.text:000000000000D7AC                 TBZ             W0, #0, loc_D804
.text:000000000000D7B0                 LDR             W8, [SP,#0x50+var_3C]
.text:000000000000D7B4                 CMP             W8, #1
.text:000000000000D7B8                 B.LT            loc_D7FC
.text:000000000000D7BC                 LDR             X9, [SP,#0x50+dest]
.text:000000000000D7C0                 CBZ             X9, loc_D804
.text:000000000000D7C4                 SBFIZ           X9, X8, #2, #0x20 ; ' '
.text:000000000000D7C8                 SXTW            X8, W8
.text:000000000000D7CC                 UBFX            X8, X8, #0x1E, #0x20 ; ' '
.text:000000000000D7D0                 CMP             W8, W9,ASR#31
.text:000000000000D7D4                 B.NE            loc_D804
.text:000000000000D7D8                 SXTW            X20, W9
.text:000000000000D7DC                 MOV             X0, X19 ; this
.text:000000000000D7E0                 MOV             X1, X20 ; unsigned __int64
.text:000000000000D7E4                 BL              ._ZNK7android6Parcel11readInplaceEm ; android::Parcel::readInplace(ulong)
.text:000000000000D7E8                 CBZ             X0, loc_D804
.text:000000000000D7EC                 MOV             X1, X0  ; src
.text:000000000000D7F0                 LDR             X0, [SP,#0x50+dest] ; dest
.text:000000000000D7F4                 MOV             X2, X20 ; n
.text:000000000000D7F8                 BL              .memcpy
.text:000000000000D7FC loc_D7FC                                ; CODE XREF: AParcel_readInt32Array+78↑j
.text:000000000000D7FC                 MOV             W0, WZR
.text:000000000000D800                 B               loc_D808
.text:000000000000D804 ; ---------------------------------------------------------------------------
.text:000000000000D804 loc_D804                                ; CODE XREF: AParcel_readInt32Array+6C↑j
.text:000000000000D804                                         ; AParcel_readInt32Array+80↑j ...
.text:000000000000D804                 MOV             W0, #0xFFFFFFF4
.text:000000000000D808 loc_D808                                ; CODE XREF: AParcel_readInt32Array+48↑j
.text:000000000000D808                                         ; AParcel_readInt32Array+5C↑j ...
.text:000000000000D808                 LDR             X8, [X22,#0x28]
.text:000000000000D80C                 LDR             X9, [SP,#0x50+var_38]
.text:000000000000D810                 CMP             X8, X9
.text:000000000000D814                 B.NE            loc_D82C
.text:000000000000D818                 LDP             X29, X30, [SP,#0x50+var_10]
.text:000000000000D81C                 LDP             X20, X19, [SP,#0x50+var_20]
.text:000000000000D820                 LDP             X22, X21, [SP,#0x50+var_30]
.text:000000000000D824                 ADD             SP, SP, #0x50 ; 'P'
.text:000000000000D828                 RET
.text:000000000000D82C ; ---------------------------------------------------------------------------
.text:000000000000D82C loc_D82C                                ; CODE XREF: AParcel_readInt32Array+D4↑j
.text:000000000000D82C                 BL              .__stack_chk_fail
.text:000000000000D82C ; } // starts at D748
.text:000000000000D82C ; End of function AParcel_readInt32Array
.text:000000000000D830 ; [00000004 BYTES: COLLAPSED FUNCTION AParcel_readUint32Array. PRESS CTRL-NUMPAD+ TO EXPAND]
.text:000000000000D834                 ALIGN 8
.text:000000000000D838 ; =============== S U B R O U T I N E =======================================
.text:000000000000D838                 EXPORT AParcel_readInt64Array
.text:000000000000D838 AParcel_readInt64Array                  ; DATA XREF: LOAD:0000000000001890↑o
.text:000000000000D838 dest            = -0x48
.text:000000000000D838 var_3C          = -0x3C
.text:000000000000D838 var_38          = -0x38
.text:000000000000D838 var_30          = -0x30
.text:000000000000D838 var_20          = -0x20
.text:000000000000D838 var_10          = -0x10
.text:000000000000D838 ; __unwind {
.text:000000000000D838                 B               AParcel_readUint64Array_0
.text:000000000000D838 ; } // starts at D838
.text:000000000000D838 ; ---------------------------------------------------------------------------
.text:000000000000D83C                 ALIGN 0x20
.text:000000000000D840 AParcel_readUint64Array_0               ; CODE XREF: AParcel_readInt64Array↑j
.text:000000000000D840                                         ; AParcel_readUint64Array↓j ...
.text:000000000000D840 ; __unwind {
.text:000000000000D840                 SUB             SP, SP, #0x50 ; 'P'
.text:000000000000D844                 STP             X22, X21, [SP,#0x50+var_30]
.text:000000000000D848                 STP             X20, X19, [SP,#0x50+var_20]
.text:000000000000D84C                 STP             X29, X30, [SP,#0x50+var_10]
.text:000000000000D850                 ADD             X29, SP, #0x50+var_10
.text:000000000000D854                 MRS             X22, #3, c13, c0, #2
.text:000000000000D858                 MOV             X21, X1
.text:000000000000D85C                 LDR             X8, [X22,#0x28]
.text:000000000000D860                 ADD             X1, SP, #0x50+var_3C ; int *
.text:000000000000D864                 MOV             X20, X2
.text:000000000000D868                 STR             X8, [SP,#0x50+var_38]
.text:000000000000D86C                 LDR             X19, [X0,#8]
.text:000000000000D870                 MOV             X0, X19 ; this
.text:000000000000D874                 BL              ._ZNK7android6Parcel9readInt32EPi ; android::Parcel::readInt32(int *)
.text:000000000000D878                 CBZ             W0, loc_D884
.text:000000000000D87C                 BL              sub_E118
.text:000000000000D880                 B               loc_D900
.text:000000000000D884 ; ---------------------------------------------------------------------------
.text:000000000000D884 loc_D884                                ; CODE XREF: AParcel_readInt64Array+40↑j
.text:000000000000D884                 LDR             W1, [SP,#0x50+var_3C]
.text:000000000000D888                 CMN             W1, #1
.text:000000000000D88C                 B.GE            loc_D898
.text:000000000000D890                 MOV             W0, #0xFFFFFFEA
.text:000000000000D894                 B               loc_D900
.text:000000000000D898 ; ---------------------------------------------------------------------------
.text:000000000000D898 loc_D898                                ; CODE XREF: AParcel_readInt64Array+54↑j
.text:000000000000D898                 ADD             X2, SP, #0x50+dest
.text:000000000000D89C                 MOV             X0, X21
.text:000000000000D8A0                 BLR             X20
.text:000000000000D8A4                 TBZ             W0, #0, loc_D8FC
.text:000000000000D8A8                 LDR             W8, [SP,#0x50+var_3C]
.text:000000000000D8AC                 CMP             W8, #1
.text:000000000000D8B0                 B.LT            loc_D8F4
.text:000000000000D8B4                 LDR             X9, [SP,#0x50+dest]
.text:000000000000D8B8                 CBZ             X9, loc_D8FC
.text:000000000000D8BC                 SBFIZ           X9, X8, #3, #0x20 ; ' '
.text:000000000000D8C0                 SXTW            X8, W8
.text:000000000000D8C4                 UBFX            X8, X8, #0x1D, #0x20 ; ' '
.text:000000000000D8C8                 CMP             W8, W9,ASR#31
.text:000000000000D8CC                 B.NE            loc_D8FC
.text:000000000000D8D0                 SXTW            X20, W9
.text:000000000000D8D4                 MOV             X0, X19 ; this
.text:000000000000D8D8                 MOV             X1, X20 ; unsigned __int64
.text:000000000000D8DC                 BL              ._ZNK7android6Parcel11readInplaceEm ; android::Parcel::readInplace(ulong)
.text:000000000000D8E0                 CBZ             X0, loc_D8FC
.text:000000000000D8E4                 MOV             X1, X0  ; src
.text:000000000000D8E8                 LDR             X0, [SP,#0x50+dest] ; dest
.text:000000000000D8EC                 MOV             X2, X20 ; n
.text:000000000000D8F0                 BL              .memcpy
.text:000000000000D8F4 loc_D8F4                                ; CODE XREF: AParcel_readInt64Array+78↑j
.text:000000000000D8F4                 MOV             W0, WZR
.text:000000000000D8F8                 B               loc_D900
.text:000000000000D8FC ; ---------------------------------------------------------------------------
.text:000000000000D8FC loc_D8FC                                ; CODE XREF: AParcel_readInt64Array+6C↑j
.text:000000000000D8FC                                         ; AParcel_readInt64Array+80↑j ...
.text:000000000000D8FC                 MOV             W0, #0xFFFFFFF4
.text:000000000000D900 loc_D900                                ; CODE XREF: AParcel_readInt64Array+48↑j
.text:000000000000D900                                         ; AParcel_readInt64Array+5C↑j ...
.text:000000000000D900                 LDR             X8, [X22,#0x28]
.text:000000000000D904                 LDR             X9, [SP,#0x50+var_38]
.text:000000000000D908                 CMP             X8, X9
.text:000000000000D90C                 B.NE            loc_D924
.text:000000000000D910                 LDP             X29, X30, [SP,#0x50+var_10]
.text:000000000000D914                 LDP             X20, X19, [SP,#0x50+var_20]
.text:000000000000D918                 LDP             X22, X21, [SP,#0x50+var_30]
.text:000000000000D91C                 ADD             SP, SP, #0x50 ; 'P'
.text:000000000000D920                 RET
.text:000000000000D924 ; ---------------------------------------------------------------------------
.text:000000000000D924 loc_D924                                ; CODE XREF: AParcel_readInt64Array+D4↑j
.text:000000000000D924                 BL              .__stack_chk_fail
.text:000000000000D924 ; } // starts at D840
.text:000000000000D924 ; End of function AParcel_readInt64Array
.text:000000000000D928 ; [00000004 BYTES: COLLAPSED FUNCTION AParcel_readUint64Array. PRESS CTRL-NUMPAD+ TO EXPAND]
.text:000000000000D92C                 ALIGN 0x10
.text:000000000000D930 ; =============== S U B R O U T I N E =======================================
.text:000000000000D930                 EXPORT AParcel_readFloatArray
.text:000000000000D930 AParcel_readFloatArray                  ; DATA XREF: LOAD:00000000000013E0↑o
.text:000000000000D930 ; __unwind {
.text:000000000000D930                 B               AParcel_readUint32Array_0
.text:000000000000D930 ; } // starts at D930
.text:000000000000D930 ; End of function AParcel_readFloatArray
.text:000000000000D930 ; ---------------------------------------------------------------------------
.text:000000000000D934                 ALIGN 8
.text:000000000000D938 ; =============== S U B R O U T I N E =======================================
.text:000000000000D938                 EXPORT AParcel_readDoubleArray
.text:000000000000D938 AParcel_readDoubleArray                 ; DATA XREF: LOAD:0000000000001590↑o
.text:000000000000D938 ; __unwind {
.text:000000000000D938                 B               AParcel_readUint64Array_0
.text:000000000000D938 ; } // starts at D938
.text:000000000000D938 ; End of function AParcel_readDoubleArray
.text:000000000000D938 ; ---------------------------------------------------------------------------
.text:000000000000D93C                 ALIGN 0x20
.text:000000000000D940 ; =============== S U B R O U T I N E =======================================
.text:000000000000D940 ; Attributes: bp-based frame
.text:000000000000D940                 EXPORT AParcel_readBoolArray
.text:000000000000D940 AParcel_readBoolArray                   ; DATA XREF: LOAD:0000000000001578↑o
.text:000000000000D940 var_40          = -0x40
.text:000000000000D940 var_3C          = -0x3C
.text:000000000000D940 var_38          = -0x38
.text:000000000000D940 var_30          = -0x30
.text:000000000000D940 var_20          = -0x20
.text:000000000000D940 var_10          = -0x10
.text:000000000000D940 var_s0          =  0
.text:000000000000D940 ; __unwind {
.text:000000000000D940                 SUB             SP, SP, #0x50
.text:000000000000D944                 STR             X23, [SP,#0x40+var_30]
.text:000000000000D948                 STP             X22, X21, [SP,#0x40+var_20]
.text:000000000000D94C                 STP             X20, X19, [SP,#0x40+var_10]
.text:000000000000D950                 STP             X29, X30, [SP,#0x40+var_s0]
.text:000000000000D954                 ADD             X29, SP, #0x40
.text:000000000000D958                 MRS             X23, #3, c13, c0, #2
.text:000000000000D95C                 MOV             X21, X1
.text:000000000000D960                 LDR             X8, [X23,#0x28]
.text:000000000000D964                 ADD             X1, SP, #0x40+var_3C ; int *
.text:000000000000D968                 MOV             X19, X3
.text:000000000000D96C                 MOV             X22, X2
.text:000000000000D970                 STR             X8, [SP,#0x40+var_38]
.text:000000000000D974                 LDR             X20, [X0,#8]
.text:000000000000D978                 MOV             X0, X20 ; this
.text:000000000000D97C                 BL              ._ZNK7android6Parcel9readInt32EPi ; android::Parcel::readInt32(int *)
.text:000000000000D980                 CBZ             W0, loc_D98C
.text:000000000000D984 loc_D984                                ; CODE XREF: AParcel_readBoolArray+88↓j
.text:000000000000D984                 BL              sub_E118
.text:000000000000D988                 B               loc_DA00
.text:000000000000D98C ; ---------------------------------------------------------------------------
.text:000000000000D98C loc_D98C                                ; CODE XREF: AParcel_readBoolArray+40↑j
.text:000000000000D98C                 LDR             W1, [SP,#0x40+var_3C]
.text:000000000000D990                 CMN             W1, #1
.text:000000000000D994                 B.GE            loc_D9A0
.text:000000000000D998                 MOV             W0, #0xFFFFFFEA
.text:000000000000D99C                 B               loc_DA00
.text:000000000000D9A0 ; ---------------------------------------------------------------------------
.text:000000000000D9A0 loc_D9A0                                ; CODE XREF: AParcel_readBoolArray+54↑j
.text:000000000000D9A0                 MOV             X0, X21
.text:000000000000D9A4                 BLR             X22
.text:000000000000D9A8                 TBZ             W0, #0, loc_D9F4
.text:000000000000D9AC                 LDR             W8, [SP,#0x40+var_3C]
.text:000000000000D9B0                 CMP             W8, #1
.text:000000000000D9B4                 B.LT            loc_D9FC
.text:000000000000D9B8                 MOV             X22, XZR
.text:000000000000D9BC loc_D9BC                                ; CODE XREF: AParcel_readBoolArray+AC↓j
.text:000000000000D9BC                 MOV             X1, SP  ; bool *
.text:000000000000D9C0                 MOV             X0, X20 ; this
.text:000000000000D9C4                 BL              ._ZNK7android6Parcel8readBoolEPb ; android::Parcel::readBool(bool *)
.text:000000000000D9C8                 CBNZ            W0, loc_D984
.text:000000000000D9CC                 LDRB            W2, [SP,#0x40+var_40]
.text:000000000000D9D0                 MOV             X0, X21
.text:000000000000D9D4                 MOV             X1, X22
.text:000000000000D9D8                 BLR             X19
.text:000000000000D9DC                 LDRSW           X8, [SP,#0x40+var_3C]
.text:000000000000D9E0                 MOV             W0, WZR
.text:000000000000D9E4                 ADD             X22, X22, #1
.text:000000000000D9E8                 CMP             X22, X8
.text:000000000000D9EC                 B.LT            loc_D9BC
.text:000000000000D9F0                 B               loc_DA00
.text:000000000000D9F4 ; ---------------------------------------------------------------------------
.text:000000000000D9F4 loc_D9F4                                ; CODE XREF: AParcel_readBoolArray+68↑j
.text:000000000000D9F4                 MOV             W0, #0xFFFFFFF4
.text:000000000000D9F8                 B               loc_DA00
.text:000000000000D9FC ; ---------------------------------------------------------------------------
.text:000000000000D9FC loc_D9FC                                ; CODE XREF: AParcel_readBoolArray+74↑j
.text:000000000000D9FC                 MOV             W0, WZR
.text:000000000000DA00 loc_DA00                                ; CODE XREF: AParcel_readBoolArray+48↑j
.text:000000000000DA00                                         ; AParcel_readBoolArray+5C↑j ...
.text:000000000000DA00                 LDR             X8, [X23,#0x28]
.text:000000000000DA04                 LDR             X9, [SP,#0x40+var_38]
.text:000000000000DA08                 CMP             X8, X9
.text:000000000000DA0C                 B.NE            loc_DA28
.text:000000000000DA10                 LDP             X29, X30, [SP,#0x40+var_s0]
.text:000000000000DA14                 LDP             X20, X19, [SP,#0x40+var_10]
.text:000000000000DA18                 LDP             X22, X21, [SP,#0x40+var_20]
.text:000000000000DA1C                 LDR             X23, [SP,#0x40+var_30]
.text:000000000000DA20                 ADD             SP, SP, #0x50 ; 'P'
.text:000000000000DA24                 RET
.text:000000000000DA28 ; ---------------------------------------------------------------------------
.text:000000000000DA28 loc_DA28                                ; CODE XREF: AParcel_readBoolArray+CC↑j
.text:000000000000DA28                 BL              .__stack_chk_fail
.text:000000000000DA28 ; } // starts at D940
.text:000000000000DA28 ; End of function AParcel_readBoolArray
.text:000000000000DA28 ; ---------------------------------------------------------------------------
.text:000000000000DA2C                 ALIGN 0x10
.text:000000000000DA30 ; [00000004 BYTES: COLLAPSED FUNCTION AParcel_readCharArray. PRESS CTRL-NUMPAD+ TO EXPAND]
.text:000000000000DA34                 ALIGN 8
.text:000000000000DA38 ; =============== S U B R O U T I N E =======================================
.text:000000000000DA38                 EXPORT AParcel_readByteArray
.text:000000000000DA38 AParcel_readByteArray                   ; DATA XREF: LOAD:00000000000014B8↑o
.text:000000000000DA38 dest            = -0x48
.text:000000000000DA38 var_3C          = -0x3C
.text:000000000000DA38 var_30          = -0x30
.text:000000000000DA38 var_20          = -0x20
.text:000000000000DA38 var_10          = -0x10
.text:000000000000DA38 ; __unwind {
.text:000000000000DA38                 B               loc_DA40
.text:000000000000DA38 ; } // starts at DA38
.text:000000000000DA38 ; ---------------------------------------------------------------------------
.text:000000000000DA3C                 ALIGN 0x20
.text:000000000000DA40 loc_DA40                                ; CODE XREF: AParcel_readByteArray↑j
.text:000000000000DA40 ; __unwind {
.text:000000000000DA40                 SUB             SP, SP, #0x50 ; 'P'
.text:000000000000DA44                 STP             X22, X21, [SP,#0x50+var_30]
.text:000000000000DA48                 STP             X20, X19, [SP,#0x50+var_20]
.text:000000000000DA4C                 STP             X29, X30, [SP,#0x50+var_10]
.text:000000000000DA50                 ADD             X29, SP, #0x50+var_10
.text:000000000000DA54                 MRS             X22, #3, c13, c0, #2
.text:000000000000DA58                 MOV             X21, X1
.text:000000000000DA5C                 LDR             X8, [X22,#0x28]
.text:000000000000DA60                 ADD             X1, SP, #0x50+var_3C ; int *
.text:000000000000DA64                 MOV             X20, X2
.text:000000000000DA68                 STR             X8, [SP,#0x50+var_3C+4]
.text:000000000000DA6C                 LDR             X19, [X0,#8]
.text:000000000000DA70                 MOV             X0, X19 ; this
.text:000000000000DA74                 BL              ._ZNK7android6Parcel9readInt32EPi ; android::Parcel::readInt32(int *)
.text:000000000000DA78                 CBZ             W0, loc_DA84
.text:000000000000DA7C                 BL              sub_E118
.text:000000000000DA80                 B               loc_DAE8
.text:000000000000DA84 ; ---------------------------------------------------------------------------
.text:000000000000DA84 loc_DA84                                ; CODE XREF: AParcel_readByteArray+40↑j
.text:000000000000DA84                 LDR             W1, [SP,#0x50+var_3C]
.text:000000000000DA88                 CMN             W1, #1
.text:000000000000DA8C                 B.GE            loc_DA98
.text:000000000000DA90                 MOV             W0, #0xFFFFFFEA
.text:000000000000DA94                 B               loc_DAE8
.text:000000000000DA98 ; ---------------------------------------------------------------------------
.text:000000000000DA98 loc_DA98                                ; CODE XREF: AParcel_readByteArray+54↑j
.text:000000000000DA98                 ADD             X2, SP, #0x50+dest
.text:000000000000DA9C                 MOV             X0, X21
.text:000000000000DAA0                 BLR             X20
.text:000000000000DAA4                 TBZ             W0, #0, loc_DAE4
.text:000000000000DAA8                 LDRSW           X20, [SP,#0x50+var_3C]
.text:000000000000DAAC                 CMP             W20, #1
.text:000000000000DAB0                 B.LT            loc_DADC
.text:000000000000DAB4                 LDR             X8, [SP,#0x50+dest]
.text:000000000000DAB8                 CBZ             X8, loc_DAE4
.text:000000000000DABC                 MOV             X0, X19 ; this
.text:000000000000DAC0                 MOV             X1, X20 ; unsigned __int64
.text:000000000000DAC4                 BL              ._ZNK7android6Parcel11readInplaceEm ; android::Parcel::readInplace(ulong)
.text:000000000000DAC8                 CBZ             X0, loc_DAE4
.text:000000000000DACC                 MOV             X1, X0  ; src
.text:000000000000DAD0                 LDR             X0, [SP,#0x50+dest] ; dest
.text:000000000000DAD4                 MOV             X2, X20 ; n
.text:000000000000DAD8                 BL              .memcpy
.text:000000000000DADC loc_DADC                                ; CODE XREF: AParcel_readByteArray+78↑j
.text:000000000000DADC                 MOV             W0, WZR
.text:000000000000DAE0                 B               loc_DAE8
.text:000000000000DAE4 ; ---------------------------------------------------------------------------
.text:000000000000DAE4 loc_DAE4                                ; CODE XREF: AParcel_readByteArray+6C↑j
.text:000000000000DAE4                                         ; AParcel_readByteArray+80↑j ...
.text:000000000000DAE4                 MOV             W0, #0xFFFFFFF4
.text:000000000000DAE8 loc_DAE8                                ; CODE XREF: AParcel_readByteArray+48↑j
.text:000000000000DAE8                                         ; AParcel_readByteArray+5C↑j ...
.text:000000000000DAE8                 LDR             X8, [X22,#0x28]
.text:000000000000DAEC                 LDR             X9, [SP,#0x50+var_3C+4]
.text:000000000000DAF0                 CMP             X8, X9
.text:000000000000DAF4                 B.NE            loc_DB0C
.text:000000000000DAF8                 LDP             X29, X30, [SP,#0x50+var_10]
.text:000000000000DAFC                 LDP             X20, X19, [SP,#0x50+var_20]
.text:000000000000DB00                 LDP             X22, X21, [SP,#0x50+var_30]
.text:000000000000DB04                 ADD             SP, SP, #0x50 ; 'P'
.text:000000000000DB08                 RET
.text:000000000000DB0C ; ---------------------------------------------------------------------------
.text:000000000000DB0C loc_DB0C                                ; CODE XREF: AParcel_readByteArray+BC↑j
.text:000000000000DB0C                 BL              .__stack_chk_fail
.text:000000000000DB0C ; } // starts at DA40
.text:000000000000DB0C ; End of function AParcel_readByteArray
.text:000000000000DB10 ; =============== S U B R O U T I N E =======================================
.text:000000000000DB10 ; Attributes: bp-based frame
.text:000000000000DB10 sub_DB10                                ; CODE XREF: AParcel_writeParcelFileDescriptor+40↑p
.text:000000000000DB10                                         ; AParcel_writeParcelFileDescriptor+120↑p ...
.text:000000000000DB10 var_30          = -0x30
.text:000000000000DB10 var_20          = -0x20
.text:000000000000DB10 var_10          = -0x10
.text:000000000000DB10 var_s0          =  0
.text:000000000000DB10 ; __unwind {
.text:000000000000DB10                 STP             X24, X23, [SP,#-0x10+var_30]!
.text:000000000000DB14                 STP             X22, X21, [SP,#0x30+var_20]
.text:000000000000DB18                 STP             X20, X19, [SP,#0x30+var_10]
.text:000000000000DB1C                 STP             X29, X30, [SP,#0x30+var_s0]
.text:000000000000DB20                 ADD             X29, SP, #0x30
.text:000000000000DB24                 MOV             X22, X2
.text:000000000000DB28                 MOV             W20, W1
.text:000000000000DB2C                 MOV             X21, X0
.text:000000000000DB30                 BL              .__errno
.text:000000000000DB34                 LDR             W23, [X21]
.text:000000000000DB38                 MOV             X19, X0
.text:000000000000DB3C                 LDR             W24, [X0]
.text:000000000000DB40                 CMN             W23, #1
.text:000000000000DB44                 B.EQ            loc_DB78
.text:000000000000DB48                 ADRP            X8, #android_fdsan_close_with_tag_ptr@PAGE
.text:000000000000DB4C                 LDR             X8, [X8,#android_fdsan_close_with_tag_ptr@PAGEOFF]
.text:000000000000DB50                 CBZ             X8, loc_DB70
.text:000000000000DB54                 MOV             W0, #3
.text:000000000000DB58                 MOV             X1, X21
.text:000000000000DB5C                 BL              .android_fdsan_create_owner_tag
.text:000000000000DB60                 MOV             X1, X0
.text:000000000000DB64                 MOV             W0, W23
.text:000000000000DB68                 BL              .android_fdsan_close_with_tag
.text:000000000000DB6C                 B               loc_DB78
.text:000000000000DB70 ; ---------------------------------------------------------------------------
.text:000000000000DB70 loc_DB70                                ; CODE XREF: sub_DB10+40↑j
.text:000000000000DB70                 MOV             W0, W23 ; fd
.text:000000000000DB74                 BL              .close
.text:000000000000DB78 loc_DB78                                ; CODE XREF: sub_DB10+34↑j
.text:000000000000DB78                                         ; sub_DB10+5C↑j
.text:000000000000DB78                 CMN             W20, #1
.text:000000000000DB7C                 STR             W20, [X21]
.text:000000000000DB80                 B.EQ            loc_DBBC
.text:000000000000DB84                 ADRP            X8, #android_fdsan_exchange_owner_tag_ptr@PAGE
.text:000000000000DB88                 LDR             X8, [X8,#android_fdsan_exchange_owner_tag_ptr@PAGEOFF]
.text:000000000000DB8C                 CBZ             X8, loc_DBBC
.text:000000000000DB90                 MOV             W0, #3
.text:000000000000DB94                 MOV             X1, X22
.text:000000000000DB98                 BL              .android_fdsan_create_owner_tag
.text:000000000000DB9C                 MOV             X22, X0
.text:000000000000DBA0                 MOV             W0, #3
.text:000000000000DBA4                 MOV             X1, X21
.text:000000000000DBA8                 BL              .android_fdsan_create_owner_tag
.text:000000000000DBAC                 MOV             X2, X0
.text:000000000000DBB0                 MOV             W0, W20
.text:000000000000DBB4                 MOV             X1, X22
.text:000000000000DBB8                 BL              .android_fdsan_exchange_owner_tag
.text:000000000000DBBC loc_DBBC                                ; CODE XREF: sub_DB10+70↑j
.text:000000000000DBBC                                         ; sub_DB10+7C↑j
.text:000000000000DBBC                 STR             W24, [X19]
.text:000000000000DBC0                 LDP             X29, X30, [SP,#0x30+var_s0]
.text:000000000000DBC4                 LDP             X20, X19, [SP,#0x30+var_10]
.text:000000000000DBC8                 LDP             X22, X21, [SP,#0x30+var_20]
.text:000000000000DBCC                 LDP             X24, X23, [SP+0x30+var_30],#0x40
.text:000000000000DBD0                 RET
.text:000000000000DBD0 ; } // starts at DB10
.text:000000000000DBD0 ; End of function sub_DB10
.text:000000000000DBD0 ; ---------------------------------------------------------------------------
.text:000000000000DBD4                 ALIGN 8
.text:000000000000DBD8 ; =============== S U B R O U T I N E =======================================
.text:000000000000DBD8 ; Attributes: bp-based frame
.text:000000000000DBD8                 EXPORT ABinderProcess_startThreadPool
.text:000000000000DBD8 ABinderProcess_startThreadPool          ; DATA XREF: LOAD:00000000000014E8↑o
.text:000000000000DBD8 var_20          = -0x20
.text:000000000000DBD8 var_18          = -0x18
.text:000000000000DBD8 var_10          = -0x10
.text:000000000000DBD8 var_s0          =  0
.text:000000000000DBD8 ; __unwind {
.text:000000000000DBD8                 SUB             SP, SP, #0x30
.text:000000000000DBDC                 STR             X19, [SP,#0x20+var_10]
.text:000000000000DBE0                 STP             X29, X30, [SP,#0x20+var_s0]
.text:000000000000DBE4                 ADD             X29, SP, #0x20
.text:000000000000DBE8                 MRS             X19, #3, c13, c0, #2
.text:000000000000DBEC                 LDR             X8, [X19,#0x28]
.text:000000000000DBF0                 STR             X8, [SP,#0x20+var_18]
.text:000000000000DBF4                 MOV             X8, SP
.text:000000000000DBF8                 BL              ._ZN7android12ProcessState4selfEv ; android::ProcessState::self(void)
.text:000000000000DBFC                 LDR             X0, [SP,#0x20+var_20] ; this
.text:000000000000DC00                 BL              ._ZN7android12ProcessState15startThreadPoolEv ; android::ProcessState::startThreadPool(void)
.text:000000000000DC04                 LDR             X8, [SP,#0x20+var_20]
.text:000000000000DC08                 CBZ             X8, loc_DC20
.text:000000000000DC0C                 LDR             X9, [X8]
.text:000000000000DC10                 MOV             X1, SP  ; void *
.text:000000000000DC14                 LDUR            X9, [X9,#-0x18]
.text:000000000000DC18                 ADD             X0, X8, X9 ; this
.text:000000000000DC1C                 BL              ._ZNK7android7RefBase9decStrongEPKv ; android::RefBase::decStrong(void const*)
.text:000000000000DC20 loc_DC20                                ; CODE XREF: ABinderProcess_startThreadPool+30↑j
.text:000000000000DC20                 MOV             X8, SP
.text:000000000000DC24                 BL              ._ZN7android12ProcessState4selfEv ; android::ProcessState::self(void)
.text:000000000000DC28                 LDR             X0, [SP,#0x20+var_20] ; this
.text:000000000000DC2C                 BL              ._ZN7android12ProcessState18giveThreadPoolNameEv ; android::ProcessState::giveThreadPoolName(void)
.text:000000000000DC30                 LDR             X8, [SP,#0x20+var_20]
.text:000000000000DC34                 CBZ             X8, loc_DC4C
.text:000000000000DC38                 LDR             X9, [X8]
.text:000000000000DC3C                 MOV             X1, SP  ; void *
.text:000000000000DC40                 LDUR            X9, [X9,#-0x18]
.text:000000000000DC44                 ADD             X0, X8, X9 ; this
.text:000000000000DC48                 BL              ._ZNK7android7RefBase9decStrongEPKv ; android::RefBase::decStrong(void const*)
.text:000000000000DC4C loc_DC4C                                ; CODE XREF: ABinderProcess_startThreadPool+5C↑j
.text:000000000000DC4C                 LDR             X8, [X19,#0x28]
.text:000000000000DC50                 LDR             X9, [SP,#0x20+var_18]
.text:000000000000DC54                 CMP             X8, X9
.text:000000000000DC58                 B.NE            loc_DC6C
.text:000000000000DC5C                 LDP             X29, X30, [SP,#0x20+var_s0]
.text:000000000000DC60                 LDR             X19, [SP,#0x20+var_10]
.text:000000000000DC64                 ADD             SP, SP, #0x30 ; '0'
.text:000000000000DC68                 RET
.text:000000000000DC6C ; ---------------------------------------------------------------------------
.text:000000000000DC6C loc_DC6C                                ; CODE XREF: ABinderProcess_startThreadPool+80↑j
.text:000000000000DC6C                 BL              .__stack_chk_fail
.text:000000000000DC6C ; } // starts at DBD8
.text:000000000000DC6C ; End of function ABinderProcess_startThreadPool
.text:000000000000DC70 ; =============== S U B R O U T I N E =======================================
.text:000000000000DC70 ; Attributes: bp-based frame
.text:000000000000DC70                 EXPORT ABinderProcess_setThreadPoolMaxThreadCount
.text:000000000000DC70 ABinderProcess_setThreadPoolMaxThreadCount
.text:000000000000DC70                                         ; DATA XREF: LOAD:0000000000001260↑o
.text:000000000000DC70 var_20          = -0x20
.text:000000000000DC70 var_18          = -0x18
.text:000000000000DC70 var_10          = -0x10
.text:000000000000DC70 var_s0          =  0
.text:000000000000DC70 ; __unwind {
.text:000000000000DC70                 SUB             SP, SP, #0x30
.text:000000000000DC74                 STP             X20, X19, [SP,#0x20+var_10]
.text:000000000000DC78                 STP             X29, X30, [SP,#0x20+var_s0]
.text:000000000000DC7C                 ADD             X29, SP, #0x20
.text:000000000000DC80                 MRS             X20, #3, c13, c0, #2
.text:000000000000DC84                 MOV             W19, W0
.text:000000000000DC88                 LDR             X8, [X20,#0x28]
.text:000000000000DC8C                 STR             X8, [SP,#0x20+var_18]
.text:000000000000DC90                 MOV             X8, SP
.text:000000000000DC94                 BL              ._ZN7android12ProcessState4selfEv ; android::ProcessState::self(void)
.text:000000000000DC98                 LDR             X0, [SP,#0x20+var_20] ; this
.text:000000000000DC9C                 MOV             W1, W19 ; unsigned __int64
.text:000000000000DCA0                 BL              ._ZN7android12ProcessState27setThreadPoolMaxThreadCountEm ; android::ProcessState::setThreadPoolMaxThreadCount(ulong)
.text:000000000000DCA4                 LDR             X8, [SP,#0x20+var_20]
.text:000000000000DCA8                 MOV             W19, W0
.text:000000000000DCAC                 CBZ             X8, loc_DCC4
.text:000000000000DCB0                 LDR             X9, [X8]
.text:000000000000DCB4                 MOV             X1, SP  ; void *
.text:000000000000DCB8                 LDUR            X9, [X9,#-0x18]
.text:000000000000DCBC                 ADD             X0, X8, X9 ; this
.text:000000000000DCC0                 BL              ._ZNK7android7RefBase9decStrongEPKv ; android::RefBase::decStrong(void const*)
.text:000000000000DCC4 loc_DCC4                                ; CODE XREF: ABinderProcess_setThreadPoolMaxThreadCount+3C↑j
.text:000000000000DCC4                 LDR             X8, [X20,#0x28]
.text:000000000000DCC8                 CMP             W19, #0
.text:000000000000DCCC                 LDR             X9, [SP,#0x20+var_18]
.text:000000000000DCD0                 CSET            W0, EQ
.text:000000000000DCD4                 CMP             X8, X9
.text:000000000000DCD8                 B.NE            loc_DCEC
.text:000000000000DCDC                 LDP             X29, X30, [SP,#0x20+var_s0]
.text:000000000000DCE0                 LDP             X20, X19, [SP,#0x20+var_10]
.text:000000000000DCE4                 ADD             SP, SP, #0x30 ; '0'
.text:000000000000DCE8                 RET
.text:000000000000DCEC ; ---------------------------------------------------------------------------
.text:000000000000DCEC loc_DCEC                                ; CODE XREF: ABinderProcess_setThreadPoolMaxThreadCount+68↑j
.text:000000000000DCEC                 BL              .__stack_chk_fail
.text:000000000000DCEC ; } // starts at DC70
.text:000000000000DCEC ; End of function ABinderProcess_setThreadPoolMaxThreadCount
.text:000000000000DCF0 ; =============== S U B R O U T I N E =======================================
.text:000000000000DCF0 ; Attributes: bp-based frame
.text:000000000000DCF0                 EXPORT ABinderProcess_joinThreadPool
.text:000000000000DCF0 ABinderProcess_joinThreadPool           ; DATA XREF: LOAD:00000000000012D8↑o
.text:000000000000DCF0 var_s0          =  0
.text:000000000000DCF0 ; __unwind {
.text:000000000000DCF0                 STP             X29, X30, [SP,#-0x10+var_s0]!
.text:000000000000DCF4                 MOV             X29, SP
.text:000000000000DCF8                 BL              ._ZN7android14IPCThreadState4selfEv ; android::IPCThreadState::self(void)
.text:000000000000DCFC                 MOV             W1, #1  ; bool
.text:000000000000DD00                 LDP             X29, X30, [SP+var_s0],#0x10
.text:000000000000DD04                 B               ._ZN7android14IPCThreadState14joinThreadPoolEb ; android::IPCThreadState::joinThreadPool(bool)
.text:000000000000DD04 ; } // starts at DCF0
.text:000000000000DD04 ; End of function ABinderProcess_joinThreadPool
.text:000000000000DD08 ; =============== S U B R O U T I N E =======================================
.text:000000000000DD08 ; Attributes: bp-based frame
.text:000000000000DD08                 EXPORT AStatus_newOk
.text:000000000000DD08 AStatus_newOk                           ; DATA XREF: LOAD:0000000000001518↑o
.text:000000000000DD08 var_10          = -0x10
.text:000000000000DD08 var_s0          =  0
.text:000000000000DD08 ; __unwind {
.text:000000000000DD08                 STR             X19, [SP,#-0x10+var_10]!
.text:000000000000DD0C                 STP             X29, X30, [SP,#0x10+var_s0]
.text:000000000000DD10                 ADD             X29, SP, #0x10
.text:000000000000DD14                 MOV             W0, #0x10 ; unsigned __int64
.text:000000000000DD18                 BL              ._Znwm  ; operator new(ulong)
.text:000000000000DD1C                 MOV             X19, X0
.text:000000000000DD20                 ADD             X0, X0, #8 ; this
.text:000000000000DD24                 STR             XZR, [X19]
.text:000000000000DD28                 BL              ._ZN7android7String8C1Ev ; android::String8::String8(void)
.text:000000000000DD2C                 LDP             X29, X30, [SP,#0x10+var_s0]
.text:000000000000DD30                 MOV             X0, X19
.text:000000000000DD34                 LDR             X19, [SP+0x10+var_10],#0x20
.text:000000000000DD38                 RET
.text:000000000000DD38 ; } // starts at DD08
.text:000000000000DD38 ; End of function AStatus_newOk
.text:000000000000DD38 ; ---------------------------------------------------------------------------
.text:000000000000DD3C                 ALIGN 0x20
.text:000000000000DD40 ; =============== S U B R O U T I N E =======================================
.text:000000000000DD40 ; Attributes: bp-based frame
.text:000000000000DD40                 EXPORT AStatus_fromExceptionCode
.text:000000000000DD40 AStatus_fromExceptionCode               ; DATA XREF: LOAD:0000000000001A40↑o
.text:000000000000DD40 var_38          = -0x38
.text:000000000000DD40 var_28          = -0x28
.text:000000000000DD40 var_20          = -0x20
.text:000000000000DD40 var_10          = -0x10
.text:000000000000DD40 var_s0          =  0
.text:000000000000DD40 ; __unwind {
.text:000000000000DD40                 SUB             SP, SP, #0x50
.text:000000000000DD44                 STR             X21, [SP,#0x40+var_20]
.text:000000000000DD48                 STP             X20, X19, [SP,#0x40+var_10]
.text:000000000000DD4C                 STP             X29, X30, [SP,#0x40+var_s0]
.text:000000000000DD50                 ADD             X29, SP, #0x40
.text:000000000000DD54                 MRS             X21, #3, c13, c0, #2
.text:000000000000DD58                 MOV             W20, W0
.text:000000000000DD5C                 LDR             X8, [X21,#0x28]
.text:000000000000DD60                 MOV             W0, #0x10 ; unsigned __int64
.text:000000000000DD64                 STR             X8, [SP,#0x40+var_28]
.text:000000000000DD68                 BL              ._Znwm  ; operator new(ulong)
.text:000000000000DD6C                 MOV             X19, X0
.text:000000000000DD70                 MOV             W0, W20 ; this
.text:000000000000DD74                 BL              sub_DDD0
.text:000000000000DD78                 ADD             X8, SP, #0x40+var_38
.text:000000000000DD7C                 ADD             X20, SP, #0x40+var_38
.text:000000000000DD80                 BL              ._ZN7android6binder6Status17fromExceptionCodeEi ; android::binder::Status::fromExceptionCode(int)
.text:000000000000DD84                 LDR             X8, [SP,#0x40+var_38]
.text:000000000000DD88                 ADD             X20, X20, #8
.text:000000000000DD8C                 MOV             X0, X19
.text:000000000000DD90                 MOV             X1, X20 ; android::String8 *
.text:000000000000DD94                 STR             X8, [X0],#8 ; this
.text:000000000000DD98                 BL              ._ZN7android7String8C1ERKS0_ ; android::String8::String8(android::String8 const&)
.text:000000000000DD9C                 MOV             X0, X20 ; this
.text:000000000000DDA0                 BL              ._ZN7android7String8D1Ev ; android::String8::~String8()
.text:000000000000DDA4                 LDR             X8, [X21,#0x28]
.text:000000000000DDA8                 LDR             X9, [SP,#0x40+var_28]
.text:000000000000DDAC                 CMP             X8, X9
.text:000000000000DDB0                 B.NE            loc_DDCC
.text:000000000000DDB4                 MOV             X0, X19
.text:000000000000DDB8                 LDR             X21, [SP,#0x40+var_20]
.text:000000000000DDBC                 LDP             X29, X30, [SP,#0x40+var_s0]
.text:000000000000DDC0                 LDP             X20, X19, [SP,#0x40+var_10]
.text:000000000000DDC4                 ADD             SP, SP, #0x50 ; 'P'
.text:000000000000DDC8                 RET
.text:000000000000DDCC ; ---------------------------------------------------------------------------
.text:000000000000DDCC loc_DDCC                                ; CODE XREF: AStatus_fromExceptionCode+70↑j
.text:000000000000DDCC                 BL              .__stack_chk_fail
.text:000000000000DDCC ; } // starts at DD40
.text:000000000000DDCC ; End of function AStatus_fromExceptionCode
.text:000000000000DDD0 ; =============== S U B R O U T I N E =======================================
.text:000000000000DDD0 ; Attributes: bp-based frame
.text:000000000000DDD0 ; __int64 __fastcall sub_DDD0(android::base *this)
.text:000000000000DDD0 sub_DDD0                                ; CODE XREF: AStatus_fromExceptionCode+34↑p
.text:000000000000DDD0                                         ; AStatus_fromExceptionCodeWithMessage+38↓p ...
.text:000000000000DDD0 var_38          = -0x38
.text:000000000000DDD0 var_30          = -0x30
.text:000000000000DDD0 var_28          = -0x28
.text:000000000000DDD0 var_20          = -0x20
.text:000000000000DDD0 var_10          = -0x10
.text:000000000000DDD0 var_s0          =  0
.text:000000000000DDD0 ; __unwind {
.text:000000000000DDD0                 SUB             SP, SP, #0x50
.text:000000000000DDD4                 STR             X21, [SP,#0x40+var_20]
.text:000000000000DDD8                 STP             X20, X19, [SP,#0x40+var_10]
.text:000000000000DDDC                 STP             X29, X30, [SP,#0x40+var_s0]
.text:000000000000DDE0                 ADD             X29, SP, #0x40
.text:000000000000DDE4                 MRS             X20, #3, c13, c0, #2
.text:000000000000DDE8                 MOV             W19, W0
.text:000000000000DDEC                 LDR             X8, [X20,#0x28]
.text:000000000000DDF0                 ADD             W9, W0, #9
.text:000000000000DDF4                 CMP             W9, #0xA
.text:000000000000DDF8                 STR             X8, [SP,#0x40+var_28]
.text:000000000000DDFC                 B.CS            loc_DE28
.text:000000000000DE00 loc_DE00                                ; CODE XREF: sub_DDD0+5C↓j
.text:000000000000DE00                                         ; sub_DDD0+70↓j ...
.text:000000000000DE00                 LDR             X8, [X20,#0x28]
.text:000000000000DE04                 LDR             X9, [SP,#0x40+var_28]
.text:000000000000DE08                 CMP             X8, X9
.text:000000000000DE0C                 B.NE            loc_DEC0
.text:000000000000DE10                 MOV             W0, W19 ; this
.text:000000000000DE14                 LDR             X21, [SP,#0x40+var_20]
.text:000000000000DE18                 LDP             X29, X30, [SP,#0x40+var_s0]
.text:000000000000DE1C                 LDP             X20, X19, [SP,#0x40+var_10]
.text:000000000000DE20                 ADD             SP, SP, #0x50 ; 'P'
.text:000000000000DE24                 RET
.text:000000000000DE28 ; ---------------------------------------------------------------------------
.text:000000000000DE28 loc_DE28                                ; CODE XREF: sub_DDD0+2C↑j
.text:000000000000DE28                 CMN             W19, #0x81
.text:000000000000DE2C                 B.EQ            loc_DE00
.text:000000000000DE30                 BL              ._ZN7android4base21GetMinimumLogSeverityEv ; android::base::GetMinimumLogSeverity(void)
.text:000000000000DE34                 CMP             W0, #3
.text:000000000000DE38                 B.LE            loc_DE44
.text:000000000000DE3C                 MOV             W19, #0xFFFFFF7F
.text:000000000000DE40                 B               loc_DE00
.text:000000000000DE44 ; ---------------------------------------------------------------------------
.text:000000000000DE44 loc_DE44                                ; CODE XREF: sub_DDD0+68↑j
.text:000000000000DE44                 BL              .__errno
.text:000000000000DE48                 ADRP            X1, #aFrameworksNati_1@PAGE ; "frameworks/native/libs/binder/ndk/statu"...
.text:000000000000DE4C                 STR             X20, [SP,#0x40+var_38]
.text:000000000000DE50                 MOV             X20, X0
.text:000000000000DE54                 LDR             W21, [X0]
.text:000000000000DE58                 ADD             X1, X1, #aFrameworksNati_1@PAGEOFF ; "frameworks/native/libs/binder/ndk/statu"...
.text:000000000000DE5C                 MOV             W2, #0x93
.text:000000000000DE60                 MOV             W6, #0xFFFFFFFF
.text:000000000000DE64                 ADD             X0, SP, #0x40+var_30
.text:000000000000DE68                 MOV             W3, WZR
.text:000000000000DE6C                 MOV             W4, #3
.text:000000000000DE70                 MOV             X5, XZR
.text:000000000000DE74                 BL              ._ZN7android4base10LogMessageC1EPKcjNS0_5LogIdENS0_11LogSeverityES3_i ; android::base::LogMessage::LogMessage(char const*,uint,android::base::LogId,android::base::LogSeverity,char const*,int)
.text:000000000000DE78                 ADD             X0, SP, #0x40+var_30 ; this
.text:000000000000DE7C                 BL              ._ZN7android4base10LogMessage6streamEv ; android::base::LogMessage::stream(void)
.text:000000000000DE80                 ADRP            X1, #aPruneexception@PAGE ; "PruneException"
.text:000000000000DE84                 ADD             X1, X1, #aPruneexception@PAGEOFF ; "PruneException"
.text:000000000000DE88                 MOV             W2, #0xE
.text:000000000000DE8C                 BL              sub_B548
.text:000000000000DE90                 ADRP            X1, #aUnknownStatusT@PAGE ; ": Unknown status_t pruned into EX_TRANS"...
.text:000000000000DE94                 ADD             X1, X1, #aUnknownStatusT@PAGEOFF ; ": Unknown status_t pruned into EX_TRANS"...
.text:000000000000DE98                 MOV             W2, #0x36 ; '6'
.text:000000000000DE9C                 BL              sub_B548
.text:000000000000DEA0                 MOV             W1, W19
.text:000000000000DEA4                 BL              ._ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEi ; std::__1::basic_ostream<char,std::__1::char_traits<char>>::operator<<(int)
.text:000000000000DEA8                 ADD             X0, SP, #0x40+var_30 ; this
.text:000000000000DEAC                 BL              ._ZN7android4base10LogMessageD1Ev ; android::base::LogMessage::~LogMessage()
.text:000000000000DEB0                 STR             W21, [X20]
.text:000000000000DEB4                 MOV             W19, #0xFFFFFF7F
.text:000000000000DEB8                 LDR             X20, [SP,#0x40+var_38]
.text:000000000000DEBC                 B               loc_DE00
.text:000000000000DEC0 ; ---------------------------------------------------------------------------
.text:000000000000DEC0 loc_DEC0                                ; CODE XREF: sub_DDD0+3C↑j
.text:000000000000DEC0                 BL              .__stack_chk_fail
.text:000000000000DEC0 ; } // starts at DDD0
.text:000000000000DEC0 ; End of function sub_DDD0
.text:000000000000DEC0 ; ---------------------------------------------------------------------------
.text:000000000000DEC4                 ALIGN 8
.text:000000000000DEC8 ; =============== S U B R O U T I N E =======================================
.text:000000000000DEC8 ; Attributes: bp-based frame
.text:000000000000DEC8                 EXPORT AStatus_fromExceptionCodeWithMessage
.text:000000000000DEC8 AStatus_fromExceptionCodeWithMessage    ; DATA XREF: LOAD:0000000000001488↑o
.text:000000000000DEC8 var_38          = -0x38
.text:000000000000DEC8 var_28          = -0x28
.text:000000000000DEC8 var_20          = -0x20
.text:000000000000DEC8 var_10          = -0x10
.text:000000000000DEC8 var_s0          =  0
.text:000000000000DEC8 ; __unwind {
.text:000000000000DEC8                 SUB             SP, SP, #0x50
.text:000000000000DECC                 STP             X22, X21, [SP,#0x40+var_20]
.text:000000000000DED0                 STP             X20, X19, [SP,#0x40+var_10]
.text:000000000000DED4                 STP             X29, X30, [SP,#0x40+var_s0]
.text:000000000000DED8                 ADD             X29, SP, #0x40
.text:000000000000DEDC                 MRS             X22, #3, c13, c0, #2
.text:000000000000DEE0                 MOV             W21, W0
.text:000000000000DEE4                 LDR             X8, [X22,#0x28]
.text:000000000000DEE8                 MOV             W0, #0x10 ; unsigned __int64
.text:000000000000DEEC                 MOV             X20, X1
.text:000000000000DEF0                 STR             X8, [SP,#0x40+var_28]
.text:000000000000DEF4                 BL              ._Znwm  ; operator new(ulong)
.text:000000000000DEF8                 MOV             X19, X0
.text:000000000000DEFC                 MOV             W0, W21 ; this
.text:000000000000DF00                 BL              sub_DDD0
.text:000000000000DF04                 ADD             X8, SP, #0x40+var_38
.text:000000000000DF08                 MOV             X1, X20 ; int
.text:000000000000DF0C                 ADD             X20, SP, #0x40+var_38
.text:000000000000DF10                 BL              ._ZN7android6binder6Status17fromExceptionCodeEiPKc ; android::binder::Status::fromExceptionCode(int,char const*)
.text:000000000000DF14                 LDR             X8, [SP,#0x40+var_38]
.text:000000000000DF18                 ADD             X20, X20, #8
.text:000000000000DF1C                 MOV             X0, X19
.text:000000000000DF20                 MOV             X1, X20 ; android::String8 *
.text:000000000000DF24                 STR             X8, [X0],#8 ; this
.text:000000000000DF28                 BL              ._ZN7android7String8C1ERKS0_ ; android::String8::String8(android::String8 const&)
.text:000000000000DF2C                 MOV             X0, X20 ; this
.text:000000000000DF30                 BL              ._ZN7android7String8D1Ev ; android::String8::~String8()
.text:000000000000DF34                 LDR             X8, [X22,#0x28]
.text:000000000000DF38                 LDR             X9, [SP,#0x40+var_28]
.text:000000000000DF3C                 CMP             X8, X9
.text:000000000000DF40                 B.NE            loc_DF5C
.text:000000000000DF44                 MOV             X0, X19
.text:000000000000DF48                 LDP             X29, X30, [SP,#0x40+var_s0]
.text:000000000000DF4C                 LDP             X20, X19, [SP,#0x40+var_10]
.text:000000000000DF50                 LDP             X22, X21, [SP,#0x40+var_20]
.text:000000000000DF54                 ADD             SP, SP, #0x50 ; 'P'
.text:000000000000DF58                 RET
.text:000000000000DF5C ; ---------------------------------------------------------------------------
.text:000000000000DF5C loc_DF5C                                ; CODE XREF: AStatus_fromExceptionCodeWithMessage+78↑j
.text:000000000000DF5C                 BL              .__stack_chk_fail
.text:000000000000DF5C ; } // starts at DEC8
.text:000000000000DF5C ; End of function AStatus_fromExceptionCodeWithMessage
.text:000000000000DF60 ; =============== S U B R O U T I N E =======================================
.text:000000000000DF60 ; Attributes: bp-based frame
.text:000000000000DF60                 EXPORT AStatus_fromServiceSpecificError
.text:000000000000DF60 AStatus_fromServiceSpecificError        ; DATA XREF: LOAD:0000000000001698↑o
.text:000000000000DF60 var_38          = -0x38
.text:000000000000DF60 var_28          = -0x28
.text:000000000000DF60 var_20          = -0x20
.text:000000000000DF60 var_10          = -0x10
.text:000000000000DF60 var_s0          =  0
.text:000000000000DF60 ; __unwind {
.text:000000000000DF60                 SUB             SP, SP, #0x50
.text:000000000000DF64                 STR             X21, [SP,#0x40+var_20]
.text:000000000000DF68                 STP             X20, X19, [SP,#0x40+var_10]
.text:000000000000DF6C                 STP             X29, X30, [SP,#0x40+var_s0]
.text:000000000000DF70                 ADD             X29, SP, #0x40
.text:000000000000DF74                 MRS             X21, #3, c13, c0, #2
.text:000000000000DF78                 MOV             W20, W0
.text:000000000000DF7C                 LDR             X8, [X21,#0x28]
.text:000000000000DF80                 MOV             W0, #0x10 ; unsigned __int64
.text:000000000000DF84                 STR             X8, [SP,#0x40+var_28]
.text:000000000000DF88                 BL              ._Znwm  ; operator new(ulong)
.text:000000000000DF8C                 MOV             X19, X0
.text:000000000000DF90                 ADD             X8, SP, #0x40+var_38
.text:000000000000DF94                 MOV             W0, W20 ; this
.text:000000000000DF98                 ADD             X20, SP, #0x40+var_38
.text:000000000000DF9C                 BL              ._ZN7android6binder6Status24fromServiceSpecificErrorEi ; android::binder::Status::fromServiceSpecificError(int)
.text:000000000000DFA0                 LDR             X8, [SP,#0x40+var_38]
.text:000000000000DFA4                 ADD             X20, X20, #8
.text:000000000000DFA8                 MOV             X0, X19
.text:000000000000DFAC                 MOV             X1, X20 ; android::String8 *
.text:000000000000DFB0                 STR             X8, [X0],#8 ; this
.text:000000000000DFB4                 BL              ._ZN7android7String8C1ERKS0_ ; android::String8::String8(android::String8 const&)
.text:000000000000DFB8                 MOV             X0, X20 ; this
.text:000000000000DFBC                 BL              ._ZN7android7String8D1Ev ; android::String8::~String8()
.text:000000000000DFC0                 LDR             X8, [X21,#0x28]
.text:000000000000DFC4                 LDR             X9, [SP,#0x40+var_28]
.text:000000000000DFC8                 CMP             X8, X9
.text:000000000000DFCC                 B.NE            loc_DFE8
.text:000000000000DFD0                 MOV             X0, X19
.text:000000000000DFD4                 LDR             X21, [SP,#0x40+var_20]
.text:000000000000DFD8                 LDP             X29, X30, [SP,#0x40+var_s0]
.text:000000000000DFDC                 LDP             X20, X19, [SP,#0x40+var_10]
.text:000000000000DFE0                 ADD             SP, SP, #0x50 ; 'P'
.text:000000000000DFE4                 RET
.text:000000000000DFE8 ; ---------------------------------------------------------------------------
.text:000000000000DFE8 loc_DFE8                                ; CODE XREF: AStatus_fromServiceSpecificError+6C↑j
.text:000000000000DFE8                 BL              .__stack_chk_fail
.text:000000000000DFE8 ; } // starts at DF60
.text:000000000000DFE8 ; End of function AStatus_fromServiceSpecificError
.text:000000000000DFE8 ; ---------------------------------------------------------------------------
.text:000000000000DFEC                 ALIGN 0x10
.text:000000000000DFF0 ; =============== S U B R O U T I N E =======================================
.text:000000000000DFF0 ; Attributes: bp-based frame
.text:000000000000DFF0                 EXPORT AStatus_fromServiceSpecificErrorWithMessage
.text:000000000000DFF0 AStatus_fromServiceSpecificErrorWithMessage
.text:000000000000DFF0                                         ; DATA XREF: LOAD:0000000000001950↑o
.text:000000000000DFF0 var_38          = -0x38
.text:000000000000DFF0 var_28          = -0x28
.text:000000000000DFF0 var_20          = -0x20
.text:000000000000DFF0 var_10          = -0x10
.text:000000000000DFF0 var_s0          =  0
.text:000000000000DFF0 ; __unwind {
.text:000000000000DFF0                 SUB             SP, SP, #0x50
.text:000000000000DFF4                 STP             X22, X21, [SP,#0x40+var_20]
.text:000000000000DFF8                 STP             X20, X19, [SP,#0x40+var_10]
.text:000000000000DFFC                 STP             X29, X30, [SP,#0x40+var_s0]
.text:000000000000E000                 ADD             X29, SP, #0x40
.text:000000000000E004                 MRS             X22, #3, c13, c0, #2
.text:000000000000E008                 MOV             W21, W0
.text:000000000000E00C                 LDR             X8, [X22,#0x28]
.text:000000000000E010                 MOV             W0, #0x10 ; unsigned __int64
.text:000000000000E014                 MOV             X20, X1
.text:000000000000E018                 STR             X8, [SP,#0x40+var_28]
.text:000000000000E01C                 BL              ._Znwm  ; operator new(ulong)
.text:000000000000E020                 MOV             X19, X0
.text:000000000000E024                 ADD             X8, SP, #0x40+var_38
.text:000000000000E028                 MOV             W0, W21 ; this
.text:000000000000E02C                 MOV             X1, X20 ; int
.text:000000000000E030                 ADD             X20, SP, #0x40+var_38
.text:000000000000E034                 BL              ._ZN7android6binder6Status24fromServiceSpecificErrorEiPKc ; android::binder::Status::fromServiceSpecificError(int,char const*)
.text:000000000000E038                 LDR             X8, [SP,#0x40+var_38]
.text:000000000000E03C                 ADD             X20, X20, #8
.text:000000000000E040                 MOV             X0, X19
.text:000000000000E044                 MOV             X1, X20 ; android::String8 *
.text:000000000000E048                 STR             X8, [X0],#8 ; this
.text:000000000000E04C                 BL              ._ZN7android7String8C1ERKS0_ ; android::String8::String8(android::String8 const&)
.text:000000000000E050                 MOV             X0, X20 ; this
.text:000000000000E054                 BL              ._ZN7android7String8D1Ev ; android::String8::~String8()
.text:000000000000E058                 LDR             X8, [X22,#0x28]
.text:000000000000E05C                 LDR             X9, [SP,#0x40+var_28]
.text:000000000000E060                 CMP             X8, X9
.text:000000000000E064                 B.NE            loc_E080
.text:000000000000E068                 MOV             X0, X19
.text:000000000000E06C                 LDP             X29, X30, [SP,#0x40+var_s0]
.text:000000000000E070                 LDP             X20, X19, [SP,#0x40+var_10]
.text:000000000000E074                 LDP             X22, X21, [SP,#0x40+var_20]
.text:000000000000E078                 ADD             SP, SP, #0x50 ; 'P'
.text:000000000000E07C                 RET
.text:000000000000E080 ; ---------------------------------------------------------------------------
.text:000000000000E080 loc_E080                                ; CODE XREF: AStatus_fromServiceSpecificErrorWithMessage+74↑j
.text:000000000000E080                 BL              .__stack_chk_fail
.text:000000000000E080 ; } // starts at DFF0
.text:000000000000E080 ; End of function AStatus_fromServiceSpecificErrorWithMessage
.text:000000000000E080 ; ---------------------------------------------------------------------------
.text:000000000000E084                 ALIGN 8
.text:000000000000E088 ; =============== S U B R O U T I N E =======================================
.text:000000000000E088 ; Attributes: bp-based frame
.text:000000000000E088                 EXPORT AStatus_fromStatus
.text:000000000000E088 AStatus_fromStatus                      ; DATA XREF: LOAD:0000000000001338↑o
.text:000000000000E088 var_38          = -0x38
.text:000000000000E088 var_28          = -0x28
.text:000000000000E088 var_20          = -0x20
.text:000000000000E088 var_10          = -0x10
.text:000000000000E088 var_s0          =  0
.text:000000000000E088 ; __unwind {
.text:000000000000E088                 SUB             SP, SP, #0x50
.text:000000000000E08C                 STR             X21, [SP,#0x40+var_20]
.text:000000000000E090                 STP             X20, X19, [SP,#0x40+var_10]
.text:000000000000E094                 STP             X29, X30, [SP,#0x40+var_s0]
.text:000000000000E098                 ADD             X29, SP, #0x40
.text:000000000000E09C                 MRS             X21, #3, c13, c0, #2
.text:000000000000E0A0                 MOV             W20, W0
.text:000000000000E0A4                 LDR             X8, [X21,#0x28]
.text:000000000000E0A8                 MOV             W0, #0x10 ; unsigned __int64
.text:000000000000E0AC                 STR             X8, [SP,#0x40+var_28]
.text:000000000000E0B0                 BL              ._Znwm  ; operator new(ulong)
.text:000000000000E0B4                 MOV             X19, X0
.text:000000000000E0B8                 MOV             W0, W20
.text:000000000000E0BC                 BL              sub_E118
.text:000000000000E0C0                 ADD             X8, SP, #0x40+var_38
.text:000000000000E0C4                 ADD             X20, SP, #0x40+var_38
.text:000000000000E0C8                 BL              ._ZN7android6binder6Status11fromStatusTEi ; android::binder::Status::fromStatusT(int)
.text:000000000000E0CC                 LDR             X8, [SP,#0x40+var_38]
.text:000000000000E0D0                 ADD             X20, X20, #8
.text:000000000000E0D4                 MOV             X0, X19
.text:000000000000E0D8                 MOV             X1, X20 ; android::String8 *
.text:000000000000E0DC                 STR             X8, [X0],#8 ; this
.text:000000000000E0E0                 BL              ._ZN7android7String8C1ERKS0_ ; android::String8::String8(android::String8 const&)
.text:000000000000E0E4                 MOV             X0, X20 ; this
.text:000000000000E0E8                 BL              ._ZN7android7String8D1Ev ; android::String8::~String8()
.text:000000000000E0EC                 LDR             X8, [X21,#0x28]
.text:000000000000E0F0                 LDR             X9, [SP,#0x40+var_28]
.text:000000000000E0F4                 CMP             X8, X9
.text:000000000000E0F8                 B.NE            loc_E114
.text:000000000000E0FC                 MOV             X0, X19
.text:000000000000E100                 LDR             X21, [SP,#0x40+var_20]
.text:000000000000E104                 LDP             X29, X30, [SP,#0x40+var_s0]
.text:000000000000E108                 LDP             X20, X19, [SP,#0x40+var_10]
.text:000000000000E10C                 ADD             SP, SP, #0x50 ; 'P'
.text:000000000000E110                 RET
.text:000000000000E114 ; ---------------------------------------------------------------------------
.text:000000000000E114 loc_E114                                ; CODE XREF: AStatus_fromStatus+70↑j
.text:000000000000E114                 BL              .__stack_chk_fail
.text:000000000000E114 ; } // starts at E088
.text:000000000000E114 ; End of function AStatus_fromStatus
.text:000000000000E118 ; =============== S U B R O U T I N E =======================================
.text:000000000000E118 ; Attributes: bp-based frame
.text:000000000000E118 sub_E118                                ; CODE XREF: sub_8C70-A8↑p
.text:000000000000E118                                         ; sub_97F8+20C↑p ...
.text:000000000000E118 var_38          = -0x38
.text:000000000000E118 var_30          = -0x30
.text:000000000000E118 var_28          = -0x28
.text:000000000000E118 var_20          = -0x20
.text:000000000000E118 var_10          = -0x10
.text:000000000000E118 var_s0          =  0
.text:000000000000E118 ; __unwind {
.text:000000000000E118                 SUB             SP, SP, #0x50
.text:000000000000E11C                 STR             X21, [SP,#0x40+var_20]
.text:000000000000E120                 STP             X20, X19, [SP,#0x40+var_10]
.text:000000000000E124                 STP             X29, X30, [SP,#0x40+var_s0]
.text:000000000000E128                 ADD             X29, SP, #0x40
.text:000000000000E12C                 MRS             X20, #3, c13, c0, #2
.text:000000000000E130                 MOV             W19, W0
.text:000000000000E134                 LDR             X9, [X20,#0x28]
.text:000000000000E138                 ADD             W8, W0, #0x6E ; 'n'
.text:000000000000E13C                 CMP             W8, #0x6E ; 'n'
.text:000000000000E140                 STR             X9, [SP,#0x40+var_28]
.text:000000000000E144                 B.HI            loc_E160
.text:000000000000E148                 ADRP            X9, #unk_56E9@PAGE
.text:000000000000E14C                 ADD             X9, X9, #unk_56E9@PAGEOFF
.text:000000000000E150                 ADR             X10, loc_E184
.text:000000000000E154                 LDRB            W11, [X9,X8]
.text:000000000000E158                 ADD             X10, X10, X11,LSL#2
.text:000000000000E15C                 BR              X10
.text:000000000000E160 ; ---------------------------------------------------------------------------
.text:000000000000E160 loc_E160                                ; CODE XREF: sub_E118+2C↑j
.text:000000000000E160                 MOV             W8, #0x80000000
.text:000000000000E164                 ADD             W8, W19, W8
.text:000000000000E168                 CMP             W8, #8
.text:000000000000E16C                 B.HI            loc_E184
.text:000000000000E170                 MOV             W9, #1
.text:000000000000E174                 MOV             W10, #0x187
.text:000000000000E178                 LSL             W8, W9, W8
.text:000000000000E17C                 TST             W8, W10
.text:000000000000E180                 B.NE            loc_E194
.text:000000000000E184 loc_E184                                ; CODE XREF: sub_E118+54↑j
.text:000000000000E184                                         ; DATA XREF: sub_E118+38↑o
.text:000000000000E184                 BL              ._ZN7android4base21GetMinimumLogSeverityEv ; android::base::GetMinimumLogSeverity(void)
.text:000000000000E188                 CMP             W0, #3
.text:000000000000E18C                 B.LE            loc_E1BC
.text:000000000000E190                 MOV             W19, #0x80000000
.text:000000000000E194 loc_E194                                ; CODE XREF: sub_E118+68↑j
.text:000000000000E194                                         ; sub_E118+11C↓j
.text:000000000000E194                 LDR             X8, [X20,#0x28]
.text:000000000000E198                 LDR             X9, [SP,#0x40+var_28]
.text:000000000000E19C                 CMP             X8, X9
.text:000000000000E1A0                 B.NE            loc_E238
.text:000000000000E1A4                 MOV             W0, W19
.text:000000000000E1A8                 LDR             X21, [SP,#0x40+var_20]
.text:000000000000E1AC                 LDP             X29, X30, [SP,#0x40+var_s0]
.text:000000000000E1B0                 LDP             X20, X19, [SP,#0x40+var_10]
.text:000000000000E1B4                 ADD             SP, SP, #0x50 ; 'P'
.text:000000000000E1B8                 RET
.text:000000000000E1BC ; ---------------------------------------------------------------------------
.text:000000000000E1BC loc_E1BC                                ; CODE XREF: sub_E118+74↑j
.text:000000000000E1BC                 BL              .__errno
.text:000000000000E1C0                 ADRP            X1, #aFrameworksNati_1@PAGE ; "frameworks/native/libs/binder/ndk/statu"...
.text:000000000000E1C4                 STR             X20, [SP,#0x40+var_38]
.text:000000000000E1C8                 MOV             X20, X0
.text:000000000000E1CC                 LDR             W21, [X0]
.text:000000000000E1D0                 ADD             X1, X1, #aFrameworksNati_1@PAGEOFF ; "frameworks/native/libs/binder/ndk/statu"...
.text:000000000000E1D4                 MOV             W2, #0x73 ; 's'
.text:000000000000E1D8                 MOV             W6, #0xFFFFFFFF
.text:000000000000E1DC                 ADD             X0, SP, #0x40+var_30
.text:000000000000E1E0                 MOV             W3, WZR
.text:000000000000E1E4                 MOV             W4, #3
.text:000000000000E1E8                 MOV             X5, XZR
.text:000000000000E1EC                 BL              ._ZN7android4base10LogMessageC1EPKcjNS0_5LogIdENS0_11LogSeverityES3_i ; android::base::LogMessage::LogMessage(char const*,uint,android::base::LogId,android::base::LogSeverity,char const*,int)
.text:000000000000E1F0                 ADD             X0, SP, #0x40+var_30 ; this
.text:000000000000E1F4                 BL              ._ZN7android4base10LogMessage6streamEv ; android::base::LogMessage::stream(void)
.text:000000000000E1F8                 ADRP            X1, #aPrunestatust@PAGE ; "PruneStatusT"
.text:000000000000E1FC                 ADD             X1, X1, #aPrunestatust@PAGEOFF ; "PruneStatusT"
.text:000000000000E200                 MOV             W2, #0xC
.text:000000000000E204                 BL              sub_B548
.text:000000000000E208                 ADRP            X1, #aUnknownStatusT_0@PAGE ; ": Unknown status_t pruned into STATUS_U"...
.text:000000000000E20C                 ADD             X1, X1, #aUnknownStatusT_0@PAGEOFF ; ": Unknown status_t pruned into STATUS_U"...
.text:000000000000E210                 MOV             W2, #0x35 ; '5'
.text:000000000000E214                 BL              sub_B548
.text:000000000000E218                 MOV             W1, W19
.text:000000000000E21C                 BL              ._ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEi ; std::__1::basic_ostream<char,std::__1::char_traits<char>>::operator<<(int)
.text:000000000000E220                 ADD             X0, SP, #0x40+var_30 ; this
.text:000000000000E224                 BL              ._ZN7android4base10LogMessageD1Ev ; android::base::LogMessage::~LogMessage()
.text:000000000000E228                 STR             W21, [X20]
.text:000000000000E22C                 MOV             W19, #0x80000000
.text:000000000000E230                 LDR             X20, [SP,#0x40+var_38]
.text:000000000000E234                 B               loc_E194
.text:000000000000E238 ; ---------------------------------------------------------------------------
.text:000000000000E238 loc_E238                                ; CODE XREF: sub_E118+88↑j
.text:000000000000E238                 BL              .__stack_chk_fail
.text:000000000000E238 ; } // starts at E118
.text:000000000000E238 ; End of function sub_E118
.text:000000000000E238 ; ---------------------------------------------------------------------------
.text:000000000000E23C                 ALIGN 0x20
.text:000000000000E240 ; =============== S U B R O U T I N E =======================================
.text:000000000000E240                 EXPORT AStatus_isOk
.text:000000000000E240 AStatus_isOk                            ; DATA XREF: LOAD:00000000000014A0↑o
.text:000000000000E240 ; __unwind {
.text:000000000000E240                 LDR             W8, [X0]
.text:000000000000E244                 CMP             W8, #0
.text:000000000000E248                 CSET            W0, EQ
.text:000000000000E24C                 RET
.text:000000000000E24C ; } // starts at E240
.text:000000000000E24C ; End of function AStatus_isOk
.text:000000000000E250 ; =============== S U B R O U T I N E =======================================
.text:000000000000E250                 EXPORT AStatus_getExceptionCode
.text:000000000000E250 AStatus_getExceptionCode                ; DATA XREF: LOAD:0000000000001A58↑o
.text:000000000000E250 ; __unwind {
.text:000000000000E250                 LDR             W0, [X0] ; this
.text:000000000000E254                 B               sub_DDD0
.text:000000000000E254 ; } // starts at E250
.text:000000000000E254 ; End of function AStatus_getExceptionCode
.text:000000000000E258 ; =============== S U B R O U T I N E =======================================
.text:000000000000E258                 EXPORT AStatus_getServiceSpecificError
.text:000000000000E258 AStatus_getServiceSpecificError         ; DATA XREF: LOAD:00000000000016B0↑o
.text:000000000000E258 ; __unwind {
.text:000000000000E258                 LDR             W8, [X0]
.text:000000000000E25C                 CMN             W8, #8
.text:000000000000E260                 B.NE            loc_E26C
.text:000000000000E264                 LDR             W0, [X0,#4]
.text:000000000000E268                 RET
.text:000000000000E26C ; ---------------------------------------------------------------------------
.text:000000000000E26C loc_E26C                                ; CODE XREF: AStatus_getServiceSpecificError+8↑j
.text:000000000000E26C                 MOV             W0, WZR
.text:000000000000E270                 RET
.text:000000000000E270 ; } // starts at E258
.text:000000000000E270 ; End of function AStatus_getServiceSpecificError
.text:000000000000E270 ; ---------------------------------------------------------------------------
.text:000000000000E274                 ALIGN 8
.text:000000000000E278 ; =============== S U B R O U T I N E =======================================
.text:000000000000E278                 EXPORT AStatus_getStatus
.text:000000000000E278 AStatus_getStatus                       ; DATA XREF: LOAD:00000000000015A8↑o
.text:000000000000E278 ; __unwind {
.text:000000000000E278                 LDR             W8, [X0]
.text:000000000000E27C                 CMN             W8, #0x81
.text:000000000000E280                 B.NE            loc_E28C
.text:000000000000E284                 LDR             W0, [X0,#4]
.text:000000000000E288                 B               sub_E118
.text:000000000000E28C ; ---------------------------------------------------------------------------
.text:000000000000E28C loc_E28C                                ; CODE XREF: AStatus_getStatus+8↑j
.text:000000000000E28C                 MOV             W0, WZR
.text:000000000000E290                 B               sub_E118
.text:000000000000E290 ; } // starts at E278
.text:000000000000E290 ; End of function AStatus_getStatus
.text:000000000000E290 ; ---------------------------------------------------------------------------
.text:000000000000E294                 ALIGN 8
.text:000000000000E298 ; =============== S U B R O U T I N E =======================================
.text:000000000000E298                 EXPORT AStatus_getMessage
.text:000000000000E298 AStatus_getMessage                      ; DATA XREF: LOAD:0000000000001860↑o
.text:000000000000E298 ; __unwind {
.text:000000000000E298                 LDR             X0, [X0,#8]
.text:000000000000E29C                 RET
.text:000000000000E29C ; } // starts at E298
.text:000000000000E29C ; End of function AStatus_getMessage
.text:000000000000E2A0 ; =============== S U B R O U T I N E =======================================
.text:000000000000E2A0 ; Attributes: bp-based frame
.text:000000000000E2A0                 EXPORT AStatus_delete
.text:000000000000E2A0 AStatus_delete                          ; DATA XREF: LOAD:0000000000001500↑o
.text:000000000000E2A0 var_10          = -0x10
.text:000000000000E2A0 var_s0          =  0
.text:000000000000E2A0 ; __unwind {
.text:000000000000E2A0                 CBZ             X0, locret_E2CC
.text:000000000000E2A4                 STR             X19, [SP,#-0x10+var_10]!
.text:000000000000E2A8                 STP             X29, X30, [SP,#0x10+var_s0]
.text:000000000000E2AC                 ADD             X29, SP, #0x10
.text:000000000000E2B0                 MOV             X19, X0
.text:000000000000E2B4                 ADD             X0, X0, #8 ; this
.text:000000000000E2B8                 BL              ._ZN7android7String8D1Ev ; android::String8::~String8()
.text:000000000000E2BC                 LDP             X29, X30, [SP,#0x10+var_s0]
.text:000000000000E2C0                 MOV             X0, X19 ; void *
.text:000000000000E2C4                 LDR             X19, [SP+0x10+var_10],#0x20
.text:000000000000E2C8                 B               ._ZdlPv ; operator delete(void *)
.text:000000000000E2CC ; ---------------------------------------------------------------------------
.text:000000000000E2CC locret_E2CC                             ; CODE XREF: AStatus_delete↑j
.text:000000000000E2CC                 RET
.text:000000000000E2CC ; } // starts at E2A0
.text:000000000000E2CC ; End of function AStatus_delete
.text:000000000000E2D0 ; =============== S U B R O U T I N E =======================================
.text:000000000000E2D0 ; Attributes: bp-based frame
.text:000000000000E2D0                 EXPORT AServiceManager_addService
.text:000000000000E2D0 AServiceManager_addService              ; DATA XREF: LOAD:0000000000001350↑o
.text:000000000000E2D0 var_40          = -0x40
.text:000000000000E2D0 var_38          = -0x38
.text:000000000000E2D0 var_30          = -0x30
.text:000000000000E2D0 var_28          = -0x28
.text:000000000000E2D0 var_20          = -0x20
.text:000000000000E2D0 var_10          = -0x10
.text:000000000000E2D0 var_s0          =  0
.text:000000000000E2D0 ; __unwind {
.text:000000000000E2D0                 SUB             SP, SP, #0x50
.text:000000000000E2D4                 STP             X22, X21, [SP,#0x40+var_20]
.text:000000000000E2D8                 STP             X20, X19, [SP,#0x40+var_10]
.text:000000000000E2DC                 STP             X29, X30, [SP,#0x40+var_s0]
.text:000000000000E2E0                 ADD             X29, SP, #0x40
.text:000000000000E2E4                 MRS             X22, #3, c13, c0, #2
.text:000000000000E2E8                 MOV             W19, #8
.text:000000000000E2EC                 LDR             X8, [X22,#0x28]
.text:000000000000E2F0                 MOVK            W19, #0x8000,LSL#16
.text:000000000000E2F4                 STR             X8, [SP,#0x40+var_28]
.text:000000000000E2F8                 CBZ             X0, loc_E3A4
.text:000000000000E2FC                 MOV             X21, X1
.text:000000000000E300                 CBZ             X1, loc_E3A4
.text:000000000000E304                 ADD             X8, SP, #0x40+var_30
.text:000000000000E308                 MOV             X20, X0
.text:000000000000E30C                 BL              ._ZN7android21defaultServiceManagerEv ; android::defaultServiceManager(void)
.text:000000000000E310                 LDR             X19, [SP,#0x40+var_30]
.text:000000000000E314                 ADD             X0, SP, #0x40+var_38 ; this
.text:000000000000E318                 MOV             X1, X21 ; char *
.text:000000000000E31C                 BL              ._ZN7android8String16C1EPKc ; android::String16::String16(char const*)
.text:000000000000E320                 LDR             X8, [X20]
.text:000000000000E324                 MOV             X0, X20
.text:000000000000E328                 LDR             X9, [X8,#0x10]
.text:000000000000E32C                 MOV             X8, SP
.text:000000000000E330                 BLR             X9
.text:000000000000E334                 LDR             X8, [X19]
.text:000000000000E338                 ADD             X1, SP, #0x40+var_38
.text:000000000000E33C                 MOV             X2, SP
.text:000000000000E340                 MOV             X0, X19
.text:000000000000E344                 MOV             W3, WZR
.text:000000000000E348                 LDR             X8, [X8,#0x30]
.text:000000000000E34C                 MOV             W4, #8
.text:000000000000E350                 BLR             X8
.text:000000000000E354                 LDR             X8, [SP,#0x40+var_40]
.text:000000000000E358                 MOV             W19, W0
.text:000000000000E35C                 CBZ             X8, loc_E374
.text:000000000000E360                 LDR             X9, [X8]
.text:000000000000E364                 MOV             X1, SP  ; void *
.text:000000000000E368                 LDUR            X9, [X9,#-0x18]
.text:000000000000E36C                 ADD             X0, X8, X9 ; this
.text:000000000000E370                 BL              ._ZNK7android7RefBase9decStrongEPKv ; android::RefBase::decStrong(void const*)
.text:000000000000E374 loc_E374                                ; CODE XREF: AServiceManager_addService+8C↑j
.text:000000000000E374                 ADD             X0, SP, #0x40+var_38 ; this
.text:000000000000E378                 BL              ._ZN7android8String16D1Ev ; android::String16::~String16()
.text:000000000000E37C                 MOV             W0, W19
.text:000000000000E380                 BL              sub_E118
.text:000000000000E384                 LDR             X8, [SP,#0x40+var_30]
.text:000000000000E388                 MOV             W19, W0
.text:000000000000E38C                 CBZ             X8, loc_E3A4
.text:000000000000E390                 LDR             X9, [X8]
.text:000000000000E394                 ADD             X1, SP, #0x40+var_30 ; void *
.text:000000000000E398                 LDUR            X9, [X9,#-0x18]
.text:000000000000E39C                 ADD             X0, X8, X9 ; this
.text:000000000000E3A0                 BL              ._ZNK7android7RefBase9decStrongEPKv ; android::RefBase::decStrong(void const*)
.text:000000000000E3A4 loc_E3A4                                ; CODE XREF: AServiceManager_addService+28↑j
.text:000000000000E3A4                                         ; AServiceManager_addService+30↑j ...
.text:000000000000E3A4                 LDR             X8, [X22,#0x28]
.text:000000000000E3A8                 LDR             X9, [SP,#0x40+var_28]
.text:000000000000E3AC                 CMP             X8, X9
.text:000000000000E3B0                 B.NE            loc_E3CC
.text:000000000000E3B4                 MOV             W0, W19
.text:000000000000E3B8                 LDP             X29, X30, [SP,#0x40+var_s0]
.text:000000000000E3BC                 LDP             X20, X19, [SP,#0x40+var_10]
.text:000000000000E3C0                 LDP             X22, X21, [SP,#0x40+var_20]
.text:000000000000E3C4                 ADD             SP, SP, #0x50 ; 'P'
.text:000000000000E3C8                 RET
.text:000000000000E3CC ; ---------------------------------------------------------------------------
.text:000000000000E3CC loc_E3CC                                ; CODE XREF: AServiceManager_addService+E0↑j
.text:000000000000E3CC                 BL              .__stack_chk_fail
.text:000000000000E3CC ; } // starts at E2D0
.text:000000000000E3CC ; End of function AServiceManager_addService
.text:000000000000E3D0 ; =============== S U B R O U T I N E =======================================
.text:000000000000E3D0 ; Attributes: bp-based frame
.text:000000000000E3D0                 EXPORT AServiceManager_checkService
.text:000000000000E3D0 AServiceManager_checkService            ; DATA XREF: LOAD:0000000000001368↑o
.text:000000000000E3D0 var_40          = -0x40
.text:000000000000E3D0 var_38          = -0x38
.text:000000000000E3D0 var_30          = -0x30
.text:000000000000E3D0 var_28          = -0x28
.text:000000000000E3D0 var_20          = -0x20
.text:000000000000E3D0 var_10          = -0x10
.text:000000000000E3D0 var_s0          =  0
.text:000000000000E3D0 ; __unwind {
.text:000000000000E3D0                 SUB             SP, SP, #0x50
.text:000000000000E3D4                 STR             X21, [SP,#0x40+var_20]
.text:000000000000E3D8                 STP             X20, X19, [SP,#0x40+var_10]
.text:000000000000E3DC                 STP             X29, X30, [SP,#0x40+var_s0]
.text:000000000000E3E0                 ADD             X29, SP, #0x40
.text:000000000000E3E4                 MRS             X21, #3, c13, c0, #2
.text:000000000000E3E8                 MOV             X19, X0
.text:000000000000E3EC                 LDR             X8, [X21,#0x28]
.text:000000000000E3F0                 STR             X8, [SP,#0x40+var_28]
.text:000000000000E3F4                 CBZ             X0, loc_E498
.text:000000000000E3F8                 ADD             X8, SP, #0x40+var_30
.text:000000000000E3FC                 BL              ._ZN7android21defaultServiceManagerEv ; android::defaultServiceManager(void)
.text:000000000000E400                 LDR             X20, [SP,#0x40+var_30]
.text:000000000000E404                 MOV             X0, SP  ; this
.text:000000000000E408                 MOV             X1, X19 ; char *
.text:000000000000E40C                 BL              ._ZN7android8String16C1EPKc ; android::String16::String16(char const*)
.text:000000000000E410                 LDR             X8, [X20]
.text:000000000000E414                 MOV             X1, SP
.text:000000000000E418                 MOV             X0, X20
.text:000000000000E41C                 LDR             X9, [X8,#0x28]
.text:000000000000E420                 ADD             X8, SP, #0x40+var_38
.text:000000000000E424                 BLR             X9
.text:000000000000E428                 MOV             X0, SP  ; this
.text:000000000000E42C                 BL              ._ZN7android8String16D1Ev ; android::String16::~String16()
.text:000000000000E430                 MOV             X8, SP
.text:000000000000E434                 ADD             X0, SP, #0x40+var_38
.text:000000000000E438                 BL              sub_9088
.text:000000000000E43C                 LDR             X0, [SP,#0x40+var_40]
.text:000000000000E440                 BL              .AIBinder_incStrong
.text:000000000000E444                 LDR             X19, [SP,#0x40+var_40]
.text:000000000000E448                 CBZ             X19, loc_E460
.text:000000000000E44C                 LDR             X8, [X19]
.text:000000000000E450                 MOV             X1, SP  ; void *
.text:000000000000E454                 LDUR            X8, [X8,#-0x18]
.text:000000000000E458                 ADD             X0, X19, X8 ; this
.text:000000000000E45C                 BL              ._ZNK7android7RefBase9decStrongEPKv ; android::RefBase::decStrong(void const*)
.text:000000000000E460 loc_E460                                ; CODE XREF: AServiceManager_checkService+78↑j
.text:000000000000E460                 LDR             X8, [SP,#0x40+var_38]
.text:000000000000E464                 CBZ             X8, loc_E47C
.text:000000000000E468                 LDR             X9, [X8]
.text:000000000000E46C                 ADD             X1, SP, #0x40+var_38 ; void *
.text:000000000000E470                 LDUR            X9, [X9,#-0x18]
.text:000000000000E474                 ADD             X0, X8, X9 ; this
.text:000000000000E478                 BL              ._ZNK7android7RefBase9decStrongEPKv ; android::RefBase::decStrong(void const*)
.text:000000000000E47C loc_E47C                                ; CODE XREF: AServiceManager_checkService+94↑j
.text:000000000000E47C                 LDR             X8, [SP,#0x40+var_30]
.text:000000000000E480                 CBZ             X8, loc_E498
.text:000000000000E484                 LDR             X9, [X8]
.text:000000000000E488                 ADD             X1, SP, #0x40+var_30 ; void *
.text:000000000000E48C                 LDUR            X9, [X9,#-0x18]
.text:000000000000E490                 ADD             X0, X8, X9 ; this
.text:000000000000E494                 BL              ._ZNK7android7RefBase9decStrongEPKv ; android::RefBase::decStrong(void const*)
.text:000000000000E498 loc_E498                                ; CODE XREF: AServiceManager_checkService+24↑j
.text:000000000000E498                                         ; AServiceManager_checkService+B0↑j
.text:000000000000E498                 LDR             X8, [X21,#0x28]
.text:000000000000E49C                 LDR             X9, [SP,#0x40+var_28]
.text:000000000000E4A0                 CMP             X8, X9
.text:000000000000E4A4                 B.NE            loc_E4C0
.text:000000000000E4A8                 MOV             X0, X19
.text:000000000000E4AC                 LDR             X21, [SP,#0x40+var_20]
.text:000000000000E4B0                 LDP             X29, X30, [SP,#0x40+var_s0]
.text:000000000000E4B4                 LDP             X20, X19, [SP,#0x40+var_10]
.text:000000000000E4B8                 ADD             SP, SP, #0x50 ; 'P'
.text:000000000000E4BC                 RET
.text:000000000000E4C0 ; ---------------------------------------------------------------------------
.text:000000000000E4C0 loc_E4C0                                ; CODE XREF: AServiceManager_checkService+D4↑j
.text:000000000000E4C0                 BL              .__stack_chk_fail
.text:000000000000E4C0 ; } // starts at E3D0
.text:000000000000E4C0 ; End of function AServiceManager_checkService
.text:000000000000E4C0 ; ---------------------------------------------------------------------------
.text:000000000000E4C4                 ALIGN 8
.text:000000000000E4C8 ; =============== S U B R O U T I N E =======================================
.text:000000000000E4C8 ; Attributes: bp-based frame
.text:000000000000E4C8                 EXPORT AServiceManager_getService
.text:000000000000E4C8 AServiceManager_getService              ; DATA XREF: LOAD:0000000000001770↑o
.text:000000000000E4C8 var_40          = -0x40
.text:000000000000E4C8 var_38          = -0x38
.text:000000000000E4C8 var_30          = -0x30
.text:000000000000E4C8 var_28          = -0x28
.text:000000000000E4C8 var_20          = -0x20
.text:000000000000E4C8 var_10          = -0x10
.text:000000000000E4C8 var_s0          =  0
.text:000000000000E4C8 ; __unwind {
.text:000000000000E4C8                 SUB             SP, SP, #0x50
.text:000000000000E4CC                 STR             X21, [SP,#0x40+var_20]
.text:000000000000E4D0                 STP             X20, X19, [SP,#0x40+var_10]
.text:000000000000E4D4                 STP             X29, X30, [SP,#0x40+var_s0]
.text:000000000000E4D8                 ADD             X29, SP, #0x40
.text:000000000000E4DC                 MRS             X21, #3, c13, c0, #2
.text:000000000000E4E0                 MOV             X19, X0
.text:000000000000E4E4                 LDR             X8, [X21,#0x28]
.text:000000000000E4E8                 STR             X8, [SP,#0x40+var_28]
.text:000000000000E4EC                 CBZ             X0, loc_E590
.text:000000000000E4F0                 ADD             X8, SP, #0x40+var_30
.text:000000000000E4F4                 BL              ._ZN7android21defaultServiceManagerEv ; android::defaultServiceManager(void)
.text:000000000000E4F8                 LDR             X20, [SP,#0x40+var_30]
.text:000000000000E4FC                 MOV             X0, SP  ; this
.text:000000000000E500                 MOV             X1, X19 ; char *
.text:000000000000E504                 BL              ._ZN7android8String16C1EPKc ; android::String16::String16(char const*)
.text:000000000000E508                 LDR             X8, [X20]
.text:000000000000E50C                 MOV             X1, SP
.text:000000000000E510                 MOV             X0, X20
.text:000000000000E514                 LDR             X9, [X8,#0x20]
.text:000000000000E518                 ADD             X8, SP, #0x40+var_38
.text:000000000000E51C                 BLR             X9
.text:000000000000E520                 MOV             X0, SP  ; this
.text:000000000000E524                 BL              ._ZN7android8String16D1Ev ; android::String16::~String16()
.text:000000000000E528                 MOV             X8, SP
.text:000000000000E52C                 ADD             X0, SP, #0x40+var_38
.text:000000000000E530                 BL              sub_9088
.text:000000000000E534                 LDR             X0, [SP,#0x40+var_40]
.text:000000000000E538                 BL              .AIBinder_incStrong
.text:000000000000E53C                 LDR             X19, [SP,#0x40+var_40]
.text:000000000000E540                 CBZ             X19, loc_E558
.text:000000000000E544                 LDR             X8, [X19]
.text:000000000000E548                 MOV             X1, SP  ; void *
.text:000000000000E54C                 LDUR            X8, [X8,#-0x18]
.text:000000000000E550                 ADD             X0, X19, X8 ; this
.text:000000000000E554                 BL              ._ZNK7android7RefBase9decStrongEPKv ; android::RefBase::decStrong(void const*)
.text:000000000000E558 loc_E558                                ; CODE XREF: AServiceManager_getService+78↑j
.text:000000000000E558                 LDR             X8, [SP,#0x40+var_38]
.text:000000000000E55C                 CBZ             X8, loc_E574
.text:000000000000E560                 LDR             X9, [X8]
.text:000000000000E564                 ADD             X1, SP, #0x40+var_38 ; void *
.text:000000000000E568                 LDUR            X9, [X9,#-0x18]
.text:000000000000E56C                 ADD             X0, X8, X9 ; this
.text:000000000000E570                 BL              ._ZNK7android7RefBase9decStrongEPKv ; android::RefBase::decStrong(void const*)
.text:000000000000E574 loc_E574                                ; CODE XREF: AServiceManager_getService+94↑j
.text:000000000000E574                 LDR             X8, [SP,#0x40+var_30]
.text:000000000000E578                 CBZ             X8, loc_E590
.text:000000000000E57C                 LDR             X9, [X8]
.text:000000000000E580                 ADD             X1, SP, #0x40+var_30 ; void *
.text:000000000000E584                 LDUR            X9, [X9,#-0x18]
.text:000000000000E588                 ADD             X0, X8, X9 ; this
.text:000000000000E58C                 BL              ._ZNK7android7RefBase9decStrongEPKv ; android::RefBase::decStrong(void const*)
.text:000000000000E590 loc_E590                                ; CODE XREF: AServiceManager_getService+24↑j
.text:000000000000E590                                         ; AServiceManager_getService+B0↑j
.text:000000000000E590                 LDR             X8, [X21,#0x28]
.text:000000000000E594                 LDR             X9, [SP,#0x40+var_28]
.text:000000000000E598                 CMP             X8, X9
.text:000000000000E59C                 B.NE            loc_E5B8
.text:000000000000E5A0                 MOV             X0, X19
.text:000000000000E5A4                 LDR             X21, [SP,#0x40+var_20]
.text:000000000000E5A8                 LDP             X29, X30, [SP,#0x40+var_s0]
.text:000000000000E5AC                 LDP             X20, X19, [SP,#0x40+var_10]
.text:000000000000E5B0                 ADD             SP, SP, #0x50 ; 'P'
.text:000000000000E5B4                 RET
.text:000000000000E5B8 ; ---------------------------------------------------------------------------
.text:000000000000E5B8 loc_E5B8                                ; CODE XREF: AServiceManager_getService+D4↑j
.text:000000000000E5B8                 BL              .__stack_chk_fail
.text:000000000000E5B8 ; } // starts at E4C8
.text:000000000000E5B8 ; End of function AServiceManager_getService
.text:000000000000E5B8 ; .text         ends
.got:00000000000109A8 off_109A8       DCQ off_10010           ; DATA XREF: .text:0000000000008534↑o
.got:00000000000109A8                                         ; .text:0000000000008540↑r ...
.got:00000000000109B0 off_109B0       DCQ off_10170           ; DATA XREF: .text:0000000000008570↑o
.got:00000000000109B0                                         ; .text:0000000000008578↑r ...
.bss:0000000000011008 unk_11008       % 1                     ; DATA XREF: .text:0000000000008F04↑o
.bss:0000000000011008                                         ; .text:0000000000008F08↑o ...
