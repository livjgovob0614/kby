.text:0000000000042000 ; ===========================================================================
.text:0000000000042000 ; Segment type: Pure code
.text:0000000000042000                 AREA .text, CODE, ALIGN=3
.text:0000000000042000                 ; ORG 0x42000
.text:0000000000042000                 CODE64
.text:0000000000042000 ; =============== S U B R O U T I N E =======================================
.text:0000000000042000                 EXPORT start
.text:0000000000042000 start                                   ; DATA XREF: LOAD:off_18↑o
.text:0000000000042000                                         ; LOAD:off_C0↑o ...
.text:0000000000042000 ; __unwind {
.text:0000000000042000                 ADRP            X0, #off_57000@PAGE
.text:0000000000042004                 ADD             X0, X0, #off_57000@PAGEOFF ; void *
.text:0000000000042008                 B               .__cxa_finalize
.text:0000000000042008 ; } // starts at 42000
.text:0000000000042008 ; End of function start
.text:0000000000042008 ; ---------------------------------------------------------------------------
.text:000000000004200C                 ALIGN 0x10
.text:0000000000042010 ; [00000004 BYTES: COLLAPSED FUNCTION nullsub_1. PRESS CTRL-NUMPAD+ TO EXPAND]
.text:0000000000042014                 ALIGN 8
.text:0000000000042018 ; [00000004 BYTES: COLLAPSED FUNCTION j_nullsub_1. PRESS CTRL-NUMPAD+ TO EXPAND]
.text:000000000004201C                 ALIGN 0x20
.text:0000000000042020 ; =============== S U B R O U T I N E =======================================
.text:0000000000042020 ; Attributes: bp-based frame
.text:0000000000042020 sub_42020                               ; DATA XREF: .data.rel.ro:EAS_Chorus↓o
.text:0000000000042020 var_20          = -0x20
.text:0000000000042020 var_10          = -0x10
.text:0000000000042020 var_s0          =  0
.text:0000000000042020 ; __unwind {
.text:0000000000042020                 STR             X21, [SP,#-0x10+var_20]!
.text:0000000000042024                 STP             X20, X19, [SP,#0x20+var_10]
.text:0000000000042028                 STP             X29, X30, [SP,#0x20+var_s0]
.text:000000000004202C                 ADD             X29, SP, #0x20
.text:0000000000042030                 LDRB            W8, [X0,#0x18B]
.text:0000000000042034                 MOV             X19, X1
.text:0000000000042038                 CBZ             W8, loc_4211C
.text:000000000004203C                 MOV             W0, #3
.text:0000000000042040                 BL              .EAS_CMEnumFXData
.text:0000000000042044                 MOV             X20, X0
.text:0000000000042048                 CBZ             X0, loc_42130
.text:000000000004204C loc_4204C                               ; CODE XREF: sub_42020+10C↓j
.text:000000000004204C                 MOV             W2, #0x728
.text:0000000000042050                 MOV             X0, X20
.text:0000000000042054                 MOV             W1, WZR
.text:0000000000042058                 BL              .EAS_HWMemSet
.text:000000000004205C                 MOV             X9, #0x7D00
.text:0000000000042060                 STRB            WZR, [X20,#0x704]
.text:0000000000042064                 MOVK            X9, #0x25,LSL#16 ; '%'
.text:0000000000042068                 STR             WZR, [X20,#0x10]
.text:000000000004206C                 MOVK            X9, #0x20,LSL#32 ; ' '
.text:0000000000042070                 STR             XZR, [X20]
.text:0000000000042074                 ADRP            X8, #xmmword_4840@PAGE
.text:0000000000042078                 MOVK            X9, #0x7148,LSL#48
.text:000000000004207C                 MOV             W10, #1
.text:0000000000042080                 LDR             Q0, [X8,#xmmword_4840@PAGEOFF]
.text:0000000000042084                 MOV             W8, #0x7FFF
.text:0000000000042088                 STR             X9, [X20,#0x720]
.text:000000000004208C                 MOV             W9, #0x2B023A
.text:0000000000042094                 STR             W10, [X20,#0x700]
.text:0000000000042098                 ADD             X0, X20, #0x1C ; s
.text:000000000004209C                 STRH            W8, [X20,#0x1A]
.text:00000000000420A0                 MOV             W2, #0x6E4 ; n
.text:00000000000420A4                 STR             Q0, [X20,#0x710]
.text:00000000000420A8                 MOV             W1, WZR ; c
.text:00000000000420AC                 STUR            W9, [X20,#0x16]
.text:00000000000420B0                 ADD             X21, X20, #0x710
.text:00000000000420B4                 BL              .memset
.text:00000000000420B8                 LDRSH           X8, [X20,#0x708]
.text:00000000000420BC                 MOV             W9, #6
.text:00000000000420C0                 MOV             W10, #0x200000
.text:00000000000420C4                 MOV             W11, #0x13
.text:00000000000420C8                 MOV             X0, XZR
.text:00000000000420CC                 MADD            X8, X8, X9, X21
.text:00000000000420D0                 MOV             W9, #0xDC
.text:00000000000420D4                 STR             X10, [X20,#8]
.text:00000000000420D8                 MOV             W10, #0x5622
.text:00000000000420DC                 STRH            W9, [X20,#0x14]
.text:00000000000420E0                 LDRH            W9, [X8,#4]
.text:00000000000420E4                 STRH            W9, [X20,#0x1A]
.text:00000000000420E8                 LDRH            W9, [X8]
.text:00000000000420EC                 STRH            W9, [X20,#0x16]
.text:00000000000420F0                 MUL             W9, W9, W11
.text:00000000000420F4                 LDRSH           X8, [X8,#2]
.text:00000000000420F8                 STRH            W9, [X20,#0x16]
.text:00000000000420FC                 MUL             X8, X8, X10
.text:0000000000042100                 MOV             W10, #0x69 ; 'i'
.text:0000000000042104                 LSR             X8, X8, #5
.text:0000000000042108                 MUL             W8, W8, W10
.text:000000000004210C                 LSR             W8, W8, #0x10
.text:0000000000042110                 STRH            W8, [X20,#0x18]
.text:0000000000042114                 STR             X20, [X19]
.text:0000000000042118                 B               loc_42134
.text:000000000004211C ; ---------------------------------------------------------------------------
.text:000000000004211C loc_4211C                               ; CODE XREF: sub_42020+18↑j
.text:000000000004211C                 LDR             X0, [X0]
.text:0000000000042120                 MOV             W1, #0x728
.text:0000000000042124                 BL              .EAS_HWMalloc
.text:0000000000042128                 MOV             X20, X0
.text:000000000004212C                 CBNZ            X0, loc_4204C
.text:0000000000042130 loc_42130                               ; CODE XREF: sub_42020+28↑j
.text:0000000000042130                 MOV             X0, #0xFFFFFFFFFFFFFFFD
.text:0000000000042134 loc_42134                               ; CODE XREF: sub_42020+F8↑j
.text:0000000000042134                 LDP             X29, X30, [SP,#0x20+var_s0]
.text:0000000000042138                 LDP             X20, X19, [SP,#0x20+var_10]
.text:000000000004213C                 LDR             X21, [SP+0x20+var_20],#0x30
.text:0000000000042140                 RET
.text:0000000000042140 ; } // starts at 42020
.text:0000000000042140 ; End of function sub_42020
.text:0000000000042140 ; ---------------------------------------------------------------------------
.text:0000000000042144                 ALIGN 8
.text:0000000000042148 ; =============== S U B R O U T I N E =======================================
.text:0000000000042148 sub_42148                               ; DATA XREF: .data.rel.ro:0000000000058018↓o
.text:0000000000042148 var_30          = -0x30
.text:0000000000042148 var_20          = -0x20
.text:0000000000042148 var_10          = -0x10
.text:0000000000042148 ; __unwind {
.text:0000000000042148                 STR             X23, [SP,#var_30]!
.text:000000000004214C                 STP             X22, X21, [SP,#0x30+var_20]
.text:0000000000042150                 STP             X20, X19, [SP,#0x30+var_10]
.text:0000000000042154                 LDR             W8, [X0,#0x700]
.text:0000000000042158                 CMP             W8, #1
.text:000000000004215C                 B.EQ            loc_424D4
.text:0000000000042160                 LDRH            W8, [X0,#0x1A]
.text:0000000000042164                 CBZ             W8, loc_424D4
.text:0000000000042168                 LDRH            W8, [X0,#0x708]
.text:000000000004216C                 LDRH            W9, [X0,#0x706]
.text:0000000000042170                 CMP             W8, W9
.text:0000000000042174                 B.EQ            loc_421C4
.text:0000000000042178                 MOV             W9, #6
.text:000000000004217C                 SXTH            X10, W8
.text:0000000000042180                 MADD            X9, X10, X9, X0
.text:0000000000042184                 MOV             W11, #0x5622
.text:0000000000042188                 MOV             W12, #0x13
.text:000000000004218C                 LDRH            W10, [X9,#0x714]
.text:0000000000042190                 STRH            W10, [X0,#0x1A]
.text:0000000000042194                 LDRH            W10, [X9,#0x710]
.text:0000000000042198                 STRH            W10, [X0,#0x16]
.text:000000000004219C                 MUL             W10, W10, W12
.text:00000000000421A0                 LDRSH           X9, [X9,#0x712]
.text:00000000000421A4                 STRH            W8, [X0,#0x706]
.text:00000000000421A8                 STRH            W10, [X0,#0x16]
.text:00000000000421AC                 MUL             X9, X9, X11
.text:00000000000421B0                 MOV             W11, #0x69 ; 'i'
.text:00000000000421B4                 LSR             X9, X9, #5
.text:00000000000421B8                 MUL             W9, W9, W11
.text:00000000000421BC                 LSR             W9, W9, #0x10
.text:00000000000421C0                 STRH            W9, [X0,#0x18]
.text:00000000000421C4 loc_421C4                               ; CODE XREF: sub_42148+2C↑j
.text:00000000000421C4                 MOV             W12, #0xC96F
.text:00000000000421C8                 ADRP            X17, #unk_48AA@PAGE
.text:00000000000421CC                 MOV             X8, XZR
.text:00000000000421D0                 ADD             X9, X0, #0x38E
.text:00000000000421D4                 ADD             X10, X0, #0x1C
.text:00000000000421D8                 MOV             W11, #0x80
.text:00000000000421DC                 MOVK            W12, #0x4A4D,LSL#16
.text:00000000000421E0                 MOV             W13, #0x1B9
.text:00000000000421E4                 MOV             W14, #0xFFFF8000
.text:00000000000421E8                 MOV             W15, #0x7FFF
.text:00000000000421EC                 MOV             W16, #0x7FFFFF
.text:00000000000421F0                 ADD             X17, X17, #unk_48AA@PAGEOFF
.text:00000000000421F4 loc_421F4                               ; CODE XREF: sub_42148+384↓j
.text:00000000000421F4                 LSL             X5, X8, #1
.text:00000000000421F8                 ADD             X4, X1, X5
.text:00000000000421FC                 ADD             X5, X2, X5
.text:0000000000042200                 CMP             X3, #1
.text:0000000000042204                 CBZ             X8, loc_42368
.text:0000000000042208                 B.LT            loc_424C4
.text:000000000004220C                 LDRH            W7, [X0,#0x12]
.text:0000000000042210                 MOV             X6, X3
.text:0000000000042214 loc_42214                               ; CODE XREF: sub_42148+218↓j
.text:0000000000042214                 SXTH            X7, W7
.text:0000000000042218                 LDRSH           W19, [X4],#4
.text:000000000004221C                 STRH            W19, [X9,X7,LSL#1]
.text:0000000000042220                 LDR             W7, [X0,#8]
.text:0000000000042224                 LSR             W20, W7, #0x10
.text:0000000000042228                 NEG             W21, W20
.text:000000000004222C                 SXTH            W22, W21
.text:0000000000042230                 BIC             W21, W21, W22,ASR#15
.text:0000000000042234                 ADD             W21, W21, W20
.text:0000000000042238                 ADD             W21, W21, #0x7F
.text:000000000004223C                 AND             W21, W21, #0xFFFFFF80
.text:0000000000042240                 SUB             W20, W21, W20
.text:0000000000042244                 TST             W20, #0xFFFF
.text:0000000000042248                 CSEL            W21, W11, W20, EQ
.text:000000000004224C                 SXTH            X20, W20
.text:0000000000042250                 ADD             X21, X17, W21,SXTH#1
.text:0000000000042254                 LDRSH           W20, [X17,X20,LSL#1]
.text:0000000000042258                 UBFX            W7, W7, #1, #0xF
.text:000000000004225C                 LDURSH          W21, [X21,#-2]
.text:0000000000042260                 SUB             W21, W21, W20
.text:0000000000042264                 MUL             W7, W21, W7
.text:0000000000042268                 LDRSH           W21, [X0,#0x18]
.text:000000000004226C                 ADD             W7, W20, W7,LSR#15
.text:0000000000042270                 LDRH            W20, [X0,#0x14]
.text:0000000000042274                 SXTH            X7, W7
.text:0000000000042278                 MUL             W7, W21, W7
.text:000000000004227C                 LDRH            W21, [X0,#0x12]
.text:0000000000042280                 LSL             W7, W7, #1
.text:0000000000042284                 ADD             W7, W7, W20,LSL#16
.text:0000000000042288                 LSR             W20, W7, #0x10
.text:000000000004228C                 SUB             W22, W21, W20
.text:0000000000042290                 SXTH            W23, W22
.text:0000000000042294                 BIC             W22, W22, W23,ASR#15
.text:0000000000042298                 ADD             W22, W22, W20
.text:000000000004229C                 ADD             W22, W22, #0x1B8
.text:00000000000422A0                 SUB             W21, W22, W21
.text:00000000000422A4                 AND             W21, W21, #0xFFFF
.text:00000000000422A8                 UBFX            W7, W7, #1, #0xF
.text:00000000000422AC                 UMULL           X23, W21, W12
.text:00000000000422B0                 NEG             W21, W21
.text:00000000000422B4                 LSR             X23, X23, #0x27 ; '''
.text:00000000000422B8                 MADD            W21, W23, W13, W21
.text:00000000000422BC                 ADD             W21, W22, W21
.text:00000000000422C0                 SUB             W20, W21, W20
.text:00000000000422C4                 TST             W20, #0xFFFF
.text:00000000000422C8                 CSEL            W21, W13, W20, EQ
.text:00000000000422CC                 SXTH            X20, W20
.text:00000000000422D0                 ADD             X21, X9, W21,SXTH#1
.text:00000000000422D4                 LDRSH           W20, [X9,X20,LSL#1]
.text:00000000000422D8                 LDURSH          W21, [X21,#-2]
.text:00000000000422DC                 SUB             W21, W21, W20
.text:00000000000422E0                 MUL             W7, W21, W7
.text:00000000000422E4                 LDRSH           W21, [X0,#0x1A]
.text:00000000000422E8                 ADD             W7, W20, W7,LSR#15
.text:00000000000422EC                 SXTH            W7, W7
.text:00000000000422F0                 MUL             W7, W7, W21
.text:00000000000422F4                 ADD             W7, W19, W7,ASR#15
.text:00000000000422F8                 CMN             W7, #8,LSL#12
.text:00000000000422FC                 CSEL            W7, W7, W14, GT
.text:0000000000042300                 CMP             W7, W15
.text:0000000000042304                 CSEL            W7, W7, W15, LT
.text:0000000000042308                 CMN             W7, #8,LSL#12
.text:000000000004230C                 CSEL            W7, W7, W14, GT
.text:0000000000042310                 STRH            W7, [X5],#4
.text:0000000000042314                 LDRH            W7, [X0,#0x12]
.text:0000000000042318                 LDRSH           X19, [X0,#0x16]
.text:000000000004231C                 LDR             X20, [X0,#8]
.text:0000000000042320                 ADD             W21, W7, #1
.text:0000000000042324                 SXTH            W21, W21
.text:0000000000042328                 ADD             X22, X20, X19
.text:000000000004232C                 CMP             W21, #0x1B8
.text:0000000000042330                 CSINC           W7, WZR, W7, GT
.text:0000000000042334                 CMP             X22, X16
.text:0000000000042338                 CSEL            X21, X22, X16, LT
.text:000000000004233C                 MVN             X21, X21
.text:0000000000042340                 STRH            W7, [X0,#0x12]
.text:0000000000042344                 ADD             X20, X20, X21
.text:0000000000042348                 ADD             X19, X20, X19
.text:000000000004234C                 ADD             X19, X19, #0x800,LSL#12
.text:0000000000042350                 AND             X19, X19, #0xFFFFFFFFFF800000
.text:0000000000042354                 SUB             X19, X22, X19
.text:0000000000042358                 SUBS            X6, X6, #1
.text:000000000004235C                 STR             X19, [X0,#8]
.text:0000000000042360                 B.NE            loc_42214
.text:0000000000042364                 B               loc_424C4
.text:0000000000042368 ; ---------------------------------------------------------------------------
.text:0000000000042368 loc_42368                               ; CODE XREF: sub_42148+BC↑j
.text:0000000000042368                 B.LT            loc_424C4
.text:000000000004236C                 LDRH            W7, [X0,#0x10]
.text:0000000000042370                 MOV             X6, X3
.text:0000000000042374 loc_42374                               ; CODE XREF: sub_42148+378↓j
.text:0000000000042374                 SXTH            X7, W7
.text:0000000000042378                 LDRSH           W19, [X4],#4
.text:000000000004237C                 STRH            W19, [X10,X7,LSL#1]
.text:0000000000042380                 LDR             W7, [X0]
.text:0000000000042384                 LSR             W20, W7, #0x10
.text:0000000000042388                 NEG             W21, W20
.text:000000000004238C                 SXTH            W22, W21
.text:0000000000042390                 BIC             W21, W21, W22,ASR#15
.text:0000000000042394                 ADD             W21, W21, W20
.text:0000000000042398                 ADD             W21, W21, #0x7F
.text:000000000004239C                 AND             W21, W21, #0xFFFFFF80
.text:00000000000423A0                 SUB             W20, W21, W20
.text:00000000000423A4                 TST             W20, #0xFFFF
.text:00000000000423A8                 CSEL            W21, W11, W20, EQ
.text:00000000000423AC                 SXTH            X20, W20
.text:00000000000423B0                 ADD             X21, X17, W21,SXTH#1
.text:00000000000423B4                 LDRSH           W20, [X17,X20,LSL#1]
.text:00000000000423B8                 UBFX            W7, W7, #1, #0xF
.text:00000000000423BC                 LDURSH          W21, [X21,#-2]
.text:00000000000423C0                 SUB             W21, W21, W20
.text:00000000000423C4                 MUL             W7, W21, W7
.text:00000000000423C8                 LDRSH           W21, [X0,#0x18]
.text:00000000000423CC                 ADD             W7, W20, W7,LSR#15
.text:00000000000423D0                 LDRH            W20, [X0,#0x14]
.text:00000000000423D4                 SXTH            X7, W7
.text:00000000000423D8                 MUL             W7, W21, W7
.text:00000000000423DC                 LDRH            W21, [X0,#0x10]
.text:00000000000423E0                 LSL             W7, W7, #1
.text:00000000000423E4                 ADD             W7, W7, W20,LSL#16
.text:00000000000423E8                 LSR             W20, W7, #0x10
.text:00000000000423EC                 SUB             W22, W21, W20
.text:00000000000423F0                 SXTH            W23, W22
.text:00000000000423F4                 BIC             W22, W22, W23,ASR#15
.text:00000000000423F8                 ADD             W22, W22, W20
.text:00000000000423FC                 ADD             W22, W22, #0x1B8
.text:0000000000042400                 SUB             W21, W22, W21
.text:0000000000042404                 AND             W21, W21, #0xFFFF
.text:0000000000042408                 UBFX            W7, W7, #1, #0xF
.text:000000000004240C                 UMULL           X23, W21, W12
.text:0000000000042410                 NEG             W21, W21
.text:0000000000042414                 LSR             X23, X23, #0x27 ; '''
.text:0000000000042418                 MADD            W21, W23, W13, W21
.text:000000000004241C                 ADD             W21, W22, W21
.text:0000000000042420                 SUB             W20, W21, W20
.text:0000000000042424                 TST             W20, #0xFFFF
.text:0000000000042428                 CSEL            W21, W13, W20, EQ
.text:000000000004242C                 SXTH            X20, W20
.text:0000000000042430                 ADD             X21, X10, W21,SXTH#1
.text:0000000000042434                 LDRSH           W20, [X10,X20,LSL#1]
.text:0000000000042438                 LDURSH          W21, [X21,#-2]
.text:000000000004243C                 SUB             W21, W21, W20
.text:0000000000042440                 MUL             W7, W21, W7
.text:0000000000042444                 LDRSH           W21, [X0,#0x1A]
.text:0000000000042448                 ADD             W7, W20, W7,LSR#15
.text:000000000004244C                 SXTH            W7, W7
.text:0000000000042450                 MUL             W7, W7, W21
.text:0000000000042454                 ADD             W7, W19, W7,ASR#15
.text:0000000000042458                 CMN             W7, #8,LSL#12
.text:000000000004245C                 CSEL            W7, W7, W14, GT
.text:0000000000042460                 CMP             W7, W15
.text:0000000000042464                 CSEL            W7, W7, W15, LT
.text:0000000000042468                 CMN             W7, #8,LSL#12
.text:000000000004246C                 CSEL            W7, W7, W14, GT
.text:0000000000042470                 STRH            W7, [X5],#4
.text:0000000000042474                 LDRH            W7, [X0,#0x10]
.text:0000000000042478                 LDRSH           X19, [X0,#0x16]
.text:000000000004247C                 LDR             X20, [X0]
.text:0000000000042480                 ADD             W21, W7, #1
.text:0000000000042484                 SXTH            W21, W21
.text:0000000000042488                 ADD             X22, X20, X19
.text:000000000004248C                 CMP             W21, #0x1B8
.text:0000000000042490                 CSINC           W7, WZR, W7, GT
.text:0000000000042494                 CMP             X22, X16
.text:0000000000042498                 CSEL            X21, X22, X16, LT
.text:000000000004249C                 MVN             X21, X21
.text:00000000000424A0                 STRH            W7, [X0,#0x10]
.text:00000000000424A4                 ADD             X20, X20, X21
.text:00000000000424A8                 ADD             X19, X20, X19
.text:00000000000424AC                 ADD             X19, X19, #0x800,LSL#12
.text:00000000000424B0                 AND             X19, X19, #0xFFFFFFFFFF800000
.text:00000000000424B4                 SUB             X19, X22, X19
.text:00000000000424B8                 SUBS            X6, X6, #1
.text:00000000000424BC                 STR             X19, [X0]
.text:00000000000424C0                 B.NE            loc_42374
.text:00000000000424C4 loc_424C4                               ; CODE XREF: sub_42148+C0↑j
.text:00000000000424C4                                         ; sub_42148+21C↑j ...
.text:00000000000424C4                 ADD             X8, X8, #1
.text:00000000000424C8                 CMP             X8, #2
.text:00000000000424CC                 B.NE            loc_421F4
.text:00000000000424D0                 B               loc_424FC
.text:00000000000424D4 ; ---------------------------------------------------------------------------
.text:00000000000424D4 loc_424D4                               ; CODE XREF: sub_42148+14↑j
.text:00000000000424D4                                         ; sub_42148+1C↑j
.text:00000000000424D4                 CMP             X1, X2
.text:00000000000424D8                 B.EQ            loc_424FC
.text:00000000000424DC                 LDP             X20, X19, [SP,#0x30+var_10]
.text:00000000000424E0                 LDP             X22, X21, [SP,#0x30+var_20]
.text:00000000000424E4                 LSL             X8, X3, #2
.text:00000000000424E8                 MOV             X0, X1
.text:00000000000424EC                 MOV             X1, X2
.text:00000000000424F0                 MOV             X2, X8
.text:00000000000424F4                 LDR             X23, [SP+0x30+var_30],#0x30
.text:00000000000424F8                 B               .EAS_HWMemCpy
.text:00000000000424FC ; ---------------------------------------------------------------------------
.text:00000000000424FC loc_424FC                               ; CODE XREF: sub_42148+388↑j
.text:00000000000424FC                                         ; sub_42148+390↑j
.text:00000000000424FC                 LDP             X20, X19, [SP,#0x30+var_10]
.text:0000000000042500                 LDP             X22, X21, [SP,#0x30+var_20]
.text:0000000000042504                 LDR             X23, [SP+0x30+var_30],#0x30
.text:0000000000042508                 RET
.text:0000000000042508 ; } // starts at 42148
.text:0000000000042508 ; End of function sub_42148
.text:0000000000042508 ; ---------------------------------------------------------------------------
.text:000000000004250C                 ALIGN 0x10
.text:0000000000042510 ; =============== S U B R O U T I N E =======================================
.text:0000000000042510 sub_42510                               ; DATA XREF: .data.rel.ro:0000000000058020↓o
.text:0000000000042510 var_10          = -0x10
.text:0000000000042510 ; __unwind {
.text:0000000000042510                 LDRB            W8, [X0,#0x18B]
.text:0000000000042514                 CBZ             W8, loc_42520
.text:0000000000042518                 MOV             X0, XZR
.text:000000000004251C                 RET
.text:0000000000042520 ; ---------------------------------------------------------------------------
.text:0000000000042520 loc_42520                               ; CODE XREF: sub_42510+4↑j
.text:0000000000042520                 STP             X29, X30, [SP,#var_10]!
.text:0000000000042524                 MOV             X29, SP
.text:0000000000042528                 LDR             X0, [X0]
.text:000000000004252C                 BL              .EAS_HWFree
.text:0000000000042530                 LDP             X29, X30, [SP+0x10+var_10],#0x10
.text:0000000000042534                 MOV             X0, XZR
.text:0000000000042538                 RET
.text:0000000000042538 ; } // starts at 42510
.text:0000000000042538 ; End of function sub_42510
.text:0000000000042538 ; ---------------------------------------------------------------------------
.text:000000000004253C                 ALIGN 0x20
.text:0000000000042540 ; =============== S U B R O U T I N E =======================================
.text:0000000000042540 sub_42540                               ; DATA XREF: .data.rel.ro:0000000000058028↓o
.text:0000000000042540 ; FUNCTION CHUNK AT .text:000000000004258C SIZE 0000000C BYTES
.text:0000000000042540 ; __unwind {
.text:0000000000042540                 CMP             X1, #4
.text:0000000000042544                 B.HI            loc_42568
.text:0000000000042548                 ADRP            X8, #unk_48A0@PAGE
.text:000000000004254C                 ADD             X8, X8, #unk_48A0@PAGEOFF
.text:0000000000042550                 ADR             X9, loc_42560
.text:0000000000042554                 LDRB            W10, [X8,X1]
.text:0000000000042558                 ADD             X9, X9, X10,LSL#2
.text:000000000004255C                 BR              X9
.text:0000000000042560 ; ---------------------------------------------------------------------------
.text:0000000000042560 loc_42560                               ; DATA XREF: sub_42540+10↑o
.text:0000000000042560                 LDR             W8, [X0,#0x700]
.text:0000000000042564                 B               loc_4258C
.text:0000000000042568 ; ---------------------------------------------------------------------------
.text:0000000000042568 loc_42568                               ; CODE XREF: sub_42540+4↑j
.text:0000000000042568                 MOV             X0, #0xFFFFFFFFFFFFFFE4
.text:000000000004256C                 RET
.text:000000000004256C ; End of function sub_42540
.text:0000000000042570 ; ---------------------------------------------------------------------------
.text:0000000000042570                 LDRSB           X8, [X0,#0x706]
.text:0000000000042574                 B               loc_4258C
.text:0000000000042578 ; ---------------------------------------------------------------------------
.text:0000000000042578                 LDRSH           X8, [X0,#0x16]
.text:000000000004257C                 B               loc_4258C
.text:0000000000042580 ; ---------------------------------------------------------------------------
.text:0000000000042580                 LDRSH           X8, [X0,#0x18]
.text:0000000000042584                 B               loc_4258C
.text:0000000000042588 ; ---------------------------------------------------------------------------
.text:0000000000042588                 LDRSH           X8, [X0,#0x1A]
.text:000000000004258C ; START OF FUNCTION CHUNK FOR sub_42540
.text:000000000004258C loc_4258C                               ; CODE XREF: sub_42540+24↑j
.text:000000000004258C                                         ; .text:0000000000042574↑j ...
.text:000000000004258C                 MOV             X0, XZR
.text:0000000000042590                 STR             X8, [X2]
.text:0000000000042594                 RET
.text:0000000000042594 ; } // starts at 42540
.text:0000000000042594 ; END OF FUNCTION CHUNK FOR sub_42540
.text:0000000000042598 ; =============== S U B R O U T I N E =======================================
.text:0000000000042598 sub_42598                               ; DATA XREF: .data.rel.ro:0000000000058030↓o
.text:0000000000042598 ; __unwind {
.text:0000000000042598                 CMP             X1, #4
.text:000000000004259C                 B.HI            loc_4261C
.text:00000000000425A0                 ADRP            X8, #unk_48A5@PAGE
.text:00000000000425A4                 ADD             X8, X8, #unk_48A5@PAGEOFF
.text:00000000000425A8                 ADR             X9, loc_425B8
.text:00000000000425AC                 LDRB            W10, [X8,X1]
.text:00000000000425B0                 ADD             X9, X9, X10,LSL#2
.text:00000000000425B4                 BR              X9
.text:00000000000425B8 ; ---------------------------------------------------------------------------
.text:00000000000425B8 loc_425B8                               ; DATA XREF: sub_42598+10↑o
.text:00000000000425B8                 STR             W2, [X0,#0x700]
.text:00000000000425BC                 MOV             X0, XZR
.text:00000000000425C0                 RET
.text:00000000000425C4 ; ---------------------------------------------------------------------------
.text:00000000000425C4                 CMP             X2, #3
.text:00000000000425C8                 B.LS            loc_42628
.text:00000000000425CC                 MOV             X8, #0xFFFFFFFFFFFFFFE4
.text:00000000000425D0                 MOV             X0, X8
.text:00000000000425D4                 RET
.text:00000000000425D8 ; ---------------------------------------------------------------------------
.text:00000000000425D8                 SUB             X8, X2, #0xA
.text:00000000000425DC                 CMP             X8, #0x28 ; '('
.text:00000000000425E0                 B.LS            loc_42638
.text:00000000000425E4                 MOV             X8, #0xFFFFFFFFFFFFFFE4
.text:00000000000425E8                 MOV             X0, X8
.text:00000000000425EC                 RET
.text:00000000000425F0 ; ---------------------------------------------------------------------------
.text:00000000000425F0                 SUB             X8, X2, #0xF
.text:00000000000425F4                 CMP             X8, #0x2D ; '-'
.text:00000000000425F8                 B.LS            loc_42644
.text:00000000000425FC                 MOV             X8, #0xFFFFFFFFFFFFFFE4
.text:0000000000042600                 MOV             X0, X8
.text:0000000000042604                 RET
.text:0000000000042608 ; ---------------------------------------------------------------------------
.text:0000000000042608                 LSR             X8, X2, #0xF
.text:000000000004260C                 CBZ             X8, loc_42650
.text:0000000000042610                 MOV             X8, #0xFFFFFFFFFFFFFFE4
.text:0000000000042614                 MOV             X0, X8
.text:0000000000042618                 RET
.text:000000000004261C ; ---------------------------------------------------------------------------
.text:000000000004261C loc_4261C                               ; CODE XREF: sub_42598+4↑j
.text:000000000004261C                 MOV             X8, #0xFFFFFFFFFFFFFFE4
.text:0000000000042620                 MOV             X0, X8
.text:0000000000042624                 RET
.text:0000000000042628 ; ---------------------------------------------------------------------------
.text:0000000000042628 loc_42628                               ; CODE XREF: sub_42598+30↑j
.text:0000000000042628                 SXTB            W9, W2
.text:000000000004262C                 STRH            W9, [X0,#0x708]
.text:0000000000042630                 MOV             X0, XZR
.text:0000000000042634                 RET
.text:0000000000042638 ; ---------------------------------------------------------------------------
.text:0000000000042638 loc_42638                               ; CODE XREF: sub_42598+48↑j
.text:0000000000042638                 STRH            W2, [X0,#0x16]
.text:000000000004263C                 MOV             X0, XZR
.text:0000000000042640                 RET
.text:0000000000042644 ; ---------------------------------------------------------------------------
.text:0000000000042644 loc_42644                               ; CODE XREF: sub_42598+60↑j
.text:0000000000042644                 STRH            W2, [X0,#0x18]
.text:0000000000042648                 MOV             X0, XZR
.text:000000000004264C                 RET
.text:0000000000042650 ; ---------------------------------------------------------------------------
.text:0000000000042650 loc_42650                               ; CODE XREF: sub_42598+74↑j
.text:0000000000042650                 STRH            W2, [X0,#0x1A]
.text:0000000000042654                 MOV             X0, X8
.text:0000000000042658                 RET
.text:0000000000042658 ; } // starts at 42598
.text:0000000000042658 ; End of function sub_42598
.text:0000000000042658 ; ---------------------------------------------------------------------------
.text:000000000004265C                 ALIGN 0x20
.text:0000000000042660 ; =============== S U B R O U T I N E =======================================
.text:0000000000042660                 EXPORT DLS_MuteVoice
.text:0000000000042660 DLS_MuteVoice                           ; CODE XREF: .DLS_MuteVoice+C↓j
.text:0000000000042660                                         ; DATA XREF: LOAD:0000000000000EA0↑o ...
.text:0000000000042660 ; __unwind {
.text:0000000000042660                 LDR             X9, [X1,#0x10]
.text:0000000000042664                 ADD             X8, X0, X3,LSL#6
.text:0000000000042668                 LDRB            W10, [X2,#9]
.text:000000000004266C                 MOV             W13, #0x58 ; 'X'
.text:0000000000042670                 MOV             W12, #0xB9
.text:0000000000042674                 LDRH            W11, [X8,#0x15A]
.text:0000000000042678                 LDR             X9, [X9,#0x10]
.text:000000000004267C                 AND             W10, W10, W12
.text:0000000000042680                 MADD            X9, X11, X13, X9
.text:0000000000042684                 MOV             W11, #6
.text:0000000000042688                 STRB            W10, [X2,#9]
.text:000000000004268C                 STRB            W11, [X8,#0x158]
.text:0000000000042690                 LDRH            W10, [X9,#0x2C]
.text:0000000000042694                 STRB            W11, [X8,#0x159]
.text:0000000000042698                 STRH            W10, [X8,#0x154]
.text:000000000004269C                 LDRH            W9, [X9,#0x24]
.text:00000000000426A0                 STRH            W9, [X8,#0x156]
.text:00000000000426A4                 RET
.text:00000000000426A4 ; } // starts at 42660
.text:00000000000426A4 ; End of function DLS_MuteVoice
.text:00000000000426A8 ; =============== S U B R O U T I N E =======================================
.text:00000000000426A8 ; Attributes: bp-based frame
.text:00000000000426A8                 EXPORT DLS_ReleaseVoice
.text:00000000000426A8 DLS_ReleaseVoice                        ; CODE XREF: .DLS_ReleaseVoice+C↓j
.text:00000000000426A8                                         ; DATA XREF: LOAD:stru_C00↑o ...
.text:00000000000426A8 var_20          = -0x20
.text:00000000000426A8 var_10          = -0x10
.text:00000000000426A8 var_s0          =  0
.text:00000000000426A8 ; __unwind {
.text:00000000000426A8                 STP             X22, X21, [SP,#-0x10+var_20]!
.text:00000000000426AC                 STP             X20, X19, [SP,#0x20+var_10]
.text:00000000000426B0                 STP             X29, X30, [SP,#0x20+var_s0]
.text:00000000000426B4                 ADD             X29, SP, #0x20
.text:00000000000426B8                 ADD             X19, X0, X3,LSL#6
.text:00000000000426BC                 LDR             X8, [X1,#0x10]
.text:00000000000426C0                 ADD             X22, X19, #0x158
.text:00000000000426C4                 LDRB            W9, [X19,#0x158]
.text:00000000000426C8                 LDR             X20, [X8,#0x10]
.text:00000000000426CC                 LDRH            W21, [X19,#0x15A]
.text:00000000000426D0                 CMP             W9, #2
.text:00000000000426D4                 B.NE            loc_426EC
.text:00000000000426D8                 LDRSH           X0, [X19,#0x150]
.text:00000000000426DC                 BL              .EAS_flog2
.text:00000000000426E0                 LSL             W8, W0, #1
.text:00000000000426E4                 ADD             W8, W8, #0x800
.text:00000000000426E8                 STRH            W8, [X19,#0x150]
.text:00000000000426EC loc_426EC                               ; CODE XREF: DLS_ReleaseVoice+2C↑j
.text:00000000000426EC                 MOV             W8, #0x58 ; 'X'
.text:00000000000426F0                 MOV             W9, #6
.text:00000000000426F4                 MADD            X8, X21, X8, X20
.text:00000000000426F8                 STRB            W9, [X22]
.text:00000000000426FC                 LDRH            W10, [X8,#0x12]
.text:0000000000042700                 STRB            W9, [X19,#0x159]
.text:0000000000042704                 STRH            W10, [X19,#0x154]
.text:0000000000042708                 LDRH            W8, [X8,#0x24]
.text:000000000004270C                 STRH            W8, [X19,#0x156]
.text:0000000000042710                 LDP             X29, X30, [SP,#0x20+var_s0]
.text:0000000000042714                 LDP             X20, X19, [SP,#0x20+var_10]
.text:0000000000042718                 LDP             X22, X21, [SP+0x20+var_20],#0x30
.text:000000000004271C                 RET
.text:000000000004271C ; } // starts at 426A8
.text:000000000004271C ; End of function DLS_ReleaseVoice
.text:0000000000042720 ; =============== S U B R O U T I N E =======================================
.text:0000000000042720                 EXPORT DLS_SustainPedal
.text:0000000000042720 DLS_SustainPedal                        ; CODE XREF: .DLS_SustainPedal+C↓j
.text:0000000000042720                                         ; DATA XREF: LOAD:0000000000001068↑o ...
.text:0000000000042720 ; __unwind {
.text:0000000000042720                 LDR             X9, [X1,#0x10]
.text:0000000000042724                 ADD             X8, X0, X4,LSL#6
.text:0000000000042728                 MOV             W11, #0x58 ; 'X'
.text:000000000004272C                 LDRH            W10, [X8,#0x15A]
.text:0000000000042730                 LDR             X9, [X9,#0x10]
.text:0000000000042734                 NOP
.text:0000000000042738                 MADD            X9, X10, X11, X9
.text:000000000004273C                 LDRSH           W10, [X8,#0x150]
.text:0000000000042740                 LDRSH           W9, [X9,#0x10]
.text:0000000000042744                 CMP             W10, W9
.text:0000000000042748                 B.LT            locret_42768
.text:000000000004274C                 MOV             W9, #4
.text:0000000000042750                 STRB            W9, [X8,#0x158]
.text:0000000000042754                 MOV             W9, #2
.text:0000000000042758                 LDRB            W8, [X2,#9]
.text:000000000004275C                 STRB            W9, [X2,#8]
.text:0000000000042760                 ORR             W8, W8, #2
.text:0000000000042764                 STRB            W8, [X2,#9]
.text:0000000000042768 locret_42768                            ; CODE XREF: DLS_SustainPedal+28↑j
.text:0000000000042768                 RET
.text:0000000000042768 ; } // starts at 42720
.text:0000000000042768 ; End of function DLS_SustainPedal
.text:0000000000042768 ; ---------------------------------------------------------------------------
.text:000000000004276C                 ALIGN 0x10
.text:0000000000042770 ; =============== S U B R O U T I N E =======================================
.text:0000000000042770 ; Attributes: bp-based frame
.text:0000000000042770                 EXPORT DLS_StartVoice
.text:0000000000042770 DLS_StartVoice                          ; CODE XREF: .DLS_StartVoice+C↓j
.text:0000000000042770                                         ; DATA XREF: LOAD:0000000000001A58↑o ...
.text:0000000000042770 var_90          = -0x90
.text:0000000000042770 var_80          = -0x80
.text:0000000000042770 var_78          = -0x78
.text:0000000000042770 var_70          = -0x70
.text:0000000000042770 var_68          = -0x68
.text:0000000000042770 var_60          = -0x60
.text:0000000000042770 var_58          = -0x58
.text:0000000000042770 var_50          = -0x50
.text:0000000000042770 var_40          = -0x40
.text:0000000000042770 var_30          = -0x30
.text:0000000000042770 var_20          = -0x20
.text:0000000000042770 var_10          = -0x10
.text:0000000000042770 var_s0          =  0
.text:0000000000042770 ; __unwind {
.text:0000000000042770                 SUB             SP, SP, #0xA0
.text:0000000000042774                 STP             X28, X27, [SP,#0x90+var_50]
.text:0000000000042778                 STP             X26, X25, [SP,#0x90+var_40]
.text:000000000004277C                 STP             X24, X23, [SP,#0x90+var_30]
.text:0000000000042780                 STP             X22, X21, [SP,#0x90+var_20]
.text:0000000000042784                 STP             X20, X19, [SP,#0x90+var_10]
.text:0000000000042788                 STP             X29, X30, [SP,#0x90+var_s0]
.text:000000000004278C                 ADD             X29, SP, #0x90
.text:0000000000042790                 LDR             X8, [X1,#0x10]
.text:0000000000042794                 AND             X10, X4, #0x3FFF
.text:0000000000042798                 ADD             X22, X0, X3,LSL#6
.text:000000000004279C                 MOV             W11, #0x58 ; 'X'
.text:00000000000427A0                 ADD             X23, X22, #0x150
.text:00000000000427A4                 LDR             X9, [X8,#8]
.text:00000000000427A8                 MOV             W8, #0x28 ; '('
.text:00000000000427AC                 ADD             X27, X22, #0x154
.text:00000000000427B0                 MOV             X21, X2
.text:00000000000427B4                 ADD             X12, X22, #0x120
.text:00000000000427B8                 MADD            X8, X10, X8, X9
.text:00000000000427BC                 STP             X10, X9, [SP,#0x90+var_90]
.text:00000000000427C0                 ADD             X4, X22, #0x158
.text:00000000000427C4                 MOV             X0, X2
.text:00000000000427C8                 MOV             X3, X27
.text:00000000000427CC                 STP             X8, X1, [SP,#0x90+var_60]
.text:00000000000427D0                 LDRH            W8, [X8,#0x1A]
.text:00000000000427D4                 LDRB            W9, [X2,#0xA]
.text:00000000000427D8                 MOV             X2, X23
.text:00000000000427DC                 STRH            W8, [X22,#0x15A]
.text:00000000000427E0                 LDR             X10, [X1,#0x10]
.text:00000000000427E4                 AND             X9, X9, #0xF
.text:00000000000427E8                 ADD             X9, X1, X9,LSL#5
.text:00000000000427EC                 LDR             X10, [X10,#0x10]
.text:00000000000427F0                 STP             X4, X12, [SP,#0x90+var_80]
.text:00000000000427F4                 NOP
.text:00000000000427F8                 MADD            X24, X8, X11, X10
.text:00000000000427FC                 ADD             X8, X9, #0x18
.text:0000000000042800                 ADD             X26, X24, #8
.text:0000000000042804                 MOV             X1, X26
.text:0000000000042808                 STP             X8, X9, [SP,#0x90+var_70]
.text:000000000004280C                 STRB            WZR, [X22,#0x158]
.text:0000000000042810                 BL              sub_42968
.text:0000000000042814                 ADD             X28, X22, #0x159
.text:0000000000042818                 STRB            WZR, [X22,#0x159]
.text:000000000004281C                 ADD             X19, X24, #0x1A
.text:0000000000042820                 ADD             X25, X22, #0x152
.text:0000000000042824                 ADD             X20, X22, #0x156
.text:0000000000042828                 MOV             X0, X21
.text:000000000004282C                 MOV             X1, X19
.text:0000000000042830                 MOV             X2, X25
.text:0000000000042834                 MOV             X3, X20
.text:0000000000042838                 MOV             X4, X28
.text:000000000004283C                 BL              sub_42968
.text:0000000000042840                 STRH            WZR, [X22,#0x148]
.text:0000000000042844                 MOV             X0, X21
.text:0000000000042848                 LDRH            W8, [X24,#2]
.text:000000000004284C                 MOV             X1, X26
.text:0000000000042850                 STRH            WZR, [X22,#0x14C]
.text:0000000000042854                 MOV             X2, X23
.text:0000000000042858                 LDR             X4, [SP,#0x90+var_80]
.text:000000000004285C                 MOV             X3, X27
.text:0000000000042860                 STRH            W8, [X22,#0x14A]
.text:0000000000042864                 LDRH            W8, [X24,#6]
.text:0000000000042868                 STRH            W8, [X22,#0x14E]
.text:000000000004286C                 BL              sub_42968
.text:0000000000042870                 MOV             X0, X21
.text:0000000000042874                 MOV             X1, X19
.text:0000000000042878                 LDR             X19, [SP,#0x90+var_78]
.text:000000000004287C                 MOV             X2, X25
.text:0000000000042880                 MOV             X3, X20
.text:0000000000042884                 MOV             X4, X28
.text:0000000000042888                 BL              sub_42968
.text:000000000004288C                 LDR             X20, [SP,#0x90+var_60]
.text:0000000000042890                 MOV             X0, X19
.text:0000000000042894                 LDRB            W4, [X21,#0xC]
.text:0000000000042898                 MOV             X1, X24
.text:000000000004289C                 LDR             X2, [SP,#0x90+var_70]
.text:00000000000428A0                 LDRSH           X3, [X20,#6]
.text:00000000000428A4                 BL              sub_42B10
.text:00000000000428A8                 LDR             X8, [SP,#0x90+var_68]
.text:00000000000428AC                 ADD             X1, X22, #0x140
.text:00000000000428B0                 STRH            W0, [X21,#2]
.text:00000000000428B4                 ADD             X2, X22, #0x142
.text:00000000000428B8                 LDRSB           W9, [X24,#0x56]
.text:00000000000428BC                 LDRB            W8, [X8,#0x2F]
.text:00000000000428C0                 ADD             W8, W8, W9
.text:00000000000428C4                 SUB             W0, W8, #0x40 ; '@'
.text:00000000000428C8                 BL              .EAS_CalcPanControl
.text:00000000000428CC                 LDR             X12, [SP,#0x90+var_58]
.text:00000000000428D0                 MOV             X9, X20
.text:00000000000428D4                 STR             WZR, [X22,#0x144]
.text:00000000000428D8                 MOV             X13, X20
.text:00000000000428DC                 LDR             X8, [X12,#0x10]
.text:00000000000428E0                 LDP             X10, X8, [X8,#0x20]
.text:00000000000428E4                 LDRH            W11, [X9,#0x18]!
.text:00000000000428E8                 LDR             X10, [X10,X11,LSL#3]
.text:00000000000428EC                 ADD             X8, X10, X8
.text:00000000000428F0                 STR             X8, [X22,#0x130]
.text:00000000000428F4                 LDRB            W10, [X20]
.text:00000000000428F8                 TBNZ            W10, #0, loc_4291C
.text:00000000000428FC                 LDR             X10, [X12,#0x10]
.text:0000000000042900                 LDRH            W9, [X9]
.text:0000000000042904                 LDR             X10, [X10,#0x18]
.text:0000000000042908                 LDR             X9, [X10,X9,LSL#3]
.text:000000000004290C                 ADD             X8, X8, X9
.text:0000000000042910                 SUB             X8, X8, #1
.text:0000000000042914                 STR             X8, [X22,#0x128]
.text:0000000000042918                 B               loc_42940
.text:000000000004291C ; ---------------------------------------------------------------------------
.text:000000000004291C loc_4291C                               ; CODE XREF: DLS_StartVoice+188↑j
.text:000000000004291C                 LDP             X11, X10, [SP,#0x90+var_90]
.text:0000000000042920                 MOV             W9, #0x28 ; '('
.text:0000000000042924                 MADD            X9, X11, X9, X10
.text:0000000000042928                 LDR             X10, [X9,#8]
.text:000000000004292C                 ADD             X10, X10, X8
.text:0000000000042930                 STR             X10, [X22,#0x128]
.text:0000000000042934                 LDR             X9, [X9,#0x10]
.text:0000000000042938                 ADD             X8, X8, X9
.text:000000000004293C                 SUB             X8, X8, #1
.text:0000000000042940 loc_42940                               ; CODE XREF: DLS_StartVoice+1A8↑j
.text:0000000000042940                 STR             X8, [X19]
.text:0000000000042944                 MOV             X0, XZR
.text:0000000000042948                 LDP             X29, X30, [SP,#0x90+var_s0]
.text:000000000004294C                 LDP             X20, X19, [SP,#0x90+var_10]
.text:0000000000042950                 LDP             X22, X21, [SP,#0x90+var_20]
.text:0000000000042954                 LDP             X24, X23, [SP,#0x90+var_30]
.text:0000000000042958                 LDP             X26, X25, [SP,#0x90+var_40]
.text:000000000004295C                 LDP             X28, X27, [SP,#0x90+var_50]
.text:0000000000042960                 ADD             SP, SP, #0xA0
.text:0000000000042964                 RET
.text:0000000000042964 ; } // starts at 42770
.text:0000000000042964 ; End of function DLS_StartVoice
.text:0000000000042968 ; =============== S U B R O U T I N E =======================================
.text:0000000000042968 ; Attributes: bp-based frame
.text:0000000000042968 sub_42968                               ; CODE XREF: DLS_StartVoice+A0↑p
.text:0000000000042968                                         ; DLS_StartVoice+CC↑p ...
.text:0000000000042968 var_10          = -0x10
.text:0000000000042968 var_s0          =  0
.text:0000000000042968 ; __unwind {
.text:0000000000042968                 STR             X19, [SP,#-0x10+var_10]!
.text:000000000004296C                 STP             X29, X30, [SP,#0x10+var_s0]
.text:0000000000042970                 ADD             X29, SP, #0x10
.text:0000000000042974                 LDRB            W8, [X4]
.text:0000000000042978                 CMP             W8, #8
.text:000000000004297C                 B.HI            loc_42B04
.text:0000000000042980                 ADRP            X9, #unk_49AA@PAGE
.text:0000000000042984                 ADD             X9, X9, #unk_49AA@PAGEOFF
.text:0000000000042988                 MOV             X19, X3
.text:000000000004298C                 ADR             X10, loc_4299C
.text:0000000000042990                 LDRB            W11, [X9,X8]
.text:0000000000042994                 ADD             X10, X10, X11,LSL#2
.text:0000000000042998                 BR              X10
.text:000000000004299C ; ---------------------------------------------------------------------------
.text:000000000004299C loc_4299C                               ; DATA XREF: sub_42968+24↑o
.text:000000000004299C                 MOV             W8, #1
.text:00000000000429A0                 STRB            W8, [X4]
.text:00000000000429A4                 STRH            WZR, [X2]
.text:00000000000429A8                 LDRH            W8, [X1]
.text:00000000000429AC                 STRH            W8, [X19]
.text:00000000000429B0                 CBNZ            W8, loc_42B04
.text:00000000000429B4                 B               loc_429C0
.text:00000000000429B8 ; ---------------------------------------------------------------------------
.text:00000000000429B8                 LDRH            W8, [X19]
.text:00000000000429BC                 CBNZ            W8, loc_42A14
.text:00000000000429C0 loc_429C0                               ; CODE XREF: sub_42968+4C↑j
.text:00000000000429C0                 MOV             W8, #2
.text:00000000000429C4                 STRB            W8, [X4]
.text:00000000000429C8                 LDRSH           W8, [X1,#2]
.text:00000000000429CC                 CMN             W8, #8,LSL#12
.text:00000000000429D0                 B.NE            loc_42ACC
.text:00000000000429D4                 MOV             W8, #0x7FFF
.text:00000000000429D8                 STRH            W8, [X2]
.text:00000000000429DC                 B               loc_429F0
.text:00000000000429E0 ; ---------------------------------------------------------------------------
.text:00000000000429E0                 LDRSH           X8, [X2]
.text:00000000000429E4                 MOV             W9, #0x7FFF
.text:00000000000429E8                 CMP             X8, X9
.text:00000000000429EC                 B.NE            loc_42A94
.text:00000000000429F0 loc_429F0                               ; CODE XREF: sub_42968+74↑j
.text:00000000000429F0                 MOV             W8, #3
.text:00000000000429F4                 STRB            W8, [X4]
.text:00000000000429F8                 LDRSH           W8, [X1,#4]
.text:00000000000429FC                 CMN             W8, #8,LSL#12
.text:0000000000042A00                 B.NE            loc_42AB0
.text:0000000000042A04                 STRH            WZR, [X19]
.text:0000000000042A08                 B               loc_42A3C
.text:0000000000042A0C ; ---------------------------------------------------------------------------
.text:0000000000042A0C                 LDRH            W8, [X19]
.text:0000000000042A10                 CBZ             W8, loc_42A3C
.text:0000000000042A14 loc_42A14                               ; CODE XREF: sub_42968+54↑j
.text:0000000000042A14                 SUB             W8, W8, #1
.text:0000000000042A18                 STRH            W8, [X19]
.text:0000000000042A1C                 B               loc_42B04
.text:0000000000042A20 ; ---------------------------------------------------------------------------
.text:0000000000042A20                 LDRSH           X8, [X2]
.text:0000000000042A24                 LDRSH           X9, [X19]
.text:0000000000042A28                 SUB             X8, X8, X9
.text:0000000000042A2C                 CMP             X8, #0
.text:0000000000042A30                 B.LE            loc_42AD8
.text:0000000000042A34                 STRH            W8, [X2]
.text:0000000000042A38                 B               loc_42B04
.text:0000000000042A3C ; ---------------------------------------------------------------------------
.text:0000000000042A3C loc_42A3C                               ; CODE XREF: sub_42968+A0↑j
.text:0000000000042A3C                                         ; sub_42968+A8↑j
.text:0000000000042A3C                 MOV             W8, #4
.text:0000000000042A40                 STRB            W8, [X4]
.text:0000000000042A44                 LDRSH           W8, [X1,#6]
.text:0000000000042A48                 CMN             W8, #8,LSL#12
.text:0000000000042A4C                 B.NE            loc_42AE8
.text:0000000000042A50                 LDRSH           W8, [X2]
.text:0000000000042A54                 LDRSH           W9, [X1,#8]
.text:0000000000042A58                 CMP             W8, W9
.text:0000000000042A5C                 B.LE            loc_42A80
.text:0000000000042A60                 LDRSH           X10, [X19]
.text:0000000000042A64                 SXTW            X8, W8
.text:0000000000042A68                 SXTW            X9, W9
.text:0000000000042A6C                 SUB             X8, X8, X10
.text:0000000000042A70                 CMP             X8, X9
.text:0000000000042A74                 CSEL            X8, X8, X9, GT
.text:0000000000042A78                 STRH            W8, [X2]
.text:0000000000042A7C                 B               loc_42B04
.text:0000000000042A80 ; ---------------------------------------------------------------------------
.text:0000000000042A80 loc_42A80                               ; CODE XREF: sub_42968+F4↑j
.text:0000000000042A80                 MOV             W8, #5
.text:0000000000042A84                 STRB            W8, [X4]
.text:0000000000042A88                 LDRH            W8, [X1,#8]
.text:0000000000042A8C                 STRH            W8, [X2]
.text:0000000000042A90                 B               loc_42B04
.text:0000000000042A94 ; ---------------------------------------------------------------------------
.text:0000000000042A94 loc_42A94                               ; CODE XREF: sub_42968+84↑j
.text:0000000000042A94                 LDRSH           X9, [X19]
.text:0000000000042A98                 ADD             X8, X9, X8
.text:0000000000042A9C                 MOV             W9, #0x7FFF
.text:0000000000042AA0                 CMP             X8, X9
.text:0000000000042AA4                 CSEL            X8, X8, X9, LT
.text:0000000000042AA8                 STRH            W8, [X2]
.text:0000000000042AAC                 B               loc_42B04
.text:0000000000042AB0 ; ---------------------------------------------------------------------------
.text:0000000000042AB0 loc_42AB0                               ; CODE XREF: sub_42968+98↑j
.text:0000000000042AB0                 LDRSH           W9, [X1,#0x10]
.text:0000000000042AB4                 LDRB            W10, [X0,#0xB]
.text:0000000000042AB8                 MUL             W9, W10, W9
.text:0000000000042ABC                 ADD             W8, W8, W9,ASR#7
.text:0000000000042AC0                 SXTW            X0, W8
.text:0000000000042AC4                 BL              .ConvertDelay
.text:0000000000042AC8                 B               loc_42B00
.text:0000000000042ACC ; ---------------------------------------------------------------------------
.text:0000000000042ACC loc_42ACC                               ; CODE XREF: sub_42968+68↑j
.text:0000000000042ACC                 LDRSH           W9, [X1,#0xC]
.text:0000000000042AD0                 LDRB            W10, [X0,#0xC]
.text:0000000000042AD4                 B               loc_42AF0
.text:0000000000042AD8 ; ---------------------------------------------------------------------------
.text:0000000000042AD8 loc_42AD8                               ; CODE XREF: sub_42968+C8↑j
.text:0000000000042AD8                 MOV             W8, #8
.text:0000000000042ADC                 STRB            W8, [X4]
.text:0000000000042AE0                 STRH            WZR, [X2]
.text:0000000000042AE4                 B               loc_42B04
.text:0000000000042AE8 ; ---------------------------------------------------------------------------
.text:0000000000042AE8 loc_42AE8                               ; CODE XREF: sub_42968+E4↑j
.text:0000000000042AE8                 LDRSH           W9, [X1,#0xE]
.text:0000000000042AEC                 LDRB            W10, [X0,#0xB]
.text:0000000000042AF0 loc_42AF0                               ; CODE XREF: sub_42968+16C↑j
.text:0000000000042AF0                 MUL             W9, W10, W9
.text:0000000000042AF4                 ADD             W8, W8, W9,ASR#7
.text:0000000000042AF8                 SXTW            X0, W8
.text:0000000000042AFC                 BL              .ConvertRate
.text:0000000000042B00 loc_42B00                               ; CODE XREF: sub_42968+160↑j
.text:0000000000042B00                 STRH            W0, [X19]
.text:0000000000042B04 loc_42B04                               ; CODE XREF: sub_42968+14↑j
.text:0000000000042B04                                         ; sub_42968+48↑j ...
.text:0000000000042B04                 LDP             X29, X30, [SP,#0x10+var_s0]
.text:0000000000042B08                 LDR             X19, [SP+0x10+var_10],#0x20
.text:0000000000042B0C                 RET
.text:0000000000042B0C ; } // starts at 42968
.text:0000000000042B0C ; End of function sub_42968
.text:0000000000042B10 ; =============== S U B R O U T I N E =======================================
.text:0000000000042B10 ; Attributes: bp-based frame
.text:0000000000042B10 sub_42B10                               ; CODE XREF: DLS_StartVoice+134↑p
.text:0000000000042B10                                         ; DLS_UpdateVoice+1C8↓p
.text:0000000000042B10 var_20          = -0x20
.text:0000000000042B10 var_10          = -0x10
.text:0000000000042B10 var_s0          =  0
.text:0000000000042B10 ; __unwind {
.text:0000000000042B10                 STP             X22, X21, [SP,#-0x10+var_20]!
.text:0000000000042B14                 STP             X20, X19, [SP,#0x20+var_10]
.text:0000000000042B18                 STP             X29, X30, [SP,#0x20+var_s0]
.text:0000000000042B1C                 ADD             X29, SP, #0x20
.text:0000000000042B20                 LDRB            W8, [X2,#0x15]
.text:0000000000042B24                 MOV             W19, W4
.text:0000000000042B28                 LDRSH           W9, [X1,#0x3E]
.text:0000000000042B2C                 MOV             X21, X2
.text:0000000000042B30                 LDRSH           W10, [X1,#0x40]
.text:0000000000042B34                 MOV             X20, X1
.text:0000000000042B38                 LDRB            W11, [X2,#0x1B]
.text:0000000000042B3C                 MOV             X22, X0
.text:0000000000042B40                 LDRSH           W12, [X1,#0x3C]
.text:0000000000042B44                 MUL             W8, W8, W9
.text:0000000000042B48                 MUL             W9, W11, W10
.text:0000000000042B4C                 LDRSH           W10, [X0,#0x28]
.text:0000000000042B50                 ADD             W8, W12, W8,ASR#7
.text:0000000000042B54                 ADD             W8, W8, W9,ASR#7
.text:0000000000042B58                 MOV             W9, #0x1102
.text:0000000000042B5C                 MUL             W8, W8, W10
.text:0000000000042B60                 LDRB            W10, [X0,#0x38]
.text:0000000000042B64                 ASR             W8, W8, #0xF
.text:0000000000042B68                 ADD             X8, X3, W8,SXTW
.text:0000000000042B6C                 CMP             W10, #2
.text:0000000000042B70                 AND             X8, X8, X8,ASR#63
.text:0000000000042B74                 MUL             X8, X8, X9
.text:0000000000042B78                 ASR             X0, X8, #8
.text:0000000000042B7C                 B.NE            loc_42B98
.text:0000000000042B80                 BL              .EAS_LogToLinear16
.text:0000000000042B84                 LDRSH           W8, [X22,#0x30]
.text:0000000000042B88                 AND             W9, W0, #0xFFFF
.text:0000000000042B8C                 MUL             W8, W8, W9
.text:0000000000042B90                 ASR             W8, W8, #0xF
.text:0000000000042B94                 B               loc_42BB4
.text:0000000000042B98 ; ---------------------------------------------------------------------------
.text:0000000000042B98 loc_42B98                               ; CODE XREF: sub_42B10+6C↑j
.text:0000000000042B98                 LDRSH           W8, [X22,#0x30]
.text:0000000000042B9C                 MOV             W9, #0xFFFF8001
.text:0000000000042BA0                 ADD             W8, W8, W9
.text:0000000000042BA4                 ASR             W8, W8, #1
.text:0000000000042BA8                 ADD             X0, X0, W8,SXTW
.text:0000000000042BAC                 BL              .EAS_LogToLinear16
.text:0000000000042BB0                 AND             W8, W0, #0xFFFF
.text:0000000000042BB4 loc_42BB4                               ; CODE XREF: sub_42B10+84↑j
.text:0000000000042BB4                 LDRSH           W9, [X21,#8]
.text:0000000000042BB8                 LDRSB           W10, [X20,#0x57]
.text:0000000000042BBC                 MUL             W8, W8, W9
.text:0000000000042BC0                 ASR             W8, W8, #0xF
.text:0000000000042BC4                 TBZ             W10, #0x1F, loc_42BDC
.text:0000000000042BC8                 UBFIZ           W9, W19, #8, #8
.text:0000000000042BCC                 MUL             W9, W9, W9
.text:0000000000042BD0                 LSR             W9, W9, #0xF
.text:0000000000042BD4                 MUL             W8, W8, W9
.text:0000000000042BD8                 ASR             W8, W8, #0xF
.text:0000000000042BDC loc_42BDC                               ; CODE XREF: sub_42B10+B4↑j
.text:0000000000042BDC                 LDP             X29, X30, [SP,#0x20+var_s0]
.text:0000000000042BE0                 LDP             X20, X19, [SP,#0x20+var_10]
.text:0000000000042BE4                 SXTW            X0, W8
.text:0000000000042BE8                 LDP             X22, X21, [SP+0x20+var_20],#0x30
.text:0000000000042BEC                 RET
.text:0000000000042BEC ; } // starts at 42B10
.text:0000000000042BEC ; End of function sub_42B10
.text:0000000000042BF0 ; =============== S U B R O U T I N E =======================================
.text:0000000000042BF0 ; Attributes: bp-based frame
.text:0000000000042BF0                 EXPORT DLS_UpdateVoice
.text:0000000000042BF0 DLS_UpdateVoice                         ; CODE XREF: .DLS_UpdateVoice+C↓j
.text:0000000000042BF0                                         ; DATA XREF: LOAD:0000000000001B78↑o ...
.text:0000000000042BF0 var_100         = -0x100
.text:0000000000042BF0 var_F8          = -0xF8
.text:0000000000042BF0 var_F0          = -0xF0
.text:0000000000042BF0 var_E0          = -0xE0
.text:0000000000042BF0 var_D8          = -0xD8
.text:0000000000042BF0 var_D0          = -0xD0
.text:0000000000042BF0 var_C8          = -0xC8
.text:0000000000042BF0 var_C0          = -0xC0
.text:0000000000042BF0 var_B8          = -0xB8
.text:0000000000042BF0 var_B0          = -0xB0
.text:0000000000042BF0 var_A8          = -0xA8
.text:0000000000042BF0 var_A0          = -0xA0
.text:0000000000042BF0 var_98          = -0x98
.text:0000000000042BF0 var_80          = -0x80
.text:0000000000042BF0 var_70          = -0x70
.text:0000000000042BF0 var_68          = -0x68
.text:0000000000042BF0 var_60          = -0x60
.text:0000000000042BF0 var_50          = -0x50
.text:0000000000042BF0 var_40          = -0x40
.text:0000000000042BF0 var_30          = -0x30
.text:0000000000042BF0 var_20          = -0x20
.text:0000000000042BF0 var_10          = -0x10
.text:0000000000042BF0 var_s0          =  0
.text:0000000000042BF0 ; __unwind {
.text:0000000000042BF0                 SUB             SP, SP, #0x110
.text:0000000000042BF4                 STP             X28, X27, [SP,#0x100+var_50]
.text:0000000000042BF8                 STP             X26, X25, [SP,#0x100+var_40]
.text:0000000000042BFC                 STP             X24, X23, [SP,#0x100+var_30]
.text:0000000000042C00                 STP             X22, X21, [SP,#0x100+var_20]
.text:0000000000042C04                 STP             X20, X19, [SP,#0x100+var_10]
.text:0000000000042C08                 STP             X29, X30, [SP,#0x100+var_s0]
.text:0000000000042C0C                 ADD             X29, SP, #0x100
.text:0000000000042C10                 STP             X4, X5, [SP,#0x100+var_C8]
.text:0000000000042C14                 MRS             X8, #3, c13, c0, #2
.text:0000000000042C18                 STR             X8, [SP,#0x100+var_B8]
.text:0000000000042C1C                 ADD             X20, X0, X3,LSL#6
.text:0000000000042C20                 LDR             X8, [X8,#0x28]
.text:0000000000042C24                 ADD             X12, X20, #0x120
.text:0000000000042C28                 MOV             W11, #0x58 ; 'X'
.text:0000000000042C2C                 MOV             X19, X2
.text:0000000000042C30                 MOV             X28, X1
.text:0000000000042C34                 STUR            X8, [X29,#var_60]
.text:0000000000042C38                 ADD             X3, X20, #0x154
.text:0000000000042C3C                 LDR             X8, [X1,#0x10]
.text:0000000000042C40                 ADD             X4, X20, #0x158
.text:0000000000042C44                 LDRB            W10, [X2,#0xA]
.text:0000000000042C48                 LDRH            W24, [X20,#0x15A]
.text:0000000000042C4C                 STR             X12, [SP,#0x100+var_B0]
.text:0000000000042C50                 LDR             X12, [X8,#0x10]
.text:0000000000042C54                 AND             X10, X10, #0xF
.text:0000000000042C58                 LDRH            W9, [X2]
.text:0000000000042C5C                 ADD             X2, X20, #0x150
.text:0000000000042C60                 STR             X4, [SP,#0x100+var_100]
.text:0000000000042C64                 ADD             X21, X1, X10,LSL#5
.text:0000000000042C68                 MADD            X27, X24, X11, X12
.text:0000000000042C6C                 STP             X12, X0, [SP,#0x100+var_D8]
.text:0000000000042C70                 LDR             X25, [X8,#8]
.text:0000000000042C74                 MOV             X0, X19
.text:0000000000042C78                 ADD             X1, X27, #8
.text:0000000000042C7C                 AND             X22, X9, #0x3FFF
.text:0000000000042C80                 BL              sub_42968
.text:0000000000042C84                 ADD             X1, X27, #0x1A
.text:0000000000042C88                 ADD             X2, X20, #0x152
.text:0000000000042C8C                 ADD             X3, X20, #0x156
.text:0000000000042C90                 ADD             X4, X20, #0x159
.text:0000000000042C94                 MOV             X0, X19
.text:0000000000042C98                 STR             X2, [SP,#0x100+var_E0]
.text:0000000000042C9C                 BL              sub_42968
.text:0000000000042CA0                 LDRH            W1, [X27]
.text:0000000000042CA4                 ADD             X0, X20, #0x148
.text:0000000000042CA8                 STR             X0, [SP,#0x100+var_F8]
.text:0000000000042CAC                 BL              .WT_UpdateLFO
.text:0000000000042CB0                 LDRH            W1, [X27,#4]
.text:0000000000042CB4                 ADD             X0, X20, #0x14C
.text:0000000000042CB8                 BL              .WT_UpdateLFO
.text:0000000000042CBC                 MOV             W8, #0x28 ; '('
.text:0000000000042CC0                 STP             X25, X22, [SP,#0x100+var_F0]
.text:0000000000042CC4                 MOV             X23, X21
.text:0000000000042CC8                 MADD            X8, X22, X8, X25
.text:0000000000042CCC                 LDR             X9, [X23,#0x18]!
.text:0000000000042CD0                 LDRB            W10, [X19,#0xB]
.text:0000000000042CD4                 LDRSH           X11, [X27,#0x44]
.text:0000000000042CD8                 LDRSH           X12, [X27,#0x42]
.text:0000000000042CDC                 LDRSH           X8, [X8,#4]
.text:0000000000042CE0                 MUL             X10, X11, X10
.text:0000000000042CE4                 LDRB            W11, [X23,#0x1C]
.text:0000000000042CE8                 ADD             X9, X9, X12
.text:0000000000042CEC                 ADD             X8, X9, X8
.text:0000000000042CF0                 ADD             X8, X8, X10,ASR#7
.text:0000000000042CF4                 TBNZ            W11, #3, loc_42D04
.text:0000000000042CF8                 LDRSB           X9, [X28,#0x257]
.text:0000000000042CFC                 MOV             W10, #0x64 ; 'd'
.text:0000000000042D00                 MADD            X8, X9, X10, X8
.text:0000000000042D04 loc_42D04                               ; CODE XREF: DLS_UpdateVoice+104↑j
.text:0000000000042D04                 LDR             X26, [SP,#0x100+var_D8]
.text:0000000000042D08                 MOV             W9, #0x58 ; 'X'
.text:0000000000042D0C                 MOV             X25, X24
.text:0000000000042D10                 MADD            X24, X24, X9, X26
.text:0000000000042D14                 LDRSH           W9, [X24,#0x4C]
.text:0000000000042D18                 LDRSH           W10, [X24,#0x4E]
.text:0000000000042D1C                 LDRB            W11, [X21,#0x33]!
.text:0000000000042D20                 MOV             X28, X21
.text:0000000000042D24                 LDRB            W12, [X28,#-6]!
.text:0000000000042D28                 LDRSH           W13, [X24,#0x50]
.text:0000000000042D2C                 MUL             W10, W12, W10
.text:0000000000042D30                 LDRSH           W14, [X24,#0x48]
.text:0000000000042D34                 LDRSH           W15, [X24,#0x4A]
.text:0000000000042D38                 LDRSH           W16, [X24,#0x46]
.text:0000000000042D3C                 ADD             W9, W9, W10,ASR#7
.text:0000000000042D40                 MUL             W13, W11, W13
.text:0000000000042D44                 LDR             X22, [SP,#0x100+var_E0]
.text:0000000000042D48                 MUL             W10, W14, W12
.text:0000000000042D4C                 LDRSH           W12, [X20,#0x148]
.text:0000000000042D50                 MUL             W11, W15, W11
.text:0000000000042D54                 ADD             W9, W9, W13,ASR#7
.text:0000000000042D58                 LDRSH           W13, [X20,#0x14C]
.text:0000000000042D5C                 ADD             W10, W16, W10,ASR#7
.text:0000000000042D60                 ADD             W10, W10, W11,ASR#7
.text:0000000000042D64                 LDRSH           W11, [X24,#0x52]
.text:0000000000042D68                 MUL             W9, W9, W12
.text:0000000000042D6C                 LDRSH           W12, [X22]
.text:0000000000042D70                 MUL             W10, W10, W13
.text:0000000000042D74                 ASR             W9, W9, #0xF
.text:0000000000042D78                 ADD             X8, X8, W9,SXTW
.text:0000000000042D7C                 MUL             W9, W12, W11
.text:0000000000042D80                 ASR             W10, W10, #0xF
.text:0000000000042D84                 ADD             X8, X8, W10,SXTW
.text:0000000000042D88                 ASR             W9, W9, #0xF
.text:0000000000042D8C                 ADD             X0, X8, W9,SXTW
.text:0000000000042D90                 BL              .EAS_Calculate2toX
.text:0000000000042D94                 LDP             X10, X9, [SP,#0x100+var_F0]
.text:0000000000042D98                 MOV             W8, #0x28 ; '('
.text:0000000000042D9C                 LDRB            W4, [X19,#0xC]
.text:0000000000042DA0                 MOV             X1, X27
.text:0000000000042DA4                 STR             X0, [SP,#0x100+var_A0]
.text:0000000000042DA8                 MOV             X2, X23
.text:0000000000042DAC                 MADD            X8, X9, X8, X10
.text:0000000000042DB0                 LDR             X0, [SP,#0x100+var_B0]
.text:0000000000042DB4                 LDRSH           X3, [X8,#6]
.text:0000000000042DB8                 BL              sub_42B10
.text:0000000000042DBC                 LDRSH           X8, [X19,#2]
.text:0000000000042DC0                 MOV             W9, #0x7FFF
.text:0000000000042DC4                 STR             X0, [SP,#0x100+var_A8]
.text:0000000000042DC8                 STR             X8, [SP,#0x100+var_68]
.text:0000000000042DCC                 LDRSH           X8, [X24,#0x2E]
.text:0000000000042DD0                 CMP             X8, X9
.text:0000000000042DD4                 B.NE            loc_42DE0
.text:0000000000042DD8                 STR             XZR, [SP,#0x100+var_98]
.text:0000000000042DDC                 B               loc_42E8C
.text:0000000000042DE0 ; ---------------------------------------------------------------------------
.text:0000000000042DE0 loc_42DE0                               ; CODE XREF: DLS_UpdateVoice+1E4↑j
.text:0000000000042DE0                 MOV             W9, #0x58 ; 'X'
.text:0000000000042DE4                 LDRB            W10, [X28]
.text:0000000000042DE8                 LDRB            W11, [X21]
.text:0000000000042DEC                 ADD             X0, SP, #0x100+var_A8
.text:0000000000042DF0                 MADD            X9, X25, X9, X26
.text:0000000000042DF4                 LDRSH           W12, [X9,#0x32]
.text:0000000000042DF8                 LDRSH           W13, [X9,#0x34]
.text:0000000000042DFC                 LDRSH           W14, [X9,#0x30]
.text:0000000000042E00                 LDRSH           W15, [X9,#0x38]
.text:0000000000042E04                 MUL             W10, W10, W12
.text:0000000000042E08                 LDR             X12, [SP,#0x100+var_F8]
.text:0000000000042E0C                 MUL             W11, W11, W13
.text:0000000000042E10                 LDRSH           W13, [X22]
.text:0000000000042E14                 LDRSH           W16, [X9,#0x3A]
.text:0000000000042E18                 ADD             W10, W14, W10,ASR#7
.text:0000000000042E1C                 LDRB            W14, [X19,#0xB]
.text:0000000000042E20                 LDRSH           W12, [X12]
.text:0000000000042E24                 ADD             W10, W10, W11,ASR#7
.text:0000000000042E28                 LDRB            W11, [X19,#0xC]
.text:0000000000042E2C                 MUL             W14, W16, W14
.text:0000000000042E30                 MUL             W10, W10, W12
.text:0000000000042E34                 LDRSH           W12, [X9,#0x36]
.text:0000000000042E38                 MUL             W11, W15, W11
.text:0000000000042E3C                 ASR             W14, W14, #7
.text:0000000000042E40                 ASR             W10, W10, #0xF
.text:0000000000042E44                 LDRB            W9, [X9,#0x57]
.text:0000000000042E48                 ADD             X8, X8, W10,SXTW
.text:0000000000042E4C                 MUL             W12, W12, W13
.text:0000000000042E50                 ASR             W11, W11, #7
.text:0000000000042E54                 MOV             X10, #0xFFFFFFFFFFFFDE30
.text:0000000000042E58                 ASR             W12, W12, #0xF
.text:0000000000042E5C                 ADD             X8, X8, W12,SXTW
.text:0000000000042E60                 ADD             X8, X8, W11,SXTW
.text:0000000000042E64                 ADD             X8, X8, W14,SXTW
.text:0000000000042E68                 MOV             X13, #0xFFFFFFFFFFFFEE8D
.text:0000000000042E6C                 ADD             X8, X8, X10
.text:0000000000042E70                 CMP             X8, X13
.text:0000000000042E74                 CSEL            X8, X8, X13, GT
.text:0000000000042E78                 MOV             W15, #0x77F
.text:0000000000042E7C                 CMP             X8, #0x77F
.text:0000000000042E80                 CSEL            X1, X8, X15, LT
.text:0000000000042E84                 AND             X2, X9, #0x1F
.text:0000000000042E88                 BL              .WT_SetFilterCoeffs
.text:0000000000042E8C loc_42E8C                               ; CODE XREF: DLS_UpdateVoice+1EC↑j
.text:0000000000042E8C                 LDP             X8, X9, [SP,#0x100+var_D0]
.text:0000000000042E90                 ADD             X8, X8, #0x20 ; ' '
.text:0000000000042E94                 STP             X8, X9, [SP,#0x100+var_80]
.text:0000000000042E98                 LDR             X8, [SP,#0x100+var_C0]
.text:0000000000042E9C                 STR             X8, [SP,#0x100+var_70]
.text:0000000000042EA0                 TBNZ            X8, #0x3F, loc_42EBC ; '?'
.text:0000000000042EA4                 LDR             X8, [X20,#0x128]
.text:0000000000042EA8                 MOV             W9, #0xFFFFFFFF
.text:0000000000042EAC                 CMP             X8, X9
.text:0000000000042EB0                 B.NE            loc_42EC4
.text:0000000000042EB4                 LDR             X20, [SP,#0x100+var_B0]
.text:0000000000042EB8                 B               loc_42EEC
.text:0000000000042EBC ; ---------------------------------------------------------------------------
.text:0000000000042EBC loc_42EBC                               ; CODE XREF: DLS_UpdateVoice+2B0↑j
.text:0000000000042EBC                 MOV             W22, WZR
.text:0000000000042EC0                 B               loc_42F2C
.text:0000000000042EC4 ; ---------------------------------------------------------------------------
.text:0000000000042EC4 loc_42EC4                               ; CODE XREF: DLS_UpdateVoice+2C0↑j
.text:0000000000042EC4                 LDR             X20, [SP,#0x100+var_B0]
.text:0000000000042EC8                 LDR             X9, [X20]
.text:0000000000042ECC                 CMP             X8, X9
.text:0000000000042ED0                 B.NE            loc_42EEC
.text:0000000000042ED4                 ADD             X1, SP, #0x100+var_A8
.text:0000000000042ED8                 MOV             X0, X20
.text:0000000000042EDC                 MOV             W2, WZR
.text:0000000000042EE0                 BL              .WT_CheckSampleEnd
.text:0000000000042EE4                 MOV             W22, W0
.text:0000000000042EE8                 B               loc_42EF0
.text:0000000000042EEC ; ---------------------------------------------------------------------------
.text:0000000000042EEC loc_42EEC                               ; CODE XREF: DLS_UpdateVoice+2C8↑j
.text:0000000000042EEC                                         ; DLS_UpdateVoice+2E0↑j
.text:0000000000042EEC                 MOV             W22, WZR
.text:0000000000042EF0 loc_42EF0                               ; CODE XREF: DLS_UpdateVoice+2F8↑j
.text:0000000000042EF0                 ADD             X1, SP, #0x100+var_A8
.text:0000000000042EF4                 MOV             X0, X20
.text:0000000000042EF8                 BL              .WT_ProcessVoice
.text:0000000000042EFC                 LDRB            W8, [X19,#9]
.text:0000000000042F00                 LDRB            W9, [X19,#8]
.text:0000000000042F04                 LDR             X10, [SP,#0x100+var_A8]
.text:0000000000042F08                 AND             W8, W8, #0xFFFFFFF7
.text:0000000000042F0C                 CMP             W9, #5
.text:0000000000042F10                 STRH            W10, [X19,#2]
.text:0000000000042F14                 STRB            W8, [X19,#9]
.text:0000000000042F18                 B.EQ            loc_42F2C
.text:0000000000042F1C                 LDR             X8, [SP,#0x100+var_100]
.text:0000000000042F20                 LDRB            W8, [X8]
.text:0000000000042F24                 CMP             W8, #8
.text:0000000000042F28                 CSINC           W22, W22, WZR, NE
.text:0000000000042F2C loc_42F2C                               ; CODE XREF: DLS_UpdateVoice+2D0↑j
.text:0000000000042F2C                                         ; DLS_UpdateVoice+328↑j
.text:0000000000042F2C                 LDR             X8, [SP,#0x100+var_B8]
.text:0000000000042F30                 LDR             X8, [X8,#0x28]
.text:0000000000042F34                 LDUR            X9, [X29,#var_60]
.text:0000000000042F38                 CMP             X8, X9
.text:0000000000042F3C                 B.NE            loc_42F64
.text:0000000000042F40                 MOV             W0, W22
.text:0000000000042F44                 LDP             X29, X30, [SP,#0x100+var_s0]
.text:0000000000042F48                 LDP             X20, X19, [SP,#0x100+var_10]
.text:0000000000042F4C                 LDP             X22, X21, [SP,#0x100+var_20]
.text:0000000000042F50                 LDP             X24, X23, [SP,#0x100+var_30]
.text:0000000000042F54                 LDP             X26, X25, [SP,#0x100+var_40]
.text:0000000000042F58                 LDP             X28, X27, [SP,#0x100+var_50]
.text:0000000000042F5C                 ADD             SP, SP, #0x110
.text:0000000000042F60                 RET
.text:0000000000042F64 ; ---------------------------------------------------------------------------
.text:0000000000042F64 loc_42F64                               ; CODE XREF: DLS_UpdateVoice+34C↑j
.text:0000000000042F64                 BL              .__stack_chk_fail
.text:0000000000042F64 ; } // starts at 42BF0
.text:0000000000042F64 ; End of function DLS_UpdateVoice
.text:0000000000042F68 ; =============== S U B R O U T I N E =======================================
.text:0000000000042F68                 EXPORT EAS_flog2
.text:0000000000042F68 EAS_flog2                               ; CODE XREF: .EAS_flog2+C↓j
.text:0000000000042F68                                         ; DATA XREF: LOAD:0000000000000BA0↑o ...
.text:0000000000042F68 ; __unwind {
.text:0000000000042F68                 CBZ             X0, loc_42F7C
.text:0000000000042F6C                 LSR             X8, X0, #0x1F
.text:0000000000042F70                 CBZ             X8, loc_42F84
.text:0000000000042F74                 MOV             W8, #0x7C00
.text:0000000000042F78                 B               loc_42F9C
.text:0000000000042F7C ; ---------------------------------------------------------------------------
.text:0000000000042F7C loc_42F7C                               ; CODE XREF: EAS_flog2↑j
.text:0000000000042F7C                 MOV             X0, #0xFFFFFFFF80000000
.text:0000000000042F80                 RET
.text:0000000000042F84 ; ---------------------------------------------------------------------------
.text:0000000000042F84 loc_42F84                               ; CODE XREF: EAS_flog2+8↑j
.text:0000000000042F84                 MOV             W8, #0x7C00
.text:0000000000042F88 loc_42F88                               ; CODE XREF: EAS_flog2+30↓j
.text:0000000000042F88                 SUBS            X8, X8, #0x400
.text:0000000000042F8C                 UBFX            X9, X0, #0x1E, #0x21 ; '!'
.text:0000000000042F90                 LSL             X0, X0, #1
.text:0000000000042F94                 CBNZ            X9, loc_42F9C
.text:0000000000042F98                 B.NE            loc_42F88
.text:0000000000042F9C loc_42F9C                               ; CODE XREF: EAS_flog2+10↑j
.text:0000000000042F9C                                         ; EAS_flog2+2C↑j
.text:0000000000042F9C                 ADRP            X10, #unk_49B4@PAGE
.text:0000000000042FA0                 UBFX            X9, X0, #0x1B, #4
.text:0000000000042FA4                 ADD             X10, X10, #unk_49B4@PAGEOFF
.text:0000000000042FA8                 ADD             X9, X10, X9,LSL#1
.text:0000000000042FAC                 UBFX            X11, X0, #7, #0x14
.text:0000000000042FB0                 LDRH            W10, [X9,#2]
.text:0000000000042FB4                 LDRH            W9, [X9]
.text:0000000000042FB8                 SUB             X10, X10, X9
.text:0000000000042FBC                 ADD             X8, X8, X9
.text:0000000000042FC0                 MUL             X10, X10, X11
.text:0000000000042FC4                 ADD             X0, X8, X10,LSR#20
.text:0000000000042FC8                 RET
.text:0000000000042FC8 ; } // starts at 42F68
.text:0000000000042FC8 ; End of function EAS_flog2
.text:0000000000042FC8 ; ---------------------------------------------------------------------------
.text:0000000000042FCC                 ALIGN 0x10
.text:0000000000042FD0 ; =============== S U B R O U T I N E =======================================
.text:0000000000042FD0 sub_42FD0                               ; DATA XREF: .data.rel.ro:IMADecoder↓o
.text:0000000000042FD0 ; __unwind {
.text:0000000000042FD0                 MOV             X0, XZR
.text:0000000000042FD4                 STR             XZR, [X1,#0xC0]
.text:0000000000042FD8                 STR             XZR, [X1,#0xE0]
.text:0000000000042FDC                 RET
.text:0000000000042FDC ; } // starts at 42FD0
.text:0000000000042FDC ; End of function sub_42FD0
.text:0000000000042FE0 ; =============== S U B R O U T I N E =======================================
.text:0000000000042FE0 ; Attributes: bp-based frame
.text:0000000000042FE0 sub_42FE0                               ; DATA XREF: .data.rel.ro:0000000000058040↓o
.text:0000000000042FE0 var_2C          = -0x2C
.text:0000000000042FE0 var_28          = -0x28
.text:0000000000042FE0 var_20          = -0x20
.text:0000000000042FE0 var_10          = -0x10
.text:0000000000042FE0 var_s0          =  0
.text:0000000000042FE0 ; __unwind {
.text:0000000000042FE0                 SUB             SP, SP, #0x40
.text:0000000000042FE4                 STR             X21, [SP,#0x30+var_20]
.text:0000000000042FE8                 STP             X20, X19, [SP,#0x30+var_10]
.text:0000000000042FEC                 STP             X29, X30, [SP,#0x30+var_s0]
.text:0000000000042FF0                 ADD             X29, SP, #0x30
.text:0000000000042FF4                 MRS             X21, #3, c13, c0, #2
.text:0000000000042FF8                 MOV             X19, X1
.text:0000000000042FFC                 LDR             X8, [X21,#0x28]
.text:0000000000043000                 STR             X8, [SP,#0x30+var_28]
.text:0000000000043004                 LDRB            W8, [X1,#0x14D]
.text:0000000000043008                 CBZ             W8, loc_430C8
.text:000000000004300C                 ADRP            X10, #imaStepSizeTable_ptr@PAGE
.text:0000000000043010                 LDRB            W8, [X19,#0x146]
.text:0000000000043014                 LDR             X9, [X19,#0xC0]
.text:0000000000043018                 ADRP            X11, #imaIndexTable_ptr@PAGE
.text:000000000004301C                 MOV             X0, XZR
.text:0000000000043020                 LDR             X10, [X10,#imaStepSizeTable_ptr@PAGEOFF]
.text:0000000000043024                 LDR             X11, [X11,#imaIndexTable_ptr@PAGEOFF]
.text:0000000000043028                 LSR             X12, X8, #4
.text:000000000004302C                 LSL             W13, W12, #0x1D
.text:0000000000043030                 SBFX            W14, W12, #1, #1
.text:0000000000043034                 LDRSH           W10, [X10,X9,LSL#1]
.text:0000000000043038                 SBFX            X8, X8, #4, #1
.text:000000000004303C                 LDRSH           X11, [X11,X12,LSL#1]
.text:0000000000043040                 TST             W12, #8
.text:0000000000043044                 MOV             W12, #0x7FFF
.text:0000000000043048                 STRB            WZR, [X19,#0x14D]
.text:000000000004304C                 AND             W13, W10, W13,ASR#31
.text:0000000000043050                 AND             W14, W14, W10,ASR#1
.text:0000000000043054                 AND             W8, W8, W10,ASR#2
.text:0000000000043058                 ADD             W10, W13, W10,ASR#3
.text:000000000004305C                 ADD             W10, W10, W14
.text:0000000000043060                 ADD             W8, W10, W8
.text:0000000000043064                 LDR             X10, [X19,#0xB8]
.text:0000000000043068                 SXTW            X8, W8
.text:000000000004306C                 CINV            X8, X8, NE
.text:0000000000043070                 ADD             X9, X9, X11
.text:0000000000043074                 ADD             X8, X8, X10
.text:0000000000043078                 CMP             X8, X12
.text:000000000004307C                 CSEL            X8, X8, X12, LT
.text:0000000000043080                 MOV             X11, #0xFFFFFFFFFFFF8000
.text:0000000000043084                 BIC             X9, X9, X9,ASR#63
.text:0000000000043088                 CMN             X8, #8,LSL#12
.text:000000000004308C                 MOV             W10, #0x58 ; 'X'
.text:0000000000043090                 CSEL            X8, X8, X11, GT
.text:0000000000043094                 CMP             X9, #0x58 ; 'X'
.text:0000000000043098                 CSEL            X9, X9, X10, LT
.text:000000000004309C                 STRH            W8, [X19,#0xC8]
.text:00000000000430A0                 STP             X8, X9, [X19,#0xB8]
.text:00000000000430A4 loc_430A4                               ; CODE XREF: sub_42FE0+118↓j
.text:00000000000430A4                                         ; sub_42FE0+1D8↓j ...
.text:00000000000430A4                 LDR             X8, [X21,#0x28]
.text:00000000000430A8                 LDR             X9, [SP,#0x30+var_28]
.text:00000000000430AC                 CMP             X8, X9
.text:00000000000430B0                 B.NE            loc_43364
.text:00000000000430B4                 LDP             X29, X30, [SP,#0x30+var_s0]
.text:00000000000430B8                 LDP             X20, X19, [SP,#0x30+var_10]
.text:00000000000430BC                 LDR             X21, [SP,#0x30+var_20]
.text:00000000000430C0                 ADD             SP, SP, #0x40 ; '@'
.text:00000000000430C4                 RET
.text:00000000000430C8 ; ---------------------------------------------------------------------------
.text:00000000000430C8 loc_430C8                               ; CODE XREF: sub_42FE0+28↑j
.text:00000000000430C8                 LDR             X8, [X19,#0x68]
.text:00000000000430CC                 MOV             X20, X0
.text:00000000000430D0                 CBZ             X8, loc_431BC
.text:00000000000430D4 loc_430D4                               ; CODE XREF: sub_42FE0+1E0↓j
.text:00000000000430D4                 LDRH            W9, [X19,#0x140]
.text:00000000000430D8                 CBZ             W9, loc_430E4
.text:00000000000430DC loc_430DC                               ; CODE XREF: sub_42FE0+21C↓j
.text:00000000000430DC                 LDRH            W9, [X19,#0x142]
.text:00000000000430E0                 CBZ             W9, loc_43204
.text:00000000000430E4 loc_430E4                               ; CODE XREF: sub_42FE0+F8↑j
.text:00000000000430E4                                         ; sub_42FE0+220↓j
.text:00000000000430E4                 CBZ             X8, loc_43274
.text:00000000000430E8                 LDR             X0, [X20]
.text:00000000000430EC                 ADD             X2, X19, #0x146
.text:00000000000430F0                 LDR             X1, [X19]
.text:00000000000430F4                 BL              .EAS_HWGetByte
.text:00000000000430F8                 CBNZ            X0, loc_430A4
.text:00000000000430FC                 ADRP            X9, #imaStepSizeTable_ptr@PAGE
.text:0000000000043100                 LDRB            W8, [X19,#0x146]
.text:0000000000043104                 LDR             X11, [X19,#0xC0]
.text:0000000000043108                 ADRP            X10, #imaIndexTable_ptr@PAGE
.text:000000000004310C                 LDR             X9, [X9,#imaStepSizeTable_ptr@PAGEOFF]
.text:0000000000043110                 LDR             X10, [X10,#imaIndexTable_ptr@PAGEOFF]
.text:0000000000043114                 AND             X12, X8, #0xF
.text:0000000000043118                 LSL             W14, W12, #0x1D
.text:000000000004311C                 SBFX            W15, W12, #1, #1
.text:0000000000043120                 LDRSH           W13, [X9,X11,LSL#1]
.text:0000000000043124                 SBFX            W16, W12, #0, #1
.text:0000000000043128                 TST             W12, #8
.text:000000000004312C                 LDRSH           X12, [X10,X12,LSL#1]
.text:0000000000043130                 AND             W14, W13, W14,ASR#31
.text:0000000000043134                 AND             W15, W15, W13,ASR#1
.text:0000000000043138                 AND             W16, W16, W13,ASR#2
.text:000000000004313C                 ADD             W13, W14, W13,ASR#3
.text:0000000000043140                 LDR             X14, [X19,#0xB8]
.text:0000000000043144                 ADD             W13, W13, W15
.text:0000000000043148                 LDR             X15, [X19,#0x68]
.text:000000000004314C                 ADD             W13, W13, W16
.text:0000000000043150                 LDRH            W16, [X19,#0x142]
.text:0000000000043154                 SXTW            X13, W13
.text:0000000000043158                 CINV            X13, X13, NE
.text:000000000004315C                 ADD             X13, X13, X14
.text:0000000000043160                 MOV             W14, #0x7FFF
.text:0000000000043164                 SUB             X15, X15, #1
.text:0000000000043168                 ADD             X12, X11, X12
.text:000000000004316C                 CMP             X13, X14
.text:0000000000043170                 CSEL            X13, X13, X14, LT
.text:0000000000043174                 STR             X15, [X19,#0x68]
.text:0000000000043178                 MOV             X11, #0xFFFFFFFFFFFF8000
.text:000000000004317C                 LDRB            W15, [X19,#0x89]
.text:0000000000043180                 BIC             X12, X12, X12,ASR#63
.text:0000000000043184                 CMN             X13, #8,LSL#12
.text:0000000000043188                 CSEL            X13, X13, X11, GT
.text:000000000004318C                 MOV             W14, #0x58 ; 'X'
.text:0000000000043190                 CMP             X12, #0x58 ; 'X'
.text:0000000000043194                 SUB             W16, W16, #1
.text:0000000000043198                 STRH            W13, [X19,#0xC8]
.text:000000000004319C                 CSEL            X12, X12, X14, LT
.text:00000000000431A0                 STRH            W16, [X19,#0x142]
.text:00000000000431A4                 STP             X13, X12, [X19,#0xB8]
.text:00000000000431A8                 TBNZ            W15, #0, loc_4328C
.text:00000000000431AC                 MOV             W8, #1
.text:00000000000431B0                 MOV             X0, XZR
.text:00000000000431B4                 STRB            W8, [X19,#0x14D]
.text:00000000000431B8                 B               loc_430A4
.text:00000000000431BC ; ---------------------------------------------------------------------------
.text:00000000000431BC loc_431BC                               ; CODE XREF: sub_42FE0+F0↑j
.text:00000000000431BC                 LDR             X8, [X19,#0x50]
.text:00000000000431C0                 CBZ             X8, loc_430D4
.text:00000000000431C4                 LDP             X8, X9, [X19,#0x30]
.text:00000000000431C8                 LDR             X0, [X20]
.text:00000000000431CC                 LDR             X1, [X19]
.text:00000000000431D0                 ADD             X2, X9, X8
.text:00000000000431D4                 BL              .EAS_HWFileSeek
.text:00000000000431D8                 CBNZ            X0, loc_430A4
.text:00000000000431DC                 LDR             X9, [X19,#0x88]
.text:00000000000431E0                 LDR             X8, [X19,#0x70]
.text:00000000000431E4                 STRH            WZR, [X19,#0x142]
.text:00000000000431E8                 AND             X9, X9, #0xFFFFFFFFFEFFFFFF
.text:00000000000431EC                 STR             X8, [X19,#0x40]
.text:00000000000431F0                 STR             X8, [X19,#0x68]
.text:00000000000431F4                 STR             X9, [X19,#0x88]
.text:00000000000431F8                 LDRH            W9, [X19,#0x140]
.text:00000000000431FC                 CBNZ            W9, loc_430DC
.text:0000000000043200                 B               loc_430E4
.text:0000000000043204 ; ---------------------------------------------------------------------------
.text:0000000000043204 loc_43204                               ; CODE XREF: sub_42FE0+100↑j
.text:0000000000043204                 CBZ             X8, loc_43274
.text:0000000000043208                 LDR             X0, [X20]
.text:000000000004320C                 ADD             X2, SP, #0x30+var_2C
.text:0000000000043210                 LDR             X1, [X19]
.text:0000000000043214                 MOV             W3, WZR
.text:0000000000043218                 BL              .EAS_HWGetWord
.text:000000000004321C                 CBNZ            X0, loc_430A4
.text:0000000000043220                 LDRSH           X8, [SP,#0x30+var_2C]
.text:0000000000043224                 ADD             X2, SP, #0x30+var_2C
.text:0000000000043228                 LDR             X1, [X19]
.text:000000000004322C                 MOV             W3, WZR
.text:0000000000043230                 STRH            W8, [X19,#0xC8]
.text:0000000000043234                 STR             X8, [X19,#0xB8]
.text:0000000000043238                 LDR             X0, [X20]
.text:000000000004323C                 BL              .EAS_HWGetWord
.text:0000000000043240                 CBNZ            X0, loc_430A4
.text:0000000000043244                 LDRB            W8, [SP,#0x30+var_2C]
.text:0000000000043248                 LDRB            W9, [X19,#0x89]
.text:000000000004324C                 STR             X8, [X19,#0xC0]
.text:0000000000043250                 TBNZ            W9, #0, loc_4330C
.text:0000000000043254                 LDRH            W8, [X19,#0x140]
.text:0000000000043258                 MOV             X0, XZR
.text:000000000004325C                 LDR             X9, [X19,#0x68]
.text:0000000000043260                 SUB             W8, W8, #4
.text:0000000000043264                 SUB             X9, X9, #4
.text:0000000000043268 loc_43268                               ; CODE XREF: sub_42FE0+380↓j
.text:0000000000043268                 STRH            W8, [X19,#0x142]
.text:000000000004326C                 STR             X9, [X19,#0x68]
.text:0000000000043270                 B               loc_430A4
.text:0000000000043274 ; ---------------------------------------------------------------------------
.text:0000000000043274 loc_43274                               ; CODE XREF: sub_42FE0:loc_430E4↑j
.text:0000000000043274                                         ; sub_42FE0:loc_43204↑j
.text:0000000000043274                 LDRH            W8, [X19,#0xCA]
.text:0000000000043278                 MOV             X0, XZR
.text:000000000004327C                 LDRH            W9, [X19,#0xEA]
.text:0000000000043280                 STRH            W8, [X19,#0xC8]
.text:0000000000043284                 STRH            W9, [X19,#0xE8]
.text:0000000000043288                 B               loc_430A4
.text:000000000004328C ; ---------------------------------------------------------------------------
.text:000000000004328C loc_4328C                               ; CODE XREF: sub_42FE0+1C8↑j
.text:000000000004328C                 LDR             X12, [X19,#0xE0]
.text:0000000000043290                 LSR             X13, X8, #4
.text:0000000000043294                 LSL             W14, W13, #0x1D
.text:0000000000043298                 LDRSH           X10, [X10,X13,LSL#1]
.text:000000000004329C                 TST             W13, #8
.text:00000000000432A0                 SBFX            W13, W13, #1, #1
.text:00000000000432A4                 LDRSH           W9, [X9,X12,LSL#1]
.text:00000000000432A8                 SBFX            X8, X8, #4, #1
.text:00000000000432AC                 MOV             X0, XZR
.text:00000000000432B0                 ADD             X10, X12, X10
.text:00000000000432B4                 MOV             W12, #0x7FFF
.text:00000000000432B8                 AND             W14, W9, W14,ASR#31
.text:00000000000432BC                 AND             W13, W13, W9,ASR#1
.text:00000000000432C0                 AND             W8, W8, W9,ASR#2
.text:00000000000432C4                 ADD             W9, W14, W9,ASR#3
.text:00000000000432C8                 ADD             W9, W9, W13
.text:00000000000432CC                 LDR             X13, [X19,#0xD8]
.text:00000000000432D0                 ADD             W8, W9, W8
.text:00000000000432D4                 SXTW            X8, W8
.text:00000000000432D8                 CINV            X8, X8, NE
.text:00000000000432DC                 ADD             X8, X8, X13
.text:00000000000432E0                 CMP             X8, X12
.text:00000000000432E4                 CSEL            X8, X8, X12, LT
.text:00000000000432E8                 BIC             X10, X10, X10,ASR#63
.text:00000000000432EC                 CMN             X8, #8,LSL#12
.text:00000000000432F0                 MOV             W14, #0x58 ; 'X'
.text:00000000000432F4                 CSEL            X8, X8, X11, GT
.text:00000000000432F8                 CMP             X10, #0x58 ; 'X'
.text:00000000000432FC                 CSEL            X9, X10, X14, LT
.text:0000000000043300                 STRH            W8, [X19,#0xE8]
.text:0000000000043304                 STP             X8, X9, [X19,#0xD8]
.text:0000000000043308                 B               loc_430A4
.text:000000000004330C ; ---------------------------------------------------------------------------
.text:000000000004330C loc_4330C                               ; CODE XREF: sub_42FE0+270↑j
.text:000000000004330C                 LDR             X0, [X20]
.text:0000000000043310                 ADD             X2, SP, #0x30+var_2C
.text:0000000000043314                 LDR             X1, [X19]
.text:0000000000043318                 MOV             W3, WZR
.text:000000000004331C                 BL              .EAS_HWGetWord
.text:0000000000043320                 CBNZ            X0, loc_430A4
.text:0000000000043324                 LDRSH           X8, [SP,#0x30+var_2C]
.text:0000000000043328                 ADD             X2, SP, #0x30+var_2C
.text:000000000004332C                 LDR             X1, [X19]
.text:0000000000043330                 MOV             W3, WZR
.text:0000000000043334                 STRH            W8, [X19,#0xE8]
.text:0000000000043338                 STR             X8, [X19,#0xD8]
.text:000000000004333C                 LDR             X0, [X20]
.text:0000000000043340                 BL              .EAS_HWGetWord
.text:0000000000043344                 CBNZ            X0, loc_430A4
.text:0000000000043348                 LDRH            W8, [X19,#0x140]
.text:000000000004334C                 LDR             X9, [X19,#0x68]
.text:0000000000043350                 LDRB            W10, [SP,#0x30+var_2C]
.text:0000000000043354                 SUB             W8, W8, #8
.text:0000000000043358                 SUB             X9, X9, #8
.text:000000000004335C                 STR             X10, [X19,#0xE0]
.text:0000000000043360                 B               loc_43268
.text:0000000000043364 ; ---------------------------------------------------------------------------
.text:0000000000043364 loc_43364                               ; CODE XREF: sub_42FE0+D0↑j
.text:0000000000043364                 BL              .__stack_chk_fail
.text:0000000000043364 ; } // starts at 42FE0
.text:0000000000043364 ; End of function sub_42FE0
.text:0000000000043368 ; =============== S U B R O U T I N E =======================================
.text:0000000000043368 ; Attributes: bp-based frame
.text:0000000000043368 sub_43368                               ; DATA XREF: .data.rel.ro:0000000000058048↓o
.text:0000000000043368 var_20          = -0x20
.text:0000000000043368 var_18          = -0x18
.text:0000000000043368 var_10          = -0x10
.text:0000000000043368 var_s0          =  0
.text:0000000000043368 ; __unwind {
.text:0000000000043368                 SUB             SP, SP, #0x30
.text:000000000004336C                 STP             X20, X19, [SP,#0x20+var_10]
.text:0000000000043370                 STP             X29, X30, [SP,#0x20+var_s0]
.text:0000000000043374                 ADD             X29, SP, #0x20
.text:0000000000043378                 MRS             X20, #3, c13, c0, #2
.text:000000000004337C                 MOV             X19, X1
.text:0000000000043380                 LDR             X8, [X20,#0x28]
.text:0000000000043384                 STR             X8, [SP,#0x20+var_18]
.text:0000000000043388                 CBZ             X2, loc_4344C
.text:000000000004338C                 LDRH            W8, [X19,#0x140]
.text:0000000000043390                 CBZ             W8, loc_4348C
.text:0000000000043394                 MOV             X9, #0xF7CF
.text:0000000000043398                 LDR             X11, [X19,#0x88]
.text:000000000004339C                 MOVK            X9, #0xE353,LSL#16
.text:00000000000433A0                 MOVK            X9, #0x9BA5,LSL#32
.text:00000000000433A4                 MOVK            X9, #0x20C4,LSL#48
.text:00000000000433A8                 MOV             X10, #0xFFFFFFFFFFFFFC18
.text:00000000000433AC                 SMULH           X9, X2, X9
.text:00000000000433B0                 UBFX            X14, X11, #8, #1
.text:00000000000433B4                 EOR             W14, W14, #1
.text:00000000000433B8                 ASR             X12, X9, #7
.text:00000000000433BC                 ADD             X9, X12, X9,LSR#63
.text:00000000000433C0                 LDRH            W12, [X19,#0x144]
.text:00000000000433C4                 MOV             W13, #0x31 ; '1'
.text:00000000000433C8                 MADD            X10, X9, X10, X2
.text:00000000000433CC                 LSL             W14, W8, W14
.text:00000000000433D0                 MUL             X9, X9, X12
.text:00000000000433D4                 MUL             X10, X10, X12
.text:00000000000433D8                 SUB             W12, W14, #7
.text:00000000000433DC                 LDR             X14, [X19,#0x40]
.text:00000000000433E0                 MUL             X13, X10, X13
.text:00000000000433E4                 ADD             X9, X9, X10,ASR#10
.text:00000000000433E8                 SXTW            X10, W12
.text:00000000000433EC                 ADD             X9, X9, X13,ASR#21
.text:00000000000433F0                 CMP             X9, X14
.text:00000000000433F4                 STR             X9, [SP,#0x20+var_20]
.text:00000000000433F8                 B.LE            loc_43440
.text:00000000000433FC                 LDR             X12, [X19,#0x50]
.text:0000000000043400                 CBZ             X12, loc_43440
.text:0000000000043404                 LDR             X12, [X19,#0x48]
.text:0000000000043408                 AND             X11, X11, #0x100
.text:000000000004340C                 CMP             X11, #0
.text:0000000000043410                 UDIV            X13, X12, X8
.text:0000000000043414                 MSUB            X12, X13, X8, X12
.text:0000000000043418                 LSL             X11, X12, #1
.text:000000000004341C                 SUB             X11, X11, #7
.text:0000000000043420                 SUB             X14, X12, #7
.text:0000000000043424                 CSEL            X11, X11, X14, EQ
.text:0000000000043428                 CMP             X12, #0
.text:000000000004342C                 CSEL            X11, XZR, X11, EQ
.text:0000000000043430                 MADD            X11, X13, X10, X11
.text:0000000000043434                 SDIV            X12, X9, X11
.text:0000000000043438                 MSUB            X9, X12, X11, X9
.text:000000000004343C                 STR             X9, [SP,#0x20+var_20]
.text:0000000000043440 loc_43440                               ; CODE XREF: sub_43368+90↑j
.text:0000000000043440                                         ; sub_43368+98↑j
.text:0000000000043440                 SDIV            X9, X9, X10
.text:0000000000043444                 MUL             X8, X9, X8
.text:0000000000043448                 B               loc_43450
.text:000000000004344C ; ---------------------------------------------------------------------------
.text:000000000004344C loc_4344C                               ; CODE XREF: sub_43368+20↑j
.text:000000000004344C                 MOV             X8, XZR
.text:0000000000043450 loc_43450                               ; CODE XREF: sub_43368+E0↑j
.text:0000000000043450                 MOV             X2, SP
.text:0000000000043454                 STR             X8, [SP,#0x20+var_20]
.text:0000000000043458                 MOV             X1, X19
.text:000000000004345C                 BL              .EAS_PESeek
.text:0000000000043460                 CBNZ            X0, loc_43490
.text:0000000000043464                 LDR             X8, [X19,#0x20]
.text:0000000000043468                 STRH            WZR, [X19,#0x142]
.text:000000000004346C                 STRB            WZR, [X19,#0x14D]
.text:0000000000043470                 CMP             X8, #3
.text:0000000000043474                 B.EQ            loc_43490
.text:0000000000043478                 CMP             X8, #5
.text:000000000004347C                 B.EQ            loc_43490
.text:0000000000043480                 MOV             X0, XZR
.text:0000000000043484                 STR             XZR, [X19,#0x20]
.text:0000000000043488                 B               loc_43490
.text:000000000004348C ; ---------------------------------------------------------------------------
.text:000000000004348C loc_4348C                               ; CODE XREF: sub_43368+28↑j
.text:000000000004348C                 MOV             X0, #0xFFFFFFFFFFFFFFE3
.text:0000000000043490 loc_43490                               ; CODE XREF: sub_43368+F8↑j
.text:0000000000043490                                         ; sub_43368+10C↑j ...
.text:0000000000043490                 LDR             X8, [X20,#0x28]
.text:0000000000043494                 LDR             X9, [SP,#0x20+var_18]
.text:0000000000043498                 CMP             X8, X9
.text:000000000004349C                 B.NE            loc_434B0
.text:00000000000434A0                 LDP             X29, X30, [SP,#0x20+var_s0]
.text:00000000000434A4                 LDP             X20, X19, [SP,#0x20+var_10]
.text:00000000000434A8                 ADD             SP, SP, #0x30 ; '0'
.text:00000000000434AC                 RET
.text:00000000000434B0 ; ---------------------------------------------------------------------------
.text:00000000000434B0 loc_434B0                               ; CODE XREF: sub_43368+134↑j
.text:00000000000434B0                 BL              .__stack_chk_fail
.text:00000000000434B0 ; } // starts at 43368
.text:00000000000434B0 ; End of function sub_43368
.text:00000000000434B0 ; ---------------------------------------------------------------------------
.text:00000000000434B4                 ALIGN 8
.text:00000000000434B8 ; =============== S U B R O U T I N E =======================================
.text:00000000000434B8 ; Attributes: bp-based frame
.text:00000000000434B8 sub_434B8                               ; DATA XREF: .data.rel.ro:EAS_iMelody_Parser↓o
.text:00000000000434B8 var_98          = -0x98
.text:00000000000434B8 var_94          = -0x94
.text:00000000000434B8 var_48          = -0x48
.text:00000000000434B8 var_40          = -0x40
.text:00000000000434B8 var_30          = -0x30
.text:00000000000434B8 var_20          = -0x20
.text:00000000000434B8 var_10          = -0x10
.text:00000000000434B8 var_s0          =  0
.text:00000000000434B8 ; __unwind {
.text:00000000000434B8                 SUB             SP, SP, #0xB0
.text:00000000000434BC                 STP             X26, X25, [SP,#0xA0+var_40]
.text:00000000000434C0                 STP             X24, X23, [SP,#0xA0+var_30]
.text:00000000000434C4                 STP             X22, X21, [SP,#0xA0+var_20]
.text:00000000000434C8                 STP             X20, X19, [SP,#0xA0+var_10]
.text:00000000000434CC                 STP             X29, X30, [SP,#0xA0+var_s0]
.text:00000000000434D0                 ADD             X29, SP, #0xA0
.text:00000000000434D4                 MRS             X24, #3, c13, c0, #2
.text:00000000000434D8                 MOV             X20, X3
.text:00000000000434DC                 LDR             X8, [X24,#0x28]
.text:00000000000434E0                 MOV             X19, X2
.text:00000000000434E4                 MOV             X21, X1
.text:00000000000434E8                 MOV             X22, X0
.text:00000000000434EC                 MOV             W25, WZR
.text:00000000000434F0                 STUR            X8, [X29,#var_48]
.text:00000000000434F4                 ADD             X26, SP, #0xA0+var_94
.text:00000000000434F8                 STR             XZR, [X2]
.text:00000000000434FC                 LDR             X23, [X0]
.text:0000000000043500                 STRB            WZR, [SP,#0xA0+var_94]
.text:0000000000043504 loc_43504                               ; CODE XREF: sub_434B8+84↓j
.text:0000000000043504                 ADD             X2, SP, #0xA0+var_98
.text:0000000000043508                 MOV             X0, X23
.text:000000000004350C                 MOV             X1, X21
.text:0000000000043510                 BL              .EAS_HWGetByte
.text:0000000000043514                 CBNZ            X0, loc_43544
.text:0000000000043518                 LDRB            W8, [SP,#0xA0+var_98]
.text:000000000004351C                 CMP             W8, #0xD
.text:0000000000043520                 B.EQ            loc_43538
.text:0000000000043524                 CMP             W8, #0xA
.text:0000000000043528                 B.EQ            loc_43554
.text:000000000004352C                 ADD             W9, W25, #1
.text:0000000000043530                 STRB            W8, [X26,W25,SXTW]
.text:0000000000043534                 MOV             W25, W9
.text:0000000000043538 loc_43538                               ; CODE XREF: sub_434B8+68↑j
.text:0000000000043538                 CMP             W25, #0x4B ; 'K'
.text:000000000004353C                 B.LT            loc_43504
.text:0000000000043540                 B               loc_43554
.text:0000000000043544 ; ---------------------------------------------------------------------------
.text:0000000000043544 loc_43544                               ; CODE XREF: sub_434B8+5C↑j
.text:0000000000043544                 CMP             W25, #1
.text:0000000000043548                 B.LT            loc_435C0
.text:000000000004354C                 CMP             X0, #3
.text:0000000000043550                 B.NE            loc_435C0
.text:0000000000043554 loc_43554                               ; CODE XREF: sub_434B8+70↑j
.text:0000000000043554                                         ; sub_434B8+88↑j
.text:0000000000043554                 ADD             X9, SP, #0xA0+var_94
.text:0000000000043558                 MOV             X8, XZR
.text:000000000004355C                 STRB            WZR, [X9,W25,SXTW]
.text:0000000000043560                 ADRP            X9, #off_580B8@PAGE ; "BEGIN:IMELODY"
.text:0000000000043564                 ADD             X9, X9, #off_580B8@PAGEOFF ; "BEGIN:IMELODY"
.text:0000000000043568 loc_43568                               ; CODE XREF: sub_434B8+FC↓j
.text:0000000000043568                 LDR             X10, [X9,X8,LSL#3]
.text:000000000004356C                 LDRB            W12, [X10]
.text:0000000000043570                 CBZ             W12, loc_435BC
.text:0000000000043574                 ADD             X10, X10, #1
.text:0000000000043578                 ADD             X11, SP, #0xA0+var_94
.text:000000000004357C loc_4357C                               ; CODE XREF: sub_434B8+EC↓j
.text:000000000004357C                 LDRB            W13, [X11]
.text:0000000000043580                 AND             W12, W12, #0xFF
.text:0000000000043584                 SUB             W14, W13, #0x61 ; 'a'
.text:0000000000043588                 AND             W15, W13, #0xFFFFFFDF
.text:000000000004358C                 CMP             W14, #0x1A
.text:0000000000043590                 CSEL            W13, W15, W13, CC
.text:0000000000043594                 CMP             W12, W13,SXTB
.text:0000000000043598                 B.NE            loc_435AC
.text:000000000004359C                 LDRB            W12, [X10],#1
.text:00000000000435A0                 ADD             X11, X11, #1
.text:00000000000435A4                 CBNZ            W12, loc_4357C
.text:00000000000435A8                 B               loc_435BC
.text:00000000000435AC ; ---------------------------------------------------------------------------
.text:00000000000435AC loc_435AC                               ; CODE XREF: sub_434B8+E0↑j
.text:00000000000435AC                 ADD             X8, X8, #1
.text:00000000000435B0                 CMP             X8, #0xA
.text:00000000000435B4                 B.CC            loc_43568
.text:00000000000435B8                 B               loc_435C0
.text:00000000000435BC ; ---------------------------------------------------------------------------
.text:00000000000435BC loc_435BC                               ; CODE XREF: sub_434B8+B8↑j
.text:00000000000435BC                                         ; sub_434B8+F0↑j
.text:00000000000435BC                 CBZ             W8, loc_435C8
.text:00000000000435C0 loc_435C0                               ; CODE XREF: sub_434B8+90↑j
.text:00000000000435C0                                         ; sub_434B8+98↑j ...
.text:00000000000435C0                 MOV             X0, XZR
.text:00000000000435C4                 B               loc_43624
.text:00000000000435C8 ; ---------------------------------------------------------------------------
.text:00000000000435C8 loc_435C8                               ; CODE XREF: sub_434B8:loc_435BC↑j
.text:00000000000435C8                 LDRB            W8, [X22,#0x18B]
.text:00000000000435CC                 CBZ             W8, loc_4360C
.text:00000000000435D0                 MOV             W0, #0xC
.text:00000000000435D4                 BL              .EAS_CMEnumData
.text:00000000000435D8                 MOV             X22, X0
.text:00000000000435DC                 CBZ             X0, loc_43620
.text:00000000000435E0 loc_435E0                               ; CODE XREF: sub_434B8+164↓j
.text:00000000000435E0                 MOV             W2, #0xC8
.text:00000000000435E4                 MOV             X0, X22
.text:00000000000435E8                 MOV             W1, WZR
.text:00000000000435EC                 BL              .EAS_HWMemSet
.text:00000000000435F0                 MOV             X0, XZR
.text:00000000000435F4                 STR             X21, [X22]
.text:00000000000435F8                 MOV             W8, #6
.text:00000000000435FC                 STR             X20, [X22,#0x10]
.text:0000000000043600                 STRB            W8, [X22,#0x72]
.text:0000000000043604                 STR             X22, [X19]
.text:0000000000043608                 B               loc_43624
.text:000000000004360C ; ---------------------------------------------------------------------------
.text:000000000004360C loc_4360C                               ; CODE XREF: sub_434B8+114↑j
.text:000000000004360C                 LDR             X0, [X22]
.text:0000000000043610                 MOV             W1, #0xC8
.text:0000000000043614                 BL              .EAS_HWMalloc
.text:0000000000043618                 MOV             X22, X0
.text:000000000004361C                 CBNZ            X0, loc_435E0
.text:0000000000043620 loc_43620                               ; CODE XREF: sub_434B8+124↑j
.text:0000000000043620                 MOV             X0, #0xFFFFFFFFFFFFFFFD
.text:0000000000043624 loc_43624                               ; CODE XREF: sub_434B8+10C↑j
.text:0000000000043624                                         ; sub_434B8+150↑j
.text:0000000000043624                 LDR             X8, [X24,#0x28]
.text:0000000000043628                 LDUR            X9, [X29,#var_48]
.text:000000000004362C                 CMP             X8, X9
.text:0000000000043630                 B.NE            loc_43650
.text:0000000000043634                 LDP             X29, X30, [SP,#0xA0+var_s0]
.text:0000000000043638                 LDP             X20, X19, [SP,#0xA0+var_10]
.text:000000000004363C                 LDP             X22, X21, [SP,#0xA0+var_20]
.text:0000000000043640                 LDP             X24, X23, [SP,#0xA0+var_30]
.text:0000000000043644                 LDP             X26, X25, [SP,#0xA0+var_40]
.text:0000000000043648                 ADD             SP, SP, #0xB0
.text:000000000004364C                 RET
.text:0000000000043650 ; ---------------------------------------------------------------------------
.text:0000000000043650 loc_43650                               ; CODE XREF: sub_434B8+178↑j
.text:0000000000043650                 BL              .__stack_chk_fail
.text:0000000000043650 ; } // starts at 434B8
.text:0000000000043650 ; End of function sub_434B8
.text:0000000000043650 ; ---------------------------------------------------------------------------
.text:0000000000043654                 ALIGN 8
.text:0000000000043658 ; =============== S U B R O U T I N E =======================================
.text:0000000000043658 ; Attributes: bp-based frame
.text:0000000000043658 sub_43658                               ; DATA XREF: .data.rel.ro:0000000000058058↓o
.text:0000000000043658 var_10          = -0x10
.text:0000000000043658 var_s0          =  0
.text:0000000000043658 ; __unwind {
.text:0000000000043658                 STP             X20, X19, [SP,#-0x10+var_10]!
.text:000000000004365C                 STP             X29, X30, [SP,#0x10+var_s0]
.text:0000000000043660                 ADD             X29, SP, #0x10
.text:0000000000043664                 LDRB            W8, [X1,#0x72]
.text:0000000000043668                 CMP             W8, #6
.text:000000000004366C                 B.NE            loc_4369C
.text:0000000000043670                 MOV             X19, X1
.text:0000000000043674                 ADD             X1, X1, #8
.text:0000000000043678                 MOV             X20, X0
.text:000000000004367C                 BL              .VMInitMIDI
.text:0000000000043680                 CBNZ            X0, loc_436A0
.text:0000000000043684                 MOV             X0, X20
.text:0000000000043688                 MOV             X1, X19
.text:000000000004368C                 BL              sub_445F0
.text:0000000000043690                 CBNZ            X0, loc_436A0
.text:0000000000043694                 STRB            WZR, [X19,#0x72]
.text:0000000000043698                 B               loc_436A0
.text:000000000004369C ; ---------------------------------------------------------------------------
.text:000000000004369C loc_4369C                               ; CODE XREF: sub_43658+14↑j
.text:000000000004369C                 MOV             X0, #0xFFFFFFFFFFFFFFE1
.text:00000000000436A0 loc_436A0                               ; CODE XREF: sub_43658+28↑j
.text:00000000000436A0                                         ; sub_43658+38↑j ...
.text:00000000000436A0                 LDP             X29, X30, [SP,#0x10+var_s0]
.text:00000000000436A4                 LDP             X20, X19, [SP+0x10+var_10],#0x20
.text:00000000000436A8                 RET
.text:00000000000436A8 ; } // starts at 43658
.text:00000000000436A8 ; End of function sub_43658
.text:00000000000436A8 ; ---------------------------------------------------------------------------
.text:00000000000436AC                 ALIGN 0x10
.text:00000000000436B0 ; =============== S U B R O U T I N E =======================================
.text:00000000000436B0 sub_436B0                               ; DATA XREF: .data.rel.ro:0000000000058060↓o
.text:00000000000436B0 ; __unwind {
.text:00000000000436B0                 LDR             X8, [X1,#0x18]
.text:00000000000436B4                 MOV             X0, XZR
.text:00000000000436B8                 ASR             X8, X8, #8
.text:00000000000436BC                 STR             X8, [X2]
.text:00000000000436C0                 RET
.text:00000000000436C0 ; } // starts at 436B0
.text:00000000000436C0 ; End of function sub_436B0
.text:00000000000436C0 ; ---------------------------------------------------------------------------
.text:00000000000436C4                 ALIGN 8
.text:00000000000436C8 ; =============== S U B R O U T I N E =======================================
.text:00000000000436C8 ; Attributes: bp-based frame
.text:00000000000436C8 sub_436C8                               ; DATA XREF: .data.rel.ro:0000000000058068↓o
.text:00000000000436C8 var_68          = -0x68
.text:00000000000436C8 var_64          = -0x64
.text:00000000000436C8 var_60          = -0x60
.text:00000000000436C8 var_58          = -0x58
.text:00000000000436C8 var_50          = -0x50
.text:00000000000436C8 var_40          = -0x40
.text:00000000000436C8 var_30          = -0x30
.text:00000000000436C8 var_20          = -0x20
.text:00000000000436C8 var_10          = -0x10
.text:00000000000436C8 var_s0          =  0
.text:00000000000436C8 arg_C           =  0x1C
.text:00000000000436C8 ; __unwind {
.text:00000000000436C8                 SUB             SP, SP, #0x80
.text:00000000000436CC                 STP             X28, X27, [SP,#0x70+var_50]
.text:00000000000436D0                 STP             X26, X25, [SP,#0x70+var_40]
.text:00000000000436D4                 STP             X24, X23, [SP,#0x70+var_30]
.text:00000000000436D8                 STP             X22, X21, [SP,#0x70+var_20]
.text:00000000000436DC                 STP             X20, X19, [SP,#0x70+var_10]
.text:00000000000436E0                 STP             X29, X30, [SP,#0x70+var_s0]
.text:00000000000436E4                 ADD             X29, SP, #0x70
.text:00000000000436E8                 MRS             X26, #3, c13, c0, #2
.text:00000000000436EC                 LDR             X8, [X26,#0x28]
.text:00000000000436F0                 STR             X8, [SP,#0x70+var_58]
.text:00000000000436F4                 LDRB            W8, [X1,#0x72]
.text:00000000000436F8                 CMP             W8, #5
.text:00000000000436FC                 B.HI            loc_44314
.text:0000000000043700                 MOV             W21, W2
.text:0000000000043704                 MOV             X19, X1
.text:0000000000043708                 MOV             X20, X0
.text:000000000004370C                 CBZ             W8, loc_43724
.text:0000000000043710                 LDR             X8, [X19,#0x18]
.text:0000000000043714                 CBZ             X8, loc_43734
.text:0000000000043718 loc_43718                               ; CODE XREF: sub_436C8+68↓j
.text:0000000000043718                 LDRB            W3, [X19,#0x77]
.text:000000000004371C                 CBNZ            W3, loc_43768
.text:0000000000043720                 B               loc_437A0
.text:0000000000043724 ; ---------------------------------------------------------------------------
.text:0000000000043724 loc_43724                               ; CODE XREF: sub_436C8+44↑j
.text:0000000000043724                 MOV             W8, #1
.text:0000000000043728                 STRB            W8, [X19,#0x72]
.text:000000000004372C                 LDR             X8, [X19,#0x18]
.text:0000000000043730                 CBNZ            X8, loc_43718
.text:0000000000043734 loc_43734                               ; CODE XREF: sub_436C8+4C↑j
.text:0000000000043734                 LDR             X0, [X20,#0x170]
.text:0000000000043738                 MOV             W3, #0x50 ; 'P'
.text:000000000004373C                 LDR             X1, [X19,#8]
.text:0000000000043740                 MOV             W2, WZR
.text:0000000000043744                 BL              .VMProgramChange
.text:0000000000043748                 LDR             X0, [X20,#0x170]
.text:000000000004374C                 MOV             W2, WZR
.text:0000000000043750                 LDR             X1, [X19,#8]
.text:0000000000043754                 MOV             W3, #7
.text:0000000000043758                 MOV             W4, #0x7F
.text:000000000004375C                 BL              .VMControlChange
.text:0000000000043760                 LDRB            W3, [X19,#0x77]
.text:0000000000043764                 CBZ             W3, loc_437A0
.text:0000000000043768 loc_43768                               ; CODE XREF: sub_436C8+54↑j
.text:0000000000043768                 LDR             X0, [X20,#0x170]
.text:000000000004376C                 MOV             W2, WZR
.text:0000000000043770                 LDR             X1, [X19,#8]
.text:0000000000043774                 MOV             W4, WZR
.text:0000000000043778                 BL              .VMStopNote
.text:000000000004377C                 LDR             X8, [X19,#0x30]
.text:0000000000043780                 STRB            WZR, [X19,#0x77]
.text:0000000000043784                 CBZ             X8, loc_437A0
.text:0000000000043788                 LDR             X9, [X19,#0x18]
.text:000000000004378C                 MOV             X0, XZR
.text:0000000000043790                 STR             XZR, [X19,#0x30]
.text:0000000000043794 loc_43794                               ; CODE XREF: sub_436C8+CD4↓j
.text:0000000000043794                 ADD             X8, X9, X8
.text:0000000000043798                 STR             X8, [X19,#0x18]
.text:000000000004379C                 B               loc_44318
.text:00000000000437A0 ; ---------------------------------------------------------------------------
.text:00000000000437A0 loc_437A0                               ; CODE XREF: sub_436C8+58↑j
.text:00000000000437A0                                         ; sub_436C8+9C↑j ...
.text:00000000000437A0                 ADRP            X28, #off_580B8@PAGE ; "BEGIN:IMELODY"
.text:00000000000437A4                 STR             W21, [SP,#0x70+var_64]
.text:00000000000437A8                 ADD             X27, X19, #0x79 ; 'y'
.text:00000000000437AC                 ADD             X22, X19, #0x38 ; '8'
.text:00000000000437B0                 ADD             X28, X28, #off_580B8@PAGEOFF ; "BEGIN:IMELODY"
.text:00000000000437B4                 B               loc_437C0
.text:00000000000437B8 ; ---------------------------------------------------------------------------
.text:00000000000437B8 loc_437B8                               ; DATA XREF: sub_436C8+220↓o
.text:00000000000437B8                 MOV             W8, #1
.text:00000000000437BC                 STRB            W8, [X19,#0x78]
.text:00000000000437C0 loc_437C0                               ; CODE XREF: sub_436C8+EC↑j
.text:00000000000437C0                                         ; sub_436C8+238↓j ...
.text:00000000000437C0                 LDR             X23, [X20]
.text:00000000000437C4 loc_437C4                               ; CODE XREF: sub_436C8+11C↓j
.text:00000000000437C4                                         ; sub_436C8+124↓j ...
.text:00000000000437C4                 LDRB            W8, [X19,#0x74]
.text:00000000000437C8                 ADD             W9, W8, #1
.text:00000000000437CC                 ADD             X8, X19, X8
.text:00000000000437D0                 STRB            W9, [X19,#0x74]
.text:00000000000437D4                 LDRB            W8, [X8,#0x79]
.text:00000000000437D8                 CBZ             W8, loc_437F4
.text:00000000000437DC                 SUB             W9, W8, #9
.text:00000000000437E0                 CMP             W9, #5
.text:00000000000437E4                 B.CC            loc_437C4
.text:00000000000437E8                 CMP             W8, #0x20 ; ' '
.text:00000000000437EC                 B.EQ            loc_437C4
.text:00000000000437F0                 B               loc_438D4
.text:00000000000437F4 ; ---------------------------------------------------------------------------
.text:00000000000437F4 loc_437F4                               ; CODE XREF: sub_436C8+110↑j
.text:00000000000437F4                 LDR             X24, [X19]
.text:00000000000437F8                 MOV             X0, X23
.text:00000000000437FC                 MOV             X2, X22
.text:0000000000043800                 STRB            WZR, [X19,#0x74]
.text:0000000000043804                 STRB            WZR, [X19,#0x79]
.text:0000000000043808                 MOV             X1, X24
.text:000000000004380C                 BL              .EAS_HWFilePos
.text:0000000000043810                 CBNZ            X0, loc_44300
.text:0000000000043814                 MOV             W25, WZR
.text:0000000000043818                 STRB            WZR, [X27]
.text:000000000004381C loc_4381C                               ; CODE XREF: sub_436C8+18C↓j
.text:000000000004381C                 ADD             X2, SP, #0x70+var_60
.text:0000000000043820                 MOV             X0, X23
.text:0000000000043824                 MOV             X1, X24
.text:0000000000043828                 BL              .EAS_HWGetByte
.text:000000000004382C                 CBNZ            X0, loc_4385C
.text:0000000000043830                 LDRB            W8, [SP,#0x70+var_60]
.text:0000000000043834                 CMP             W8, #0xD
.text:0000000000043838                 B.EQ            loc_43850
.text:000000000004383C                 CMP             W8, #0xA
.text:0000000000043840                 B.EQ            loc_4386C
.text:0000000000043844                 ADD             W9, W25, #1
.text:0000000000043848                 STRB            W8, [X27,W25,SXTW]
.text:000000000004384C                 MOV             W25, W9
.text:0000000000043850 loc_43850                               ; CODE XREF: sub_436C8+170↑j
.text:0000000000043850                 CMP             W25, #0x4B ; 'K'
.text:0000000000043854                 B.LT            loc_4381C
.text:0000000000043858                 B               loc_4386C
.text:000000000004385C ; ---------------------------------------------------------------------------
.text:000000000004385C loc_4385C                               ; CODE XREF: sub_436C8+164↑j
.text:000000000004385C                 CMP             W25, #1
.text:0000000000043860                 B.LT            loc_44300
.text:0000000000043864                 CMP             X0, #3
.text:0000000000043868                 B.NE            loc_44300
.text:000000000004386C loc_4386C                               ; CODE XREF: sub_436C8+178↑j
.text:000000000004386C                                         ; sub_436C8+190↑j
.text:000000000004386C                 MOV             X8, XZR
.text:0000000000043870                 STRB            WZR, [X27,W25,SXTW]
.text:0000000000043874 loc_43874                               ; CODE XREF: sub_436C8+1F8↓j
.text:0000000000043874                 LDR             X9, [X28,X8,LSL#3]
.text:0000000000043878                 LDRB            W11, [X9]
.text:000000000004387C                 CBZ             W11, loc_438C8
.text:0000000000043880                 ADD             X9, X9, #1
.text:0000000000043884                 MOV             X10, X27
.text:0000000000043888 loc_43888                               ; CODE XREF: sub_436C8+1E8↓j
.text:0000000000043888                 LDRB            W12, [X10]
.text:000000000004388C                 AND             W11, W11, #0xFF
.text:0000000000043890                 SUB             W13, W12, #0x61 ; 'a'
.text:0000000000043894                 AND             W14, W12, #0xFFFFFFDF
.text:0000000000043898                 CMP             W13, #0x1A
.text:000000000004389C                 CSEL            W12, W14, W12, CC
.text:00000000000438A0                 CMP             W11, W12,SXTB
.text:00000000000438A4                 B.NE            loc_438B8
.text:00000000000438A8                 LDRB            W11, [X9],#1
.text:00000000000438AC                 ADD             X10, X10, #1
.text:00000000000438B0                 CBNZ            W11, loc_43888
.text:00000000000438B4                 B               loc_438C8
.text:00000000000438B8 ; ---------------------------------------------------------------------------
.text:00000000000438B8 loc_438B8                               ; CODE XREF: sub_436C8+1DC↑j
.text:00000000000438B8                 ADD             X8, X8, #1
.text:00000000000438BC                 CMP             X8, #0xA
.text:00000000000438C0                 B.CC            loc_43874
.text:00000000000438C4                 B               loc_437C4
.text:00000000000438C8 ; ---------------------------------------------------------------------------
.text:00000000000438C8 loc_438C8                               ; CODE XREF: sub_436C8+1B4↑j
.text:00000000000438C8                                         ; sub_436C8+1EC↑j
.text:00000000000438C8                 CMP             W8, #9
.text:00000000000438CC                 B.NE            loc_437C4
.text:00000000000438D0                 B               loc_442FC
.text:00000000000438D4 ; ---------------------------------------------------------------------------
.text:00000000000438D4 loc_438D4                               ; CODE XREF: sub_436C8+128↑j
.text:00000000000438D4                 SXTB            W23, W8
.text:00000000000438D8                 CMP             W23, #0x76 ; 'v'
.text:00000000000438DC                 B.HI            loc_43904
.text:00000000000438E0                 ADRP            X10, #unk_4AA8@PAGE
.text:00000000000438E4                 ADD             X10, X10, #unk_4AA8@PAGEOFF
.text:00000000000438E8                 ADR             X8, loc_437B8
.text:00000000000438EC                 LDRH            W9, [X10,X23,LSL#1]
.text:00000000000438F0                 ADD             X8, X8, X9,LSL#2
.text:00000000000438F4                 BR              X8
.text:00000000000438F8 ; ---------------------------------------------------------------------------
.text:00000000000438F8                 MOV             W8, #0xFF
.text:00000000000438FC                 STRB            W8, [X19,#0x78]
.text:0000000000043900                 B               loc_437C0
.text:0000000000043904 ; ---------------------------------------------------------------------------
.text:0000000000043904 loc_43904                               ; CODE XREF: sub_436C8+214↑j
.text:0000000000043904                 SUB             W8, W23, #0x41 ; 'A'
.text:0000000000043908                 ORR             W9, W23, #0x20
.text:000000000004390C                 CMP             W8, #0x1A
.text:0000000000043910                 CSEL            W2, W9, W23, CC
.text:0000000000043914                 SUB             W8, W2, #0x61 ; 'a'
.text:0000000000043918                 AND             W8, W8, #0xFF
.text:000000000004391C                 CMP             W8, #6
.text:0000000000043920                 B.HI            loc_437C0
.text:0000000000043924                 B               loc_443B0
.text:0000000000043928 ; ---------------------------------------------------------------------------
.text:0000000000043928                 LDR             X8, [X19,#0x40]
.text:000000000004392C                 TBZ             X8, #0x3F, loc_437C0 ; '?'
.text:0000000000043930                 LDR             X8, [X19,#0x38]
.text:0000000000043934                 LDRB            W9, [X19,#0x74]
.text:0000000000043938                 LDR             X10, [X19,#0x18]
.text:000000000004393C                 ADD             X8, X8, X9
.text:0000000000043940                 STP             X8, X10, [X19,#0x40]
.text:0000000000043944                 B               loc_437C0
.text:0000000000043948 ; ---------------------------------------------------------------------------
.text:0000000000043948                 LDR             X8, [X19,#0x48]
.text:000000000004394C                 LDR             X9, [X19,#0x18]
.text:0000000000043950                 CMP             X8, X9
.text:0000000000043954                 B.NE            loc_43E8C
.text:0000000000043958                 MOV             W8, #0xFFFF
.text:000000000004395C                 STRH            W8, [X19,#0x70]
.text:0000000000043960 loc_43960                               ; CODE XREF: sub_436C8+B78↓j
.text:0000000000043960                 MOV             X8, #0xFFFFFFFFFFFFFFFF
.text:0000000000043964                 STR             X8, [X19,#0x40]
.text:0000000000043968                 B               loc_437C0
.text:000000000004396C ; ---------------------------------------------------------------------------
.text:000000000004396C                 LDR             X23, [X20]
.text:0000000000043970 loc_43970                               ; CODE XREF: sub_436C8+2C8↓j
.text:0000000000043970                                         ; sub_436C8+2D0↓j ...
.text:0000000000043970                 LDRB            W8, [X19,#0x74]
.text:0000000000043974                 ADD             W9, W8, #1
.text:0000000000043978                 ADD             X8, X19, X8
.text:000000000004397C                 STRB            W9, [X19,#0x74]
.text:0000000000043980                 LDRB            W8, [X8,#0x79]
.text:0000000000043984                 CBZ             W8, loc_439A0
.text:0000000000043988                 SUB             W9, W8, #9
.text:000000000004398C                 CMP             W9, #5
.text:0000000000043990                 B.CC            loc_43970
.text:0000000000043994                 CMP             W8, #0x20 ; ' '
.text:0000000000043998                 B.EQ            loc_43970
.text:000000000004399C                 B               loc_44088
.text:00000000000439A0 ; ---------------------------------------------------------------------------
.text:00000000000439A0 loc_439A0                               ; CODE XREF: sub_436C8+2BC↑j
.text:00000000000439A0                 LDR             X24, [X19]
.text:00000000000439A4                 MOV             X0, X23
.text:00000000000439A8                 MOV             X2, X22
.text:00000000000439AC                 STRB            WZR, [X19,#0x74]
.text:00000000000439B0                 STRB            WZR, [X19,#0x79]
.text:00000000000439B4                 MOV             X1, X24
.text:00000000000439B8                 BL              .EAS_HWFilePos
.text:00000000000439BC                 CBNZ            X0, loc_44300
.text:00000000000439C0                 MOV             W25, WZR
.text:00000000000439C4                 STRB            WZR, [X27]
.text:00000000000439C8 loc_439C8                               ; CODE XREF: sub_436C8+338↓j
.text:00000000000439C8                 ADD             X2, SP, #0x70+var_60
.text:00000000000439CC                 MOV             X0, X23
.text:00000000000439D0                 MOV             X1, X24
.text:00000000000439D4                 BL              .EAS_HWGetByte
.text:00000000000439D8                 CBNZ            X0, loc_43A08
.text:00000000000439DC                 LDRB            W8, [SP,#0x70+var_60]
.text:00000000000439E0                 CMP             W8, #0xD
.text:00000000000439E4                 B.EQ            loc_439FC
.text:00000000000439E8                 CMP             W8, #0xA
.text:00000000000439EC                 B.EQ            loc_43A18
.text:00000000000439F0                 ADD             W9, W25, #1
.text:00000000000439F4                 STRB            W8, [X27,W25,SXTW]
.text:00000000000439F8                 MOV             W25, W9
.text:00000000000439FC loc_439FC                               ; CODE XREF: sub_436C8+31C↑j
.text:00000000000439FC                 CMP             W25, #0x4B ; 'K'
.text:0000000000043A00                 B.LT            loc_439C8
.text:0000000000043A04                 B               loc_43A18
.text:0000000000043A08 ; ---------------------------------------------------------------------------
.text:0000000000043A08 loc_43A08                               ; CODE XREF: sub_436C8+310↑j
.text:0000000000043A08                 CMP             W25, #1
.text:0000000000043A0C                 B.LT            loc_44300
.text:0000000000043A10                 CMP             X0, #3
.text:0000000000043A14                 B.NE            loc_44300
.text:0000000000043A18 loc_43A18                               ; CODE XREF: sub_436C8+324↑j
.text:0000000000043A18                                         ; sub_436C8+33C↑j
.text:0000000000043A18                 MOV             X8, XZR
.text:0000000000043A1C                 STRB            WZR, [X27,W25,SXTW]
.text:0000000000043A20 loc_43A20                               ; CODE XREF: sub_436C8+3A4↓j
.text:0000000000043A20                 LDR             X9, [X28,X8,LSL#3]
.text:0000000000043A24                 LDRB            W11, [X9]
.text:0000000000043A28                 CBZ             W11, loc_43A74
.text:0000000000043A2C                 ADD             X9, X9, #1
.text:0000000000043A30                 MOV             X10, X27
.text:0000000000043A34 loc_43A34                               ; CODE XREF: sub_436C8+394↓j
.text:0000000000043A34                 LDRB            W12, [X10]
.text:0000000000043A38                 AND             W11, W11, #0xFF
.text:0000000000043A3C                 SUB             W13, W12, #0x61 ; 'a'
.text:0000000000043A40                 AND             W14, W12, #0xFFFFFFDF
.text:0000000000043A44                 CMP             W13, #0x1A
.text:0000000000043A48                 CSEL            W12, W14, W12, CC
.text:0000000000043A4C                 CMP             W11, W12,SXTB
.text:0000000000043A50                 B.NE            loc_43A64
.text:0000000000043A54                 LDRB            W11, [X9],#1
.text:0000000000043A58                 ADD             X10, X10, #1
.text:0000000000043A5C                 CBNZ            W11, loc_43A34
.text:0000000000043A60                 B               loc_43A74
.text:0000000000043A64 ; ---------------------------------------------------------------------------
.text:0000000000043A64 loc_43A64                               ; CODE XREF: sub_436C8+388↑j
.text:0000000000043A64                 ADD             X8, X8, #1
.text:0000000000043A68                 CMP             X8, #0xA
.text:0000000000043A6C                 B.CC            loc_43A20
.text:0000000000043A70                 B               loc_43970
.text:0000000000043A74 ; ---------------------------------------------------------------------------
.text:0000000000043A74 loc_43A74                               ; CODE XREF: sub_436C8+360↑j
.text:0000000000043A74                                         ; sub_436C8+398↑j
.text:0000000000043A74                 CMP             W8, #9
.text:0000000000043A78                 B.NE            loc_43970
.text:0000000000043A7C                 B               loc_442FC
.text:0000000000043A80 ; ---------------------------------------------------------------------------
.text:0000000000043A80                 LDR             X23, [X20]
.text:0000000000043A84                 MOV             W21, WZR
.text:0000000000043A88                 STR             WZR, [SP,#0x70+var_68]
.text:0000000000043A8C                 B               loc_43F44
.text:0000000000043A90 ; ---------------------------------------------------------------------------
.text:0000000000043A90                 LDR             X0, [X20]
.text:0000000000043A94                 MOV             X1, X19
.text:0000000000043A98                 MOV             W2, WZR
.text:0000000000043A9C                 BL              sub_44AB0
.text:0000000000043AA0                 CBNZ            W0, loc_437C0
.text:0000000000043AA4                 B               loc_44300
.text:0000000000043AA8 ; ---------------------------------------------------------------------------
.text:0000000000043AA8                 LDR             X24, [X20]
.text:0000000000043AAC loc_43AAC                               ; CODE XREF: sub_436C8+408↓j
.text:0000000000043AAC                                         ; sub_436C8+410↓j ...
.text:0000000000043AAC                 LDRB            W9, [X19,#0x74]
.text:0000000000043AB0                 ADD             W8, W9, #1
.text:0000000000043AB4                 ADD             X9, X19, X9
.text:0000000000043AB8                 STRB            W8, [X19,#0x74]
.text:0000000000043ABC                 LDRB            W9, [X9,#0x79]
.text:0000000000043AC0                 CMP             W9, #8
.text:0000000000043AC4                 B.LE            loc_43AE0
.text:0000000000043AC8                 SUB             W10, W9, #9
.text:0000000000043ACC                 CMP             W10, #5
.text:0000000000043AD0                 B.CC            loc_43AAC
.text:0000000000043AD4                 CMP             W9, #0x20 ; ' '
.text:0000000000043AD8                 B.EQ            loc_43AAC
.text:0000000000043ADC                 B               loc_4409C
.text:0000000000043AE0 ; ---------------------------------------------------------------------------
.text:0000000000043AE0 loc_43AE0                               ; CODE XREF: sub_436C8+3FC↑j
.text:0000000000043AE0                 CBNZ            W9, loc_443A0
.text:0000000000043AE4                 LDR             X25, [X19]
.text:0000000000043AE8                 MOV             X0, X24
.text:0000000000043AEC                 MOV             X2, X22
.text:0000000000043AF0                 STRB            WZR, [X19,#0x74]
.text:0000000000043AF4                 STRB            WZR, [X19,#0x79]
.text:0000000000043AF8                 MOV             X1, X25
.text:0000000000043AFC                 BL              .EAS_HWFilePos
.text:0000000000043B00                 CBNZ            X0, loc_4434C
.text:0000000000043B04                 MOV             W21, WZR
.text:0000000000043B08                 STRB            WZR, [X27]
.text:0000000000043B0C loc_43B0C                               ; CODE XREF: sub_436C8+47C↓j
.text:0000000000043B0C                 ADD             X2, SP, #0x70+var_60
.text:0000000000043B10                 MOV             X0, X24
.text:0000000000043B14                 MOV             X1, X25
.text:0000000000043B18                 BL              .EAS_HWGetByte
.text:0000000000043B1C                 CBNZ            X0, loc_43B4C
.text:0000000000043B20                 LDRB            W8, [SP,#0x70+var_60]
.text:0000000000043B24                 CMP             W8, #0xD
.text:0000000000043B28                 B.EQ            loc_43B40
.text:0000000000043B2C                 CMP             W8, #0xA
.text:0000000000043B30                 B.EQ            loc_43B5C
.text:0000000000043B34                 ADD             W9, W21, #1
.text:0000000000043B38                 STRB            W8, [X27,W21,SXTW]
.text:0000000000043B3C                 MOV             W21, W9
.text:0000000000043B40 loc_43B40                               ; CODE XREF: sub_436C8+460↑j
.text:0000000000043B40                 CMP             W21, #0x4B ; 'K'
.text:0000000000043B44                 B.LT            loc_43B0C
.text:0000000000043B48                 B               loc_43B5C
.text:0000000000043B4C ; ---------------------------------------------------------------------------
.text:0000000000043B4C loc_43B4C                               ; CODE XREF: sub_436C8+454↑j
.text:0000000000043B4C                 CMP             W21, #1
.text:0000000000043B50                 B.LT            loc_4434C
.text:0000000000043B54                 CMP             X0, #3
.text:0000000000043B58                 B.NE            loc_4434C
.text:0000000000043B5C loc_43B5C                               ; CODE XREF: sub_436C8+468↑j
.text:0000000000043B5C                                         ; sub_436C8+480↑j
.text:0000000000043B5C                 MOV             X8, XZR
.text:0000000000043B60                 STRB            WZR, [X27,W21,SXTW]
.text:0000000000043B64 loc_43B64                               ; CODE XREF: sub_436C8+4E8↓j
.text:0000000000043B64                 LDR             X9, [X28,X8,LSL#3]
.text:0000000000043B68                 LDRB            W11, [X9]
.text:0000000000043B6C                 CBZ             W11, loc_43BB8
.text:0000000000043B70                 ADD             X9, X9, #1
.text:0000000000043B74                 MOV             X10, X27
.text:0000000000043B78 loc_43B78                               ; CODE XREF: sub_436C8+4D8↓j
.text:0000000000043B78                 LDRB            W12, [X10]
.text:0000000000043B7C                 AND             W11, W11, #0xFF
.text:0000000000043B80                 SUB             W13, W12, #0x61 ; 'a'
.text:0000000000043B84                 AND             W14, W12, #0xFFFFFFDF
.text:0000000000043B88                 CMP             W13, #0x1A
.text:0000000000043B8C                 CSEL            W12, W14, W12, CC
.text:0000000000043B90                 CMP             W11, W12,SXTB
.text:0000000000043B94                 B.NE            loc_43BA8
.text:0000000000043B98                 LDRB            W11, [X9],#1
.text:0000000000043B9C                 ADD             X10, X10, #1
.text:0000000000043BA0                 CBNZ            W11, loc_43B78
.text:0000000000043BA4                 B               loc_43BB8
.text:0000000000043BA8 ; ---------------------------------------------------------------------------
.text:0000000000043BA8 loc_43BA8                               ; CODE XREF: sub_436C8+4CC↑j
.text:0000000000043BA8                 ADD             X8, X8, #1
.text:0000000000043BAC                 CMP             X8, #0xA
.text:0000000000043BB0                 B.CC            loc_43B64
.text:0000000000043BB4                 B               loc_43AAC
.text:0000000000043BB8 ; ---------------------------------------------------------------------------
.text:0000000000043BB8 loc_43BB8                               ; CODE XREF: sub_436C8+4A4↑j
.text:0000000000043BB8                                         ; sub_436C8+4DC↑j
.text:0000000000043BB8                 CMP             W8, #9
.text:0000000000043BBC                 B.NE            loc_43AAC
.text:0000000000043BC0                 B               loc_44348
.text:0000000000043BC4 ; ---------------------------------------------------------------------------
.text:0000000000043BC4                 MOV             X25, XZR
.text:0000000000043BC8 loc_43BC8                               ; CODE XREF: sub_436C8+658↓j
.text:0000000000043BC8                 LDR             X23, [X20]
.text:0000000000043BCC loc_43BCC                               ; CODE XREF: sub_436C8+524↓j
.text:0000000000043BCC                                         ; sub_436C8+52C↓j ...
.text:0000000000043BCC                 LDRB            W8, [X19,#0x74]
.text:0000000000043BD0                 ADD             W9, W8, #1
.text:0000000000043BD4                 ADD             X8, X19, X8
.text:0000000000043BD8                 STRB            W9, [X19,#0x74]
.text:0000000000043BDC                 LDRB            W8, [X8,#0x79]
.text:0000000000043BE0                 CBZ             W8, loc_43BFC
.text:0000000000043BE4                 SUB             W9, W8, #9
.text:0000000000043BE8                 CMP             W9, #5
.text:0000000000043BEC                 B.CC            loc_43BCC
.text:0000000000043BF0                 CMP             W8, #0x20 ; ' '
.text:0000000000043BF4                 B.EQ            loc_43BCC
.text:0000000000043BF8                 B               loc_43CE4
.text:0000000000043BFC ; ---------------------------------------------------------------------------
.text:0000000000043BFC loc_43BFC                               ; CODE XREF: sub_436C8+518↑j
.text:0000000000043BFC                 LDR             X24, [X19]
.text:0000000000043C00                 MOV             X0, X23
.text:0000000000043C04                 MOV             X2, X22
.text:0000000000043C08                 STRB            WZR, [X19,#0x74]
.text:0000000000043C0C                 STRB            WZR, [X19,#0x79]
.text:0000000000043C10                 MOV             X1, X24
.text:0000000000043C14                 BL              .EAS_HWFilePos
.text:0000000000043C18                 CBNZ            X0, loc_44300
.text:0000000000043C1C                 MOV             W21, WZR
.text:0000000000043C20                 STRB            WZR, [X27]
.text:0000000000043C24 loc_43C24                               ; CODE XREF: sub_436C8+598↓j
.text:0000000000043C24                 ADD             X2, SP, #0x70+var_60
.text:0000000000043C28                 MOV             X0, X23
.text:0000000000043C2C                 MOV             X1, X24
.text:0000000000043C30                 BL              .EAS_HWGetByte
.text:0000000000043C34                 CBNZ            X0, loc_43C68
.text:0000000000043C38                 LDRB            W8, [SP,#0x70+var_60]
.text:0000000000043C3C                 CMP             W8, #0xD
.text:0000000000043C40                 B.EQ            loc_43C5C
.text:0000000000043C44                 CMP             W8, #0xA
.text:0000000000043C48                 B.EQ            loc_43C78
.text:0000000000043C4C                 ADD             W9, W21, #1
.text:0000000000043C50                 ADD             X10, X19, W21,SXTW
.text:0000000000043C54                 MOV             W21, W9
.text:0000000000043C58                 STRB            W8, [X10,#0x79]
.text:0000000000043C5C loc_43C5C                               ; CODE XREF: sub_436C8+578↑j
.text:0000000000043C5C                 CMP             W21, #0x4B ; 'K'
.text:0000000000043C60                 B.LT            loc_43C24
.text:0000000000043C64                 B               loc_43C78
.text:0000000000043C68 ; ---------------------------------------------------------------------------
.text:0000000000043C68 loc_43C68                               ; CODE XREF: sub_436C8+56C↑j
.text:0000000000043C68                 CMP             W21, #1
.text:0000000000043C6C                 B.LT            loc_44300
.text:0000000000043C70                 CMP             X0, #3
.text:0000000000043C74                 B.NE            loc_44300
.text:0000000000043C78 loc_43C78                               ; CODE XREF: sub_436C8+580↑j
.text:0000000000043C78                                         ; sub_436C8+59C↑j
.text:0000000000043C78                 ADD             X9, X19, W21,SXTW
.text:0000000000043C7C                 MOV             X8, XZR
.text:0000000000043C80                 STRB            WZR, [X9,#0x79]
.text:0000000000043C84 loc_43C84                               ; CODE XREF: sub_436C8+608↓j
.text:0000000000043C84                 LDR             X9, [X28,X8,LSL#3]
.text:0000000000043C88                 LDRB            W11, [X9]
.text:0000000000043C8C                 CBZ             W11, loc_43CD8
.text:0000000000043C90                 ADD             X9, X9, #1
.text:0000000000043C94                 MOV             X10, X27
.text:0000000000043C98 loc_43C98                               ; CODE XREF: sub_436C8+5F8↓j
.text:0000000000043C98                 LDRB            W12, [X10]
.text:0000000000043C9C                 AND             W11, W11, #0xFF
.text:0000000000043CA0                 SUB             W13, W12, #0x61 ; 'a'
.text:0000000000043CA4                 AND             W14, W12, #0xFFFFFFDF
.text:0000000000043CA8                 CMP             W13, #0x1A
.text:0000000000043CAC                 CSEL            W12, W14, W12, CC
.text:0000000000043CB0                 CMP             W11, W12,SXTB
.text:0000000000043CB4                 B.NE            loc_43CC8
.text:0000000000043CB8                 LDRB            W11, [X9],#1
.text:0000000000043CBC                 ADD             X10, X10, #1
.text:0000000000043CC0                 CBNZ            W11, loc_43C98
.text:0000000000043CC4                 B               loc_43CD8
.text:0000000000043CC8 ; ---------------------------------------------------------------------------
.text:0000000000043CC8 loc_43CC8                               ; CODE XREF: sub_436C8+5EC↑j
.text:0000000000043CC8                 ADD             X8, X8, #1
.text:0000000000043CCC                 CMP             X8, #0xA
.text:0000000000043CD0                 B.CC            loc_43C84
.text:0000000000043CD4                 B               loc_43BCC
.text:0000000000043CD8 ; ---------------------------------------------------------------------------
.text:0000000000043CD8 loc_43CD8                               ; CODE XREF: sub_436C8+5C4↑j
.text:0000000000043CD8                                         ; sub_436C8+5FC↑j
.text:0000000000043CD8                 CMP             W8, #9
.text:0000000000043CDC                 B.NE            loc_43BCC
.text:0000000000043CE0                 B               loc_442FC
.text:0000000000043CE4 ; ---------------------------------------------------------------------------
.text:0000000000043CE4 loc_43CE4                               ; CODE XREF: sub_436C8+530↑j
.text:0000000000043CE4                 SXTB            W8, W8
.text:0000000000043CE8                 CMP             W25, #3
.text:0000000000043CEC                 B.EQ            loc_43D10
.text:0000000000043CF0                 CMP             W25, #4
.text:0000000000043CF4                 B.EQ            loc_44260
.text:0000000000043CF8                 ADRP            X9, #aEdo@PAGE ; "edo"
.text:0000000000043CFC                 ADD             X9, X9, #aEdo@PAGEOFF ; "edo"
.text:0000000000043D00                 LDRB            W9, [X9,X25]
.text:0000000000043D04                 CMP             W8, W9
.text:0000000000043D08                 B.EQ            loc_43D18
.text:0000000000043D0C                 B               loc_44300
.text:0000000000043D10 ; ---------------------------------------------------------------------------
.text:0000000000043D10 loc_43D10                               ; CODE XREF: sub_436C8+624↑j
.text:0000000000043D10                 CMP             W8, #0x66 ; 'f'
.text:0000000000043D14                 B.NE            loc_44290
.text:0000000000043D18 loc_43D18                               ; CODE XREF: sub_436C8+640↑j
.text:0000000000043D18                 ADD             X25, X25, #1
.text:0000000000043D1C                 CMP             X25, #5
.text:0000000000043D20                 B.CC            loc_43BC8
.text:0000000000043D24                 B               loc_44300
.text:0000000000043D28 ; ---------------------------------------------------------------------------
.text:0000000000043D28                 MOV             X25, XZR
.text:0000000000043D2C loc_43D2C                               ; CODE XREF: sub_436C8+7BC↓j
.text:0000000000043D2C                 LDR             X23, [X20]
.text:0000000000043D30 loc_43D30                               ; CODE XREF: sub_436C8+688↓j
.text:0000000000043D30                                         ; sub_436C8+690↓j ...
.text:0000000000043D30                 LDRB            W8, [X19,#0x74]
.text:0000000000043D34                 ADD             W9, W8, #1
.text:0000000000043D38                 ADD             X8, X19, X8
.text:0000000000043D3C                 STRB            W9, [X19,#0x74]
.text:0000000000043D40                 LDRB            W8, [X8,#0x79]
.text:0000000000043D44                 CBZ             W8, loc_43D60
.text:0000000000043D48                 SUB             W9, W8, #9
.text:0000000000043D4C                 CMP             W9, #5
.text:0000000000043D50                 B.CC            loc_43D30
.text:0000000000043D54                 CMP             W8, #0x20 ; ' '
.text:0000000000043D58                 B.EQ            loc_43D30
.text:0000000000043D5C                 B               loc_43E48
.text:0000000000043D60 ; ---------------------------------------------------------------------------
.text:0000000000043D60 loc_43D60                               ; CODE XREF: sub_436C8+67C↑j
.text:0000000000043D60                 LDR             X24, [X19]
.text:0000000000043D64                 MOV             X0, X23
.text:0000000000043D68                 MOV             X2, X22
.text:0000000000043D6C                 STRB            WZR, [X19,#0x74]
.text:0000000000043D70                 STRB            WZR, [X19,#0x79]
.text:0000000000043D74                 MOV             X1, X24
.text:0000000000043D78                 BL              .EAS_HWFilePos
.text:0000000000043D7C                 CBNZ            X0, loc_44300
.text:0000000000043D80                 MOV             W21, WZR
.text:0000000000043D84                 STRB            WZR, [X27]
.text:0000000000043D88 loc_43D88                               ; CODE XREF: sub_436C8+6FC↓j
.text:0000000000043D88                 ADD             X2, SP, #0x70+var_60
.text:0000000000043D8C                 MOV             X0, X23
.text:0000000000043D90                 MOV             X1, X24
.text:0000000000043D94                 BL              .EAS_HWGetByte
.text:0000000000043D98                 CBNZ            X0, loc_43DCC
.text:0000000000043D9C                 LDRB            W8, [SP,#0x70+var_60]
.text:0000000000043DA0                 CMP             W8, #0xD
.text:0000000000043DA4                 B.EQ            loc_43DC0
.text:0000000000043DA8                 CMP             W8, #0xA
.text:0000000000043DAC                 B.EQ            loc_43DDC
.text:0000000000043DB0                 ADD             W9, W21, #1
.text:0000000000043DB4                 ADD             X10, X19, W21,SXTW
.text:0000000000043DB8                 MOV             W21, W9
.text:0000000000043DBC                 STRB            W8, [X10,#0x79]
.text:0000000000043DC0 loc_43DC0                               ; CODE XREF: sub_436C8+6DC↑j
.text:0000000000043DC0                 CMP             W21, #0x4B ; 'K'
.text:0000000000043DC4                 B.LT            loc_43D88
.text:0000000000043DC8                 B               loc_43DDC
.text:0000000000043DCC ; ---------------------------------------------------------------------------
.text:0000000000043DCC loc_43DCC                               ; CODE XREF: sub_436C8+6D0↑j
.text:0000000000043DCC                 CMP             W21, #1
.text:0000000000043DD0                 B.LT            loc_44300
.text:0000000000043DD4                 CMP             X0, #3
.text:0000000000043DD8                 B.NE            loc_44300
.text:0000000000043DDC loc_43DDC                               ; CODE XREF: sub_436C8+6E4↑j
.text:0000000000043DDC                                         ; sub_436C8+700↑j
.text:0000000000043DDC                 ADD             X9, X19, W21,SXTW
.text:0000000000043DE0                 MOV             X8, XZR
.text:0000000000043DE4                 STRB            WZR, [X9,#0x79]
.text:0000000000043DE8 loc_43DE8                               ; CODE XREF: sub_436C8+76C↓j
.text:0000000000043DE8                 LDR             X9, [X28,X8,LSL#3]
.text:0000000000043DEC                 LDRB            W11, [X9]
.text:0000000000043DF0                 CBZ             W11, loc_43E3C
.text:0000000000043DF4                 ADD             X9, X9, #1
.text:0000000000043DF8                 MOV             X10, X27
.text:0000000000043DFC loc_43DFC                               ; CODE XREF: sub_436C8+75C↓j
.text:0000000000043DFC                 LDRB            W12, [X10]
.text:0000000000043E00                 AND             W11, W11, #0xFF
.text:0000000000043E04                 SUB             W13, W12, #0x61 ; 'a'
.text:0000000000043E08                 AND             W14, W12, #0xFFFFFFDF
.text:0000000000043E0C                 CMP             W13, #0x1A
.text:0000000000043E10                 CSEL            W12, W14, W12, CC
.text:0000000000043E14                 CMP             W11, W12,SXTB
.text:0000000000043E18                 B.NE            loc_43E2C
.text:0000000000043E1C                 LDRB            W11, [X9],#1
.text:0000000000043E20                 ADD             X10, X10, #1
.text:0000000000043E24                 CBNZ            W11, loc_43DFC
.text:0000000000043E28                 B               loc_43E3C
.text:0000000000043E2C ; ---------------------------------------------------------------------------
.text:0000000000043E2C loc_43E2C                               ; CODE XREF: sub_436C8+750↑j
.text:0000000000043E2C                 ADD             X8, X8, #1
.text:0000000000043E30                 CMP             X8, #0xA
.text:0000000000043E34                 B.CC            loc_43DE8
.text:0000000000043E38                 B               loc_43D30
.text:0000000000043E3C ; ---------------------------------------------------------------------------
.text:0000000000043E3C loc_43E3C                               ; CODE XREF: sub_436C8+728↑j
.text:0000000000043E3C                                         ; sub_436C8+760↑j
.text:0000000000043E3C                 CMP             W8, #9
.text:0000000000043E40                 B.NE            loc_43D30
.text:0000000000043E44                 B               loc_442FC
.text:0000000000043E48 ; ---------------------------------------------------------------------------
.text:0000000000043E48 loc_43E48                               ; CODE XREF: sub_436C8+694↑j
.text:0000000000043E48                 SXTB            W8, W8
.text:0000000000043E4C                 CMP             W25, #4
.text:0000000000043E50                 B.EQ            loc_43E74
.text:0000000000043E54                 CMP             W25, #5
.text:0000000000043E58                 B.EQ            loc_44278
.text:0000000000043E5C                 ADRP            X9, #aIbeo@PAGE ; "ibeo"
.text:0000000000043E60                 ADD             X9, X9, #aIbeo@PAGEOFF ; "ibeo"
.text:0000000000043E64                 LDRB            W9, [X9,X25]
.text:0000000000043E68                 CMP             W8, W9
.text:0000000000043E6C                 B.EQ            loc_43E7C
.text:0000000000043E70                 B               loc_44300
.text:0000000000043E74 ; ---------------------------------------------------------------------------
.text:0000000000043E74 loc_43E74                               ; CODE XREF: sub_436C8+788↑j
.text:0000000000043E74                 CMP             W8, #0x66 ; 'f'
.text:0000000000043E78                 B.NE            loc_442AC
.text:0000000000043E7C loc_43E7C                               ; CODE XREF: sub_436C8+7A4↑j
.text:0000000000043E7C                 ADD             X25, X25, #1
.text:0000000000043E80                 CMP             X25, #6
.text:0000000000043E84                 B.CC            loc_43D2C
.text:0000000000043E88                 B               loc_44300
.text:0000000000043E8C ; ---------------------------------------------------------------------------
.text:0000000000043E8C loc_43E8C                               ; CODE XREF: sub_436C8+28C↑j
.text:0000000000043E8C                 LDRSH           W8, [X19,#0x70]
.text:0000000000043E90                 TBNZ            W8, #0x1F, loc_437C0
.text:0000000000043E94                 CBZ             W8, loc_43EA8
.text:0000000000043E98                 SUB             W8, W8, #1
.text:0000000000043E9C                 TST             W8, #0xFFFF
.text:0000000000043EA0                 CSINV           W8, W8, WZR, NE
.text:0000000000043EA4                 STRH            W8, [X19,#0x70]
.text:0000000000043EA8 loc_43EA8                               ; CODE XREF: sub_436C8+7CC↑j
.text:0000000000043EA8                 LDR             W9, [SP,#0x70+var_64]
.text:0000000000043EAC                 CBZ             W9, loc_43EB8
.text:0000000000043EB0                 TST             W8, #0xFFFF
.text:0000000000043EB4                 B.EQ            loc_437C0
.text:0000000000043EB8 loc_43EB8                               ; CODE XREF: sub_436C8+7E4↑j
.text:0000000000043EB8                 LDR             X0, [X20]
.text:0000000000043EBC                 LDR             X1, [X19]
.text:0000000000043EC0                 LDR             X2, [X19,#0x40]
.text:0000000000043EC4                 BL              .EAS_HWFileSeek
.text:0000000000043EC8                 CBNZ            X0, loc_44318
.text:0000000000043ECC                 LDR             X23, [X20]
.text:0000000000043ED0                 MOV             X2, X22
.text:0000000000043ED4                 LDR             X24, [X19]
.text:0000000000043ED8                 MOV             X0, X23
.text:0000000000043EDC                 MOV             X1, X24
.text:0000000000043EE0                 BL              .EAS_HWFilePos
.text:0000000000043EE4                 CBNZ            X0, loc_44230
.text:0000000000043EE8                 MOV             W21, WZR
.text:0000000000043EEC                 STRB            WZR, [X27]
.text:0000000000043EF0 loc_43EF0                               ; CODE XREF: sub_436C8+860↓j
.text:0000000000043EF0                 ADD             X2, SP, #0x70+var_60
.text:0000000000043EF4                 MOV             X0, X23
.text:0000000000043EF8                 MOV             X1, X24
.text:0000000000043EFC                 BL              .EAS_HWGetByte
.text:0000000000043F00                 CBNZ            X0, loc_4421C
.text:0000000000043F04                 LDRB            W8, [SP,#0x70+var_60]
.text:0000000000043F08                 CMP             W8, #0xD
.text:0000000000043F0C                 B.EQ            loc_43F24
.text:0000000000043F10                 CMP             W8, #0xA
.text:0000000000043F14                 B.EQ            loc_4422C
.text:0000000000043F18                 ADD             W9, W21, #1
.text:0000000000043F1C                 STRB            W8, [X27,W21,SXTW]
.text:0000000000043F20                 MOV             W21, W9
.text:0000000000043F24 loc_43F24                               ; CODE XREF: sub_436C8+844↑j
.text:0000000000043F24                 CMP             W21, #0x4B ; 'K'
.text:0000000000043F28                 B.LT            loc_43EF0
.text:0000000000043F2C                 B               loc_4422C
.text:0000000000043F30 ; ---------------------------------------------------------------------------
.text:0000000000043F30 loc_43F30                               ; CODE XREF: sub_436C8+8B4↓j
.text:0000000000043F30                 MOV             W8, #0xA
.text:0000000000043F34                 MADD            W8, W21, W8, W10
.text:0000000000043F38                 SUB             W21, W8, #0x30 ; '0'
.text:0000000000043F3C                 MOV             W8, #1
.text:0000000000043F40                 STR             W8, [SP,#0x70+var_68]
.text:0000000000043F44 loc_43F44                               ; CODE XREF: sub_436C8+3C4↑j
.text:0000000000043F44                                         ; sub_436C8+89C↓j ...
.text:0000000000043F44                 LDRB            W8, [X19,#0x74]
.text:0000000000043F48                 ADD             W9, W8, #1
.text:0000000000043F4C                 ADD             X10, X19, X8
.text:0000000000043F50                 STRB            W9, [X19,#0x74]
.text:0000000000043F54                 LDRB            W10, [X10,#0x79]
.text:0000000000043F58                 CBZ             W10, loc_43F84
.text:0000000000043F5C                 SUB             W11, W10, #9
.text:0000000000043F60                 CMP             W11, #5
.text:0000000000043F64                 B.CC            loc_43F44
.text:0000000000043F68                 CMP             W10, #0x20 ; ' '
.text:0000000000043F6C                 B.EQ            loc_43F44
.text:0000000000043F70                 SXTB            W10, W10
.text:0000000000043F74                 SUB             W11, W10, #0x30 ; '0'
.text:0000000000043F78                 CMP             W11, #9
.text:0000000000043F7C                 B.LS            loc_43F30
.text:0000000000043F80                 B               loc_44244
.text:0000000000043F84 ; ---------------------------------------------------------------------------
.text:0000000000043F84 loc_43F84                               ; CODE XREF: sub_436C8+890↑j
.text:0000000000043F84                 LDR             X24, [X19]
.text:0000000000043F88                 MOV             X0, X23
.text:0000000000043F8C                 MOV             X2, X22
.text:0000000000043F90                 STRB            WZR, [X19,#0x74]
.text:0000000000043F94                 STRB            WZR, [X19,#0x79]
.text:0000000000043F98                 MOV             X1, X24
.text:0000000000043F9C                 BL              .EAS_HWFilePos
.text:0000000000043FA0                 CBNZ            X0, loc_44064
.text:0000000000043FA4                 MOV             W25, WZR
.text:0000000000043FA8                 STRB            WZR, [X27]
.text:0000000000043FAC loc_43FAC                               ; CODE XREF: sub_436C8+91C↓j
.text:0000000000043FAC                 ADD             X2, SP, #0x70+var_60
.text:0000000000043FB0                 MOV             X0, X23
.text:0000000000043FB4                 MOV             X1, X24
.text:0000000000043FB8                 BL              .EAS_HWGetByte
.text:0000000000043FBC                 CBNZ            X0, loc_43FEC
.text:0000000000043FC0                 LDRB            W8, [SP,#0x70+var_60]
.text:0000000000043FC4                 CMP             W8, #0xD
.text:0000000000043FC8                 B.EQ            loc_43FE0
.text:0000000000043FCC                 CMP             W8, #0xA
.text:0000000000043FD0                 B.EQ            loc_43FFC
.text:0000000000043FD4                 ADD             W9, W25, #1
.text:0000000000043FD8                 STRB            W8, [X27,W25,SXTW]
.text:0000000000043FDC                 MOV             W25, W9
.text:0000000000043FE0 loc_43FE0                               ; CODE XREF: sub_436C8+900↑j
.text:0000000000043FE0                 CMP             W25, #0x4B ; 'K'
.text:0000000000043FE4                 B.LT            loc_43FAC
.text:0000000000043FE8                 B               loc_43FFC
.text:0000000000043FEC ; ---------------------------------------------------------------------------
.text:0000000000043FEC loc_43FEC                               ; CODE XREF: sub_436C8+8F4↑j
.text:0000000000043FEC                 CMP             W25, #1
.text:0000000000043FF0                 B.LT            loc_44064
.text:0000000000043FF4                 CMP             X0, #3
.text:0000000000043FF8                 B.NE            loc_44064
.text:0000000000043FFC loc_43FFC                               ; CODE XREF: sub_436C8+908↑j
.text:0000000000043FFC                                         ; sub_436C8+920↑j
.text:0000000000043FFC                 MOV             X8, XZR
.text:0000000000044000                 STRB            WZR, [X27,W25,SXTW]
.text:0000000000044004 loc_44004                               ; CODE XREF: sub_436C8+988↓j
.text:0000000000044004                 LDR             X9, [X28,X8,LSL#3]
.text:0000000000044008                 LDRB            W11, [X9]
.text:000000000004400C                 CBZ             W11, loc_44058
.text:0000000000044010                 ADD             X9, X9, #1
.text:0000000000044014                 MOV             X10, X27
.text:0000000000044018 loc_44018                               ; CODE XREF: sub_436C8+978↓j
.text:0000000000044018                 LDRB            W12, [X10]
.text:000000000004401C                 AND             W11, W11, #0xFF
.text:0000000000044020                 SUB             W13, W12, #0x61 ; 'a'
.text:0000000000044024                 AND             W14, W12, #0xFFFFFFDF
.text:0000000000044028                 CMP             W13, #0x1A
.text:000000000004402C                 CSEL            W12, W14, W12, CC
.text:0000000000044030                 CMP             W11, W12,SXTB
.text:0000000000044034                 B.NE            loc_44048
.text:0000000000044038                 LDRB            W11, [X9],#1
.text:000000000004403C                 ADD             X10, X10, #1
.text:0000000000044040                 CBNZ            W11, loc_44018
.text:0000000000044044                 B               loc_44058
.text:0000000000044048 ; ---------------------------------------------------------------------------
.text:0000000000044048 loc_44048                               ; CODE XREF: sub_436C8+96C↑j
.text:0000000000044048                 ADD             X8, X8, #1
.text:000000000004404C                 CMP             X8, #0xA
.text:0000000000044050                 B.CC            loc_44004
.text:0000000000044054                 B               loc_43F44
.text:0000000000044058 ; ---------------------------------------------------------------------------
.text:0000000000044058 loc_44058                               ; CODE XREF: sub_436C8+944↑j
.text:0000000000044058                                         ; sub_436C8+97C↑j
.text:0000000000044058                 CMP             W8, #9
.text:000000000004405C                 B.NE            loc_43F44
.text:0000000000044060                 STRB            WZR, [X27]
.text:0000000000044064 loc_44064                               ; CODE XREF: sub_436C8+8D8↑j
.text:0000000000044064                                         ; sub_436C8+928↑j ...
.text:0000000000044064                 LDR             W8, [SP,#0x70+var_68]
.text:0000000000044068                 CBZ             W8, loc_44300
.text:000000000004406C loc_4406C                               ; CODE XREF: sub_436C8+B90↓j
.text:000000000004406C                 LDR             X8, [X19,#0x40]
.text:0000000000044070                 CMP             X8, #1
.text:0000000000044074                 B.LT            loc_437C0
.text:0000000000044078                 LDRSH           W8, [X19,#0x70]
.text:000000000004407C                 TBZ             W8, #0x1F, loc_437C0
.text:0000000000044080                 STRH            W21, [X19,#0x70]
.text:0000000000044084                 B               loc_437C0
.text:0000000000044088 ; ---------------------------------------------------------------------------
.text:0000000000044088 loc_44088                               ; CODE XREF: sub_436C8+2D4↑j
.text:0000000000044088                 SUB             W9, W8, #0x30 ; '0'
.text:000000000004408C                 CMP             W9, #9
.text:0000000000044090                 B.LS            loc_44208
.text:0000000000044094                 CBNZ            W8, loc_437C0
.text:0000000000044098                 B               loc_44300
.text:000000000004409C ; ---------------------------------------------------------------------------
.text:000000000004409C loc_4409C                               ; CODE XREF: sub_436C8+414↑j
.text:000000000004409C                 CMP             W9, #0x61 ; 'a'
.text:00000000000440A0                 B.NE            loc_443A0
.text:00000000000440A4                 MOV             X25, XZR
.text:00000000000440A8 loc_440A8                               ; CODE XREF: sub_436C8+B38↓j
.text:00000000000440A8                 LDR             X23, [X20]
.text:00000000000440AC loc_440AC                               ; CODE XREF: sub_436C8+A04↓j
.text:00000000000440AC                                         ; sub_436C8+A0C↓j ...
.text:00000000000440AC                 LDRB            W8, [X19,#0x74]
.text:00000000000440B0                 ADD             W9, W8, #1
.text:00000000000440B4                 ADD             X8, X19, X8
.text:00000000000440B8                 STRB            W9, [X19,#0x74]
.text:00000000000440BC                 LDRB            W8, [X8,#0x79]
.text:00000000000440C0                 CBZ             W8, loc_440DC
.text:00000000000440C4                 SUB             W9, W8, #9
.text:00000000000440C8                 CMP             W9, #5
.text:00000000000440CC                 B.CC            loc_440AC
.text:00000000000440D0                 CMP             W8, #0x20 ; ' '
.text:00000000000440D4                 B.EQ            loc_440AC
.text:00000000000440D8                 B               loc_441C4
.text:00000000000440DC ; ---------------------------------------------------------------------------
.text:00000000000440DC loc_440DC                               ; CODE XREF: sub_436C8+9F8↑j
.text:00000000000440DC                 LDR             X24, [X19]
.text:00000000000440E0                 MOV             X0, X23
.text:00000000000440E4                 MOV             X2, X22
.text:00000000000440E8                 STRB            WZR, [X19,#0x74]
.text:00000000000440EC                 STRB            WZR, [X19,#0x79]
.text:00000000000440F0                 MOV             X1, X24
.text:00000000000440F4                 BL              .EAS_HWFilePos
.text:00000000000440F8                 CBNZ            X0, loc_44300
.text:00000000000440FC                 MOV             W21, WZR
.text:0000000000044100                 STRB            WZR, [X27]
.text:0000000000044104 loc_44104                               ; CODE XREF: sub_436C8+A78↓j
.text:0000000000044104                 ADD             X2, SP, #0x70+var_60
.text:0000000000044108                 MOV             X0, X23
.text:000000000004410C                 MOV             X1, X24
.text:0000000000044110                 BL              .EAS_HWGetByte
.text:0000000000044114                 CBNZ            X0, loc_44148
.text:0000000000044118                 LDRB            W8, [SP,#0x70+var_60]
.text:000000000004411C                 CMP             W8, #0xD
.text:0000000000044120                 B.EQ            loc_4413C
.text:0000000000044124                 CMP             W8, #0xA
.text:0000000000044128                 B.EQ            loc_44158
.text:000000000004412C                 ADD             W9, W21, #1
.text:0000000000044130                 ADD             X10, X19, W21,SXTW
.text:0000000000044134                 MOV             W21, W9
.text:0000000000044138                 STRB            W8, [X10,#0x79]
.text:000000000004413C loc_4413C                               ; CODE XREF: sub_436C8+A58↑j
.text:000000000004413C                 CMP             W21, #0x4B ; 'K'
.text:0000000000044140                 B.LT            loc_44104
.text:0000000000044144                 B               loc_44158
.text:0000000000044148 ; ---------------------------------------------------------------------------
.text:0000000000044148 loc_44148                               ; CODE XREF: sub_436C8+A4C↑j
.text:0000000000044148                 CMP             W21, #1
.text:000000000004414C                 B.LT            loc_44300
.text:0000000000044150                 CMP             X0, #3
.text:0000000000044154                 B.NE            loc_44300
.text:0000000000044158 loc_44158                               ; CODE XREF: sub_436C8+A60↑j
.text:0000000000044158                                         ; sub_436C8+A7C↑j
.text:0000000000044158                 ADD             X9, X19, W21,SXTW
.text:000000000004415C                 MOV             X8, XZR
.text:0000000000044160                 STRB            WZR, [X9,#0x79]
.text:0000000000044164 loc_44164                               ; CODE XREF: sub_436C8+AE8↓j
.text:0000000000044164                 LDR             X9, [X28,X8,LSL#3]
.text:0000000000044168                 LDRB            W11, [X9]
.text:000000000004416C                 CBZ             W11, loc_441B8
.text:0000000000044170                 ADD             X9, X9, #1
.text:0000000000044174                 MOV             X10, X27
.text:0000000000044178 loc_44178                               ; CODE XREF: sub_436C8+AD8↓j
.text:0000000000044178                 LDRB            W12, [X10]
.text:000000000004417C                 AND             W11, W11, #0xFF
.text:0000000000044180                 SUB             W13, W12, #0x61 ; 'a'
.text:0000000000044184                 AND             W14, W12, #0xFFFFFFDF
.text:0000000000044188                 CMP             W13, #0x1A
.text:000000000004418C                 CSEL            W12, W14, W12, CC
.text:0000000000044190                 CMP             W11, W12,SXTB
.text:0000000000044194                 B.NE            loc_441A8
.text:0000000000044198                 LDRB            W11, [X9],#1
.text:000000000004419C                 ADD             X10, X10, #1
.text:00000000000441A0                 CBNZ            W11, loc_44178
.text:00000000000441A4                 B               loc_441B8
.text:00000000000441A8 ; ---------------------------------------------------------------------------
.text:00000000000441A8 loc_441A8                               ; CODE XREF: sub_436C8+ACC↑j
.text:00000000000441A8                 ADD             X8, X8, #1
.text:00000000000441AC                 CMP             X8, #0xA
.text:00000000000441B0                 B.CC            loc_44164
.text:00000000000441B4                 B               loc_440AC
.text:00000000000441B8 ; ---------------------------------------------------------------------------
.text:00000000000441B8 loc_441B8                               ; CODE XREF: sub_436C8+AA4↑j
.text:00000000000441B8                                         ; sub_436C8+ADC↑j
.text:00000000000441B8                 CMP             W8, #9
.text:00000000000441BC                 B.NE            loc_440AC
.text:00000000000441C0                 B               loc_442FC
.text:00000000000441C4 ; ---------------------------------------------------------------------------
.text:00000000000441C4 loc_441C4                               ; CODE XREF: sub_436C8+A10↑j
.text:00000000000441C4                 SXTB            W8, W8
.text:00000000000441C8                 CMP             W25, #3
.text:00000000000441CC                 B.EQ            loc_441F0
.text:00000000000441D0                 CMP             W25, #4
.text:00000000000441D4                 B.EQ            loc_442C8
.text:00000000000441D8                 ADRP            X9, #aCko@PAGE ; "cko"
.text:00000000000441DC                 ADD             X9, X9, #aCko@PAGEOFF ; "cko"
.text:00000000000441E0                 LDRB            W9, [X9,X25]
.text:00000000000441E4                 CMP             W8, W9
.text:00000000000441E8                 B.EQ            loc_441F8
.text:00000000000441EC                 B               loc_44300
.text:00000000000441F0 ; ---------------------------------------------------------------------------
.text:00000000000441F0 loc_441F0                               ; CODE XREF: sub_436C8+B04↑j
.text:00000000000441F0                 CMP             W8, #0x66 ; 'f'
.text:00000000000441F4                 B.NE            loc_442E0
.text:00000000000441F8 loc_441F8                               ; CODE XREF: sub_436C8+B20↑j
.text:00000000000441F8                 ADD             X25, X25, #1
.text:00000000000441FC                 CMP             X25, #5
.text:0000000000044200                 B.CC            loc_440A8
.text:0000000000044204                 B               loc_44300
.text:0000000000044208 ; ---------------------------------------------------------------------------
.text:0000000000044208 loc_44208                               ; CODE XREF: sub_436C8+9C8↑j
.text:0000000000044208                 MOV             W9, #0xC
.text:000000000004420C                 MUL             W8, W8, W9
.text:0000000000044210                 SUB             W8, W8, #0x34 ; '4'
.text:0000000000044214                 STRB            W8, [X19,#0x75]
.text:0000000000044218                 B               loc_437C0
.text:000000000004421C ; ---------------------------------------------------------------------------
.text:000000000004421C loc_4421C                               ; CODE XREF: sub_436C8+838↑j
.text:000000000004421C                 CMP             W21, #1
.text:0000000000044220                 B.LT            loc_44230
.text:0000000000044224                 CMP             X0, #3
.text:0000000000044228                 B.NE            loc_44230
.text:000000000004422C loc_4422C                               ; CODE XREF: sub_436C8+84C↑j
.text:000000000004422C                                         ; sub_436C8+864↑j
.text:000000000004422C                 STRB            WZR, [X27,W21,SXTW]
.text:0000000000044230 loc_44230                               ; CODE XREF: sub_436C8+81C↑j
.text:0000000000044230                                         ; sub_436C8+B58↑j ...
.text:0000000000044230                 LDRSH           W8, [X19,#0x70]
.text:0000000000044234                 STRB            WZR, [X19,#0x74]
.text:0000000000044238                 CMN             W8, #1
.text:000000000004423C                 B.NE            loc_437C0
.text:0000000000044240                 B               loc_43960
.text:0000000000044244 ; ---------------------------------------------------------------------------
.text:0000000000044244 loc_44244                               ; CODE XREF: sub_436C8+8B8↑j
.text:0000000000044244                 TST             W9, #0xFF
.text:0000000000044248                 B.EQ            loc_44064
.text:000000000004424C                 CBZ             W10, loc_44064
.text:0000000000044250                 STRB            W8, [X19,#0x74]
.text:0000000000044254                 LDR             W8, [SP,#0x70+var_68]
.text:0000000000044258                 CBNZ            W8, loc_4406C
.text:000000000004425C                 B               loc_44300
.text:0000000000044260 ; ---------------------------------------------------------------------------
.text:0000000000044260 loc_44260                               ; CODE XREF: sub_436C8+62C↑j
.text:0000000000044260                 CMP             W8, #0x66 ; 'f'
.text:0000000000044264                 B.NE            loc_44300
.text:0000000000044268                 LDR             X0, [X20]
.text:000000000004426C                 MOV             W1, WZR
.text:0000000000044270                 BL              .EAS_HWLED
.text:0000000000044274                 B               loc_437C0
.text:0000000000044278 ; ---------------------------------------------------------------------------
.text:0000000000044278 loc_44278                               ; CODE XREF: sub_436C8+790↑j
.text:0000000000044278                 CMP             W8, #0x66 ; 'f'
.text:000000000004427C                 B.NE            loc_44300
.text:0000000000044280                 LDR             X0, [X20]
.text:0000000000044284                 MOV             W1, WZR
.text:0000000000044288                 BL              .EAS_HWVibrate
.text:000000000004428C                 B               loc_437C0
.text:0000000000044290 ; ---------------------------------------------------------------------------
.text:0000000000044290 loc_44290                               ; CODE XREF: sub_436C8+64C↑j
.text:0000000000044290                 AND             W8, W8, #0xFF
.text:0000000000044294                 CMP             W8, #0x6E ; 'n'
.text:0000000000044298                 B.NE            loc_44300
.text:000000000004429C                 LDR             X0, [X20]
.text:00000000000442A0                 MOV             W1, #1
.text:00000000000442A4                 BL              .EAS_HWLED
.text:00000000000442A8                 B               loc_437C0
.text:00000000000442AC ; ---------------------------------------------------------------------------
.text:00000000000442AC loc_442AC                               ; CODE XREF: sub_436C8+7B0↑j
.text:00000000000442AC                 AND             W8, W8, #0xFF
.text:00000000000442B0                 CMP             W8, #0x6E ; 'n'
.text:00000000000442B4                 B.NE            loc_44300
.text:00000000000442B8                 LDR             X0, [X20]
.text:00000000000442BC                 MOV             W1, #1
.text:00000000000442C0                 BL              .EAS_HWVibrate
.text:00000000000442C4                 B               loc_437C0
.text:00000000000442C8 ; ---------------------------------------------------------------------------
.text:00000000000442C8 loc_442C8                               ; CODE XREF: sub_436C8+B0C↑j
.text:00000000000442C8                 CMP             W8, #0x66 ; 'f'
.text:00000000000442CC                 B.NE            loc_44300
.text:00000000000442D0                 LDR             X0, [X20]
.text:00000000000442D4                 MOV             W1, WZR
.text:00000000000442D8                 BL              .EAS_HWBackLight
.text:00000000000442DC                 B               loc_437C0
.text:00000000000442E0 ; ---------------------------------------------------------------------------
.text:00000000000442E0 loc_442E0                               ; CODE XREF: sub_436C8+B2C↑j
.text:00000000000442E0                 AND             W8, W8, #0xFF
.text:00000000000442E4                 CMP             W8, #0x6E ; 'n'
.text:00000000000442E8                 B.NE            loc_44300
.text:00000000000442EC                 LDR             X0, [X20]
.text:00000000000442F0                 MOV             W1, #1
.text:00000000000442F4                 BL              .EAS_HWBackLight
.text:00000000000442F8                 B               loc_437C0
.text:00000000000442FC ; ---------------------------------------------------------------------------
.text:00000000000442FC loc_442FC                               ; CODE XREF: sub_436C8+208↑j
.text:00000000000442FC                                         ; sub_436C8+3B4↑j ...
.text:00000000000442FC                 STRB            WZR, [X27]
.text:0000000000044300 loc_44300                               ; CODE XREF: sub_436C8+148↑j
.text:0000000000044300                                         ; sub_436C8+198↑j ...
.text:0000000000044300                 MOV             W8, #2
.text:0000000000044304                 LDR             X1, [X19,#8]
.text:0000000000044308                 STRB            W8, [X19,#0x72]
.text:000000000004430C                 LDR             X0, [X20,#0x170]
.text:0000000000044310                 BL              .VMReleaseAllVoices
.text:0000000000044314 loc_44314                               ; CODE XREF: sub_436C8+34↑j
.text:0000000000044314                                         ; sub_436C8+CAC↓j
.text:0000000000044314                 MOV             X0, XZR
.text:0000000000044318 loc_44318                               ; CODE XREF: sub_436C8+D4↑j
.text:0000000000044318                                         ; sub_436C8+800↑j
.text:0000000000044318                 LDR             X8, [X26,#0x28]
.text:000000000004431C                 LDR             X9, [SP,#0x70+var_58]
.text:0000000000044320                 CMP             X8, X9
.text:0000000000044324                 B.NE            loc_443C0
.text:0000000000044328                 LDP             X29, X30, [SP,#0x70+var_s0]
.text:000000000004432C                 LDP             X20, X19, [SP,#0x70+var_10]
.text:0000000000044330                 LDP             X22, X21, [SP,#0x70+var_20]
.text:0000000000044334                 LDP             X24, X23, [SP,#0x70+var_30]
.text:0000000000044338                 LDP             X26, X25, [SP,#0x70+var_40]
.text:000000000004433C                 LDP             X28, X27, [SP,#0x70+var_50]
.text:0000000000044340                 ADD             SP, SP, #0x80
.text:0000000000044344                 RET
.text:0000000000044348 ; ---------------------------------------------------------------------------
.text:0000000000044348 loc_44348                               ; CODE XREF: sub_436C8+4F8↑j
.text:0000000000044348                 STRB            WZR, [X27]
.text:000000000004434C loc_4434C                               ; CODE XREF: sub_436C8+438↑j
.text:000000000004434C                                         ; sub_436C8+488↑j ...
.text:000000000004434C                 LDR             W3, [SP,#-0x10+arg_C]
.text:0000000000044350                 LDRB            W8, [X19,#0x74]
.text:0000000000044354                 TST             W8, #0xFF
.text:0000000000044358                 B.EQ            loc_44364
.text:000000000004435C loc_4435C                               ; CODE XREF: sub_436C8+CE0↓j
.text:000000000004435C                 SUB             W8, W8, #1
.text:0000000000044360                 STRB            W8, [X19,#0x74]
.text:0000000000044364 loc_44364                               ; CODE XREF: sub_436C8+C90↑j
.text:0000000000044364                                         ; sub_436C8+CE4↓j
.text:0000000000044364                 MOV             X0, X20
.text:0000000000044368                 MOV             X1, X19
.text:000000000004436C                 MOV             W2, W23
.text:0000000000044370 loc_44370                               ; CODE XREF: sub_436C8+CF4↓j
.text:0000000000044370                 BL              sub_44E30
.text:0000000000044374                 CBNZ            W0, loc_44314
.text:0000000000044378                 B               loc_44300
.text:000000000004437C ; ---------------------------------------------------------------------------
.text:000000000004437C                 LDR             X0, [X20]
.text:0000000000044380                 ADD             X2, SP, #0x70+var_60
.text:0000000000044384                 MOV             X1, X19
.text:0000000000044388                 BL              sub_44F40
.text:000000000004438C                 CBZ             W0, loc_44300
.text:0000000000044390                 LDR             X8, [SP,#0x70+var_60]
.text:0000000000044394                 MOV             X0, XZR
.text:0000000000044398                 LDR             X9, [X19,#0x18]
.text:000000000004439C                 B               loc_43794
.text:00000000000443A0 ; ---------------------------------------------------------------------------
.text:00000000000443A0 loc_443A0                               ; CODE XREF: sub_436C8:loc_43AE0↑j
.text:00000000000443A0                                         ; sub_436C8+9D8↑j
.text:00000000000443A0                 LDR             W3, [SP,#0x70+var_64]
.text:00000000000443A4                 TST             W8, #0xFF
.text:00000000000443A8                 B.NE            loc_4435C
.text:00000000000443AC                 B               loc_44364
.text:00000000000443B0 ; ---------------------------------------------------------------------------
.text:00000000000443B0 loc_443B0                               ; CODE XREF: sub_436C8+25C↑j
.text:00000000000443B0                 LDR             W3, [SP,#0x70+var_64]
.text:00000000000443B4                 MOV             X0, X20
.text:00000000000443B8                 MOV             X1, X19
.text:00000000000443BC                 B               loc_44370
.text:00000000000443C0 ; ---------------------------------------------------------------------------
.text:00000000000443C0 loc_443C0                               ; CODE XREF: sub_436C8+C5C↑j
.text:00000000000443C0                 BL              .__stack_chk_fail
.text:00000000000443C0 ; } // starts at 436C8
.text:00000000000443C0 ; End of function sub_436C8
.text:00000000000443C0 ; ---------------------------------------------------------------------------
.text:00000000000443C4                 ALIGN 8
.text:00000000000443C8 ; =============== S U B R O U T I N E =======================================
.text:00000000000443C8 ; Attributes: bp-based frame
.text:00000000000443C8 sub_443C8                               ; DATA XREF: .data.rel.ro:0000000000058070↓o
.text:00000000000443C8 var_10          = -0x10
.text:00000000000443C8 var_s0          =  0
.text:00000000000443C8 ; __unwind {
.text:00000000000443C8                 STP             X20, X19, [SP,#-0x10+var_10]!
.text:00000000000443CC                 STP             X29, X30, [SP,#0x10+var_s0]
.text:00000000000443D0                 ADD             X29, SP, #0x10
.text:00000000000443D4                 LDRB            W8, [X1,#0x72]
.text:00000000000443D8                 MOV             X20, X1
.text:00000000000443DC                 MOV             X19, X2
.text:00000000000443E0                 CMP             W8, #2
.text:00000000000443E4                 B.NE            loc_443F8
.text:00000000000443E8                 LDR             X0, [X20,#8]
.text:00000000000443EC                 BL              .VMActiveVoices
.text:00000000000443F0                 CBZ             X0, loc_44414
.text:00000000000443F4                 LDRB            W8, [X20,#0x72]
.text:00000000000443F8 loc_443F8                               ; CODE XREF: sub_443C8+1C↑j
.text:00000000000443F8                 CMP             W8, #3
.text:00000000000443FC                 B.NE            loc_44424
.text:0000000000044400                 LDR             X0, [X20,#8]
.text:0000000000044404                 BL              .VMActiveVoices
.text:0000000000044408                 CBZ             X0, loc_4441C
.text:000000000004440C                 LDRB            W8, [X20,#0x72]
.text:0000000000044410                 B               loc_44424
.text:0000000000044414 ; ---------------------------------------------------------------------------
.text:0000000000044414 loc_44414                               ; CODE XREF: sub_443C8+28↑j
.text:0000000000044414                 MOV             W8, #4
.text:0000000000044418                 B               loc_44420
.text:000000000004441C ; ---------------------------------------------------------------------------
.text:000000000004441C loc_4441C                               ; CODE XREF: sub_443C8+40↑j
.text:000000000004441C                 MOV             W8, #5
.text:0000000000044420 loc_44420                               ; CODE XREF: sub_443C8+50↑j
.text:0000000000044420                 STRB            W8, [X20,#0x72]
.text:0000000000044424 loc_44424                               ; CODE XREF: sub_443C8+34↑j
.text:0000000000044424                                         ; sub_443C8+48↑j
.text:0000000000044424                 STR             X8, [X19]
.text:0000000000044428                 MOV             X0, XZR
.text:000000000004442C                 LDP             X29, X30, [SP,#0x10+var_s0]
.text:0000000000044430                 LDP             X20, X19, [SP+0x10+var_10],#0x20
.text:0000000000044434                 RET
.text:0000000000044434 ; } // starts at 443C8
.text:0000000000044434 ; End of function sub_443C8
.text:0000000000044438 ; =============== S U B R O U T I N E =======================================
.text:0000000000044438 ; Attributes: bp-based frame
.text:0000000000044438 sub_44438                               ; DATA XREF: .data.rel.ro:0000000000058078↓o
.text:0000000000044438 var_20          = -0x20
.text:0000000000044438 var_10          = -0x10
.text:0000000000044438 var_s0          =  0
.text:0000000000044438 ; __unwind {
.text:0000000000044438                 STR             X21, [SP,#-0x10+var_20]!
.text:000000000004443C                 STP             X20, X19, [SP,#0x20+var_10]
.text:0000000000044440                 STP             X29, X30, [SP,#0x20+var_s0]
.text:0000000000044444                 ADD             X29, SP, #0x20
.text:0000000000044448                 MOV             X19, X1
.text:000000000004444C                 LDR             X1, [X1]
.text:0000000000044450                 MOV             X20, X0
.text:0000000000044454                 LDR             X0, [X0]
.text:0000000000044458                 BL              .EAS_HWCloseFile
.text:000000000004445C                 MOV             X21, X0
.text:0000000000044460                 CBNZ            X0, loc_44488
.text:0000000000044464                 LDR             X1, [X19,#8]
.text:0000000000044468                 CBZ             X1, loc_44474
.text:000000000004446C                 MOV             X0, X20
.text:0000000000044470                 BL              .VMMIDIShutdown
.text:0000000000044474 loc_44474                               ; CODE XREF: sub_44438+30↑j
.text:0000000000044474                 LDRB            W8, [X20,#0x18B]
.text:0000000000044478                 CBNZ            W8, loc_44488
.text:000000000004447C                 LDR             X0, [X20]
.text:0000000000044480                 MOV             X1, X19
.text:0000000000044484                 BL              .EAS_HWFree
.text:0000000000044488 loc_44488                               ; CODE XREF: sub_44438+28↑j
.text:0000000000044488                                         ; sub_44438+40↑j
.text:0000000000044488                 LDP             X29, X30, [SP,#0x20+var_s0]
.text:000000000004448C                 LDP             X20, X19, [SP,#0x20+var_10]
.text:0000000000044490                 MOV             X0, X21
.text:0000000000044494                 LDR             X21, [SP+0x20+var_20],#0x30
.text:0000000000044498                 RET
.text:0000000000044498 ; } // starts at 44438
.text:0000000000044498 ; End of function sub_44438
.text:0000000000044498 ; ---------------------------------------------------------------------------
.text:000000000004449C                 ALIGN 0x20
.text:00000000000444A0 ; =============== S U B R O U T I N E =======================================
.text:00000000000444A0 ; Attributes: bp-based frame
.text:00000000000444A0 sub_444A0                               ; DATA XREF: .data.rel.ro:0000000000058080↓o
.text:00000000000444A0 var_10          = -0x10
.text:00000000000444A0 var_s0          =  0
.text:00000000000444A0 ; __unwind {
.text:00000000000444A0                 STP             X20, X19, [SP,#-0x10+var_10]!
.text:00000000000444A4                 STP             X29, X30, [SP,#0x10+var_s0]
.text:00000000000444A8                 ADD             X29, SP, #0x10
.text:00000000000444AC                 MOV             X19, X1
.text:00000000000444B0                 LDR             X1, [X1,#8]
.text:00000000000444B4                 MOV             X20, X0
.text:00000000000444B8                 LDR             X0, [X0,#0x170]
.text:00000000000444BC                 MOV             W2, #1
.text:00000000000444C0                 BL              .VMReset
.text:00000000000444C4                 MOV             W8, #7
.text:00000000000444C8                 STR             XZR, [X19,#0x18]
.text:00000000000444CC                 STRB            WZR, [X19,#0x77]
.text:00000000000444D0                 LDR             X1, [X19]
.text:00000000000444D4                 STRB            W8, [X19,#0x72]
.text:00000000000444D8                 LDR             X0, [X20]
.text:00000000000444DC                 LDR             X2, [X19,#0x10]
.text:00000000000444E0                 BL              .EAS_HWFileSeek
.text:00000000000444E4                 CBNZ            X0, loc_444FC
.text:00000000000444E8                 MOV             X0, X20
.text:00000000000444EC                 MOV             X1, X19
.text:00000000000444F0                 BL              sub_445F0
.text:00000000000444F4                 CBNZ            X0, loc_444FC
.text:00000000000444F8                 STRB            WZR, [X19,#0x72]
.text:00000000000444FC loc_444FC                               ; CODE XREF: sub_444A0+44↑j
.text:00000000000444FC                                         ; sub_444A0+54↑j
.text:00000000000444FC                 LDP             X29, X30, [SP,#0x10+var_s0]
.text:0000000000044500                 LDP             X20, X19, [SP+0x10+var_10],#0x20
.text:0000000000044504                 RET
.text:0000000000044504 ; } // starts at 444A0
.text:0000000000044504 ; End of function sub_444A0
.text:0000000000044508 ; =============== S U B R O U T I N E =======================================
.text:0000000000044508 sub_44508                               ; DATA XREF: .data.rel.ro:0000000000058088↓o
.text:0000000000044508 var_20          = -0x20
.text:0000000000044508 var_10          = -0x10
.text:0000000000044508 ; __unwind {
.text:0000000000044508                 LDRB            W8, [X1,#0x72]
.text:000000000004450C                 CMP             W8, #4
.text:0000000000044510                 B.NE            loc_4451C
.text:0000000000044514                 MOV             X0, #0xFFFFFFFFFFFFFFE8
.text:0000000000044518                 RET
.text:000000000004451C ; ---------------------------------------------------------------------------
.text:000000000004451C loc_4451C                               ; CODE XREF: sub_44508+8↑j
.text:000000000004451C                 STR             X19, [SP,#var_20]!
.text:0000000000044520                 STP             X29, X30, [SP,#0x20+var_10]
.text:0000000000044524                 ADD             X29, SP, #0x20+var_10
.text:0000000000044528                 MOV             X19, X1
.text:000000000004452C                 LDR             X0, [X0,#0x170]
.text:0000000000044530                 LDR             X1, [X1,#8]
.text:0000000000044534                 BL              .VMMuteAllVoices
.text:0000000000044538                 MOV             W8, #3
.text:000000000004453C                 MOV             X0, XZR
.text:0000000000044540                 STRB            W8, [X19,#0x72]
.text:0000000000044544                 LDP             X29, X30, [SP,#0x20+var_10]
.text:0000000000044548                 LDR             X19, [SP+0x20+var_20],#0x20
.text:000000000004454C                 RET
.text:000000000004454C ; } // starts at 44508
.text:000000000004454C ; End of function sub_44508
.text:0000000000044550 ; =============== S U B R O U T I N E =======================================
.text:0000000000044550 sub_44550                               ; DATA XREF: .data.rel.ro:0000000000058090↓o
.text:0000000000044550 ; __unwind {
.text:0000000000044550                 LDRB            W8, [X1,#0x72]
.text:0000000000044554                 CMP             W8, #4
.text:0000000000044558                 B.NE            loc_44564
.text:000000000004455C                 MOV             X0, #0xFFFFFFFFFFFFFFE8
.text:0000000000044560                 RET
.text:0000000000044564 ; ---------------------------------------------------------------------------
.text:0000000000044564 loc_44564                               ; CODE XREF: sub_44550+8↑j
.text:0000000000044564                 MOV             W8, #1
.text:0000000000044568                 MOV             X0, XZR
.text:000000000004456C                 STRB            W8, [X1,#0x72]
.text:0000000000044570                 RET
.text:0000000000044570 ; } // starts at 44550
.text:0000000000044570 ; End of function sub_44550
.text:0000000000044570 ; ---------------------------------------------------------------------------
.text:0000000000044574                 ALIGN 8
.text:0000000000044578 ; =============== S U B R O U T I N E =======================================
.text:0000000000044578 sub_44578                               ; DATA XREF: .data.rel.ro:00000000000580A0↓o
.text:0000000000044578 var_10          = -0x10
.text:0000000000044578 ; __unwind {
.text:0000000000044578                 CMP             X2, #5
.text:000000000004457C                 B.NE            loc_445A4
.text:0000000000044580                 STP             X29, X30, [SP,#var_10]!
.text:0000000000044584                 MOV             X29, SP
.text:0000000000044588                 ADD             X0, X1, #0x50 ; 'P'
.text:000000000004458C                 MOV             X1, X3
.text:0000000000044590                 MOV             W2, #0x20 ; ' '
.text:0000000000044594                 BL              .EAS_HWMemCpy
.text:0000000000044598                 MOV             X0, XZR
.text:000000000004459C                 LDP             X29, X30, [SP+0x10+var_10],#0x10
.text:00000000000445A0                 RET
.text:00000000000445A4 ; ---------------------------------------------------------------------------
.text:00000000000445A4 loc_445A4                               ; CODE XREF: sub_44578+4↑j
.text:00000000000445A4                 MOV             X0, #0xFFFFFFFFFFFFFFE4
.text:00000000000445A8                 RET
.text:00000000000445A8 ; } // starts at 44578
.text:00000000000445A8 ; End of function sub_44578
.text:00000000000445A8 ; ---------------------------------------------------------------------------
.text:00000000000445AC                 ALIGN 0x10
.text:00000000000445B0 ; =============== S U B R O U T I N E =======================================
.text:00000000000445B0 sub_445B0                               ; DATA XREF: .data.rel.ro:00000000000580A8↓o
.text:00000000000445B0 ; __unwind {
.text:00000000000445B0                 CBZ             X2, loc_445CC
.text:00000000000445B4                 CMP             X2, #0x12
.text:00000000000445B8                 B.EQ            loc_445D4
.text:00000000000445BC                 CMP             X2, #4
.text:00000000000445C0                 B.NE            loc_445E4
.text:00000000000445C4                 LDR             X8, [X1,#8]
.text:00000000000445C8                 B               loc_445D8
.text:00000000000445CC ; ---------------------------------------------------------------------------
.text:00000000000445CC loc_445CC                               ; CODE XREF: sub_445B0↑j
.text:00000000000445CC                 MOV             W8, #0xA
.text:00000000000445D0                 B               loc_445D8
.text:00000000000445D4 ; ---------------------------------------------------------------------------
.text:00000000000445D4 loc_445D4                               ; CODE XREF: sub_445B0+8↑j
.text:00000000000445D4                 MOV             W8, #8
.text:00000000000445D8 loc_445D8                               ; CODE XREF: sub_445B0+18↑j
.text:00000000000445D8                                         ; sub_445B0+20↑j
.text:00000000000445D8                 MOV             X0, XZR
.text:00000000000445DC                 STR             X8, [X3]
.text:00000000000445E0                 RET
.text:00000000000445E4 ; ---------------------------------------------------------------------------
.text:00000000000445E4 loc_445E4                               ; CODE XREF: sub_445B0+10↑j
.text:00000000000445E4                 MOV             X0, #0xFFFFFFFFFFFFFFE4
.text:00000000000445E8                 RET
.text:00000000000445E8 ; } // starts at 445B0
.text:00000000000445E8 ; End of function sub_445B0
.text:00000000000445E8 ; ---------------------------------------------------------------------------
.text:00000000000445EC                 ALIGN 0x10
.text:00000000000445F0 ; =============== S U B R O U T I N E =======================================
.text:00000000000445F0 ; Attributes: bp-based frame
.text:00000000000445F0 sub_445F0                               ; CODE XREF: sub_43658+34↑p
.text:00000000000445F0                                         ; sub_444A0+50↑p
.text:00000000000445F0 var_68          = -0x68
.text:00000000000445F0 var_5C          = -0x5C
.text:00000000000445F0 var_58          = -0x58
.text:00000000000445F0 var_50          = -0x50
.text:00000000000445F0 var_40          = -0x40
.text:00000000000445F0 var_30          = -0x30
.text:00000000000445F0 var_20          = -0x20
.text:00000000000445F0 var_10          = -0x10
.text:00000000000445F0 var_s0          =  0
.text:00000000000445F0 ; __unwind {
.text:00000000000445F0                 SUB             SP, SP, #0x80
.text:00000000000445F4                 STP             X28, X27, [SP,#0x70+var_50]
.text:00000000000445F8                 STP             X26, X25, [SP,#0x70+var_40]
.text:00000000000445FC                 STP             X24, X23, [SP,#0x70+var_30]
.text:0000000000044600                 STP             X22, X21, [SP,#0x70+var_20]
.text:0000000000044604                 STP             X20, X19, [SP,#0x70+var_10]
.text:0000000000044608                 STP             X29, X30, [SP,#0x70+var_s0]
.text:000000000004460C                 ADD             X29, SP, #0x70
.text:0000000000044610                 MRS             X8, #3, c13, c0, #2
.text:0000000000044614                 ADRP            X9, #xmmword_47A0@PAGE
.text:0000000000044618                 STR             X8, [SP,#0x70+var_68]
.text:000000000004461C                 ADRP            X28, #off_580B8@PAGE ; "BEGIN:IMELODY"
.text:0000000000044620                 LDR             X8, [X8,#0x28]
.text:0000000000044624                 ADRP            X25, #unk_4B96@PAGE
.text:0000000000044628                 LDR             Q0, [X9,#xmmword_47A0@PAGEOFF]
.text:000000000004462C                 MOV             W9, #0x100
.text:0000000000044630                 MOV             X19, X1
.text:0000000000044634                 MOV             X20, X0
.text:0000000000044638                 MOV             X10, #0xFFFFFFFFFFFFFFFF
.text:000000000004463C                 STR             X8, [SP,#0x70+var_58]
.text:0000000000044640                 MOV             W11, #0xFFFF
.text:0000000000044644                 STR             XZR, [X1,#0x18]
.text:0000000000044648                 MOVK            W9, #0x73C,LSL#16
.text:000000000004464C                 STURH           WZR, [X1,#0x77]
.text:0000000000044650                 ADD             X21, X1, #0x38 ; '8'
.text:0000000000044654                 STUR            Q0, [X1,#0x28]
.text:0000000000044658                 ADD             X26, X1, #0x79 ; 'y'
.text:000000000004465C                 STR             X10, [X1,#0x40]
.text:0000000000044660                 MOV             W27, #0xA
.text:0000000000044664                 STRH            W11, [X1,#0x70]
.text:0000000000044668                 MOV             W8, #1
.text:000000000004466C                 STUR            W9, [X1,#0x73]
.text:0000000000044670                 ADD             X28, X28, #off_580B8@PAGEOFF ; "BEGIN:IMELODY"
.text:0000000000044674                 ADD             X25, X25, #unk_4B96@PAGEOFF
.text:0000000000044678                 TST             W8, #0xFF
.text:000000000004467C                 B.EQ            loc_44710
.text:0000000000044680 loc_44680                               ; CODE XREF: sub_445F0+11C↓j
.text:0000000000044680                                         ; sub_445F0+27C↓j
.text:0000000000044680                 LDR             X22, [X20]
.text:0000000000044684                 MOV             X2, X21
.text:0000000000044688                 LDR             X23, [X19]
.text:000000000004468C                 MOV             X0, X22
.text:0000000000044690                 MOV             X1, X23
.text:0000000000044694                 BL              .EAS_HWFilePos
.text:0000000000044698                 CBNZ            X0, loc_449FC
.text:000000000004469C                 MOV             W24, WZR
.text:00000000000446A0                 STRB            WZR, [X19,#0x79]
.text:00000000000446A4 loc_446A4                               ; CODE XREF: sub_445F0+F0↓j
.text:00000000000446A4                 ADD             X2, SP, #0x70+var_5C
.text:00000000000446A8                 MOV             X0, X22
.text:00000000000446AC                 MOV             X1, X23
.text:00000000000446B0                 BL              .EAS_HWGetByte
.text:00000000000446B4                 CBNZ            X0, loc_446E8
.text:00000000000446B8                 LDRB            W8, [SP,#0x70+var_5C]
.text:00000000000446BC                 CMP             W8, #0xD
.text:00000000000446C0                 B.EQ            loc_446DC
.text:00000000000446C4                 CMP             W8, #0xA
.text:00000000000446C8                 B.EQ            loc_446F8
.text:00000000000446CC                 ADD             W9, W24, #1
.text:00000000000446D0                 ADD             X10, X19, W24,SXTW
.text:00000000000446D4                 MOV             W24, W9
.text:00000000000446D8                 STRB            W8, [X10,#0x79]
.text:00000000000446DC loc_446DC                               ; CODE XREF: sub_445F0+D0↑j
.text:00000000000446DC                 CMP             W24, #0x4B ; 'K'
.text:00000000000446E0                 B.LT            loc_446A4
.text:00000000000446E4                 B               loc_446F8
.text:00000000000446E8 ; ---------------------------------------------------------------------------
.text:00000000000446E8 loc_446E8                               ; CODE XREF: sub_445F0+C4↑j
.text:00000000000446E8                 CMP             W24, #1
.text:00000000000446EC                 B.LT            loc_449FC
.text:00000000000446F0                 CMP             X0, #3
.text:00000000000446F4                 B.NE            loc_449FC
.text:00000000000446F8 loc_446F8                               ; CODE XREF: sub_445F0+D8↑j
.text:00000000000446F8                                         ; sub_445F0+F4↑j
.text:00000000000446F8                 ADD             X8, X19, W24,SXTW
.text:00000000000446FC                 STRB            WZR, [X8,#0x79]
.text:0000000000044700                 B               loc_44710
.text:0000000000044704 ; ---------------------------------------------------------------------------
.text:0000000000044704 loc_44704                               ; CODE XREF: sub_445F0+1F4↓j
.text:0000000000044704                                         ; sub_445F0+208↓j ...
.text:0000000000044704                 LDRB            W8, [X19,#0x74]
.text:0000000000044708                 TST             W8, #0xFF
.text:000000000004470C                 B.NE            loc_44680
.text:0000000000044710 loc_44710                               ; CODE XREF: sub_445F0+8C↑j
.text:0000000000044710                                         ; sub_445F0+110↑j ...
.text:0000000000044710                 MOV             X9, XZR
.text:0000000000044714 loc_44714                               ; CODE XREF: sub_445F0+174↓j
.text:0000000000044714                 LDR             X8, [X28,X9,LSL#3]
.text:0000000000044718                 LDRB            W12, [X8]
.text:000000000004471C                 CBZ             W12, loc_4476C
.text:0000000000044720                 MOV             X11, XZR
.text:0000000000044724                 ADD             X10, X8, #1
.text:0000000000044728 loc_44728                               ; CODE XREF: sub_445F0+164↓j
.text:0000000000044728                 LDRB            W8, [X26,X11]
.text:000000000004472C                 AND             W12, W12, #0xFF
.text:0000000000044730                 SUB             W13, W8, #0x61 ; 'a'
.text:0000000000044734                 AND             W14, W8, #0xFFFFFFDF
.text:0000000000044738                 CMP             W13, #0x1A
.text:000000000004473C                 CSEL            W8, W14, W8, CC
.text:0000000000044740                 CMP             W12, W8,SXTB
.text:0000000000044744                 B.NE            loc_4475C
.text:0000000000044748                 ADD             X8, X11, #1
.text:000000000004474C                 LDRB            W12, [X10,X11]
.text:0000000000044750                 MOV             X11, X8
.text:0000000000044754                 CBNZ            W12, loc_44728
.text:0000000000044758                 B               loc_44770
.text:000000000004475C ; ---------------------------------------------------------------------------
.text:000000000004475C loc_4475C                               ; CODE XREF: sub_445F0+154↑j
.text:000000000004475C                 ADD             X9, X9, #1
.text:0000000000044760                 CMP             X9, #0xA
.text:0000000000044764                 B.CC            loc_44714
.text:0000000000044768                 B               loc_448CC
.text:000000000004476C ; ---------------------------------------------------------------------------
.text:000000000004476C loc_4476C                               ; CODE XREF: sub_445F0+12C↑j
.text:000000000004476C                 MOV             W8, WZR
.text:0000000000044770 loc_44770                               ; CODE XREF: sub_445F0+168↑j
.text:0000000000044770                 CMP             W9, #9
.text:0000000000044774                 STRB            W8, [X19,#0x74]
.text:0000000000044778                 B.HI            loc_448CC
.text:000000000004477C                 AND             X9, X9, #0xFFFFFFFF
.text:0000000000044780                 MOV             X0, XZR
.text:0000000000044784                 ADR             X10, loc_44704
.text:0000000000044788                 LDRB            W11, [X25,X9]
.text:000000000004478C                 ADD             X10, X10, X11,LSL#2
.text:0000000000044790                 BR              X10
.text:0000000000044794 ; ---------------------------------------------------------------------------
.text:0000000000044794                 MOV             W9, WZR
.text:0000000000044798                 MOV             W10, WZR
.text:000000000004479C                 B               loc_44878
.text:00000000000447A0 ; ---------------------------------------------------------------------------
.text:00000000000447A0 loc_447A0                               ; CODE XREF: sub_445F0+1CC↓j
.text:00000000000447A0                                         ; sub_445F0+1D4↓j
.text:00000000000447A0                 MOV             W9, W8
.text:00000000000447A4                 ADD             W8, W8, #1
.text:00000000000447A8                 ADD             X10, X19, W9,UXTB
.text:00000000000447AC                 STRB            W8, [X19,#0x74]
.text:00000000000447B0                 LDRB            W10, [X10,#0x79]
.text:00000000000447B4                 SUB             W11, W10, #9
.text:00000000000447B8                 CMP             W11, #5
.text:00000000000447BC                 B.CC            loc_447A0
.text:00000000000447C0                 CMP             W10, #0x20 ; ' '
.text:00000000000447C4                 B.EQ            loc_447A0
.text:00000000000447C8                 CMP             W10, #0x56 ; 'V'
.text:00000000000447CC                 B.EQ            loc_447E8
.text:00000000000447D0                 TST             W8, #0xFF
.text:00000000000447D4                 B.EQ            loc_447DC
.text:00000000000447D8                 STRB            W9, [X19,#0x74]
.text:00000000000447DC loc_447DC                               ; CODE XREF: sub_445F0+1E4↑j
.text:00000000000447DC                 SUB             W8, W10, #0x30 ; '0'
.text:00000000000447E0                 CMP             W8, #9
.text:00000000000447E4                 B.HI            loc_44704
.text:00000000000447E8 loc_447E8                               ; CODE XREF: sub_445F0+1DC↑j
.text:00000000000447E8                 LDR             X0, [X20]
.text:00000000000447EC                 MOV             X1, X19
.text:00000000000447F0                 MOV             W2, #1
.text:00000000000447F4                 BL              sub_44AB0
.text:00000000000447F8                 B               loc_44704
.text:00000000000447FC ; ---------------------------------------------------------------------------
.text:00000000000447FC loc_447FC                               ; CODE XREF: sub_445F0+228↓j
.text:00000000000447FC                                         ; sub_445F0+230↓j
.text:00000000000447FC                 MOV             W9, W8
.text:0000000000044800                 ADD             W8, W8, #1
.text:0000000000044804                 ADD             X9, X19, W9,UXTB
.text:0000000000044808                 STRB            W8, [X19,#0x74]
.text:000000000004480C                 LDRB            W9, [X9,#0x79]
.text:0000000000044810                 SUB             W10, W9, #9
.text:0000000000044814                 CMP             W10, #5
.text:0000000000044818                 B.CC            loc_447FC
.text:000000000004481C                 CMP             W9, #0x20 ; ' '
.text:0000000000044820                 B.EQ            loc_447FC
.text:0000000000044824                 CMP             W9, #0x53 ; 'S'
.text:0000000000044828                 B.NE            loc_44854
.text:000000000004482C loc_4482C                               ; CODE XREF: sub_445F0+258↓j
.text:000000000004482C                                         ; sub_445F0+260↓j
.text:000000000004482C                 MOV             W9, W8
.text:0000000000044830                 ADD             W8, W8, #1
.text:0000000000044834                 ADD             X9, X19, W9,UXTB
.text:0000000000044838                 STRB            W8, [X19,#0x74]
.text:000000000004483C                 LDRB            W9, [X9,#0x79]
.text:0000000000044840                 SUB             W10, W9, #9
.text:0000000000044844                 CMP             W10, #5
.text:0000000000044848                 B.CC            loc_4482C
.text:000000000004484C                 CMP             W9, #0x20 ; ' '
.text:0000000000044850                 B.EQ            loc_4482C
.text:0000000000044854 loc_44854                               ; CODE XREF: sub_445F0+238↑j
.text:0000000000044854                 SUB             W9, W9, #0x30 ; '0'
.text:0000000000044858                 CMP             W9, #2
.text:000000000004485C                 B.HI            loc_449E0
.text:0000000000044860                 LDRB            W8, [X19,#0x74]
.text:0000000000044864                 STRB            W9, [X19,#0x73]
.text:0000000000044868                 TST             W8, #0xFF
.text:000000000004486C                 B.NE            loc_44680
.text:0000000000044870                 B               loc_44710
.text:0000000000044874 ; ---------------------------------------------------------------------------
.text:0000000000044874 loc_44874                               ; CODE XREF: sub_445F0+2C8↓j
.text:0000000000044874                 MOV             W10, WZR
.text:0000000000044878 loc_44878                               ; CODE XREF: sub_445F0+1AC↑j
.text:0000000000044878                                         ; sub_445F0+2B4↓j ...
.text:0000000000044878                 MOV             W11, W8
.text:000000000004487C                 ADD             W8, W8, #1
.text:0000000000044880                 ADD             X11, X19, W11,UXTB
.text:0000000000044884                 STRB            W8, [X19,#0x74]
.text:0000000000044888                 LDRB            W11, [X11,#0x79]
.text:000000000004488C                 CMP             W11, #0x2E ; '.'
.text:0000000000044890                 CCMP            W11, #0, #4, NE
.text:0000000000044894                 SXTB            W11, W11
.text:0000000000044898                 B.EQ            loc_448B4
.text:000000000004489C                 SUB             W12, W11, #0x30 ; '0'
.text:00000000000448A0                 CMP             W12, #9
.text:00000000000448A4                 B.HI            loc_44878
.text:00000000000448A8                 MADD            W10, W10, W27, W11
.text:00000000000448AC                 SUB             W10, W10, #0x30 ; '0'
.text:00000000000448B0                 B               loc_44878
.text:00000000000448B4 ; ---------------------------------------------------------------------------
.text:00000000000448B4 loc_448B4                               ; CODE XREF: sub_445F0+2A8↑j
.text:00000000000448B4                 ADD             W9, W10, W9,LSL#8
.text:00000000000448B8                 CBNZ            W11, loc_44874
.text:00000000000448BC                 ORR             W8, W9, #2
.text:00000000000448C0                 CMP             W8, #0x102
.text:00000000000448C4                 B.EQ            loc_44704
.text:00000000000448C8                 B               loc_449F8
.text:00000000000448CC ; ---------------------------------------------------------------------------
.text:00000000000448CC loc_448CC                               ; CODE XREF: sub_445F0+178↑j
.text:00000000000448CC                                         ; sub_445F0+188↑j
.text:00000000000448CC                 MOV             W8, #1
.text:00000000000448D0 loc_448D0                               ; CODE XREF: sub_445F0+3FC↓j
.text:00000000000448D0                 STRB            W8, [X19,#0x74]
.text:00000000000448D4                 B               loc_44704
.text:00000000000448D8 ; ---------------------------------------------------------------------------
.text:00000000000448D8                 MOV             W9, WZR
.text:00000000000448DC loc_448DC                               ; CODE XREF: sub_445F0+330↓j
.text:00000000000448DC                 MOV             W10, WZR
.text:00000000000448E0                 B               loc_448F8
.text:00000000000448E4 ; ---------------------------------------------------------------------------
.text:00000000000448E4 loc_448E4                               ; CODE XREF: sub_445F0+328↓j
.text:00000000000448E4                 SUB             W12, W11, #0x30 ; '0'
.text:00000000000448E8                 CMP             W12, #9
.text:00000000000448EC                 B.HI            loc_448F8
.text:00000000000448F0                 MADD            W10, W10, W27, W11
.text:00000000000448F4                 SUB             W10, W10, #0x30 ; '0'
.text:00000000000448F8 loc_448F8                               ; CODE XREF: sub_445F0+2F0↑j
.text:00000000000448F8                                         ; sub_445F0+2FC↑j
.text:00000000000448F8                 MOV             W11, W8
.text:00000000000448FC                 ADD             W8, W8, #1
.text:0000000000044900                 ADD             X11, X19, W11,UXTB
.text:0000000000044904                 STRB            W8, [X19,#0x74]
.text:0000000000044908                 LDRB            W11, [X11,#0x79]
.text:000000000004490C                 CMP             W11, #0x2E ; '.'
.text:0000000000044910                 CCMP            W11, #0, #4, NE
.text:0000000000044914                 SXTB            W11, W11
.text:0000000000044918                 B.NE            loc_448E4
.text:000000000004491C                 ADD             W9, W10, W9,LSL#8
.text:0000000000044920                 CBNZ            W11, loc_448DC
.text:0000000000044924                 CMP             W9, #0x100
.text:0000000000044928                 B.EQ            loc_44704
.text:000000000004492C                 CMP             W9, #0x200
.text:0000000000044930                 B.EQ            loc_44704
.text:0000000000044934                 B               loc_449F8
.text:0000000000044938 ; ---------------------------------------------------------------------------
.text:0000000000044938                 ADD             X8, X19, W8,UXTB
.text:000000000004493C                 ADD             X2, X8, #0x79 ; 'y'
.text:0000000000044940                 MOV             X0, X19
.text:0000000000044944                 MOV             W1, #2
.text:0000000000044948                 B               loc_4495C
.text:000000000004494C ; ---------------------------------------------------------------------------
.text:000000000004494C                 ADD             X8, X19, W8,UXTB
.text:0000000000044950                 ADD             X2, X8, #0x79 ; 'y'
.text:0000000000044954                 MOV             X0, X19
.text:0000000000044958                 MOV             W1, #1
.text:000000000004495C loc_4495C                               ; CODE XREF: sub_445F0+358↑j
.text:000000000004495C                 BL              sub_44A38
.text:0000000000044960                 B               loc_44704
.text:0000000000044964 ; ---------------------------------------------------------------------------
.text:0000000000044964                 MOV             W9, WZR
.text:0000000000044968                 B               loc_44974
.text:000000000004496C ; ---------------------------------------------------------------------------
.text:000000000004496C loc_4496C                               ; CODE XREF: sub_445F0+3BC↓j
.text:000000000004496C                 MADD            W9, W9, W27, W11
.text:0000000000044970                 SUB             W9, W9, #0x30 ; '0'
.text:0000000000044974 loc_44974                               ; CODE XREF: sub_445F0+378↑j
.text:0000000000044974                                         ; sub_445F0+3A0↓j ...
.text:0000000000044974                 MOV             W10, W8
.text:0000000000044978                 ADD             W8, W8, #1
.text:000000000004497C                 ADD             X11, X19, W10,UXTB
.text:0000000000044980                 STRB            W8, [X19,#0x74]
.text:0000000000044984                 LDRB            W11, [X11,#0x79]
.text:0000000000044988                 SUB             W12, W11, #9
.text:000000000004498C                 CMP             W12, #5
.text:0000000000044990                 B.CC            loc_44974
.text:0000000000044994                 CMP             W11, #0x20 ; ' '
.text:0000000000044998                 B.EQ            loc_44974
.text:000000000004499C                 CBZ             W11, loc_449C0
.text:00000000000449A0                 SXTB            W11, W11
.text:00000000000449A4                 SUB             W12, W11, #0x30 ; '0'
.text:00000000000449A8                 CMP             W12, #9
.text:00000000000449AC                 B.LS            loc_4496C
.text:00000000000449B0                 TST             W8, #0xFF
.text:00000000000449B4                 B.EQ            loc_449C0
.text:00000000000449B8                 CBZ             W11, loc_449C0
.text:00000000000449BC                 STRB            W10, [X19,#0x74]
.text:00000000000449C0 loc_449C0                               ; CODE XREF: sub_445F0+3AC↑j
.text:00000000000449C0                                         ; sub_445F0+3C4↑j ...
.text:00000000000449C0                 SUB             W8, W9, #0x19
.text:00000000000449C4                 CMP             W8, #0x36B
.text:00000000000449C8                 B.HI            loc_44704
.text:00000000000449CC                 MOV             W8, #0x1D4C00
.text:00000000000449D4                 UDIV            W8, W8, W9
.text:00000000000449D8                 STR             X8, [X19,#0x28]
.text:00000000000449DC                 B               loc_44704
.text:00000000000449E0 ; ---------------------------------------------------------------------------
.text:00000000000449E0 loc_449E0                               ; CODE XREF: sub_445F0+26C↑j
.text:00000000000449E0                 TST             W8, #0xFF
.text:00000000000449E4                 B.EQ            loc_44704
.text:00000000000449E8                 SUB             W8, W8, #1
.text:00000000000449EC                 B               loc_448D0
.text:00000000000449F0 ; ---------------------------------------------------------------------------
.text:00000000000449F0                 MOV             X0, #0xFFFFFFFFFFFFFFEF
.text:00000000000449F4                 B               loc_449FC
.text:00000000000449F8 ; ---------------------------------------------------------------------------
.text:00000000000449F8 loc_449F8                               ; CODE XREF: sub_445F0+2D8↑j
.text:00000000000449F8                                         ; sub_445F0+344↑j
.text:00000000000449F8                 MOV             X0, #0xFFFFFFFFFFFFFFF1
.text:00000000000449FC loc_449FC                               ; CODE XREF: sub_445F0+A8↑j
.text:00000000000449FC                                         ; sub_445F0+FC↑j ...
.text:00000000000449FC                 LDR             X8, [SP,#0x70+var_68]
.text:0000000000044A00                 LDR             X8, [X8,#0x28]
.text:0000000000044A04                 LDR             X9, [SP,#0x70+var_58]
.text:0000000000044A08                 CMP             X8, X9
.text:0000000000044A0C                 B.NE            loc_44A30
.text:0000000000044A10                 LDP             X29, X30, [SP,#0x70+var_s0]
.text:0000000000044A14                 LDP             X20, X19, [SP,#0x70+var_10]
.text:0000000000044A18                 LDP             X22, X21, [SP,#0x70+var_20]
.text:0000000000044A1C                 LDP             X24, X23, [SP,#0x70+var_30]
.text:0000000000044A20                 LDP             X26, X25, [SP,#0x70+var_40]
.text:0000000000044A24                 LDP             X28, X27, [SP,#0x70+var_50]
.text:0000000000044A28                 ADD             SP, SP, #0x80
.text:0000000000044A2C                 RET
.text:0000000000044A30 ; ---------------------------------------------------------------------------
.text:0000000000044A30 loc_44A30                               ; CODE XREF: sub_445F0+41C↑j
.text:0000000000044A30                 BL              .__stack_chk_fail
.text:0000000000044A30 ; } // starts at 445F0
.text:0000000000044A30 ; End of function sub_445F0
.text:0000000000044A30 ; ---------------------------------------------------------------------------
.text:0000000000044A34                 ALIGN 8
.text:0000000000044A38 ; =============== S U B R O U T I N E =======================================
.text:0000000000044A38 ; Attributes: bp-based frame
.text:0000000000044A38 sub_44A38                               ; CODE XREF: sub_445F0:loc_4495C↑p
.text:0000000000044A38 var_20          = -0x20
.text:0000000000044A38 var_10          = -0x10
.text:0000000000044A38 var_s0          =  0
.text:0000000000044A38 ; __unwind {
.text:0000000000044A38                 LDR             X8, [X0,#0x50]
.text:0000000000044A3C                 CBZ             X8, locret_44AA8
.text:0000000000044A40                 STP             X22, X21, [SP,#-0x10+var_20]!
.text:0000000000044A44                 STP             X20, X19, [SP,#0x20+var_10]
.text:0000000000044A48                 STP             X29, X30, [SP,#0x20+var_s0]
.text:0000000000044A4C                 ADD             X29, SP, #0x20
.text:0000000000044A50                 MOV             X19, X0
.text:0000000000044A54                 MOV             X0, X2  ; s
.text:0000000000044A58                 MOV             X21, X2
.text:0000000000044A5C                 MOV             W20, W1
.text:0000000000044A60                 BL              .strlen
.text:0000000000044A64                 LDR             X9, [X19,#0x68]
.text:0000000000044A68                 MOV             X1, X21 ; src
.text:0000000000044A6C                 LDR             X8, [X19,#0x58]
.text:0000000000044A70                 CMP             X0, X9
.text:0000000000044A74                 CSEL            X22, X9, X0, GT
.text:0000000000044A78                 MOV             X0, X8  ; dest
.text:0000000000044A7C                 MOV             X2, X22 ; n
.text:0000000000044A80                 BL              .strncpy
.text:0000000000044A84                 LDR             X8, [X19,#0x58]
.text:0000000000044A88                 MOV             W0, W20
.text:0000000000044A8C                 STRB            WZR, [X8,X22]
.text:0000000000044A90                 LDP             X1, X2, [X19,#0x58]
.text:0000000000044A94                 LDR             X3, [X19,#0x50]
.text:0000000000044A98                 LDP             X29, X30, [SP,#0x20+var_s0]
.text:0000000000044A9C                 LDP             X20, X19, [SP,#0x20+var_10]
.text:0000000000044AA0                 LDP             X22, X21, [SP+0x20+var_20],#0x30
.text:0000000000044AA4                 BR              X3
.text:0000000000044AA8 ; ---------------------------------------------------------------------------
.text:0000000000044AA8 locret_44AA8                            ; CODE XREF: sub_44A38+4↑j
.text:0000000000044AA8                 RET
.text:0000000000044AA8 ; } // starts at 44A38
.text:0000000000044AA8 ; End of function sub_44A38
.text:0000000000044AA8 ; ---------------------------------------------------------------------------
.text:0000000000044AAC                 ALIGN 0x10
.text:0000000000044AB0 ; =============== S U B R O U T I N E =======================================
.text:0000000000044AB0 ; Attributes: bp-based frame
.text:0000000000044AB0 sub_44AB0                               ; CODE XREF: sub_436C8+3D4↑p
.text:0000000000044AB0                                         ; sub_445F0+204↑p
.text:0000000000044AB0 var_60          = -0x60
.text:0000000000044AB0 var_5C          = -0x5C
.text:0000000000044AB0 var_58          = -0x58
.text:0000000000044AB0 var_50          = -0x50
.text:0000000000044AB0 var_40          = -0x40
.text:0000000000044AB0 var_30          = -0x30
.text:0000000000044AB0 var_20          = -0x20
.text:0000000000044AB0 var_10          = -0x10
.text:0000000000044AB0 var_s0          =  0
.text:0000000000044AB0 ; __unwind {
.text:0000000000044AB0                 SUB             SP, SP, #0x70
.text:0000000000044AB4                 STP             X28, X27, [SP,#0x60+var_50]
.text:0000000000044AB8                 STP             X26, X25, [SP,#0x60+var_40]
.text:0000000000044ABC                 STP             X24, X23, [SP,#0x60+var_30]
.text:0000000000044AC0                 STP             X22, X21, [SP,#0x60+var_20]
.text:0000000000044AC4                 STP             X20, X19, [SP,#0x60+var_10]
.text:0000000000044AC8                 STP             X29, X30, [SP,#0x60+var_s0]
.text:0000000000044ACC                 ADD             X29, SP, #0x60
.text:0000000000044AD0                 MRS             X24, #3, c13, c0, #2
.text:0000000000044AD4                 ADRP            X25, #off_580B8@PAGE ; "BEGIN:IMELODY"
.text:0000000000044AD8                 LDR             X8, [X24,#0x28]
.text:0000000000044ADC                 MOV             W20, W2
.text:0000000000044AE0                 MOV             X19, X1
.text:0000000000044AE4                 MOV             X21, X0
.text:0000000000044AE8                 ADD             X22, X1, #0x38 ; '8'
.text:0000000000044AEC                 ADD             X26, X1, #0x79 ; 'y'
.text:0000000000044AF0                 STR             X8, [SP,#0x60+var_58]
.text:0000000000044AF4                 ADD             X25, X25, #off_580B8@PAGEOFF ; "BEGIN:IMELODY"
.text:0000000000044AF8 loc_44AF8                               ; CODE XREF: sub_44AB0+68↓j
.text:0000000000044AF8                                         ; sub_44AB0+70↓j ...
.text:0000000000044AF8                 LDRB            W8, [X19,#0x74]
.text:0000000000044AFC                 ADD             W9, W8, #1
.text:0000000000044B00                 ADD             X8, X19, X8
.text:0000000000044B04                 STRB            W9, [X19,#0x74]
.text:0000000000044B08                 LDRB            W8, [X8,#0x79]
.text:0000000000044B0C                 CBZ             W8, loc_44B28
.text:0000000000044B10                 SUB             W9, W8, #9
.text:0000000000044B14                 CMP             W9, #5
.text:0000000000044B18                 B.CC            loc_44AF8
.text:0000000000044B1C                 CMP             W8, #0x20 ; ' '
.text:0000000000044B20                 B.EQ            loc_44AF8
.text:0000000000044B24                 B               loc_44C1C
.text:0000000000044B28 ; ---------------------------------------------------------------------------
.text:0000000000044B28 loc_44B28                               ; CODE XREF: sub_44AB0+5C↑j
.text:0000000000044B28                 CBNZ            W20, loc_44C6C
.text:0000000000044B2C                 LDR             X23, [X19]
.text:0000000000044B30                 MOV             X0, X21
.text:0000000000044B34                 MOV             X2, X22
.text:0000000000044B38                 STRB            WZR, [X19,#0x74]
.text:0000000000044B3C                 STRB            WZR, [X19,#0x79]
.text:0000000000044B40                 MOV             X1, X23
.text:0000000000044B44                 BL              .EAS_HWFilePos
.text:0000000000044B48                 CBNZ            X0, loc_44C6C
.text:0000000000044B4C                 MOV             W27, WZR
.text:0000000000044B50                 STRB            WZR, [X19,#0x79]
.text:0000000000044B54 loc_44B54                               ; CODE XREF: sub_44AB0+E0↓j
.text:0000000000044B54                 MOV             X2, SP
.text:0000000000044B58                 MOV             X0, X21
.text:0000000000044B5C                 MOV             X1, X23
.text:0000000000044B60                 BL              .EAS_HWGetByte
.text:0000000000044B64                 CBNZ            X0, loc_44B98
.text:0000000000044B68                 LDRB            W8, [SP,#0x60+var_60]
.text:0000000000044B6C                 CMP             W8, #0xD
.text:0000000000044B70                 B.EQ            loc_44B8C
.text:0000000000044B74                 CMP             W8, #0xA
.text:0000000000044B78                 B.EQ            loc_44BA8
.text:0000000000044B7C                 ADD             W9, W27, #1
.text:0000000000044B80                 ADD             X10, X19, W27,SXTW
.text:0000000000044B84                 MOV             W27, W9
.text:0000000000044B88                 STRB            W8, [X10,#0x79]
.text:0000000000044B8C loc_44B8C                               ; CODE XREF: sub_44AB0+C0↑j
.text:0000000000044B8C                 CMP             W27, #0x4B ; 'K'
.text:0000000000044B90                 B.LT            loc_44B54
.text:0000000000044B94                 B               loc_44BA8
.text:0000000000044B98 ; ---------------------------------------------------------------------------
.text:0000000000044B98 loc_44B98                               ; CODE XREF: sub_44AB0+B4↑j
.text:0000000000044B98                 CMP             W27, #1
.text:0000000000044B9C                 B.LT            loc_44C6C
.text:0000000000044BA0                 CMP             X0, #3
.text:0000000000044BA4                 B.NE            loc_44C6C
.text:0000000000044BA8 loc_44BA8                               ; CODE XREF: sub_44AB0+C8↑j
.text:0000000000044BA8                                         ; sub_44AB0+E4↑j
.text:0000000000044BA8                 ADD             X9, X19, W27,SXTW
.text:0000000000044BAC                 MOV             X8, XZR
.text:0000000000044BB0                 STRB            WZR, [X9,#0x79]
.text:0000000000044BB4 loc_44BB4                               ; CODE XREF: sub_44AB0+150↓j
.text:0000000000044BB4                 LDR             X9, [X25,X8,LSL#3]
.text:0000000000044BB8                 LDRB            W10, [X9]
.text:0000000000044BBC                 CBZ             W10, loc_44C08
.text:0000000000044BC0                 ADD             X9, X9, #1
.text:0000000000044BC4                 MOV             X11, X26
.text:0000000000044BC8 loc_44BC8                               ; CODE XREF: sub_44AB0+140↓j
.text:0000000000044BC8                 LDRB            W12, [X11]
.text:0000000000044BCC                 AND             W10, W10, #0xFF
.text:0000000000044BD0                 SUB             W13, W12, #0x61 ; 'a'
.text:0000000000044BD4                 AND             W14, W12, #0xFFFFFFDF
.text:0000000000044BD8                 CMP             W13, #0x1A
.text:0000000000044BDC                 CSEL            W12, W14, W12, CC
.text:0000000000044BE0                 CMP             W10, W12,SXTB
.text:0000000000044BE4                 B.NE            loc_44BF8
.text:0000000000044BE8                 LDRB            W10, [X9],#1
.text:0000000000044BEC                 ADD             X11, X11, #1
.text:0000000000044BF0                 CBNZ            W10, loc_44BC8
.text:0000000000044BF4                 B               loc_44C08
.text:0000000000044BF8 ; ---------------------------------------------------------------------------
.text:0000000000044BF8 loc_44BF8                               ; CODE XREF: sub_44AB0+134↑j
.text:0000000000044BF8                 ADD             X8, X8, #1
.text:0000000000044BFC                 CMP             X8, #0xA
.text:0000000000044C00                 B.CC            loc_44BB4
.text:0000000000044C04                 B               loc_44AF8
.text:0000000000044C08 ; ---------------------------------------------------------------------------
.text:0000000000044C08 loc_44C08                               ; CODE XREF: sub_44AB0+10C↑j
.text:0000000000044C08                                         ; sub_44AB0+144↑j
.text:0000000000044C08                 CMP             W8, #9
.text:0000000000044C0C                 B.NE            loc_44AF8
.text:0000000000044C10                 MOV             W0, WZR
.text:0000000000044C14                 STRB            WZR, [X19,#0x79]
.text:0000000000044C18                 B               loc_44C70
.text:0000000000044C1C ; ---------------------------------------------------------------------------
.text:0000000000044C1C loc_44C1C                               ; CODE XREF: sub_44AB0+74↑j
.text:0000000000044C1C                 SXTB            W8, W8
.text:0000000000044C20                 CMP             W8, #0x2D ; '-'
.text:0000000000044C24                 B.EQ            loc_44C48
.text:0000000000044C28                 AND             W9, W8, #0xFF
.text:0000000000044C2C                 CMP             W9, #0x2B ; '+'
.text:0000000000044C30                 B.NE            loc_44C60
.text:0000000000044C34                 LDRB            W8, [X19,#0x76]
.text:0000000000044C38                 CMP             W8, #0xE
.text:0000000000044C3C                 B.HI            loc_44E18
.text:0000000000044C40                 ADD             W8, W8, #1
.text:0000000000044C44                 B               loc_44C54
.text:0000000000044C48 ; ---------------------------------------------------------------------------
.text:0000000000044C48 loc_44C48                               ; CODE XREF: sub_44AB0+174↑j
.text:0000000000044C48                 LDRB            W8, [X19,#0x76]
.text:0000000000044C4C                 CBZ             W8, loc_44E18
.text:0000000000044C50                 SUB             W8, W8, #1
.text:0000000000044C54 loc_44C54                               ; CODE XREF: sub_44AB0+194↑j
.text:0000000000044C54                 MOV             W0, #1
.text:0000000000044C58                 STRB            W8, [X19,#0x76]
.text:0000000000044C5C                 B               loc_44C70
.text:0000000000044C60 ; ---------------------------------------------------------------------------
.text:0000000000044C60 loc_44C60                               ; CODE XREF: sub_44AB0+180↑j
.text:0000000000044C60                 SUB             W26, W8, #0x30 ; '0'
.text:0000000000044C64                 CMP             W26, #9
.text:0000000000044C68                 B.LS            loc_44CA0
.text:0000000000044C6C loc_44C6C                               ; CODE XREF: sub_44AB0:loc_44B28↑j
.text:0000000000044C6C                                         ; sub_44AB0+98↑j ...
.text:0000000000044C6C                 MOV             W0, WZR
.text:0000000000044C70 loc_44C70                               ; CODE XREF: sub_44AB0+168↑j
.text:0000000000044C70                                         ; sub_44AB0+1AC↑j ...
.text:0000000000044C70                 LDR             X8, [X24,#0x28]
.text:0000000000044C74                 LDR             X9, [SP,#0x60+var_58]
.text:0000000000044C78                 CMP             X8, X9
.text:0000000000044C7C                 B.NE            loc_44E2C
.text:0000000000044C80                 LDP             X29, X30, [SP,#0x60+var_s0]
.text:0000000000044C84                 LDP             X20, X19, [SP,#0x60+var_10]
.text:0000000000044C88                 LDP             X22, X21, [SP,#0x60+var_20]
.text:0000000000044C8C                 LDP             X24, X23, [SP,#0x60+var_30]
.text:0000000000044C90                 LDP             X26, X25, [SP,#0x60+var_40]
.text:0000000000044C94                 LDP             X28, X27, [SP,#0x60+var_50]
.text:0000000000044C98                 ADD             SP, SP, #0x70 ; 'p'
.text:0000000000044C9C                 RET
.text:0000000000044CA0 ; ---------------------------------------------------------------------------
.text:0000000000044CA0 loc_44CA0                               ; CODE XREF: sub_44AB0+1B8↑j
.text:0000000000044CA0                 ADD             X27, X19, #0x79 ; 'y'
.text:0000000000044CA4 loc_44CA4                               ; CODE XREF: sub_44AB0+214↓j
.text:0000000000044CA4                                         ; sub_44AB0+21C↓j ...
.text:0000000000044CA4                 LDRB            W8, [X19,#0x74]
.text:0000000000044CA8                 ADD             W9, W8, #1
.text:0000000000044CAC                 ADD             X8, X19, X8
.text:0000000000044CB0                 STRB            W9, [X19,#0x74]
.text:0000000000044CB4                 LDRB            W8, [X8,#0x79]
.text:0000000000044CB8                 CBZ             W8, loc_44CD4
.text:0000000000044CBC                 SUB             W9, W8, #9
.text:0000000000044CC0                 CMP             W9, #5
.text:0000000000044CC4                 B.CC            loc_44CA4
.text:0000000000044CC8                 CMP             W8, #0x20 ; ' '
.text:0000000000044CCC                 B.EQ            loc_44CA4
.text:0000000000044CD0                 B               loc_44DCC
.text:0000000000044CD4 ; ---------------------------------------------------------------------------
.text:0000000000044CD4 loc_44CD4                               ; CODE XREF: sub_44AB0+208↑j
.text:0000000000044CD4                 CBNZ            W20, loc_44E08
.text:0000000000044CD8                 LDR             X23, [X19]
.text:0000000000044CDC                 MOV             X0, X21
.text:0000000000044CE0                 MOV             X2, X22
.text:0000000000044CE4                 STRB            WZR, [X19,#0x74]
.text:0000000000044CE8                 STRB            WZR, [X19,#0x79]
.text:0000000000044CEC                 MOV             X1, X23
.text:0000000000044CF0                 BL              .EAS_HWFilePos
.text:0000000000044CF4                 CBNZ            X0, loc_44E08
.text:0000000000044CF8                 MOV             W28, WZR
.text:0000000000044CFC                 STRB            WZR, [X19,#0x79]
.text:0000000000044D00 loc_44D00                               ; CODE XREF: sub_44AB0+28C↓j
.text:0000000000044D00                 ADD             X2, SP, #0x60+var_5C
.text:0000000000044D04                 MOV             X0, X21
.text:0000000000044D08                 MOV             X1, X23
.text:0000000000044D0C                 BL              .EAS_HWGetByte
.text:0000000000044D10                 CBNZ            X0, loc_44D44
.text:0000000000044D14                 LDRB            W8, [SP,#0x60+var_5C]
.text:0000000000044D18                 CMP             W8, #0xD
.text:0000000000044D1C                 B.EQ            loc_44D38
.text:0000000000044D20                 CMP             W8, #0xA
.text:0000000000044D24                 B.EQ            loc_44D54
.text:0000000000044D28                 ADD             W9, W28, #1
.text:0000000000044D2C                 ADD             X10, X19, W28,SXTW
.text:0000000000044D30                 MOV             W28, W9
.text:0000000000044D34                 STRB            W8, [X10,#0x79]
.text:0000000000044D38 loc_44D38                               ; CODE XREF: sub_44AB0+26C↑j
.text:0000000000044D38                 CMP             W28, #0x4B ; 'K'
.text:0000000000044D3C                 B.LT            loc_44D00
.text:0000000000044D40                 B               loc_44D54
.text:0000000000044D44 ; ---------------------------------------------------------------------------
.text:0000000000044D44 loc_44D44                               ; CODE XREF: sub_44AB0+260↑j
.text:0000000000044D44                 CMP             W28, #1
.text:0000000000044D48                 B.LT            loc_44E08
.text:0000000000044D4C                 CMP             X0, #3
.text:0000000000044D50                 B.NE            loc_44E08
.text:0000000000044D54 loc_44D54                               ; CODE XREF: sub_44AB0+274↑j
.text:0000000000044D54                                         ; sub_44AB0+290↑j
.text:0000000000044D54                 ADD             X9, X19, W28,SXTW
.text:0000000000044D58                 MOV             X8, XZR
.text:0000000000044D5C                 STRB            WZR, [X9,#0x79]
.text:0000000000044D60 loc_44D60                               ; CODE XREF: sub_44AB0+2FC↓j
.text:0000000000044D60                 LDR             X9, [X25,X8,LSL#3]
.text:0000000000044D64                 LDRB            W10, [X9]
.text:0000000000044D68                 CBZ             W10, loc_44DB4
.text:0000000000044D6C                 ADD             X9, X9, #1
.text:0000000000044D70                 MOV             X11, X27
.text:0000000000044D74 loc_44D74                               ; CODE XREF: sub_44AB0+2EC↓j
.text:0000000000044D74                 LDRB            W12, [X11]
.text:0000000000044D78                 AND             W10, W10, #0xFF
.text:0000000000044D7C                 SUB             W13, W12, #0x61 ; 'a'
.text:0000000000044D80                 AND             W14, W12, #0xFFFFFFDF
.text:0000000000044D84                 CMP             W13, #0x1A
.text:0000000000044D88                 CSEL            W12, W14, W12, CC
.text:0000000000044D8C                 CMP             W10, W12,SXTB
.text:0000000000044D90                 B.NE            loc_44DA4
.text:0000000000044D94                 LDRB            W10, [X9],#1
.text:0000000000044D98                 ADD             X11, X11, #1
.text:0000000000044D9C                 CBNZ            W10, loc_44D74
.text:0000000000044DA0                 B               loc_44DB4
.text:0000000000044DA4 ; ---------------------------------------------------------------------------
.text:0000000000044DA4 loc_44DA4                               ; CODE XREF: sub_44AB0+2E0↑j
.text:0000000000044DA4                 ADD             X8, X8, #1
.text:0000000000044DA8                 CMP             X8, #0xA
.text:0000000000044DAC                 B.CC            loc_44D60
.text:0000000000044DB0                 B               loc_44CA4
.text:0000000000044DB4 ; ---------------------------------------------------------------------------
.text:0000000000044DB4 loc_44DB4                               ; CODE XREF: sub_44AB0+2B8↑j
.text:0000000000044DB4                                         ; sub_44AB0+2F0↑j
.text:0000000000044DB4                 CMP             W8, #9
.text:0000000000044DB8                 B.NE            loc_44CA4
.text:0000000000044DBC                 STRB            WZR, [X19,#0x79]
.text:0000000000044DC0                 CMP             W26, #0xF
.text:0000000000044DC4                 B.LS            loc_44E10
.text:0000000000044DC8                 B               loc_44E18
.text:0000000000044DCC ; ---------------------------------------------------------------------------
.text:0000000000044DCC loc_44DCC                               ; CODE XREF: sub_44AB0+220↑j
.text:0000000000044DCC                 SXTB            W8, W8
.text:0000000000044DD0                 SUB             W9, W8, #0x30 ; '0'
.text:0000000000044DD4                 CMP             W9, #9
.text:0000000000044DD8                 B.LS            loc_44DFC
.text:0000000000044DDC                 CBZ             W8, loc_44E08
.text:0000000000044DE0                 LDRB            W8, [X19,#0x74]
.text:0000000000044DE4                 CBZ             W8, loc_44E08
.text:0000000000044DE8                 SUB             W8, W8, #1
.text:0000000000044DEC                 STRB            W8, [X19,#0x74]
.text:0000000000044DF0                 CMP             W26, #0xF
.text:0000000000044DF4                 B.LS            loc_44E10
.text:0000000000044DF8                 B               loc_44E18
.text:0000000000044DFC ; ---------------------------------------------------------------------------
.text:0000000000044DFC loc_44DFC                               ; CODE XREF: sub_44AB0+328↑j
.text:0000000000044DFC                 MOV             W9, #0xA
.text:0000000000044E00                 MADD            W8, W26, W9, W8
.text:0000000000044E04                 SUB             W26, W8, #0x30 ; '0'
.text:0000000000044E08 loc_44E08                               ; CODE XREF: sub_44AB0:loc_44CD4↑j
.text:0000000000044E08                                         ; sub_44AB0+244↑j ...
.text:0000000000044E08                 CMP             W26, #0xF
.text:0000000000044E0C                 B.HI            loc_44E18
.text:0000000000044E10 loc_44E10                               ; CODE XREF: sub_44AB0+314↑j
.text:0000000000044E10                                         ; sub_44AB0+344↑j
.text:0000000000044E10                 CBZ             W20, loc_44E20
.text:0000000000044E14                 CBNZ            W26, loc_44E20
.text:0000000000044E18 loc_44E18                               ; CODE XREF: sub_44AB0+18C↑j
.text:0000000000044E18                                         ; sub_44AB0+19C↑j ...
.text:0000000000044E18                 MOV             W0, #1
.text:0000000000044E1C                 B               loc_44C70
.text:0000000000044E20 ; ---------------------------------------------------------------------------
.text:0000000000044E20 loc_44E20                               ; CODE XREF: sub_44AB0:loc_44E10↑j
.text:0000000000044E20                                         ; sub_44AB0+364↑j
.text:0000000000044E20                 MOV             W0, #1
.text:0000000000044E24                 STRB            W26, [X19,#0x76]
.text:0000000000044E28                 B               loc_44C70
.text:0000000000044E2C ; ---------------------------------------------------------------------------
.text:0000000000044E2C loc_44E2C                               ; CODE XREF: sub_44AB0+1CC↑j
.text:0000000000044E2C                 BL              .__stack_chk_fail
.text:0000000000044E2C ; } // starts at 44AB0
.text:0000000000044E2C ; End of function sub_44AB0
.text:0000000000044E30 ; =============== S U B R O U T I N E =======================================
.text:0000000000044E30 ; Attributes: bp-based frame
.text:0000000000044E30 sub_44E30                               ; CODE XREF: sub_436C8:loc_44370↑p
.text:0000000000044E30 var_40          = -0x40
.text:0000000000044E30 var_38          = -0x38
.text:0000000000044E30 var_30          = -0x30
.text:0000000000044E30 var_20          = -0x20
.text:0000000000044E30 var_10          = -0x10
.text:0000000000044E30 var_s0          =  0
.text:0000000000044E30 ; __unwind {
.text:0000000000044E30                 SUB             SP, SP, #0x50
.text:0000000000044E34                 STR             X23, [SP,#0x40+var_30]
.text:0000000000044E38                 STP             X22, X21, [SP,#0x40+var_20]
.text:0000000000044E3C                 STP             X20, X19, [SP,#0x40+var_10]
.text:0000000000044E40                 STP             X29, X30, [SP,#0x40+var_s0]
.text:0000000000044E44                 ADD             X29, SP, #0x40
.text:0000000000044E48                 MRS             X23, #3, c13, c0, #2
.text:0000000000044E4C                 MOV             X20, X0
.text:0000000000044E50                 LDR             X8, [X23,#0x28]
.text:0000000000044E54                 MOV             W22, W2
.text:0000000000044E58                 MOV             X2, SP
.text:0000000000044E5C                 MOV             W21, W3
.text:0000000000044E60                 MOV             X19, X1
.text:0000000000044E64                 STR             X8, [SP,#0x40+var_38]
.text:0000000000044E68                 LDR             X0, [X0]
.text:0000000000044E6C                 BL              sub_44F40
.text:0000000000044E70                 CBZ             W0, loc_44F14
.text:0000000000044E74                 ADRP            X8, #asc_5590@PAGE ; "\t\v"
.text:0000000000044E78                 LDRB            W9, [X19,#0x75]
.text:0000000000044E7C                 ADD             X8, X8, #asc_5590@PAGEOFF ; "\t\v"
.text:0000000000044E80                 LDRB            W10, [X19,#0x78]
.text:0000000000044E84                 ADD             X8, X8, W22,SXTB
.text:0000000000044E88                 LDURB           W8, [X8,#-0x61]
.text:0000000000044E8C                 ADD             W8, W8, W9
.text:0000000000044E90                 ADD             W3, W8, W10
.text:0000000000044E94                 STRB            W3, [X19,#0x77]
.text:0000000000044E98                 CBNZ            W21, loc_44EC0
.text:0000000000044E9C                 LDRB            W8, [X19,#0x76]
.text:0000000000044EA0                 MOV             W2, WZR
.text:0000000000044EA4                 LDR             X0, [X20,#0x170]
.text:0000000000044EA8                 LDR             X1, [X19,#8]
.text:0000000000044EAC                 LSL             W9, W8, #2
.text:0000000000044EB0                 ADD             W9, W9, #0x43 ; 'C'
.text:0000000000044EB4                 CMP             W8, #0
.text:0000000000044EB8                 CSEL            W4, WZR, W9, EQ
.text:0000000000044EBC                 BL              .VMStartNote
.text:0000000000044EC0 loc_44EC0                               ; CODE XREF: sub_44E30+68↑j
.text:0000000000044EC0                 LDRB            W8, [X19,#0x73]
.text:0000000000044EC4                 CMP             W8, #2
.text:0000000000044EC8                 B.EQ            loc_44EF0
.text:0000000000044ECC                 CMP             W8, #1
.text:0000000000044ED0                 B.EQ            loc_44EE0
.text:0000000000044ED4                 LDR             X8, [SP,#0x40+var_40]
.text:0000000000044ED8                 ASR             X9, X8, #4
.text:0000000000044EDC                 B               loc_44EF8
.text:0000000000044EE0 ; ---------------------------------------------------------------------------
.text:0000000000044EE0 loc_44EE0                               ; CODE XREF: sub_44E30+A0↑j
.text:0000000000044EE0                 LDR             X8, [SP,#0x40+var_40]
.text:0000000000044EE4                 MOV             X9, XZR
.text:0000000000044EE8                 STR             XZR, [X19,#0x30]
.text:0000000000044EEC                 B               loc_44EFC
.text:0000000000044EF0 ; ---------------------------------------------------------------------------
.text:0000000000044EF0 loc_44EF0                               ; CODE XREF: sub_44E30+98↑j
.text:0000000000044EF0                 LDR             X8, [SP,#0x40+var_40]
.text:0000000000044EF4                 ASR             X9, X8, #1
.text:0000000000044EF8 loc_44EF8                               ; CODE XREF: sub_44E30+AC↑j
.text:0000000000044EF8                 STR             X9, [X19,#0x30]
.text:0000000000044EFC loc_44EFC                               ; CODE XREF: sub_44E30+BC↑j
.text:0000000000044EFC                 LDR             X10, [X19,#0x18]
.text:0000000000044F00                 SUB             X8, X8, X9
.text:0000000000044F04                 MOV             W0, #1
.text:0000000000044F08                 STRB            WZR, [X19,#0x78]
.text:0000000000044F0C                 ADD             X8, X8, X10
.text:0000000000044F10                 STR             X8, [X19,#0x18]
.text:0000000000044F14 loc_44F14                               ; CODE XREF: sub_44E30+40↑j
.text:0000000000044F14                 LDR             X8, [X23,#0x28]
.text:0000000000044F18                 LDR             X9, [SP,#0x40+var_38]
.text:0000000000044F1C                 CMP             X8, X9
.text:0000000000044F20                 B.NE            loc_44F3C
.text:0000000000044F24                 LDP             X29, X30, [SP,#0x40+var_s0]
.text:0000000000044F28                 LDP             X20, X19, [SP,#0x40+var_10]
.text:0000000000044F2C                 LDP             X22, X21, [SP,#0x40+var_20]
.text:0000000000044F30                 LDR             X23, [SP,#0x40+var_30]
.text:0000000000044F34                 ADD             SP, SP, #0x50 ; 'P'
.text:0000000000044F38                 RET
.text:0000000000044F3C ; ---------------------------------------------------------------------------
.text:0000000000044F3C loc_44F3C                               ; CODE XREF: sub_44E30+F0↑j
.text:0000000000044F3C                 BL              .__stack_chk_fail
.text:0000000000044F3C ; } // starts at 44E30
.text:0000000000044F3C ; End of function sub_44E30
.text:0000000000044F40 ; =============== S U B R O U T I N E =======================================
.text:0000000000044F40 ; Attributes: bp-based frame
.text:0000000000044F40 sub_44F40                               ; CODE XREF: sub_436C8+CC0↑p
.text:0000000000044F40                                         ; sub_44E30+3C↑p
.text:0000000000044F40 var_68          = -0x68
.text:0000000000044F40 var_60          = -0x60
.text:0000000000044F40 var_5C          = -0x5C
.text:0000000000044F40 var_58          = -0x58
.text:0000000000044F40 var_50          = -0x50
.text:0000000000044F40 var_40          = -0x40
.text:0000000000044F40 var_30          = -0x30
.text:0000000000044F40 var_20          = -0x20
.text:0000000000044F40 var_10          = -0x10
.text:0000000000044F40 var_s0          =  0
.text:0000000000044F40 arg_8           =  0x18
.text:0000000000044F40 ; __unwind {
.text:0000000000044F40                 SUB             SP, SP, #0x80
.text:0000000000044F44                 STP             X28, X27, [SP,#0x70+var_50]
.text:0000000000044F48                 STP             X26, X25, [SP,#0x70+var_40]
.text:0000000000044F4C                 STP             X24, X23, [SP,#0x70+var_30]
.text:0000000000044F50                 STP             X22, X21, [SP,#0x70+var_20]
.text:0000000000044F54                 STP             X20, X19, [SP,#0x70+var_10]
.text:0000000000044F58                 STP             X29, X30, [SP,#0x70+var_s0]
.text:0000000000044F5C                 ADD             X29, SP, #0x70
.text:0000000000044F60                 MRS             X24, #3, c13, c0, #2
.text:0000000000044F64                 ADRP            X25, #off_580B8@PAGE ; "BEGIN:IMELODY"
.text:0000000000044F68                 LDR             X8, [X24,#0x28]
.text:0000000000044F6C                 MOV             X19, X2
.text:0000000000044F70                 MOV             X20, X1
.text:0000000000044F74                 MOV             X21, X0
.text:0000000000044F78                 ADD             X22, X1, #0x38 ; '8'
.text:0000000000044F7C                 ADD             X26, X1, #0x79 ; 'y'
.text:0000000000044F80                 STR             X8, [SP,#0x70+var_58]
.text:0000000000044F84                 ADD             X25, X25, #off_580B8@PAGEOFF ; "BEGIN:IMELODY"
.text:0000000000044F88                 STR             XZR, [X2]
.text:0000000000044F8C loc_44F8C                               ; CODE XREF: sub_44F40+6C↓j
.text:0000000000044F8C                                         ; sub_44F40+74↓j ...
.text:0000000000044F8C                 LDRB            W8, [X20,#0x74]
.text:0000000000044F90                 ADD             W9, W8, #1
.text:0000000000044F94                 ADD             X8, X20, X8
.text:0000000000044F98                 STRB            W9, [X20,#0x74]
.text:0000000000044F9C                 LDRB            W8, [X8,#0x79]
.text:0000000000044FA0                 CBZ             W8, loc_44FBC
.text:0000000000044FA4                 SUB             W9, W8, #9
.text:0000000000044FA8                 CMP             W9, #5
.text:0000000000044FAC                 B.CC            loc_44F8C
.text:0000000000044FB0                 CMP             W8, #0x20 ; ' '
.text:0000000000044FB4                 B.EQ            loc_44F8C
.text:0000000000044FB8                 B               loc_450AC
.text:0000000000044FBC ; ---------------------------------------------------------------------------
.text:0000000000044FBC loc_44FBC                               ; CODE XREF: sub_44F40+60↑j
.text:0000000000044FBC                 LDR             X23, [X20]
.text:0000000000044FC0                 MOV             X0, X21
.text:0000000000044FC4                 MOV             X2, X22
.text:0000000000044FC8                 STRB            WZR, [X20,#0x74]
.text:0000000000044FCC                 STRB            WZR, [X20,#0x79]
.text:0000000000044FD0                 MOV             X1, X23
.text:0000000000044FD4                 BL              .EAS_HWFilePos
.text:0000000000044FD8                 CBNZ            X0, loc_450BC
.text:0000000000044FDC                 MOV             W27, WZR
.text:0000000000044FE0                 STRB            WZR, [X20,#0x79]
.text:0000000000044FE4 loc_44FE4                               ; CODE XREF: sub_44F40+E0↓j
.text:0000000000044FE4                 ADD             X2, SP, #0x70+var_60
.text:0000000000044FE8                 MOV             X0, X21
.text:0000000000044FEC                 MOV             X1, X23
.text:0000000000044FF0                 BL              .EAS_HWGetByte
.text:0000000000044FF4                 CBNZ            X0, loc_45028
.text:0000000000044FF8                 LDRB            W8, [SP,#0x70+var_60]
.text:0000000000044FFC                 CMP             W8, #0xD
.text:0000000000045000                 B.EQ            loc_4501C
.text:0000000000045004                 CMP             W8, #0xA
.text:0000000000045008                 B.EQ            loc_45038
.text:000000000004500C                 ADD             W9, W27, #1
.text:0000000000045010                 ADD             X10, X20, W27,SXTW
.text:0000000000045014                 MOV             W27, W9
.text:0000000000045018                 STRB            W8, [X10,#0x79]
.text:000000000004501C loc_4501C                               ; CODE XREF: sub_44F40+C0↑j
.text:000000000004501C                 CMP             W27, #0x4B ; 'K'
.text:0000000000045020                 B.LT            loc_44FE4
.text:0000000000045024                 B               loc_45038
.text:0000000000045028 ; ---------------------------------------------------------------------------
.text:0000000000045028 loc_45028                               ; CODE XREF: sub_44F40+B4↑j
.text:0000000000045028                 CMP             W27, #1
.text:000000000004502C                 B.LT            loc_450BC
.text:0000000000045030                 CMP             X0, #3
.text:0000000000045034                 B.NE            loc_450BC
.text:0000000000045038 loc_45038                               ; CODE XREF: sub_44F40+C8↑j
.text:0000000000045038                                         ; sub_44F40+E4↑j
.text:0000000000045038                 ADD             X9, X20, W27,SXTW
.text:000000000004503C                 MOV             X8, XZR
.text:0000000000045040                 STRB            WZR, [X9,#0x79]
.text:0000000000045044 loc_45044                               ; CODE XREF: sub_44F40+150↓j
.text:0000000000045044                 LDR             X9, [X25,X8,LSL#3]
.text:0000000000045048                 LDRB            W10, [X9]
.text:000000000004504C                 CBZ             W10, loc_45098
.text:0000000000045050                 ADD             X9, X9, #1
.text:0000000000045054                 MOV             X11, X26
.text:0000000000045058 loc_45058                               ; CODE XREF: sub_44F40+140↓j
.text:0000000000045058                 LDRB            W12, [X11]
.text:000000000004505C                 AND             W10, W10, #0xFF
.text:0000000000045060                 SUB             W13, W12, #0x61 ; 'a'
.text:0000000000045064                 AND             W14, W12, #0xFFFFFFDF
.text:0000000000045068                 CMP             W13, #0x1A
.text:000000000004506C                 CSEL            W12, W14, W12, CC
.text:0000000000045070                 CMP             W10, W12,SXTB
.text:0000000000045074                 B.NE            loc_45088
.text:0000000000045078                 LDRB            W10, [X9],#1
.text:000000000004507C                 ADD             X11, X11, #1
.text:0000000000045080                 CBNZ            W10, loc_45058
.text:0000000000045084                 B               loc_45098
.text:0000000000045088 ; ---------------------------------------------------------------------------
.text:0000000000045088 loc_45088                               ; CODE XREF: sub_44F40+134↑j
.text:0000000000045088                 ADD             X8, X8, #1
.text:000000000004508C                 CMP             X8, #0xA
.text:0000000000045090                 B.CC            loc_45044
.text:0000000000045094                 B               loc_44F8C
.text:0000000000045098 ; ---------------------------------------------------------------------------
.text:0000000000045098 loc_45098                               ; CODE XREF: sub_44F40+10C↑j
.text:0000000000045098                                         ; sub_44F40+144↑j
.text:0000000000045098                 CMP             W8, #9
.text:000000000004509C                 B.NE            loc_44F8C
.text:00000000000450A0                 MOV             W0, WZR
.text:00000000000450A4                 STRB            WZR, [X20,#0x79]
.text:00000000000450A8                 B               loc_45210
.text:00000000000450AC ; ---------------------------------------------------------------------------
.text:00000000000450AC loc_450AC                               ; CODE XREF: sub_44F40+78↑j
.text:00000000000450AC                 SXTB            W8, W8
.text:00000000000450B0                 SUB             W9, W8, #0x30 ; '0'
.text:00000000000450B4                 CMP             W9, #5
.text:00000000000450B8                 B.LS            loc_450C4
.text:00000000000450BC loc_450BC                               ; CODE XREF: sub_44F40+98↑j
.text:00000000000450BC                                         ; sub_44F40+EC↑j ...
.text:00000000000450BC                 MOV             W0, WZR
.text:00000000000450C0                 B               loc_45210
.text:00000000000450C4 ; ---------------------------------------------------------------------------
.text:00000000000450C4 loc_450C4                               ; CODE XREF: sub_44F40+178↑j
.text:00000000000450C4                 MOV             W9, #0x35 ; '5'
.text:00000000000450C8                 SUB             W8, W9, W8
.text:00000000000450CC                 LDR             X9, [X20,#0x28]
.text:00000000000450D0                 MOV             W10, #1
.text:00000000000450D4                 ADRP            X28, #asc_4BA0@PAGE ; "\v[[[[[[[["
.text:00000000000450D8                 LSL             W8, W10, W8
.text:00000000000450DC                 SXTW            X8, W8
.text:00000000000450E0                 MUL             X8, X9, X8
.text:00000000000450E4                 ADD             X27, X20, #0x79 ; 'y'
.text:00000000000450E8                 ADD             X28, X28, #asc_4BA0@PAGEOFF ; "\v[[[[[[[["
.text:00000000000450EC                 STR             X8, [SP,#0x70+var_68]
.text:00000000000450F0 loc_450F0                               ; CODE XREF: sub_44F40+2B4↓j
.text:00000000000450F0                                         ; sub_44F40+2BC↓j
.text:00000000000450F0                                         ; DATA XREF: ...
.text:00000000000450F0                 LDRB            W8, [X20,#0x74]
.text:00000000000450F4                 ADD             W9, W8, #1
.text:00000000000450F8                 ADD             X10, X20, X8
.text:00000000000450FC                 STRB            W9, [X20,#0x74]
.text:0000000000045100                 LDRB            W10, [X10,#0x79]
.text:0000000000045104                 CMP             W10, #0x3B ; ';'
.text:0000000000045108                 B.HI            loc_4525C
.text:000000000004510C                 ADR             X11, loc_450F0
.text:0000000000045110                 LDRB            W12, [X28,X10]
.text:0000000000045114                 ADD             X11, X11, X12,LSL#2
.text:0000000000045118                 BR              X11
.text:000000000004511C ; ---------------------------------------------------------------------------
.text:000000000004511C                 LDR             X23, [X20]
.text:0000000000045120                 MOV             X0, X21
.text:0000000000045124                 MOV             X2, X22
.text:0000000000045128                 STRB            WZR, [X20,#0x74]
.text:000000000004512C                 STRB            WZR, [X20,#0x79]
.text:0000000000045130                 MOV             X1, X23
.text:0000000000045134                 BL              .EAS_HWFilePos
.text:0000000000045138                 CBNZ            X0, loc_45204
.text:000000000004513C                 MOV             W26, WZR
.text:0000000000045140                 STRB            WZR, [X20,#0x79]
.text:0000000000045144 loc_45144                               ; CODE XREF: sub_44F40+240↓j
.text:0000000000045144                 ADD             X2, SP, #0x70+var_5C
.text:0000000000045148                 MOV             X0, X21
.text:000000000004514C                 MOV             X1, X23
.text:0000000000045150                 BL              .EAS_HWGetByte
.text:0000000000045154                 CBNZ            X0, loc_45188
.text:0000000000045158                 LDRB            W8, [SP,#0x70+var_5C]
.text:000000000004515C                 CMP             W8, #0xD
.text:0000000000045160                 B.EQ            loc_4517C
.text:0000000000045164                 CMP             W8, #0xA
.text:0000000000045168                 B.EQ            loc_45198
.text:000000000004516C                 ADD             W9, W26, #1
.text:0000000000045170                 ADD             X10, X20, W26,SXTW
.text:0000000000045174                 MOV             W26, W9
.text:0000000000045178                 STRB            W8, [X10,#0x79]
.text:000000000004517C loc_4517C                               ; CODE XREF: sub_44F40+220↑j
.text:000000000004517C                 CMP             W26, #0x4B ; 'K'
.text:0000000000045180                 B.LT            loc_45144
.text:0000000000045184                 B               loc_45198
.text:0000000000045188 ; ---------------------------------------------------------------------------
.text:0000000000045188 loc_45188                               ; CODE XREF: sub_44F40+214↑j
.text:0000000000045188                 CMP             W26, #1
.text:000000000004518C                 B.LT            loc_45204
.text:0000000000045190                 CMP             X0, #3
.text:0000000000045194                 B.NE            loc_45204
.text:0000000000045198 loc_45198                               ; CODE XREF: sub_44F40+228↑j
.text:0000000000045198                                         ; sub_44F40+244↑j
.text:0000000000045198                 ADD             X9, X20, W26,SXTW
.text:000000000004519C                 MOV             X8, XZR
.text:00000000000451A0                 STRB            WZR, [X9,#0x79]
.text:00000000000451A4 loc_451A4                               ; CODE XREF: sub_44F40+2B0↓j
.text:00000000000451A4                 LDR             X9, [X25,X8,LSL#3]
.text:00000000000451A8                 LDRB            W10, [X9]
.text:00000000000451AC                 CBZ             W10, loc_451F8
.text:00000000000451B0                 ADD             X9, X9, #1
.text:00000000000451B4                 MOV             X11, X27
.text:00000000000451B8 loc_451B8                               ; CODE XREF: sub_44F40+2A0↓j
.text:00000000000451B8                 LDRB            W12, [X11]
.text:00000000000451BC                 AND             W10, W10, #0xFF
.text:00000000000451C0                 SUB             W13, W12, #0x61 ; 'a'
.text:00000000000451C4                 AND             W14, W12, #0xFFFFFFDF
.text:00000000000451C8                 CMP             W13, #0x1A
.text:00000000000451CC                 CSEL            W12, W14, W12, CC
.text:00000000000451D0                 CMP             W10, W12,SXTB
.text:00000000000451D4                 B.NE            loc_451E8
.text:00000000000451D8                 LDRB            W10, [X9],#1
.text:00000000000451DC                 ADD             X11, X11, #1
.text:00000000000451E0                 CBNZ            W10, loc_451B8
.text:00000000000451E4                 B               loc_451F8
.text:00000000000451E8 ; ---------------------------------------------------------------------------
.text:00000000000451E8 loc_451E8                               ; CODE XREF: sub_44F40+294↑j
.text:00000000000451E8                 ADD             X8, X8, #1
.text:00000000000451EC                 CMP             X8, #0xA
.text:00000000000451F0                 B.CC            loc_451A4
.text:00000000000451F4                 B               loc_450F0
.text:00000000000451F8 ; ---------------------------------------------------------------------------
.text:00000000000451F8 loc_451F8                               ; CODE XREF: sub_44F40+26C↑j
.text:00000000000451F8                                         ; sub_44F40+2A4↑j
.text:00000000000451F8                 CMP             W8, #9
.text:00000000000451FC                 B.NE            loc_450F0
.text:0000000000045200                 STRB            WZR, [X20,#0x79]
.text:0000000000045204 loc_45204                               ; CODE XREF: sub_44F40+1F8↑j
.text:0000000000045204                                         ; sub_44F40+24C↑j ...
.text:0000000000045204                 LDR             X9, [SP,#0x70+var_68]
.text:0000000000045208 loc_45208                               ; CODE XREF: sub_44F40+30C↓j
.text:0000000000045208                                         ; sub_44F40+318↓j ...
.text:0000000000045208                 MOV             W0, #1
.text:000000000004520C                 STR             X9, [X19]
.text:0000000000045210 loc_45210                               ; CODE XREF: sub_44F40+168↑j
.text:0000000000045210                                         ; sub_44F40+180↑j
.text:0000000000045210                 LDR             X8, [X24,#0x28]
.text:0000000000045214                 LDR             X9, [SP,#0x70+var_58]
.text:0000000000045218                 CMP             X8, X9
.text:000000000004521C                 B.NE            loc_45280
.text:0000000000045220                 LDP             X29, X30, [SP,#0x70+var_s0]
.text:0000000000045224                 LDP             X20, X19, [SP,#0x70+var_10]
.text:0000000000045228                 LDP             X22, X21, [SP,#0x70+var_20]
.text:000000000004522C                 LDP             X24, X23, [SP,#0x70+var_30]
.text:0000000000045230                 LDP             X26, X25, [SP,#0x70+var_40]
.text:0000000000045234                 LDP             X28, X27, [SP,#0x70+var_50]
.text:0000000000045238                 ADD             SP, SP, #0x80
.text:000000000004523C                 RET
.text:0000000000045240 ; ---------------------------------------------------------------------------
.text:0000000000045240                 LDR             X9, [SP,#-0x10+arg_8]
.text:0000000000045244                 ADD             X8, X9, X9,ASR#2
.text:0000000000045248                 ADD             X9, X8, X9,ASR#1
.text:000000000004524C                 B               loc_45208
.text:0000000000045250 ; ---------------------------------------------------------------------------
.text:0000000000045250                 LDR             X9, [SP,#-0x10+arg_8]
.text:0000000000045254                 ADD             X9, X9, X9,ASR#1
.text:0000000000045258                 B               loc_45208
.text:000000000004525C ; ---------------------------------------------------------------------------
.text:000000000004525C loc_4525C                               ; CODE XREF: sub_44F40+1C8↑j
.text:000000000004525C                 TST             W9, #0xFF
.text:0000000000045260                 B.EQ            loc_45204
.text:0000000000045264                 STRB            W8, [X20,#0x74]
.text:0000000000045268                 B               loc_45204
.text:000000000004526C ; ---------------------------------------------------------------------------
.text:000000000004526C                 LDR             X9, [SP,#0x70+var_68]
.text:0000000000045270                 MOV             W8, #0x2AB
.text:0000000000045274                 MUL             X8, X9, X8
.text:0000000000045278                 ASR             X9, X8, #0xA
.text:000000000004527C                 B               loc_45208
.text:0000000000045280 ; ---------------------------------------------------------------------------
.text:0000000000045280 loc_45280                               ; CODE XREF: sub_44F40+2DC↑j
.text:0000000000045280                 BL              .__stack_chk_fail
.text:0000000000045280 ; } // starts at 44F40
.text:0000000000045280 ; End of function sub_44F40
.text:0000000000045280 ; ---------------------------------------------------------------------------
.text:0000000000045284                 ALIGN 8
.text:0000000000045288 ; =============== S U B R O U T I N E =======================================
.text:0000000000045288                 EXPORT EAS_Calculate2toX
.text:0000000000045288 EAS_Calculate2toX                       ; CODE XREF: .EAS_Calculate2toX+C↓j
.text:0000000000045288                                         ; DATA XREF: LOAD:0000000000000798↑o ...
.text:0000000000045288 ; __unwind {
.text:0000000000045288                 MOV             X8, #0xFFFFFFFFFFFFB9B0
.text:000000000004528C                 CMP             X0, X8
.text:0000000000045290                 B.GE            loc_4529C
.text:0000000000045294                 MOV             X0, XZR
.text:0000000000045298                 RET
.text:000000000004529C ; ---------------------------------------------------------------------------
.text:000000000004529C loc_4529C                               ; CODE XREF: EAS_Calculate2toX+8↑j
.text:000000000004529C                 MOV             W9, #0x1B4E8
.text:00000000000452A4                 MOV             W10, #0xA1C
.text:00000000000452A8                 MUL             W9, W0, W9
.text:00000000000452AC                 MOV             W12, #0x1CB0
.text:00000000000452B0                 MOV             X8, XZR
.text:00000000000452B4                 UBFX            W11, W9, #0xF, #0xC
.text:00000000000452B8                 MUL             W10, W11, W10
.text:00000000000452BC                 ASR             W9, W9, #0x1B
.text:00000000000452C0                 SUB             X8, X8, W9,SXTW
.text:00000000000452C4                 CMP             W0, #0
.text:00000000000452C8                 ADD             W10, W12, W10,LSR#12
.text:00000000000452CC                 MOV             W12, #0x5931
.text:00000000000452D0                 MUL             W10, W10, W11
.text:00000000000452D4                 ADD             W10, W12, W10,LSR#12
.text:00000000000452D8                 MUL             W10, W10, W11
.text:00000000000452DC                 LSR             W10, W10, #0xC
.text:00000000000452E0                 ADD             W10, W10, #8,LSL#12
.text:00000000000452E4                 LSL             X9, X10, X9
.text:00000000000452E8                 LSR             X8, X10, X8
.text:00000000000452EC                 CSEL            X0, X9, X8, GE
.text:00000000000452F0                 RET
.text:00000000000452F0 ; } // starts at 45288
.text:00000000000452F0 ; End of function EAS_Calculate2toX
.text:00000000000452F0 ; ---------------------------------------------------------------------------
.text:00000000000452F4                 ALIGN 8
.text:00000000000452F8 ; =============== S U B R O U T I N E =======================================
.text:00000000000452F8                 EXPORT EAS_LogToLinear16
.text:00000000000452F8 EAS_LogToLinear16                       ; CODE XREF: .EAS_LogToLinear16+C↓j
.text:00000000000452F8                                         ; DATA XREF: LOAD:0000000000001128↑o ...
.text:00000000000452F8 ; __unwind {
.text:00000000000452F8                 MOV             W8, #0x7FFF
.text:00000000000452FC                 ADDS            X8, X0, X8
.text:0000000000045300                 B.MI            loc_45324
.text:0000000000045304                 LSR             X9, X8, #0xA
.text:0000000000045308                 MOV             W10, #0x1F
.text:000000000004530C                 SUBS            W9, W10, W9
.text:0000000000045310                 B.MI            loc_4532C
.text:0000000000045314                 MOV             W10, #0x4000
.text:0000000000045318                 BFI             X10, X8, #4, #0xA
.text:000000000004531C                 LSR             X0, X10, X9
.text:0000000000045320                 RET
.text:0000000000045324 ; ---------------------------------------------------------------------------
.text:0000000000045324 loc_45324                               ; CODE XREF: EAS_LogToLinear16+8↑j
.text:0000000000045324                 MOV             W0, WZR
.text:0000000000045328                 RET
.text:000000000004532C ; ---------------------------------------------------------------------------
.text:000000000004532C loc_4532C                               ; CODE XREF: EAS_LogToLinear16+18↑j
.text:000000000004532C                 MOV             W0, #0x7FFF
.text:0000000000045330                 RET
.text:0000000000045330 ; } // starts at 452F8
.text:0000000000045330 ; End of function EAS_LogToLinear16
.text:0000000000045330 ; ---------------------------------------------------------------------------
.text:0000000000045334                 ALIGN 8
.text:0000000000045338 ; =============== S U B R O U T I N E =======================================
.text:0000000000045338                 EXPORT EAS_VolumeToGain
.text:0000000000045338 EAS_VolumeToGain                        ; CODE XREF: .EAS_VolumeToGain+C↓j
.text:0000000000045338                                         ; DATA XREF: LOAD:0000000000000BB8↑o ...
.text:0000000000045338 ; __unwind {
.text:0000000000045338                 CMP             W0, #1
.text:000000000004533C                 B.LT            loc_45350
.text:0000000000045340                 CMP             W0, #0x63 ; 'c'
.text:0000000000045344                 B.LE            loc_45358
.text:0000000000045348                 MOV             W0, #0x7FFF
.text:000000000004534C                 RET
.text:0000000000045350 ; ---------------------------------------------------------------------------
.text:0000000000045350 loc_45350                               ; CODE XREF: EAS_VolumeToGain+4↑j
.text:0000000000045350                 MOV             W0, WZR
.text:0000000000045354                 RET
.text:0000000000045358 ; ---------------------------------------------------------------------------
.text:0000000000045358 loc_45358                               ; CODE XREF: EAS_VolumeToGain+C↑j
.text:0000000000045358                 MOV             W8, #0x31D43
.text:0000000000045360                 MOV             W9, #0xFEC891D4
.text:0000000000045368                 MADD            W8, W0, W8, W9
.text:000000000004536C                 MOV             W9, #0xFEE6C400
.text:0000000000045374                 CMP             W8, W9
.text:0000000000045378                 B.GE            loc_45384
.text:000000000004537C                 MOV             W0, WZR
.text:0000000000045380                 RET
.text:0000000000045384 ; ---------------------------------------------------------------------------
.text:0000000000045384 loc_45384                               ; CODE XREF: EAS_VolumeToGain+40↑j
.text:0000000000045384                 MOV             W9, #0x1B4E8
.text:000000000004538C                 MOV             W10, #0x4B18
.text:0000000000045390                 ASR             W8, W8, #0xA
.text:0000000000045394                 MOVK            W10, #0xFFFE,LSL#16
.text:0000000000045398                 MADD            W8, W8, W9, W10
.text:000000000004539C                 MOV             W9, #0xA1C
.text:00000000000453A0                 MOV             W11, #0x1CB0
.text:00000000000453A4                 UBFX            W10, W8, #0xF, #0xC
.text:00000000000453A8                 MUL             W9, W10, W9
.text:00000000000453AC                 NEG             W8, W8,ASR#27
.text:00000000000453B0                 ADD             W9, W11, W9,LSR#12
.text:00000000000453B4                 MOV             W11, #0x5931
.text:00000000000453B8                 MUL             W9, W9, W10
.text:00000000000453BC                 ADD             W9, W11, W9,LSR#12
.text:00000000000453C0                 MUL             W9, W9, W10
.text:00000000000453C4                 LSR             W9, W9, #0xC
.text:00000000000453C8                 ADD             W9, W9, #8,LSL#12
.text:00000000000453CC                 LSR             X0, X9, X8
.text:00000000000453D0                 RET
.text:00000000000453D0 ; } // starts at 45338
.text:00000000000453D0 ; End of function EAS_VolumeToGain
.text:00000000000453D0 ; ---------------------------------------------------------------------------
.text:00000000000453D4                 ALIGN 8
.text:00000000000453D8 ; =============== S U B R O U T I N E =======================================
.text:00000000000453D8 ; Attributes: bp-based frame
.text:00000000000453D8                 EXPORT DLSParser
.text:00000000000453D8 DLSParser                               ; CODE XREF: .DLSParser+C↓j
.text:00000000000453D8                                         ; DATA XREF: LOAD:00000000000010C8↑o ...
.text:00000000000453D8 var_F0          = -0xF0
.text:00000000000453D8 var_E8          = -0xE8
.text:00000000000453D8 var_E0          = -0xE0
.text:00000000000453D8 var_D8          = -0xD8
.text:00000000000453D8 var_D0          = -0xD0
.text:00000000000453D8 var_C8          = -0xC8
.text:00000000000453D8 var_C0          = -0xC0
.text:00000000000453D8 var_B8          = -0xB8
.text:00000000000453D8 var_B0          = -0xB0
.text:00000000000453D8 var_A8          = -0xA8
.text:00000000000453D8 var_98          = -0x98
.text:00000000000453D8 var_90          = -0x90
.text:00000000000453D8 var_88          = -0x88
.text:00000000000453D8 var_80          = -0x80
.text:00000000000453D8 var_78          = -0x78
.text:00000000000453D8 var_60          = -0x60
.text:00000000000453D8 var_5C          = -0x5C
.text:00000000000453D8 var_58          = -0x58
.text:00000000000453D8 var_50          = -0x50
.text:00000000000453D8 var_40          = -0x40
.text:00000000000453D8 var_30          = -0x30
.text:00000000000453D8 var_20          = -0x20
.text:00000000000453D8 var_10          = -0x10
.text:00000000000453D8 var_s0          =  0
.text:00000000000453D8 ; __unwind {
.text:00000000000453D8                 SUB             SP, SP, #0x100
.text:00000000000453DC                 STP             X28, X27, [SP,#0xF0+var_50]
.text:00000000000453E0                 STP             X26, X25, [SP,#0xF0+var_40]
.text:00000000000453E4                 STP             X24, X23, [SP,#0xF0+var_30]
.text:00000000000453E8                 STP             X22, X21, [SP,#0xF0+var_20]
.text:00000000000453EC                 STP             X20, X19, [SP,#0xF0+var_10]
.text:00000000000453F0                 STP             X29, X30, [SP,#0xF0+var_s0]
.text:00000000000453F4                 ADD             X29, SP, #0xF0
.text:00000000000453F8                 MRS             X26, #3, c13, c0, #2
.text:00000000000453FC                 MOV             X20, X2
.text:0000000000045400                 LDR             X8, [X26,#0x28]
.text:0000000000045404                 MOV             X21, X1
.text:0000000000045408                 MOV             X22, X0
.text:000000000004540C                 MOV             W2, #0x58 ; 'X'
.text:0000000000045410                 ADD             X0, SP, #0xF0+var_B0
.text:0000000000045414                 MOV             W1, WZR
.text:0000000000045418                 STUR            X8, [X29,#var_58]
.text:000000000004541C                 MOV             X19, X3
.text:0000000000045420                 BL              .EAS_HWMemSet
.text:0000000000045424                 MOV             X0, X22
.text:0000000000045428                 STP             X22, X21, [SP,#0xF0+var_A8]
.text:000000000004542C                 MOV             X1, X21
.text:0000000000045430                 STR             XZR, [X19]
.text:0000000000045434                 MOV             X2, X20
.text:0000000000045438                 BL              .EAS_HWFileSeek
.text:000000000004543C                 MOV             X25, X0
.text:0000000000045440                 CBNZ            X0, loc_45610
.text:0000000000045444                 LDP             X0, X1, [SP,#0xF0+var_A8]
.text:0000000000045448                 ADD             X2, SP, #0xF0+var_B8
.text:000000000004544C                 ADD             X4, SP, #0xF0+var_C8
.text:0000000000045450                 MOV             W3, #8
.text:0000000000045454                 BL              .EAS_HWReadFile
.text:0000000000045458                 MOV             X25, X0
.text:000000000004545C                 CBNZ            X0, loc_45610
.text:0000000000045460                 LDR             X8, [SP,#0xF0+var_B8]
.text:0000000000045464                 MOV             W9, #0x52494646
.text:000000000004546C                 STR             X20, [SP,#0xF0+var_C0]
.text:0000000000045470                 ADD             X0, SP, #0xF0+var_B0
.text:0000000000045474                 ADD             X1, SP, #0xF0+var_C0
.text:0000000000045478                 CMP             X8, X9
.text:000000000004547C                 CSET            W8, EQ
.text:0000000000045480                 ADD             X2, SP, #0xF0+var_B8
.text:0000000000045484                 ADD             X3, SP, #0xF0+var_C8
.text:0000000000045488                 STR             W8, [SP,#0xF0+var_60]
.text:000000000004548C                 BL              sub_45860
.text:0000000000045490                 MOV             X25, X0
.text:0000000000045494                 CBNZ            X0, loc_45610
.text:0000000000045498                 LDR             X8, [SP,#0xF0+var_B8]
.text:000000000004549C                 MOV             W9, #0x444C5320
.text:00000000000454A4                 CMP             X8, X9
.text:00000000000454A8                 B.NE            loc_455FC
.text:00000000000454AC                 LDR             X8, [SP,#0xF0+var_C8]
.text:00000000000454B0                 ADD             X23, X20, #0xC
.text:00000000000454B4                 STR             X23, [SP,#0xF0+var_C0]
.text:00000000000454B8                 ADD             X28, X8, X20
.text:00000000000454BC                 CMP             X23, X28
.text:00000000000454C0                 B.GE            loc_45604
.text:00000000000454C4                 MOV             W21, #0x626B
.text:00000000000454C8                 STP             XZR, XZR, [SP,#0xF0+var_E0]
.text:00000000000454CC                 MOV             W20, #0x6C20
.text:00000000000454D0                 STP             XZR, XZR, [SP,#0xF0+var_F0]
.text:00000000000454D4                 MOV             W24, #0x626C
.text:00000000000454D8                 STR             XZR, [SP,#0xF0+var_D0]
.text:00000000000454DC                 MOV             W22, #0x706C
.text:00000000000454E0                 MOV             X27, XZR
.text:00000000000454E4                 MOVK            W21, #0x7074,LSL#16
.text:00000000000454E8                 MOVK            W20, #0x6364,LSL#16
.text:00000000000454EC                 MOVK            W24, #0x7074,LSL#16
.text:00000000000454F0                 MOVK            W22, #0x7776,LSL#16
.text:00000000000454F4 loc_454F4                               ; CODE XREF: DLSParser+1D0↓j
.text:00000000000454F4                 ADD             X0, SP, #0xF0+var_B0
.text:00000000000454F8                 ADD             X1, SP, #0xF0+var_C0
.text:00000000000454FC                 ADD             X2, SP, #0xF0+var_B8
.text:0000000000045500                 ADD             X3, SP, #0xF0+var_C8
.text:0000000000045504                 BL              sub_45860
.text:0000000000045508                 CBNZ            X0, loc_4560C
.text:000000000004550C                 LDR             X8, [SP,#0xF0+var_B8]
.text:0000000000045510                 CMP             X8, X21
.text:0000000000045514                 B.GT            loc_45548
.text:0000000000045518                 CMP             X8, X20
.text:000000000004551C                 B.EQ            loc_45570
.text:0000000000045520                 MOV             W9, #0x6C696E73
.text:0000000000045528                 CMP             X8, X9
.text:000000000004552C                 B.NE            loc_455A0
.text:0000000000045530                 LDR             X8, [SP,#0xF0+var_C8]
.text:0000000000045534                 ADD             X9, X23, #0xC
.text:0000000000045538                 STR             X9, [SP,#0xF0+var_F0]
.text:000000000004553C                 SUB             X8, X8, #4
.text:0000000000045540                 STR             X8, [SP,#0xF0+var_D8]
.text:0000000000045544                 B               loc_455A0
.text:0000000000045548 ; ---------------------------------------------------------------------------
.text:0000000000045548 loc_45548                               ; CODE XREF: DLSParser+13C↑j
.text:0000000000045548                 CMP             X8, X24
.text:000000000004554C                 B.EQ            loc_45590
.text:0000000000045550                 CMP             X8, X22
.text:0000000000045554                 B.NE            loc_455A0
.text:0000000000045558                 LDR             X8, [SP,#0xF0+var_C8]
.text:000000000004555C                 ADD             X9, X23, #0xC
.text:0000000000045560                 STR             X9, [SP,#0xF0+var_E8]
.text:0000000000045564                 SUB             X8, X8, #4
.text:0000000000045568                 STR             X8, [SP,#0xF0+var_D0]
.text:000000000004556C                 B               loc_455A0
.text:0000000000045570 ; ---------------------------------------------------------------------------
.text:0000000000045570 loc_45570                               ; CODE XREF: DLSParser+144↑j
.text:0000000000045570                 LDR             X1, [SP,#0xF0+var_C8]
.text:0000000000045574                 ADD             X0, SP, #0xF0+var_B0
.text:0000000000045578                 ADD             X2, SP, #0xF0+var_B8
.text:000000000004557C                 BL              sub_45948
.text:0000000000045580                 CBNZ            X0, loc_4560C
.text:0000000000045584                 LDR             X8, [SP,#0xF0+var_B8]
.text:0000000000045588                 CBNZ            X8, loc_455A0
.text:000000000004558C                 B               loc_45604
.text:0000000000045590 ; ---------------------------------------------------------------------------
.text:0000000000045590 loc_45590                               ; CODE XREF: DLSParser+174↑j
.text:0000000000045590                 LDR             X8, [SP,#0xF0+var_C8]
.text:0000000000045594                 ADD             X9, X23, #8
.text:0000000000045598                 STR             X9, [SP,#0xF0+var_E0]
.text:000000000004559C                 SUB             X27, X8, #4
.text:00000000000455A0 loc_455A0                               ; CODE XREF: DLSParser+154↑j
.text:00000000000455A0                                         ; DLSParser+16C↑j ...
.text:00000000000455A0                 LDR             X23, [SP,#0xF0+var_C0]
.text:00000000000455A4                 CMP             X23, X28
.text:00000000000455A8                 B.LT            loc_454F4
.text:00000000000455AC                 LDR             X3, [SP,#0xF0+var_D0]
.text:00000000000455B0                 MOV             X25, #0xFFFFFFFFFFFFFFF1
.text:00000000000455B4                 CBZ             X3, loc_45610
.text:00000000000455B8                 LDR             X8, [SP,#0xF0+var_D8]
.text:00000000000455BC                 CBZ             X8, loc_45610
.text:00000000000455C0                 MOV             X25, #0xFFFFFFFFFFFFFFF1
.text:00000000000455C4                 CBZ             X27, loc_45610
.text:00000000000455C8                 AND             X8, X27, #0xFFFFFFFF
.text:00000000000455CC                 MOV             W9, #0x2010
.text:00000000000455D0                 CMP             X8, X9
.text:00000000000455D4                 B.HI            loc_45610
.text:00000000000455D8                 LDP             X2, X1, [SP,#0xF0+var_E8]
.text:00000000000455DC                 ADD             X0, SP, #0xF0+var_B0
.text:00000000000455E0                 BL              sub_45BC8
.text:00000000000455E4                 MOV             X25, X0
.text:00000000000455E8                 CBNZ            X0, loc_45610
.text:00000000000455EC                 LDR             X8, [SP,#0xF0+var_78]
.text:00000000000455F0                 SUB             X9, X8, #1
.text:00000000000455F4                 CMP             X9, #0x3FF
.text:00000000000455F8                 B.LS            loc_45644
.text:00000000000455FC loc_455FC                               ; CODE XREF: DLSParser+D0↑j
.text:00000000000455FC                 MOV             X25, #0xFFFFFFFFFFFFFFEF
.text:0000000000045600                 B               loc_45610
.text:0000000000045604 ; ---------------------------------------------------------------------------
.text:0000000000045604 loc_45604                               ; CODE XREF: DLSParser+E8↑j
.text:0000000000045604                                         ; DLSParser+1B4↑j
.text:0000000000045604                 MOV             X25, #0xFFFFFFFFFFFFFFF1
.text:0000000000045608                 B               loc_45610
.text:000000000004560C ; ---------------------------------------------------------------------------
.text:000000000004560C loc_4560C                               ; CODE XREF: DLSParser+130↑j
.text:000000000004560C                                         ; DLSParser+1A8↑j
.text:000000000004560C                 MOV             X25, X0
.text:0000000000045610 loc_45610                               ; CODE XREF: DLSParser+68↑j
.text:0000000000045610                                         ; DLSParser+84↑j ...
.text:0000000000045610                 LDR             X8, [X26,#0x28]
.text:0000000000045614                 LDUR            X9, [X29,#var_58]
.text:0000000000045618                 CMP             X8, X9
.text:000000000004561C                 B.NE            loc_4585C
.text:0000000000045620                 MOV             X0, X25
.text:0000000000045624                 LDP             X29, X30, [SP,#0xF0+var_s0]
.text:0000000000045628                 LDP             X20, X19, [SP,#0xF0+var_10]
.text:000000000004562C                 LDP             X22, X21, [SP,#0xF0+var_20]
.text:0000000000045630                 LDP             X24, X23, [SP,#0xF0+var_30]
.text:0000000000045634                 LDP             X26, X25, [SP,#0xF0+var_40]
.text:0000000000045638                 LDP             X28, X27, [SP,#0xF0+var_50]
.text:000000000004563C                 ADD             SP, SP, #0x100
.text:0000000000045640                 RET
.text:0000000000045644 ; ---------------------------------------------------------------------------
.text:0000000000045644 loc_45644                               ; CODE XREF: DLSParser+220↑j
.text:0000000000045644                 LDR             X0, [SP,#0xF0+var_A8]
.text:0000000000045648                 ADD             X8, X8, X8,LSL#2
.text:000000000004564C                 LSL             X1, X8, #3
.text:0000000000045650                 BL              .EAS_HWMalloc
.text:0000000000045654                 STR             X0, [SP,#0xF0+var_98]
.text:0000000000045658                 CBZ             X0, loc_45708
.text:000000000004565C                 LDR             X8, [SP,#0xF0+var_78]
.text:0000000000045660                 MOV             W1, WZR
.text:0000000000045664                 ADD             X8, X8, X8,LSL#2
.text:0000000000045668                 LSL             X2, X8, #3
.text:000000000004566C                 BL              .EAS_HWMemSet
.text:0000000000045670                 LDR             X1, [SP,#0xF0+var_F0]
.text:0000000000045674                 ADD             X0, SP, #0xF0+var_B0
.text:0000000000045678                 LDR             X2, [SP,#0xF0+var_D8]
.text:000000000004567C                 BL              sub_46160
.text:0000000000045680                 MOV             X25, X0
.text:0000000000045684                 CBZ             X0, loc_45710
.text:0000000000045688                 LDR             X8, [SP,#0xF0+var_B0]
.text:000000000004568C                 CBZ             X8, loc_456AC
.text:0000000000045690 loc_45690                               ; CODE XREF: DLSParser+460↓j
.text:0000000000045690                 ADRP            X1, #unk_56B8@PAGE
.text:0000000000045694                 ADD             X1, X1, #unk_56B8@PAGEOFF
.text:0000000000045698                 ADD             X0, SP, #0xF0+var_B0
.text:000000000004569C                 MOV             W2, WZR
.text:00000000000456A0                 BL              sub_46A20
.text:00000000000456A4                 MOV             W8, #1
.text:00000000000456A8                 STR             X8, [SP,#0xF0+var_80]
.text:00000000000456AC loc_456AC                               ; CODE XREF: DLSParser+2B4↑j
.text:00000000000456AC                                         ; DLSParser+464↓j
.text:00000000000456AC                 STP             XZR, XZR, [SP,#0xF0+var_90]
.text:00000000000456B0                 CBNZ            X25, loc_456C8
.text:00000000000456B4                 LDR             X1, [SP,#0xF0+var_F0]
.text:00000000000456B8                 ADD             X0, SP, #0xF0+var_B0
.text:00000000000456BC                 LDR             X2, [SP,#0xF0+var_D8]
.text:00000000000456C0                 BL              sub_46160
.text:00000000000456C4                 MOV             X25, X0
.text:00000000000456C8 loc_456C8                               ; CODE XREF: DLSParser+2D8↑j
.text:00000000000456C8                 LDR             X1, [SP,#0xF0+var_98]
.text:00000000000456CC                 CBZ             X1, loc_456D8
.text:00000000000456D0                 LDR             X0, [SP,#0xF0+var_A8]
.text:00000000000456D4                 BL              .EAS_HWFree
.text:00000000000456D8 loc_456D8                               ; CODE XREF: DLSParser+2F4↑j
.text:00000000000456D8                 CBZ             X25, loc_45754
.text:00000000000456DC                 LDR             X1, [SP,#0xF0+var_B0]
.text:00000000000456E0                 CBZ             X1, loc_45610
.text:00000000000456E4                 LDRB            W8, [X1,#0x38]
.text:00000000000456E8                 CBZ             W8, loc_45610
.text:00000000000456EC                 LDR             X0, [SP,#0xF0+var_A8]
.text:00000000000456F0                 SUB             W8, W8, #1
.text:00000000000456F4                 TST             W8, #0xFF
.text:00000000000456F8                 STRB            W8, [X1,#0x38]
.text:00000000000456FC                 B.NE            loc_45610
.text:0000000000045700                 BL              .EAS_HWFree
.text:0000000000045704                 B               loc_45610
.text:0000000000045708 ; ---------------------------------------------------------------------------
.text:0000000000045708 loc_45708                               ; CODE XREF: DLSParser+280↑j
.text:0000000000045708                 MOV             X25, #0xFFFFFFFFFFFFFFFD
.text:000000000004570C                 B               loc_45610
.text:0000000000045710 ; ---------------------------------------------------------------------------
.text:0000000000045710 loc_45710                               ; CODE XREF: DLSParser+2AC↑j
.text:0000000000045710                 LDR             X8, [SP,#0xF0+var_88]
.text:0000000000045714                 SUB             X9, X8, #1
.text:0000000000045718                 CMP             X9, #0x800
.text:000000000004571C                 B.CS            loc_45740
.text:0000000000045720                 LDR             X9, [SP,#0xF0+var_80]
.text:0000000000045724                 SUB             X10, X9, #1
.text:0000000000045728                 CMP             X10, #0x800
.text:000000000004572C                 B.CS            loc_45740
.text:0000000000045730                 LDR             X10, [SP,#0xF0+var_90]
.text:0000000000045734                 SUB             X11, X10, #1
.text:0000000000045738                 CMP             X11, #0x100
.text:000000000004573C                 B.CC            loc_45760
.text:0000000000045740 loc_45740                               ; CODE XREF: DLSParser+344↑j
.text:0000000000045740                                         ; DLSParser+354↑j
.text:0000000000045740                 LDR             X1, [SP,#0xF0+var_98]
.text:0000000000045744                 LDR             X0, [SP,#0xF0+var_A8]
.text:0000000000045748 loc_45748                               ; CODE XREF: DLSParser+46C↓j
.text:0000000000045748                 BL              .EAS_HWFree
.text:000000000004574C                 MOV             X25, #0xFFFFFFFFFFFFFFEF
.text:0000000000045750                 B               loc_45610
.text:0000000000045754 ; ---------------------------------------------------------------------------
.text:0000000000045754 loc_45754                               ; CODE XREF: DLSParser:loc_456D8↑j
.text:0000000000045754                 LDR             X8, [SP,#0xF0+var_B0]
.text:0000000000045758                 STR             X8, [X19]
.text:000000000004575C                 B               loc_45610
.text:0000000000045760 ; ---------------------------------------------------------------------------
.text:0000000000045760 loc_45760                               ; CODE XREF: DLSParser+364↑j
.text:0000000000045760                 LSL             X21, X10, #4
.text:0000000000045764                 LDR             X0, [SP,#0xF0+var_A8]
.text:0000000000045768                 ADD             X9, X9, #1
.text:000000000004576C                 MOV             W10, #0x58 ; 'X'
.text:0000000000045770                 ADD             X8, X8, X8,LSL#2
.text:0000000000045774                 MUL             X20, X9, X10
.text:0000000000045778                 LSL             X22, X8, #3
.text:000000000004577C                 LDP             X23, X10, [SP,#0xF0+var_78]
.text:0000000000045780                 ADD             X8, X22, X20
.text:0000000000045784                 ADD             X8, X8, X21
.text:0000000000045788                 STR             X9, [SP,#0xF0+var_80]
.text:000000000004578C                 ADD             X8, X8, X23,LSL#4
.text:0000000000045790                 ADD             X8, X8, X10
.text:0000000000045794                 ADD             X1, X8, #0x60 ; '`'
.text:0000000000045798                 CMP             X1, #0
.text:000000000004579C                 STR             X1, [SP,#0xF0+var_C8]
.text:00000000000457A0                 B.LE            loc_45840
.text:00000000000457A4                 BL              .EAS_HWMalloc
.text:00000000000457A8                 STR             X0, [SP,#0xF0+var_B0]
.text:00000000000457AC                 CBZ             X0, loc_45848
.text:00000000000457B0                 LDR             X2, [SP,#0xF0+var_C8]
.text:00000000000457B4                 MOV             W1, WZR
.text:00000000000457B8                 LSL             X23, X23, #3
.text:00000000000457BC                 BL              .EAS_HWMemSet
.text:00000000000457C0                 LDR             X8, [SP,#0xF0+var_B0]
.text:00000000000457C4                 MOV             W11, #1
.text:00000000000457C8                 LDR             X10, [SP,#0xF0+var_90]
.text:00000000000457CC                 ADD             X0, SP, #0xF0+var_B0
.text:00000000000457D0                 ADD             X9, X8, #0x60 ; '`'
.text:00000000000457D4                 STR             X9, [X8]
.text:00000000000457D8                 ADD             X9, X9, X21
.text:00000000000457DC                 LDR             X12, [SP,#0xF0+var_B0]
.text:00000000000457E0                 STRB            W11, [X8,#0x38]
.text:00000000000457E4                 STRH            W10, [X8,#0x30]
.text:00000000000457E8                 STR             X9, [X12,#8]
.text:00000000000457EC                 LDR             X8, [SP,#0xF0+var_88]
.text:00000000000457F0                 STRH            W8, [X12,#0x32]
.text:00000000000457F4                 ADD             X8, X9, X22
.text:00000000000457F8                 LDR             X9, [SP,#0xF0+var_80]
.text:00000000000457FC                 ADD             X10, X8, X20
.text:0000000000045800                 STR             X8, [X12,#0x10]
.text:0000000000045804                 ADD             X8, X10, X23
.text:0000000000045808                 STRH            W9, [X12,#0x34]
.text:000000000004580C                 ADD             X9, X8, X23
.text:0000000000045810                 LDR             X11, [SP,#0xF0+var_78]
.text:0000000000045814                 STP             X10, X8, [X12,#0x18]
.text:0000000000045818                 STR             X9, [X12,#0x28]
.text:000000000004581C                 LDR             X3, [SP,#0xF0+var_D0]
.text:0000000000045820                 STRH            W11, [X12,#0x36]
.text:0000000000045824                 LDP             X2, X1, [SP,#0xF0+var_E8]
.text:0000000000045828                 STR             WZR, [SP,#0xF0+var_5C]
.text:000000000004582C                 BL              sub_45BC8
.text:0000000000045830                 MOV             X25, X0
.text:0000000000045834                 LDR             X8, [SP,#0xF0+var_B0]
.text:0000000000045838                 CBNZ            X8, loc_45690
.text:000000000004583C                 B               loc_456AC
.text:0000000000045840 ; ---------------------------------------------------------------------------
.text:0000000000045840 loc_45840                               ; CODE XREF: DLSParser+3C8↑j
.text:0000000000045840                 LDR             X1, [SP,#0xF0+var_98]
.text:0000000000045844                 B               loc_45748
.text:0000000000045848 ; ---------------------------------------------------------------------------
.text:0000000000045848 loc_45848                               ; CODE XREF: DLSParser+3D4↑j
.text:0000000000045848                 LDR             X1, [SP,#0xF0+var_98]
.text:000000000004584C                 LDR             X0, [SP,#0xF0+var_A8]
.text:0000000000045850                 BL              .EAS_HWFree
.text:0000000000045854                 MOV             X25, #0xFFFFFFFFFFFFFFFD
.text:0000000000045858                 B               loc_45610
.text:000000000004585C ; ---------------------------------------------------------------------------
.text:000000000004585C loc_4585C                               ; CODE XREF: DLSParser+244↑j
.text:000000000004585C                 BL              .__stack_chk_fail
.text:000000000004585C ; } // starts at 453D8
.text:000000000004585C ; End of function DLSParser
.text:0000000000045860 ; =============== S U B R O U T I N E =======================================
.text:0000000000045860 ; Attributes: bp-based frame
.text:0000000000045860 sub_45860                               ; CODE XREF: DLSParser+B4↑p
.text:0000000000045860                                         ; DLSParser+12C↑p ...
.text:0000000000045860 var_20          = -0x20
.text:0000000000045860 var_10          = -0x10
.text:0000000000045860 var_s0          =  0
.text:0000000000045860 ; __unwind {
.text:0000000000045860                 STP             X22, X21, [SP,#-0x10+var_20]!
.text:0000000000045864                 STP             X20, X19, [SP,#0x20+var_10]
.text:0000000000045868                 STP             X29, X30, [SP,#0x20+var_s0]
.text:000000000004586C                 ADD             X29, SP, #0x20
.text:0000000000045870                 MOV             X22, X0
.text:0000000000045874                 LDR             X8, [X1]
.text:0000000000045878                 MOV             X19, X1
.text:000000000004587C                 LDR             X0, [X0,#8]
.text:0000000000045880                 MOV             X21, X2
.text:0000000000045884                 LDR             X1, [X22,#0x10]
.text:0000000000045888                 MOV             X20, X3
.text:000000000004588C                 MOV             X2, X8
.text:0000000000045890                 BL              .EAS_HWFileSeek
.text:0000000000045894                 CBNZ            X0, loc_458C0
.text:0000000000045898                 LDP             X0, X1, [X22,#8]
.text:000000000004589C                 MOV             X2, X21
.text:00000000000458A0                 MOV             W3, #1
.text:00000000000458A4                 BL              .EAS_HWGetDWord
.text:00000000000458A8                 CBNZ            X0, loc_458C0
.text:00000000000458AC                 LDP             X0, X1, [X22,#8]
.text:00000000000458B0                 MOV             X2, X20
.text:00000000000458B4                 MOV             W3, WZR
.text:00000000000458B8                 BL              .EAS_HWGetDWord
.text:00000000000458BC                 CBZ             X0, loc_458D0
.text:00000000000458C0 loc_458C0                               ; CODE XREF: sub_45860+34↑j
.text:00000000000458C0                                         ; sub_45860+48↑j ...
.text:00000000000458C0                 LDP             X29, X30, [SP,#0x20+var_s0]
.text:00000000000458C4                 LDP             X20, X19, [SP,#0x20+var_10]
.text:00000000000458C8                 LDP             X22, X21, [SP+0x20+var_20],#0x30
.text:00000000000458CC                 RET
.text:00000000000458D0 ; ---------------------------------------------------------------------------
.text:00000000000458D0 loc_458D0                               ; CODE XREF: sub_45860+5C↑j
.text:00000000000458D0                 LDR             X8, [X20]
.text:00000000000458D4                 TBNZ            X8, #0x3F, loc_4592C ; '?'
.text:00000000000458D8                 LDR             X9, [X21]
.text:00000000000458DC                 MOV             W10, #0x52494646
.text:00000000000458E4                 CMP             X9, X10
.text:00000000000458E8                 B.EQ            loc_458FC
.text:00000000000458EC                 MOV             W10, #0x4C495354
.text:00000000000458F4                 CMP             X9, X10
.text:00000000000458F8                 B.NE            loc_45914
.text:00000000000458FC loc_458FC                               ; CODE XREF: sub_45860+88↑j
.text:00000000000458FC                 LDP             X0, X1, [X22,#8]
.text:0000000000045900                 MOV             X2, X21
.text:0000000000045904                 MOV             W3, #1
.text:0000000000045908                 BL              .EAS_HWGetDWord
.text:000000000004590C                 CBNZ            X0, loc_458C0
.text:0000000000045910                 LDR             X8, [X20]
.text:0000000000045914 loc_45914                               ; CODE XREF: sub_45860+98↑j
.text:0000000000045914                 LDR             X9, [X19]
.text:0000000000045918                 MOV             X0, XZR
.text:000000000004591C                 ADD             X8, X8, X9
.text:0000000000045920                 ADD             X8, X8, #8
.text:0000000000045924                 STR             X8, [X19]
.text:0000000000045928                 B               loc_458C0
.text:000000000004592C ; ---------------------------------------------------------------------------
.text:000000000004592C loc_4592C                               ; CODE XREF: sub_45860+74↑j
.text:000000000004592C                 ADRP            X2, #aB37093318@PAGE ; "b/37093318"
.text:0000000000045930                 ADD             X2, X2, #aB37093318@PAGEOFF ; "b/37093318"
.text:0000000000045934                 MOV             W0, #6
.text:0000000000045938                 MOV             X1, XZR
.text:000000000004593C                 BL              .__android_log_print
.text:0000000000045940                 MOV             X0, #0xFFFFFFFFFFFFFFEF
.text:0000000000045944                 B               loc_458C0
.text:0000000000045944 ; } // starts at 45860
.text:0000000000045944 ; End of function sub_45860
.text:0000000000045948 ; =============== S U B R O U T I N E =======================================
.text:0000000000045948 ; Attributes: bp-based frame
.text:0000000000045948 sub_45948                               ; CODE XREF: DLSParser+1A4↑p
.text:0000000000045948                                         ; sub_46160+49C↓p ...
.text:0000000000045948 var_A8          = -0xA8
.text:0000000000045948 var_A0          = -0xA0
.text:0000000000045948 var_94          = -0x94
.text:0000000000045948 var_90          = -0x90
.text:0000000000045948 var_78          = -0x78
.text:0000000000045948 var_38          = -0x38
.text:0000000000045948 var_30          = -0x30
.text:0000000000045948 var_20          = -0x20
.text:0000000000045948 var_10          = -0x10
.text:0000000000045948 var_s0          =  0
.text:0000000000045948 ; __unwind {
.text:0000000000045948                 SUB             SP, SP, #0xC0
.text:000000000004594C                 STP             X24, X23, [SP,#0xB0+var_30]
.text:0000000000045950                 STP             X22, X21, [SP,#0xB0+var_20]
.text:0000000000045954                 STP             X20, X19, [SP,#0xB0+var_10]
.text:0000000000045958                 STP             X29, X30, [SP,#0xB0+var_s0]
.text:000000000004595C                 ADD             X29, SP, #0xB0
.text:0000000000045960                 MRS             X21, #3, c13, c0, #2
.text:0000000000045964                 LDR             X8, [X21,#0x28]
.text:0000000000045968                 STUR            X8, [X29,#var_38]
.text:000000000004596C                 STR             XZR, [X2]
.text:0000000000045970                 STR             XZR, [SP,#0xB0+var_A0]
.text:0000000000045974                 CBZ             X1, loc_45B94
.text:0000000000045978                 MOV             X19, X0
.text:000000000004597C                 LDR             X0, [X0,#8]
.text:0000000000045980                 ADD             X2, SP, #0xB0+var_94
.text:0000000000045984                 MOV             W3, WZR
.text:0000000000045988                 LDR             X1, [X19,#0x10]
.text:000000000004598C                 BL              .EAS_HWGetWord
.text:0000000000045990                 CBNZ            X0, loc_45B98
.text:0000000000045994                 ADRP            X23, #unk_559B@PAGE
.text:0000000000045998                 ADRP            X24, #unk_5597@PAGE
.text:000000000004599C                 MOV             W20, #0xFFFFFFFF
.text:00000000000459A0                 ADD             X22, SP, #0xB0+var_78
.text:00000000000459A4                 ADD             X23, X23, #unk_559B@PAGEOFF
.text:00000000000459A8                 ADD             X24, X24, #unk_5597@PAGEOFF
.text:00000000000459AC loc_459AC                               ; CODE XREF: sub_45948+20C↓j
.text:00000000000459AC                 LDRH            W10, [SP,#0xB0+var_94]
.text:00000000000459B0                 CMP             W10, #0xE
.text:00000000000459B4                 B.HI            loc_45A00
.text:00000000000459B8                 TBNZ            W20, #0x1F, loc_45B94
.text:00000000000459BC                 LDR             X8, [X22,W20,SXTW#3]
.text:00000000000459C0                 STR             X8, [SP,#0xB0+var_A0]
.text:00000000000459C4                 CBZ             W20, loc_45B94
.text:00000000000459C8                 SXTW            X9, W20
.text:00000000000459CC                 ADD             X9, X22, X9,LSL#3
.text:00000000000459D0                 SUB             W20, W20, #2
.text:00000000000459D4                 SUB             W10, W10, #1
.text:00000000000459D8                 LDUR            X9, [X9,#-8]
.text:00000000000459DC                 CMP             W10, #0xD
.text:00000000000459E0                 STR             X9, [SP,#0xB0+var_A8]
.text:00000000000459E4                 B.HI            loc_45B2C
.text:00000000000459E8                 ADR             X11, loc_459F8
.text:00000000000459EC                 LDRB            W12, [X23,X10]
.text:00000000000459F0                 ADD             X11, X11, X12,LSL#2
.text:00000000000459F4                 BR              X11
.text:00000000000459F8 ; ---------------------------------------------------------------------------
.text:00000000000459F8 loc_459F8                               ; DATA XREF: sub_45948+A0↑o
.text:00000000000459F8                 AND             X8, X9, X8
.text:00000000000459FC                 B               loc_45B28
.text:0000000000045A00 ; ---------------------------------------------------------------------------
.text:0000000000045A00 loc_45A00                               ; CODE XREF: sub_45948+6C↑j
.text:0000000000045A00                 SUB             W8, W10, #0xF
.text:0000000000045A04                 CMP             W8, #3
.text:0000000000045A08                 B.HI            loc_45B2C
.text:0000000000045A0C                 ADR             X9, loc_45A1C
.text:0000000000045A10                 LDRB            W10, [X24,X8]
.text:0000000000045A14                 ADD             X9, X9, X10,LSL#2
.text:0000000000045A18                 BR              X9
.text:0000000000045A1C ; ---------------------------------------------------------------------------
.text:0000000000045A1C loc_45A1C                               ; DATA XREF: sub_45948+C4↑o
.text:0000000000045A1C                 TBNZ            W20, #0x1F, loc_45B94
.text:0000000000045A20                 LDR             X8, [X22,W20,SXTW#3]
.text:0000000000045A24                 SUB             W20, W20, #1
.text:0000000000045A28                 CMP             X8, #0
.text:0000000000045A2C                 B               loc_45B24
.text:0000000000045A30 ; ---------------------------------------------------------------------------
.text:0000000000045A30                 ADD             X1, SP, #0xB0+var_90
.text:0000000000045A34                 MOV             X0, X19
.text:0000000000045A38                 BL              sub_473E8
.text:0000000000045A3C                 CBNZ            X0, loc_45B98
.text:0000000000045A40                 ADD             X0, SP, #0xB0+var_90
.text:0000000000045A44                 ADD             X1, SP, #0xB0+var_A0
.text:0000000000045A48                 BL              sub_47490
.text:0000000000045A4C                 CMP             W20, #7
.text:0000000000045A50                 B.LT            loc_45B34
.text:0000000000045A54                 B               loc_45B5C
.text:0000000000045A58 ; ---------------------------------------------------------------------------
.text:0000000000045A58                 ADD             X1, SP, #0xB0+var_90
.text:0000000000045A5C                 MOV             X0, X19
.text:0000000000045A60                 BL              sub_473E8
.text:0000000000045A64                 CBNZ            X0, loc_45B98
.text:0000000000045A68                 ADD             X0, SP, #0xB0+var_90
.text:0000000000045A6C                 ADD             X1, SP, #0xB0+var_A8
.text:0000000000045A70                 BL              sub_47490
.text:0000000000045A74                 MOV             W8, W0
.text:0000000000045A78                 B               loc_45B28
.text:0000000000045A7C ; ---------------------------------------------------------------------------
.text:0000000000045A7C                 LDP             X0, X1, [X19,#8]
.text:0000000000045A80                 ADD             X2, SP, #0xB0+var_A0
.text:0000000000045A84                 MOV             W3, WZR
.text:0000000000045A88                 BL              .EAS_HWGetDWord
.text:0000000000045A8C                 CBZ             X0, loc_45B2C
.text:0000000000045A90                 B               loc_45B98
.text:0000000000045A94 ; ---------------------------------------------------------------------------
.text:0000000000045A94                 CMP             X8, X9
.text:0000000000045A98                 CSET            W8, HI
.text:0000000000045A9C                 B               loc_45B28
.text:0000000000045AA0 ; ---------------------------------------------------------------------------
.text:0000000000045AA0                 SUB             X8, X8, X9
.text:0000000000045AA4                 B               loc_45B28
.text:0000000000045AA8 ; ---------------------------------------------------------------------------
.text:0000000000045AA8                 CMP             X8, X9
.text:0000000000045AAC                 CSET            W8, CS
.text:0000000000045AB0                 B               loc_45B28
.text:0000000000045AB4 ; ---------------------------------------------------------------------------
.text:0000000000045AB4                 EOR             X8, X9, X8
.text:0000000000045AB8                 B               loc_45B28
.text:0000000000045ABC ; ---------------------------------------------------------------------------
.text:0000000000045ABC                 CMP             X8, X9
.text:0000000000045AC0                 CSET            W8, CC
.text:0000000000045AC4                 B               loc_45B28
.text:0000000000045AC8 ; ---------------------------------------------------------------------------
.text:0000000000045AC8                 ORR             X8, X9, X8
.text:0000000000045ACC                 B               loc_45B28
.text:0000000000045AD0 ; ---------------------------------------------------------------------------
.text:0000000000045AD0                 ADD             X8, X9, X8
.text:0000000000045AD4                 B               loc_45B28
.text:0000000000045AD8 ; ---------------------------------------------------------------------------
.text:0000000000045AD8                 CMP             X8, #0
.text:0000000000045ADC                 CSET            W8, NE
.text:0000000000045AE0                 CMP             X9, #0
.text:0000000000045AE4                 CSET            W9, NE
.text:0000000000045AE8                 AND             W8, W8, W9
.text:0000000000045AEC                 B               loc_45B28
.text:0000000000045AF0 ; ---------------------------------------------------------------------------
.text:0000000000045AF0                 MUL             X8, X9, X8
.text:0000000000045AF4                 B               loc_45B28
.text:0000000000045AF8 ; ---------------------------------------------------------------------------
.text:0000000000045AF8                 CBZ             X9, loc_45B94
.text:0000000000045AFC                 UDIV            X8, X8, X9
.text:0000000000045B00                 B               loc_45B28
.text:0000000000045B04 ; ---------------------------------------------------------------------------
.text:0000000000045B04                 ORR             X8, X9, X8
.text:0000000000045B08                 CMP             X8, #0
.text:0000000000045B0C                 CSET            W8, NE
.text:0000000000045B10                 B               loc_45B28
.text:0000000000045B14 ; ---------------------------------------------------------------------------
.text:0000000000045B14                 CMP             X8, X9
.text:0000000000045B18                 CSET            W8, LS
.text:0000000000045B1C                 B               loc_45B28
.text:0000000000045B20 ; ---------------------------------------------------------------------------
.text:0000000000045B20                 CMP             X8, X9
.text:0000000000045B24 loc_45B24                               ; CODE XREF: sub_45948+E4↑j
.text:0000000000045B24                 CSET            W8, EQ
.text:0000000000045B28 loc_45B28                               ; CODE XREF: sub_45948+B4↑j
.text:0000000000045B28                                         ; sub_45948+130↑j ...
.text:0000000000045B28                 STR             X8, [SP,#0xB0+var_A0]
.text:0000000000045B2C loc_45B2C                               ; CODE XREF: sub_45948+9C↑j
.text:0000000000045B2C                                         ; sub_45948+C0↑j ...
.text:0000000000045B2C                 CMP             W20, #7
.text:0000000000045B30                 B.GE            loc_45B5C
.text:0000000000045B34 loc_45B34                               ; CODE XREF: sub_45948+108↑j
.text:0000000000045B34                 LDR             X8, [SP,#0xB0+var_A0]
.text:0000000000045B38                 SXTW            X9, W20
.text:0000000000045B3C                 LDP             X0, X1, [X19,#8]
.text:0000000000045B40                 ADD             X20, X9, #1
.text:0000000000045B44                 ADD             X2, SP, #0xB0+var_94
.text:0000000000045B48                 MOV             W3, WZR
.text:0000000000045B4C                 STR             X8, [X22,X20,LSL#3]
.text:0000000000045B50                 BL              .EAS_HWGetWord
.text:0000000000045B54                 CBZ             X0, loc_459AC
.text:0000000000045B58                 B               loc_45B98
.text:0000000000045B5C ; ---------------------------------------------------------------------------
.text:0000000000045B5C loc_45B5C                               ; CODE XREF: sub_45948+10C↑j
.text:0000000000045B5C                                         ; sub_45948+1E8↑j
.text:0000000000045B5C                 ADRP            X2, #aB34031018Stack@PAGE ; "b/34031018, stackPtr(%d)"
.text:0000000000045B60                 ADD             X2, X2, #aB34031018Stack@PAGEOFF ; "b/34031018, stackPtr(%d)"
.text:0000000000045B64                 MOV             W0, #6
.text:0000000000045B68                 MOV             X1, XZR
.text:0000000000045B6C                 MOV             W3, W20
.text:0000000000045B70                 BL              .__android_log_print
.text:0000000000045B74                 ADRP            X1, #a34031018@PAGE ; "34031018"
.text:0000000000045B78                 MOV             W0, #0x4554
.text:0000000000045B7C                 ADD             X1, X1, #a34031018@PAGEOFF ; "34031018"
.text:0000000000045B80                 MOVK            W0, #0x534E,LSL#16
.text:0000000000045B84                 MOV             W2, #0xFFFFFFFF
.text:0000000000045B88                 MOV             X3, XZR
.text:0000000000045B8C                 MOV             W4, WZR
.text:0000000000045B90                 BL              .__android_log_error_write
.text:0000000000045B94 loc_45B94                               ; CODE XREF: sub_45948+2C↑j
.text:0000000000045B94                                         ; sub_45948+70↑j ...
.text:0000000000045B94                 MOV             X0, #0xFFFFFFFFFFFFFFEF
.text:0000000000045B98 loc_45B98                               ; CODE XREF: sub_45948+48↑j
.text:0000000000045B98                                         ; sub_45948+F4↑j ...
.text:0000000000045B98                 LDR             X8, [X21,#0x28]
.text:0000000000045B9C                 LDUR            X9, [X29,#var_38]
.text:0000000000045BA0                 CMP             X8, X9
.text:0000000000045BA4                 B.NE            loc_45BC0
.text:0000000000045BA8                 LDP             X29, X30, [SP,#0xB0+var_s0]
.text:0000000000045BAC                 LDP             X20, X19, [SP,#0xB0+var_10]
.text:0000000000045BB0                 LDP             X22, X21, [SP,#0xB0+var_20]
.text:0000000000045BB4                 LDP             X24, X23, [SP,#0xB0+var_30]
.text:0000000000045BB8                 ADD             SP, SP, #0xC0
.text:0000000000045BBC                 RET
.text:0000000000045BC0 ; ---------------------------------------------------------------------------
.text:0000000000045BC0 loc_45BC0                               ; CODE XREF: sub_45948+25C↑j
.text:0000000000045BC0                 BL              .__stack_chk_fail
.text:0000000000045BC0 ; } // starts at 45948
.text:0000000000045BC0 ; End of function sub_45948
.text:0000000000045BC0 ; ---------------------------------------------------------------------------
.text:0000000000045BC4                 ALIGN 8
.text:0000000000045BC8 ; =============== S U B R O U T I N E =======================================
.text:0000000000045BC8 ; Attributes: bp-based frame
.text:0000000000045BC8 sub_45BC8                               ; CODE XREF: DLSParser+208↑p
.text:0000000000045BC8                                         ; DLSParser+454↑p
.text:0000000000045BC8 var_E8          = -0xE8
.text:0000000000045BC8 var_E0          = -0xE0
.text:0000000000045BC8 var_D8          = -0xD8
.text:0000000000045BC8 var_D0          = -0xD0
.text:0000000000045BC8 var_C8          = -0xC8
.text:0000000000045BC8 var_C0          = -0xC0
.text:0000000000045BC8 var_98          = -0x98
.text:0000000000045BC8 var_90          = -0x90
.text:0000000000045BC8 var_88          = -0x88
.text:0000000000045BC8 var_80          = -0x80
.text:0000000000045BC8 var_78          = -0x78
.text:0000000000045BC8 var_58          = -0x58
.text:0000000000045BC8 var_50          = -0x50
.text:0000000000045BC8 var_40          = -0x40
.text:0000000000045BC8 var_30          = -0x30
.text:0000000000045BC8 var_20          = -0x20
.text:0000000000045BC8 var_10          = -0x10
.text:0000000000045BC8 var_s0          =  0
.text:0000000000045BC8 ; __unwind {
.text:0000000000045BC8                 SUB             SP, SP, #0x100
.text:0000000000045BCC                 STP             X28, X27, [SP,#0xF0+var_50]
.text:0000000000045BD0                 STP             X26, X25, [SP,#0xF0+var_40]
.text:0000000000045BD4                 STP             X24, X23, [SP,#0xF0+var_30]
.text:0000000000045BD8                 STP             X22, X21, [SP,#0xF0+var_20]
.text:0000000000045BDC                 STP             X20, X19, [SP,#0xF0+var_10]
.text:0000000000045BE0                 STP             X29, X30, [SP,#0xF0+var_s0]
.text:0000000000045BE4                 ADD             X29, SP, #0xF0
.text:0000000000045BE8                 MRS             X27, #3, c13, c0, #2
.text:0000000000045BEC                 MOV             X21, X0
.text:0000000000045BF0                 LDR             X8, [X27,#0x28]
.text:0000000000045BF4                 MOV             X20, X2
.text:0000000000045BF8                 MOV             X2, X1
.text:0000000000045BFC                 MOV             X19, X3
.text:0000000000045C00                 STUR            X8, [X29,#var_58]
.text:0000000000045C04                 LDR             X8, [X21,#0x10]
.text:0000000000045C08                 LDR             X0, [X0,#8]
.text:0000000000045C0C                 MOV             X1, X8
.text:0000000000045C10                 BL              .EAS_HWFileSeek
.text:0000000000045C14                 CBNZ            X0, loc_46128
.text:0000000000045C18                 LDP             X0, X1, [X21,#8]
.text:0000000000045C1C                 ADD             X2, SP, #0xF0+var_C8
.text:0000000000045C20                 MOV             W3, WZR
.text:0000000000045C24                 BL              .EAS_HWGetDWord
.text:0000000000045C28                 CBNZ            X0, loc_46128
.text:0000000000045C2C                 LDP             X0, X1, [X21,#8]
.text:0000000000045C30                 ADD             X2, X21, #0x38 ; '8'
.text:0000000000045C34                 MOV             W3, WZR
.text:0000000000045C38                 BL              .EAS_HWGetDWord
.text:0000000000045C3C                 CBNZ            X0, loc_46128
.text:0000000000045C40                 LDP             X0, X1, [X21,#8]
.text:0000000000045C44                 ADD             X2, SP, #0xF0+var_D0
.text:0000000000045C48                 BL              .EAS_HWDupHandle
.text:0000000000045C4C                 CBNZ            X0, loc_46128
.text:0000000000045C50                 LDR             X8, [X21,#0x38]
.text:0000000000045C54                 LDR             X0, [X21,#8]
.text:0000000000045C58                 LDR             X1, [SP,#0xF0+var_D0]
.text:0000000000045C5C                 CBZ             X8, loc_4610C
.text:0000000000045C60                 ADD             X8, SP, #0xF0+var_78
.text:0000000000045C64                 ORR             X8, X8, #1
.text:0000000000045C68                 MOV             X28, XZR
.text:0000000000045C6C                 STR             X8, [SP,#0xF0+var_E0]
.text:0000000000045C70 loc_45C70                               ; CODE XREF: sub_45BC8+110↓j
.text:0000000000045C70                 ADD             X2, SP, #0xF0+var_C8
.text:0000000000045C74                 MOV             W3, WZR
.text:0000000000045C78                 BL              .EAS_HWGetDWord
.text:0000000000045C7C                 CBNZ            X0, loc_46128
.text:0000000000045C80                 LDR             X8, [SP,#0xF0+var_C8]
.text:0000000000045C84                 CMP             X8, X19
.text:0000000000045C88                 B.HI            loc_46118
.text:0000000000045C8C                 LDP             X0, X1, [X21,#8]
.text:0000000000045C90                 ADD             X22, X8, X20
.text:0000000000045C94                 MOV             X2, X22
.text:0000000000045C98                 STR             X22, [SP,#0xF0+var_88]
.text:0000000000045C9C                 BL              .EAS_HWFileSeek
.text:0000000000045CA0                 CBNZ            X0, loc_45CBC
.text:0000000000045CA4                 ADD             X1, SP, #0xF0+var_88
.text:0000000000045CA8                 ADD             X2, SP, #0xF0+var_90
.text:0000000000045CAC                 ADD             X3, SP, #0xF0+var_98
.text:0000000000045CB0                 MOV             X0, X21
.text:0000000000045CB4                 BL              sub_45860
.text:0000000000045CB8                 CBZ             X0, loc_45CE0
.text:0000000000045CBC loc_45CBC                               ; CODE XREF: sub_45BC8+D8↑j
.text:0000000000045CBC                                         ; sub_45BC8+168↓j ...
.text:0000000000045CBC                 CBNZ            X0, loc_46128
.text:0000000000045CC0 loc_45CC0                               ; CODE XREF: sub_45BC8+1E0↓j
.text:0000000000045CC0                                         ; sub_45BC8+3E8↓j ...
.text:0000000000045CC0                 LDR             X8, [X21,#0x38]
.text:0000000000045CC4                 ADD             W9, W28, #1
.text:0000000000045CC8                 LDR             X0, [X21,#8]
.text:0000000000045CCC                 AND             X28, X9, #0xFFFF
.text:0000000000045CD0                 LDR             X1, [SP,#0xF0+var_D0]
.text:0000000000045CD4                 CMP             X8, X28
.text:0000000000045CD8                 B.HI            loc_45C70
.text:0000000000045CDC                 B               loc_4610C
.text:0000000000045CE0 ; ---------------------------------------------------------------------------
.text:0000000000045CE0 loc_45CE0                               ; CODE XREF: sub_45BC8+F0↑j
.text:0000000000045CE0                 LDR             X8, [SP,#0xF0+var_90]
.text:0000000000045CE4                 MOV             W9, #0x77617665
.text:0000000000045CEC                 CMP             X8, X9
.text:0000000000045CF0                 B.NE            loc_45DA4
.text:0000000000045CF4                 LDR             X8, [SP,#0xF0+var_98]
.text:0000000000045CF8                 ADD             X23, X22, #0xC
.text:0000000000045CFC                 STR             X23, [SP,#0xF0+var_88]
.text:0000000000045D00                 CMP             X8, #1
.text:0000000000045D04                 B.LT            loc_45DB0
.text:0000000000045D08                 MOV             X24, XZR
.text:0000000000045D0C                 STR             XZR, [SP,#0xF0+var_D8]
.text:0000000000045D10                 MOV             X25, XZR
.text:0000000000045D14                 MOV             X26, XZR
.text:0000000000045D18                 ADD             X22, X8, X23
.text:0000000000045D1C loc_45D1C                               ; CODE XREF: sub_45BC8+1C4↓j
.text:0000000000045D1C                 ADD             X1, SP, #0xF0+var_88
.text:0000000000045D20                 ADD             X2, SP, #0xF0+var_90
.text:0000000000045D24                 ADD             X3, SP, #0xF0+var_98
.text:0000000000045D28                 MOV             X0, X21
.text:0000000000045D2C                 BL              sub_45860
.text:0000000000045D30                 CBNZ            X0, loc_45CBC
.text:0000000000045D34                 LDR             X8, [SP,#0xF0+var_90]
.text:0000000000045D38                 MOV             W9, #0x64617461
.text:0000000000045D40                 CMP             X8, X9
.text:0000000000045D44                 B.EQ            loc_45D70
.text:0000000000045D48                 MOV             W9, #0x666D7420
.text:0000000000045D50                 CMP             X8, X9
.text:0000000000045D54                 B.EQ            loc_45D80
.text:0000000000045D58                 MOV             W9, #0x77736D70
.text:0000000000045D60                 CMP             X8, X9
.text:0000000000045D64                 B.NE            loc_45D84
.text:0000000000045D68                 ADD             X26, X23, #8
.text:0000000000045D6C                 B               loc_45D84
.text:0000000000045D70 ; ---------------------------------------------------------------------------
.text:0000000000045D70 loc_45D70                               ; CODE XREF: sub_45BC8+17C↑j
.text:0000000000045D70                 LDR             X8, [SP,#0xF0+var_98]
.text:0000000000045D74                 ADD             X24, X23, #8
.text:0000000000045D78                 STR             X8, [SP,#0xF0+var_D8]
.text:0000000000045D7C                 B               loc_45D84
.text:0000000000045D80 ; ---------------------------------------------------------------------------
.text:0000000000045D80 loc_45D80                               ; CODE XREF: sub_45BC8+18C↑j
.text:0000000000045D80                 ADD             X25, X23, #8
.text:0000000000045D84 loc_45D84                               ; CODE XREF: sub_45BC8+19C↑j
.text:0000000000045D84                                         ; sub_45BC8+1A4↑j ...
.text:0000000000045D84                 LDR             X23, [SP,#0xF0+var_88]
.text:0000000000045D88                 CMP             X23, X22
.text:0000000000045D8C                 B.LT            loc_45D1C
.text:0000000000045D90                 LDR             X8, [SP,#0xF0+var_D8]
.text:0000000000045D94                 MOV             X0, #0xFFFFFFFFFFFFFFE2
.text:0000000000045D98                 CMP             X8, #0x100,LSL#12
.text:0000000000045D9C                 B.HI            loc_45CBC
.text:0000000000045DA0                 B               loc_45DC0
.text:0000000000045DA4 ; ---------------------------------------------------------------------------
.text:0000000000045DA4 loc_45DA4                               ; CODE XREF: sub_45BC8+128↑j
.text:0000000000045DA4                 MOV             X0, #0xFFFFFFFFFFFFFFEF
.text:0000000000045DA8                 CBZ             X0, loc_45CC0
.text:0000000000045DAC                 B               loc_46128
.text:0000000000045DB0 ; ---------------------------------------------------------------------------
.text:0000000000045DB0 loc_45DB0                               ; CODE XREF: sub_45BC8+13C↑j
.text:0000000000045DB0                 STR             XZR, [SP,#0xF0+var_D8]
.text:0000000000045DB4                 MOV             X24, XZR
.text:0000000000045DB8                 MOV             X25, XZR
.text:0000000000045DBC                 MOV             X26, XZR
.text:0000000000045DC0 loc_45DC0                               ; CODE XREF: sub_45BC8+1D8↑j
.text:0000000000045DC0                 LDR             X8, [X21]
.text:0000000000045DC4                 CBZ             X8, loc_45DD8
.text:0000000000045DC8                 LDR             X8, [X21,#0x18]
.text:0000000000045DCC                 MOV             W9, #0x28 ; '('
.text:0000000000045DD0                 MADD            X22, X28, X9, X8
.text:0000000000045DD4                 B               loc_45DDC
.text:0000000000045DD8 ; ---------------------------------------------------------------------------
.text:0000000000045DD8 loc_45DD8                               ; CODE XREF: sub_45BC8+1FC↑j
.text:0000000000045DD8                 ADD             X22, SP, #0xF0+var_C0
.text:0000000000045DDC loc_45DDC                               ; CODE XREF: sub_45BC8+20C↑j
.text:0000000000045DDC                 MOV             W8, #0x3C ; '<'
.text:0000000000045DE0                 STRH            WZR, [X22,#0x22]
.text:0000000000045DE4                 MOV             X0, #0xFFFFFFFFFFFFFFF1
.text:0000000000045DE8                 STP             XZR, XZR, [X22]
.text:0000000000045DEC                 STR             XZR, [X22,#0x10]
.text:0000000000045DF0                 STRB            W8, [X22,#0x24]
.text:0000000000045DF4                 CBZ             X24, loc_45CBC
.text:0000000000045DF8                 CBZ             X25, loc_45CBC
.text:0000000000045DFC                 CBZ             X26, loc_45E14
.text:0000000000045E00                 MOV             X0, X21
.text:0000000000045E04                 MOV             X1, X26
.text:0000000000045E08                 MOV             X2, X22
.text:0000000000045E0C                 BL              sub_46F30
.text:0000000000045E10                 CBNZ            X0, loc_45CBC
.text:0000000000045E14 loc_45E14                               ; CODE XREF: sub_45BC8+234↑j
.text:0000000000045E14                 LDP             X0, X1, [X21,#8]
.text:0000000000045E18                 MOV             X2, X25
.text:0000000000045E1C                 BL              .EAS_HWFileSeek
.text:0000000000045E20                 CBNZ            X0, loc_45CBC
.text:0000000000045E24                 LDP             X0, X1, [X21,#8]
.text:0000000000045E28                 ADD             X2, SP, #0xF0+var_80
.text:0000000000045E2C                 MOV             W3, WZR
.text:0000000000045E30                 BL              .EAS_HWGetWord
.text:0000000000045E34                 CBNZ            X0, loc_45CBC
.text:0000000000045E38                 LDRH            W8, [SP,#0xF0+var_80]
.text:0000000000045E3C                 CMP             W8, #1
.text:0000000000045E40                 B.NE            loc_45FAC
.text:0000000000045E44                 LDP             X0, X1, [X21,#8]
.text:0000000000045E48                 ADD             X2, SP, #0xF0+var_80
.text:0000000000045E4C                 MOV             W3, WZR
.text:0000000000045E50                 BL              .EAS_HWGetWord
.text:0000000000045E54                 CBNZ            X0, loc_45CBC
.text:0000000000045E58                 LDRH            W8, [SP,#0xF0+var_80]
.text:0000000000045E5C                 CMP             W8, #1
.text:0000000000045E60                 B.NE            loc_45FAC
.text:0000000000045E64                 LDP             X0, X1, [X21,#8]
.text:0000000000045E68                 ADD             X2, X22, #0x18
.text:0000000000045E6C                 MOV             W3, WZR
.text:0000000000045E70                 BL              .EAS_HWGetDWord
.text:0000000000045E74                 CBNZ            X0, loc_45CBC
.text:0000000000045E78                 LDP             X0, X1, [X21,#8]
.text:0000000000045E7C                 ADD             X2, SP, #0xF0+var_78
.text:0000000000045E80                 MOV             W3, WZR
.text:0000000000045E84                 BL              .EAS_HWGetDWord
.text:0000000000045E88                 CBNZ            X0, loc_45CBC
.text:0000000000045E8C                 LDP             X0, X1, [X21,#8]
.text:0000000000045E90                 ADD             X2, SP, #0xF0+var_80
.text:0000000000045E94                 MOV             W3, WZR
.text:0000000000045E98                 BL              .EAS_HWGetWord
.text:0000000000045E9C                 CBNZ            X0, loc_45CBC
.text:0000000000045EA0                 LDP             X0, X1, [X21,#8]
.text:0000000000045EA4                 ADD             X25, X22, #0x20 ; ' '
.text:0000000000045EA8                 MOV             X2, X25
.text:0000000000045EAC                 MOV             W3, WZR
.text:0000000000045EB0                 BL              .EAS_HWGetWord
.text:0000000000045EB4                 CBNZ            X0, loc_45CBC
.text:0000000000045EB8                 LDRH            W8, [X25]
.text:0000000000045EBC                 CMP             W8, #8
.text:0000000000045EC0                 B.EQ            loc_45ECC
.text:0000000000045EC4                 CMP             W8, #0x10
.text:0000000000045EC8                 B.NE            loc_45FAC
.text:0000000000045ECC loc_45ECC                               ; CODE XREF: sub_45BC8+2F8↑j
.text:0000000000045ECC                 CMP             W8, #8
.text:0000000000045ED0                 LDR             X9, [SP,#0xF0+var_D8]
.text:0000000000045ED4                 CSET            W8, NE
.text:0000000000045ED8                 LSR             X8, X9, X8
.text:0000000000045EDC                 STR             X8, [SP,#0xF0+var_98]
.text:0000000000045EE0                 LDR             X9, [X22,#0x10]
.text:0000000000045EE4                 CBZ             X9, loc_45EF0
.text:0000000000045EE8                 ADD             X8, X8, #1
.text:0000000000045EEC                 STR             X8, [SP,#0xF0+var_98]
.text:0000000000045EF0 loc_45EF0                               ; CODE XREF: sub_45BC8+31C↑j
.text:0000000000045EF0                 LDR             X9, [X21]
.text:0000000000045EF4                 CBZ             X9, loc_45FB8
.text:0000000000045EF8                 LDR             X23, [X21,#0x48]
.text:0000000000045EFC                 LSL             X10, X28, #3
.text:0000000000045F00                 LDP             X8, X26, [X9,#0x20]
.text:0000000000045F04                 MOV             X0, #0xFFFFFFFFFFFFFFE2
.text:0000000000045F08                 STR             X23, [X8,X10]
.text:0000000000045F0C                 LDR             X8, [X21]
.text:0000000000045F10                 LDR             X9, [SP,#0xF0+var_98]
.text:0000000000045F14                 LDR             X8, [X8,#0x18]
.text:0000000000045F18                 STR             X9, [X8,X10]
.text:0000000000045F1C                 LDR             X10, [SP,#0xF0+var_98]
.text:0000000000045F20                 LDP             X8, X9, [X21,#0x40]
.text:0000000000045F24                 STR             X10, [SP,#0xF0+var_E8]
.text:0000000000045F28                 ADD             X10, X9, X10
.text:0000000000045F2C                 CMP             X10, X8
.text:0000000000045F30                 STR             X10, [X21,#0x48]
.text:0000000000045F34                 B.HI            loc_45CBC
.text:0000000000045F38                 LDP             X10, X11, [X22,#8]
.text:0000000000045F3C                 MOV             X0, #0xFFFFFFFFFFFFFFE2
.text:0000000000045F40                 ADD             X9, X10, X9
.text:0000000000045F44                 ADD             X9, X9, X11
.text:0000000000045F48                 CMP             X8, X9
.text:0000000000045F4C                 B.CC            loc_45CBC
.text:0000000000045F50                 LDP             X0, X1, [X21,#8]
.text:0000000000045F54                 MOV             X2, X24
.text:0000000000045F58                 BL              .EAS_HWFileSeek
.text:0000000000045F5C                 CBNZ            X0, loc_45CBC
.text:0000000000045F60                 LDRH            W8, [X25]
.text:0000000000045F64                 ADD             X24, X26, X23
.text:0000000000045F68                 CMP             W8, #8
.text:0000000000045F6C                 B.NE            loc_45FD0
.text:0000000000045F70                 LDP             X0, X1, [X21,#8]
.text:0000000000045F74                 LDR             X3, [SP,#0xF0+var_D8]
.text:0000000000045F78                 ADD             X4, SP, #0xF0+var_80
.text:0000000000045F7C                 MOV             X2, X24
.text:0000000000045F80                 BL              .EAS_HWReadFile
.text:0000000000045F84                 CBNZ            X0, loc_45CBC
.text:0000000000045F88                 LDR             X8, [SP,#0xF0+var_D8]
.text:0000000000045F8C                 CMP             X8, #1
.text:0000000000045F90                 B.LT            loc_460B4
.text:0000000000045F94                 LDR             X8, [SP,#0xF0+var_D8]
.text:0000000000045F98                 CMP             X8, #0x20 ; ' '
.text:0000000000045F9C                 B.CS            loc_46058
.text:0000000000045FA0                 MOV             X9, XZR
.text:0000000000045FA4                 MOV             X8, X24
.text:0000000000045FA8                 B               loc_46098
.text:0000000000045FAC ; ---------------------------------------------------------------------------
.text:0000000000045FAC loc_45FAC                               ; CODE XREF: sub_45BC8+278↑j
.text:0000000000045FAC                                         ; sub_45BC8+298↑j ...
.text:0000000000045FAC                 MOV             X0, #0xFFFFFFFFFFFFFFF1
.text:0000000000045FB0                 CBZ             X0, loc_45CC0
.text:0000000000045FB4                 B               loc_46128
.text:0000000000045FB8 ; ---------------------------------------------------------------------------
.text:0000000000045FB8 loc_45FB8                               ; CODE XREF: sub_45BC8+32C↑j
.text:0000000000045FB8                 LDR             X9, [X21,#0x40]
.text:0000000000045FBC                 MOV             X0, XZR
.text:0000000000045FC0                 ADD             X8, X9, X8
.text:0000000000045FC4                 STR             X8, [X21,#0x40]
.text:0000000000045FC8                 CBZ             XZR, loc_45CC0
.text:0000000000045FCC                 B               loc_46128
.text:0000000000045FD0 ; ---------------------------------------------------------------------------
.text:0000000000045FD0 loc_45FD0                               ; CODE XREF: sub_45BC8+3A4↑j
.text:0000000000045FD0                 MOV             X25, X24
.text:0000000000045FD4                 B               loc_46020
.text:0000000000045FD8 ; ---------------------------------------------------------------------------
.text:0000000000045FD8 loc_45FD8                               ; CODE XREF: sub_45BC8+488↓j
.text:0000000000045FD8                 LDR             X8, [SP,#0xF0+var_80]
.text:0000000000045FDC                 LDR             X11, [SP,#0xF0+var_D8]
.text:0000000000045FE0                 ASR             X9, X8, #1
.text:0000000000045FE4                 SUB             X10, X9, #1
.text:0000000000045FE8                 SUB             X11, X11, X8
.text:0000000000045FEC                 STR             X10, [SP,#0xF0+var_80]
.text:0000000000045FF0                 STR             X11, [SP,#0xF0+var_D8]
.text:0000000000045FF4                 CBZ             X9, loc_46020
.text:0000000000045FF8                 LDR             X9, [SP,#0xF0+var_E0]
.text:0000000000045FFC                 CMP             W23, #0
.text:0000000000046000                 ADD             X8, SP, #0xF0+var_78
.text:0000000000046004                 CSEL            X8, X9, X8, EQ
.text:0000000000046008 loc_46008                               ; CODE XREF: sub_45BC8+454↓j
.text:0000000000046008                 LDRB            W9, [X8],#2
.text:000000000004600C                 STRB            W9, [X25],#1
.text:0000000000046010                 LDR             X9, [SP,#0xF0+var_80]
.text:0000000000046014                 SUB             X10, X9, #1
.text:0000000000046018                 STR             X10, [SP,#0xF0+var_80]
.text:000000000004601C                 CBNZ            X9, loc_46008
.text:0000000000046020 loc_46020                               ; CODE XREF: sub_45BC8+40C↑j
.text:0000000000046020                                         ; sub_45BC8+42C↑j
.text:0000000000046020                 LDR             X8, [SP,#0xF0+var_D8]
.text:0000000000046024                 CBZ             X8, loc_460B4
.text:0000000000046028                 LDR             X9, [SP,#0xF0+var_D8]
.text:000000000004602C                 MOV             W8, #0x20 ; ' '
.text:0000000000046030                 LDP             X0, X1, [X21,#8]
.text:0000000000046034                 LDR             W23, [X21,#0x50]
.text:0000000000046038                 ADD             X2, SP, #0xF0+var_78
.text:000000000004603C                 CMP             X9, #0x20 ; ' '
.text:0000000000046040                 CSEL            X3, X9, X8, LT
.text:0000000000046044                 ADD             X4, SP, #0xF0+var_80
.text:0000000000046048                 STR             X3, [SP,#0xF0+var_80]
.text:000000000004604C                 BL              .EAS_HWReadFile
.text:0000000000046050                 CBZ             X0, loc_45FD8
.text:0000000000046054                 B               loc_45CBC
.text:0000000000046058 ; ---------------------------------------------------------------------------
.text:0000000000046058 loc_46058                               ; CODE XREF: sub_45BC8+3D4↑j
.text:0000000000046058                 LDR             X8, [SP,#0xF0+var_D8]
.text:000000000004605C                 ADD             X10, X24, #0x10
.text:0000000000046060                 AND             X9, X8, #0xFFFFFFFFFFFFFFE0
.text:0000000000046064                 ADD             X8, X24, X9
.text:0000000000046068                 MOV             X11, X9
.text:000000000004606C loc_4606C                               ; CODE XREF: sub_45BC8+4C0↓j
.text:000000000004606C                 MOVI            V2.16B, #0x80
.text:0000000000046070                 SUBS            X11, X11, #0x20 ; ' '
.text:0000000000046074                 LDP             Q0, Q1, [X10,#-0x10]
.text:0000000000046078                 EOR             V0.16B, V0.16B, V2.16B
.text:000000000004607C                 EOR             V1.16B, V1.16B, V2.16B
.text:0000000000046080                 STP             Q0, Q1, [X10,#-0x10]
.text:0000000000046084                 ADD             X10, X10, #0x20 ; ' '
.text:0000000000046088                 B.NE            loc_4606C
.text:000000000004608C                 LDR             X10, [SP,#0xF0+var_D8]
.text:0000000000046090                 CMP             X10, X9
.text:0000000000046094                 B.EQ            loc_460B4
.text:0000000000046098 loc_46098                               ; CODE XREF: sub_45BC8+3E0↑j
.text:0000000000046098                 LDR             X10, [SP,#0xF0+var_D8]
.text:000000000004609C                 SUB             X9, X10, X9
.text:00000000000460A0 loc_460A0                               ; CODE XREF: sub_45BC8+4E8↓j
.text:00000000000460A0                 LDRB            W10, [X8]
.text:00000000000460A4                 SUBS            X9, X9, #1
.text:00000000000460A8                 EOR             W10, W10, #0x80
.text:00000000000460AC                 STRB            W10, [X8],#1
.text:00000000000460B0                 B.NE            loc_460A0
.text:00000000000460B4 loc_460B4                               ; CODE XREF: sub_45BC8+3C8↑j
.text:00000000000460B4                                         ; sub_45BC8+45C↑j ...
.text:00000000000460B4                 LDR             X8, [X22,#0x10]
.text:00000000000460B8                 CBZ             X8, loc_460F4
.text:00000000000460BC                 LDR             X9, [SP,#0xF0+var_E8]
.text:00000000000460C0                 CBZ             X9, loc_46100
.text:00000000000460C4                 LDR             X9, [X22,#8]
.text:00000000000460C8                 MOV             X0, #0xFFFFFFFFFFFFFFFF
.text:00000000000460CC                 LDR             X10, [SP,#0xF0+var_E8]
.text:00000000000460D0                 ADD             X8, X9, X8
.text:00000000000460D4                 SUB             X10, X10, #1
.text:00000000000460D8                 CMP             X8, X10
.text:00000000000460DC                 B.HI            loc_45CBC
.text:00000000000460E0                 LDRB            W9, [X24,X9]
.text:00000000000460E4                 MOV             X0, XZR
.text:00000000000460E8                 STRB            W9, [X24,X8]
.text:00000000000460EC                 CBZ             X0, loc_45CC0
.text:00000000000460F0                 B               loc_46128
.text:00000000000460F4 ; ---------------------------------------------------------------------------
.text:00000000000460F4 loc_460F4                               ; CODE XREF: sub_45BC8+4F0↑j
.text:00000000000460F4                 MOV             X0, XZR
.text:00000000000460F8                 CBZ             XZR, loc_45CC0
.text:00000000000460FC                 B               loc_46128
.text:0000000000046100 ; ---------------------------------------------------------------------------
.text:0000000000046100 loc_46100                               ; CODE XREF: sub_45BC8+4F8↑j
.text:0000000000046100                 MOV             X0, #0xFFFFFFFFFFFFFFFF
.text:0000000000046104                 CBZ             X0, loc_45CC0
.text:0000000000046108                 B               loc_46128
.text:000000000004610C ; ---------------------------------------------------------------------------
.text:000000000004610C loc_4610C                               ; CODE XREF: sub_45BC8+94↑j
.text:000000000004610C                                         ; sub_45BC8+114↑j
.text:000000000004610C                 BL              .EAS_HWCloseFile
.text:0000000000046110                 MOV             X0, XZR
.text:0000000000046114                 B               loc_46128
.text:0000000000046118 ; ---------------------------------------------------------------------------
.text:0000000000046118 loc_46118                               ; CODE XREF: sub_45BC8+C0↑j
.text:0000000000046118                 LDR             X0, [X21,#8]
.text:000000000004611C                 LDR             X1, [SP,#0xF0+var_D0]
.text:0000000000046120                 BL              .EAS_HWCloseFile
.text:0000000000046124                 MOV             X0, #0xFFFFFFFFFFFFFFEF
.text:0000000000046128 loc_46128                               ; CODE XREF: sub_45BC8+4C↑j
.text:0000000000046128                                         ; sub_45BC8+60↑j ...
.text:0000000000046128                 LDR             X8, [X27,#0x28]
.text:000000000004612C                 LDUR            X9, [X29,#var_58]
.text:0000000000046130                 CMP             X8, X9
.text:0000000000046134                 B.NE            loc_46158
.text:0000000000046138                 LDP             X29, X30, [SP,#0xF0+var_s0]
.text:000000000004613C                 LDP             X20, X19, [SP,#0xF0+var_10]
.text:0000000000046140                 LDP             X22, X21, [SP,#0xF0+var_20]
.text:0000000000046144                 LDP             X24, X23, [SP,#0xF0+var_30]
.text:0000000000046148                 LDP             X26, X25, [SP,#0xF0+var_40]
.text:000000000004614C                 LDP             X28, X27, [SP,#0xF0+var_50]
.text:0000000000046150                 ADD             SP, SP, #0x100
.text:0000000000046154                 RET
.text:0000000000046158 ; ---------------------------------------------------------------------------
.text:0000000000046158 loc_46158                               ; CODE XREF: sub_45BC8+56C↑j
.text:0000000000046158                 BL              .__stack_chk_fail
.text:0000000000046158 ; } // starts at 45BC8
.text:0000000000046158 ; End of function sub_45BC8
.text:0000000000046158 ; ---------------------------------------------------------------------------
.text:000000000004615C                 ALIGN 0x20
.text:0000000000046160 ; =============== S U B R O U T I N E =======================================
.text:0000000000046160 ; Attributes: bp-based frame
.text:0000000000046160 sub_46160                               ; CODE XREF: DLSParser+2A4↑p
.text:0000000000046160                                         ; DLSParser+2E8↑p
.text:0000000000046160 var_240         = -0x240
.text:0000000000046160 var_238         = -0x238
.text:0000000000046160 var_230         = -0x230
.text:0000000000046160 var_228         = -0x228
.text:0000000000046160 var_220         = -0x220
.text:0000000000046160 var_218         = -0x218
.text:0000000000046160 var_210         = -0x210
.text:0000000000046160 var_208         = -0x208
.text:0000000000046160 var_200         = -0x200
.text:0000000000046160 var_1F8         = -0x1F8
.text:0000000000046160 var_1F0         = -0x1F0
.text:0000000000046160 var_1E8         = -0x1E8
.text:0000000000046160 var_1E0         = -0x1E0
.text:0000000000046160 var_1D8         = -0x1D8
.text:0000000000046160 var_1D0         = -0x1D0
.text:0000000000046160 var_1C8         = -0x1C8
.text:0000000000046160 var_1C0         = -0x1C0
.text:0000000000046160 var_1B8         = -0x1B8
.text:0000000000046160 var_1B0         = -0x1B0
.text:0000000000046160 var_188         = -0x188
.text:0000000000046160 var_180         = -0x180
.text:0000000000046160 var_178         = -0x178
.text:0000000000046160 var_170         = -0x170
.text:0000000000046160 var_164         = -0x164
.text:0000000000046160 var_160         = -0x160
.text:0000000000046160 var_15C         = -0x15C
.text:0000000000046160 var_158         = -0x158
.text:0000000000046160 var_154         = -0x154
.text:0000000000046160 var_150         = -0x150
.text:0000000000046160 var_E8          = -0xE8
.text:0000000000046160 var_80          = -0x80
.text:0000000000046160 var_70          = -0x70
.text:0000000000046160 var_60          = -0x60
.text:0000000000046160 var_50          = -0x50
.text:0000000000046160 var_40          = -0x40
.text:0000000000046160 var_30          = -0x30
.text:0000000000046160 var_20          = -0x20
.text:0000000000046160 var_10          = -0x10
.text:0000000000046160 var_s0          =  0
.text:0000000000046160 ; __unwind {
.text:0000000000046160                 STR             D10, [SP,#-0x10+var_70]!
.text:0000000000046164                 STP             D9, D8, [SP,#0x70+var_60]
.text:0000000000046168                 STP             X28, X27, [SP,#0x70+var_50]
.text:000000000004616C                 STP             X26, X25, [SP,#0x70+var_40]
.text:0000000000046170                 STP             X24, X23, [SP,#0x70+var_30]
.text:0000000000046174                 STP             X22, X21, [SP,#0x70+var_20]
.text:0000000000046178                 STP             X20, X19, [SP,#0x70+var_10]
.text:000000000004617C                 STP             X29, X30, [SP,#0x70+var_s0]
.text:0000000000046180                 ADD             X29, SP, #0x70
.text:0000000000046184                 SUB             SP, SP, #0x1D0
.text:0000000000046188                 MRS             X8, #3, c13, c0, #2
.text:000000000004618C                 MOV             X19, X0
.text:0000000000046190                 STR             X8, [SP,#0x240+var_208]
.text:0000000000046194                 MOV             X23, X1
.text:0000000000046198                 LDR             X8, [X8,#0x28]
.text:000000000004619C                 MOV             X20, X2
.text:00000000000461A0                 STUR            X8, [X29,#var_80]
.text:00000000000461A4                 LDR             X0, [X0,#8]
.text:00000000000461A8                 LDR             X1, [X19,#0x10]
.text:00000000000461AC                 STP             X2, X23, [SP,#0x240+var_1F8]
.text:00000000000461B0                 MOV             X2, X23
.text:00000000000461B4                 BL              .EAS_HWFileSeek
.text:00000000000461B8                 CBNZ            X0, loc_469DC
.text:00000000000461BC                 CMP             X20, #1
.text:00000000000461C0                 B.LT            loc_469D8
.text:00000000000461C4                 ADRP            X8, #qword_55C8@PAGE
.text:00000000000461C8                 ADRP            X9, #qword_55D8@PAGE
.text:00000000000461CC                 ADRP            X10, #qword_55C0@PAGE
.text:00000000000461D0                 MOV             W21, #0x7320
.text:00000000000461D4                 LDR             D8, [X8,#qword_55C8@PAGEOFF]
.text:00000000000461D8                 LDR             D9, [X9,#qword_55D8@PAGEOFF]
.text:00000000000461DC                 ADD             X20, X20, X23
.text:00000000000461E0                 LDR             D10, [X10,#qword_55C0@PAGEOFF]
.text:00000000000461E4                 MOVK            W21, #0x696E,LSL#16
.text:00000000000461E8                 STR             X20, [SP,#0x240+var_210]
.text:00000000000461EC loc_461EC                               ; CODE XREF: sub_46160+E4↓j
.text:00000000000461EC                 ADD             X1, SP, #0x240+var_1F0
.text:00000000000461F0                 ADD             X2, SP, #0x240+var_200
.text:00000000000461F4                 ADD             X3, SP, #0x240+var_1F8
.text:00000000000461F8                 MOV             X0, X19
.text:00000000000461FC                 BL              sub_45860
.text:0000000000046200                 CBNZ            X0, loc_469DC
.text:0000000000046204                 LDR             X8, [SP,#0x240+var_200]
.text:0000000000046208                 CMP             X8, X21
.text:000000000004620C                 B.NE            loc_4623C
.text:0000000000046210                 LDR             X22, [SP,#0x240+var_1F8]
.text:0000000000046214                 ADD             X20, X23, #0xC
.text:0000000000046218                 LDP             X0, X1, [X19,#8]
.text:000000000004621C                 MOV             X2, X20
.text:0000000000046220                 STP             X22, X20, [SP,#0x240+var_1D8]
.text:0000000000046224                 BL              .EAS_HWFileSeek
.text:0000000000046228                 CBZ             X0, loc_4624C
.text:000000000004622C loc_4622C                               ; CODE XREF: sub_46160+128↓j
.text:000000000004622C                                         ; sub_46160+1B8↓j ...
.text:000000000004622C                 LDR             X20, [SP,#0x240+var_210]
.text:0000000000046230                 MOV             W21, #0x696E7320
.text:0000000000046238                 CBNZ            X0, loc_469DC
.text:000000000004623C loc_4623C                               ; CODE XREF: sub_46160+AC↑j
.text:000000000004623C                 LDR             X23, [SP,#0x240+var_1F0]
.text:0000000000046240                 CMP             X23, X20
.text:0000000000046244                 B.LT            loc_461EC
.text:0000000000046248                 B               loc_469D8
.text:000000000004624C ; ---------------------------------------------------------------------------
.text:000000000004624C loc_4624C                               ; CODE XREF: sub_46160+C8↑j
.text:000000000004624C                 CMP             X22, #1
.text:0000000000046250                 B.LT            loc_4640C
.text:0000000000046254                 MOV             X28, XZR
.text:0000000000046258                 MOV             X23, XZR
.text:000000000004625C                 MOV             X25, XZR
.text:0000000000046260                 MOV             X26, XZR
.text:0000000000046264                 MOV             X27, XZR
.text:0000000000046268                 MOV             X21, XZR
.text:000000000004626C                 MOV             X24, XZR
.text:0000000000046270                 ADD             X22, X22, X20
.text:0000000000046274 loc_46274                               ; CODE XREF: sub_46160+1B0↓j
.text:0000000000046274                 ADD             X1, SP, #0x240+var_1D0
.text:0000000000046278                 ADD             X2, SP, #0x240+var_1E0
.text:000000000004627C                 ADD             X3, SP, #0x240+var_1D8
.text:0000000000046280                 MOV             X0, X19
.text:0000000000046284                 BL              sub_45860
.text:0000000000046288                 CBNZ            X0, loc_4622C
.text:000000000004628C                 LDR             X8, [SP,#0x240+var_1E0]
.text:0000000000046290                 MOV             W9, #0x6C617273
.text:0000000000046298                 CMP             X8, X9
.text:000000000004629C                 B.GT            loc_462CC
.text:00000000000462A0                 MOV             W9, #0x696E7368
.text:00000000000462A8                 CMP             X8, X9
.text:00000000000462AC                 B.EQ            loc_462F8
.text:00000000000462B0                 MOV             W9, #0x6C617232
.text:00000000000462B8                 CMP             X8, X9
.text:00000000000462BC                 B.NE            loc_46308
.text:00000000000462C0                 LDR             X23, [SP,#0x240+var_1D8]
.text:00000000000462C4                 ADD             X25, X20, #0xC
.text:00000000000462C8                 B               loc_46308
.text:00000000000462CC ; ---------------------------------------------------------------------------
.text:00000000000462CC loc_462CC                               ; CODE XREF: sub_46160+13C↑j
.text:00000000000462CC                 MOV             W9, #0x6C617274
.text:00000000000462D4                 CMP             X8, X9
.text:00000000000462D8                 B.EQ            loc_46300
.text:00000000000462DC                 MOV             W9, #0x6C72676E
.text:00000000000462E4                 CMP             X8, X9
.text:00000000000462E8                 B.NE            loc_46308
.text:00000000000462EC                 LDR             X21, [SP,#0x240+var_1D8]
.text:00000000000462F0                 ADD             X24, X20, #0xC
.text:00000000000462F4                 B               loc_46308
.text:00000000000462F8 ; ---------------------------------------------------------------------------
.text:00000000000462F8 loc_462F8                               ; CODE XREF: sub_46160+14C↑j
.text:00000000000462F8                 ADD             X28, X20, #8
.text:00000000000462FC                 B               loc_46308
.text:0000000000046300 ; ---------------------------------------------------------------------------
.text:0000000000046300 loc_46300                               ; CODE XREF: sub_46160+178↑j
.text:0000000000046300                 LDR             X26, [SP,#0x240+var_1D8]
.text:0000000000046304                 ADD             X27, X20, #0xC
.text:0000000000046308 loc_46308                               ; CODE XREF: sub_46160+15C↑j
.text:0000000000046308                                         ; sub_46160+168↑j ...
.text:0000000000046308                 LDR             X20, [SP,#0x240+var_1D0]
.text:000000000004630C                 CMP             X20, X22
.text:0000000000046310                 B.LT            loc_46274
.text:0000000000046314                 MOV             X0, #0xFFFFFFFFFFFFFFF1
.text:0000000000046318                 CBZ             X24, loc_4622C
.text:000000000004631C                 CBZ             X28, loc_4622C
.text:0000000000046320                 LDP             X0, X1, [X19,#8]
.text:0000000000046324                 MOV             X2, X28
.text:0000000000046328                 BL              .EAS_HWFileSeek
.text:000000000004632C                 CBNZ            X0, loc_4622C
.text:0000000000046330                 LDP             X0, X1, [X19,#8]
.text:0000000000046334                 ADD             X2, SP, #0x240+var_1E8
.text:0000000000046338                 MOV             W3, WZR
.text:000000000004633C                 BL              .EAS_HWGetDWord
.text:0000000000046340                 CBNZ            X0, loc_4622C
.text:0000000000046344                 LDP             X0, X1, [X19,#8]
.text:0000000000046348                 SUB             X2, X29, #-var_E8
.text:000000000004634C                 MOV             W3, WZR
.text:0000000000046350                 BL              .EAS_HWGetDWord
.text:0000000000046354                 CBNZ            X0, loc_4622C
.text:0000000000046358                 LDP             X0, X1, [X19,#8]
.text:000000000004635C                 ADD             X2, SP, #0x240+var_150
.text:0000000000046360                 MOV             W3, WZR
.text:0000000000046364                 BL              .EAS_HWGetDWord
.text:0000000000046368                 CBNZ            X0, loc_4622C
.text:000000000004636C                 LDUR            X20, [X29,#var_E8]
.text:0000000000046370                 MOV             W8, #0x7FFF8080
.text:0000000000046378                 TST             X20, X8
.text:000000000004637C                 B.EQ            loc_4638C
.text:0000000000046380                 MOV             W8, #0xFF7F
.text:0000000000046384                 AND             X20, X20, X8
.text:0000000000046388                 STUR            X20, [X29,#var_E8]
.text:000000000004638C loc_4638C                               ; CODE XREF: sub_46160+21C↑j
.text:000000000004638C                 LDR             X22, [SP,#0x240+var_150]
.text:0000000000046390                 CMP             X22, #0x80
.text:0000000000046394                 B.CC            loc_463A0
.text:0000000000046398                 AND             X22, X22, #0x7F
.text:000000000004639C                 STR             X22, [SP,#0x240+var_150]
.text:00000000000463A0 loc_463A0                               ; CODE XREF: sub_46160+234↑j
.text:00000000000463A0                 ADRP            X1, #unk_56B8@PAGE
.text:00000000000463A4                 ADD             X0, SP, #0x240+var_150
.text:00000000000463A8                 ADD             X1, X1, #unk_56B8@PAGEOFF
.text:00000000000463AC                 MOV             W2, #0x64 ; 'd'
.text:00000000000463B0                 BL              .EAS_HWMemCpy
.text:00000000000463B4                 CBZ             X27, loc_463D0
.text:00000000000463B8                 ADD             X3, SP, #0x240+var_150
.text:00000000000463BC                 MOV             X0, X19
.text:00000000000463C0                 MOV             X1, X27
.text:00000000000463C4                 MOV             X2, X26
.text:00000000000463C8                 BL              sub_470E0
.text:00000000000463CC                 CBNZ            X0, loc_4622C
.text:00000000000463D0 loc_463D0                               ; CODE XREF: sub_46160+254↑j
.text:00000000000463D0                 CBZ             X25, loc_463EC
.text:00000000000463D4                 ADD             X3, SP, #0x240+var_150
.text:00000000000463D8                 MOV             X0, X19
.text:00000000000463DC                 MOV             X1, X25
.text:00000000000463E0                 MOV             X2, X23
.text:00000000000463E4                 BL              sub_470E0
.text:00000000000463E8                 CBNZ            X0, loc_4622C
.text:00000000000463EC loc_463EC                               ; CODE XREF: sub_46160:loc_463D0↑j
.text:00000000000463EC                 LDRH            W8, [SP,#0x240+var_150]
.text:00000000000463F0                 CBZ             W8, loc_46414
.text:00000000000463F4                 LDR             X25, [X19,#0x30]
.text:00000000000463F8                 ADD             X9, X25, #1
.text:00000000000463FC                 STR             X9, [X19,#0x30]
.text:0000000000046400                 LDR             X9, [X19]
.text:0000000000046404                 CBNZ            X9, loc_46420
.text:0000000000046408                 B               loc_46458
.text:000000000004640C ; ---------------------------------------------------------------------------
.text:000000000004640C loc_4640C                               ; CODE XREF: sub_46160+F0↑j
.text:000000000004640C                 MOV             X0, #0xFFFFFFFFFFFFFFF1
.text:0000000000046410                 B               loc_4622C
.text:0000000000046414 ; ---------------------------------------------------------------------------
.text:0000000000046414 loc_46414                               ; CODE XREF: sub_46160+290↑j
.text:0000000000046414                 MOV             W25, WZR
.text:0000000000046418                 LDR             X9, [X19]
.text:000000000004641C                 CBZ             X9, loc_46458
.text:0000000000046420 loc_46420                               ; CODE XREF: sub_46160+2A4↑j
.text:0000000000046420                 ORR             X20, X22, X20,LSL#8
.text:0000000000046424                 CBZ             W8, loc_4643C
.text:0000000000046428                 ADD             X1, SP, #0x240+var_150
.text:000000000004642C                 MOV             X0, X19
.text:0000000000046430                 MOV             W2, W25
.text:0000000000046434                 BL              sub_46A20
.text:0000000000046438                 LDR             X9, [X19]
.text:000000000004643C loc_4643C                               ; CODE XREF: sub_46160+2C4↑j
.text:000000000004643C                 LDR             X8, [X9]
.text:0000000000046440                 LDR             X9, [X19,#0x20]
.text:0000000000046444                 ADD             X8, X8, X9,LSL#4
.text:0000000000046448                 STR             X20, [X8]
.text:000000000004644C                 LDRH            W9, [X19,#0x28]
.text:0000000000046450                 ORR             W9, W9, #0x4000
.text:0000000000046454                 STRH            W9, [X8,#8]
.text:0000000000046458 loc_46458                               ; CODE XREF: sub_46160+2A8↑j
.text:0000000000046458                                         ; sub_46160+2BC↑j
.text:0000000000046458                 LDR             X8, [SP,#0x240+var_1E8]
.text:000000000004645C                 MOV             X2, X24
.text:0000000000046460                 STR             X8, [SP,#0x240+var_218]
.text:0000000000046464                 LDP             X0, X1, [X19,#8]
.text:0000000000046468                 STP             X21, X24, [SP,#0x240+var_1C0]
.text:000000000004646C                 BL              .EAS_HWFileSeek
.text:0000000000046470                 CBZ             X0, loc_46488
.text:0000000000046474 loc_46474                               ; CODE XREF: sub_46160+354↓j
.text:0000000000046474                                         ; sub_46160:loc_46504↓j ...
.text:0000000000046474                 CBNZ            X0, loc_4622C
.text:0000000000046478 loc_46478                               ; CODE XREF: sub_46160+838↓j
.text:0000000000046478                                         ; sub_46160+874↓j
.text:0000000000046478                 LDR             X8, [X19,#0x20]
.text:000000000004647C                 ADD             X8, X8, #1
.text:0000000000046480                 STR             X8, [X19,#0x20]
.text:0000000000046484                 B               loc_4622C
.text:0000000000046488 ; ---------------------------------------------------------------------------
.text:0000000000046488 loc_46488                               ; CODE XREF: sub_46160+310↑j
.text:0000000000046488                 CMP             X21, #1
.text:000000000004648C                 B.LT            loc_46990
.text:0000000000046490                 MOV             W20, WZR
.text:0000000000046494                 STR             X25, [SP,#0x240+var_238]
.text:0000000000046498                 ADD             X8, X21, X24
.text:000000000004649C                 STR             X8, [SP,#0x240+var_220]
.text:00000000000464A0 loc_464A0                               ; CODE XREF: sub_46160+3B8↓j
.text:00000000000464A0                 ADD             X1, SP, #0x240+var_1B8
.text:00000000000464A4                 ADD             X2, SP, #0x240+var_1C8
.text:00000000000464A8                 ADD             X3, SP, #0x240+var_1C0
.text:00000000000464AC                 MOV             X0, X19
.text:00000000000464B0                 BL              sub_45860
.text:00000000000464B4                 CBNZ            X0, loc_46474
.text:00000000000464B8                 LDR             X8, [SP,#0x240+var_1C8]
.text:00000000000464BC                 MOV             W9, #0x72676E32
.text:00000000000464C4                 CMP             X8, X9
.text:00000000000464C8                 B.EQ            loc_464DC
.text:00000000000464CC                 MOV             W9, #0x72676E20
.text:00000000000464D4                 CMP             X8, X9
.text:00000000000464D8                 B.NE            loc_4650C
.text:00000000000464DC loc_464DC                               ; CODE XREF: sub_46160+368↑j
.text:00000000000464DC                 LDR             X8, [SP,#0x240+var_218]
.text:00000000000464E0                 CMP             X8, W20,UXTH
.text:00000000000464E4                 B.EQ            loc_46990
.text:00000000000464E8                 LDR             X22, [SP,#0x240+var_1C0]
.text:00000000000464EC                 ADD             X23, X24, #0xC
.text:00000000000464F0                 LDP             X0, X1, [X19,#8]
.text:00000000000464F4                 MOV             X2, X23
.text:00000000000464F8                 STP             X22, X23, [SP,#0x240+var_178]
.text:00000000000464FC                 BL              .EAS_HWFileSeek
.text:0000000000046500                 CBZ             X0, loc_46520
.text:0000000000046504 loc_46504                               ; CODE XREF: sub_46160+400↓j
.text:0000000000046504                                         ; sub_46160+4A0↓j ...
.text:0000000000046504                 CBNZ            X0, loc_46474
.text:0000000000046508 loc_46508                               ; CODE XREF: sub_46160+6D4↓j
.text:0000000000046508                                         ; sub_46160+6E0↓j ...
.text:0000000000046508                 ADD             W20, W20, #1
.text:000000000004650C loc_4650C                               ; CODE XREF: sub_46160+378↑j
.text:000000000004650C                 LDR             X24, [SP,#0x240+var_1B8]
.text:0000000000046510                 LDR             X8, [SP,#0x240+var_220]
.text:0000000000046514                 CMP             X24, X8
.text:0000000000046518                 B.LT            loc_464A0
.text:000000000004651C                 B               loc_4699C
.text:0000000000046520 ; ---------------------------------------------------------------------------
.text:0000000000046520 loc_46520                               ; CODE XREF: sub_46160+3A0↑j
.text:0000000000046520                 CMP             X22, #1
.text:0000000000046524                 B.LT            loc_46830
.text:0000000000046528                 STP             XZR, XZR, [SP,#0x240+var_230]
.text:000000000004652C                 MOV             X21, XZR
.text:0000000000046530                 LDRH            W8, [X19,#0x28]
.text:0000000000046534                 MOV             X26, XZR
.text:0000000000046538                 MOV             X27, XZR
.text:000000000004653C                 MOV             X28, XZR
.text:0000000000046540                 MOV             X24, XZR
.text:0000000000046544                 ADD             X25, X22, X23
.text:0000000000046548                 STR             X8, [SP,#0x240+var_240]
.text:000000000004654C loc_4654C                               ; CODE XREF: sub_46160+4D4↓j
.text:000000000004654C                 ADD             X1, SP, #0x240+var_170
.text:0000000000046550                 ADD             X2, SP, #0x240+var_180
.text:0000000000046554                 ADD             X3, SP, #0x240+var_178
.text:0000000000046558                 MOV             X0, X19
.text:000000000004655C                 BL              sub_45860
.text:0000000000046560                 CBNZ            X0, loc_46504
.text:0000000000046564                 LDR             X8, [SP,#0x240+var_180]
.text:0000000000046568                 MOV             W9, #0x72676E67
.text:0000000000046570                 CMP             X8, X9
.text:0000000000046574                 B.GT            loc_465B4
.text:0000000000046578                 MOV             W9, #0x63646C20
.text:0000000000046580                 CMP             X8, X9
.text:0000000000046584                 B.EQ            loc_465F0
.text:0000000000046588                 MOV             W9, #0x6C617232
.text:0000000000046590                 CMP             X8, X9
.text:0000000000046594                 B.EQ            loc_46610
.text:0000000000046598                 MOV             W9, #0x6C617274
.text:00000000000465A0                 CMP             X8, X9
.text:00000000000465A4                 B.NE            loc_4662C
.text:00000000000465A8                 LDR             X28, [SP,#0x240+var_178]
.text:00000000000465AC                 ADD             X24, X23, #0xC
.text:00000000000465B0                 B               loc_4662C
.text:00000000000465B4 ; ---------------------------------------------------------------------------
.text:00000000000465B4 loc_465B4                               ; CODE XREF: sub_46160+414↑j
.text:00000000000465B4                 MOV             W9, #0x72676E68
.text:00000000000465BC                 CMP             X8, X9
.text:00000000000465C0                 B.EQ            loc_4661C
.text:00000000000465C4                 MOV             W9, #0x776C6E6B
.text:00000000000465CC                 CMP             X8, X9
.text:00000000000465D0                 B.EQ            loc_46628
.text:00000000000465D4                 MOV             W9, #0x77736D70
.text:00000000000465DC                 CMP             X8, X9
.text:00000000000465E0                 B.NE            loc_4662C
.text:00000000000465E4                 ADD             X8, X23, #8
.text:00000000000465E8                 STR             X8, [SP,#0x240+var_230]
.text:00000000000465EC                 B               loc_4662C
.text:00000000000465F0 ; ---------------------------------------------------------------------------
.text:00000000000465F0 loc_465F0                               ; CODE XREF: sub_46160+424↑j
.text:00000000000465F0                 LDR             X1, [SP,#0x240+var_178]
.text:00000000000465F4                 ADD             X2, SP, #0x240+var_180
.text:00000000000465F8                 MOV             X0, X19
.text:00000000000465FC                 BL              sub_45948
.text:0000000000046600                 CBNZ            X0, loc_46504
.text:0000000000046604                 LDR             X8, [SP,#0x240+var_180]
.text:0000000000046608                 CBNZ            X8, loc_4662C
.text:000000000004660C                 B               loc_4683C
.text:0000000000046610 ; ---------------------------------------------------------------------------
.text:0000000000046610 loc_46610                               ; CODE XREF: sub_46160+434↑j
.text:0000000000046610                 LDR             X26, [SP,#0x240+var_178]
.text:0000000000046614                 ADD             X27, X23, #0xC
.text:0000000000046618                 B               loc_4662C
.text:000000000004661C ; ---------------------------------------------------------------------------
.text:000000000004661C loc_4661C                               ; CODE XREF: sub_46160+460↑j
.text:000000000004661C                 ADD             X8, X23, #8
.text:0000000000046620                 STR             X8, [SP,#0x240+var_228]
.text:0000000000046624                 B               loc_4662C
.text:0000000000046628 ; ---------------------------------------------------------------------------
.text:0000000000046628 loc_46628                               ; CODE XREF: sub_46160+470↑j
.text:0000000000046628                 ADD             X21, X23, #8
.text:000000000004662C loc_4662C                               ; CODE XREF: sub_46160+444↑j
.text:000000000004662C                                         ; sub_46160+450↑j ...
.text:000000000004662C                 LDR             X23, [SP,#0x240+var_170]
.text:0000000000046630                 CMP             X23, X25
.text:0000000000046634                 B.LT            loc_4654C
.text:0000000000046638                 LDR             X8, [SP,#0x240+var_228]
.text:000000000004663C                 MOV             X0, #0xFFFFFFFFFFFFFFF1
.text:0000000000046640                 CBZ             X8, loc_46504
.text:0000000000046644                 LDR             X25, [SP,#0x240+var_238]
.text:0000000000046648                 CBZ             X21, loc_46504
.text:000000000004664C                 LDP             X0, X1, [X19,#8]
.text:0000000000046650                 ADD             X2, X21, #8
.text:0000000000046654                 BL              .EAS_HWFileSeek
.text:0000000000046658                 CBNZ            X0, loc_46504
.text:000000000004665C                 LDP             X0, X1, [X19,#8]
.text:0000000000046660                 ADD             X2, SP, #0x240+var_188
.text:0000000000046664                 MOV             W3, WZR
.text:0000000000046668                 BL              .EAS_HWGetDWord
.text:000000000004666C                 CBNZ            X0, loc_46504
.text:0000000000046670                 LDR             X21, [SP,#0x240+var_188]
.text:0000000000046674                 MOV             X0, #0xFFFFFFFFFFFFFFFF
.text:0000000000046678                 LDR             X8, [X19,#0x38]
.text:000000000004667C                 CMP             X21, X8
.text:0000000000046680                 B.CS            loc_46504
.text:0000000000046684                 ADRP            X1, #unk_56B8@PAGE
.text:0000000000046688                 LDR             X23, [X19,#0x18]
.text:000000000004668C                 SUB             X0, X29, #-var_E8
.text:0000000000046690                 ADD             X1, X1, #unk_56B8@PAGEOFF
.text:0000000000046694                 MOV             W2, #0x64 ; 'd'
.text:0000000000046698                 BL              .EAS_HWMemCpy
.text:000000000004669C                 CBZ             X24, loc_466B8
.text:00000000000466A0                 SUB             X3, X29, #-var_E8
.text:00000000000466A4                 MOV             X0, X19
.text:00000000000466A8                 MOV             X1, X24
.text:00000000000466AC                 MOV             X2, X28
.text:00000000000466B0                 BL              sub_470E0
.text:00000000000466B4                 CBNZ            X0, loc_46504
.text:00000000000466B8 loc_466B8                               ; CODE XREF: sub_46160+53C↑j
.text:00000000000466B8                 CBZ             X27, loc_466D4
.text:00000000000466BC                 SUB             X3, X29, #-var_E8
.text:00000000000466C0                 MOV             X0, X19
.text:00000000000466C4                 MOV             X1, X27
.text:00000000000466C8                 MOV             X2, X26
.text:00000000000466CC                 BL              sub_470E0
.text:00000000000466D0                 CBNZ            X0, loc_46504
.text:00000000000466D4 loc_466D4                               ; CODE XREF: sub_46160:loc_466B8↑j
.text:00000000000466D4                 LDR             X8, [X19]
.text:00000000000466D8                 CBZ             X8, loc_46958
.text:00000000000466DC                 LDURH           W9, [X29,#var_E8]
.text:00000000000466E0                 MOV             W24, W25
.text:00000000000466E4                 CMP             W9, #1
.text:00000000000466E8                 B.NE            loc_46704
.text:00000000000466EC                 LDRH            W2, [X19,#0x30]
.text:00000000000466F0                 SUB             X1, X29, #-var_E8
.text:00000000000466F4                 MOV             X0, X19
.text:00000000000466F8                 BL              sub_46A20
.text:00000000000466FC                 LDRH            W24, [X19,#0x30]
.text:0000000000046700                 LDR             X8, [X19]
.text:0000000000046704 loc_46704                               ; CODE XREF: sub_46160+588↑j
.text:0000000000046704                 LDP             X0, X1, [X19,#8]
.text:0000000000046708                 LDR             X2, [SP,#0x240+var_228]
.text:000000000004670C                 LDR             X25, [X8,#8]
.text:0000000000046710                 BL              .EAS_HWFileSeek
.text:0000000000046714                 CBNZ            X0, loc_46854
.text:0000000000046718                 LDP             X0, X1, [X19,#8]
.text:000000000004671C                 ADD             X2, SP, #0x240+var_1B0
.text:0000000000046720                 MOV             W3, WZR
.text:0000000000046724                 BL              .EAS_HWGetWord
.text:0000000000046728                 CBNZ            X0, loc_46854
.text:000000000004672C                 LDP             X0, X1, [X19,#8]
.text:0000000000046730                 ADD             X2, SP, #0x240+var_154
.text:0000000000046734                 MOV             W3, WZR
.text:0000000000046738                 BL              .EAS_HWGetWord
.text:000000000004673C                 CBNZ            X0, loc_46854
.text:0000000000046740                 LDRH            W8, [SP,#0x240+var_1B0]
.text:0000000000046744                 CMP             W8, #0x80
.text:0000000000046748                 B.CC            loc_46754
.text:000000000004674C                 MOV             W8, #0x7F
.text:0000000000046750                 STRH            W8, [SP,#0x240+var_1B0]
.text:0000000000046754 loc_46754                               ; CODE XREF: sub_46160+5E8↑j
.text:0000000000046754                 LDRH            W8, [SP,#0x240+var_154]
.text:0000000000046758                 CMP             W8, #0x80
.text:000000000004675C                 B.CC            loc_46768
.text:0000000000046760                 MOV             W8, #0x7F
.text:0000000000046764                 STRH            W8, [SP,#0x240+var_154]
.text:0000000000046768 loc_46768                               ; CODE XREF: sub_46160+5FC↑j
.text:0000000000046768                 LDP             X0, X1, [X19,#8]
.text:000000000004676C                 ADD             X2, SP, #0x240+var_158
.text:0000000000046770                 MOV             W3, WZR
.text:0000000000046774                 BL              .EAS_HWGetWord
.text:0000000000046778                 CBNZ            X0, loc_46854
.text:000000000004677C                 LDP             X0, X1, [X19,#8]
.text:0000000000046780                 ADD             X2, SP, #0x240+var_15C
.text:0000000000046784                 MOV             W3, WZR
.text:0000000000046788                 BL              .EAS_HWGetWord
.text:000000000004678C                 CBNZ            X0, loc_46854
.text:0000000000046790                 LDRH            W8, [SP,#0x240+var_158]
.text:0000000000046794                 CMP             W8, #0x80
.text:0000000000046798                 B.CC            loc_467A4
.text:000000000004679C                 MOV             W8, #0x7F
.text:00000000000467A0                 STRH            W8, [SP,#0x240+var_158]
.text:00000000000467A4 loc_467A4                               ; CODE XREF: sub_46160+638↑j
.text:00000000000467A4                 LDRH            W8, [SP,#0x240+var_15C]
.text:00000000000467A8                 CMP             W8, #0x80
.text:00000000000467AC                 B.CC            loc_467B8
.text:00000000000467B0                 MOV             W8, #0x7F
.text:00000000000467B4                 STRH            W8, [SP,#0x240+var_15C]
.text:00000000000467B8 loc_467B8                               ; CODE XREF: sub_46160+64C↑j
.text:00000000000467B8                 LDP             X0, X1, [X19,#8]
.text:00000000000467BC                 ADD             X2, SP, #0x240+var_160
.text:00000000000467C0                 MOV             W3, WZR
.text:00000000000467C4                 BL              .EAS_HWGetWord
.text:00000000000467C8                 CBNZ            X0, loc_46854
.text:00000000000467CC                 LDP             X0, X1, [X19,#8]
.text:00000000000467D0                 ADD             X2, SP, #0x240+var_164
.text:00000000000467D4                 MOV             W3, WZR
.text:00000000000467D8                 BL              .EAS_HWGetWord
.text:00000000000467DC                 CBNZ            X0, loc_46854
.text:00000000000467E0                 LDR             X8, [SP,#0x240+var_240]
.text:00000000000467E4                 MOV             W10, #0x28 ; '('
.text:00000000000467E8                 LDRB            W9, [SP,#0x240+var_1B0]
.text:00000000000467EC                 AND             X8, X8, #0x3FFF
.text:00000000000467F0                 MADD            X8, X8, X10, X25
.text:00000000000467F4                 STRB            W9, [X8,#2]
.text:00000000000467F8                 LDRB            W9, [SP,#0x240+var_154]
.text:00000000000467FC                 STRB            W9, [X8,#3]
.text:0000000000046800                 LDRH            W9, [SP,#0x240+var_164]
.text:0000000000046804                 LSL             W9, W9, #8
.text:0000000000046808                 STRH            W9, [X8]
.text:000000000004680C                 LDRB            W10, [SP,#0x240+var_158]
.text:0000000000046810                 STRB            W10, [X8,#0x20]
.text:0000000000046814                 LDRB            W10, [SP,#0x240+var_15C]
.text:0000000000046818                 STRB            W10, [X8,#0x21]
.text:000000000004681C                 LDRB            W10, [SP,#0x240+var_160]
.text:0000000000046820                 TBNZ            W10, #0, loc_46848
.text:0000000000046824                 MOV             X0, XZR
.text:0000000000046828                 CBNZ            X0, loc_46504
.text:000000000004682C                 B               loc_46858
.text:0000000000046830 ; ---------------------------------------------------------------------------
.text:0000000000046830 loc_46830                               ; CODE XREF: sub_46160+3C4↑j
.text:0000000000046830                 MOV             X0, #0xFFFFFFFFFFFFFFF1
.text:0000000000046834                 CBZ             X0, loc_46508
.text:0000000000046838                 B               loc_46474
.text:000000000004683C ; ---------------------------------------------------------------------------
.text:000000000004683C loc_4683C                               ; CODE XREF: sub_46160+4AC↑j
.text:000000000004683C                 MOV             X0, XZR
.text:0000000000046840                 CBZ             X0, loc_46508
.text:0000000000046844                 B               loc_46474
.text:0000000000046848 ; ---------------------------------------------------------------------------
.text:0000000000046848 loc_46848                               ; CODE XREF: sub_46160+6C0↑j
.text:0000000000046848                 ORR             W9, W9, #0x40
.text:000000000004684C                 MOV             X0, XZR
.text:0000000000046850                 STRH            W9, [X8]
.text:0000000000046854 loc_46854                               ; CODE XREF: sub_46160+5B4↑j
.text:0000000000046854                                         ; sub_46160+5C8↑j ...
.text:0000000000046854                 CBNZ            X0, loc_46504
.text:0000000000046858 loc_46858                               ; CODE XREF: sub_46160+6CC↑j
.text:0000000000046858                 MOV             W8, #0x28 ; '('
.text:000000000004685C                 MADD            X23, X21, X8, X23
.text:0000000000046860                 LDR             X8, [SP,#0x240+var_230]
.text:0000000000046864                 CBZ             X8, loc_46890
.text:0000000000046868                 ADD             X0, SP, #0x240+var_1B0
.text:000000000004686C                 MOV             X1, X23
.text:0000000000046870                 MOV             W2, #0x28 ; '('
.text:0000000000046874                 BL              .EAS_HWMemCpy
.text:0000000000046878                 LDR             X1, [SP,#0x240+var_230]
.text:000000000004687C                 ADD             X2, SP, #0x240+var_1B0
.text:0000000000046880                 MOV             X0, X19
.text:0000000000046884                 BL              sub_46F30
.text:0000000000046888                 CBNZ            X0, loc_46504
.text:000000000004688C                 ADD             X23, SP, #0x240+var_1B0
.text:0000000000046890 loc_46890                               ; CODE XREF: sub_46160+704↑j
.text:0000000000046890                 LDR             X8, [X19]
.text:0000000000046894                 MOV             W10, #0xFFFFFF9C
.text:0000000000046898                 LDR             X9, [SP,#0x240+var_240]
.text:000000000004689C                 LDR             X21, [X8,#8]
.text:00000000000468A0                 MOV             W8, #0x28 ; '('
.text:00000000000468A4                 MADD            X22, X9, X8, X21
.text:00000000000468A8                 LDR             X8, [SP,#0x240+var_188]
.text:00000000000468AC                 STRH            W24, [X22,#0x1A]
.text:00000000000468B0                 STRH            W8, [X22,#0x18]
.text:00000000000468B4                 LDR             X8, [X23]
.text:00000000000468B8                 LSR             X8, X8, #0x10
.text:00000000000468BC                 STRH            W8, [X22,#6]
.text:00000000000468C0                 LDR             X8, [X23,#8]
.text:00000000000468C4                 STR             X8, [X22,#8]
.text:00000000000468C8                 LDP             X8, X9, [X23,#8]
.text:00000000000468CC                 ADD             X8, X9, X8
.text:00000000000468D0                 STR             X8, [X22,#0x10]
.text:00000000000468D4                 LDR             D0, [X23,#0x18]
.text:00000000000468D8                 LDRH            W8, [X23,#0x22]
.text:00000000000468DC                 LDRB            W9, [X23,#0x24]
.text:00000000000468E0                 UCVTF           D0, D0
.text:00000000000468E4                 MADD            W24, W9, W10, W8
.text:00000000000468E8                 FDIV            D0, D0, D8 ; x
.text:00000000000468EC                 BL              .log10
.text:00000000000468F0                 FMUL            D0, D0, D9
.text:00000000000468F4                 FDIV            D0, D0, D10
.text:00000000000468F8                 FCVTZS          W8, D0
.text:00000000000468FC                 ADD             W8, W24, W8
.text:0000000000046900                 STRH            W8, [X22,#4]
.text:0000000000046904                 LDR             X8, [X23,#0x10]
.text:0000000000046908                 CBZ             X8, loc_46958
.text:000000000004690C                 LDR             X9, [SP,#0x240+var_240]
.text:0000000000046910                 MOV             W8, #0x28 ; '('
.text:0000000000046914                 MUL             X8, X9, X8
.text:0000000000046918                 LDRH            W9, [X21,X8]
.text:000000000004691C                 ORR             W9, W9, #1
.text:0000000000046920                 STRH            W9, [X21,X8]
.text:0000000000046924                 LDR             X8, [X23,#0x10]
.text:0000000000046928                 CBZ             X8, loc_46958
.text:000000000004692C                 LDR             X9, [X19]
.text:0000000000046930                 LDR             X10, [SP,#0x240+var_188]
.text:0000000000046934                 LDR             X9, [X9,#0x18]
.text:0000000000046938                 LDR             X9, [X9,X10,LSL#3]
.text:000000000004693C                 CBZ             X9, loc_46984
.text:0000000000046940                 LDR             X10, [X23,#8]
.text:0000000000046944                 MOV             X0, #0xFFFFFFFFFFFFFFFF
.text:0000000000046948                 SUB             X9, X9, #1
.text:000000000004694C                 ADD             X8, X10, X8
.text:0000000000046950                 CMP             X8, X9
.text:0000000000046954                 B.HI            loc_46504
.text:0000000000046958 loc_46958                               ; CODE XREF: sub_46160+578↑j
.text:0000000000046958                                         ; sub_46160+7A8↑j ...
.text:0000000000046958                 LDURH           W8, [X29,#var_E8]
.text:000000000004695C                 CBZ             W8, loc_4696C
.text:0000000000046960                 LDR             X8, [X19,#0x30]
.text:0000000000046964                 ADD             X8, X8, #1
.text:0000000000046968                 STR             X8, [X19,#0x30]
.text:000000000004696C loc_4696C                               ; CODE XREF: sub_46160+7FC↑j
.text:000000000004696C                 LDR             X8, [X19,#0x28]
.text:0000000000046970                 MOV             X0, XZR
.text:0000000000046974                 ADD             X8, X8, #1
.text:0000000000046978                 STR             X8, [X19,#0x28]
.text:000000000004697C                 CBZ             X0, loc_46508
.text:0000000000046980                 B               loc_46474
.text:0000000000046984 ; ---------------------------------------------------------------------------
.text:0000000000046984 loc_46984                               ; CODE XREF: sub_46160+7DC↑j
.text:0000000000046984                 MOV             X0, #0xFFFFFFFFFFFFFFFF
.text:0000000000046988                 CBZ             X0, loc_46508
.text:000000000004698C                 B               loc_46474
.text:0000000000046990 ; ---------------------------------------------------------------------------
.text:0000000000046990 loc_46990                               ; CODE XREF: sub_46160+32C↑j
.text:0000000000046990                                         ; sub_46160+384↑j
.text:0000000000046990                 MOV             X0, XZR
.text:0000000000046994                 CBNZ            X0, loc_4622C
.text:0000000000046998                 B               loc_46478
.text:000000000004699C ; ---------------------------------------------------------------------------
.text:000000000004699C loc_4699C                               ; CODE XREF: sub_46160+3BC↑j
.text:000000000004699C                 MOV             X0, XZR
.text:00000000000469A0                 TST             W20, #0xFFFF
.text:00000000000469A4                 B.EQ            loc_46474
.text:00000000000469A8                 LDR             X8, [X19]
.text:00000000000469AC                 CBZ             X8, loc_46474
.text:00000000000469B0                 LDR             X8, [X8,#8]
.text:00000000000469B4                 MOV             W10, #0x28 ; '('
.text:00000000000469B8                 LDR             X9, [X19,#0x28]
.text:00000000000469BC                 MOV             X0, XZR
.text:00000000000469C0                 MADD            X8, X9, X10, X8
.text:00000000000469C4                 LDURH           W9, [X8,#-0x28]
.text:00000000000469C8                 ORR             W9, W9, #0x8000
.text:00000000000469CC                 STURH           W9, [X8,#-0x28]
.text:00000000000469D0                 CBNZ            X0, loc_4622C
.text:00000000000469D4                 B               loc_46478
.text:00000000000469D8 ; ---------------------------------------------------------------------------
.text:00000000000469D8 loc_469D8                               ; CODE XREF: sub_46160+60↑j
.text:00000000000469D8                                         ; sub_46160+E8↑j
.text:00000000000469D8                 MOV             X0, XZR
.text:00000000000469DC loc_469DC                               ; CODE XREF: sub_46160+58↑j
.text:00000000000469DC                                         ; sub_46160+A0↑j ...
.text:00000000000469DC                 LDR             X8, [SP,#0x240+var_208]
.text:00000000000469E0                 LDR             X8, [X8,#0x28]
.text:00000000000469E4                 LDUR            X9, [X29,#var_80]
.text:00000000000469E8                 CMP             X8, X9
.text:00000000000469EC                 B.NE            loc_46A18
.text:00000000000469F0                 ADD             SP, SP, #0x1D0
.text:00000000000469F4                 LDP             X29, X30, [SP,#0x70+var_s0]
.text:00000000000469F8                 LDP             X20, X19, [SP,#0x70+var_10]
.text:00000000000469FC                 LDP             X22, X21, [SP,#0x70+var_20]
.text:0000000000046A00                 LDP             X24, X23, [SP,#0x70+var_30]
.text:0000000000046A04                 LDP             X26, X25, [SP,#0x70+var_40]
.text:0000000000046A08                 LDP             X28, X27, [SP,#0x70+var_50]
.text:0000000000046A0C                 LDP             D9, D8, [SP,#0x70+var_60]
.text:0000000000046A10                 LDR             D10, [SP+0x70+var_70],#0x80
.text:0000000000046A14                 RET
.text:0000000000046A18 ; ---------------------------------------------------------------------------
.text:0000000000046A18 loc_46A18                               ; CODE XREF: sub_46160+88C↑j
.text:0000000000046A18                 BL              .__stack_chk_fail
.text:0000000000046A18 ; } // starts at 46160
.text:0000000000046A18 ; End of function sub_46160
.text:0000000000046A18 ; ---------------------------------------------------------------------------
.text:0000000000046A1C                 ALIGN 0x20
.text:0000000000046A20 ; =============== S U B R O U T I N E =======================================
.text:0000000000046A20 ; Attributes: bp-based frame
.text:0000000000046A20 sub_46A20                               ; CODE XREF: DLSParser+2C8↑p
.text:0000000000046A20                                         ; sub_46160+2D4↑p ...
.text:0000000000046A20 var_40          = -0x40
.text:0000000000046A20 var_30          = -0x30
.text:0000000000046A20 var_20          = -0x20
.text:0000000000046A20 var_10          = -0x10
.text:0000000000046A20 var_s0          =  0
.text:0000000000046A20 ; __unwind {
.text:0000000000046A20                 STR             X25, [SP,#-0x10+var_40]!
.text:0000000000046A24                 STP             X24, X23, [SP,#0x40+var_30]
.text:0000000000046A28                 STP             X22, X21, [SP,#0x40+var_20]
.text:0000000000046A2C                 STP             X20, X19, [SP,#0x40+var_10]
.text:0000000000046A30                 STP             X29, X30, [SP,#0x40+var_s0]
.text:0000000000046A34                 ADD             X29, SP, #0x40
.text:0000000000046A38                 LDRSH           X8, [X1,#2]
.text:0000000000046A3C                 MOV             W9, #0x60D
.text:0000000000046A40                 LDR             X10, [X0]
.text:0000000000046A44                 MOV             X23, #0xFFFFFFFFFFFFE238
.text:0000000000046A48                 MOV             X24, #0xFFFFFFFFFFFFEB63
.text:0000000000046A4C                 MOV             W22, #0x4D94
.text:0000000000046A50                 CMP             X8, #0x60D
.text:0000000000046A54                 CSEL            X8, X8, X9, LT
.text:0000000000046A58                 LDR             X21, [X10,#0x10]
.text:0000000000046A5C                 CMP             X8, X23
.text:0000000000046A60                 CSEL            X8, X8, X23, GT
.text:0000000000046A64                 ADD             X0, X8, X24
.text:0000000000046A68                 MOV             X19, X1
.text:0000000000046A6C                 MOVK            W22, #0xEDB,LSL#16
.text:0000000000046A70                 AND             X20, X2, #0xFFFF
.text:0000000000046A74                 BL              .EAS_Calculate2toX
.text:0000000000046A78                 MOV             W8, #0x58 ; 'X'
.text:0000000000046A7C                 MUL             X8, X20, X8
.text:0000000000046A80                 STRH            W0, [X21,X8]
.text:0000000000046A84                 LDRSH           W8, [X19,#4]
.text:0000000000046A88                 CMN             W8, #8,LSL#12
.text:0000000000046A8C                 B.NE            loc_46A98
.text:0000000000046A90                 MOV             W8, WZR
.text:0000000000046A94                 B               loc_46AC0
.text:0000000000046A98 ; ---------------------------------------------------------------------------
.text:0000000000046A98 loc_46A98                               ; CODE XREF: sub_46A20+6C↑j
.text:0000000000046A98                 MOV             W9, #0x6D3A
.text:0000000000046A9C                 MADD            W8, W8, W9, W22
.text:0000000000046AA0                 MOV             W9, #0xFFFFC400
.text:0000000000046AA4                 ADD             W8, W9, W8,ASR#15
.text:0000000000046AA8                 SXTW            X0, W8
.text:0000000000046AAC                 BL              .EAS_LogToLinear16
.text:0000000000046AB0                 MOV             W8, #0x7FFF
.text:0000000000046AB4                 CMP             W8, W0,UXTH
.text:0000000000046AB8                 CSEL            W8, W0, W8, HI
.text:0000000000046ABC                 NEG             W8, W8
.text:0000000000046AC0 loc_46AC0                               ; CODE XREF: sub_46A20+74↑j
.text:0000000000046AC0                 MOV             W9, #0x58 ; 'X'
.text:0000000000046AC4                 MADD            X25, X20, X9, X21
.text:0000000000046AC8                 MOV             W9, #0x60D
.text:0000000000046ACC                 STRH            W8, [X25,#2]
.text:0000000000046AD0                 LDRSH           X8, [X19,#6]
.text:0000000000046AD4                 CMP             X8, #0x60D
.text:0000000000046AD8                 CSEL            X8, X8, X9, LT
.text:0000000000046ADC                 CMP             X8, X23
.text:0000000000046AE0                 CSEL            X8, X8, X23, GT
.text:0000000000046AE4                 ADD             X0, X8, X24
.text:0000000000046AE8                 BL              .EAS_Calculate2toX
.text:0000000000046AEC                 STRH            W0, [X25,#4]
.text:0000000000046AF0                 LDRSH           W8, [X19,#8]
.text:0000000000046AF4                 CMN             W8, #8,LSL#12
.text:0000000000046AF8                 B.NE            loc_46B04
.text:0000000000046AFC                 MOV             W8, WZR
.text:0000000000046B00                 B               loc_46B2C
.text:0000000000046B04 ; ---------------------------------------------------------------------------
.text:0000000000046B04 loc_46B04                               ; CODE XREF: sub_46A20+D8↑j
.text:0000000000046B04                 MOV             W9, #0x6D3A
.text:0000000000046B08                 MADD            W8, W8, W9, W22
.text:0000000000046B0C                 MOV             W9, #0xFFFFC400
.text:0000000000046B10                 ADD             W8, W9, W8,ASR#15
.text:0000000000046B14                 SXTW            X0, W8
.text:0000000000046B18                 BL              .EAS_LogToLinear16
.text:0000000000046B1C                 MOV             W8, #0x7FFF
.text:0000000000046B20                 CMP             W8, W0,UXTH
.text:0000000000046B24                 CSEL            W8, W0, W8, HI
.text:0000000000046B28                 NEG             W8, W8
.text:0000000000046B2C loc_46B2C                               ; CODE XREF: sub_46A20+E0↑j
.text:0000000000046B2C                 MOV             W9, #0x58 ; 'X'
.text:0000000000046B30                 MADD            X9, X20, X9, X21
.text:0000000000046B34                 STRH            W8, [X9,#6]
.text:0000000000046B38                 LDRSH           W8, [X19,#0xA]
.text:0000000000046B3C                 CMN             W8, #8,LSL#12
.text:0000000000046B40                 B.NE            loc_46B4C
.text:0000000000046B44                 MOV             W8, WZR
.text:0000000000046B48                 B               loc_46B70
.text:0000000000046B4C ; ---------------------------------------------------------------------------
.text:0000000000046B4C loc_46B4C                               ; CODE XREF: sub_46A20+120↑j
.text:0000000000046B4C                 MOV             W9, #0x6D3A
.text:0000000000046B50                 MADD            W8, W8, W9, W22
.text:0000000000046B54                 MOV             W9, #0xFFFFC400
.text:0000000000046B58                 ADD             W8, W9, W8,ASR#15
.text:0000000000046B5C                 SXTW            X0, W8
.text:0000000000046B60                 BL              .EAS_LogToLinear16
.text:0000000000046B64                 MOV             W8, #0x7FFF
.text:0000000000046B68                 CMP             W8, W0,UXTH
.text:0000000000046B6C                 CSEL            W8, W0, W8, HI
.text:0000000000046B70 loc_46B70                               ; CODE XREF: sub_46A20+128↑j
.text:0000000000046B70                 MOV             W9, #0x58 ; 'X'
.text:0000000000046B74                 MOV             W23, #0x622D
.text:0000000000046B78                 MADD            X9, X20, X9, X21
.text:0000000000046B7C                 MOVK            W23, #0x10,LSL#16
.text:0000000000046B80                 STRH            W8, [X9,#8]
.text:0000000000046B84                 LDRH            W8, [X19,#0xC]
.text:0000000000046B88                 STRH            W8, [X9,#0xA]
.text:0000000000046B8C                 LDRH            W8, [X19,#0xE]
.text:0000000000046B90                 STRH            W8, [X9,#0xC]
.text:0000000000046B94                 LDRH            W8, [X19,#0x10]
.text:0000000000046B98                 STRH            W8, [X9,#0xE]
.text:0000000000046B9C                 LDRSH           X8, [X19,#0x12]
.text:0000000000046BA0                 CBZ             X8, loc_46BC0
.text:0000000000046BA4                 MUL             X8, X8, X23
.text:0000000000046BA8                 MOV             W9, #0x3FFFFFFF
.text:0000000000046BAC                 CMP             X8, X9
.text:0000000000046BB0                 B.LE            loc_46BBC
.text:0000000000046BB4                 MOV             W8, #0x7FFF
.text:0000000000046BB8                 B               loc_46BC0
.text:0000000000046BBC ; ---------------------------------------------------------------------------
.text:0000000000046BBC loc_46BBC                               ; CODE XREF: sub_46A20+190↑j
.text:0000000000046BBC                 LSR             X8, X8, #0xF
.text:0000000000046BC0 loc_46BC0                               ; CODE XREF: sub_46A20+180↑j
.text:0000000000046BC0                                         ; sub_46A20+198↑j
.text:0000000000046BC0                 MOV             W9, #0x58 ; 'X'
.text:0000000000046BC4                 MOV             W24, #0x7FFF
.text:0000000000046BC8                 MADD            X9, X20, X9, X21
.text:0000000000046BCC                 STRH            W8, [X9,#0x10]
.text:0000000000046BD0                 LDRSH           X8, [X19,#0x14]
.text:0000000000046BD4                 CMN             X8, #8,LSL#12
.text:0000000000046BD8                 B.EQ            loc_46BF0
.text:0000000000046BDC                 MOV             X9, #0xFFFFFFFFFFFFDD2E
.text:0000000000046BE0                 SUB             X0, X9, X8
.text:0000000000046BE4                 BL              .EAS_Calculate2toX
.text:0000000000046BE8                 CMP             X0, X24
.text:0000000000046BEC                 CSEL            W24, W0, W24, LT
.text:0000000000046BF0 loc_46BF0                               ; CODE XREF: sub_46A20+1B8↑j
.text:0000000000046BF0                 MOV             W8, #0x58 ; 'X'
.text:0000000000046BF4                 MADD            X8, X20, X8, X21
.text:0000000000046BF8                 STRH            W24, [X8,#0x12]
.text:0000000000046BFC                 MOV             W24, #0x7FFF
.text:0000000000046C00                 LDRH            W9, [X19,#0x18]
.text:0000000000046C04                 STRH            W9, [X8,#0x14]
.text:0000000000046C08                 LDRH            W9, [X19,#0x1A]
.text:0000000000046C0C                 STRH            W9, [X8,#0x16]
.text:0000000000046C10                 LDRH            W9, [X19,#0x1C]
.text:0000000000046C14                 STRH            W9, [X8,#0x18]
.text:0000000000046C18                 LDRSH           X8, [X19,#0x16]
.text:0000000000046C1C                 CMN             X8, #8,LSL#12
.text:0000000000046C20                 B.EQ            loc_46C38
.text:0000000000046C24                 MOV             X9, #0xFFFFFFFFFFFFDD2E
.text:0000000000046C28                 SUB             X0, X9, X8
.text:0000000000046C2C                 BL              .EAS_Calculate2toX
.text:0000000000046C30                 CMP             X0, X24
.text:0000000000046C34                 CSEL            W24, W0, W24, LT
.text:0000000000046C38 loc_46C38                               ; CODE XREF: sub_46A20+200↑j
.text:0000000000046C38                 MOV             W8, #0x58 ; 'X'
.text:0000000000046C3C                 MADD            X8, X20, X8, X21
.text:0000000000046C40                 STRH            W24, [X8,#0x2C]
.text:0000000000046C44                 LDRSH           W8, [X19,#0x1E]
.text:0000000000046C48                 CMN             W8, #8,LSL#12
.text:0000000000046C4C                 B.NE            loc_46C58
.text:0000000000046C50                 MOV             W8, WZR
.text:0000000000046C54                 B               loc_46C7C
.text:0000000000046C58 ; ---------------------------------------------------------------------------
.text:0000000000046C58 loc_46C58                               ; CODE XREF: sub_46A20+22C↑j
.text:0000000000046C58                 MOV             W9, #0x6D3A
.text:0000000000046C5C                 MADD            W8, W8, W9, W22
.text:0000000000046C60                 MOV             W9, #0xFFFFC400
.text:0000000000046C64                 ADD             W8, W9, W8,ASR#15
.text:0000000000046C68                 SXTW            X0, W8
.text:0000000000046C6C                 BL              .EAS_LogToLinear16
.text:0000000000046C70                 MOV             W8, #0x7FFF
.text:0000000000046C74                 CMP             W8, W0,UXTH
.text:0000000000046C78                 CSEL            W8, W0, W8, HI
.text:0000000000046C7C loc_46C7C                               ; CODE XREF: sub_46A20+234↑j
.text:0000000000046C7C                 MOV             W9, #0x58 ; 'X'
.text:0000000000046C80                 MADD            X9, X20, X9, X21
.text:0000000000046C84                 STRH            W8, [X9,#0x1A]
.text:0000000000046C88                 LDRH            W8, [X19,#0x20]
.text:0000000000046C8C                 STRH            W8, [X9,#0x1C]
.text:0000000000046C90                 LDRH            W8, [X19,#0x22]
.text:0000000000046C94                 STRH            W8, [X9,#0x1E]
.text:0000000000046C98                 LDRH            W8, [X19,#0x24]
.text:0000000000046C9C                 STRH            W8, [X9,#0x20]
.text:0000000000046CA0                 LDRSH           X8, [X19,#0x26]
.text:0000000000046CA4                 CBZ             X8, loc_46CC4
.text:0000000000046CA8                 MUL             X8, X8, X23
.text:0000000000046CAC                 MOV             W9, #0x3FFFFFFF
.text:0000000000046CB0                 CMP             X8, X9
.text:0000000000046CB4                 B.LE            loc_46CC0
.text:0000000000046CB8                 MOV             W8, #0x7FFF
.text:0000000000046CBC                 B               loc_46CC4
.text:0000000000046CC0 ; ---------------------------------------------------------------------------
.text:0000000000046CC0 loc_46CC0                               ; CODE XREF: sub_46A20+294↑j
.text:0000000000046CC0                 LSR             X8, X8, #0xF
.text:0000000000046CC4 loc_46CC4                               ; CODE XREF: sub_46A20+284↑j
.text:0000000000046CC4                                         ; sub_46A20+29C↑j
.text:0000000000046CC4                 MOV             W9, #0x58 ; 'X'
.text:0000000000046CC8                 MOV             W22, #0x7FFF
.text:0000000000046CCC                 MADD            X9, X20, X9, X21
.text:0000000000046CD0                 STRH            W8, [X9,#0x22]
.text:0000000000046CD4                 LDRSH           X8, [X19,#0x28]
.text:0000000000046CD8                 CMN             X8, #8,LSL#12
.text:0000000000046CDC                 B.EQ            loc_46CF4
.text:0000000000046CE0                 MOV             X9, #0xFFFFFFFFFFFFDD2E
.text:0000000000046CE4                 SUB             X0, X9, X8
.text:0000000000046CE8                 BL              .EAS_Calculate2toX
.text:0000000000046CEC                 CMP             X0, X22
.text:0000000000046CF0                 CSEL            W22, W0, W22, LT
.text:0000000000046CF4 loc_46CF4                               ; CODE XREF: sub_46A20+2BC↑j
.text:0000000000046CF4                 MOV             W8, #0x58 ; 'X'
.text:0000000000046CF8                 MADD            X8, X20, X8, X21
.text:0000000000046CFC                 STRH            W22, [X8,#0x24]
.text:0000000000046D00                 LDRH            W9, [X19,#0x2A]
.text:0000000000046D04                 STRH            W9, [X8,#0x26]
.text:0000000000046D08                 LDRH            W9, [X19,#0x2C]
.text:0000000000046D0C                 STRH            W9, [X8,#0x28]
.text:0000000000046D10                 LDRH            W9, [X19,#0x2E]
.text:0000000000046D14                 STRH            W9, [X8,#0x2A]
.text:0000000000046D18                 LDRH            W9, [X19,#0x30]
.text:0000000000046D1C                 STRH            W9, [X8,#0x2E]
.text:0000000000046D20                 LDRSH           X8, [X19,#0x32]
.text:0000000000046D24                 CMP             X8, #1
.text:0000000000046D28                 B.LT            loc_46D4C
.text:0000000000046D2C                 MOV             W9, #0x1111
.text:0000000000046D30                 MOV             X10, #0x4000
.text:0000000000046D34                 MADD            X8, X8, X9, X10
.text:0000000000046D38                 MOV             W9, #0x1E
.text:0000000000046D3C                 ASR             X8, X8, #0xF
.text:0000000000046D40                 CMP             X8, #0x1E
.text:0000000000046D44                 CSEL            W8, W8, W9, LT
.text:0000000000046D48                 B               loc_46D50
.text:0000000000046D4C ; ---------------------------------------------------------------------------
.text:0000000000046D4C loc_46D4C                               ; CODE XREF: sub_46A20+308↑j
.text:0000000000046D4C                 MOV             W8, WZR
.text:0000000000046D50 loc_46D50                               ; CODE XREF: sub_46A20+328↑j
.text:0000000000046D50                 MOV             W9, #0x58 ; 'X'
.text:0000000000046D54                 MOV             W11, #0x1021
.text:0000000000046D58                 MADD            X9, X20, X9, X21
.text:0000000000046D5C                 STRB            W8, [X9,#0x57]!
.text:0000000000046D60                 LDRH            W10, [X19,#0x34]
.text:0000000000046D64                 STURH           W10, [X9,#-0x27]
.text:0000000000046D68                 LDRH            W10, [X19,#0x36]
.text:0000000000046D6C                 STURH           W10, [X9,#-0x25]
.text:0000000000046D70                 LDRH            W10, [X19,#0x38]
.text:0000000000046D74                 STURH           W10, [X9,#-0x23]
.text:0000000000046D78                 LDRH            W10, [X19,#0x3A]
.text:0000000000046D7C                 STURH           W10, [X9,#-0x21]
.text:0000000000046D80                 LDRH            W10, [X19,#0x3C]
.text:0000000000046D84                 STURH           W10, [X9,#-0x1F]
.text:0000000000046D88                 LDRH            W10, [X19,#0x3E]
.text:0000000000046D8C                 STURH           W10, [X9,#-0x1D]
.text:0000000000046D90                 LDRH            W10, [X19,#0x40]
.text:0000000000046D94                 STURH           W10, [X9,#-0x1B]
.text:0000000000046D98                 LDRH            W10, [X19,#0x42]
.text:0000000000046D9C                 STURH           W10, [X9,#-0x19]
.text:0000000000046DA0                 LDRH            W10, [X19,#0x44]
.text:0000000000046DA4                 STURH           W10, [X9,#-0x17]
.text:0000000000046DA8                 LDRH            W10, [X19,#0x48]
.text:0000000000046DAC                 STURH           W10, [X9,#-0x15]
.text:0000000000046DB0                 LDRH            W10, [X19,#0x4A]
.text:0000000000046DB4                 STURH           W10, [X9,#-0x13]
.text:0000000000046DB8                 LDRH            W10, [X19,#0x4C]
.text:0000000000046DBC                 STURH           W10, [X9,#-0x11]
.text:0000000000046DC0                 LDRH            W10, [X19,#0x4E]
.text:0000000000046DC4                 STURH           W10, [X9,#-0xF]
.text:0000000000046DC8                 LDRH            W10, [X19,#0x50]
.text:0000000000046DCC                 STURH           W10, [X9,#-0xD]
.text:0000000000046DD0                 LDRH            W10, [X19,#0x52]
.text:0000000000046DD4                 STURH           W10, [X9,#-0xB]
.text:0000000000046DD8                 LDRH            W10, [X19,#0x54]
.text:0000000000046DDC                 STURH           W10, [X9,#-9]
.text:0000000000046DE0                 LDRH            W10, [X19,#0x56]
.text:0000000000046DE4                 STURH           W10, [X9,#-7]
.text:0000000000046DE8                 LDRH            W10, [X19,#0x58]
.text:0000000000046DEC                 STURH           W10, [X9,#-5]
.text:0000000000046DF0                 LDRSH           W10, [X19,#0x5A]
.text:0000000000046DF4                 MUL             W10, W10, W11
.text:0000000000046DF8                 CMN             W10, #0x1F8,LSL#12
.text:0000000000046DFC                 B.GE            loc_46E08
.text:0000000000046E00                 MOV             W10, #0xC1
.text:0000000000046E04                 B               loc_46E18
.text:0000000000046E08 ; ---------------------------------------------------------------------------
.text:0000000000046E08 loc_46E08                               ; CODE XREF: sub_46A20+3DC↑j
.text:0000000000046E08                 LSR             W11, W10, #0xF
.text:0000000000046E0C                 CMP             W10, #0x200,LSL#12
.text:0000000000046E10                 MOV             W10, #0x3F ; '?'
.text:0000000000046E14                 CSEL            W10, W10, W11, GE
.text:0000000000046E18 loc_46E18                               ; CODE XREF: sub_46A20+3E4↑j
.text:0000000000046E18                 MOV             W11, #0x58 ; 'X'
.text:0000000000046E1C                 MADD            X11, X20, X11, X21
.text:0000000000046E20                 STRB            W10, [X11,#0x56]
.text:0000000000046E24                 LDRH            W10, [X19,#0x46]
.text:0000000000046E28                 CBZ             W10, loc_46E34
.text:0000000000046E2C                 ORR             W8, W8, #0x80
.text:0000000000046E30                 STRB            W8, [X9]
.text:0000000000046E34 loc_46E34                               ; CODE XREF: sub_46A20+408↑j
.text:0000000000046E34                 LDP             X29, X30, [SP,#0x40+var_s0]
.text:0000000000046E38                 LDP             X20, X19, [SP,#0x40+var_10]
.text:0000000000046E3C                 LDP             X22, X21, [SP,#0x40+var_20]
.text:0000000000046E40                 LDP             X24, X23, [SP,#0x40+var_30]
.text:0000000000046E44                 LDR             X25, [SP+0x40+var_40],#0x50
.text:0000000000046E48                 RET
.text:0000000000046E48 ; } // starts at 46A20
.text:0000000000046E48 ; End of function sub_46A20
.text:0000000000046E48 ; ---------------------------------------------------------------------------
.text:0000000000046E4C                 ALIGN 0x10
.text:0000000000046E50 ; =============== S U B R O U T I N E =======================================
.text:0000000000046E50                 EXPORT DLSCleanup
.text:0000000000046E50 DLSCleanup                              ; CODE XREF: .DLSCleanup+C↓j
.text:0000000000046E50                                         ; DATA XREF: LOAD:0000000000000FF0↑o ...
.text:0000000000046E50 var_10          = -0x10
.text:0000000000046E50 ; __unwind {
.text:0000000000046E50                 CBZ             X1, loc_46E6C
.text:0000000000046E54                 LDRB            W8, [X1,#0x38]
.text:0000000000046E58                 CBZ             W8, loc_46E6C
.text:0000000000046E5C                 SUB             W8, W8, #1
.text:0000000000046E60                 TST             W8, #0xFF
.text:0000000000046E64                 STRB            W8, [X1,#0x38]
.text:0000000000046E68                 B.EQ            loc_46E74
.text:0000000000046E6C loc_46E6C                               ; CODE XREF: DLSCleanup↑j
.text:0000000000046E6C                                         ; DLSCleanup+8↑j
.text:0000000000046E6C                 MOV             X0, XZR
.text:0000000000046E70                 RET
.text:0000000000046E74 ; ---------------------------------------------------------------------------
.text:0000000000046E74 loc_46E74                               ; CODE XREF: DLSCleanup+18↑j
.text:0000000000046E74                 STP             X29, X30, [SP,#var_10]!
.text:0000000000046E78                 MOV             X29, SP
.text:0000000000046E7C                 BL              .EAS_HWFree
.text:0000000000046E80                 LDP             X29, X30, [SP+0x10+var_10],#0x10
.text:0000000000046E84                 MOV             X0, XZR
.text:0000000000046E88                 RET
.text:0000000000046E88 ; } // starts at 46E50
.text:0000000000046E88 ; End of function DLSCleanup
.text:0000000000046E88 ; ---------------------------------------------------------------------------
.text:0000000000046E8C                 ALIGN 0x10
.text:0000000000046E90 ; =============== S U B R O U T I N E =======================================
.text:0000000000046E90                 EXPORT DLSAddRef
.text:0000000000046E90 DLSAddRef                               ; CODE XREF: .DLSAddRef+C↓j
.text:0000000000046E90                                         ; DATA XREF: LOAD:0000000000001938↑o ...
.text:0000000000046E90 ; __unwind {
.text:0000000000046E90                 CBZ             X0, locret_46EA0
.text:0000000000046E94                 LDRB            W8, [X0,#0x38]
.text:0000000000046E98                 ADD             W8, W8, #1
.text:0000000000046E9C                 STRB            W8, [X0,#0x38]
.text:0000000000046EA0 locret_46EA0                            ; CODE XREF: DLSAddRef↑j
.text:0000000000046EA0                 RET
.text:0000000000046EA0 ; } // starts at 46E90
.text:0000000000046EA0 ; End of function DLSAddRef
.text:0000000000046EA0 ; ---------------------------------------------------------------------------
.text:0000000000046EA4                 ALIGN 8
.text:0000000000046EA8 ; =============== S U B R O U T I N E =======================================
.text:0000000000046EA8                 EXPORT ConvertDelay
.text:0000000000046EA8 ConvertDelay                            ; CODE XREF: .ConvertDelay+C↓j
.text:0000000000046EA8                                         ; DATA XREF: LOAD:0000000000001BF0↑o ...
.text:0000000000046EA8 var_10          = -0x10
.text:0000000000046EA8 ; __unwind {
.text:0000000000046EA8                 CMN             X0, #8,LSL#12
.text:0000000000046EAC                 B.NE            loc_46EB8
.text:0000000000046EB0                 MOV             W0, WZR
.text:0000000000046EB4                 RET
.text:0000000000046EB8 ; ---------------------------------------------------------------------------
.text:0000000000046EB8 loc_46EB8                               ; CODE XREF: ConvertDelay+4↑j
.text:0000000000046EB8                 STP             X29, X30, [SP,#var_10]!
.text:0000000000046EBC                 MOV             X29, SP
.text:0000000000046EC0                 MOV             W8, #0x6D3A
.text:0000000000046EC4                 MOV             W9, #0xEDB4D94
.text:0000000000046ECC                 MADD            W8, W0, W8, W9
.text:0000000000046ED0                 MOV             W9, #0xFFFFC400
.text:0000000000046ED4                 ADD             W8, W9, W8,ASR#15
.text:0000000000046ED8                 SXTW            X0, W8
.text:0000000000046EDC                 BL              .EAS_LogToLinear16
.text:0000000000046EE0                 MOV             W8, #0x7FFF
.text:0000000000046EE4                 CMP             W8, W0,UXTH
.text:0000000000046EE8                 CSEL            W0, W0, W8, HI
.text:0000000000046EEC                 LDP             X29, X30, [SP+0x10+var_10],#0x10
.text:0000000000046EF0                 RET
.text:0000000000046EF0 ; } // starts at 46EA8
.text:0000000000046EF0 ; End of function ConvertDelay
.text:0000000000046EF0 ; ---------------------------------------------------------------------------
.text:0000000000046EF4                 ALIGN 8
.text:0000000000046EF8 ; =============== S U B R O U T I N E =======================================
.text:0000000000046EF8                 EXPORT ConvertRate
.text:0000000000046EF8 ConvertRate                             ; CODE XREF: .ConvertRate+C↓j
.text:0000000000046EF8                                         ; DATA XREF: LOAD:0000000000001410↑o ...
.text:0000000000046EF8 var_10          = -0x10
.text:0000000000046EF8 ; __unwind {
.text:0000000000046EF8                 CMN             X0, #8,LSL#12
.text:0000000000046EFC                 B.NE            loc_46F08
.text:0000000000046F00                 MOV             W0, #0x7FFF
.text:0000000000046F04                 RET
.text:0000000000046F08 ; ---------------------------------------------------------------------------
.text:0000000000046F08 loc_46F08                               ; CODE XREF: ConvertRate+4↑j
.text:0000000000046F08                 STP             X29, X30, [SP,#var_10]!
.text:0000000000046F0C                 MOV             X29, SP
.text:0000000000046F10                 MOV             X8, #0xFFFFFFFFFFFFDD2E
.text:0000000000046F14                 SUB             X0, X8, X0
.text:0000000000046F18                 BL              .EAS_Calculate2toX
.text:0000000000046F1C                 MOV             W8, #0x7FFF
.text:0000000000046F20                 CMP             X0, X8
.text:0000000000046F24                 CSEL            W0, W0, W8, LT
.text:0000000000046F28                 LDP             X29, X30, [SP+0x10+var_10],#0x10
.text:0000000000046F2C                 RET
.text:0000000000046F2C ; } // starts at 46EF8
.text:0000000000046F2C ; End of function ConvertRate
.text:0000000000046F30 ; =============== S U B R O U T I N E =======================================
.text:0000000000046F30 ; Attributes: bp-based frame
.text:0000000000046F30 sub_46F30                               ; CODE XREF: sub_45BC8+244↑p
.text:0000000000046F30                                         ; sub_46160+724↑p
.text:0000000000046F30 var_40          = -0x40
.text:0000000000046F30 var_38          = -0x38
.text:0000000000046F30 var_2C          = -0x2C
.text:0000000000046F30 var_28          = -0x28
.text:0000000000046F30 var_20          = -0x20
.text:0000000000046F30 var_10          = -0x10
.text:0000000000046F30 var_s0          =  0
.text:0000000000046F30 ; __unwind {
.text:0000000000046F30                 SUB             SP, SP, #0x50
.text:0000000000046F34                 STP             X22, X21, [SP,#0x40+var_20]
.text:0000000000046F38                 STP             X20, X19, [SP,#0x40+var_10]
.text:0000000000046F3C                 STP             X29, X30, [SP,#0x40+var_s0]
.text:0000000000046F40                 ADD             X29, SP, #0x40
.text:0000000000046F44                 MRS             X22, #3, c13, c0, #2
.text:0000000000046F48                 MOV             X20, X0
.text:0000000000046F4C                 LDR             X8, [X22,#0x28]
.text:0000000000046F50                 MOV             X21, X1
.text:0000000000046F54                 MOV             X19, X2
.text:0000000000046F58                 MOV             X2, X21
.text:0000000000046F5C                 STR             X8, [SP,#0x40+var_28]
.text:0000000000046F60                 LDR             X8, [X20,#0x10]
.text:0000000000046F64                 LDR             X0, [X0,#8]
.text:0000000000046F68                 MOV             X1, X8
.text:0000000000046F6C                 BL              .EAS_HWFileSeek
.text:0000000000046F70                 CBNZ            X0, loc_47010
.text:0000000000046F74                 LDP             X0, X1, [X20,#8]
.text:0000000000046F78                 MOV             X2, SP
.text:0000000000046F7C                 MOV             W3, WZR
.text:0000000000046F80                 BL              .EAS_HWGetDWord
.text:0000000000046F84                 CBNZ            X0, loc_47010
.text:0000000000046F88                 LDP             X0, X1, [X20,#8]
.text:0000000000046F8C                 ADD             X2, SP, #0x40+var_2C
.text:0000000000046F90                 MOV             W3, WZR
.text:0000000000046F94                 BL              .EAS_HWGetWord
.text:0000000000046F98                 CBNZ            X0, loc_47010
.text:0000000000046F9C                 LDRH            W8, [SP,#0x40+var_2C]
.text:0000000000046FA0                 MOV             W9, #0x3C ; '<'
.text:0000000000046FA4                 ADD             X2, X19, #0x22 ; '"'
.text:0000000000046FA8                 MOV             W3, WZR
.text:0000000000046FAC                 CMP             W8, #0x80
.text:0000000000046FB0                 CSEL            W8, W8, W9, CC
.text:0000000000046FB4                 STRB            W8, [X19,#0x24]
.text:0000000000046FB8                 LDP             X0, X1, [X20,#8]
.text:0000000000046FBC                 BL              .EAS_HWGetWord
.text:0000000000046FC0                 CBNZ            X0, loc_47010
.text:0000000000046FC4                 LDP             X0, X1, [X20,#8]
.text:0000000000046FC8                 MOV             X2, X19
.text:0000000000046FCC                 MOV             W3, WZR
.text:0000000000046FD0                 BL              .EAS_HWGetDWord
.text:0000000000046FD4                 CBNZ            X0, loc_47010
.text:0000000000046FD8                 LDR             X8, [X19]
.text:0000000000046FDC                 CMP             X8, #1
.text:0000000000046FE0                 B.LT            loc_46FE8
.text:0000000000046FE4                 STR             XZR, [X19]
.text:0000000000046FE8 loc_46FE8                               ; CODE XREF: sub_46F30+B0↑j
.text:0000000000046FE8                 LDP             X0, X1, [X20,#8]
.text:0000000000046FEC                 ADD             X2, SP, #0x40+var_38
.text:0000000000046FF0                 MOV             W3, WZR
.text:0000000000046FF4                 BL              .EAS_HWGetDWord
.text:0000000000046FF8                 CBNZ            X0, loc_47010
.text:0000000000046FFC                 LDP             X0, X1, [X20,#8]
.text:0000000000047000                 ADD             X2, SP, #0x40+var_38
.text:0000000000047004                 MOV             W3, WZR
.text:0000000000047008                 BL              .EAS_HWGetDWord
.text:000000000004700C                 CBZ             X0, loc_47034
.text:0000000000047010 loc_47010                               ; CODE XREF: sub_46F30+40↑j
.text:0000000000047010                                         ; sub_46F30+54↑j ...
.text:0000000000047010                 LDR             X8, [X22,#0x28]
.text:0000000000047014                 LDR             X9, [SP,#0x40+var_28]
.text:0000000000047018                 CMP             X8, X9
.text:000000000004701C                 B.NE            loc_470DC
.text:0000000000047020                 LDP             X29, X30, [SP,#0x40+var_s0]
.text:0000000000047024                 LDP             X20, X19, [SP,#0x40+var_10]
.text:0000000000047028                 LDP             X22, X21, [SP,#0x40+var_20]
.text:000000000004702C                 ADD             SP, SP, #0x50 ; 'P'
.text:0000000000047030                 RET
.text:0000000000047034 ; ---------------------------------------------------------------------------
.text:0000000000047034 loc_47034                               ; CODE XREF: sub_46F30+DC↑j
.text:0000000000047034                 LDR             X8, [SP,#0x40+var_38]
.text:0000000000047038                 CBZ             X8, loc_470D4
.text:000000000004703C                 LDR             X8, [SP,#0x40+var_40]
.text:0000000000047040                 LDP             X0, X1, [X20,#8]
.text:0000000000047044                 ADD             X2, X8, X21
.text:0000000000047048                 BL              .EAS_HWFileSeek
.text:000000000004704C                 CBNZ            X0, loc_47010
.text:0000000000047050                 LDP             X0, X1, [X20,#8]
.text:0000000000047054                 ADD             X2, SP, #0x40+var_38
.text:0000000000047058                 MOV             W3, WZR
.text:000000000004705C                 BL              .EAS_HWGetDWord
.text:0000000000047060                 CBNZ            X0, loc_47010
.text:0000000000047064                 LDP             X0, X1, [X20,#8]
.text:0000000000047068                 ADD             X2, SP, #0x40+var_38
.text:000000000004706C                 MOV             W3, WZR
.text:0000000000047070                 BL              .EAS_HWGetDWord
.text:0000000000047074                 CBNZ            X0, loc_47010
.text:0000000000047078                 LDP             X0, X1, [X20,#8]
.text:000000000004707C                 ADD             X21, X19, #8
.text:0000000000047080                 MOV             X2, X21
.text:0000000000047084                 MOV             W3, WZR
.text:0000000000047088                 BL              .EAS_HWGetDWord
.text:000000000004708C                 CBNZ            X0, loc_47010
.text:0000000000047090                 LDP             X0, X1, [X20,#8]
.text:0000000000047094                 ADD             X19, X19, #0x10
.text:0000000000047098                 MOV             X2, X19
.text:000000000004709C                 MOV             W3, WZR
.text:00000000000470A0                 BL              .EAS_HWGetDWord
.text:00000000000470A4                 CBNZ            X0, loc_47010
.text:00000000000470A8                 LDR             X8, [X19]
.text:00000000000470AC                 CBZ             X8, loc_470D4
.text:00000000000470B0                 LDR             X9, [X21]
.text:00000000000470B4                 MOV             W10, #0xFFFFFFFF
.text:00000000000470B8                 MOV             X0, #0xFFFFFFFFFFFFFFFF
.text:00000000000470BC                 SUB             X10, X10, X8
.text:00000000000470C0                 CMP             X9, X10
.text:00000000000470C4                 B.HI            loc_47010
.text:00000000000470C8                 ADD             X8, X9, X8
.text:00000000000470CC                 LSR             X8, X8, #0x20 ; ' '
.text:00000000000470D0                 CBNZ            X8, loc_47010
.text:00000000000470D4 loc_470D4                               ; CODE XREF: sub_46F30+108↑j
.text:00000000000470D4                                         ; sub_46F30+17C↑j
.text:00000000000470D4                 MOV             X0, XZR
.text:00000000000470D8                 B               loc_47010
.text:00000000000470DC ; ---------------------------------------------------------------------------
.text:00000000000470DC loc_470DC                               ; CODE XREF: sub_46F30+EC↑j
.text:00000000000470DC                 BL              .__stack_chk_fail
.text:00000000000470DC ; } // starts at 46F30
.text:00000000000470DC ; End of function sub_46F30
.text:00000000000470E0 ; =============== S U B R O U T I N E =======================================
.text:00000000000470E0 ; Attributes: bp-based frame
.text:00000000000470E0 sub_470E0                               ; CODE XREF: sub_46160+268↑p
.text:00000000000470E0                                         ; sub_46160+284↑p ...
.text:00000000000470E0 var_70          = -0x70
.text:00000000000470E0 var_68          = -0x68
.text:00000000000470E0 var_60          = -0x60
.text:00000000000470E0 var_58          = -0x58
.text:00000000000470E0 var_50          = -0x50
.text:00000000000470E0 var_40          = -0x40
.text:00000000000470E0 var_30          = -0x30
.text:00000000000470E0 var_20          = -0x20
.text:00000000000470E0 var_10          = -0x10
.text:00000000000470E0 var_s0          =  0
.text:00000000000470E0 ; __unwind {
.text:00000000000470E0                 SUB             SP, SP, #0x80
.text:00000000000470E4                 STP             X28, X27, [SP,#0x70+var_50]
.text:00000000000470E8                 STP             X26, X25, [SP,#0x70+var_40]
.text:00000000000470EC                 STP             X24, X23, [SP,#0x70+var_30]
.text:00000000000470F0                 STP             X22, X21, [SP,#0x70+var_20]
.text:00000000000470F4                 STP             X20, X19, [SP,#0x70+var_10]
.text:00000000000470F8                 STP             X29, X30, [SP,#0x70+var_s0]
.text:00000000000470FC                 ADD             X29, SP, #0x70
.text:0000000000047100                 MRS             X25, #3, c13, c0, #2
.text:0000000000047104                 MOV             X20, X0
.text:0000000000047108                 LDR             X8, [X25,#0x28]
.text:000000000004710C                 MOV             X23, X1
.text:0000000000047110                 MOV             X24, X2
.text:0000000000047114                 MOV             X19, X3
.text:0000000000047118                 STR             X8, [SP,#0x70+var_58]
.text:000000000004711C                 LDR             X0, [X0,#8]
.text:0000000000047120                 LDR             X1, [X20,#0x10]
.text:0000000000047124                 STP             X2, X23, [SP,#0x70+var_68]
.text:0000000000047128                 MOV             X2, X23
.text:000000000004712C                 BL              .EAS_HWFileSeek
.text:0000000000047130                 CBNZ            X0, loc_47200
.text:0000000000047134                 CMP             X24, #1
.text:0000000000047138                 B.LT            loc_471FC
.text:000000000004713C                 MOV             W26, #0x7431
.text:0000000000047140                 MOV             W27, #0x7432
.text:0000000000047144                 MOV             W28, #0x6C20
.text:0000000000047148                 MOV             X21, XZR
.text:000000000004714C                 MOV             X22, XZR
.text:0000000000047150                 ADD             X24, X24, X23
.text:0000000000047154                 MOVK            W26, #0x6172,LSL#16
.text:0000000000047158                 MOVK            W27, #0x6172,LSL#16
.text:000000000004715C                 MOVK            W28, #0x6364,LSL#16
.text:0000000000047160 loc_47160                               ; CODE XREF: sub_470E0+E8↓j
.text:0000000000047160                 ADD             X1, SP, #0x70+var_60
.text:0000000000047164                 MOV             X2, SP
.text:0000000000047168                 ADD             X3, SP, #0x70+var_68
.text:000000000004716C                 MOV             X0, X20
.text:0000000000047170                 BL              sub_45860
.text:0000000000047174                 CBNZ            X0, loc_47200
.text:0000000000047178                 LDR             X8, [SP,#0x70+var_70]
.text:000000000004717C                 CMP             X8, X26
.text:0000000000047180                 B.EQ            loc_471BC
.text:0000000000047184                 CMP             X8, X27
.text:0000000000047188                 B.EQ            loc_471B4
.text:000000000004718C                 CMP             X8, X28
.text:0000000000047190                 B.NE            loc_471C0
.text:0000000000047194                 LDR             X1, [SP,#0x70+var_68]
.text:0000000000047198                 MOV             X2, SP
.text:000000000004719C                 MOV             X0, X20
.text:00000000000471A0                 BL              sub_45948
.text:00000000000471A4                 CBNZ            X0, loc_47200
.text:00000000000471A8                 LDR             X8, [SP,#0x70+var_70]
.text:00000000000471AC                 CBNZ            X8, loc_471C0
.text:00000000000471B0                 B               loc_471FC
.text:00000000000471B4 ; ---------------------------------------------------------------------------
.text:00000000000471B4 loc_471B4                               ; CODE XREF: sub_470E0+A8↑j
.text:00000000000471B4                 ADD             X21, X23, #8
.text:00000000000471B8                 B               loc_471C0
.text:00000000000471BC ; ---------------------------------------------------------------------------
.text:00000000000471BC loc_471BC                               ; CODE XREF: sub_470E0+A0↑j
.text:00000000000471BC                 ADD             X22, X23, #8
.text:00000000000471C0 loc_471C0                               ; CODE XREF: sub_470E0+B0↑j
.text:00000000000471C0                                         ; sub_470E0+CC↑j ...
.text:00000000000471C0                 LDR             X23, [SP,#0x70+var_60]
.text:00000000000471C4                 CMP             X23, X24
.text:00000000000471C8                 B.LT            loc_47160
.text:00000000000471CC                 CBZ             X22, loc_471E4
.text:00000000000471D0                 MOV             X0, X20
.text:00000000000471D4                 MOV             X1, X22
.text:00000000000471D8                 MOV             X2, X19
.text:00000000000471DC                 BL              sub_47238
.text:00000000000471E0                 CBNZ            X0, loc_47200
.text:00000000000471E4 loc_471E4                               ; CODE XREF: sub_470E0+EC↑j
.text:00000000000471E4                 CBZ             X21, loc_471FC
.text:00000000000471E8                 MOV             X0, X20
.text:00000000000471EC                 MOV             X1, X21
.text:00000000000471F0                 MOV             X2, X19
.text:00000000000471F4                 BL              sub_47238
.text:00000000000471F8                 CBNZ            X0, loc_47200
.text:00000000000471FC loc_471FC                               ; CODE XREF: sub_470E0+58↑j
.text:00000000000471FC                                         ; sub_470E0+D0↑j ...
.text:00000000000471FC                 MOV             X0, XZR
.text:0000000000047200 loc_47200                               ; CODE XREF: sub_470E0+50↑j
.text:0000000000047200                                         ; sub_470E0+94↑j ...
.text:0000000000047200                 LDR             X8, [X25,#0x28]
.text:0000000000047204                 LDR             X9, [SP,#0x70+var_58]
.text:0000000000047208                 CMP             X8, X9
.text:000000000004720C                 B.NE            loc_47230
.text:0000000000047210                 LDP             X29, X30, [SP,#0x70+var_s0]
.text:0000000000047214                 LDP             X20, X19, [SP,#0x70+var_10]
.text:0000000000047218                 LDP             X22, X21, [SP,#0x70+var_20]
.text:000000000004721C                 LDP             X24, X23, [SP,#0x70+var_30]
.text:0000000000047220                 LDP             X26, X25, [SP,#0x70+var_40]
.text:0000000000047224                 LDP             X28, X27, [SP,#0x70+var_50]
.text:0000000000047228                 ADD             SP, SP, #0x80
.text:000000000004722C                 RET
.text:0000000000047230 ; ---------------------------------------------------------------------------
.text:0000000000047230 loc_47230                               ; CODE XREF: sub_470E0+12C↑j
.text:0000000000047230                 BL              .__stack_chk_fail
.text:0000000000047230 ; } // starts at 470E0
.text:0000000000047230 ; End of function sub_470E0
.text:0000000000047230 ; ---------------------------------------------------------------------------
.text:0000000000047234                 ALIGN 8
.text:0000000000047238 ; =============== S U B R O U T I N E =======================================
.text:0000000000047238 ; Attributes: bp-based frame
.text:0000000000047238 sub_47238                               ; CODE XREF: sub_470E0+FC↑p
.text:0000000000047238                                         ; sub_470E0+114↑p
.text:0000000000047238 var_60          = -0x60
.text:0000000000047238 var_58          = -0x58
.text:0000000000047238 var_54          = -0x54
.text:0000000000047238 var_50          = -0x50
.text:0000000000047238 var_4C          = -0x4C
.text:0000000000047238 var_48          = -0x48
.text:0000000000047238 var_40          = -0x40
.text:0000000000047238 var_38          = -0x38
.text:0000000000047238 var_30          = -0x30
.text:0000000000047238 var_20          = -0x20
.text:0000000000047238 var_10          = -0x10
.text:0000000000047238 var_s0          =  0
.text:0000000000047238 ; __unwind {
.text:0000000000047238                 SUB             SP, SP, #0x70
.text:000000000004723C                 STR             X23, [SP,#0x60+var_30]
.text:0000000000047240                 STP             X22, X21, [SP,#0x60+var_20]
.text:0000000000047244                 STP             X20, X19, [SP,#0x60+var_10]
.text:0000000000047248                 STP             X29, X30, [SP,#0x60+var_s0]
.text:000000000004724C                 ADD             X29, SP, #0x60
.text:0000000000047250                 MRS             X22, #3, c13, c0, #2
.text:0000000000047254                 MOV             X20, X0
.text:0000000000047258                 LDR             X8, [X22,#0x28]
.text:000000000004725C                 MOV             X21, X1
.text:0000000000047260                 MOV             X19, X2
.text:0000000000047264                 MOV             X2, X21
.text:0000000000047268                 STR             X8, [SP,#0x60+var_38]
.text:000000000004726C                 LDR             X8, [X20,#0x10]
.text:0000000000047270                 LDR             X0, [X0,#8]
.text:0000000000047274                 MOV             X1, X8
.text:0000000000047278                 BL              .EAS_HWFileSeek
.text:000000000004727C                 CBNZ            X0, loc_472BC
.text:0000000000047280                 LDP             X0, X1, [X20,#8]
.text:0000000000047284                 ADD             X2, SP, #0x60+var_40
.text:0000000000047288                 MOV             W3, WZR
.text:000000000004728C                 BL              .EAS_HWGetDWord
.text:0000000000047290                 CBNZ            X0, loc_472BC
.text:0000000000047294                 LDP             X0, X1, [X20,#8]
.text:0000000000047298                 LDR             X23, [SP,#0x60+var_40]
.text:000000000004729C                 ADD             X2, SP, #0x60+var_48
.text:00000000000472A0                 MOV             W3, WZR
.text:00000000000472A4                 BL              .EAS_HWGetDWord
.text:00000000000472A8                 CBNZ            X0, loc_472BC
.text:00000000000472AC                 LDP             X0, X1, [X20,#8]
.text:00000000000472B0                 ADD             X2, X23, X21
.text:00000000000472B4                 BL              .EAS_HWFileSeek
.text:00000000000472B8                 CBZ             X0, loc_472E4
.text:00000000000472BC loc_472BC                               ; CODE XREF: sub_47238+44↑j
.text:00000000000472BC                                         ; sub_47238+58↑j ...
.text:00000000000472BC                 LDR             X8, [X22,#0x28]
.text:00000000000472C0                 LDR             X9, [SP,#0x60+var_38]
.text:00000000000472C4                 CMP             X8, X9
.text:00000000000472C8                 B.NE            loc_473E4
.text:00000000000472CC                 LDP             X29, X30, [SP,#0x60+var_s0]
.text:00000000000472D0                 LDP             X20, X19, [SP,#0x60+var_10]
.text:00000000000472D4                 LDP             X22, X21, [SP,#0x60+var_20]
.text:00000000000472D8                 LDR             X23, [SP,#0x60+var_30]
.text:00000000000472DC                 ADD             SP, SP, #0x70 ; 'p'
.text:00000000000472E0                 RET
.text:00000000000472E4 ; ---------------------------------------------------------------------------
.text:00000000000472E4 loc_472E4                               ; CODE XREF: sub_47238+80↑j
.text:00000000000472E4                 LDR             X8, [SP,#0x60+var_48]
.text:00000000000472E8                 SUB             X9, X8, #1
.text:00000000000472EC                 STR             X9, [SP,#0x60+var_48]
.text:00000000000472F0                 CBZ             X8, loc_473DC
.text:00000000000472F4                 ADRP            X23, #word_5720@PAGE
.text:00000000000472F8                 MOV             W21, #1
.text:00000000000472FC                 ADD             X23, X23, #word_5720@PAGEOFF
.text:0000000000047300 loc_47300                               ; CODE XREF: sub_47238+19C↓j
.text:0000000000047300                 LDP             X0, X1, [X20,#8]
.text:0000000000047304                 ADD             X2, SP, #0x60+var_4C
.text:0000000000047308                 MOV             W3, WZR
.text:000000000004730C                 BL              .EAS_HWGetWord
.text:0000000000047310                 CBNZ            X0, loc_472BC
.text:0000000000047314                 LDP             X0, X1, [X20,#8]
.text:0000000000047318                 ADD             X2, SP, #0x60+var_50
.text:000000000004731C                 MOV             W3, WZR
.text:0000000000047320                 BL              .EAS_HWGetWord
.text:0000000000047324                 CBNZ            X0, loc_472BC
.text:0000000000047328                 LDP             X0, X1, [X20,#8]
.text:000000000004732C                 ADD             X2, SP, #0x60+var_54
.text:0000000000047330                 MOV             W3, WZR
.text:0000000000047334                 BL              .EAS_HWGetWord
.text:0000000000047338                 CBNZ            X0, loc_472BC
.text:000000000004733C                 LDP             X0, X1, [X20,#8]
.text:0000000000047340                 ADD             X2, SP, #0x60+var_58
.text:0000000000047344                 MOV             W3, WZR
.text:0000000000047348                 BL              .EAS_HWGetWord
.text:000000000004734C                 CBNZ            X0, loc_472BC
.text:0000000000047350                 LDP             X0, X1, [X20,#8]
.text:0000000000047354                 MOV             X2, SP
.text:0000000000047358                 MOV             W3, WZR
.text:000000000004735C                 BL              .EAS_HWGetDWord
.text:0000000000047360                 CBNZ            X0, loc_472BC
.text:0000000000047364                 LDRH            W9, [SP,#0x60+var_4C]
.text:0000000000047368                 MOV             X8, XZR
.text:000000000004736C                 LDRH            W10, [SP,#0x60+var_54]
.text:0000000000047370                 MOV             X11, X23
.text:0000000000047374                 LDRH            W12, [SP,#0x60+var_50]
.text:0000000000047378 loc_47378                               ; CODE XREF: sub_47238+170↓j
.text:0000000000047378                 LDURH           W13, [X11,#-4]
.text:000000000004737C                 CMP             W13, W9
.text:0000000000047380                 B.NE            loc_4739C
.text:0000000000047384                 LDRH            W13, [X11]
.text:0000000000047388                 CMP             W13, W10
.text:000000000004738C                 B.NE            loc_4739C
.text:0000000000047390                 LDURH           W13, [X11,#-2]
.text:0000000000047394                 CMP             W13, W12
.text:0000000000047398                 B.EQ            loc_473B0
.text:000000000004739C loc_4739C                               ; CODE XREF: sub_47238+148↑j
.text:000000000004739C                                         ; sub_47238+154↑j
.text:000000000004739C                 ADD             X8, X8, #1
.text:00000000000473A0                 ADD             X11, X11, #8
.text:00000000000473A4                 CMP             X8, #0x31 ; '1'
.text:00000000000473A8                 B.CC            loc_47378
.text:00000000000473AC                 B               loc_473C4
.text:00000000000473B0 ; ---------------------------------------------------------------------------
.text:00000000000473B0 loc_473B0                               ; CODE XREF: sub_47238+160↑j
.text:00000000000473B0                 LDR             X8, [SP,#0x60+var_60]
.text:00000000000473B4                 LDRH            W9, [X11,#2]
.text:00000000000473B8                 LSR             X8, X8, #0x10
.text:00000000000473BC                 STRH            W8, [X19,X9,LSL#1]
.text:00000000000473C0                 STRH            W21, [X19]
.text:00000000000473C4 loc_473C4                               ; CODE XREF: sub_47238+174↑j
.text:00000000000473C4                 LDR             X8, [SP,#0x60+var_48]
.text:00000000000473C8                 MOV             X0, XZR
.text:00000000000473CC                 SUB             X9, X8, #1
.text:00000000000473D0                 STR             X9, [SP,#0x60+var_48]
.text:00000000000473D4                 CBNZ            X8, loc_47300
.text:00000000000473D8                 B               loc_472BC
.text:00000000000473DC ; ---------------------------------------------------------------------------
.text:00000000000473DC loc_473DC                               ; CODE XREF: sub_47238+B8↑j
.text:00000000000473DC                 MOV             X0, XZR
.text:00000000000473E0                 B               loc_472BC
.text:00000000000473E4 ; ---------------------------------------------------------------------------
.text:00000000000473E4 loc_473E4                               ; CODE XREF: sub_47238+90↑j
.text:00000000000473E4                 BL              .__stack_chk_fail
.text:00000000000473E4 ; } // starts at 47238
.text:00000000000473E4 ; End of function sub_47238
.text:00000000000473E8 ; =============== S U B R O U T I N E =======================================
.text:00000000000473E8 ; Attributes: bp-based frame
.text:00000000000473E8 sub_473E8                               ; CODE XREF: sub_45948+F0↑p
.text:00000000000473E8                                         ; sub_45948+118↑p
.text:00000000000473E8 var_28          = -0x28
.text:00000000000473E8 var_20          = -0x20
.text:00000000000473E8 var_10          = -0x10
.text:00000000000473E8 var_s0          =  0
.text:00000000000473E8 ; __unwind {
.text:00000000000473E8                 SUB             SP, SP, #0x40
.text:00000000000473EC                 STR             X21, [SP,#0x30+var_20]
.text:00000000000473F0                 STP             X20, X19, [SP,#0x30+var_10]
.text:00000000000473F4                 STP             X29, X30, [SP,#0x30+var_s0]
.text:00000000000473F8                 ADD             X29, SP, #0x30
.text:00000000000473FC                 MRS             X21, #3, c13, c0, #2
.text:0000000000047400                 MOV             X19, X0
.text:0000000000047404                 LDR             X8, [X21,#0x28]
.text:0000000000047408                 MOV             X20, X1
.text:000000000004740C                 MOV             X2, X20
.text:0000000000047410                 MOV             W3, WZR
.text:0000000000047414                 STR             X8, [SP,#0x30+var_28]
.text:0000000000047418                 LDR             X8, [X19,#0x10]
.text:000000000004741C                 LDR             X0, [X0,#8]
.text:0000000000047420                 MOV             X1, X8
.text:0000000000047424                 BL              .EAS_HWGetDWord
.text:0000000000047428                 CBNZ            X0, loc_47468
.text:000000000004742C                 LDP             X0, X1, [X19,#8]
.text:0000000000047430                 ADD             X2, X20, #8
.text:0000000000047434                 MOV             W3, WZR
.text:0000000000047438                 BL              .EAS_HWGetWord
.text:000000000004743C                 CBNZ            X0, loc_47468
.text:0000000000047440                 LDP             X0, X1, [X19,#8]
.text:0000000000047444                 ADD             X2, X20, #0xA
.text:0000000000047448                 MOV             W3, WZR
.text:000000000004744C                 BL              .EAS_HWGetWord
.text:0000000000047450                 CBNZ            X0, loc_47468
.text:0000000000047454                 LDP             X0, X1, [X19,#8]
.text:0000000000047458                 ADD             X2, X20, #0xC
.text:000000000004745C                 MOV             X4, SP
.text:0000000000047460                 MOV             W3, #8
.text:0000000000047464                 BL              .EAS_HWReadFile
.text:0000000000047468 loc_47468                               ; CODE XREF: sub_473E8+40↑j
.text:0000000000047468                                         ; sub_473E8+54↑j ...
.text:0000000000047468                 LDR             X8, [X21,#0x28]
.text:000000000004746C                 LDR             X9, [SP,#0x30+var_28]
.text:0000000000047470                 CMP             X8, X9
.text:0000000000047474                 B.NE            loc_4748C
.text:0000000000047478                 LDP             X29, X30, [SP,#0x30+var_s0]
.text:000000000004747C                 LDP             X20, X19, [SP,#0x30+var_10]
.text:0000000000047480                 LDR             X21, [SP,#0x30+var_20]
.text:0000000000047484                 ADD             SP, SP, #0x40 ; '@'
.text:0000000000047488                 RET
.text:000000000004748C ; ---------------------------------------------------------------------------
.text:000000000004748C loc_4748C                               ; CODE XREF: sub_473E8+8C↑j
.text:000000000004748C                 BL              .__stack_chk_fail
.text:000000000004748C ; } // starts at 473E8
.text:000000000004748C ; End of function sub_473E8
.text:0000000000047490 ; =============== S U B R O U T I N E =======================================
.text:0000000000047490 ; Attributes: bp-based frame
.text:0000000000047490 sub_47490                               ; CODE XREF: sub_45948+100↑p
.text:0000000000047490                                         ; sub_45948+128↑p
.text:0000000000047490 var_10          = -0x10
.text:0000000000047490 var_s0          =  0
.text:0000000000047490 ; __unwind {
.text:0000000000047490                 STP             X20, X19, [SP,#-0x10+var_10]!
.text:0000000000047494                 STP             X29, X30, [SP,#0x10+var_s0]
.text:0000000000047498                 ADD             X29, SP, #0x10
.text:000000000004749C                 MOV             X20, X0
.text:00000000000474A0                 STR             XZR, [X1]
.text:00000000000474A4                 ADRP            X0, #DLSID_GMInHardware_ptr@PAGE
.text:00000000000474A8                 MOV             X19, X1
.text:00000000000474AC                 MOV             X1, X20
.text:00000000000474B0                 LDR             X0, [X0,#DLSID_GMInHardware_ptr@PAGEOFF]
.text:00000000000474B4                 MOV             W2, #0x18
.text:00000000000474B8                 BL              .EAS_HWMemCmp
.text:00000000000474BC                 CBZ             X0, loc_47588
.text:00000000000474C0                 ADRP            X0, #DLSID_GSInHardware_ptr@PAGE
.text:00000000000474C4                 MOV             X1, X20
.text:00000000000474C8                 MOV             W2, #0x18
.text:00000000000474CC                 LDR             X0, [X0,#DLSID_GSInHardware_ptr@PAGEOFF]
.text:00000000000474D0                 BL              .EAS_HWMemCmp
.text:00000000000474D4                 CBZ             X0, loc_47598
.text:00000000000474D8                 ADRP            X0, #DLSID_XGInHardware_ptr@PAGE
.text:00000000000474DC                 MOV             X1, X20
.text:00000000000474E0                 MOV             W2, #0x18
.text:00000000000474E4                 LDR             X0, [X0,#DLSID_XGInHardware_ptr@PAGEOFF]
.text:00000000000474E8                 BL              .EAS_HWMemCmp
.text:00000000000474EC                 CBZ             X0, loc_47598
.text:00000000000474F0                 ADRP            X0, #DLSID_SupportsDLS1_ptr@PAGE
.text:00000000000474F4                 MOV             X1, X20
.text:00000000000474F8                 MOV             W2, #0x18
.text:00000000000474FC                 LDR             X0, [X0,#DLSID_SupportsDLS1_ptr@PAGEOFF]
.text:0000000000047500                 BL              .EAS_HWMemCmp
.text:0000000000047504                 CBZ             X0, loc_47588
.text:0000000000047508                 ADRP            X0, #DLSID_SupportsDLS2_ptr@PAGE
.text:000000000004750C                 MOV             X1, X20
.text:0000000000047510                 MOV             W2, #0x18
.text:0000000000047514                 LDR             X0, [X0,#DLSID_SupportsDLS2_ptr@PAGEOFF]
.text:0000000000047518                 BL              .EAS_HWMemCmp
.text:000000000004751C                 CBZ             X0, loc_47598
.text:0000000000047520                 ADRP            X0, #DLSID_SampleMemorySize_ptr@PAGE
.text:0000000000047524                 MOV             X1, X20
.text:0000000000047528                 MOV             W2, #0x18
.text:000000000004752C                 LDR             X0, [X0,#DLSID_SampleMemorySize_ptr@PAGEOFF]
.text:0000000000047530                 BL              .EAS_HWMemCmp
.text:0000000000047534                 CBZ             X0, loc_475A8
.text:0000000000047538                 ADRP            X0, #DLSID_ManufacturersID_ptr@PAGE
.text:000000000004753C                 MOV             X1, X20
.text:0000000000047540                 MOV             W2, #0x18
.text:0000000000047544                 LDR             X0, [X0,#DLSID_ManufacturersID_ptr@PAGEOFF]
.text:0000000000047548                 BL              .EAS_HWMemCmp
.text:000000000004754C                 CBZ             X0, loc_475B0
.text:0000000000047550                 ADRP            X0, #DLSID_ProductID_ptr@PAGE
.text:0000000000047554                 MOV             X1, X20
.text:0000000000047558                 MOV             W2, #0x18
.text:000000000004755C                 LDR             X0, [X0,#DLSID_ProductID_ptr@PAGEOFF]
.text:0000000000047560                 BL              .EAS_HWMemCmp
.text:0000000000047564                 CBZ             X0, loc_475B8
.text:0000000000047568                 ADRP            X0, #DLSID_SamplePlaybackRate_ptr@PAGE
.text:000000000004756C                 MOV             X1, X20
.text:0000000000047570                 MOV             W2, #0x18
.text:0000000000047574                 LDR             X0, [X0,#DLSID_SamplePlaybackRate_ptr@PAGEOFF]
.text:0000000000047578                 BL              .EAS_HWMemCmp
.text:000000000004757C                 CBZ             X0, loc_475C4
.text:0000000000047580                 MOV             W0, WZR
.text:0000000000047584                 B               loc_4759C
.text:0000000000047588 ; ---------------------------------------------------------------------------
.text:0000000000047588 loc_47588                               ; CODE XREF: sub_47490+2C↑j
.text:0000000000047588                                         ; sub_47490+74↑j
.text:0000000000047588                 MOV             W8, #0xFFFFFFFF
.text:000000000004758C loc_4758C                               ; CODE XREF: sub_47490+11C↓j
.text:000000000004758C                                         ; sub_47490+124↓j ...
.text:000000000004758C                 MOV             W0, #1
.text:0000000000047590                 STR             X8, [X19]
.text:0000000000047594                 B               loc_4759C
.text:0000000000047598 ; ---------------------------------------------------------------------------
.text:0000000000047598 loc_47598                               ; CODE XREF: sub_47490+44↑j
.text:0000000000047598                                         ; sub_47490+5C↑j ...
.text:0000000000047598                 MOV             W0, #1
.text:000000000004759C loc_4759C                               ; CODE XREF: sub_47490+F4↑j
.text:000000000004759C                                         ; sub_47490+104↑j
.text:000000000004759C                 LDP             X29, X30, [SP,#0x10+var_s0]
.text:00000000000475A0                 LDP             X20, X19, [SP+0x10+var_10],#0x20
.text:00000000000475A4                 RET
.text:00000000000475A8 ; ---------------------------------------------------------------------------
.text:00000000000475A8 loc_475A8                               ; CODE XREF: sub_47490+A4↑j
.text:00000000000475A8                 MOV             W8, #0x10000
.text:00000000000475AC                 B               loc_4758C
.text:00000000000475B0 ; ---------------------------------------------------------------------------
.text:00000000000475B0 loc_475B0                               ; CODE XREF: sub_47490+BC↑j
.text:00000000000475B0                 MOV             W8, #0x13A
.text:00000000000475B4                 B               loc_4758C
.text:00000000000475B8 ; ---------------------------------------------------------------------------
.text:00000000000475B8 loc_475B8                               ; CODE XREF: sub_47490+D4↑j
.text:00000000000475B8                 MOV             W8, #0x3060A0E
.text:00000000000475C0                 B               loc_4758C
.text:00000000000475C4 ; ---------------------------------------------------------------------------
.text:00000000000475C4 loc_475C4                               ; CODE XREF: sub_47490+EC↑j
.text:00000000000475C4                 MOV             W8, #0x5622
.text:00000000000475C8                 B               loc_4758C
.text:00000000000475C8 ; } // starts at 47490
.text:00000000000475C8 ; End of function sub_47490
.text:00000000000475C8 ; ---------------------------------------------------------------------------
.text:00000000000475CC                 ALIGN 0x10
.text:00000000000475D0 ; =============== S U B R O U T I N E =======================================
.text:00000000000475D0                 EXPORT EAS_InitMIDIStream
.text:00000000000475D0 EAS_InitMIDIStream                      ; CODE XREF: .EAS_InitMIDIStream+C↓j
.text:00000000000475D0                                         ; DATA XREF: LOAD:0000000000001230↑o ...
.text:00000000000475D0 ; __unwind {
.text:00000000000475D0                 STRH            WZR, [X0]
.text:00000000000475D4                 STURH           WZR, [X0,#3]
.text:00000000000475D8                 RET
.text:00000000000475D8 ; } // starts at 475D0
.text:00000000000475D8 ; End of function EAS_InitMIDIStream
.text:00000000000475D8 ; ---------------------------------------------------------------------------
.text:00000000000475DC                 ALIGN 0x20
.text:00000000000475E0 ; =============== S U B R O U T I N E =======================================
.text:00000000000475E0 ; Attributes: bp-based frame
.text:00000000000475E0                 EXPORT EAS_ParseMIDIStream
.text:00000000000475E0 EAS_ParseMIDIStream                     ; CODE XREF: .EAS_ParseMIDIStream+C↓j
.text:00000000000475E0                                         ; DATA XREF: LOAD:stru_630↑o ...
.text:00000000000475E0 var_s0          =  0
.text:00000000000475E0 ; __unwind {
.text:00000000000475E0                 STP             X29, X30, [SP,#-0x10+var_s0]!
.text:00000000000475E4                 MOV             X29, SP
.text:00000000000475E8                 SXTB            W8, W3
.text:00000000000475EC                 TBNZ            W8, #0x1F, loc_47614
.text:00000000000475F0                 LDRB            W8, [X2]
.text:00000000000475F4                 CBZ             W8, loc_47648
.text:00000000000475F8                 CMP             W4, #3
.text:00000000000475FC                 STRB            W3, [X2,#6]
.text:0000000000047600                 STRH            WZR, [X2]
.text:0000000000047604                 B.EQ            loc_476D0
.text:0000000000047608 loc_47608                               ; CODE XREF: EAS_ParseMIDIStream+A0↓j
.text:0000000000047608                 MOV             W3, W4
.text:000000000004760C                 BL              sub_479C0
.text:0000000000047610                 B               loc_476D0
.text:0000000000047614 ; ---------------------------------------------------------------------------
.text:0000000000047614 loc_47614                               ; CODE XREF: EAS_ParseMIDIStream+C↑j
.text:0000000000047614                 AND             W8, W3, #0xFF
.text:0000000000047618                 CMP             W8, #0xF7
.text:000000000004761C                 B.HI            loc_476D0
.text:0000000000047620                 CMP             W8, #0xF7
.text:0000000000047624                 STRB            W3, [X2,#3]
.text:0000000000047628                 STRB            WZR, [X2]
.text:000000000004762C                 B.EQ            loc_47638
.text:0000000000047630                 CMP             W8, #0xF0
.text:0000000000047634                 B.NE            loc_47688
.text:0000000000047638 loc_47638                               ; CODE XREF: EAS_ParseMIDIStream+4C↑j
.text:0000000000047638                                         ; EAS_ParseMIDIStream+D0↓j
.text:0000000000047638                 CMP             W4, #3
.text:000000000004763C                 B.EQ            loc_476D0
.text:0000000000047640                 BL              sub_476E0
.text:0000000000047644                 B               loc_476D0
.text:0000000000047648 ; ---------------------------------------------------------------------------
.text:0000000000047648 loc_47648                               ; CODE XREF: EAS_ParseMIDIStream+14↑j
.text:0000000000047648                 LDRB            W8, [X2,#3]
.text:000000000004764C                 CBZ             W8, loc_476CC
.text:0000000000047650                 CMP             W8, #0xBF
.text:0000000000047654                 STRB            W8, [X2,#4]
.text:0000000000047658                 B.HI            loc_4766C
.text:000000000004765C loc_4765C                               ; CODE XREF: EAS_ParseMIDIStream+C8↓j
.text:000000000004765C                 MOV             W8, #0x101
.text:0000000000047660                 STRB            W3, [X2,#5]
.text:0000000000047664                 STRH            W8, [X2]
.text:0000000000047668                 B               loc_476D0
.text:000000000004766C ; ---------------------------------------------------------------------------
.text:000000000004766C loc_4766C                               ; CODE XREF: EAS_ParseMIDIStream+78↑j
.text:000000000004766C                 CMP             W8, #0xDF
.text:0000000000047670                 B.HI            loc_476A4
.text:0000000000047674                 CMP             W4, #3
.text:0000000000047678                 STRB            W3, [X2,#5]
.text:000000000004767C                 STRB            WZR, [X2,#1]
.text:0000000000047680                 B.NE            loc_47608
.text:0000000000047684                 B               loc_476D0
.text:0000000000047688 ; ---------------------------------------------------------------------------
.text:0000000000047688 loc_47688                               ; CODE XREF: EAS_ParseMIDIStream+54↑j
.text:0000000000047688                 ADD             W8, W3, #0xC
.text:000000000004768C                 AND             W8, W8, #0xFF
.text:0000000000047690                 CMP             W8, #3
.text:0000000000047694                 B.CC            loc_476D0
.text:0000000000047698                 MOV             W8, #1
.text:000000000004769C                 STRB            W8, [X2,#1]
.text:00000000000476A0                 B               loc_476D0
.text:00000000000476A4 ; ---------------------------------------------------------------------------
.text:00000000000476A4 loc_476A4                               ; CODE XREF: EAS_ParseMIDIStream+90↑j
.text:00000000000476A4                 CMP             W8, #0xEF
.text:00000000000476A8                 B.LS            loc_4765C
.text:00000000000476AC                 CMP             W8, #0xF0
.text:00000000000476B0                 B.EQ            loc_47638
.text:00000000000476B4                 CMP             W8, #0xF2
.text:00000000000476B8                 STRB            WZR, [X2,#3]
.text:00000000000476BC                 B.NE            loc_476CC
.text:00000000000476C0                 MOV             W8, #1
.text:00000000000476C4                 STRB            W8, [X2]
.text:00000000000476C8                 B               loc_476D0
.text:00000000000476CC ; ---------------------------------------------------------------------------
.text:00000000000476CC loc_476CC                               ; CODE XREF: EAS_ParseMIDIStream+6C↑j
.text:00000000000476CC                                         ; EAS_ParseMIDIStream+DC↑j
.text:00000000000476CC                 STRB            WZR, [X2,#1]
.text:00000000000476D0 loc_476D0                               ; CODE XREF: EAS_ParseMIDIStream+24↑j
.text:00000000000476D0                                         ; EAS_ParseMIDIStream+30↑j ...
.text:00000000000476D0                 MOV             X0, XZR
.text:00000000000476D4                 LDP             X29, X30, [SP+var_s0],#0x10
.text:00000000000476D8                 RET
.text:00000000000476D8 ; } // starts at 475E0
.text:00000000000476D8 ; End of function EAS_ParseMIDIStream
.text:00000000000476D8 ; ---------------------------------------------------------------------------
.text:00000000000476DC                 ALIGN 0x20
.text:00000000000476E0 ; =============== S U B R O U T I N E =======================================
.text:00000000000476E0 ; Attributes: bp-based frame
.text:00000000000476E0 sub_476E0                               ; CODE XREF: EAS_ParseMIDIStream+60↑p
.text:00000000000476E0 var_30          = -0x30
.text:00000000000476E0 var_20          = -0x20
.text:00000000000476E0 var_10          = -0x10
.text:00000000000476E0 var_s0          =  0
.text:00000000000476E0 ; __unwind {
.text:00000000000476E0                 STR             X23, [SP,#-0x10+var_30]!
.text:00000000000476E4                 STP             X22, X21, [SP,#0x30+var_20]
.text:00000000000476E8                 STP             X20, X19, [SP,#0x30+var_10]
.text:00000000000476EC                 STP             X29, X30, [SP,#0x30+var_s0]
.text:00000000000476F0                 ADD             X29, SP, #0x30
.text:00000000000476F4                 MOV             X20, X2
.text:00000000000476F8                 AND             W9, W3, #0xFF
.text:00000000000476FC                 CMP             W9, #0xF0
.text:0000000000047700                 B.NE            loc_4770C
.text:0000000000047704                 STRB            WZR, [X20,#2]
.text:0000000000047708                 B               loc_4774C
.text:000000000004770C ; ---------------------------------------------------------------------------
.text:000000000004770C loc_4770C                               ; CODE XREF: sub_476E0+20↑j
.text:000000000004770C                 MOV             X23, X20
.text:0000000000047710                 MOV             W22, W4
.text:0000000000047714                 MOV             X19, X1
.text:0000000000047718                 LDRB            W8, [X23,#2]!
.text:000000000004771C                 MOV             X21, X0
.text:0000000000047720                 CMP             W9, #0xF7
.text:0000000000047724                 B.NE            loc_47760
.text:0000000000047728                 CMP             W22, #3
.text:000000000004772C                 B.EQ            loc_47744
.text:0000000000047730                 CMP             W8, #0xA
.text:0000000000047734                 B.NE            loc_47744
.text:0000000000047738                 LDR             X0, [X21,#0x170]
.text:000000000004773C                 MOV             X1, X19
.text:0000000000047740                 BL              .VMUpdateMIPTable
.text:0000000000047744 loc_47744                               ; CODE XREF: sub_476E0+4C↑j
.text:0000000000047744                                         ; sub_476E0+54↑j ...
.text:0000000000047744                 MOV             W8, #0x16
.text:0000000000047748 loc_47748                               ; CODE XREF: .text:00000000000477A0↓j
.text:0000000000047748                                         ; .text:00000000000477B4↓j ...
.text:0000000000047748                 STRB            W8, [X23]
.text:000000000004774C loc_4774C                               ; CODE XREF: sub_476E0+28↑j
.text:000000000004774C                                         ; .text:000000000004784C↓j ...
.text:000000000004774C                 LDP             X29, X30, [SP,#0x30+var_s0]
.text:0000000000047750                 LDP             X20, X19, [SP,#0x30+var_10]
.text:0000000000047754                 LDP             X22, X21, [SP,#0x30+var_20]
.text:0000000000047758                 LDR             X23, [SP+0x30+var_30],#0x40
.text:000000000004775C                 RET
.text:0000000000047760 ; ---------------------------------------------------------------------------
.text:0000000000047760 loc_47760                               ; CODE XREF: sub_476E0+44↑j
.text:0000000000047760                 CMP             W8, #0x16
.text:0000000000047764                 B.HI            loc_47744
.text:0000000000047768                 ADRP            X9, #unk_58A4@PAGE
.text:000000000004776C                 ADD             X9, X9, #unk_58A4@PAGEOFF
.text:0000000000047770                 MOV             W4, W3
.text:0000000000047774                 ADR             X10, loc_47744
.text:0000000000047778                 LDRB            W11, [X9,X8]
.text:000000000004777C                 ADD             X10, X10, X11,LSL#2
.text:0000000000047780                 BR              X10
.text:0000000000047780 ; End of function sub_476E0
.text:0000000000047784 ; ---------------------------------------------------------------------------
.text:0000000000047784                 ANDS            W8, W4, #0xFF
.text:0000000000047788                 B.EQ            loc_478DC
.text:000000000004778C                 CMP             W8, #0x7F
.text:0000000000047790                 B.EQ            loc_479B8
.text:0000000000047794                 CMP             W8, #0x7E ; '~'
.text:0000000000047798                 B.NE            loc_47744
.text:000000000004779C                 MOV             W8, #1
.text:00000000000477A0                 B               loc_47748
.text:00000000000477A4 ; ---------------------------------------------------------------------------
.text:00000000000477A4                 AND             W8, W4, #0xFF
.text:00000000000477A8                 CMP             W8, #0x7F
.text:00000000000477AC                 B.NE            loc_47744
.text:00000000000477B0                 MOV             W8, #2
.text:00000000000477B4                 B               loc_47748
.text:00000000000477B8 ; ---------------------------------------------------------------------------
.text:00000000000477B8                 AND             W8, W4, #0xFF
.text:00000000000477BC                 CMP             W8, #9
.text:00000000000477C0                 B.NE            loc_47744
.text:00000000000477C4                 MOV             W8, #3
.text:00000000000477C8                 B               loc_47748
.text:00000000000477CC ; ---------------------------------------------------------------------------
.text:00000000000477CC                 AND             W8, W4, #0xFF
.text:00000000000477D0                 CMP             W8, #0x7F
.text:00000000000477D4                 B.NE            loc_47744
.text:00000000000477D8                 MOV             W8, #5
.text:00000000000477DC                 B               loc_47748
.text:00000000000477E0 ; ---------------------------------------------------------------------------
.text:00000000000477E0                 AND             W8, W4, #0xFF
.text:00000000000477E4                 CMP             W8, #1
.text:00000000000477E8                 B.NE            loc_47744
.text:00000000000477EC                 MOV             W8, #7
.text:00000000000477F0                 B               loc_47748
.text:00000000000477F4 ; ---------------------------------------------------------------------------
.text:00000000000477F4                 CMP             W22, #3
.text:00000000000477F8                 B.EQ            loc_47944
.text:00000000000477FC                 LDRB            W8, [X20,#5]
.text:0000000000047800                 AND             X9, X4, #0xFF
.text:0000000000047804                 MOV             X0, X19
.text:0000000000047808                 LSL             X8, X8, #1
.text:000000000004780C                 ORR             X8, X8, X9,LSL#8
.text:0000000000047810                 MUL             X8, X8, X8
.text:0000000000047814                 LSR             X1, X8, #0xF
.text:0000000000047818                 BL              .VMSetVolume
.text:000000000004781C                 MOV             W8, #0x15
.text:0000000000047820                 B               loc_47748
.text:0000000000047824 ; ---------------------------------------------------------------------------
.text:0000000000047824                 AND             W8, W4, #0xFF
.text:0000000000047828                 CMP             W8, #1
.text:000000000004782C                 B.NE            loc_47744
.text:0000000000047830                 CMP             W22, #3
.text:0000000000047834                 B.EQ            loc_47840
.text:0000000000047838                 MOV             X0, X19
.text:000000000004783C                 BL              .VMInitMIPTable
.text:0000000000047840 loc_47840                               ; CODE XREF: .text:0000000000047834↑j
.text:0000000000047840                 MOV             W8, #0xA
.text:0000000000047844                 STRB            WZR, [X20,#5]
.text:0000000000047848                 STRB            W8, [X20,#2]
.text:000000000004784C                 B               loc_4774C
.text:0000000000047850 ; ---------------------------------------------------------------------------
.text:0000000000047850                 AND             W8, W4, #0xFF
.text:0000000000047854                 CMP             W8, #0xF
.text:0000000000047858                 B.HI            loc_4799C
.text:000000000004785C                 MOV             W8, #0xB
.text:0000000000047860                 STRB            W4, [X20,#6]
.text:0000000000047864                 STRB            W8, [X20,#2]
.text:0000000000047868                 B               loc_4774C
.text:000000000004786C ; ---------------------------------------------------------------------------
.text:000000000004786C                 CMP             W22, #3
.text:0000000000047870                 B.EQ            loc_47888
.text:0000000000047874                 LDR             X0, [X21,#0x170]
.text:0000000000047878                 MOV             X1, X19
.text:000000000004787C                 LDRB            W3, [X20,#5]
.text:0000000000047880                 LDRB            W2, [X20,#6]
.text:0000000000047884                 BL              .VMSetMIPEntry
.text:0000000000047888 loc_47888                               ; CODE XREF: .text:0000000000047870↑j
.text:0000000000047888                 LDRB            W8, [X20,#5]
.text:000000000004788C                 MOV             W9, #0xA
.text:0000000000047890                 STRB            W9, [X20,#2]
.text:0000000000047894                 ADD             W8, W8, #1
.text:0000000000047898                 CMP             W8, #0x10
.text:000000000004789C                 STRB            W8, [X20,#5]
.text:00000000000478A0                 B.NE            loc_4774C
.text:00000000000478A4                 CMP             W22, #3
.text:00000000000478A8                 B.EQ            loc_47944
.text:00000000000478AC                 LDR             X0, [X21,#0x170]
.text:00000000000478B0                 MOV             X1, X19
.text:00000000000478B4                 BL              .VMUpdateMIPTable
.text:00000000000478B8                 MOV             W8, #0x15
.text:00000000000478BC                 B               loc_47748
.text:00000000000478C0 ; ---------------------------------------------------------------------------
.text:00000000000478C0                 AND             W8, W4, #0xFF
.text:00000000000478C4                 CMP             W8, #1
.text:00000000000478C8                 B.NE            loc_47744
.text:00000000000478CC                 B               loc_478DC
.text:00000000000478D0 ; ---------------------------------------------------------------------------
.text:00000000000478D0                 AND             W8, W4, #0xFF
.text:00000000000478D4                 CMP             W8, #0x3A ; ':'
.text:00000000000478D8                 B.NE            loc_47744
.text:00000000000478DC loc_478DC                               ; CODE XREF: .text:0000000000047788↑j
.text:00000000000478DC                                         ; .text:00000000000478CC↑j
.text:00000000000478DC                 MOV             W8, #0xC
.text:00000000000478E0                 B               loc_47748
.text:00000000000478E4 ; ---------------------------------------------------------------------------
.text:00000000000478E4                 AND             W8, W4, #0xFF
.text:00000000000478E8                 CMP             W8, #4
.text:00000000000478EC                 B.NE            loc_47744
.text:00000000000478F0                 MOV             W8, #0xF
.text:00000000000478F4                 B               loc_47748
.text:00000000000478F8 ; ---------------------------------------------------------------------------
.text:00000000000478F8                 MOV             W8, #0x12
.text:00000000000478FC                 B               loc_47748
.text:0000000000047900 ; ---------------------------------------------------------------------------
.text:0000000000047900                 MOV             W8, #0x13
.text:0000000000047904                 B               loc_47748
.text:0000000000047908 ; ---------------------------------------------------------------------------
.text:0000000000047908                 ORR             W8, W4, #2
.text:000000000004790C                 AND             W8, W8, #0xFF
.text:0000000000047910                 CMP             W8, #3
.text:0000000000047914                 B.NE            loc_47744
.text:0000000000047918                 CMP             W22, #3
.text:000000000004791C                 B.EQ            loc_47944
.text:0000000000047920                 LDRB            W8, [X20,#7]
.text:0000000000047924                 MOV             X1, X19
.text:0000000000047928                 MOV             W2, WZR
.text:000000000004792C                 ORR             W8, W8, #1
.text:0000000000047930                 STRB            W8, [X20,#7]
.text:0000000000047934                 LDR             X0, [X21,#0x170]
.text:0000000000047938                 BL              .VMReset
.text:000000000004793C                 MOV             X0, X19
.text:0000000000047940                 BL              .VMInitMIPTable
.text:0000000000047944 loc_47944                               ; CODE XREF: .text:00000000000477F8↑j
.text:0000000000047944                                         ; .text:00000000000478A8↑j ...
.text:0000000000047944                 MOV             W8, #0x15
.text:0000000000047948                 B               loc_47748
.text:000000000004794C ; ---------------------------------------------------------------------------
.text:000000000004794C                 AND             W8, W4, #0xFF
.text:0000000000047950                 CMP             W8, #0xB
.text:0000000000047954                 B.EQ            loc_479B0
.text:0000000000047958                 CMP             W8, #4
.text:000000000004795C                 B.NE            loc_47744
.text:0000000000047960                 MOV             W8, #6
.text:0000000000047964                 B               loc_47748
.text:0000000000047968 ; ---------------------------------------------------------------------------
.text:0000000000047968                 MOV             W8, #8
.text:000000000004796C                 STRB            W4, [X20,#5]
.text:0000000000047970                 STRB            W8, [X20,#2]
.text:0000000000047974                 B               loc_4774C
.text:0000000000047978 ; ---------------------------------------------------------------------------
.text:0000000000047978                 AND             W8, W4, #0xFF
.text:000000000004797C                 CMP             W8, #1
.text:0000000000047980                 B.NE            loc_47744
.text:0000000000047984                 MOV             W8, #0x10
.text:0000000000047988                 B               loc_47748
.text:000000000004798C ; ---------------------------------------------------------------------------
.text:000000000004798C                 MOV             W8, #0x11
.text:0000000000047990                 B               loc_47748
.text:0000000000047994 ; ---------------------------------------------------------------------------
.text:0000000000047994                 MOV             W8, #0x14
.text:0000000000047998                 B               loc_47748
.text:000000000004799C ; ---------------------------------------------------------------------------
.text:000000000004799C loc_4799C                               ; CODE XREF: .text:0000000000047858↑j
.text:000000000004799C                 CMP             W22, #3
.text:00000000000479A0                 B.EQ            loc_47744
.text:00000000000479A4                 MOV             X0, X19
.text:00000000000479A8                 BL              .VMInitMIPTable
.text:00000000000479AC                 B               loc_47744
.text:00000000000479B0 ; ---------------------------------------------------------------------------
.text:00000000000479B0 loc_479B0                               ; CODE XREF: .text:0000000000047954↑j
.text:00000000000479B0                 MOV             W8, #9
.text:00000000000479B4                 B               loc_47748
.text:00000000000479B8 ; ---------------------------------------------------------------------------
.text:00000000000479B8 loc_479B8                               ; CODE XREF: .text:0000000000047790↑j
.text:00000000000479B8                 MOV             W8, #4
.text:00000000000479BC                 B               loc_47748
.text:00000000000479BC ; } // starts at 476E0
.text:00000000000479C0 ; =============== S U B R O U T I N E =======================================
.text:00000000000479C0 ; Attributes: bp-based frame
.text:00000000000479C0 sub_479C0                               ; CODE XREF: EAS_ParseMIDIStream+2C↑p
.text:00000000000479C0 var_20          = -0x20
.text:00000000000479C0 var_10          = -0x10
.text:00000000000479C0 var_s0          =  0
.text:00000000000479C0 arg_0           =  0x10
.text:00000000000479C0 arg_10          =  0x20
.text:00000000000479C0 arg_20          =  0x30
.text:00000000000479C0 arg_30          =  0x40
.text:00000000000479C0 arg_40          =  0x50
.text:00000000000479C0 arg_50          =  0x60
.text:00000000000479C0 arg_60          =  0x70
.text:00000000000479C0 arg_70          =  0x80
.text:00000000000479C0 arg_80          =  0x90
.text:00000000000479C0 arg_90          =  0xA0
.text:00000000000479C0 arg_A0          =  0xB0
.text:00000000000479C0 arg_B0          =  0xC0
.text:00000000000479C0 ; __unwind {
.text:00000000000479C0                 STR             X21, [SP,#-0x10+var_20]!
.text:00000000000479C4                 STP             X20, X19, [SP,#0x20+var_10]
.text:00000000000479C8                 STP             X29, X30, [SP,#0x20+var_s0]
.text:00000000000479CC                 ADD             X29, SP, #0x20
.text:00000000000479D0                 LDRB            W9, [X2,#4]
.text:00000000000479D4                 AND             W8, W9, #0xF0
.text:00000000000479D8                 SUB             W8, W8, #0x80
.text:00000000000479DC                 LSR             W8, W8, #4
.text:00000000000479E0                 CMP             W8, #6
.text:00000000000479E4                 B.HI            loc_47B3C
.text:00000000000479E8                 AND             W19, W9, #0xF
.text:00000000000479EC                 ADRP            X9, #unk_58BB@PAGE
.text:00000000000479F0                 ADD             X9, X9, #unk_58BB@PAGEOFF
.text:00000000000479F4                 MOV             X20, X2
.text:00000000000479F8                 MOV             X21, X0
.text:00000000000479FC                 ADR             X10, loc_47A0C
.text:0000000000047A00                 LDRB            W11, [X9,X8]
.text:0000000000047A04                 ADD             X10, X10, X11,LSL#2
.text:0000000000047A08                 BR              X10
.text:0000000000047A0C ; ---------------------------------------------------------------------------
.text:0000000000047A0C loc_47A0C                               ; DATA XREF: sub_479C0+3C↑o
.text:0000000000047A0C                 CMP             W3, #2
.text:0000000000047A10                 B.GT            loc_47B3C
.text:0000000000047A14                 LDR             X0, [X21,#0x170]
.text:0000000000047A18                 MOV             W2, W19
.text:0000000000047A1C                 LDRB            W3, [X20,#5]
.text:0000000000047A20                 LDRB            W4, [X20,#6]
.text:0000000000047A24                 B               loc_47B2C
.text:0000000000047A28 ; ---------------------------------------------------------------------------
.text:0000000000047A28                 LDRB            W4, [X20,#6]
.text:0000000000047A2C                 CBZ             W4, loc_47B14
.text:0000000000047A30                 LDRB            W8, [X20,#7]
.text:0000000000047A34                 ORR             W8, W8, #2
.text:0000000000047A38                 STRB            W8, [X20,#7]
.text:0000000000047A3C                 CBNZ            W3, loc_47B3C
.text:0000000000047A40                 LDR             X0, [X21,#0x170]
.text:0000000000047A44                 MOV             W2, W19
.text:0000000000047A48                 LDRB            W3, [X20,#5]
.text:0000000000047A4C                 LDP             X29, X30, [SP,#0x20+var_s0]
.text:0000000000047A50                 LDP             X20, X19, [SP,#0x20+var_10]
.text:0000000000047A54                 LDR             X21, [SP+0x20+var_20],#0x30
.text:0000000000047A58                 B               .VMStartNote
.text:0000000000047A5C ; ---------------------------------------------------------------------------
.text:0000000000047A5C                 CMP             W3, #2
.text:0000000000047A60                 B.GT            loc_47A78
.text:0000000000047A64                 LDR             X0, [X21,#0x170]
.text:0000000000047A68                 MOV             W2, W19
.text:0000000000047A6C                 LDRB            W4, [X20,#6]
.text:0000000000047A70                 LDRB            W3, [X20,#5]
.text:0000000000047A74                 BL              .VMControlChange
.text:0000000000047A78 loc_47A78                               ; CODE XREF: sub_479C0+A0↑j
.text:0000000000047A78                 LDR             X8, [X20,#8]
.text:0000000000047A7C                 TBZ             W8, #1, loc_47B3C
.text:0000000000047A80                 LDRB            W3, [X20,#5]
.text:0000000000047A84                 MOV             W2, W19
.text:0000000000047A88                 LDRB            W4, [X20,#6]
.text:0000000000047A8C                 AND             X1, X8, #0xFFFC0000
.text:0000000000047A90                 LDP             X29, X30, [SP,#-0x10+arg_20]
.text:0000000000047A94                 LDP             X20, X19, [SP,#-0x10+arg_10]
.text:0000000000047A98                 MOV             X0, X21
.text:0000000000047A9C                 LDR             X21, [SP-0x10+arg_0],#0x30
.text:0000000000047AA0                 B               .JET_Event
.text:0000000000047AA4 ; ---------------------------------------------------------------------------
.text:0000000000047AA4                 CMP             W3, #2
.text:0000000000047AA8                 B.GT            loc_47B3C
.text:0000000000047AAC                 LDR             X0, [X21,#0x170]
.text:0000000000047AB0                 MOV             W2, W19
.text:0000000000047AB4                 LDRB            W3, [X20,#5]
.text:0000000000047AB8                 LDP             X29, X30, [SP,#-0x40+arg_50]
.text:0000000000047ABC                 LDP             X20, X19, [SP,#-0x40+arg_40]
.text:0000000000047AC0                 LDR             X21, [SP-0x40+arg_30],#0x30
.text:0000000000047AC4                 B               .VMProgramChange
.text:0000000000047AC8 ; ---------------------------------------------------------------------------
.text:0000000000047AC8                 CMP             W3, #2
.text:0000000000047ACC                 B.GT            loc_47B3C
.text:0000000000047AD0                 LDRB            W2, [X20,#5]
.text:0000000000047AD4                 MOV             X0, X1
.text:0000000000047AD8                 MOV             W1, W19
.text:0000000000047ADC                 LDP             X29, X30, [SP,#-0x70+arg_80]
.text:0000000000047AE0                 LDP             X20, X19, [SP,#-0x70+arg_70]
.text:0000000000047AE4                 LDR             X21, [SP-0x70+arg_60],#0x30
.text:0000000000047AE8                 B               .VMChannelPressure
.text:0000000000047AEC ; ---------------------------------------------------------------------------
.text:0000000000047AEC                 CMP             W3, #2
.text:0000000000047AF0                 B.GT            loc_47B3C
.text:0000000000047AF4                 LDRB            W2, [X20,#5]
.text:0000000000047AF8                 MOV             X0, X1
.text:0000000000047AFC                 LDRB            W3, [X20,#6]
.text:0000000000047B00                 MOV             W1, W19
.text:0000000000047B04                 LDP             X29, X30, [SP,#-0xA0+arg_B0]
.text:0000000000047B08                 LDP             X20, X19, [SP,#-0xA0+arg_A0]
.text:0000000000047B0C                 LDR             X21, [SP-0xA0+arg_90],#0x30
.text:0000000000047B10                 B               .VMPitchBend
.text:0000000000047B14 ; ---------------------------------------------------------------------------
.text:0000000000047B14 loc_47B14                               ; CODE XREF: sub_479C0+6C↑j
.text:0000000000047B14                 CMP             W3, #2
.text:0000000000047B18                 B.GT            loc_47B3C
.text:0000000000047B1C                 LDR             X0, [X21,#0x170]
.text:0000000000047B20                 MOV             W2, W19
.text:0000000000047B24                 LDRB            W3, [X20,#5]
.text:0000000000047B28                 MOV             W4, WZR
.text:0000000000047B2C loc_47B2C                               ; CODE XREF: sub_479C0+64↑j
.text:0000000000047B2C                 LDP             X29, X30, [SP,#0x20]
.text:0000000000047B30                 LDP             X20, X19, [SP,#0x10]
.text:0000000000047B34                 LDR             X21, [SP+0],#0x30
.text:0000000000047B38                 B               .VMStopNote
.text:0000000000047B3C ; ---------------------------------------------------------------------------
.text:0000000000047B3C loc_47B3C                               ; CODE XREF: sub_479C0+24↑j
.text:0000000000047B3C                                         ; sub_479C0+50↑j ...
.text:0000000000047B3C                 LDP             X29, X30, [SP,#0x20+var_s0]
.text:0000000000047B40                 LDP             X20, X19, [SP,#0x20+var_10]
.text:0000000000047B44                 LDR             X21, [SP+0x20+var_20],#0x30
.text:0000000000047B48                 RET
.text:0000000000047B48 ; } // starts at 479C0
.text:0000000000047B48 ; End of function sub_479C0
.text:0000000000047B48 ; ---------------------------------------------------------------------------
.text:0000000000047B4C                 ALIGN 0x10
.text:0000000000047B50 ; =============== S U B R O U T I N E =======================================
.text:0000000000047B50 ; Attributes: bp-based frame
.text:0000000000047B50                 EXPORT EAS_MixEngineInit
.text:0000000000047B50 EAS_MixEngineInit                       ; CODE XREF: .EAS_MixEngineInit+C↓j
.text:0000000000047B50                                         ; DATA XREF: LOAD:00000000000012A8↑o ...
.text:0000000000047B50 var_10          = -0x10
.text:0000000000047B50 var_s0          =  0
.text:0000000000047B50 ; __unwind {
.text:0000000000047B50                 STR             X19, [SP,#-0x10+var_10]!
.text:0000000000047B54                 STP             X29, X30, [SP,#0x10+var_s0]
.text:0000000000047B58                 ADD             X29, SP, #0x10
.text:0000000000047B5C                 LDRB            W8, [X0,#0x18B]
.text:0000000000047B60                 MOV             X19, X0
.text:0000000000047B64                 CBZ             W8, loc_47B8C
.text:0000000000047B68                 MOV             W0, #2
.text:0000000000047B6C                 BL              .EAS_CMEnumData
.text:0000000000047B70                 STR             X0, [X19,#0x98]
.text:0000000000047B74                 CBZ             X0, loc_47BA0
.text:0000000000047B78 loc_47B78                               ; CODE XREF: EAS_MixEngineInit+4C↓j
.text:0000000000047B78                 MOV             W1, WZR
.text:0000000000047B7C                 MOV             W2, #0x800
.text:0000000000047B80                 BL              .EAS_HWMemSet
.text:0000000000047B84                 MOV             X0, XZR
.text:0000000000047B88                 B               loc_47BA4
.text:0000000000047B8C ; ---------------------------------------------------------------------------
.text:0000000000047B8C loc_47B8C                               ; CODE XREF: EAS_MixEngineInit+14↑j
.text:0000000000047B8C                 LDR             X0, [X19]
.text:0000000000047B90                 MOV             W1, #0x800
.text:0000000000047B94                 BL              .EAS_HWMalloc
.text:0000000000047B98                 STR             X0, [X19,#0x98]
.text:0000000000047B9C                 CBNZ            X0, loc_47B78
.text:0000000000047BA0 loc_47BA0                               ; CODE XREF: EAS_MixEngineInit+24↑j
.text:0000000000047BA0                 MOV             X0, #0xFFFFFFFFFFFFFFFD
.text:0000000000047BA4 loc_47BA4                               ; CODE XREF: EAS_MixEngineInit+38↑j
.text:0000000000047BA4                 LDP             X29, X30, [SP,#0x10+var_s0]
.text:0000000000047BA8                 LDR             X19, [SP+0x10+var_10],#0x20
.text:0000000000047BAC                 RET
.text:0000000000047BAC ; } // starts at 47B50
.text:0000000000047BAC ; End of function EAS_MixEngineInit
.text:0000000000047BB0 ; =============== S U B R O U T I N E =======================================
.text:0000000000047BB0                 EXPORT EAS_MixEnginePrep
.text:0000000000047BB0 EAS_MixEnginePrep                       ; CODE XREF: .EAS_MixEnginePrep+C↓j
.text:0000000000047BB0                                         ; DATA XREF: LOAD:00000000000004F8↑o ...
.text:0000000000047BB0 ; __unwind {
.text:0000000000047BB0                 LDR             X0, [X0,#0x98]
.text:0000000000047BB4                 LSL             X2, X1, #4
.text:0000000000047BB8                 MOV             W1, WZR
.text:0000000000047BBC                 B               .EAS_HWMemSet
.text:0000000000047BBC ; } // starts at 47BB0
.text:0000000000047BBC ; End of function EAS_MixEnginePrep
.text:0000000000047BC0 ; =============== S U B R O U T I N E =======================================
.text:0000000000047BC0                 EXPORT EAS_MixEnginePost
.text:0000000000047BC0 EAS_MixEnginePost                       ; CODE XREF: .EAS_MixEnginePost+C↓j
.text:0000000000047BC0                                         ; DATA XREF: LOAD:00000000000012C0↑o ...
.text:0000000000047BC0 ; __unwind {
.text:0000000000047BC0                 MOV             X3, X1
.text:0000000000047BC4                 LSL             W10, W3, #1
.text:0000000000047BC8                 TST             W10, #0xFFFE
.text:0000000000047BCC                 B.EQ            loc_47C90
.text:0000000000047BD0                 LDP             X9, X8, [X0,#0x98]
.text:0000000000047BD4                 SUB             W11, W10, #2
.text:0000000000047BD8                 AND             X11, X11, #0xFFFF
.text:0000000000047BDC                 LDRH            W13, [X0,#0x188]
.text:0000000000047BE0                 ADD             X11, X11, #2
.text:0000000000047BE4                 ADD             X14, X9, X11,LSL#3
.text:0000000000047BE8                 ADD             X12, X8, X11,LSL#1
.text:0000000000047BEC                 CMP             X8, X14
.text:0000000000047BF0                 CCMP            X9, X12, #2, CC
.text:0000000000047BF4                 LSR             X12, X13, #4
.text:0000000000047BF8                 B.CC            loc_47C58
.text:0000000000047BFC                 DUP             V0.2D, X12
.text:0000000000047C00                 MVNI            V1.2S, #0x7F,MSL#8
.text:0000000000047C04                 MOVI            V2.2S, #0x7F,MSL#8
.text:0000000000047C08                 UMOV            X10, V0.D[1]
.text:0000000000047C0C loc_47C0C                               ; CODE XREF: EAS_MixEnginePost+90↓j
.text:0000000000047C0C                 LDR             Q3, [X9],#0x10
.text:0000000000047C10                 SSHR            V3.2D, V3.2D, #7
.text:0000000000047C14                 SUBS            X11, X11, #2
.text:0000000000047C18                 FMOV            X12, D0
.text:0000000000047C1C                 FMOV            X14, D3
.text:0000000000047C20                 UMOV            X13, V3.D[1]
.text:0000000000047C24                 MUL             X12, X14, X12
.text:0000000000047C28                 MUL             X13, X13, X10
.text:0000000000047C2C                 FMOV            D3, X12
.text:0000000000047C30                 INS             V3.D[1], X13
.text:0000000000047C34                 SHRN            V3.2S, V3.2D, #9
.text:0000000000047C38                 SMAX            V3.2S, V3.2S, V1.2S
.text:0000000000047C3C                 SMIN            V3.2S, V3.2S, V2.2S
.text:0000000000047C40                 UMOV            W12, V3.S[1]
.text:0000000000047C44                 FMOV            W13, S3
.text:0000000000047C48                 STRH            W12, [X8,#2]
.text:0000000000047C4C                 STRH            W13, [X8],#4
.text:0000000000047C50                 B.NE            loc_47C0C
.text:0000000000047C54                 B               loc_47C90
.text:0000000000047C58 ; ---------------------------------------------------------------------------
.text:0000000000047C58 loc_47C58                               ; CODE XREF: EAS_MixEnginePost+38↑j
.text:0000000000047C58                 MOV             W11, #0xFFFF8000
.text:0000000000047C5C                 MOV             W13, #0x7FFF
.text:0000000000047C60 loc_47C60                               ; CODE XREF: EAS_MixEnginePost+CC↓j
.text:0000000000047C60                 LDR             X14, [X9],#8
.text:0000000000047C64                 LSR             X14, X14, #7
.text:0000000000047C68                 MUL             X14, X14, X12
.text:0000000000047C6C                 SUB             W10, W10, #1
.text:0000000000047C70                 AND             W15, W10, #0xFFFF
.text:0000000000047C74                 LSR             X14, X14, #9
.text:0000000000047C78                 CMN             W14, #8,LSL#12
.text:0000000000047C7C                 CSEL            W14, W14, W11, GT
.text:0000000000047C80                 CMP             W14, W13
.text:0000000000047C84                 CSEL            W14, W14, W13, LT
.text:0000000000047C88                 STRH            W14, [X8],#2
.text:0000000000047C8C                 CBNZ            W15, loc_47C60
.text:0000000000047C90 loc_47C90                               ; CODE XREF: EAS_MixEnginePost+C↑j
.text:0000000000047C90                                         ; EAS_MixEnginePost+94↑j
.text:0000000000047C90                 LDR             X8, [X0,#0x30]
.text:0000000000047C94                 CBZ             X8, locret_47CB0
.text:0000000000047C98                 LDR             X9, [X0,#0x28]
.text:0000000000047C9C                 LDR             X1, [X0,#0xA0]
.text:0000000000047CA0                 MOV             X0, X8
.text:0000000000047CA4                 LDR             X4, [X9,#8]
.text:0000000000047CA8                 MOV             X2, X1
.text:0000000000047CAC                 BR              X4
.text:0000000000047CB0 ; ---------------------------------------------------------------------------
.text:0000000000047CB0 locret_47CB0                            ; CODE XREF: EAS_MixEnginePost+D4↑j
.text:0000000000047CB0                 RET
.text:0000000000047CB0 ; } // starts at 47BC0
.text:0000000000047CB0 ; End of function EAS_MixEnginePost
.text:0000000000047CB0 ; ---------------------------------------------------------------------------
.text:0000000000047CB4                 ALIGN 8
.text:0000000000047CB8 ; =============== S U B R O U T I N E =======================================
.text:0000000000047CB8                 EXPORT SynthMasterGain
.text:0000000000047CB8 SynthMasterGain                         ; DATA XREF: LOAD:0000000000001008↑o
.text:0000000000047CB8 ; __unwind {
.text:0000000000047CB8                 TST             W3, #0xFFFF
.text:0000000000047CBC                 B.EQ            locret_47D38
.text:0000000000047CC0                 SUB             W10, W3, #1
.text:0000000000047CC4                 AND             X12, X10, #0xFFFF
.text:0000000000047CC8                 AND             X8, X2, #0xFFFF
.text:0000000000047CCC                 ADD             X9, X12, #1
.text:0000000000047CD0                 CMP             X9, #2
.text:0000000000047CD4                 B.CC            loc_47CF8
.text:0000000000047CD8                 AND             X10, X10, #0xFFFF
.text:0000000000047CDC                 ADD             X10, X10, #1
.text:0000000000047CE0                 ADD             X11, X0, X10,LSL#3
.text:0000000000047CE4                 CMP             X11, X1
.text:0000000000047CE8                 B.LS            loc_47D3C
.text:0000000000047CEC                 ADD             X10, X1, X10,LSL#1
.text:0000000000047CF0                 CMP             X10, X0
.text:0000000000047CF4                 B.LS            loc_47D3C
.text:0000000000047CF8 loc_47CF8                               ; CODE XREF: SynthMasterGain+1C↑j
.text:0000000000047CF8                 MOV             X9, X0
.text:0000000000047CFC                 MOV             X10, X1
.text:0000000000047D00 loc_47D00                               ; CODE XREF: SynthMasterGain+100↓j
.text:0000000000047D00                 MOV             W11, #0xFFFF8000
.text:0000000000047D04                 MOV             W12, #0x7FFF
.text:0000000000047D08 loc_47D08                               ; CODE XREF: SynthMasterGain+7C↓j
.text:0000000000047D08                 LDR             X13, [X9],#8
.text:0000000000047D0C                 LSR             X13, X13, #7
.text:0000000000047D10                 MUL             X13, X13, X8
.text:0000000000047D14                 SUB             W3, W3, #1
.text:0000000000047D18                 AND             W14, W3, #0xFFFF
.text:0000000000047D1C                 LSR             X13, X13, #9
.text:0000000000047D20                 CMN             W13, #8,LSL#12
.text:0000000000047D24                 CSEL            W13, W13, W11, GT
.text:0000000000047D28                 CMP             W13, W12
.text:0000000000047D2C                 CSEL            W13, W13, W12, LT
.text:0000000000047D30                 STRH            W13, [X10],#2
.text:0000000000047D34                 CBNZ            W14, loc_47D08
.text:0000000000047D38 locret_47D38                            ; CODE XREF: SynthMasterGain+4↑j
.text:0000000000047D38                                         ; SynthMasterGain+104↓j
.text:0000000000047D38                 RET
.text:0000000000047D3C ; ---------------------------------------------------------------------------
.text:0000000000047D3C loc_47D3C                               ; CODE XREF: SynthMasterGain+30↑j
.text:0000000000047D3C                                         ; SynthMasterGain+3C↑j
.text:0000000000047D3C                 DUP             V0.2D, X8
.text:0000000000047D40                 MVN             W10, W12
.text:0000000000047D44                 AND             W11, W10, #1
.text:0000000000047D48                 MVNI            V1.2S, #0x7F,MSL#8
.text:0000000000047D4C                 MOVI            V2.2S, #0x7F,MSL#8
.text:0000000000047D50                 SUB             X10, X9, X11
.text:0000000000047D54                 ADD             X12, X12, #1
.text:0000000000047D58                 SUB             W3, W3, W10
.text:0000000000047D5C                 ADD             X9, X0, X10,LSL#3
.text:0000000000047D60                 UMOV            X13, V0.D[1]
.text:0000000000047D64                 ADD             X10, X1, X10,LSL#1
.text:0000000000047D68                 SUB             X12, X12, X11
.text:0000000000047D6C loc_47D6C                               ; CODE XREF: SynthMasterGain+FC↓j
.text:0000000000047D6C                 LDR             Q3, [X0],#0x10
.text:0000000000047D70                 SSHR            V3.2D, V3.2D, #7
.text:0000000000047D74                 SUBS            X12, X12, #2
.text:0000000000047D78                 FMOV            X14, D0
.text:0000000000047D7C                 FMOV            X16, D3
.text:0000000000047D80                 UMOV            X15, V3.D[1]
.text:0000000000047D84                 MUL             X14, X16, X14
.text:0000000000047D88                 MUL             X15, X15, X13
.text:0000000000047D8C                 FMOV            D3, X14
.text:0000000000047D90                 INS             V3.D[1], X15
.text:0000000000047D94                 SHRN            V3.2S, V3.2D, #9
.text:0000000000047D98                 SMAX            V3.2S, V3.2S, V1.2S
.text:0000000000047D9C                 SMIN            V3.2S, V3.2S, V2.2S
.text:0000000000047DA0                 UMOV            W14, V3.S[1]
.text:0000000000047DA4                 FMOV            W15, S3
.text:0000000000047DA8                 STRH            W14, [X1,#2]
.text:0000000000047DAC                 STRH            W15, [X1]
.text:0000000000047DB0                 ADD             X1, X1, #4
.text:0000000000047DB4                 B.NE            loc_47D6C
.text:0000000000047DB8                 CBNZ            W11, loc_47D00
.text:0000000000047DBC                 B               locret_47D38
.text:0000000000047DBC ; } // starts at 47CB8
.text:0000000000047DBC ; End of function SynthMasterGain
.text:0000000000047DC0 ; =============== S U B R O U T I N E =======================================
.text:0000000000047DC0 ; Attributes: bp-based frame
.text:0000000000047DC0                 EXPORT EAS_MixEngineShutdown
.text:0000000000047DC0 EAS_MixEngineShutdown                   ; CODE XREF: .EAS_MixEngineShutdown+C↓j
.text:0000000000047DC0                                         ; DATA XREF: LOAD:0000000000001C20↑o ...
.text:0000000000047DC0 var_s0          =  0
.text:0000000000047DC0 ; __unwind {
.text:0000000000047DC0                 LDRB            W8, [X0,#0x18B]
.text:0000000000047DC4                 CBNZ            W8, loc_47DE4
.text:0000000000047DC8                 LDR             X1, [X0,#0x98]
.text:0000000000047DCC                 CBZ             X1, loc_47DE4
.text:0000000000047DD0                 STP             X29, X30, [SP,#-0x10+var_s0]!
.text:0000000000047DD4                 MOV             X29, SP
.text:0000000000047DD8                 LDR             X0, [X0]
.text:0000000000047DDC                 BL              .EAS_HWFree
.text:0000000000047DE0                 LDP             X29, X30, [SP+var_s0],#0x10
.text:0000000000047DE4 loc_47DE4                               ; CODE XREF: EAS_MixEngineShutdown+4↑j
.text:0000000000047DE4                                         ; EAS_MixEngineShutdown+C↑j
.text:0000000000047DE4                 MOV             X0, XZR
.text:0000000000047DE8                 RET
.text:0000000000047DE8 ; } // starts at 47DC0
.text:0000000000047DE8 ; End of function EAS_MixEngineShutdown
.text:0000000000047DE8 ; ---------------------------------------------------------------------------
.text:0000000000047DEC                 ALIGN 0x10
.text:0000000000047DF0 ; =============== S U B R O U T I N E =======================================
.text:0000000000047DF0 ; Attributes: bp-based frame
.text:0000000000047DF0 sub_47DF0                               ; DATA XREF: .data.rel.ro:EAS_OTA_Parser↓o
.text:0000000000047DF0 var_4C          = -0x4C
.text:0000000000047DF0 var_48          = -0x48
.text:0000000000047DF0 var_40          = -0x40
.text:0000000000047DF0 var_30          = -0x30
.text:0000000000047DF0 var_20          = -0x20
.text:0000000000047DF0 var_10          = -0x10
.text:0000000000047DF0 var_s0          =  0
.text:0000000000047DF0 ; __unwind {
.text:0000000000047DF0                 SUB             SP, SP, #0x60
.text:0000000000047DF4                 STR             X25, [SP,#0x50+var_40]
.text:0000000000047DF8                 STP             X24, X23, [SP,#0x50+var_30]
.text:0000000000047DFC                 STP             X22, X21, [SP,#0x50+var_20]
.text:0000000000047E00                 STP             X20, X19, [SP,#0x50+var_10]
.text:0000000000047E04                 STP             X29, X30, [SP,#0x50+var_s0]
.text:0000000000047E08                 ADD             X29, SP, #0x50
.text:0000000000047E0C                 MRS             X23, #3, c13, c0, #2
.text:0000000000047E10                 MOV             X22, X0
.text:0000000000047E14                 LDR             X8, [X23,#0x28]
.text:0000000000047E18                 MOV             X20, X2
.text:0000000000047E1C                 MOV             X19, X3
.text:0000000000047E20                 MOV             X21, X1
.text:0000000000047E24                 STR             X8, [SP,#0x50+var_48]
.text:0000000000047E28                 STR             XZR, [X2]
.text:0000000000047E2C                 ADD             X2, SP, #0x50+var_4C
.text:0000000000047E30                 LDR             X0, [X0]
.text:0000000000047E34                 BL              .EAS_HWGetByte
.text:0000000000047E38                 CBNZ            X0, loc_47F14
.text:0000000000047E3C                 LDRB            W8, [SP,#0x50+var_4C]
.text:0000000000047E40                 CBZ             W8, loc_47F10
.text:0000000000047E44                 MOV             W25, WZR
.text:0000000000047E48                 NEG             W24, W8
.text:0000000000047E4C loc_47E4C                               ; CODE XREF: sub_47DF0+9C↓j
.text:0000000000047E4C                 LDR             X0, [X22]
.text:0000000000047E50                 ADD             X2, SP, #0x50+var_4C
.text:0000000000047E54                 MOV             X1, X21
.text:0000000000047E58                 BL              .EAS_HWGetByte
.text:0000000000047E5C                 CBNZ            X0, loc_47F14
.text:0000000000047E60                 LDRB            W8, [SP,#0x50+var_4C]
.text:0000000000047E64                 LSR             W8, W8, #1
.text:0000000000047E68                 STRB            W8, [SP,#0x50+var_4C]
.text:0000000000047E6C                 CBZ             W25, loc_47E7C
.text:0000000000047E70                 CMP             W8, #0x22 ; '"'
.text:0000000000047E74                 B.EQ            loc_47E88
.text:0000000000047E78                 B               loc_47E94
.text:0000000000047E7C ; ---------------------------------------------------------------------------
.text:0000000000047E7C loc_47E7C                               ; CODE XREF: sub_47DF0+7C↑j
.text:0000000000047E7C                 CMP             W8, #0x25 ; '%'
.text:0000000000047E80                 B.NE            loc_47F10
.text:0000000000047E84                 MOV             W25, #1
.text:0000000000047E88 loc_47E88                               ; CODE XREF: sub_47DF0+84↑j
.text:0000000000047E88                 ADDS            W24, W24, #1
.text:0000000000047E8C                 B.CC            loc_47E4C
.text:0000000000047E90                 B               loc_47F10
.text:0000000000047E94 ; ---------------------------------------------------------------------------
.text:0000000000047E94 loc_47E94                               ; CODE XREF: sub_47DF0+88↑j
.text:0000000000047E94                 CMP             W8, #0x1D
.text:0000000000047E98                 B.NE            loc_47F10
.text:0000000000047E9C                 LDRB            W8, [X22,#0x18B]
.text:0000000000047EA0                 CBZ             W8, loc_47EB8
.text:0000000000047EA4                 MOV             W0, #0xB
.text:0000000000047EA8                 BL              .EAS_CMEnumData
.text:0000000000047EAC                 MOV             X22, X0
.text:0000000000047EB0                 CBNZ            X0, loc_47ECC
.text:0000000000047EB4                 B               loc_47F40
.text:0000000000047EB8 ; ---------------------------------------------------------------------------
.text:0000000000047EB8 loc_47EB8                               ; CODE XREF: sub_47DF0+B0↑j
.text:0000000000047EB8                 LDR             X0, [X22]
.text:0000000000047EBC                 MOV             W1, #0xC0
.text:0000000000047EC0                 BL              .EAS_HWMalloc
.text:0000000000047EC4                 MOV             X22, X0
.text:0000000000047EC8                 CBZ             X0, loc_47F40
.text:0000000000047ECC loc_47ECC                               ; CODE XREF: sub_47DF0+C0↑j
.text:0000000000047ECC                 MOV             X0, X22
.text:0000000000047ED0                 MOV             W1, WZR
.text:0000000000047ED4                 MOV             W2, #0xC0
.text:0000000000047ED8                 BL              .EAS_HWMemSet
.text:0000000000047EDC                 ADRP            X1, #aSonivox@PAGE ; "Sonivox"
.text:0000000000047EE0                 STR             X21, [X22]
.text:0000000000047EE4                 ADRP            X2, #aSOtaFileRecogn@PAGE ; "%s() OTA file recognized"
.text:0000000000047EE8                 STR             X19, [X22,#0x10]
.text:0000000000047EEC                 ADRP            X3, #aOtaCheckfilety@PAGE ; "OTA_CheckFileType"
.text:0000000000047EF0                 MOV             W8, #6
.text:0000000000047EF4                 ADD             X1, X1, #aSonivox@PAGEOFF ; "Sonivox"
.text:0000000000047EF8                 ADD             X2, X2, #aSOtaFileRecogn@PAGEOFF ; "%s() OTA file recognized"
.text:0000000000047EFC                 ADD             X3, X3, #aOtaCheckfilety@PAGEOFF ; "OTA_CheckFileType"
.text:0000000000047F00                 STRB            W8, [X22,#0xB7]
.text:0000000000047F04                 MOV             W0, #3
.text:0000000000047F08                 STR             X22, [X20]
.text:0000000000047F0C                 BL              .__android_log_print
.text:0000000000047F10 loc_47F10                               ; CODE XREF: sub_47DF0+50↑j
.text:0000000000047F10                                         ; sub_47DF0+90↑j ...
.text:0000000000047F10                 MOV             X0, XZR
.text:0000000000047F14 loc_47F14                               ; CODE XREF: sub_47DF0+48↑j
.text:0000000000047F14                                         ; sub_47DF0+6C↑j ...
.text:0000000000047F14                 LDR             X8, [X23,#0x28]
.text:0000000000047F18                 LDR             X9, [SP,#0x50+var_48]
.text:0000000000047F1C                 CMP             X8, X9
.text:0000000000047F20                 B.NE            loc_47F48
.text:0000000000047F24                 LDP             X29, X30, [SP,#0x50+var_s0]
.text:0000000000047F28                 LDP             X20, X19, [SP,#0x50+var_10]
.text:0000000000047F2C                 LDP             X22, X21, [SP,#0x50+var_20]
.text:0000000000047F30                 LDP             X24, X23, [SP,#0x50+var_30]
.text:0000000000047F34                 LDR             X25, [SP,#0x50+var_40]
.text:0000000000047F38                 ADD             SP, SP, #0x60 ; '`'
.text:0000000000047F3C                 RET
.text:0000000000047F40 ; ---------------------------------------------------------------------------
.text:0000000000047F40 loc_47F40                               ; CODE XREF: sub_47DF0+C4↑j
.text:0000000000047F40                                         ; sub_47DF0+D8↑j
.text:0000000000047F40                 MOV             X0, #0xFFFFFFFFFFFFFFFD
.text:0000000000047F44                 B               loc_47F14
.text:0000000000047F48 ; ---------------------------------------------------------------------------
.text:0000000000047F48 loc_47F48                               ; CODE XREF: sub_47DF0+130↑j
.text:0000000000047F48                 BL              .__stack_chk_fail
.text:0000000000047F48 ; } // starts at 47DF0
.text:0000000000047F48 ; End of function sub_47DF0
.text:0000000000047F48 ; ---------------------------------------------------------------------------
.text:0000000000047F4C                 ALIGN 0x10
.text:0000000000047F50 ; =============== S U B R O U T I N E =======================================
.text:0000000000047F50 ; Attributes: bp-based frame
.text:0000000000047F50 sub_47F50                               ; DATA XREF: .data.rel.ro:0000000000058110↓o
.text:0000000000047F50 var_10          = -0x10
.text:0000000000047F50 var_s0          =  0
.text:0000000000047F50 ; __unwind {
.text:0000000000047F50                 STP             X20, X19, [SP,#-0x10+var_10]!
.text:0000000000047F54                 STP             X29, X30, [SP,#0x10+var_s0]
.text:0000000000047F58                 ADD             X29, SP, #0x10
.text:0000000000047F5C                 LDRB            W8, [X1,#0xB7]
.text:0000000000047F60                 CMP             W8, #6
.text:0000000000047F64                 B.NE            loc_47F9C
.text:0000000000047F68                 MOV             X19, X1
.text:0000000000047F6C                 ADD             X1, X1, #8
.text:0000000000047F70                 MOV             X20, X0
.text:0000000000047F74                 BL              .VMInitMIDI
.text:0000000000047F78                 CBNZ            X0, loc_47FA0
.text:0000000000047F7C                 MOV             W8, #7
.text:0000000000047F80                 MOV             X0, X20
.text:0000000000047F84                 MOV             X1, X19
.text:0000000000047F88                 STRB            W8, [X19,#0xB7]
.text:0000000000047F8C                 BL              sub_48B80
.text:0000000000047F90                 CBNZ            X0, loc_47FA0
.text:0000000000047F94                 STRB            WZR, [X19,#0xB7]
.text:0000000000047F98                 B               loc_47FA0
.text:0000000000047F9C ; ---------------------------------------------------------------------------
.text:0000000000047F9C loc_47F9C                               ; CODE XREF: sub_47F50+14↑j
.text:0000000000047F9C                 MOV             X0, #0xFFFFFFFFFFFFFFE1
.text:0000000000047FA0 loc_47FA0                               ; CODE XREF: sub_47F50+28↑j
.text:0000000000047FA0                                         ; sub_47F50+40↑j ...
.text:0000000000047FA0                 LDP             X29, X30, [SP,#0x10+var_s0]
.text:0000000000047FA4                 LDP             X20, X19, [SP+0x10+var_10],#0x20
.text:0000000000047FA8                 RET
.text:0000000000047FA8 ; } // starts at 47F50
.text:0000000000047FA8 ; End of function sub_47F50
.text:0000000000047FA8 ; ---------------------------------------------------------------------------
.text:0000000000047FAC                 ALIGN 0x10
.text:0000000000047FB0 ; =============== S U B R O U T I N E =======================================
.text:0000000000047FB0 sub_47FB0                               ; DATA XREF: .data.rel.ro:0000000000058118↓o
.text:0000000000047FB0 ; __unwind {
.text:0000000000047FB0                 LDR             X8, [X1,#0x18]
.text:0000000000047FB4                 MOV             X0, XZR
.text:0000000000047FB8                 ASR             X8, X8, #8
.text:0000000000047FBC                 STR             X8, [X2]
.text:0000000000047FC0                 RET
.text:0000000000047FC0 ; } // starts at 47FB0
.text:0000000000047FC0 ; End of function sub_47FB0
.text:0000000000047FC0 ; ---------------------------------------------------------------------------
.text:0000000000047FC4                 ALIGN 8
.text:0000000000047FC8 ; =============== S U B R O U T I N E =======================================
.text:0000000000047FC8 ; Attributes: bp-based frame
.text:0000000000047FC8 sub_47FC8                               ; DATA XREF: .data.rel.ro:0000000000058120↓o
.text:0000000000047FC8 var_50          = -0x50
.text:0000000000047FC8 var_40          = -0x40
.text:0000000000047FC8 var_30          = -0x30
.text:0000000000047FC8 var_20          = -0x20
.text:0000000000047FC8 var_10          = -0x10
.text:0000000000047FC8 var_s0          =  0
.text:0000000000047FC8 ; __unwind {
.text:0000000000047FC8                 STP             X28, X27, [SP,#-0x10+var_50]!
.text:0000000000047FCC                 STP             X26, X25, [SP,#0x50+var_40]
.text:0000000000047FD0                 STP             X24, X23, [SP,#0x50+var_30]
.text:0000000000047FD4                 STP             X22, X21, [SP,#0x50+var_20]
.text:0000000000047FD8                 STP             X20, X19, [SP,#0x50+var_10]
.text:0000000000047FDC                 STP             X29, X30, [SP,#0x50+var_s0]
.text:0000000000047FE0                 ADD             X29, SP, #0x50
.text:0000000000047FE4                 LDRB            W8, [X1,#0xB7]
.text:0000000000047FE8                 CMP             W8, #5
.text:0000000000047FEC                 B.LS            loc_47FF8
.text:0000000000047FF0                 MOV             X0, XZR
.text:0000000000047FF4                 B               loc_48954
.text:0000000000047FF8 ; ---------------------------------------------------------------------------
.text:0000000000047FF8 loc_47FF8                               ; CODE XREF: sub_47FC8+24↑j
.text:0000000000047FF8                 MOV             W21, W2
.text:0000000000047FFC                 MOV             X19, X1
.text:0000000000048000                 MOV             X20, X0
.text:0000000000048004                 CBNZ            W8, loc_48010
.text:0000000000048008                 MOV             W8, #1
.text:000000000004800C                 STRB            W8, [X19,#0xB7]
.text:0000000000048010 loc_48010                               ; CODE XREF: sub_47FC8+3C↑j
.text:0000000000048010                 CMP             W21, #3
.text:0000000000048014                 B.EQ            loc_4804C
.text:0000000000048018                 LDR             X8, [X19,#0x18]
.text:000000000004801C                 CBNZ            X8, loc_4804C
.text:0000000000048020                 LDR             X0, [X20,#0x170]
.text:0000000000048024                 MOV             W3, #0x50 ; 'P'
.text:0000000000048028                 LDR             X1, [X19,#8]
.text:000000000004802C                 MOV             W2, WZR
.text:0000000000048030                 BL              .VMProgramChange
.text:0000000000048034                 LDR             X0, [X20,#0x170]
.text:0000000000048038                 MOV             W2, WZR
.text:000000000004803C                 LDR             X1, [X19,#8]
.text:0000000000048040                 MOV             W3, #7
.text:0000000000048044                 MOV             W4, #0x7F
.text:0000000000048048                 BL              .VMControlChange
.text:000000000004804C loc_4804C                               ; CODE XREF: sub_47FC8+4C↑j
.text:000000000004804C                                         ; sub_47FC8+54↑j
.text:000000000004804C                 LDRB            W3, [X19,#0xB3]
.text:0000000000048050                 CBZ             W3, loc_4808C
.text:0000000000048054                 LDR             X0, [X20,#0x170]
.text:0000000000048058                 MOV             W2, WZR
.text:000000000004805C                 LDR             X1, [X19,#8]
.text:0000000000048060                 MOV             W4, WZR
.text:0000000000048064                 BL              .VMStopNote
.text:0000000000048068                 LDR             X8, [X19,#0x28]
.text:000000000004806C                 STRB            WZR, [X19,#0xB3]
.text:0000000000048070                 CBZ             X8, loc_4808C
.text:0000000000048074                 LDR             X9, [X19,#0x18]
.text:0000000000048078                 MOV             X0, XZR
.text:000000000004807C                 STR             XZR, [X19,#0x28]
.text:0000000000048080                 ADD             X8, X9, X8
.text:0000000000048084                 STR             X8, [X19,#0x18]
.text:0000000000048088                 B               loc_48954
.text:000000000004808C ; ---------------------------------------------------------------------------
.text:000000000004808C loc_4808C                               ; CODE XREF: sub_47FC8+88↑j
.text:000000000004808C                                         ; sub_47FC8+A8↑j
.text:000000000004808C                 LDRB            W8, [X19,#0x78]
.text:0000000000048090                 CBZ             W8, loc_480B8
.text:0000000000048094 loc_48094                               ; CODE XREF: sub_47FC8+19C↓j
.text:0000000000048094                                         ; sub_47FC8+454↓j
.text:0000000000048094                 LDRB            W24, [X19,#0x7A]
.text:0000000000048098                 SUBS            X9, X24, #3
.text:000000000004809C                 B.MI            loc_48420
.text:00000000000480A0                 LDRB            W8, [X19,#0x79]
.text:00000000000480A4                 MOV             W23, WZR
.text:00000000000480A8                 CBNZ            X9, loc_48458
.text:00000000000480AC                 MOV             W10, W8
.text:00000000000480B0                 STRB            WZR, [X19,#0x7A]
.text:00000000000480B4                 B               loc_48478
.text:00000000000480B8 ; ---------------------------------------------------------------------------
.text:00000000000480B8 loc_480B8                               ; CODE XREF: sub_47FC8+C8↑j
.text:00000000000480B8                 ADD             X28, X19, #0x30 ; '0'
.text:00000000000480BC                 ADD             X22, X19, #0x70 ; 'p'
.text:00000000000480C0                 ADD             X23, X19, #0x80
.text:00000000000480C4                 ADD             X24, X19, #0x79 ; 'y'
.text:00000000000480C8                 MOV             X25, #0xFFFFFFFFFFFFFFFF
.text:00000000000480CC loc_480CC                               ; CODE XREF: sub_47FC8+198↓j
.text:00000000000480CC                                         ; sub_47FC8+450↓j
.text:00000000000480CC                 LDRB            W8, [X19,#0xB8]
.text:00000000000480D0                 CBZ             W8, loc_480E0
.text:00000000000480D4                 CBZ             W21, loc_48118
.text:00000000000480D8                 CMP             W8, #0xF
.text:00000000000480DC                 B.NE            loc_48118
.text:00000000000480E0 loc_480E0                               ; CODE XREF: sub_47FC8+108↑j
.text:00000000000480E0                 LDR             X8, [X23]
.text:00000000000480E4                 TBNZ            X8, #0x3F, loc_48168 ; '?'
.text:00000000000480E8                 LDR             X26, [X20]
.text:00000000000480EC                 MOV             X0, X22
.text:00000000000480F0                 MOV             X1, X23
.text:00000000000480F4                 MOV             W2, #0x10
.text:00000000000480F8                 BL              .EAS_HWMemCpy
.text:00000000000480FC                 LDR             X1, [X19]
.text:0000000000048100                 MOV             X0, X26
.text:0000000000048104                 MOV             X2, X25
.text:0000000000048108                 STR             X25, [X19,#0x80]
.text:000000000004810C                 BL              .EAS_HWFileSeek
.text:0000000000048110                 CBZ             X0, loc_4815C
.text:0000000000048114                 B               loc_48954
.text:0000000000048118 ; ---------------------------------------------------------------------------
.text:0000000000048118 loc_48118                               ; CODE XREF: sub_47FC8+10C↑j
.text:0000000000048118                                         ; sub_47FC8+114↑j
.text:0000000000048118                 CMP             W8, #0xF
.text:000000000004811C                 B.EQ            loc_48128
.text:0000000000048120                 SUB             W8, W8, #1
.text:0000000000048124                 STRB            W8, [X19,#0xB8]
.text:0000000000048128 loc_48128                               ; CODE XREF: sub_47FC8+154↑j
.text:0000000000048128                 LDRB            W8, [X19,#0xB2]
.text:000000000004812C                 MOV             X0, X22
.text:0000000000048130                 LDR             X26, [X20]
.text:0000000000048134                 MOV             W2, #0x10
.text:0000000000048138                 ADD             X27, X28, X8,LSL#4
.text:000000000004813C                 MOV             X1, X27
.text:0000000000048140                 BL              .EAS_HWMemCpy
.text:0000000000048144                 STR             X25, [X19,#0x80]
.text:0000000000048148                 MOV             X0, X26
.text:000000000004814C                 LDR             X1, [X19]
.text:0000000000048150                 LDR             X2, [X27]
.text:0000000000048154                 BL              .EAS_HWFileSeek
.text:0000000000048158                 CBNZ            X0, loc_48954
.text:000000000004815C loc_4815C                               ; CODE XREF: sub_47FC8+148↑j
.text:000000000004815C                 LDRB            W8, [X19,#0x78]
.text:0000000000048160                 CBZ             W8, loc_480CC
.text:0000000000048164                 B               loc_48094
.text:0000000000048168 ; ---------------------------------------------------------------------------
.text:0000000000048168 loc_48168                               ; CODE XREF: sub_47FC8+11C↑j
.text:0000000000048168                 LDRB            W8, [X19,#0xB1]
.text:000000000004816C                 CBZ             W8, loc_485B8
.text:0000000000048170                 LDRB            W27, [X19,#0x7A]
.text:0000000000048174                 SUBS            X9, X27, #3
.text:0000000000048178                 B.MI            loc_48194
.text:000000000004817C                 LDRB            W8, [X24]
.text:0000000000048180                 MOV             W26, WZR
.text:0000000000048184                 CBNZ            X9, loc_481C8
.text:0000000000048188                 MOV             W10, W8
.text:000000000004818C                 STRB            WZR, [X19,#0x7A]
.text:0000000000048190                 B               loc_481E8
.text:0000000000048194 ; ---------------------------------------------------------------------------
.text:0000000000048194 loc_48194                               ; CODE XREF: sub_47FC8+1B0↑j
.text:0000000000048194                 LDR             X0, [X20]
.text:0000000000048198                 CBZ             W27, loc_481AC
.text:000000000004819C                 LDRB            W8, [X24]
.text:00000000000481A0                 NEG             W9, W9
.text:00000000000481A4                 LSL             W26, W8, W9
.text:00000000000481A8                 B               loc_481B0
.text:00000000000481AC ; ---------------------------------------------------------------------------
.text:00000000000481AC loc_481AC                               ; CODE XREF: sub_47FC8+1D0↑j
.text:00000000000481AC                 MOV             W26, WZR
.text:00000000000481B0 loc_481B0                               ; CODE XREF: sub_47FC8+1E0↑j
.text:00000000000481B0                 LDR             X1, [X19]
.text:00000000000481B4                 MOV             X2, X24
.text:00000000000481B8                 BL              .EAS_HWGetByte
.text:00000000000481BC                 CBNZ            X0, loc_48954
.text:00000000000481C0                 LDRB            W8, [X24]
.text:00000000000481C4                 ADD             X9, X27, #5
.text:00000000000481C8 loc_481C8                               ; CODE XREF: sub_47FC8+1BC↑j
.text:00000000000481C8                 MOV             W10, #8
.text:00000000000481CC                 STRB            W9, [X19,#0x7A]
.text:00000000000481D0                 SUB             W11, W10, W9
.text:00000000000481D4                 MOV             W12, #0xFF
.text:00000000000481D8                 LSR             W10, W8, W9
.text:00000000000481DC                 LSR             W11, W12, W11
.text:00000000000481E0                 AND             W8, W8, W11
.text:00000000000481E4                 STRB            W8, [X19,#0x79]
.text:00000000000481E8 loc_481E8                               ; CODE XREF: sub_47FC8+1C8↑j
.text:00000000000481E8                 ORR             W10, W10, W26
.text:00000000000481EC                 TST             W10, #0xFF
.text:00000000000481F0                 B.NE            loc_484C8
.text:00000000000481F4                 AND             X27, X9, #0xFF
.text:00000000000481F8                 SUBS            X10, X27, #2
.text:00000000000481FC                 B.MI            loc_4820C
.text:0000000000048200                 CBZ             X10, loc_48224
.text:0000000000048204                 MOV             W26, WZR
.text:0000000000048208                 B               loc_48254
.text:000000000004820C ; ---------------------------------------------------------------------------
.text:000000000004820C loc_4820C                               ; CODE XREF: sub_47FC8+234↑j
.text:000000000004820C                 LDR             X0, [X20]
.text:0000000000048210                 TST             W9, #0xFF
.text:0000000000048214                 B.EQ            loc_48238
.text:0000000000048218                 NEG             W9, W10
.text:000000000004821C                 LSL             W26, W8, W9
.text:0000000000048220                 B               loc_4823C
.text:0000000000048224 ; ---------------------------------------------------------------------------
.text:0000000000048224 loc_48224                               ; CODE XREF: sub_47FC8+238↑j
.text:0000000000048224                 MOV             W27, WZR
.text:0000000000048228                 STRB            WZR, [X19,#0x7A]
.text:000000000004822C                 MOV             X26, #0xFFFFFFFFFFFFFFFC
.text:0000000000048230                 STRB            W8, [X19,#0xB2]
.text:0000000000048234                 B               loc_482A4
.text:0000000000048238 ; ---------------------------------------------------------------------------
.text:0000000000048238 loc_48238                               ; CODE XREF: sub_47FC8+24C↑j
.text:0000000000048238                 MOV             W26, WZR
.text:000000000004823C loc_4823C                               ; CODE XREF: sub_47FC8+258↑j
.text:000000000004823C                 LDR             X1, [X19]
.text:0000000000048240                 MOV             X2, X24
.text:0000000000048244                 BL              .EAS_HWGetByte
.text:0000000000048248                 CBNZ            X0, loc_48954
.text:000000000004824C                 LDRB            W8, [X24]
.text:0000000000048250                 ADD             X10, X27, #6
.text:0000000000048254 loc_48254                               ; CODE XREF: sub_47FC8+240↑j
.text:0000000000048254                 MOV             W9, #8
.text:0000000000048258                 STRB            W10, [X19,#0x7A]
.text:000000000004825C                 SUB             W9, W9, W10
.text:0000000000048260                 MOV             W12, #0xFF
.text:0000000000048264                 LSR             W11, W8, W10
.text:0000000000048268                 LSR             W9, W12, W9
.text:000000000004826C                 AND             W8, W8, W9
.text:0000000000048270                 AND             X9, X10, #0xFF
.text:0000000000048274                 ORR             W11, W26, W11
.text:0000000000048278                 SUBS            X26, X9, #4
.text:000000000004827C                 STRB            W8, [X19,#0x79]
.text:0000000000048280                 STRB            W11, [X19,#0xB2]
.text:0000000000048284                 B.MI            loc_4829C
.text:0000000000048288                 MOV             W27, WZR
.text:000000000004828C                 CBNZ            X26, loc_482C0
.text:0000000000048290                 STRB            WZR, [X19,#0x7A]
.text:0000000000048294                 STRB            W8, [X19,#0xB8]
.text:0000000000048298                 B               loc_48334
.text:000000000004829C ; ---------------------------------------------------------------------------
.text:000000000004829C loc_4829C                               ; CODE XREF: sub_47FC8+2BC↑j
.text:000000000004829C                 NEG             W9, W26
.text:00000000000482A0                 LSL             W27, W8, W9
.text:00000000000482A4 loc_482A4                               ; CODE XREF: sub_47FC8+26C↑j
.text:00000000000482A4                 LDR             X0, [X20]
.text:00000000000482A8                 MOV             X2, X24
.text:00000000000482AC                 LDR             X1, [X19]
.text:00000000000482B0                 BL              .EAS_HWGetByte
.text:00000000000482B4                 CBNZ            X0, loc_48954
.text:00000000000482B8                 LDRB            W8, [X24]
.text:00000000000482BC                 ADD             X26, X26, #8
.text:00000000000482C0 loc_482C0                               ; CODE XREF: sub_47FC8+2C4↑j
.text:00000000000482C0                 MOV             W9, #8
.text:00000000000482C4                 STRB            W26, [X19,#0x7A]
.text:00000000000482C8                 SUB             W9, W9, W26
.text:00000000000482CC                 MOV             W11, #0xFF
.text:00000000000482D0                 LSR             W10, W8, W26
.text:00000000000482D4                 LSR             W9, W11, W9
.text:00000000000482D8                 AND             W8, W8, W9
.text:00000000000482DC                 AND             X9, X26, #0xFF
.text:00000000000482E0                 ORR             W10, W27, W10
.text:00000000000482E4                 SUBS            X26, X9, #8
.text:00000000000482E8                 STRB            W8, [X19,#0x79]
.text:00000000000482EC                 STRB            W10, [X19,#0xB8]
.text:00000000000482F0                 B.MI            loc_48328
.text:00000000000482F4                 MOV             W27, WZR
.text:00000000000482F8                 CMP             X26, #1
.text:00000000000482FC                 B.LT            loc_48354
.text:0000000000048300 loc_48300                               ; CODE XREF: sub_47FC8+388↓j
.text:0000000000048300                 MOV             W9, #8
.text:0000000000048304                 STRB            W26, [X19,#0x7A]
.text:0000000000048308                 SUB             W9, W9, W26
.text:000000000004830C                 MOV             W11, #0xFF
.text:0000000000048310                 LSR             W10, W8, W26
.text:0000000000048314                 LSR             W9, W11, W9
.text:0000000000048318                 AND             W9, W8, W9
.text:000000000004831C                 MOV             W8, W10
.text:0000000000048320                 STRB            W9, [X19,#0x79]
.text:0000000000048324                 B               loc_48358
.text:0000000000048328 ; ---------------------------------------------------------------------------
.text:0000000000048328 loc_48328                               ; CODE XREF: sub_47FC8+328↑j
.text:0000000000048328                 NEG             W10, W26
.text:000000000004832C                 MOV             X26, X9
.text:0000000000048330                 LSL             W27, W8, W10
.text:0000000000048334 loc_48334                               ; CODE XREF: sub_47FC8+2D0↑j
.text:0000000000048334                 LDR             X0, [X20]
.text:0000000000048338                 MOV             X2, X24
.text:000000000004833C                 LDR             X1, [X19]
.text:0000000000048340                 BL              .EAS_HWGetByte
.text:0000000000048344                 CBNZ            X0, loc_48954
.text:0000000000048348                 LDRB            W8, [X24]
.text:000000000004834C                 CMP             X26, #1
.text:0000000000048350                 B.GE            loc_48300
.text:0000000000048354 loc_48354                               ; CODE XREF: sub_47FC8+334↑j
.text:0000000000048354                 STRB            WZR, [X19,#0x7A]
.text:0000000000048358 loc_48358                               ; CODE XREF: sub_47FC8+35C↑j
.text:0000000000048358                 ORR             W8, W8, W27
.text:000000000004835C                 TST             W8, #0xFF
.text:0000000000048360                 STRB            W8, [X19,#0x78]
.text:0000000000048364                 B.EQ            loc_4839C
.text:0000000000048368                 LDRB            W8, [X19,#0xB2]
.text:000000000004836C                 MOV             X1, X22
.text:0000000000048370                 LDR             X26, [X20]
.text:0000000000048374                 MOV             W2, #0x10
.text:0000000000048378                 ADD             X27, X28, X8,LSL#4
.text:000000000004837C                 MOV             X0, X27
.text:0000000000048380                 BL              .EAS_HWMemCpy
.text:0000000000048384                 LDR             X1, [X19]
.text:0000000000048388                 MOV             X0, X26
.text:000000000004838C                 MOV             X2, X27
.text:0000000000048390                 BL              .EAS_HWFilePos
.text:0000000000048394                 CBZ             X0, loc_48408
.text:0000000000048398                 B               loc_48954
.text:000000000004839C ; ---------------------------------------------------------------------------
.text:000000000004839C loc_4839C                               ; CODE XREF: sub_47FC8+39C↑j
.text:000000000004839C                 LDRB            W8, [X19,#0xB2]
.text:00000000000483A0                 LSL             X8, X8, #4
.text:00000000000483A4                 LDR             X8, [X28,X8]
.text:00000000000483A8                 TBNZ            X8, #0x3F, loc_484C8 ; '?'
.text:00000000000483AC                 LDR             X26, [X20]
.text:00000000000483B0                 MOV             X0, X23
.text:00000000000483B4                 MOV             X1, X22
.text:00000000000483B8                 MOV             W2, #0x10
.text:00000000000483BC                 BL              .EAS_HWMemCpy
.text:00000000000483C0                 LDR             X1, [X19]
.text:00000000000483C4                 MOV             X0, X26
.text:00000000000483C8                 MOV             X2, X23
.text:00000000000483CC                 BL              .EAS_HWFilePos
.text:00000000000483D0                 CBNZ            X0, loc_48954
.text:00000000000483D4                 LDRB            W8, [X19,#0xB2]
.text:00000000000483D8                 MOV             X0, X22
.text:00000000000483DC                 LDR             X26, [X20]
.text:00000000000483E0                 MOV             W2, #0x10
.text:00000000000483E4                 ADD             X27, X28, X8,LSL#4
.text:00000000000483E8                 MOV             X1, X27
.text:00000000000483EC                 BL              .EAS_HWMemCpy
.text:00000000000483F0                 STR             X25, [X19,#0x80]
.text:00000000000483F4                 MOV             X0, X26
.text:00000000000483F8                 LDR             X1, [X19]
.text:00000000000483FC                 LDR             X2, [X27]
.text:0000000000048400                 BL              .EAS_HWFileSeek
.text:0000000000048404                 CBNZ            X0, loc_48954
.text:0000000000048408 loc_48408                               ; CODE XREF: sub_47FC8+3CC↑j
.text:0000000000048408                 LDRB            W8, [X19,#0xB1]
.text:000000000004840C                 SUB             W8, W8, #1
.text:0000000000048410                 STRB            W8, [X19,#0xB1]
.text:0000000000048414                 LDRB            W8, [X19,#0x78]
.text:0000000000048418                 CBZ             W8, loc_480CC
.text:000000000004841C                 B               loc_48094
.text:0000000000048420 ; ---------------------------------------------------------------------------
.text:0000000000048420 loc_48420                               ; CODE XREF: sub_47FC8+D4↑j
.text:0000000000048420                 LDR             X0, [X20]
.text:0000000000048424                 CBZ             W24, loc_48438
.text:0000000000048428                 LDRB            W8, [X19,#0x79]
.text:000000000004842C                 NEG             W9, W9
.text:0000000000048430                 LSL             W23, W8, W9
.text:0000000000048434                 B               loc_4843C
.text:0000000000048438 ; ---------------------------------------------------------------------------
.text:0000000000048438 loc_48438                               ; CODE XREF: sub_47FC8+45C↑j
.text:0000000000048438                 MOV             W23, WZR
.text:000000000004843C loc_4843C                               ; CODE XREF: sub_47FC8+46C↑j
.text:000000000004843C                 MOV             X22, X19
.text:0000000000048440                 LDR             X1, [X22],#0x79
.text:0000000000048444                 MOV             X2, X22
.text:0000000000048448                 BL              .EAS_HWGetByte
.text:000000000004844C                 CBNZ            X0, loc_48954
.text:0000000000048450                 LDRB            W8, [X22]
.text:0000000000048454                 ADD             X9, X24, #5
.text:0000000000048458 loc_48458                               ; CODE XREF: sub_47FC8+E0↑j
.text:0000000000048458                 MOV             W10, #8
.text:000000000004845C                 STRB            W9, [X19,#0x7A]
.text:0000000000048460                 SUB             W11, W10, W9
.text:0000000000048464                 MOV             W12, #0xFF
.text:0000000000048468                 LSR             W10, W8, W9
.text:000000000004846C                 LSR             W11, W12, W11
.text:0000000000048470                 AND             W8, W8, W11
.text:0000000000048474                 STRB            W8, [X19,#0x79]
.text:0000000000048478 loc_48478                               ; CODE XREF: sub_47FC8+EC↑j
.text:0000000000048478                 ORR             W10, W10, W23
.text:000000000004847C                 AND             W10, W10, #0xFF
.text:0000000000048480                 SUB             W10, W10, #1
.text:0000000000048484                 CMP             W10, #4
.text:0000000000048488                 B.HI            loc_484C8
.text:000000000004848C                 ADRP            X11, #unk_58C2@PAGE
.text:0000000000048490                 ADD             X11, X11, #unk_58C2@PAGEOFF
.text:0000000000048494                 ADR             X12, loc_484A4
.text:0000000000048498                 LDRB            W13, [X11,X10]
.text:000000000004849C                 ADD             X12, X12, X13,LSL#2
.text:00000000000484A0                 BR              X12
.text:00000000000484A4 ; ---------------------------------------------------------------------------
.text:00000000000484A4 loc_484A4                               ; DATA XREF: sub_47FC8+4CC↑o
.text:00000000000484A4                 AND             X24, X9, #0xFF
.text:00000000000484A8                 SUBS            X10, X24, #4
.text:00000000000484AC                 B.MI            loc_48540
.text:00000000000484B0                 MOV             W23, WZR
.text:00000000000484B4                 CBNZ            X10, loc_485F4
.text:00000000000484B8                 MOV             W26, #5
.text:00000000000484BC                 STRB            WZR, [X19,#0x7A]
.text:00000000000484C0                 STRB            W8, [X19,#0xB3]
.text:00000000000484C4                 B               loc_48648
.text:00000000000484C8 ; ---------------------------------------------------------------------------
.text:00000000000484C8 loc_484C8                               ; CODE XREF: sub_47FC8+228↑j
.text:00000000000484C8                                         ; sub_47FC8+3E0↑j ...
.text:00000000000484C8                 MOV             X0, #0xFFFFFFFFFFFFFFEF
.text:00000000000484CC                 B               loc_48954
.text:00000000000484D0 ; ---------------------------------------------------------------------------
.text:00000000000484D0                 AND             X22, X9, #0xFF
.text:00000000000484D4                 SUBS            X10, X22, #2
.text:00000000000484D8                 B.MI            loc_48558
.text:00000000000484DC                 MOV             W21, WZR
.text:00000000000484E0                 CBNZ            X10, loc_486D8
.text:00000000000484E4                 STRB            WZR, [X19,#0x7A]
.text:00000000000484E8                 B               loc_486FC
.text:00000000000484EC ; ---------------------------------------------------------------------------
.text:00000000000484EC                 AND             X22, X9, #0xFF
.text:00000000000484F0                 SUBS            X10, X22, #2
.text:00000000000484F4                 B.MI            loc_48570
.text:00000000000484F8                 MOV             W21, WZR
.text:00000000000484FC                 CBNZ            X10, loc_48734
.text:0000000000048500                 STRB            WZR, [X19,#0x7A]
.text:0000000000048504                 B               loc_48758
.text:0000000000048508 ; ---------------------------------------------------------------------------
.text:0000000000048508                 AND             X22, X9, #0xFF
.text:000000000004850C                 SUBS            X10, X22, #5
.text:0000000000048510                 B.MI            loc_48588
.text:0000000000048514                 MOV             W21, WZR
.text:0000000000048518                 CBNZ            X10, loc_48784
.text:000000000004851C                 STRB            WZR, [X19,#0x7A]
.text:0000000000048520                 B               loc_487A8
.text:0000000000048524 ; ---------------------------------------------------------------------------
.text:0000000000048524                 AND             X22, X9, #0xFF
.text:0000000000048528                 SUBS            X10, X22, #4
.text:000000000004852C                 B.MI            loc_485A0
.text:0000000000048530                 MOV             W21, WZR
.text:0000000000048534                 CBNZ            X10, loc_487E4
.text:0000000000048538                 STRB            WZR, [X19,#0x7A]
.text:000000000004853C                 B               loc_48808
.text:0000000000048540 ; ---------------------------------------------------------------------------
.text:0000000000048540 loc_48540                               ; CODE XREF: sub_47FC8+4E4↑j
.text:0000000000048540                 LDR             X0, [X20]
.text:0000000000048544                 TST             W9, #0xFF
.text:0000000000048548                 B.EQ            loc_485D4
.text:000000000004854C                 NEG             W9, W10
.text:0000000000048550                 LSL             W23, W8, W9
.text:0000000000048554                 B               loc_485D8
.text:0000000000048558 ; ---------------------------------------------------------------------------
.text:0000000000048558 loc_48558                               ; CODE XREF: sub_47FC8+510↑j
.text:0000000000048558                 LDR             X0, [X20]
.text:000000000004855C                 TST             W9, #0xFF
.text:0000000000048560                 B.EQ            loc_486B8
.text:0000000000048564                 NEG             W9, W10
.text:0000000000048568                 LSL             W21, W8, W9
.text:000000000004856C                 B               loc_486BC
.text:0000000000048570 ; ---------------------------------------------------------------------------
.text:0000000000048570 loc_48570                               ; CODE XREF: sub_47FC8+52C↑j
.text:0000000000048570                 LDR             X0, [X20]
.text:0000000000048574                 TST             W9, #0xFF
.text:0000000000048578                 B.EQ            loc_48714
.text:000000000004857C                 NEG             W9, W10
.text:0000000000048580                 LSL             W21, W8, W9
.text:0000000000048584                 B               loc_48718
.text:0000000000048588 ; ---------------------------------------------------------------------------
.text:0000000000048588 loc_48588                               ; CODE XREF: sub_47FC8+548↑j
.text:0000000000048588                 LDR             X0, [X20]
.text:000000000004858C                 TST             W9, #0xFF
.text:0000000000048590                 B.EQ            loc_48764
.text:0000000000048594                 NEG             W9, W10
.text:0000000000048598                 LSL             W21, W8, W9
.text:000000000004859C                 B               loc_48768
.text:00000000000485A0 ; ---------------------------------------------------------------------------
.text:00000000000485A0 loc_485A0                               ; CODE XREF: sub_47FC8+564↑j
.text:00000000000485A0                 LDR             X0, [X20]
.text:00000000000485A4                 TST             W9, #0xFF
.text:00000000000485A8                 B.EQ            loc_487C4
.text:00000000000485AC                 NEG             W9, W10
.text:00000000000485B0                 LSL             W21, W8, W9
.text:00000000000485B4                 B               loc_487C8
.text:00000000000485B8 ; ---------------------------------------------------------------------------
.text:00000000000485B8 loc_485B8                               ; CODE XREF: sub_47FC8+1A4↑j
.text:00000000000485B8                 MOV             W8, #2
.text:00000000000485BC                 LDR             X1, [X19,#8]
.text:00000000000485C0                 STRB            W8, [X19,#0xB7]
.text:00000000000485C4                 LDR             X0, [X20,#0x170]
.text:00000000000485C8                 BL              .VMReleaseAllVoices
.text:00000000000485CC                 MOV             X0, XZR
.text:00000000000485D0                 B               loc_48954
.text:00000000000485D4 ; ---------------------------------------------------------------------------
.text:00000000000485D4 loc_485D4                               ; CODE XREF: sub_47FC8+580↑j
.text:00000000000485D4                 MOV             W23, WZR
.text:00000000000485D8 loc_485D8                               ; CODE XREF: sub_47FC8+58C↑j
.text:00000000000485D8                 MOV             X22, X19
.text:00000000000485DC                 LDR             X1, [X22],#0x79
.text:00000000000485E0                 MOV             X2, X22
.text:00000000000485E4                 BL              .EAS_HWGetByte
.text:00000000000485E8                 CBNZ            X0, loc_48954
.text:00000000000485EC                 LDRB            W8, [X22]
.text:00000000000485F0                 ADD             X10, X24, #4
.text:00000000000485F4 loc_485F4                               ; CODE XREF: sub_47FC8+4EC↑j
.text:00000000000485F4                 MOV             W11, #8
.text:00000000000485F8                 STRB            W10, [X19,#0x7A]
.text:00000000000485FC                 SUB             W11, W11, W10
.text:0000000000048600                 LSR             W9, W8, W10
.text:0000000000048604                 MOV             W12, #0xFF
.text:0000000000048608                 ORR             W13, W23, W9
.text:000000000004860C                 LSR             W9, W12, W11
.text:0000000000048610                 AND             W8, W8, W9
.text:0000000000048614                 AND             X9, X10, #0xFF
.text:0000000000048618                 STRB            W13, [X19,#0xB3]
.text:000000000004861C                 SUBS            X26, X9, #3
.text:0000000000048620                 STRB            W8, [X19,#0x79]
.text:0000000000048624                 B.MI            loc_4863C
.text:0000000000048628                 MOV             W23, WZR
.text:000000000004862C                 CBNZ            X26, loc_48664
.text:0000000000048630                 MOV             W24, W8
.text:0000000000048634                 STRB            WZR, [X19,#0x7A]
.text:0000000000048638                 B               loc_48684
.text:000000000004863C ; ---------------------------------------------------------------------------
.text:000000000004863C loc_4863C                               ; CODE XREF: sub_47FC8+65C↑j
.text:000000000004863C                 NEG             W10, W26
.text:0000000000048640                 ADD             X26, X9, #5
.text:0000000000048644                 LSL             W23, W8, W10
.text:0000000000048648 loc_48648                               ; CODE XREF: sub_47FC8+4FC↑j
.text:0000000000048648                 MOV             X22, X19
.text:000000000004864C                 LDR             X0, [X20]
.text:0000000000048650                 LDR             X1, [X22],#0x79
.text:0000000000048654                 MOV             X2, X22
.text:0000000000048658                 BL              .EAS_HWGetByte
.text:000000000004865C                 CBNZ            X0, loc_48954
.text:0000000000048660                 LDRB            W8, [X22]
.text:0000000000048664 loc_48664                               ; CODE XREF: sub_47FC8+664↑j
.text:0000000000048664                 MOV             W9, #8
.text:0000000000048668                 STRB            W26, [X19,#0x7A]
.text:000000000004866C                 SUB             W9, W9, W26
.text:0000000000048670                 MOV             W10, #0xFF
.text:0000000000048674                 LSR             W24, W8, W26
.text:0000000000048678                 LSR             W9, W10, W9
.text:000000000004867C                 AND             W8, W8, W9
.text:0000000000048680                 STRB            W8, [X19,#0x79]
.text:0000000000048684 loc_48684                               ; CODE XREF: sub_47FC8+670↑j
.text:0000000000048684                 LDR             X25, [X19,#0x20]
.text:0000000000048688                 AND             X27, X26, #0xFF
.text:000000000004868C                 SUBS            X9, X27, #2
.text:0000000000048690                 B.MI            loc_486A4
.text:0000000000048694                 MOV             W26, WZR
.text:0000000000048698                 CBNZ            X9, loc_48844
.text:000000000004869C                 STRB            WZR, [X19,#0x7A]
.text:00000000000486A0                 B               loc_48868
.text:00000000000486A4 ; ---------------------------------------------------------------------------
.text:00000000000486A4 loc_486A4                               ; CODE XREF: sub_47FC8+6C8↑j
.text:00000000000486A4                 LDR             X0, [X20]
.text:00000000000486A8                 CBZ             W27, loc_48824
.text:00000000000486AC                 NEG             W9, W9
.text:00000000000486B0                 LSL             W26, W8, W9
.text:00000000000486B4                 B               loc_48828
.text:00000000000486B8 ; ---------------------------------------------------------------------------
.text:00000000000486B8 loc_486B8                               ; CODE XREF: sub_47FC8+598↑j
.text:00000000000486B8                 MOV             W21, WZR
.text:00000000000486BC loc_486BC                               ; CODE XREF: sub_47FC8+5A4↑j
.text:00000000000486BC                 MOV             X20, X19
.text:00000000000486C0                 LDR             X1, [X20],#0x79
.text:00000000000486C4                 MOV             X2, X20
.text:00000000000486C8                 BL              .EAS_HWGetByte
.text:00000000000486CC                 CBNZ            X0, loc_48954
.text:00000000000486D0                 LDRB            W8, [X20]
.text:00000000000486D4                 ADD             X10, X22, #6
.text:00000000000486D8 loc_486D8                               ; CODE XREF: sub_47FC8+518↑j
.text:00000000000486D8                 MOV             W9, #8
.text:00000000000486DC                 STRB            W10, [X19,#0x7A]
.text:00000000000486E0                 SUB             W9, W9, W10
.text:00000000000486E4                 MOV             W11, #0xFF
.text:00000000000486E8                 LSR             W12, W8, W10
.text:00000000000486EC                 LSR             W9, W11, W9
.text:00000000000486F0                 AND             W9, W8, W9
.text:00000000000486F4                 MOV             W8, W12
.text:00000000000486F8                 STRB            W9, [X19,#0x79]
.text:00000000000486FC loc_486FC                               ; CODE XREF: sub_47FC8+520↑j
.text:00000000000486FC                 ORR             W8, W8, W21
.text:0000000000048700                 MOV             W9, #0xC
.text:0000000000048704                 MUL             W8, W8, W9
.text:0000000000048708                 ADD             W8, W8, #0x3B ; ';'
.text:000000000004870C                 STRB            W8, [X19,#0xB4]
.text:0000000000048710                 B               loc_48944
.text:0000000000048714 ; ---------------------------------------------------------------------------
.text:0000000000048714 loc_48714                               ; CODE XREF: sub_47FC8+5B0↑j
.text:0000000000048714                 MOV             W21, WZR
.text:0000000000048718 loc_48718                               ; CODE XREF: sub_47FC8+5BC↑j
.text:0000000000048718                 MOV             X20, X19
.text:000000000004871C                 LDR             X1, [X20],#0x79
.text:0000000000048720                 MOV             X2, X20
.text:0000000000048724                 BL              .EAS_HWGetByte
.text:0000000000048728                 CBNZ            X0, loc_48954
.text:000000000004872C                 LDRB            W8, [X20]
.text:0000000000048730                 ADD             X10, X22, #6
.text:0000000000048734 loc_48734                               ; CODE XREF: sub_47FC8+534↑j
.text:0000000000048734                 MOV             W9, #8
.text:0000000000048738                 STRB            W10, [X19,#0x7A]
.text:000000000004873C                 SUB             W9, W9, W10
.text:0000000000048740                 MOV             W11, #0xFF
.text:0000000000048744                 LSR             W12, W8, W10
.text:0000000000048748                 LSR             W9, W11, W9
.text:000000000004874C                 AND             W9, W8, W9
.text:0000000000048750                 MOV             W8, W12
.text:0000000000048754                 STRB            W9, [X19,#0x79]
.text:0000000000048758 loc_48758                               ; CODE XREF: sub_47FC8+53C↑j
.text:0000000000048758                 ORR             W8, W8, W21
.text:000000000004875C                 STRB            W8, [X19,#0xB5]
.text:0000000000048760                 B               loc_48944
.text:0000000000048764 ; ---------------------------------------------------------------------------
.text:0000000000048764 loc_48764                               ; CODE XREF: sub_47FC8+5C8↑j
.text:0000000000048764                 MOV             W21, WZR
.text:0000000000048768 loc_48768                               ; CODE XREF: sub_47FC8+5D4↑j
.text:0000000000048768                 MOV             X20, X19
.text:000000000004876C                 LDR             X1, [X20],#0x79
.text:0000000000048770                 MOV             X2, X20
.text:0000000000048774                 BL              .EAS_HWGetByte
.text:0000000000048778                 CBNZ            X0, loc_48954
.text:000000000004877C                 LDRB            W8, [X20]
.text:0000000000048780                 ADD             X10, X22, #3
.text:0000000000048784 loc_48784                               ; CODE XREF: sub_47FC8+550↑j
.text:0000000000048784                 MOV             W9, #8
.text:0000000000048788                 STRB            W10, [X19,#0x7A]
.text:000000000004878C                 SUB             W9, W9, W10
.text:0000000000048790                 MOV             W11, #0xFF
.text:0000000000048794                 LSR             W12, W8, W10
.text:0000000000048798                 LSR             W9, W11, W9
.text:000000000004879C                 AND             W9, W8, W9
.text:00000000000487A0                 MOV             W8, W12
.text:00000000000487A4                 STRB            W9, [X19,#0x79]
.text:00000000000487A8 loc_487A8                               ; CODE XREF: sub_47FC8+558↑j
.text:00000000000487A8                 ORR             W8, W8, W21
.text:00000000000487AC                 ADRP            X9, #unk_58C8@PAGE
.text:00000000000487B0                 AND             X8, X8, #0xFF
.text:00000000000487B4                 ADD             X9, X9, #unk_58C8@PAGEOFF
.text:00000000000487B8                 LDR             X8, [X9,X8,LSL#3]
.text:00000000000487BC                 STR             X8, [X19,#0x20]
.text:00000000000487C0                 B               loc_48944
.text:00000000000487C4 ; ---------------------------------------------------------------------------
.text:00000000000487C4 loc_487C4                               ; CODE XREF: sub_47FC8+5E0↑j
.text:00000000000487C4                 MOV             W21, WZR
.text:00000000000487C8 loc_487C8                               ; CODE XREF: sub_47FC8+5EC↑j
.text:00000000000487C8                 MOV             X20, X19
.text:00000000000487CC                 LDR             X1, [X20],#0x79
.text:00000000000487D0                 MOV             X2, X20
.text:00000000000487D4                 BL              .EAS_HWGetByte
.text:00000000000487D8                 CBNZ            X0, loc_48954
.text:00000000000487DC                 LDRB            W8, [X20]
.text:00000000000487E0                 ADD             X10, X22, #4
.text:00000000000487E4 loc_487E4                               ; CODE XREF: sub_47FC8+56C↑j
.text:00000000000487E4                 MOV             W9, #8
.text:00000000000487E8                 STRB            W10, [X19,#0x7A]
.text:00000000000487EC                 SUB             W9, W9, W10
.text:00000000000487F0                 MOV             W11, #0xFF
.text:00000000000487F4                 LSR             W12, W8, W10
.text:00000000000487F8                 LSR             W9, W11, W9
.text:00000000000487FC                 AND             W9, W8, W9
.text:0000000000048800                 MOV             W8, W12
.text:0000000000048804                 STRB            W9, [X19,#0x79]
.text:0000000000048808 loc_48808                               ; CODE XREF: sub_47FC8+574↑j
.text:0000000000048808                 ORR             W8, W8, W21
.text:000000000004880C                 LSL             W9, W8, #2
.text:0000000000048810                 ADD             W9, W9, #0x43 ; 'C'
.text:0000000000048814                 TST             W8, #0xFF
.text:0000000000048818                 CSEL            W8, WZR, W9, EQ
.text:000000000004881C                 STRB            W8, [X19,#0xB6]
.text:0000000000048820                 B               loc_48944
.text:0000000000048824 ; ---------------------------------------------------------------------------
.text:0000000000048824 loc_48824                               ; CODE XREF: sub_47FC8+6E0↑j
.text:0000000000048824                 MOV             W26, WZR
.text:0000000000048828 loc_48828                               ; CODE XREF: sub_47FC8+6EC↑j
.text:0000000000048828                 MOV             X22, X19
.text:000000000004882C                 LDR             X1, [X22],#0x79
.text:0000000000048830                 MOV             X2, X22
.text:0000000000048834                 BL              .EAS_HWGetByte
.text:0000000000048838                 CBNZ            X0, loc_48954
.text:000000000004883C                 LDRB            W8, [X22]
.text:0000000000048840                 ADD             X9, X27, #6
.text:0000000000048844 loc_48844                               ; CODE XREF: sub_47FC8+6D0↑j
.text:0000000000048844                 MOV             W10, #8
.text:0000000000048848                 STRB            W9, [X19,#0x7A]
.text:000000000004884C                 SUB             W10, W10, W9
.text:0000000000048850                 MOV             W11, #0xFF
.text:0000000000048854                 LSR             W12, W8, W9
.text:0000000000048858                 LSR             W10, W11, W10
.text:000000000004885C                 AND             W10, W8, W10
.text:0000000000048860                 MOV             W8, W12
.text:0000000000048864                 STRB            W10, [X19,#0x79]
.text:0000000000048868 loc_48868                               ; CODE XREF: sub_47FC8+6D8↑j
.text:0000000000048868                 ORR             W9, W24, W23
.text:000000000004886C                 MOV             W10, #0x20 ; ' '
.text:0000000000048870                 ORR             W8, W8, W26
.text:0000000000048874                 LSR             W9, W10, W9
.text:0000000000048878                 SXTW            X9, W9
.text:000000000004887C                 MUL             X22, X25, X9
.text:0000000000048880                 AND             W8, W8, #0xFF
.text:0000000000048884                 CMP             W8, #3
.text:0000000000048888                 B.EQ            loc_488B4
.text:000000000004888C                 CMP             W8, #2
.text:0000000000048890                 B.EQ            loc_488CC
.text:0000000000048894                 CMP             W8, #1
.text:0000000000048898                 B.NE            loc_488D4
.text:000000000004889C                 ADD             X22, X22, X22,LSR#1
.text:00000000000488A0                 LDRB            W8, [X19,#0xB3]
.text:00000000000488A4                 CBNZ            W8, loc_488DC
.text:00000000000488A8 loc_488A8                               ; CODE XREF: sub_47FC8+900↓j
.text:00000000000488A8                                         ; sub_47FC8+910↓j
.text:00000000000488A8                 LDR             X8, [X19,#0x18]
.text:00000000000488AC                 ADD             X8, X8, X22
.text:00000000000488B0                 B               loc_48940
.text:00000000000488B4 ; ---------------------------------------------------------------------------
.text:00000000000488B4 loc_488B4                               ; CODE XREF: sub_47FC8+8C0↑j
.text:00000000000488B4                 MOV             W8, #0x2AB
.text:00000000000488B8                 MUL             X8, X22, X8
.text:00000000000488BC                 LSR             X22, X8, #0xA
.text:00000000000488C0                 LDRB            W8, [X19,#0xB3]
.text:00000000000488C4                 CBNZ            W8, loc_488DC
.text:00000000000488C8                 B               loc_488A8
.text:00000000000488CC ; ---------------------------------------------------------------------------
.text:00000000000488CC loc_488CC                               ; CODE XREF: sub_47FC8+8C8↑j
.text:00000000000488CC                 ADD             X8, X22, X22,LSR#2
.text:00000000000488D0                 ADD             X22, X8, X22,LSR#1
.text:00000000000488D4 loc_488D4                               ; CODE XREF: sub_47FC8+8D0↑j
.text:00000000000488D4                 LDRB            W8, [X19,#0xB3]
.text:00000000000488D8                 CBZ             W8, loc_488A8
.text:00000000000488DC loc_488DC                               ; CODE XREF: sub_47FC8+8DC↑j
.text:00000000000488DC                                         ; sub_47FC8+8FC↑j
.text:00000000000488DC                 LDRB            W9, [X19,#0xB5]
.text:00000000000488E0                 CMP             W9, #2
.text:00000000000488E4                 B.EQ            loc_488FC
.text:00000000000488E8                 CMP             W9, #1
.text:00000000000488EC                 B.EQ            loc_48904
.text:00000000000488F0                 CBNZ            W9, loc_4890C
.text:00000000000488F4                 LSR             X9, X22, #4
.text:00000000000488F8                 B               loc_48908
.text:00000000000488FC ; ---------------------------------------------------------------------------
.text:00000000000488FC loc_488FC                               ; CODE XREF: sub_47FC8+91C↑j
.text:00000000000488FC                 LSR             X9, X22, #1
.text:0000000000048900                 B               loc_48908
.text:0000000000048904 ; ---------------------------------------------------------------------------
.text:0000000000048904 loc_48904                               ; CODE XREF: sub_47FC8+924↑j
.text:0000000000048904                 MOV             X9, XZR
.text:0000000000048908 loc_48908                               ; CODE XREF: sub_47FC8+930↑j
.text:0000000000048908                                         ; sub_47FC8+938↑j
.text:0000000000048908                 STR             X9, [X19,#0x28]
.text:000000000004890C loc_4890C                               ; CODE XREF: sub_47FC8+928↑j
.text:000000000004890C                 LDRB            W9, [X19,#0xB4]
.text:0000000000048910                 ADD             W3, W9, W8
.text:0000000000048914                 STRB            W3, [X19,#0xB3]
.text:0000000000048918                 CBNZ            W21, loc_48930
.text:000000000004891C                 LDR             X0, [X20,#0x170]
.text:0000000000048920                 MOV             W2, WZR
.text:0000000000048924                 LDR             X1, [X19,#8]
.text:0000000000048928                 LDRB            W4, [X19,#0xB6]
.text:000000000004892C                 BL              .VMStartNote
.text:0000000000048930 loc_48930                               ; CODE XREF: sub_47FC8+950↑j
.text:0000000000048930                 LDR             X8, [X19,#0x28]
.text:0000000000048934                 LDR             X9, [X19,#0x18]
.text:0000000000048938                 SUB             X8, X22, X8
.text:000000000004893C                 ADD             X8, X8, X9
.text:0000000000048940 loc_48940                               ; CODE XREF: sub_47FC8+8E8↑j
.text:0000000000048940                 STR             X8, [X19,#0x18]
.text:0000000000048944 loc_48944                               ; CODE XREF: sub_47FC8+748↑j
.text:0000000000048944                                         ; sub_47FC8+798↑j ...
.text:0000000000048944                 LDRB            W8, [X19,#0x78]
.text:0000000000048948                 MOV             X0, XZR
.text:000000000004894C                 SUB             W8, W8, #1
.text:0000000000048950                 STRB            W8, [X19,#0x78]
.text:0000000000048954 loc_48954                               ; CODE XREF: sub_47FC8+2C↑j
.text:0000000000048954                                         ; sub_47FC8+C0↑j ...
.text:0000000000048954                 LDP             X29, X30, [SP,#0x50+var_s0]
.text:0000000000048958                 LDP             X20, X19, [SP,#0x50+var_10]
.text:000000000004895C                 LDP             X22, X21, [SP,#0x50+var_20]
.text:0000000000048960                 LDP             X24, X23, [SP,#0x50+var_30]
.text:0000000000048964                 LDP             X26, X25, [SP,#0x50+var_40]
.text:0000000000048968                 LDP             X28, X27, [SP+0x50+var_50],#0x60
.text:000000000004896C                 RET
.text:000000000004896C ; } // starts at 47FC8
.text:000000000004896C ; End of function sub_47FC8
.text:0000000000048970 ; =============== S U B R O U T I N E =======================================
.text:0000000000048970 ; Attributes: bp-based frame
.text:0000000000048970 sub_48970                               ; DATA XREF: .data.rel.ro:0000000000058128↓o
.text:0000000000048970 var_10          = -0x10
.text:0000000000048970 var_s0          =  0
.text:0000000000048970 ; __unwind {
.text:0000000000048970                 STP             X20, X19, [SP,#-0x10+var_10]!
.text:0000000000048974                 STP             X29, X30, [SP,#0x10+var_s0]
.text:0000000000048978                 ADD             X29, SP, #0x10
.text:000000000004897C                 LDRB            W8, [X1,#0xB7]
.text:0000000000048980                 MOV             X20, X1
.text:0000000000048984                 MOV             X19, X2
.text:0000000000048988                 CMP             W8, #2
.text:000000000004898C                 B.NE            loc_489A0
.text:0000000000048990                 LDR             X0, [X20,#8]
.text:0000000000048994                 BL              .VMActiveVoices
.text:0000000000048998                 CBZ             X0, loc_489BC
.text:000000000004899C                 LDRB            W8, [X20,#0xB7]
.text:00000000000489A0 loc_489A0                               ; CODE XREF: sub_48970+1C↑j
.text:00000000000489A0                 CMP             W8, #3
.text:00000000000489A4                 B.NE            loc_489CC
.text:00000000000489A8                 LDR             X0, [X20,#8]
.text:00000000000489AC                 BL              .VMActiveVoices
.text:00000000000489B0                 CBZ             X0, loc_489C4
.text:00000000000489B4                 LDRB            W8, [X20,#0xB7]
.text:00000000000489B8                 B               loc_489CC
.text:00000000000489BC ; ---------------------------------------------------------------------------
.text:00000000000489BC loc_489BC                               ; CODE XREF: sub_48970+28↑j
.text:00000000000489BC                 MOV             W8, #4
.text:00000000000489C0                 B               loc_489C8
.text:00000000000489C4 ; ---------------------------------------------------------------------------
.text:00000000000489C4 loc_489C4                               ; CODE XREF: sub_48970+40↑j
.text:00000000000489C4                 MOV             W8, #5
.text:00000000000489C8 loc_489C8                               ; CODE XREF: sub_48970+50↑j
.text:00000000000489C8                 STRB            W8, [X20,#0xB7]
.text:00000000000489CC loc_489CC                               ; CODE XREF: sub_48970+34↑j
.text:00000000000489CC                                         ; sub_48970+48↑j
.text:00000000000489CC                 STR             X8, [X19]
.text:00000000000489D0                 MOV             X0, XZR
.text:00000000000489D4                 LDP             X29, X30, [SP,#0x10+var_s0]
.text:00000000000489D8                 LDP             X20, X19, [SP+0x10+var_10],#0x20
.text:00000000000489DC                 RET
.text:00000000000489DC ; } // starts at 48970
.text:00000000000489DC ; End of function sub_48970
.text:00000000000489E0 ; =============== S U B R O U T I N E =======================================
.text:00000000000489E0 ; Attributes: bp-based frame
.text:00000000000489E0 sub_489E0                               ; DATA XREF: .data.rel.ro:0000000000058130↓o
.text:00000000000489E0 var_20          = -0x20
.text:00000000000489E0 var_10          = -0x10
.text:00000000000489E0 var_s0          =  0
.text:00000000000489E0 ; __unwind {
.text:00000000000489E0                 STR             X21, [SP,#-0x10+var_20]!
.text:00000000000489E4                 STP             X20, X19, [SP,#0x20+var_10]
.text:00000000000489E8                 STP             X29, X30, [SP,#0x20+var_s0]
.text:00000000000489EC                 ADD             X29, SP, #0x20
.text:00000000000489F0                 MOV             X19, X1
.text:00000000000489F4                 LDR             X1, [X1]
.text:00000000000489F8                 MOV             X20, X0
.text:00000000000489FC                 LDR             X0, [X0]
.text:0000000000048A00                 BL              .EAS_HWCloseFile
.text:0000000000048A04                 MOV             X21, X0
.text:0000000000048A08                 CBNZ            X0, loc_48A30
.text:0000000000048A0C                 LDR             X1, [X19,#8]
.text:0000000000048A10                 CBZ             X1, loc_48A1C
.text:0000000000048A14                 MOV             X0, X20
.text:0000000000048A18                 BL              .VMMIDIShutdown
.text:0000000000048A1C loc_48A1C                               ; CODE XREF: sub_489E0+30↑j
.text:0000000000048A1C                 LDRB            W8, [X20,#0x18B]
.text:0000000000048A20                 CBNZ            W8, loc_48A30
.text:0000000000048A24                 LDR             X0, [X20]
.text:0000000000048A28                 MOV             X1, X19
.text:0000000000048A2C                 BL              .EAS_HWFree
.text:0000000000048A30 loc_48A30                               ; CODE XREF: sub_489E0+28↑j
.text:0000000000048A30                                         ; sub_489E0+40↑j
.text:0000000000048A30                 LDP             X29, X30, [SP,#0x20+var_s0]
.text:0000000000048A34                 LDP             X20, X19, [SP,#0x20+var_10]
.text:0000000000048A38                 MOV             X0, X21
.text:0000000000048A3C                 LDR             X21, [SP+0x20+var_20],#0x30
.text:0000000000048A40                 RET
.text:0000000000048A40 ; } // starts at 489E0
.text:0000000000048A40 ; End of function sub_489E0
.text:0000000000048A40 ; ---------------------------------------------------------------------------
.text:0000000000048A44                 ALIGN 8
.text:0000000000048A48 ; =============== S U B R O U T I N E =======================================
.text:0000000000048A48 ; Attributes: bp-based frame
.text:0000000000048A48 sub_48A48                               ; DATA XREF: .data.rel.ro:0000000000058138↓o
.text:0000000000048A48 var_10          = -0x10
.text:0000000000048A48 var_s0          =  0
.text:0000000000048A48 ; __unwind {
.text:0000000000048A48                 STP             X20, X19, [SP,#-0x10+var_10]!
.text:0000000000048A4C                 STP             X29, X30, [SP,#0x10+var_s0]
.text:0000000000048A50                 ADD             X29, SP, #0x10
.text:0000000000048A54                 MOV             X19, X1
.text:0000000000048A58                 LDR             X1, [X1,#8]
.text:0000000000048A5C                 MOV             X20, X0
.text:0000000000048A60                 LDR             X0, [X0,#0x170]
.text:0000000000048A64                 MOV             W2, #1
.text:0000000000048A68                 BL              .VMReset
.text:0000000000048A6C                 MOV             W8, #7
.text:0000000000048A70                 STRB            WZR, [X19,#0xB3]
.text:0000000000048A74                 MOV             X0, X20
.text:0000000000048A78                 MOV             X1, X19
.text:0000000000048A7C                 STRB            W8, [X19,#0xB7]
.text:0000000000048A80                 BL              sub_48B80
.text:0000000000048A84                 CBNZ            X0, loc_48A8C
.text:0000000000048A88                 STRB            WZR, [X19,#0xB7]
.text:0000000000048A8C loc_48A8C                               ; CODE XREF: sub_48A48+3C↑j
.text:0000000000048A8C                 LDP             X29, X30, [SP,#0x10+var_s0]
.text:0000000000048A90                 LDP             X20, X19, [SP+0x10+var_10],#0x20
.text:0000000000048A94                 RET
.text:0000000000048A94 ; } // starts at 48A48
.text:0000000000048A94 ; End of function sub_48A48
.text:0000000000048A98 ; =============== S U B R O U T I N E =======================================
.text:0000000000048A98 sub_48A98                               ; DATA XREF: .data.rel.ro:0000000000058140↓o
.text:0000000000048A98 var_20          = -0x20
.text:0000000000048A98 var_10          = -0x10
.text:0000000000048A98 ; __unwind {
.text:0000000000048A98                 LDRB            W8, [X1,#0xB7]
.text:0000000000048A9C                 CMP             W8, #4
.text:0000000000048AA0                 B.NE            loc_48AAC
.text:0000000000048AA4                 MOV             X0, #0xFFFFFFFFFFFFFFE8
.text:0000000000048AA8                 RET
.text:0000000000048AAC ; ---------------------------------------------------------------------------
.text:0000000000048AAC loc_48AAC                               ; CODE XREF: sub_48A98+8↑j
.text:0000000000048AAC                 STR             X19, [SP,#var_20]!
.text:0000000000048AB0                 STP             X29, X30, [SP,#0x20+var_10]
.text:0000000000048AB4                 ADD             X29, SP, #0x20+var_10
.text:0000000000048AB8                 MOV             X19, X1
.text:0000000000048ABC                 LDR             X0, [X0,#0x170]
.text:0000000000048AC0                 LDR             X1, [X1,#8]
.text:0000000000048AC4                 BL              .VMMuteAllVoices
.text:0000000000048AC8                 MOV             W8, #3
.text:0000000000048ACC                 MOV             X0, XZR
.text:0000000000048AD0                 STRB            W8, [X19,#0xB7]
.text:0000000000048AD4                 LDP             X29, X30, [SP,#0x20+var_10]
.text:0000000000048AD8                 LDR             X19, [SP+0x20+var_20],#0x20
.text:0000000000048ADC                 RET
.text:0000000000048ADC ; } // starts at 48A98
.text:0000000000048ADC ; End of function sub_48A98
.text:0000000000048AE0 ; =============== S U B R O U T I N E =======================================
.text:0000000000048AE0 sub_48AE0                               ; DATA XREF: .data.rel.ro:0000000000058148↓o
.text:0000000000048AE0 ; __unwind {
.text:0000000000048AE0                 LDRB            W8, [X1,#0xB7]
.text:0000000000048AE4                 CMP             W8, #4
.text:0000000000048AE8                 B.NE            loc_48AF4
.text:0000000000048AEC                 MOV             X0, #0xFFFFFFFFFFFFFFE8
.text:0000000000048AF0                 RET
.text:0000000000048AF4 ; ---------------------------------------------------------------------------
.text:0000000000048AF4 loc_48AF4                               ; CODE XREF: sub_48AE0+8↑j
.text:0000000000048AF4                 MOV             W8, #1
.text:0000000000048AF8                 MOV             X0, XZR
.text:0000000000048AFC                 STRB            W8, [X1,#0xB7]
.text:0000000000048B00                 RET
.text:0000000000048B00 ; } // starts at 48AE0
.text:0000000000048B00 ; End of function sub_48AE0
.text:0000000000048B00 ; ---------------------------------------------------------------------------
.text:0000000000048B04                 ALIGN 8
.text:0000000000048B08 ; __unwind {
.text:0000000000048B08                 CMP             X2, #5
.text:0000000000048B0C                 B.NE            loc_48B34
.text:0000000000048B10                 STP             X29, X30, [SP,#-0x10]!
.text:0000000000048B14                 MOV             X29, SP
.text:0000000000048B18                 ADD             X0, X1, #0x90
.text:0000000000048B1C                 MOV             X1, X3
.text:0000000000048B20                 MOV             W2, #0x20 ; ' '
.text:0000000000048B24                 BL              .EAS_HWMemCpy
.text:0000000000048B28                 MOV             X0, XZR
.text:0000000000048B2C                 LDP             X29, X30, [SP],#0x10
.text:0000000000048B30                 RET
.text:0000000000048B34 ; ---------------------------------------------------------------------------
.text:0000000000048B34 loc_48B34                               ; CODE XREF: .text:0000000000048B0C↑j
.text:0000000000048B34                 MOV             X0, #0xFFFFFFFFFFFFFFE4
.text:0000000000048B38                 RET
.text:0000000000048B38 ; } // starts at 48B08
.text:0000000000048B38 ; ---------------------------------------------------------------------------
.text:0000000000048B3C                 ALIGN 0x20
.text:0000000000048B40 ; __unwind {
.text:0000000000048B40                 CBZ             X2, loc_48B5C
.text:0000000000048B44                 CMP             X2, #0x12
.text:0000000000048B48                 B.EQ            loc_48B64
.text:0000000000048B4C                 CMP             X2, #4
.text:0000000000048B50                 B.NE            loc_48B74
.text:0000000000048B54                 LDR             X8, [X1,#8]
.text:0000000000048B58                 B               loc_48B68
.text:0000000000048B5C ; ---------------------------------------------------------------------------
.text:0000000000048B5C loc_48B5C                               ; CODE XREF: .text:0000000000048B40↑j
.text:0000000000048B5C                 MOV             W8, #9
.text:0000000000048B60                 B               loc_48B68
.text:0000000000048B64 ; ---------------------------------------------------------------------------
.text:0000000000048B64 loc_48B64                               ; CODE XREF: .text:0000000000048B48↑j
.text:0000000000048B64                 MOV             W8, #8
.text:0000000000048B68 loc_48B68                               ; CODE XREF: .text:0000000000048B58↑j
.text:0000000000048B68                                         ; .text:0000000000048B60↑j
.text:0000000000048B68                 MOV             X0, XZR
.text:0000000000048B6C                 STR             X8, [X3]
.text:0000000000048B70                 RET
.text:0000000000048B74 ; ---------------------------------------------------------------------------
.text:0000000000048B74 loc_48B74                               ; CODE XREF: .text:0000000000048B50↑j
.text:0000000000048B74                 MOV             X0, #0xFFFFFFFFFFFFFFE4
.text:0000000000048B78                 RET
.text:0000000000048B78 ; } // starts at 48B40
.text:0000000000048B78 ; ---------------------------------------------------------------------------
.text:0000000000048B7C                 ALIGN 0x20
.text:0000000000048B80 ; =============== S U B R O U T I N E =======================================
.text:0000000000048B80 ; Attributes: bp-based frame
.text:0000000000048B80 sub_48B80                               ; CODE XREF: sub_47F50+3C↑p
.text:0000000000048B80                                         ; sub_48A48+38↑p
.text:0000000000048B80 var_5C          = -0x5C
.text:0000000000048B80 var_58          = -0x58
.text:0000000000048B80 var_50          = -0x50
.text:0000000000048B80 var_40          = -0x40
.text:0000000000048B80 var_30          = -0x30
.text:0000000000048B80 var_20          = -0x20
.text:0000000000048B80 var_10          = -0x10
.text:0000000000048B80 var_s0          =  0
.text:0000000000048B80 ; __unwind {
.text:0000000000048B80                 SUB             SP, SP, #0x70
.text:0000000000048B84                 STP             X28, X27, [SP,#0x60+var_50]
.text:0000000000048B88                 STP             X26, X25, [SP,#0x60+var_40]
.text:0000000000048B8C                 STP             X24, X23, [SP,#0x60+var_30]
.text:0000000000048B90                 STP             X22, X21, [SP,#0x60+var_20]
.text:0000000000048B94                 STP             X20, X19, [SP,#0x60+var_10]
.text:0000000000048B98                 STP             X29, X30, [SP,#0x60+var_s0]
.text:0000000000048B9C                 ADD             X29, SP, #0x60
.text:0000000000048BA0                 MRS             X22, #3, c13, c0, #2
.text:0000000000048BA4                 ADRP            X9, #xmmword_4790@PAGE
.text:0000000000048BA8                 LDR             X8, [X22,#0x28]
.text:0000000000048BAC                 MOV             X10, #0xFFFFFFFFFFFFFFFF
.text:0000000000048BB0                 MOV             X19, X1
.text:0000000000048BB4                 LDR             Q0, [X9,#xmmword_4790@PAGEOFF]
.text:0000000000048BB8                 MOV             W9, #0x3B ; ';'
.text:0000000000048BBC                 MOV             X20, X0
.text:0000000000048BC0                 STR             X8, [SP,#0x60+var_58]
.text:0000000000048BC4                 ADRP            X8, #xmmword_4820@PAGE
.text:0000000000048BC8                 STRB            WZR, [X1,#0xB0]
.text:0000000000048BCC                 STUR            Q0, [X1,#0x18]
.text:0000000000048BD0                 LDR             Q0, [X8,#xmmword_4820@PAGEOFF]
.text:0000000000048BD4                 MOV             W8, #0x5F ; '_'
.text:0000000000048BD8                 STR             X10, [X1,#0x60]
.text:0000000000048BDC                 STR             X10, [X1,#0x50]
.text:0000000000048BE0                 STR             X10, [X1,#0x40]
.text:0000000000048BE4                 STRB            WZR, [X1,#0x7A]
.text:0000000000048BE8                 STRB            WZR, [X1,#0x78]
.text:0000000000048BEC                 STRB            WZR, [X1,#0xB8]
.text:0000000000048BF0                 STR             X10, [X1,#0x80]
.text:0000000000048BF4                 STRB            WZR, [X1,#0xB3]
.text:0000000000048BF8                 STUR            Q0, [X1,#0x28]
.text:0000000000048BFC                 STRB            W8, [X1,#0xB6]
.text:0000000000048C00                 STRH            W9, [X1,#0xB4]
.text:0000000000048C04                 LDR             X0, [X0]
.text:0000000000048C08                 LDR             X1, [X1]
.text:0000000000048C0C                 LDR             X2, [X19,#0x10]
.text:0000000000048C10                 BL              .EAS_HWFileSeek
.text:0000000000048C14                 CBNZ            X0, loc_48C2C
.text:0000000000048C18                 LDR             X0, [X20]
.text:0000000000048C1C                 ADD             X2, SP, #0x60+var_5C
.text:0000000000048C20                 LDR             X1, [X19]
.text:0000000000048C24                 BL              .EAS_HWGetByte
.text:0000000000048C28                 CBZ             X0, loc_48C5C
.text:0000000000048C2C loc_48C2C                               ; CODE XREF: sub_48B80+94↑j
.text:0000000000048C2C                                         ; sub_48B80+108↓j ...
.text:0000000000048C2C                 LDR             X8, [X22,#0x28]
.text:0000000000048C30                 LDR             X9, [SP,#0x60+var_58]
.text:0000000000048C34                 CMP             X8, X9
.text:0000000000048C38                 B.NE            loc_48F98
.text:0000000000048C3C                 LDP             X29, X30, [SP,#0x60+var_s0]
.text:0000000000048C40                 LDP             X20, X19, [SP,#0x60+var_10]
.text:0000000000048C44                 LDP             X22, X21, [SP,#0x60+var_20]
.text:0000000000048C48                 LDP             X24, X23, [SP,#0x60+var_30]
.text:0000000000048C4C                 LDP             X26, X25, [SP,#0x60+var_40]
.text:0000000000048C50                 LDP             X28, X27, [SP,#0x60+var_50]
.text:0000000000048C54                 ADD             SP, SP, #0x70 ; 'p'
.text:0000000000048C58                 RET
.text:0000000000048C5C ; ---------------------------------------------------------------------------
.text:0000000000048C5C loc_48C5C                               ; CODE XREF: sub_48B80+A8↑j
.text:0000000000048C5C                 LDRB            W8, [SP,#0x60+var_5C]
.text:0000000000048C60                 CBZ             W8, loc_48CE0
.text:0000000000048C64                 MOV             W24, WZR
.text:0000000000048C68                 ADD             X21, X19, #0x79 ; 'y'
.text:0000000000048C6C                 NEG             W23, W8
.text:0000000000048C70                 MOV             W25, #1
.text:0000000000048C74 loc_48C74                               ; CODE XREF: sub_48B80+140↓j
.text:0000000000048C74                                         ; sub_48B80+158↓j
.text:0000000000048C74                 STRB            WZR, [X19,#0x7A]
.text:0000000000048C78                 MOV             X2, X21
.text:0000000000048C7C                 LDR             X0, [X20]
.text:0000000000048C80                 LDR             X1, [X19]
.text:0000000000048C84                 BL              .EAS_HWGetByte
.text:0000000000048C88                 CBNZ            X0, loc_48C2C
.text:0000000000048C8C                 LDRB            W8, [X19,#0x79]
.text:0000000000048C90                 STRB            W25, [X19,#0x7A]
.text:0000000000048C94                 AND             W9, W8, #1
.text:0000000000048C98                 LSR             W8, W8, #1
.text:0000000000048C9C                 STRB            W9, [X19,#0x79]
.text:0000000000048CA0                 STRB            W8, [SP,#0x60+var_5C]
.text:0000000000048CA4                 CBZ             W24, loc_48CC8
.text:0000000000048CA8                 CMP             W8, #0x22 ; '"'
.text:0000000000048CAC                 B.NE            loc_48D18
.text:0000000000048CB0                 LDRB            W8, [X19,#0xB0]
.text:0000000000048CB4                 ORR             W8, W8, #1
.text:0000000000048CB8                 STRB            W8, [X19,#0xB0]
.text:0000000000048CBC                 ADDS            W23, W23, #1
.text:0000000000048CC0                 B.CC            loc_48C74
.text:0000000000048CC4                 B               loc_48D20
.text:0000000000048CC8 ; ---------------------------------------------------------------------------
.text:0000000000048CC8 loc_48CC8                               ; CODE XREF: sub_48B80+124↑j
.text:0000000000048CC8                 CMP             W8, #0x25 ; '%'
.text:0000000000048CCC                 B.NE            loc_48DAC
.text:0000000000048CD0                 MOV             W24, #1
.text:0000000000048CD4                 ADDS            W23, W23, #1
.text:0000000000048CD8                 B.CC            loc_48C74
.text:0000000000048CDC                 B               loc_48D20
.text:0000000000048CE0 ; ---------------------------------------------------------------------------
.text:0000000000048CE0 loc_48CE0                               ; CODE XREF: sub_48B80+E0↑j
.text:0000000000048CE0                 LDRB            W24, [X19,#0x7A]
.text:0000000000048CE4                 SUBS            X9, X24, #3
.text:0000000000048CE8                 B.MI            loc_48D04
.text:0000000000048CEC                 LDRB            W8, [X19,#0x79]
.text:0000000000048CF0                 MOV             W23, WZR
.text:0000000000048CF4                 CBNZ            X9, loc_48D54
.text:0000000000048CF8                 MOV             W10, W8
.text:0000000000048CFC                 STRB            WZR, [X19,#0x7A]
.text:0000000000048D00                 B               loc_48D74
.text:0000000000048D04 ; ---------------------------------------------------------------------------
.text:0000000000048D04 loc_48D04                               ; CODE XREF: sub_48B80+168↑j
.text:0000000000048D04                 LDR             X0, [X20]
.text:0000000000048D08                 CBNZ            W24, loc_48D2C
.text:0000000000048D0C                 MOV             X24, XZR
.text:0000000000048D10                 MOV             W23, WZR
.text:0000000000048D14                 B               loc_48D38
.text:0000000000048D18 ; ---------------------------------------------------------------------------
.text:0000000000048D18 loc_48D18                               ; CODE XREF: sub_48B80+12C↑j
.text:0000000000048D18                 CMP             W8, #0x1D
.text:0000000000048D1C                 B.NE            loc_48DAC
.text:0000000000048D20 loc_48D20                               ; CODE XREF: sub_48B80+144↑j
.text:0000000000048D20                                         ; sub_48B80+15C↑j
.text:0000000000048D20                 LDR             X0, [X20]
.text:0000000000048D24                 MOV             X9, #0xFFFFFFFFFFFFFFFE
.text:0000000000048D28                 MOV             W24, #1
.text:0000000000048D2C loc_48D2C                               ; CODE XREF: sub_48B80+188↑j
.text:0000000000048D2C                 LDRB            W8, [X19,#0x79]
.text:0000000000048D30                 NEG             W9, W9
.text:0000000000048D34                 LSL             W23, W8, W9
.text:0000000000048D38 loc_48D38                               ; CODE XREF: sub_48B80+194↑j
.text:0000000000048D38                 MOV             X21, X19
.text:0000000000048D3C                 LDR             X1, [X21],#0x79
.text:0000000000048D40                 MOV             X2, X21
.text:0000000000048D44                 BL              .EAS_HWGetByte
.text:0000000000048D48                 CBNZ            X0, loc_48C2C
.text:0000000000048D4C                 LDRB            W8, [X21]
.text:0000000000048D50                 ADD             X9, X24, #5
.text:0000000000048D54 loc_48D54                               ; CODE XREF: sub_48B80+174↑j
.text:0000000000048D54                 MOV             W10, #8
.text:0000000000048D58                 STRB            W9, [X19,#0x7A]
.text:0000000000048D5C                 SUB             W11, W10, W9
.text:0000000000048D60                 MOV             W12, #0xFF
.text:0000000000048D64                 LSR             W10, W8, W9
.text:0000000000048D68                 LSR             W11, W12, W11
.text:0000000000048D6C                 AND             W8, W8, W11
.text:0000000000048D70                 STRB            W8, [X19,#0x79]
.text:0000000000048D74 loc_48D74                               ; CODE XREF: sub_48B80+180↑j
.text:0000000000048D74                 ORR             W11, W10, W23
.text:0000000000048D78                 AND             W10, W11, #0xFF
.text:0000000000048D7C                 CMP             W10, #2
.text:0000000000048D80                 STRB            W11, [SP,#0x60+var_5C]
.text:0000000000048D84                 B.EQ            loc_48F08
.text:0000000000048D88                 CMP             W10, #1
.text:0000000000048D8C                 B.NE            loc_48DAC
.text:0000000000048D90                 AND             X24, X9, #0xFF
.text:0000000000048D94                 SUBS            X10, X24, #4
.text:0000000000048D98                 B.MI            loc_48DB4
.text:0000000000048D9C                 MOV             W23, WZR
.text:0000000000048DA0                 CBNZ            X10, loc_48DEC
.text:0000000000048DA4                 STRB            WZR, [X19,#0x7A]
.text:0000000000048DA8                 B               loc_48E10
.text:0000000000048DAC ; ---------------------------------------------------------------------------
.text:0000000000048DAC loc_48DAC                               ; CODE XREF: sub_48B80+14C↑j
.text:0000000000048DAC                                         ; sub_48B80+19C↑j ...
.text:0000000000048DAC                 MOV             X0, #0xFFFFFFFFFFFFFFEF
.text:0000000000048DB0                 B               loc_48C2C
.text:0000000000048DB4 ; ---------------------------------------------------------------------------
.text:0000000000048DB4 loc_48DB4                               ; CODE XREF: sub_48B80+218↑j
.text:0000000000048DB4                 LDR             X0, [X20]
.text:0000000000048DB8                 TST             W9, #0xFF
.text:0000000000048DBC                 B.EQ            loc_48DCC
.text:0000000000048DC0                 NEG             W9, W10
.text:0000000000048DC4                 LSL             W23, W8, W9
.text:0000000000048DC8                 B               loc_48DD0
.text:0000000000048DCC ; ---------------------------------------------------------------------------
.text:0000000000048DCC loc_48DCC                               ; CODE XREF: sub_48B80+23C↑j
.text:0000000000048DCC                 MOV             W23, WZR
.text:0000000000048DD0 loc_48DD0                               ; CODE XREF: sub_48B80+248↑j
.text:0000000000048DD0                 MOV             X21, X19
.text:0000000000048DD4                 LDR             X1, [X21],#0x79
.text:0000000000048DD8                 MOV             X2, X21
.text:0000000000048DDC                 BL              .EAS_HWGetByte
.text:0000000000048DE0                 CBNZ            X0, loc_48C2C
.text:0000000000048DE4                 LDRB            W8, [X21]
.text:0000000000048DE8                 ADD             X10, X24, #4
.text:0000000000048DEC loc_48DEC                               ; CODE XREF: sub_48B80+220↑j
.text:0000000000048DEC                 MOV             W9, #8
.text:0000000000048DF0                 STRB            W10, [X19,#0x7A]
.text:0000000000048DF4                 SUB             W9, W9, W10
.text:0000000000048DF8                 MOV             W11, #0xFF
.text:0000000000048DFC                 LSR             W12, W8, W10
.text:0000000000048E00                 LSR             W9, W11, W9
.text:0000000000048E04                 AND             W9, W8, W9
.text:0000000000048E08                 MOV             W8, W12
.text:0000000000048E0C                 STRB            W9, [X19,#0x79]
.text:0000000000048E10 loc_48E10                               ; CODE XREF: sub_48B80+228↑j
.text:0000000000048E10                 LDRB            W9, [X19,#0xB0]
.text:0000000000048E14                 ORR             W8, W8, W23
.text:0000000000048E18                 LDR             X0, [X19,#0x98]
.text:0000000000048E1C                 AND             X9, X9, #1
.text:0000000000048E20                 LSL             W24, W8, W9
.text:0000000000048E24                 CBZ             X0, loc_48E34
.text:0000000000048E28                 LDR             X2, [X19,#0xA8]
.text:0000000000048E2C                 MOV             W1, WZR
.text:0000000000048E30                 BL              .EAS_HWMemSet
.text:0000000000048E34 loc_48E34                               ; CODE XREF: sub_48B80+2A4↑j
.text:0000000000048E34                 TST             W24, #0xFF
.text:0000000000048E38                 B.EQ            loc_48EF4
.text:0000000000048E3C                 MOV             X23, XZR
.text:0000000000048E40                 ADD             X21, X19, #0x79 ; 'y'
.text:0000000000048E44                 AND             X24, X24, #0xFF
.text:0000000000048E48                 MOV             W25, #8
.text:0000000000048E4C                 MOV             W26, #0xFF
.text:0000000000048E50 loc_48E50                               ; CODE XREF: sub_48B80+370↓j
.text:0000000000048E50                 LDRB            W27, [X19,#0x7A]
.text:0000000000048E54                 SUBS            X8, X27, #8
.text:0000000000048E58                 B.MI            loc_48E68
.text:0000000000048E5C                 MOV             W28, WZR
.text:0000000000048E60                 MOV             X27, X8
.text:0000000000048E64                 B               loc_48E94
.text:0000000000048E68 ; ---------------------------------------------------------------------------
.text:0000000000048E68 loc_48E68                               ; CODE XREF: sub_48B80+2D8↑j
.text:0000000000048E68                 LDR             X0, [X20]
.text:0000000000048E6C                 CBZ             W27, loc_48E80
.text:0000000000048E70                 LDRB            W9, [X21]
.text:0000000000048E74                 NEG             W8, W8
.text:0000000000048E78                 LSL             W28, W9, W8
.text:0000000000048E7C                 B               loc_48E84
.text:0000000000048E80 ; ---------------------------------------------------------------------------
.text:0000000000048E80 loc_48E80                               ; CODE XREF: sub_48B80+2EC↑j
.text:0000000000048E80                 MOV             W28, WZR
.text:0000000000048E84 loc_48E84                               ; CODE XREF: sub_48B80+2FC↑j
.text:0000000000048E84                 LDR             X1, [X19]
.text:0000000000048E88                 MOV             X2, X21
.text:0000000000048E8C                 BL              .EAS_HWGetByte
.text:0000000000048E90                 CBNZ            X0, loc_48C2C
.text:0000000000048E94 loc_48E94                               ; CODE XREF: sub_48B80+2E4↑j
.text:0000000000048E94                 LDRB            W8, [X21]
.text:0000000000048E98                 CMP             X27, #1
.text:0000000000048E9C                 B.LT            loc_48EBC
.text:0000000000048EA0                 SUB             W9, W25, W27
.text:0000000000048EA4                 STRB            W27, [X19,#0x7A]
.text:0000000000048EA8                 LSR             W9, W26, W9
.text:0000000000048EAC                 AND             W9, W8, W9
.text:0000000000048EB0                 LSR             W8, W8, W27
.text:0000000000048EB4                 STRB            W9, [X19,#0x79]
.text:0000000000048EB8                 B               loc_48EC0
.text:0000000000048EBC ; ---------------------------------------------------------------------------
.text:0000000000048EBC loc_48EBC                               ; CODE XREF: sub_48B80+31C↑j
.text:0000000000048EBC                 STRB            WZR, [X19,#0x7A]
.text:0000000000048EC0 loc_48EC0                               ; CODE XREF: sub_48B80+338↑j
.text:0000000000048EC0                 LDR             X9, [X19,#0x90]
.text:0000000000048EC4                 ORR             W8, W8, W28
.text:0000000000048EC8                 STRB            W8, [SP,#0x60+var_5C]
.text:0000000000048ECC                 CBZ             X9, loc_48EE8
.text:0000000000048ED0                 LDR             X9, [X19,#0xA8]
.text:0000000000048ED4                 SUB             X9, X9, #1
.text:0000000000048ED8                 CMP             X9, X23
.text:0000000000048EDC                 B.LE            loc_48EE8
.text:0000000000048EE0                 LDR             X9, [X19,#0x98]
.text:0000000000048EE4                 STRB            W8, [X9,X23]
.text:0000000000048EE8 loc_48EE8                               ; CODE XREF: sub_48B80+34C↑j
.text:0000000000048EE8                                         ; sub_48B80+35C↑j
.text:0000000000048EE8                 ADD             X23, X23, #1
.text:0000000000048EEC                 CMP             X23, X24
.text:0000000000048EF0                 B.CC            loc_48E50
.text:0000000000048EF4 loc_48EF4                               ; CODE XREF: sub_48B80+2B8↑j
.text:0000000000048EF4                 LDR             X8, [X19,#0x90]
.text:0000000000048EF8                 CBZ             X8, loc_48F08
.text:0000000000048EFC                 LDP             X1, X2, [X19,#0x98]
.text:0000000000048F00                 MOV             W0, #1
.text:0000000000048F04                 BLR             X8
.text:0000000000048F08 loc_48F08                               ; CODE XREF: sub_48B80+204↑j
.text:0000000000048F08                                         ; sub_48B80+378↑j
.text:0000000000048F08                 LDRB            W21, [X19,#0x7A]
.text:0000000000048F0C                 SUBS            X8, X21, #8
.text:0000000000048F10                 B.MI            loc_48F4C
.text:0000000000048F14                 MOV             W20, WZR
.text:0000000000048F18                 MOV             X21, X8
.text:0000000000048F1C loc_48F1C                               ; CODE XREF: sub_48B80+414↓j
.text:0000000000048F1C                 LDRB            W8, [X19,#0x79]
.text:0000000000048F20                 CMP             X21, #1
.text:0000000000048F24                 B.LT            loc_48F64
.text:0000000000048F28                 MOV             W9, #8
.text:0000000000048F2C                 STRB            W21, [X19,#0x7A]
.text:0000000000048F30                 SUB             W9, W9, W21
.text:0000000000048F34                 MOV             W10, #0xFF
.text:0000000000048F38                 LSR             W9, W10, W9
.text:0000000000048F3C                 AND             W9, W8, W9
.text:0000000000048F40                 LSR             W8, W8, W21
.text:0000000000048F44                 STRB            W9, [X19,#0x79]
.text:0000000000048F48                 B               loc_48F68
.text:0000000000048F4C ; ---------------------------------------------------------------------------
.text:0000000000048F4C loc_48F4C                               ; CODE XREF: sub_48B80+390↑j
.text:0000000000048F4C                 LDR             X0, [X20]
.text:0000000000048F50                 CBZ             W21, loc_48F80
.text:0000000000048F54                 LDRB            W9, [X19,#0x79]
.text:0000000000048F58                 NEG             W8, W8
.text:0000000000048F5C                 LSL             W20, W9, W8
.text:0000000000048F60                 B               loc_48F84
.text:0000000000048F64 ; ---------------------------------------------------------------------------
.text:0000000000048F64 loc_48F64                               ; CODE XREF: sub_48B80+3A4↑j
.text:0000000000048F64                 STRB            WZR, [X19,#0x7A]
.text:0000000000048F68 loc_48F68                               ; CODE XREF: sub_48B80+3C8↑j
.text:0000000000048F68                 ORR             W8, W8, W20
.text:0000000000048F6C                 TST             W8, #0xFF
.text:0000000000048F70                 MOV             X9, #0xFFFFFFFFFFFFFFEF
.text:0000000000048F74                 CSEL            X0, X9, XZR, EQ
.text:0000000000048F78                 STRB            W8, [X19,#0xB1]
.text:0000000000048F7C                 B               loc_48C2C
.text:0000000000048F80 ; ---------------------------------------------------------------------------
.text:0000000000048F80 loc_48F80                               ; CODE XREF: sub_48B80+3D0↑j
.text:0000000000048F80                 MOV             W20, WZR
.text:0000000000048F84 loc_48F84                               ; CODE XREF: sub_48B80+3E0↑j
.text:0000000000048F84                 MOV             X2, X19
.text:0000000000048F88                 LDR             X1, [X2],#0x79
.text:0000000000048F8C                 BL              .EAS_HWGetByte
.text:0000000000048F90                 CBNZ            X0, loc_48C2C
.text:0000000000048F94                 B               loc_48F1C
.text:0000000000048F98 ; ---------------------------------------------------------------------------
.text:0000000000048F98 loc_48F98                               ; CODE XREF: sub_48B80+B8↑j
.text:0000000000048F98                 BL              .__stack_chk_fail
.text:0000000000048F98 ; } // starts at 48B80
.text:0000000000048F98 ; End of function sub_48B80
.text:0000000000048F98 ; ---------------------------------------------------------------------------
.text:0000000000048F9C                 ALIGN 0x20
.text:0000000000048FA0 ; =============== S U B R O U T I N E =======================================
.text:0000000000048FA0                 EXPORT EAS_CalcPanControl
.text:0000000000048FA0 EAS_CalcPanControl                      ; CODE XREF: .EAS_CalcPanControl+C↓j
.text:0000000000048FA0                                         ; DATA XREF: LOAD:0000000000001B90↑o ...
.text:0000000000048FA0 ; __unwind {
.text:0000000000048FA0                 CMN             W0, #0x3F ; '?'
.text:0000000000048FA4                 B.GE            loc_48FB0
.text:0000000000048FA8                 MOV             W8, #0xFFFFC100
.text:0000000000048FAC                 B               loc_48FC0
.text:0000000000048FB0 ; ---------------------------------------------------------------------------
.text:0000000000048FB0 loc_48FB0                               ; CODE XREF: EAS_CalcPanControl+4↑j
.text:0000000000048FB0                 LSL             W8, W0, #8
.text:0000000000048FB4                 CMP             W0, #0x3F ; '?'
.text:0000000000048FB8                 MOV             W9, #0x3F00
.text:0000000000048FBC                 CSEL            W8, W9, W8, GT
.text:0000000000048FC0 loc_48FC0                               ; CODE XREF: EAS_CalcPanControl+C↑j
.text:0000000000048FC0                 MOV             W9, #0xFFFF95F6
.text:0000000000048FC4                 MOV             W11, #0x5A82
.text:0000000000048FC8                 MUL             W9, W8, W9
.text:0000000000048FCC                 ASR             W9, W9, #0xF
.text:0000000000048FD0                 ADD             W10, W9, #8,LSL#12
.text:0000000000048FD4                 SUB             W9, W9, #8,LSL#12
.text:0000000000048FD8                 MUL             W10, W10, W8
.text:0000000000048FDC                 MUL             W8, W9, W8
.text:0000000000048FE0                 MOV             W9, #0x7FFF
.text:0000000000048FE4                 ADD             W10, W11, W10,ASR#15
.text:0000000000048FE8                 ADD             W8, W11, W8,ASR#15
.text:0000000000048FEC                 BIC             W10, W10, W10,ASR#31
.text:0000000000048FF0                 BIC             W8, W8, W8,ASR#31
.text:0000000000048FF4                 CMP             W10, W9
.text:0000000000048FF8                 CSEL            W10, W10, W9, LT
.text:0000000000048FFC                 CMP             W8, W9
.text:0000000000049000                 CSEL            W8, W8, W9, LT
.text:0000000000049004                 STRH            W10, [X2]
.text:0000000000049008                 STRH            W8, [X1]
.text:000000000004900C                 RET
.text:000000000004900C ; } // starts at 48FA0
.text:000000000004900C ; End of function EAS_CalcPanControl
.text:0000000000049010 ; =============== S U B R O U T I N E =======================================
.text:0000000000049010 ; Attributes: bp-based frame
.text:0000000000049010                 EXPORT EAS_PEInit
.text:0000000000049010 EAS_PEInit                              ; CODE XREF: .EAS_PEInit+C↓j
.text:0000000000049010                                         ; DATA XREF: LOAD:0000000000000EE8↑o ...
.text:0000000000049010 var_10          = -0x10
.text:0000000000049010 var_s0          =  0
.text:0000000000049010 ; __unwind {
.text:0000000000049010                 STR             X19, [SP,#-0x10+var_10]!
.text:0000000000049014                 STP             X29, X30, [SP,#0x10+var_s0]
.text:0000000000049018                 ADD             X29, SP, #0x10
.text:000000000004901C                 LDRB            W8, [X0,#0x18B]
.text:0000000000049020                 MOV             X19, X0
.text:0000000000049024                 CBZ             W8, loc_49090
.text:0000000000049028                 MOV             W0, #8
.text:000000000004902C                 BL              .EAS_CMEnumData
.text:0000000000049030                 STR             X0, [X19,#0x168]
.text:0000000000049034                 CBZ             X0, loc_490A4
.text:0000000000049038 loc_49038                               ; CODE XREF: EAS_PEInit+90↓j
.text:0000000000049038                 MOV             W2, #0x1500
.text:000000000004903C                 MOV             W1, WZR
.text:0000000000049040                 BL              .EAS_HWMemSet
.text:0000000000049044                 LDR             X8, [X19,#0x168]
.text:0000000000049048                 MOV             X0, XZR
.text:000000000004904C                 STR             XZR, [X8]
.text:0000000000049050                 STR             XZR, [X8,#0x150]
.text:0000000000049054                 STR             XZR, [X8,#0x2A0]
.text:0000000000049058                 STR             XZR, [X8,#0x3F0]
.text:000000000004905C                 STR             XZR, [X8,#0x540]
.text:0000000000049060                 STR             XZR, [X8,#0x690]
.text:0000000000049064                 STR             XZR, [X8,#0x7E0]
.text:0000000000049068                 STR             XZR, [X8,#0x930]
.text:000000000004906C                 STR             XZR, [X8,#0xA80]
.text:0000000000049070                 STR             XZR, [X8,#0xBD0]
.text:0000000000049074                 STR             XZR, [X8,#0xD20]
.text:0000000000049078                 STR             XZR, [X8,#0xE70]
.text:000000000004907C                 STR             XZR, [X8,#0xFC0]
.text:0000000000049080                 STR             XZR, [X8,#0x1110]
.text:0000000000049084                 STR             XZR, [X8,#0x1260]
.text:0000000000049088                 STR             XZR, [X8,#0x13B0]
.text:000000000004908C                 B               loc_490A8
.text:0000000000049090 ; ---------------------------------------------------------------------------
.text:0000000000049090 loc_49090                               ; CODE XREF: EAS_PEInit+14↑j
.text:0000000000049090                 LDR             X0, [X19]
.text:0000000000049094                 MOV             W1, #0x1500
.text:0000000000049098                 BL              .EAS_HWMalloc
.text:000000000004909C                 STR             X0, [X19,#0x168]
.text:00000000000490A0                 CBNZ            X0, loc_49038
.text:00000000000490A4 loc_490A4                               ; CODE XREF: EAS_PEInit+24↑j
.text:00000000000490A4                 MOV             X0, #0xFFFFFFFFFFFFFFFD
.text:00000000000490A8 loc_490A8                               ; CODE XREF: EAS_PEInit+7C↑j
.text:00000000000490A8                 LDP             X29, X30, [SP,#0x10+var_s0]
.text:00000000000490AC                 LDR             X19, [SP+0x10+var_10],#0x20
.text:00000000000490B0                 RET
.text:00000000000490B0 ; } // starts at 49010
.text:00000000000490B0 ; End of function EAS_PEInit
.text:00000000000490B0 ; ---------------------------------------------------------------------------
.text:00000000000490B4                 ALIGN 8
.text:00000000000490B8 ; =============== S U B R O U T I N E =======================================
.text:00000000000490B8 ; Attributes: bp-based frame
.text:00000000000490B8                 EXPORT EAS_PEShutdown
.text:00000000000490B8 EAS_PEShutdown                          ; CODE XREF: .EAS_PEShutdown+C↓j
.text:00000000000490B8                                         ; DATA XREF: LOAD:stru_1548↑o ...
.text:00000000000490B8 var_10          = -0x10
.text:00000000000490B8 var_s0          =  0
.text:00000000000490B8 ; __unwind {
.text:00000000000490B8                 STR             X19, [SP,#-0x10+var_10]!
.text:00000000000490BC                 STP             X29, X30, [SP,#0x10+var_s0]
.text:00000000000490C0                 ADD             X29, SP, #0x10
.text:00000000000490C4                 LDRB            W8, [X0,#0x18B]
.text:00000000000490C8                 CBNZ            W8, loc_490E4
.text:00000000000490CC                 LDR             X1, [X0,#0x168]
.text:00000000000490D0                 MOV             X19, X0
.text:00000000000490D4                 CBZ             X1, loc_490E4
.text:00000000000490D8                 LDR             X0, [X19]
.text:00000000000490DC                 BL              .EAS_HWFree
.text:00000000000490E0                 STR             XZR, [X19,#0x168]
.text:00000000000490E4 loc_490E4                               ; CODE XREF: EAS_PEShutdown+10↑j
.text:00000000000490E4                                         ; EAS_PEShutdown+1C↑j
.text:00000000000490E4                 LDP             X29, X30, [SP,#0x10+var_s0]
.text:00000000000490E8                 MOV             X0, XZR
.text:00000000000490EC                 LDR             X19, [SP+0x10+var_10],#0x20
.text:00000000000490F0                 RET
.text:00000000000490F0 ; } // starts at 490B8
.text:00000000000490F0 ; End of function EAS_PEShutdown
.text:00000000000490F0 ; ---------------------------------------------------------------------------
.text:00000000000490F4                 ALIGN 8
.text:00000000000490F8 ; =============== S U B R O U T I N E =======================================
.text:00000000000490F8 ; Attributes: bp-based frame
.text:00000000000490F8                 EXPORT EAS_PERender
.text:00000000000490F8 EAS_PERender                            ; CODE XREF: .EAS_PERender+C↓j
.text:00000000000490F8                                         ; DATA XREF: LOAD:0000000000001530↑o ...
.text:00000000000490F8 var_58          = -0x58
.text:00000000000490F8 var_50          = -0x50
.text:00000000000490F8 var_40          = -0x40
.text:00000000000490F8 var_30          = -0x30
.text:00000000000490F8 var_20          = -0x20
.text:00000000000490F8 var_10          = -0x10
.text:00000000000490F8 var_s0          =  0
.text:00000000000490F8 ; __unwind {
.text:00000000000490F8                 SUB             SP, SP, #0x70
.text:00000000000490FC                 STP             X28, X27, [SP,#0x60+var_50]
.text:0000000000049100                 STP             X26, X25, [SP,#0x60+var_40]
.text:0000000000049104                 STP             X24, X23, [SP,#0x60+var_30]
.text:0000000000049108                 STP             X22, X21, [SP,#0x60+var_20]
.text:000000000004910C                 STP             X20, X19, [SP,#0x60+var_10]
.text:0000000000049110                 STP             X29, X30, [SP,#0x60+var_s0]
.text:0000000000049114                 ADD             X29, SP, #0x60
.text:0000000000049118                 ADRP            X19, #unk_59C8@PAGE
.text:000000000004911C                 LDR             X22, [X0,#0x168]
.text:0000000000049120                 MOV             X28, X1
.text:0000000000049124                 STR             X1, [SP,#0x60+var_58]
.text:0000000000049128                 MOV             X20, X0
.text:000000000004912C                 MOV             W23, WZR
.text:0000000000049130                 ADD             X19, X19, #unk_59C8@PAGEOFF
.text:0000000000049134                 B               loc_4956C
.text:0000000000049138 ; ---------------------------------------------------------------------------
.text:0000000000049138 loc_49138                               ; CODE XREF: EAS_PERender+488↓j
.text:0000000000049138                 LDR             W9, [X22,#0x130]
.text:000000000004913C                 CMP             W9, #5
.text:0000000000049140                 B.HI            loc_49310
.text:0000000000049144                 ADR             X10, loc_49154
.text:0000000000049148                 LDRB            W11, [X19,X9]
.text:000000000004914C                 ADD             X10, X10, X11,LSL#2
.text:0000000000049150                 BR              X10
.text:0000000000049154 ; ---------------------------------------------------------------------------
.text:0000000000049154 loc_49154                               ; DATA XREF: EAS_PERender+4C↑o
.text:0000000000049154                 LDP             X9, X10, [X22,#0x98]
.text:0000000000049158                 MUL             X9, X10, X9
.text:000000000004915C                 LSR             X9, X9, #9
.text:0000000000049160                 CMP             X9, #0x100
.text:0000000000049164                 STR             X9, [X22,#0x98]
.text:0000000000049168                 B.HI            loc_49310
.text:000000000004916C                 MOV             W9, #0x200
.text:0000000000049170                 STR             X9, [X22,#0xA0]
.text:0000000000049174                 MOV             W9, #5
.text:0000000000049178                 B               loc_4930C
.text:000000000004917C ; ---------------------------------------------------------------------------
.text:000000000004917C                 LDR             X9, [X22,#0x90]
.text:0000000000049180                 UBFX            X10, X9, #0xC, #4
.text:0000000000049184                 CMP             X10, #0xF
.text:0000000000049188                 B.EQ            loc_49190
.text:000000000004918C                 CBNZ            X10, loc_4928C
.text:0000000000049190 loc_49190                               ; CODE XREF: EAS_PERender+90↑j
.text:0000000000049190                 MOV             W11, #0x400000
.text:0000000000049194                 UBFX            X10, X9, #0x10, #4
.text:0000000000049198                 CMP             X10, #0xF
.text:000000000004919C                 STR             X11, [X22,#0x98]
.text:00000000000491A0                 B.NE            loc_491E4
.text:00000000000491A4                 MOV             X10, XZR
.text:00000000000491A8                 B               loc_491F0
.text:00000000000491AC ; ---------------------------------------------------------------------------
.text:00000000000491AC                 LDP             X10, X9, [X22,#0x98]
.text:00000000000491B0                 B               loc_492C8
.text:00000000000491B4 ; ---------------------------------------------------------------------------
.text:00000000000491B4                 LDP             X9, X11, [X22,#0x90]
.text:00000000000491B8                 LDR             X10, [X22,#0xA0]
.text:00000000000491BC                 B               loc_49224
.text:00000000000491C0 ; ---------------------------------------------------------------------------
.text:00000000000491C0                 LDRSH           X9, [X22,#0x13C]
.text:00000000000491C4                 LDRSH           X10, [X22,#0x13E]
.text:00000000000491C8                 AND             W8, W9, #0xFFFF
.text:00000000000491CC                 LSL             X24, X9, #7
.text:00000000000491D0                 AND             W19, W10, #0xFFFF
.text:00000000000491D4                 MOV             W9, #2
.text:00000000000491D8                 LSL             X25, X10, #7
.text:00000000000491DC                 STR             X9, [X22,#0x20]
.text:00000000000491E0                 B               loc_49344
.text:00000000000491E4 ; ---------------------------------------------------------------------------
.text:00000000000491E4 loc_491E4                               ; CODE XREF: EAS_PERender+A8↑j
.text:00000000000491E4                 ADRP            X11, #off_5AB8@PAGE
.text:00000000000491E8                 ADD             X11, X11, #off_5AB8@PAGEOFF
.text:00000000000491EC                 LDR             X10, [X11,X10,LSL#3]
.text:00000000000491F0 loc_491F0                               ; CODE XREF: EAS_PERender+B0↑j
.text:00000000000491F0                 LDRSH           W11, [X22,#0x138]
.text:00000000000491F4                 LDRSH           W12, [X22,#0x134]
.text:00000000000491F8                 LDRSH           W13, [X22,#0x13A]
.text:00000000000491FC                 STR             X10, [X22,#0xA0]
.text:0000000000049200                 MUL             W14, W12, W11
.text:0000000000049204                 MOV             W11, #0x400000
.text:0000000000049208                 MUL             W12, W13, W12
.text:000000000004920C                 LSR             W13, W14, #0xF
.text:0000000000049210                 MOV             W14, #2
.text:0000000000049214                 LSR             W12, W12, #0xF
.text:0000000000049218                 STRH            W13, [X22,#0x13C]
.text:000000000004921C                 STR             W14, [X22,#0x130]
.text:0000000000049220                 STRH            W12, [X22,#0x13E]
.text:0000000000049224 loc_49224                               ; CODE XREF: EAS_PERender+C4↑j
.text:0000000000049224                 LSR             X12, X9, #8
.text:0000000000049228                 MUL             X10, X10, X11
.text:000000000004922C                 UBFX            X11, X9, #8, #4
.text:0000000000049230                 UBFX            X12, X12, #1, #3
.text:0000000000049234                 MOV             W13, #0x400080
.text:000000000004923C                 CMP             X11, #0xF
.text:0000000000049240                 MOV             W11, #0x100
.text:0000000000049244                 LSR             X10, X10, #9
.text:0000000000049248                 LSR             W12, W13, W12
.text:000000000004924C                 CSEL            X11, X11, X12, EQ
.text:0000000000049250                 STR             X10, [X22,#0x98]
.text:0000000000049254                 CMP             X10, X11
.text:0000000000049258                 B.HI            loc_49310
.text:000000000004925C                 UBFX            X9, X9, #0x1C, #4
.text:0000000000049260                 CMP             X9, #0xF
.text:0000000000049264                 B.NE            loc_49270
.text:0000000000049268                 MOV             X9, XZR
.text:000000000004926C                 B               loc_4927C
.text:0000000000049270 ; ---------------------------------------------------------------------------
.text:0000000000049270 loc_49270                               ; CODE XREF: EAS_PERender+16C↑j
.text:0000000000049270                 ADRP            X10, #off_5AB8@PAGE
.text:0000000000049274                 ADD             X10, X10, #off_5AB8@PAGEOFF
.text:0000000000049278                 LDR             X9, [X10,X9,LSL#3]
.text:000000000004927C loc_4927C                               ; CODE XREF: EAS_PERender+174↑j
.text:000000000004927C                 STR             X9, [X22,#0xA0]
.text:0000000000049280                 MOV             W9, #3
.text:0000000000049284                 STR             W9, [X22,#0x130]
.text:0000000000049288                 B               loc_49310
.text:000000000004928C ; ---------------------------------------------------------------------------
.text:000000000004928C loc_4928C                               ; CODE XREF: EAS_PERender+94↑j
.text:000000000004928C                 SUB             X9, X10, #1
.text:0000000000049290                 STR             WZR, [X22,#0x13C]
.text:0000000000049294                 MOV             W10, #0x100
.text:0000000000049298                 CMP             X9, #0xD
.text:000000000004929C                 STR             X10, [X22,#0x98]
.text:00000000000492A0                 B.HI            loc_492B4
.text:00000000000492A4                 ADRP            X10, #unk_59D0@PAGE
.text:00000000000492A8                 ADD             X10, X10, #unk_59D0@PAGEOFF
.text:00000000000492AC                 LDR             X9, [X10,X9,LSL#3]
.text:00000000000492B0                 B               loc_492B8
.text:00000000000492B4 ; ---------------------------------------------------------------------------
.text:00000000000492B4 loc_492B4                               ; CODE XREF: EAS_PERender+1A8↑j
.text:00000000000492B4                 MOV             X9, XZR
.text:00000000000492B8 loc_492B8                               ; CODE XREF: EAS_PERender+1B8↑j
.text:00000000000492B8                 MOV             W11, #1
.text:00000000000492BC                 STR             X9, [X22,#0xA0]
.text:00000000000492C0                 MOV             W10, #0x100
.text:00000000000492C4                 STR             W11, [X22,#0x130]
.text:00000000000492C8 loc_492C8                               ; CODE XREF: EAS_PERender+B8↑j
.text:00000000000492C8                 ADD             X9, X10, X9,LSL#7
.text:00000000000492CC                 CMP             X9, #0x400,LSL#12
.text:00000000000492D0                 STR             X9, [X22,#0x98]
.text:00000000000492D4                 B.CC            loc_49310
.text:00000000000492D8                 LDR             X9, [X22,#0x90]
.text:00000000000492DC                 MOV             W10, #0x400000
.text:00000000000492E0                 STR             X10, [X22,#0x98]
.text:00000000000492E4                 UBFX            X9, X9, #0x10, #4
.text:00000000000492E8                 CMP             X9, #0xF
.text:00000000000492EC                 B.NE            loc_492F8
.text:00000000000492F0                 MOV             X9, XZR
.text:00000000000492F4                 B               loc_49304
.text:00000000000492F8 ; ---------------------------------------------------------------------------
.text:00000000000492F8 loc_492F8                               ; CODE XREF: EAS_PERender+1F4↑j
.text:00000000000492F8                 ADRP            X10, #off_5AB8@PAGE
.text:00000000000492FC                 ADD             X10, X10, #off_5AB8@PAGEOFF
.text:0000000000049300                 LDR             X9, [X10,X9,LSL#3]
.text:0000000000049304 loc_49304                               ; CODE XREF: EAS_PERender+1FC↑j
.text:0000000000049304                 STR             X9, [X22,#0xA0]
.text:0000000000049308                 MOV             W9, #2
.text:000000000004930C loc_4930C                               ; CODE XREF: EAS_PERender+80↑j
.text:000000000004930C                 STR             W9, [X22,#0x130]
.text:0000000000049310 loc_49310                               ; CODE XREF: EAS_PERender+48↑j
.text:0000000000049310                                         ; EAS_PERender+70↑j ...
.text:0000000000049310                 LDRSH           X10, [X22,#0x13E]
.text:0000000000049314                 CMP             X8, #5
.text:0000000000049318                 LDRSH           X9, [X22,#0x13C]
.text:000000000004931C                 AND             W19, W10, #0xFFFF
.text:0000000000049320                 LSL             X24, X9, #7
.text:0000000000049324                 LSL             X25, X10, #7
.text:0000000000049328                 B.EQ            loc_49334
.text:000000000004932C                 CMP             X8, #3
.text:0000000000049330                 B.NE            loc_49340
.text:0000000000049334 loc_49334                               ; CODE XREF: EAS_PERender+230↑j
.text:0000000000049334                 MOV             W21, WZR
.text:0000000000049338                 NEG             W26, W9
.text:000000000004933C                 B               loc_49374
.text:0000000000049340 ; ---------------------------------------------------------------------------
.text:0000000000049340 loc_49340                               ; CODE XREF: EAS_PERender+238↑j
.text:0000000000049340                 AND             W8, W9, #0xFFFF
.text:0000000000049344 loc_49344                               ; CODE XREF: EAS_PERender+E8↑j
.text:0000000000049344                 LDR             X9, [X22,#0x98]
.text:0000000000049348                 LDRSH           W10, [X22,#0x134]
.text:000000000004934C                 LDRSH           W11, [X22,#0x138]
.text:0000000000049350                 LSR             X9, X9, #7
.text:0000000000049354                 MUL             W9, W9, W10
.text:0000000000049358                 LDRSH           W10, [X22,#0x13A]
.text:000000000004935C                 ASR             W9, W9, #0xF
.text:0000000000049360                 MUL             W11, W9, W11
.text:0000000000049364                 MUL             W9, W9, W10
.text:0000000000049368                 ASR             W10, W11, #0xF
.text:000000000004936C                 SUB             W26, W10, W8,SXTH
.text:0000000000049370                 ASR             W21, W9, #0xF
.text:0000000000049374 loc_49374                               ; CODE XREF: EAS_PERender+244↑j
.text:0000000000049374                 LDRSH           X0, [X22,#0x136]
.text:0000000000049378                 LDR             X27, [X22,#0x80]
.text:000000000004937C                 CBZ             X0, loc_4938C
.text:0000000000049380                 BL              .EAS_Calculate2toX
.text:0000000000049384                 MUL             W8, W0, W27
.text:0000000000049388                 SBFX            X27, X8, #0xF, #0x11
.text:000000000004938C loc_4938C                               ; CODE XREF: EAS_PERender+284↑j
.text:000000000004938C                 CBZ             X28, loc_494CC
.text:0000000000049390                 SUB             W8, W21, W19,SXTH
.text:0000000000049394                 LDRB            W9, [X22,#0x14F]
.text:0000000000049398                 MOV             X10, X28
.text:000000000004939C                 LDR             X28, [X20,#0x98]
.text:00000000000493A0                 SXTW            X21, W8
.text:00000000000493A4                 LDR             X8, [X22,#0x78]
.text:00000000000493A8                 SXTW            X26, W26
.text:00000000000493AC                 MOV             X19, X10
.text:00000000000493B0                 LSL             X27, X27, X9
.text:00000000000493B4 loc_493B4                               ; CODE XREF: EAS_PERender+3D0↓j
.text:00000000000493B4                 LDRSH           W10, [X22,#0xCA]
.text:00000000000493B8                 LDRSH           W9, [X22,#0xC8]
.text:00000000000493BC                 SUB             W11, W9, W10
.text:00000000000493C0                 AND             W9, W8, #0x7FFF
.text:00000000000493C4                 MUL             W8, W11, W9
.text:00000000000493C8                 LDRB            W11, [X22,#0x89]
.text:00000000000493CC                 ADD             W8, W10, W8,ASR#15
.text:00000000000493D0                 SXTW            X8, W8
.text:00000000000493D4                 STR             X8, [X22,#0xB0]
.text:00000000000493D8                 TBZ             W11, #0, loc_493F8
.text:00000000000493DC                 LDRSH           W10, [X22,#0xEA]
.text:00000000000493E0                 LDRSH           W11, [X22,#0xE8]
.text:00000000000493E4                 SUB             W11, W11, W10
.text:00000000000493E8                 MUL             W9, W11, W9
.text:00000000000493EC                 ADD             W9, W10, W9,ASR#15
.text:00000000000493F0                 SXTW            X9, W9
.text:00000000000493F4                 STR             X9, [X22,#0xD0]
.text:00000000000493F8 loc_493F8                               ; CODE XREF: EAS_PERender+2E0↑j
.text:00000000000493F8                 ASR             X9, X24, #7
.text:00000000000493FC                 MUL             X8, X9, X8
.text:0000000000049400                 LDP             X10, X9, [X28]
.text:0000000000049404                 ADD             X8, X10, X8,ASR#5
.text:0000000000049408                 MOV             W10, #0xB0
.text:000000000004940C                 STR             X8, [X28]
.text:0000000000049410                 LDR             X8, [X22,#0x88]
.text:0000000000049414                 TST             X8, #0x100
.text:0000000000049418                 MOV             W8, #0xD0
.text:000000000004941C                 CSEL            X8, X10, X8, EQ
.text:0000000000049420                 ASR             X10, X25, #7
.text:0000000000049424                 LDR             X8, [X22,X8]
.text:0000000000049428                 MUL             X8, X8, X10
.text:000000000004942C                 ADD             X8, X9, X8,ASR#5
.text:0000000000049430                 STR             X8, [X28,#8]
.text:0000000000049434                 LDR             X8, [X22,#0x78]
.text:0000000000049438                 ADD             X8, X8, X27
.text:000000000004943C                 B               loc_49448
.text:0000000000049440 ; ---------------------------------------------------------------------------
.text:0000000000049440 loc_49440                               ; CODE XREF: EAS_PERender+388↓j
.text:0000000000049440                 LDR             X8, [X22,#0x78]
.text:0000000000049444                 SUB             X8, X8, #8,LSL#12
.text:0000000000049448 loc_49448                               ; CODE XREF: EAS_PERender+344↑j
.text:0000000000049448                 TST             X8, #0xFFFF8000
.text:000000000004944C                 STR             X8, [X22,#0x78]
.text:0000000000049450                 B.EQ            loc_494B8
.text:0000000000049454                 LDRH            W8, [X22,#0xC8]
.text:0000000000049458                 LDRH            W9, [X22,#0xE8]
.text:000000000004945C                 LDR             X10, [X22,#0x68]
.text:0000000000049460                 STRH            W8, [X22,#0xCA]
.text:0000000000049464                 STRH            W9, [X22,#0xEA]
.text:0000000000049468                 CBZ             X10, loc_49488
.text:000000000004946C loc_4946C                               ; CODE XREF: EAS_PERender+394↓j
.text:000000000004946C                                         ; EAS_PERender+39C↓j ...
.text:000000000004946C                 LDR             X8, [X22,#0x18]
.text:0000000000049470                 MOV             X0, X20
.text:0000000000049474                 MOV             X1, X22
.text:0000000000049478                 LDR             X8, [X8,#8]
.text:000000000004947C                 BLR             X8
.text:0000000000049480                 CBZ             X0, loc_49440
.text:0000000000049484                 B               loc_49598
.text:0000000000049488 ; ---------------------------------------------------------------------------
.text:0000000000049488 loc_49488                               ; CODE XREF: EAS_PERender+370↑j
.text:0000000000049488                 LDR             X8, [X22,#8]
.text:000000000004948C                 CBZ             X8, loc_4946C
.text:0000000000049490                 LDR             X9, [X22,#0x88]
.text:0000000000049494                 TBNZ            W9, #0x18, loc_4946C
.text:0000000000049498                 LDR             X1, [X22,#0x10]
.text:000000000004949C                 ORR             X9, X9, #0x1000000
.text:00000000000494A0                 MOV             X0, X20
.text:00000000000494A4                 MOV             X2, X22
.text:00000000000494A8                 MOV             W3, #8
.text:00000000000494AC                 STR             X9, [X22,#0x88]
.text:00000000000494B0                 BLR             X8
.text:00000000000494B4                 B               loc_4946C
.text:00000000000494B8 ; ---------------------------------------------------------------------------
.text:00000000000494B8 loc_494B8                               ; CODE XREF: EAS_PERender+358↑j
.text:00000000000494B8                 SUB             X19, X19, #1
.text:00000000000494BC                 ADD             X24, X24, X26
.text:00000000000494C0                 ADD             X28, X28, #0x10
.text:00000000000494C4                 ADD             X25, X25, X21
.text:00000000000494C8                 CBNZ            X19, loc_493B4
.text:00000000000494CC loc_494CC                               ; CODE XREF: EAS_PERender:loc_4938C↑j
.text:00000000000494CC                 LDR             X8, [X22,#0x20]
.text:00000000000494D0                 LSR             X9, X24, #7
.text:00000000000494D4                 LSR             X10, X25, #7
.text:00000000000494D8                 STRH            W9, [X22,#0x13C]
.text:00000000000494DC                 STRH            W10, [X22,#0x13E]
.text:00000000000494E0                 CMP             X8, #3
.text:00000000000494E4                 B.NE            loc_4950C
.text:00000000000494E8                 LDR             X8, [X22,#8]
.text:00000000000494EC                 MOV             W9, #5
.text:00000000000494F0                 STR             X9, [X22,#0x20]
.text:00000000000494F4                 CBZ             X8, loc_4950C
.text:00000000000494F8                 LDR             X1, [X22,#0x10]
.text:00000000000494FC                 MOV             X0, X20
.text:0000000000049500                 MOV             X2, X22
.text:0000000000049504                 MOV             W3, #5
.text:0000000000049508                 BLR             X8
.text:000000000004950C loc_4950C                               ; CODE XREF: EAS_PERender+3EC↑j
.text:000000000004950C                                         ; EAS_PERender+3FC↑j
.text:000000000004950C                 LDR             X8, [X22,#0x68]
.text:0000000000049510                 ADRP            X19, #unk_59C8@PAGE
.text:0000000000049514                 LDR             X28, [SP,#0x60+var_58]
.text:0000000000049518                 ADD             X19, X19, #unk_59C8@PAGEOFF
.text:000000000004951C                 CBZ             X8, loc_4952C
.text:0000000000049520                 LDR             X8, [X22,#0x20]
.text:0000000000049524                 CMP             X8, #2
.text:0000000000049528                 B.NE            loc_4955C
.text:000000000004952C loc_4952C                               ; CODE XREF: EAS_PERender+424↑j
.text:000000000004952C                 LDR             X8, [X22,#8]
.text:0000000000049530                 MOV             W9, #4
.text:0000000000049534                 STR             X9, [X22,#0x20]
.text:0000000000049538                 CBZ             X8, loc_49584
.text:000000000004953C                 LDR             X9, [X22]
.text:0000000000049540                 CBZ             X9, loc_49584
.text:0000000000049544                 LDR             X1, [X22,#0x10]
.text:0000000000049548                 MOV             X0, X20
.text:000000000004954C                 MOV             X2, X22
.text:0000000000049550                 MOV             W3, #4
.text:0000000000049554                 BLR             X8
.text:0000000000049558                 LDR             X8, [X22,#0x20]
.text:000000000004955C loc_4955C                               ; CODE XREF: EAS_PERender+430↑j
.text:000000000004955C                 CBNZ            X8, loc_49584
.text:0000000000049560                 MOV             W8, #1
.text:0000000000049564                 STR             X8, [X22,#0x20]
.text:0000000000049568                 B               loc_49584
.text:000000000004956C ; ---------------------------------------------------------------------------
.text:000000000004956C loc_4956C                               ; CODE XREF: EAS_PERender+3C↑j
.text:000000000004956C                                         ; EAS_PERender+498↓j
.text:000000000004956C                 LDR             X8, [X22]
.text:0000000000049570                 CBZ             X8, loc_49584
.text:0000000000049574                 LDR             X8, [X22,#0x20]
.text:0000000000049578                 AND             X9, X8, #0xFFFFFFFFFFFFFFFE
.text:000000000004957C                 CMP             X9, #4
.text:0000000000049580                 B.NE            loc_49138
.text:0000000000049584 loc_49584                               ; CODE XREF: EAS_PERender+440↑j
.text:0000000000049584                                         ; EAS_PERender+448↑j ...
.text:0000000000049584                 ADD             W23, W23, #1
.text:0000000000049588                 ADD             X22, X22, #0x150
.text:000000000004958C                 CMP             W23, #0x10
.text:0000000000049590                 B.CC            loc_4956C
.text:0000000000049594                 MOV             X0, XZR
.text:0000000000049598 loc_49598                               ; CODE XREF: EAS_PERender+38C↑j
.text:0000000000049598                 LDP             X29, X30, [SP,#0x60+var_s0]
.text:000000000004959C                 LDP             X20, X19, [SP,#0x60+var_10]
.text:00000000000495A0                 LDP             X22, X21, [SP,#0x60+var_20]
.text:00000000000495A4                 LDP             X24, X23, [SP,#0x60+var_30]
.text:00000000000495A8                 LDP             X26, X25, [SP,#0x60+var_40]
.text:00000000000495AC                 LDP             X28, X27, [SP,#0x60+var_50]
.text:00000000000495B0                 ADD             SP, SP, #0x70 ; 'p'
.text:00000000000495B4                 RET
.text:00000000000495B4 ; } // starts at 490F8
.text:00000000000495B4 ; End of function EAS_PERender
.text:00000000000495B8 ; =============== S U B R O U T I N E =======================================
.text:00000000000495B8                 EXPORT EAS_PEState
.text:00000000000495B8 EAS_PEState                             ; DATA XREF: LOAD:0000000000001C38↑o
.text:00000000000495B8 ; __unwind {
.text:00000000000495B8                 LDR             X8, [X1,#0x20]
.text:00000000000495BC                 MOV             X0, XZR
.text:00000000000495C0                 STR             X8, [X2]
.text:00000000000495C4                 RET
.text:00000000000495C4 ; } // starts at 495B8
.text:00000000000495C4 ; End of function EAS_PEState
.text:00000000000495C8 ; =============== S U B R O U T I N E =======================================
.text:00000000000495C8 ; Attributes: bp-based frame
.text:00000000000495C8                 EXPORT EAS_PEClose
.text:00000000000495C8 EAS_PEClose                             ; DATA XREF: LOAD:0000000000000ED0↑o
.text:00000000000495C8 var_10          = -0x10
.text:00000000000495C8 var_s0          =  0
.text:00000000000495C8 ; __unwind {
.text:00000000000495C8                 STR             X19, [SP,#-0x10+var_10]!
.text:00000000000495CC                 STP             X29, X30, [SP,#0x10+var_s0]
.text:00000000000495D0                 ADD             X29, SP, #0x10
.text:00000000000495D4                 MOV             X19, X1
.text:00000000000495D8                 LDR             X1, [X1]
.text:00000000000495DC                 LDR             X0, [X0]
.text:00000000000495E0                 BL              .EAS_HWCloseFile
.text:00000000000495E4                 CBNZ            X0, loc_495EC
.text:00000000000495E8                 STR             XZR, [X19]
.text:00000000000495EC loc_495EC                               ; CODE XREF: EAS_PEClose+1C↑j
.text:00000000000495EC                 LDP             X29, X30, [SP,#0x10+var_s0]
.text:00000000000495F0                 LDR             X19, [SP+0x10+var_10],#0x20
.text:00000000000495F4                 RET
.text:00000000000495F4 ; } // starts at 495C8
.text:00000000000495F4 ; End of function EAS_PEClose
.text:00000000000495F8 ; =============== S U B R O U T I N E =======================================
.text:00000000000495F8 ; Attributes: bp-based frame
.text:00000000000495F8                 EXPORT EAS_PEReset
.text:00000000000495F8 EAS_PEReset                             ; DATA XREF: LOAD:00000000000015C0↑o
.text:00000000000495F8 var_10          = -0x10
.text:00000000000495F8 var_s0          =  0
.text:00000000000495F8 ; __unwind {
.text:00000000000495F8                 STP             X20, X19, [SP,#-0x10+var_10]!
.text:00000000000495FC                 STP             X29, X30, [SP,#0x10+var_s0]
.text:0000000000049600                 ADD             X29, SP, #0x10
.text:0000000000049604                 MOV             X19, X1
.text:0000000000049608                 LDR             X1, [X1]
.text:000000000004960C                 MOV             X20, X0
.text:0000000000049610                 LDR             X0, [X0]
.text:0000000000049614                 LDR             X2, [X19,#0x30]
.text:0000000000049618                 BL              .EAS_HWFileSeek
.text:000000000004961C                 CBZ             X0, loc_4962C
.text:0000000000049620 loc_49620                               ; CODE XREF: EAS_PEReset+A0↓j
.text:0000000000049620                 LDP             X29, X30, [SP,#0x10+var_s0]
.text:0000000000049624                 LDP             X20, X19, [SP+0x10+var_10],#0x20
.text:0000000000049628                 RET
.text:000000000004962C ; ---------------------------------------------------------------------------
.text:000000000004962C loc_4962C                               ; CODE XREF: EAS_PEReset+24↑j
.text:000000000004962C                 LDR             X8, [X19,#0x40]
.text:0000000000049630                 STR             XZR, [X19,#0x78]
.text:0000000000049634                 STRB            WZR, [X19,#0x146]
.text:0000000000049638                 STRB            WZR, [X19,#0x14D]
.text:000000000004963C                 STR             X8, [X19,#0x68]
.text:0000000000049640                 MOV             W8, #0x60006000
.text:0000000000049644                 STRH            WZR, [X19,#0x136]
.text:0000000000049648                 STRH            WZR, [X19,#0x142]
.text:000000000004964C                 STR             W8, [X19,#0x138]
.text:0000000000049650                 LDR             X8, [X19,#0x18]
.text:0000000000049654                 STP             XZR, XZR, [X19,#0xB8]
.text:0000000000049658                 STR             XZR, [X19,#0xB0]
.text:000000000004965C                 STR             WZR, [X19,#0xC8]
.text:0000000000049660                 STP             XZR, XZR, [X19,#0xD8]
.text:0000000000049664                 STR             XZR, [X19,#0xD0]
.text:0000000000049668                 STR             WZR, [X19,#0xE8]
.text:000000000004966C                 STR             XZR, [X19,#0x98]
.text:0000000000049670                 STR             WZR, [X19,#0x130]
.text:0000000000049674                 STR             XZR, [X19,#0x20]
.text:0000000000049678                 LDR             X2, [X8]
.text:000000000004967C                 CBZ             X2, loc_49694
.text:0000000000049680                 LDP             X29, X30, [SP,#0x10+var_s0]
.text:0000000000049684                 MOV             X0, X20
.text:0000000000049688                 MOV             X1, X19
.text:000000000004968C                 LDP             X20, X19, [SP+0x10+var_10],#0x20
.text:0000000000049690                 BR              X2
.text:0000000000049694 ; ---------------------------------------------------------------------------
.text:0000000000049694 loc_49694                               ; CODE XREF: EAS_PEReset+84↑j
.text:0000000000049694                 MOV             X0, XZR
.text:0000000000049698                 B               loc_49620
.text:0000000000049698 ; } // starts at 495F8
.text:0000000000049698 ; End of function EAS_PEReset
.text:0000000000049698 ; ---------------------------------------------------------------------------
.text:000000000004969C                 ALIGN 0x20
.text:00000000000496A0 ; =============== S U B R O U T I N E =======================================
.text:00000000000496A0 ; Attributes: bp-based frame
.text:00000000000496A0                 EXPORT EAS_PEOpenStream
.text:00000000000496A0 EAS_PEOpenStream                        ; DATA XREF: LOAD:0000000000000828↑o
.text:00000000000496A0 var_40          = -0x40
.text:00000000000496A0 var_38          = -0x38
.text:00000000000496A0 var_30          = -0x30
.text:00000000000496A0 var_20          = -0x20
.text:00000000000496A0 var_10          = -0x10
.text:00000000000496A0 var_s0          =  0
.text:00000000000496A0 ; __unwind {
.text:00000000000496A0                 SUB             SP, SP, #0x50
.text:00000000000496A4                 STR             X23, [SP,#0x40+var_30]
.text:00000000000496A8                 STP             X22, X21, [SP,#0x40+var_20]
.text:00000000000496AC                 STP             X20, X19, [SP,#0x40+var_10]
.text:00000000000496B0                 STP             X29, X30, [SP,#0x40+var_s0]
.text:00000000000496B4                 ADD             X29, SP, #0x40
.text:00000000000496B8                 MRS             X23, #3, c13, c0, #2
.text:00000000000496BC                 LDR             X8, [X23,#0x28]
.text:00000000000496C0                 STR             X8, [SP,#0x40+var_38]
.text:00000000000496C4                 LDR             X8, [X1,#8]
.text:00000000000496C8                 CMP             X8, #3
.text:00000000000496CC                 B.LE            loc_496D8
.text:00000000000496D0                 MOV             X0, #0xFFFFFFFFFFFFFFF3
.text:00000000000496D4                 B               loc_496E0
.text:00000000000496D8 ; ---------------------------------------------------------------------------
.text:00000000000496D8 loc_496D8                               ; CODE XREF: EAS_PEOpenStream+2C↑j
.text:00000000000496D8                 CBZ             X8, loc_49708
.text:00000000000496DC                 MOV             X0, #0xFFFFFFFFFFFFFFE3
.text:00000000000496E0 loc_496E0                               ; CODE XREF: EAS_PEOpenStream+34↑j
.text:00000000000496E0                                         ; EAS_PEOpenStream+118↓j ...
.text:00000000000496E0                 LDR             X8, [X23,#0x28]
.text:00000000000496E4                 LDR             X9, [SP,#0x40+var_38]
.text:00000000000496E8                 CMP             X8, X9
.text:00000000000496EC                 B.NE            loc_498CC
.text:00000000000496F0                 LDP             X29, X30, [SP,#0x40+var_s0]
.text:00000000000496F4                 LDP             X20, X19, [SP,#0x40+var_10]
.text:00000000000496F8                 LDP             X22, X21, [SP,#0x40+var_20]
.text:00000000000496FC                 LDR             X23, [SP,#0x40+var_30]
.text:0000000000049700                 ADD             SP, SP, #0x50 ; 'P'
.text:0000000000049704                 RET
.text:0000000000049708 ; ---------------------------------------------------------------------------
.text:0000000000049708 loc_49708                               ; CODE XREF: EAS_PEOpenStream:loc_496D8↑j
.text:0000000000049708                 MOV             X22, X1
.text:000000000004970C                 LDR             X1, [X1]
.text:0000000000049710                 LDR             X11, [X0,#0x168]
.text:0000000000049714                 MOV             X19, X2
.text:0000000000049718                 MOV             X20, X0
.text:000000000004971C                 LDR             Q0, [X22,#0x50]
.text:0000000000049720                 MOV             X9, XZR
.text:0000000000049724                 MOV             W10, WZR
.text:0000000000049728                 MOV             X21, XZR
.text:000000000004972C                 MOV             W12, #0x10
.text:0000000000049730                 MOV             W13, #0xFFFFFFFF
.text:0000000000049734 loc_49734                               ; CODE XREF: EAS_PEOpenStream+D8↓j
.text:0000000000049734                 LDR             X14, [X11]
.text:0000000000049738                 CBZ             X14, loc_4976C
.text:000000000004973C                 LDR             X14, [X11,#0xA8]
.text:0000000000049740                 ADD             W10, W10, #1
.text:0000000000049744                 LDR             X15, [X11,#0x20]
.text:0000000000049748                 CMP             X14, X13
.text:000000000004974C                 CSEL            X16, X14, X13, CC
.text:0000000000049750                 CSEL            X17, X11, X9, CC
.text:0000000000049754                 CMP             X15, #2
.text:0000000000049758                 CSEL            X13, X13, X16, EQ
.text:000000000004975C                 CSEL            X9, X9, X17, EQ
.text:0000000000049760                 CMP             X14, X8
.text:0000000000049764                 CSEL            X8, X8, X14, CC
.text:0000000000049768                 B               loc_49770
.text:000000000004976C ; ---------------------------------------------------------------------------
.text:000000000004976C loc_4976C                               ; CODE XREF: EAS_PEOpenStream+98↑j
.text:000000000004976C                 MOV             X21, X11
.text:0000000000049770 loc_49770                               ; CODE XREF: EAS_PEOpenStream+C8↑j
.text:0000000000049770                 ADD             X11, X11, #0x150
.text:0000000000049774                 SUBS            W12, W12, #1
.text:0000000000049778                 B.NE            loc_49734
.text:000000000004977C                 CMP             W10, #0xD
.text:0000000000049780                 B.LT            loc_49790
.text:0000000000049784                 CBZ             X9, loc_49790
.text:0000000000049788                 MOV             W10, #2
.text:000000000004978C                 STR             X10, [X9,#0x20]
.text:0000000000049790 loc_49790                               ; CODE XREF: EAS_PEOpenStream+E0↑j
.text:0000000000049790                                         ; EAS_PEOpenStream+E4↑j
.text:0000000000049790                 CBZ             X21, loc_497BC
.text:0000000000049794                 ADD             X8, X8, #1
.text:0000000000049798                 STR             X1, [X21]
.text:000000000004979C                 STUR            Q0, [X21,#8]
.text:00000000000497A0                 MOV             X2, SP
.text:00000000000497A4                 STR             X8, [X21,#0xA8]
.text:00000000000497A8                 LDR             X0, [X20]
.text:00000000000497AC                 BL              .EAS_HWFilePos
.text:00000000000497B0                 CBZ             X0, loc_497C4
.text:00000000000497B4                 STR             XZR, [X21]
.text:00000000000497B8                 B               loc_496E0
.text:00000000000497BC ; ---------------------------------------------------------------------------
.text:00000000000497BC loc_497BC                               ; CODE XREF: EAS_PEOpenStream:loc_49790↑j
.text:00000000000497BC                 MOV             X0, #0xFFFFFFFFFFFFFFEB
.text:00000000000497C0                 B               loc_496E0
.text:00000000000497C4 ; ---------------------------------------------------------------------------
.text:00000000000497C4 loc_497C4                               ; CODE XREF: EAS_PEOpenStream+110↑j
.text:00000000000497C4                 LDR             X8, [X22,#8]
.text:00000000000497C8                 ADRP            X9, #off_58170@PAGE
.text:00000000000497CC                 ADD             X9, X9, #off_58170@PAGEOFF
.text:00000000000497D0                 LDR             X10, [SP,#0x40+var_40]
.text:00000000000497D4                 MOV             W11, #0xBE37
.text:00000000000497D8                 LDR             X8, [X9,X8,LSL#3]
.text:00000000000497DC                 STR             X10, [X21,#0x30]
.text:00000000000497E0                 STR             X8, [X21,#0x18]
.text:00000000000497E4                 LDR             X9, [X22,#0x18]
.text:00000000000497E8                 STR             X9, [X21,#0x40]
.text:00000000000497EC                 STR             X9, [X21,#0x70]
.text:00000000000497F0                 LDR             X10, [X22,#0x20]
.text:00000000000497F4                 STR             X10, [X21,#0x48]
.text:00000000000497F8                 STR             X10, [X21,#0x60]
.text:00000000000497FC                 LDR             X10, [X22,#0x28]
.text:0000000000049800                 STP             X10, XZR, [X21,#0x50]
.text:0000000000049804                 LDR             X10, [X22,#0x30]
.text:0000000000049808                 STRH            W10, [X21,#0x140]
.text:000000000004980C                 LDR             X10, [X22,#0x38]
.text:0000000000049810                 STR             X10, [X21,#0x88]
.text:0000000000049814                 LDR             X10, [X22,#0x40]
.text:0000000000049818                 STR             X10, [X21,#0x90]
.text:000000000004981C                 LDRH            W10, [X22,#0x48]
.text:0000000000049820                 STRH            W10, [X21,#0x134]
.text:0000000000049824                 LDR             X10, [X22,#0x10]
.text:0000000000049828                 STRH            W10, [X21,#0x144]
.text:000000000004982C                 LDR             X10, [X22,#0x10]
.text:0000000000049830                 STRB            WZR, [X21,#0x14F]
.text:0000000000049834                 MUL             X11, X10, X11
.text:0000000000049838                 LSR             X10, X11, #0xF
.text:000000000004983C                 LSR             X11, X11, #0x1E
.text:0000000000049840                 STR             X10, [X21,#0x80]
.text:0000000000049844                 CBZ             X11, loc_49864
.text:0000000000049848                 MOV             W11, WZR
.text:000000000004984C loc_4984C                               ; CODE XREF: EAS_PEOpenStream+1B8↓j
.text:000000000004984C                 ADD             W11, W11, #1
.text:0000000000049850                 LSR             X12, X10, #0x10
.text:0000000000049854                 LSR             X10, X10, #1
.text:0000000000049858                 CBNZ            X12, loc_4984C
.text:000000000004985C                 STR             X10, [X21,#0x80]
.text:0000000000049860                 STRB            W11, [X21,#0x14F]
.text:0000000000049864 loc_49864                               ; CODE XREF: EAS_PEOpenStream+1A4↑j
.text:0000000000049864                 STR             X9, [X21,#0x68]
.text:0000000000049868                 MOV             W9, #0x60006000
.text:000000000004986C                 STR             XZR, [X21,#0x78]
.text:0000000000049870                 STRB            WZR, [X21,#0x146]
.text:0000000000049874                 STRB            WZR, [X21,#0x14D]
.text:0000000000049878                 STRH            WZR, [X21,#0x136]
.text:000000000004987C                 STRH            WZR, [X21,#0x142]
.text:0000000000049880                 STR             WZR, [X21,#0xC8]
.text:0000000000049884                 STP             XZR, XZR, [X21,#0xB8]
.text:0000000000049888                 STR             XZR, [X21,#0xB0]
.text:000000000004988C                 STP             XZR, XZR, [X21,#0xD8]
.text:0000000000049890                 STR             XZR, [X21,#0xD0]
.text:0000000000049894                 STR             WZR, [X21,#0xE8]
.text:0000000000049898                 STR             W9, [X21,#0x138]
.text:000000000004989C                 STR             XZR, [X21,#0x98]
.text:00000000000498A0                 STR             WZR, [X21,#0x130]
.text:00000000000498A4                 STR             XZR, [X21,#0x20]
.text:00000000000498A8                 LDR             X8, [X8]
.text:00000000000498AC                 CBZ             X8, loc_498C0
.text:00000000000498B0                 MOV             X0, X20
.text:00000000000498B4                 MOV             X1, X21
.text:00000000000498B8                 BLR             X8
.text:00000000000498BC                 CBNZ            X0, loc_496E0
.text:00000000000498C0 loc_498C0                               ; CODE XREF: EAS_PEOpenStream+20C↑j
.text:00000000000498C0                 MOV             X0, XZR
.text:00000000000498C4                 STR             X21, [X19]
.text:00000000000498C8                 B               loc_496E0
.text:00000000000498CC ; ---------------------------------------------------------------------------
.text:00000000000498CC loc_498CC                               ; CODE XREF: EAS_PEOpenStream+4C↑j
.text:00000000000498CC                 BL              .__stack_chk_fail
.text:00000000000498CC ; } // starts at 496A0
.text:00000000000498CC ; End of function EAS_PEOpenStream
.text:00000000000498D0 ; =============== S U B R O U T I N E =======================================
.text:00000000000498D0                 EXPORT EAS_PEContinueStream
.text:00000000000498D0 EAS_PEContinueStream                    ; DATA XREF: LOAD:00000000000014B8↑o
.text:00000000000498D0 ; __unwind {
.text:00000000000498D0                 LDR             X8, [X1,#0x68]
.text:00000000000498D4                 ADD             X8, X8, X2
.text:00000000000498D8                 CMP             X8, #1
.text:00000000000498DC                 STR             X8, [X1,#0x68]
.text:00000000000498E0                 B.LT            loc_498F0
.text:00000000000498E4                 LDR             X8, [X1,#0x88]
.text:00000000000498E8                 AND             X8, X8, #0xFFFFFFFFFEFFFFFF
.text:00000000000498EC                 STR             X8, [X1,#0x88]
.text:00000000000498F0 loc_498F0                               ; CODE XREF: EAS_PEContinueStream+10↑j
.text:00000000000498F0                 MOV             X0, XZR
.text:00000000000498F4                 RET
.text:00000000000498F4 ; } // starts at 498D0
.text:00000000000498F4 ; End of function EAS_PEContinueStream
.text:00000000000498F8 ; =============== S U B R O U T I N E =======================================
.text:00000000000498F8                 EXPORT EAS_PEGetFileHandle
.text:00000000000498F8 EAS_PEGetFileHandle                     ; DATA XREF: LOAD:00000000000007B0↑o
.text:00000000000498F8 ; __unwind {
.text:00000000000498F8                 LDR             X8, [X1]
.text:00000000000498FC                 MOV             X0, XZR
.text:0000000000049900                 STR             X8, [X2]
.text:0000000000049904                 RET
.text:0000000000049904 ; } // starts at 498F8
.text:0000000000049904 ; End of function EAS_PEGetFileHandle
.text:0000000000049908 ; =============== S U B R O U T I N E =======================================
.text:0000000000049908                 EXPORT EAS_PEUpdateParams
.text:0000000000049908 EAS_PEUpdateParams                      ; DATA XREF: LOAD:00000000000019E0↑o
.text:0000000000049908 ; __unwind {
.text:0000000000049908                 MOV             X0, XZR
.text:000000000004990C                 STRH            W3, [X1,#0x138]
.text:0000000000049910                 STRH            W4, [X1,#0x13A]
.text:0000000000049914                 STRH            W2, [X1,#0x136]
.text:0000000000049918                 RET
.text:0000000000049918 ; } // starts at 49908
.text:0000000000049918 ; End of function EAS_PEUpdateParams
.text:0000000000049918 ; ---------------------------------------------------------------------------
.text:000000000004991C                 ALIGN 0x20
.text:0000000000049920 ; =============== S U B R O U T I N E =======================================
.text:0000000000049920                 EXPORT EAS_PELocate
.text:0000000000049920 EAS_PELocate                            ; DATA XREF: LOAD:0000000000001C68↑o
.text:0000000000049920 ; __unwind {
.text:0000000000049920                 LDR             X8, [X1,#0x18]
.text:0000000000049924                 LDR             X3, [X8,#0x10]
.text:0000000000049928                 CBZ             X3, loc_49930
.text:000000000004992C                 BR              X3
.text:0000000000049930 ; ---------------------------------------------------------------------------
.text:0000000000049930 loc_49930                               ; CODE XREF: EAS_PELocate+8↑j
.text:0000000000049930                 MOV             X0, #0xFFFFFFFFFFFFFFE3
.text:0000000000049934                 RET
.text:0000000000049934 ; } // starts at 49920
.text:0000000000049934 ; End of function EAS_PELocate
.text:0000000000049938 ; =============== S U B R O U T I N E =======================================
.text:0000000000049938                 EXPORT EAS_PEUpdateVolume
.text:0000000000049938 EAS_PEUpdateVolume                      ; DATA XREF: LOAD:00000000000014E8↑o
.text:0000000000049938 ; __unwind {
.text:0000000000049938                 MOV             X0, XZR
.text:000000000004993C                 STRH            W2, [X1,#0x134]
.text:0000000000049940                 RET
.text:0000000000049940 ; } // starts at 49938
.text:0000000000049940 ; End of function EAS_PEUpdateVolume
.text:0000000000049940 ; ---------------------------------------------------------------------------
.text:0000000000049944                 ALIGN 8
.text:0000000000049948 ; =============== S U B R O U T I N E =======================================
.text:0000000000049948                 EXPORT EAS_PEUpdatePitch
.text:0000000000049948 EAS_PEUpdatePitch                       ; DATA XREF: LOAD:00000000000014D0↑o
.text:0000000000049948 ; __unwind {
.text:0000000000049948                 MOV             X0, XZR
.text:000000000004994C                 STRH            W2, [X1,#0x136]
.text:0000000000049950                 RET
.text:0000000000049950 ; } // starts at 49948
.text:0000000000049950 ; End of function EAS_PEUpdatePitch
.text:0000000000049950 ; ---------------------------------------------------------------------------
.text:0000000000049954                 ALIGN 8
.text:0000000000049958 ; =============== S U B R O U T I N E =======================================
.text:0000000000049958                 EXPORT EAS_PEPause
.text:0000000000049958 EAS_PEPause                             ; DATA XREF: LOAD:0000000000000F00↑o
.text:0000000000049958 ; __unwind {
.text:0000000000049958                 MOV             W8, #3
.text:000000000004995C                 MOV             X0, XZR
.text:0000000000049960                 STR             X8, [X1,#0x20]
.text:0000000000049964                 RET
.text:0000000000049964 ; } // starts at 49958
.text:0000000000049964 ; End of function EAS_PEPause
.text:0000000000049968 ; =============== S U B R O U T I N E =======================================
.text:0000000000049968                 EXPORT EAS_PEResume
.text:0000000000049968 EAS_PEResume                            ; DATA XREF: LOAD:0000000000000FA8↑o
.text:0000000000049968 ; __unwind {
.text:0000000000049968                 MOV             W8, #1
.text:000000000004996C                 MOV             X0, XZR
.text:0000000000049970                 STR             X8, [X1,#0x20]
.text:0000000000049974                 RET
.text:0000000000049974 ; } // starts at 49968
.text:0000000000049974 ; End of function EAS_PEResume
.text:0000000000049978 ; =============== S U B R O U T I N E =======================================
.text:0000000000049978                 EXPORT getDecayScale
.text:0000000000049978 getDecayScale                           ; DATA XREF: LOAD:0000000000001AE8↑o
.text:0000000000049978 ; __unwind {
.text:0000000000049978                 CMP             X0, #0xE
.text:000000000004997C                 B.HI            loc_49990
.text:0000000000049980                 ADRP            X8, #off_5AB8@PAGE
.text:0000000000049984                 ADD             X8, X8, #off_5AB8@PAGEOFF
.text:0000000000049988                 LDR             X0, [X8,X0,LSL#3]
.text:000000000004998C                 RET
.text:0000000000049990 ; ---------------------------------------------------------------------------
.text:0000000000049990 loc_49990                               ; CODE XREF: getDecayScale+4↑j
.text:0000000000049990                 MOV             X0, XZR
.text:0000000000049994                 RET
.text:0000000000049994 ; } // starts at 49978
.text:0000000000049994 ; End of function getDecayScale
.text:0000000000049998 ; =============== S U B R O U T I N E =======================================
.text:0000000000049998                 EXPORT getAttackIncrement
.text:0000000000049998 getAttackIncrement                      ; DATA XREF: LOAD:0000000000000D38↑o
.text:0000000000049998 ; __unwind {
.text:0000000000049998                 CMP             X0, #0xE
.text:000000000004999C                 B.HI            loc_499B0
.text:00000000000499A0                 ADRP            X8, #unk_5A40@PAGE
.text:00000000000499A4                 ADD             X8, X8, #unk_5A40@PAGEOFF
.text:00000000000499A8                 LDR             X0, [X8,X0,LSL#3]
.text:00000000000499AC                 RET
.text:00000000000499B0 ; ---------------------------------------------------------------------------
.text:00000000000499B0 loc_499B0                               ; CODE XREF: getAttackIncrement+4↑j
.text:00000000000499B0                 MOV             X0, XZR
.text:00000000000499B4                 RET
.text:00000000000499B4 ; } // starts at 49998
.text:00000000000499B4 ; End of function getAttackIncrement
.text:00000000000499B8 ; =============== S U B R O U T I N E =======================================
.text:00000000000499B8                 EXPORT EAS_PERelease
.text:00000000000499B8 EAS_PERelease                           ; DATA XREF: LOAD:0000000000001CB0↑o
.text:00000000000499B8 ; __unwind {
.text:00000000000499B8                 LDR             X8, [X1,#0x90]
.text:00000000000499BC                 TST             X8, #0xF000000
.text:00000000000499C0                 B.EQ            loc_499D0
.text:00000000000499C4                 MOV             W9, #3
.text:00000000000499C8                 UBFX            X8, X8, #0x1C, #4
.text:00000000000499CC                 B               loc_499D8
.text:00000000000499D0 ; ---------------------------------------------------------------------------
.text:00000000000499D0 loc_499D0                               ; CODE XREF: EAS_PERelease+8↑j
.text:00000000000499D0                 MOV             W9, #4
.text:00000000000499D4                 UBFX            X8, X8, #0x14, #4
.text:00000000000499D8 loc_499D8                               ; CODE XREF: EAS_PERelease+14↑j
.text:00000000000499D8                 CMP             X8, #0xF
.text:00000000000499DC                 STR             W9, [X1,#0x130]
.text:00000000000499E0                 B.NE            loc_499EC
.text:00000000000499E4                 MOV             X8, XZR
.text:00000000000499E8                 B               loc_499F8
.text:00000000000499EC ; ---------------------------------------------------------------------------
.text:00000000000499EC loc_499EC                               ; CODE XREF: EAS_PERelease+28↑j
.text:00000000000499EC                 ADRP            X9, #off_5AB8@PAGE
.text:00000000000499F0                 ADD             X9, X9, #off_5AB8@PAGEOFF
.text:00000000000499F4                 LDR             X8, [X9,X8,LSL#3]
.text:00000000000499F8 loc_499F8                               ; CODE XREF: EAS_PERelease+30↑j
.text:00000000000499F8                 CMP             X8, #0x1FA
.text:00000000000499FC                 STR             X8, [X1,#0xA0]
.text:0000000000049A00                 B.CC            loc_49A0C
.text:0000000000049A04                 MOV             W8, #0x1F9
.text:0000000000049A08                 STR             X8, [X1,#0xA0]
.text:0000000000049A0C loc_49A0C                               ; CODE XREF: EAS_PERelease+48↑j
.text:0000000000049A0C                 MOV             X0, XZR
.text:0000000000049A10                 RET
.text:0000000000049A10 ; } // starts at 499B8
.text:0000000000049A10 ; End of function EAS_PERelease
.text:0000000000049A10 ; ---------------------------------------------------------------------------
.text:0000000000049A14                 ALIGN 8
.text:0000000000049A18 ; =============== S U B R O U T I N E =======================================
.text:0000000000049A18 ; Attributes: bp-based frame
.text:0000000000049A18                 EXPORT EAS_PESeek
.text:0000000000049A18 EAS_PESeek                              ; CODE XREF: .EAS_PESeek+C↓j
.text:0000000000049A18                                         ; DATA XREF: LOAD:00000000000018C0↑o ...
.text:0000000000049A18 var_20          = -0x20
.text:0000000000049A18 var_10          = -0x10
.text:0000000000049A18 var_s0          =  0
.text:0000000000049A18 ; __unwind {
.text:0000000000049A18                 STP             X22, X21, [SP,#-0x10+var_20]!
.text:0000000000049A1C                 STP             X20, X19, [SP,#0x20+var_10]
.text:0000000000049A20                 STP             X29, X30, [SP,#0x20+var_s0]
.text:0000000000049A24                 ADD             X29, SP, #0x20
.text:0000000000049A28                 MOV             X19, X1
.text:0000000000049A2C                 LDR             X1, [X1]
.text:0000000000049A30                 MOV             X21, X0
.text:0000000000049A34                 LDR             X0, [X0]
.text:0000000000049A38                 MOV             X20, X2
.text:0000000000049A3C                 LDR             X8, [X19,#0x30]
.text:0000000000049A40                 MOV             X2, X8
.text:0000000000049A44                 BL              .EAS_HWFileSeek
.text:0000000000049A48                 CBZ             X0, loc_49A64
.text:0000000000049A4C loc_49A4C                               ; CODE XREF: EAS_PESeek+70↓j
.text:0000000000049A4C                                         ; EAS_PESeek+D8↓j
.text:0000000000049A4C                 MOV             W8, #7
.text:0000000000049A50                 STR             X8, [X19,#0x20]
.text:0000000000049A54 loc_49A54                               ; CODE XREF: EAS_PESeek+BC↓j
.text:0000000000049A54                                         ; EAS_PESeek+F8↓j ...
.text:0000000000049A54                 LDP             X29, X30, [SP,#0x20+var_s0]
.text:0000000000049A58                 LDP             X20, X19, [SP,#0x20+var_10]
.text:0000000000049A5C                 LDP             X22, X21, [SP+0x20+var_20],#0x30
.text:0000000000049A60                 RET
.text:0000000000049A64 ; ---------------------------------------------------------------------------
.text:0000000000049A64 loc_49A64                               ; CODE XREF: EAS_PESeek+30↑j
.text:0000000000049A64                 LDR             X2, [X19,#0x70]
.text:0000000000049A68                 MOV             X22, #0xFFFFFFFFFFFFFFED
.text:0000000000049A6C                 STR             X2, [X19,#0x68]
.text:0000000000049A70 loc_49A70                               ; CODE XREF: EAS_PESeek+B4↓j
.text:0000000000049A70                 LDR             X8, [X20]
.text:0000000000049A74                 CMP             X8, X2
.text:0000000000049A78                 B.LE            loc_49AD8
.text:0000000000049A7C                 LDR             X0, [X21]
.text:0000000000049A80                 LDR             X1, [X19]
.text:0000000000049A84                 BL              .EAS_HWFileSeekOfs
.text:0000000000049A88                 CBNZ            X0, loc_49A4C
.text:0000000000049A8C                 LDR             X8, [X19,#0x68]
.text:0000000000049A90                 LDR             X9, [X20]
.text:0000000000049A94                 SUB             X8, X9, X8
.text:0000000000049A98                 STR             X8, [X20]
.text:0000000000049A9C                 LDR             X9, [X19,#0x88]
.text:0000000000049AA0                 LDR             X8, [X19,#8]
.text:0000000000049AA4                 STR             XZR, [X19,#0x68]
.text:0000000000049AA8                 ORR             X9, X9, #0x1000000
.text:0000000000049AAC                 STR             X9, [X19,#0x88]
.text:0000000000049AB0                 CBZ             X8, loc_49AD0
.text:0000000000049AB4                 LDR             X1, [X19,#0x10]
.text:0000000000049AB8                 MOV             X0, X21
.text:0000000000049ABC                 MOV             X2, X19
.text:0000000000049AC0                 MOV             W3, #8
.text:0000000000049AC4                 BLR             X8
.text:0000000000049AC8                 LDR             X2, [X19,#0x68]
.text:0000000000049ACC                 CBNZ            X2, loc_49A70
.text:0000000000049AD0 loc_49AD0                               ; CODE XREF: EAS_PESeek+98↑j
.text:0000000000049AD0                 MOV             X0, X22
.text:0000000000049AD4                 B               loc_49A54
.text:0000000000049AD8 ; ---------------------------------------------------------------------------
.text:0000000000049AD8 loc_49AD8                               ; CODE XREF: EAS_PESeek+60↑j
.text:0000000000049AD8                 CMP             X8, #1
.text:0000000000049ADC                 B.LT            loc_49B0C
.text:0000000000049AE0                 LDR             X0, [X21]
.text:0000000000049AE4                 MOV             X2, X8
.text:0000000000049AE8                 LDR             X1, [X19]
.text:0000000000049AEC                 BL              .EAS_HWFileSeekOfs
.text:0000000000049AF0                 CBNZ            X0, loc_49A4C
.text:0000000000049AF4                 LDR             W8, [X19,#0x88]
.text:0000000000049AF8                 TBNZ            W8, #0x1F, loc_49B14
.text:0000000000049AFC                 LDR             X8, [X20]
.text:0000000000049B00                 LDR             X9, [X19,#0x68]
.text:0000000000049B04                 SUB             X8, X9, X8
.text:0000000000049B08                 B               loc_49B18
.text:0000000000049B0C ; ---------------------------------------------------------------------------
.text:0000000000049B0C loc_49B0C                               ; CODE XREF: EAS_PESeek+C4↑j
.text:0000000000049B0C                 MOV             X0, XZR
.text:0000000000049B10                 B               loc_49A54
.text:0000000000049B14 ; ---------------------------------------------------------------------------
.text:0000000000049B14 loc_49B14                               ; CODE XREF: EAS_PESeek+E0↑j
.text:0000000000049B14                 MOV             W8, #0x7FFFFFFF
.text:0000000000049B18 loc_49B18                               ; CODE XREF: EAS_PESeek+F0↑j
.text:0000000000049B18                 MOV             X0, XZR
.text:0000000000049B1C                 STR             X8, [X19,#0x68]
.text:0000000000049B20                 B               loc_49A54
.text:0000000000049B20 ; } // starts at 49A18
.text:0000000000049B20 ; End of function EAS_PESeek
.text:0000000000049B20 ; ---------------------------------------------------------------------------
.text:0000000000049B24                 ALIGN 8
.text:0000000000049B28 ; __unwind {
.text:0000000000049B28                 STR             X21, [SP,#-0x30]!
.text:0000000000049B2C                 STP             X20, X19, [SP,#0x10]
.text:0000000000049B30                 STP             X29, X30, [SP,#0x20]
.text:0000000000049B34                 ADD             X29, SP, #0x20 ; ' '
.text:0000000000049B38                 LDR             X8, [X1,#0x68]
.text:0000000000049B3C                 MOV             X19, X1
.text:0000000000049B40                 LDR             X20, [X0]
.text:0000000000049B44                 CBZ             X8, loc_49BA8
.text:0000000000049B48 loc_49B48                               ; CODE XREF: .text:0000000000049BE0↓j
.text:0000000000049B48                 LDR             X8, [X19,#0x88]
.text:0000000000049B4C                 TBNZ            W8, #0, loc_49BF4
.text:0000000000049B50                 TBNZ            W8, #4, loc_49C40
.text:0000000000049B54                 MOV             X2, X19
.text:0000000000049B58                 MOV             X0, X20
.text:0000000000049B5C                 MOV             W3, WZR
.text:0000000000049B60                 LDR             X1, [X2],#0xC8
.text:0000000000049B64                 BL              .EAS_HWGetWord
.text:0000000000049B68                 CBNZ            X0, loc_49C44
.text:0000000000049B6C                 LDR             X8, [X19,#0x68]
.text:0000000000049B70                 LDRB            W9, [X19,#0x89]
.text:0000000000049B74                 SUB             X8, X8, #2
.text:0000000000049B78                 STR             X8, [X19,#0x68]
.text:0000000000049B7C                 TBZ             W9, #0, loc_49C38
.text:0000000000049B80                 MOV             X2, X19
.text:0000000000049B84                 MOV             X0, X20
.text:0000000000049B88                 MOV             W3, WZR
.text:0000000000049B8C                 LDR             X1, [X2],#0xE8
.text:0000000000049B90                 BL              .EAS_HWGetWord
.text:0000000000049B94                 CBNZ            X0, loc_49C44
.text:0000000000049B98                 LDR             X8, [X19,#0x68]
.text:0000000000049B9C                 SUB             X8, X8, #2
.text:0000000000049BA0                 STR             X8, [X19,#0x68]
.text:0000000000049BA4                 B               loc_49C44
.text:0000000000049BA8 ; ---------------------------------------------------------------------------
.text:0000000000049BA8 loc_49BA8                               ; CODE XREF: .text:0000000000049B44↑j
.text:0000000000049BA8                 LDR             X8, [X19,#0x50]
.text:0000000000049BAC                 CBZ             X8, loc_49BE4
.text:0000000000049BB0                 LDP             X8, X9, [X19,#0x30]
.text:0000000000049BB4                 LDR             X1, [X19]
.text:0000000000049BB8                 MOV             X0, X20
.text:0000000000049BBC                 ADD             X2, X9, X8
.text:0000000000049BC0                 BL              .EAS_HWFileSeek
.text:0000000000049BC4                 CBNZ            X0, loc_49C44
.text:0000000000049BC8                 LDR             X8, [X19,#0x88]
.text:0000000000049BCC                 LDR             X9, [X19,#0x70]
.text:0000000000049BD0                 AND             X8, X8, #0xFFFFFFFFFEFFFFFF
.text:0000000000049BD4                 STR             X9, [X19,#0x40]
.text:0000000000049BD8                 STR             X9, [X19,#0x68]
.text:0000000000049BDC                 STR             X8, [X19,#0x88]
.text:0000000000049BE0                 CBNZ            X9, loc_49B48
.text:0000000000049BE4 loc_49BE4                               ; CODE XREF: .text:0000000000049BAC↑j
.text:0000000000049BE4                 MOV             X0, XZR
.text:0000000000049BE8                 STRH            WZR, [X19,#0xE8]
.text:0000000000049BEC                 STRH            WZR, [X19,#0xC8]
.text:0000000000049BF0                 B               loc_49C44
.text:0000000000049BF4 ; ---------------------------------------------------------------------------
.text:0000000000049BF4 loc_49BF4                               ; CODE XREF: .text:0000000000049B4C↑j
.text:0000000000049BF4                 LDR             X1, [X19]
.text:0000000000049BF8                 ADD             X21, X19, #0x146
.text:0000000000049BFC                 MOV             X0, X20
.text:0000000000049C00                 MOV             X2, X21
.text:0000000000049C04                 BL              .EAS_HWGetByte
.text:0000000000049C08                 CBNZ            X0, loc_49C44
.text:0000000000049C0C                 LDRB            W8, [X19,#0x146]
.text:0000000000049C10                 LDR             X9, [X19,#0x88]
.text:0000000000049C14                 LDR             X10, [X19,#0x68]
.text:0000000000049C18                 LSL             W8, W8, #8
.text:0000000000049C1C                 EOR             W11, W8, #0x8000
.text:0000000000049C20                 TST             X9, #0x10
.text:0000000000049C24                 CSEL            W8, W8, W11, EQ
.text:0000000000049C28                 SUB             X10, X10, #1
.text:0000000000049C2C                 STRH            W8, [X19,#0xC8]
.text:0000000000049C30                 STR             X10, [X19,#0x68]
.text:0000000000049C34                 TBNZ            W9, #8, loc_49C54
.text:0000000000049C38 loc_49C38                               ; CODE XREF: .text:0000000000049B7C↑j
.text:0000000000049C38                 MOV             X0, XZR
.text:0000000000049C3C                 B               loc_49C44
.text:0000000000049C40 ; ---------------------------------------------------------------------------
.text:0000000000049C40 loc_49C40                               ; CODE XREF: .text:0000000000049B50↑j
.text:0000000000049C40                 MOV             X0, #0xFFFFFFFFFFFFFFEC
.text:0000000000049C44 loc_49C44                               ; CODE XREF: .text:0000000000049B68↑j
.text:0000000000049C44                                         ; .text:0000000000049B94↑j ...
.text:0000000000049C44                 LDP             X29, X30, [SP,#0x20]
.text:0000000000049C48                 LDP             X20, X19, [SP,#0x10]
.text:0000000000049C4C                 LDR             X21, [SP],#0x30
.text:0000000000049C50                 RET
.text:0000000000049C54 ; ---------------------------------------------------------------------------
.text:0000000000049C54 loc_49C54                               ; CODE XREF: .text:0000000000049C34↑j
.text:0000000000049C54                 LDR             X1, [X19]
.text:0000000000049C58                 MOV             X0, X20
.text:0000000000049C5C                 MOV             X2, X21
.text:0000000000049C60                 BL              .EAS_HWGetByte
.text:0000000000049C64                 CBNZ            X0, loc_49C44
.text:0000000000049C68                 LDRB            W8, [X19,#0x146]
.text:0000000000049C6C                 LDR             X9, [X19,#0x88]
.text:0000000000049C70                 LDR             X10, [X19,#0x68]
.text:0000000000049C74                 LSL             W8, W8, #8
.text:0000000000049C78                 EOR             W11, W8, #0x8000
.text:0000000000049C7C                 TST             X9, #0x10
.text:0000000000049C80                 CSEL            W8, W8, W11, EQ
.text:0000000000049C84                 SUB             X9, X10, #1
.text:0000000000049C88                 STRH            W8, [X19,#0xE8]
.text:0000000000049C8C                 STR             X9, [X19,#0x68]
.text:0000000000049C90                 B               loc_49C44
.text:0000000000049C90 ; } // starts at 49B28
.text:0000000000049C90 ; ---------------------------------------------------------------------------
.text:0000000000049C94                 ALIGN 8
.text:0000000000049C98 ; __unwind {
.text:0000000000049C98                 SUB             SP, SP, #0x30 ; '0'
.text:0000000000049C9C                 STP             X20, X19, [SP,#0x10]
.text:0000000000049CA0                 STP             X29, X30, [SP,#0x20]
.text:0000000000049CA4                 ADD             X29, SP, #0x20 ; ' '
.text:0000000000049CA8                 MOV             X9, #0xF7CF
.text:0000000000049CAC                 MRS             X20, #3, c13, c0, #2
.text:0000000000049CB0                 MOVK            X9, #0xE353,LSL#16
.text:0000000000049CB4                 LDR             X8, [X20,#0x28]
.text:0000000000049CB8                 MOVK            X9, #0x9BA5,LSL#32
.text:0000000000049CBC                 MOVK            X9, #0x20C4,LSL#48
.text:0000000000049CC0                 MOV             X10, #0xFFFFFFFFFFFFFC18
.text:0000000000049CC4                 SMULH           X9, X2, X9
.text:0000000000049CC8                 STR             X8, [SP,#8]
.text:0000000000049CCC                 LDR             X8, [X1,#0x88]
.text:0000000000049CD0                 MOV             W13, #0x31 ; '1'
.text:0000000000049CD4                 ASR             X11, X9, #7
.text:0000000000049CD8                 ADD             X9, X11, X9,LSR#63
.text:0000000000049CDC                 LDRH            W11, [X1,#0x144]
.text:0000000000049CE0                 MOV             X19, X1
.text:0000000000049CE4                 MADD            X10, X9, X10, X2
.text:0000000000049CE8                 MVN             W12, W8
.text:0000000000049CEC                 AND             X12, X12, #1
.text:0000000000049CF0                 MUL             X10, X10, X11
.text:0000000000049CF4                 MUL             X11, X9, X11
.text:0000000000049CF8                 UBFX            X9, X8, #8, #1
.text:0000000000049CFC                 ADD             X12, X12, X9
.text:0000000000049D00                 LDR             X9, [X1,#0x48]
.text:0000000000049D04                 MUL             X13, X10, X13
.text:0000000000049D08                 ADD             X10, X11, X10,ASR#10
.text:0000000000049D0C                 ADD             X10, X10, X13,ASR#21
.text:0000000000049D10                 LSL             X10, X10, X12
.text:0000000000049D14                 CMP             X10, X9
.text:0000000000049D18                 STR             X10, [SP]
.text:0000000000049D1C                 B.LE            loc_49D38
.text:0000000000049D20                 LDR             X11, [X19,#0x50]
.text:0000000000049D24                 CBZ             X11, loc_49D68
.text:0000000000049D28 loc_49D28                               ; CODE XREF: .text:0000000000049D30↓j
.text:0000000000049D28                 SUB             X10, X10, X9
.text:0000000000049D2C                 CMP             X10, X9
.text:0000000000049D30                 B.GT            loc_49D28
.text:0000000000049D34                 STR             X10, [SP]
.text:0000000000049D38 loc_49D38                               ; CODE XREF: .text:0000000000049D1C↑j
.text:0000000000049D38                 MOV             X2, SP
.text:0000000000049D3C                 MOV             X1, X19
.text:0000000000049D40                 BL              .EAS_PESeek
.text:0000000000049D44                 CBNZ            X0, loc_49D78
.text:0000000000049D48                 LDR             X8, [X19,#0x20]
.text:0000000000049D4C                 CMP             X8, #3
.text:0000000000049D50                 B.EQ            loc_49D78
.text:0000000000049D54                 CMP             X8, #5
.text:0000000000049D58                 B.EQ            loc_49D78
.text:0000000000049D5C                 MOV             X0, XZR
.text:0000000000049D60                 STR             XZR, [X19,#0x20]
.text:0000000000049D64                 B               loc_49D78
.text:0000000000049D68 ; ---------------------------------------------------------------------------
.text:0000000000049D68 loc_49D68                               ; CODE XREF: .text:0000000000049D24↑j
.text:0000000000049D68                 ORR             X8, X8, #0x1000000
.text:0000000000049D6C                 STR             XZR, [X19,#0x68]
.text:0000000000049D70                 MOV             X0, #0xFFFFFFFFFFFFFFED
.text:0000000000049D74                 STR             X8, [X19,#0x88]
.text:0000000000049D78 loc_49D78                               ; CODE XREF: .text:0000000000049D44↑j
.text:0000000000049D78                                         ; .text:0000000000049D50↑j ...
.text:0000000000049D78                 LDR             X8, [X20,#0x28]
.text:0000000000049D7C                 LDR             X9, [SP,#8]
.text:0000000000049D80                 CMP             X8, X9
.text:0000000000049D84                 B.NE            loc_49D98
.text:0000000000049D88                 LDP             X29, X30, [SP,#0x20]
.text:0000000000049D8C                 LDP             X20, X19, [SP,#0x10]
.text:0000000000049D90                 ADD             SP, SP, #0x30 ; '0'
.text:0000000000049D94                 RET
.text:0000000000049D98 ; ---------------------------------------------------------------------------
.text:0000000000049D98 loc_49D98                               ; CODE XREF: .text:0000000000049D84↑j
.text:0000000000049D98                 BL              .__stack_chk_fail
.text:0000000000049D98 ; } // starts at 49C98
.text:0000000000049D98 ; ---------------------------------------------------------------------------
.text:0000000000049D9C                 ALIGN 0x20
.text:0000000000049DA0 ; =============== S U B R O U T I N E =======================================
.text:0000000000049DA0                 EXPORT EAS_SetStreamParameter
.text:0000000000049DA0 EAS_SetStreamParameter                  ; DATA XREF: LOAD:0000000000001968↑o
.text:0000000000049DA0 ; __unwind {
.text:0000000000049DA0                 LDR             X8, [X1]
.text:0000000000049DA4                 LDR             X4, [X8,#0x50]
.text:0000000000049DA8                 CBZ             X4, loc_49DB4
.text:0000000000049DAC                 LDR             X1, [X1,#0x20]
.text:0000000000049DB0                 BR              X4
.text:0000000000049DB4 ; ---------------------------------------------------------------------------
.text:0000000000049DB4 loc_49DB4                               ; CODE XREF: EAS_SetStreamParameter+8↑j
.text:0000000000049DB4                 MOV             X0, #0xFFFFFFFFFFFFFFE3
.text:0000000000049DB8                 RET
.text:0000000000049DB8 ; } // starts at 49DA0
.text:0000000000049DB8 ; End of function EAS_SetStreamParameter
.text:0000000000049DB8 ; ---------------------------------------------------------------------------
.text:0000000000049DBC                 ALIGN 0x20
.text:0000000000049DC0 ; =============== S U B R O U T I N E =======================================
.text:0000000000049DC0                 EXPORT EAS_GetStreamParameter
.text:0000000000049DC0 EAS_GetStreamParameter                  ; DATA XREF: LOAD:0000000000001560↑o
.text:0000000000049DC0 ; __unwind {
.text:0000000000049DC0                 LDR             X8, [X1]
.text:0000000000049DC4                 LDR             X4, [X8,#0x58]
.text:0000000000049DC8                 CBZ             X4, loc_49DD4
.text:0000000000049DCC                 LDR             X1, [X1,#0x20]
.text:0000000000049DD0                 BR              X4
.text:0000000000049DD4 ; ---------------------------------------------------------------------------
.text:0000000000049DD4 loc_49DD4                               ; CODE XREF: EAS_GetStreamParameter+8↑j
.text:0000000000049DD4                 MOV             X0, #0xFFFFFFFFFFFFFFE3
.text:0000000000049DD8                 RET
.text:0000000000049DD8 ; } // starts at 49DC0
.text:0000000000049DD8 ; End of function EAS_GetStreamParameter
.text:0000000000049DD8 ; ---------------------------------------------------------------------------
.text:0000000000049DDC                 ALIGN 0x20
.text:0000000000049DE0 ; =============== S U B R O U T I N E =======================================
.text:0000000000049DE0 ; Attributes: bp-based frame
.text:0000000000049DE0                 EXPORT EAS_StreamReady
.text:0000000000049DE0 EAS_StreamReady                         ; DATA XREF: LOAD:0000000000000840↑o
.text:0000000000049DE0 var_20          = -0x20
.text:0000000000049DE0 var_18          = -0x18
.text:0000000000049DE0 var_10          = -0x10
.text:0000000000049DE0 var_s0          =  0
.text:0000000000049DE0 ; __unwind {
.text:0000000000049DE0                 SUB             SP, SP, #0x30
.text:0000000000049DE4                 STR             X19, [SP,#0x20+var_10]
.text:0000000000049DE8                 STP             X29, X30, [SP,#0x20+var_s0]
.text:0000000000049DEC                 ADD             X29, SP, #0x20
.text:0000000000049DF0                 MRS             X19, #3, c13, c0, #2
.text:0000000000049DF4                 MOV             X2, SP
.text:0000000000049DF8                 LDR             X8, [X19,#0x28]
.text:0000000000049DFC                 STR             X8, [SP,#0x20+var_18]
.text:0000000000049E00                 LDR             X8, [X1]
.text:0000000000049E04                 LDR             X1, [X1,#0x20]
.text:0000000000049E08                 LDR             X8, [X8,#0x20]
.text:0000000000049E0C                 BLR             X8
.text:0000000000049E10                 LDR             X9, [SP,#0x20+var_20]
.text:0000000000049E14                 CMP             X0, #0
.text:0000000000049E18                 LDR             X10, [X19,#0x28]
.text:0000000000049E1C                 CSET            W8, EQ
.text:0000000000049E20                 LDR             X11, [SP,#0x20+var_18]
.text:0000000000049E24                 CMP             X9, #6
.text:0000000000049E28                 CSET            W9, LT
.text:0000000000049E2C                 CMP             X10, X11
.text:0000000000049E30                 B.NE            loc_49E48
.text:0000000000049E34                 LDP             X29, X30, [SP,#0x20+var_s0]
.text:0000000000049E38                 LDR             X19, [SP,#0x20+var_10]
.text:0000000000049E3C                 AND             W0, W8, W9
.text:0000000000049E40                 ADD             SP, SP, #0x30 ; '0'
.text:0000000000049E44                 RET
.text:0000000000049E48 ; ---------------------------------------------------------------------------
.text:0000000000049E48 loc_49E48                               ; CODE XREF: EAS_StreamReady+50↑j
.text:0000000000049E48                 BL              .__stack_chk_fail
.text:0000000000049E48 ; } // starts at 49DE0
.text:0000000000049E48 ; End of function EAS_StreamReady
.text:0000000000049E48 ; ---------------------------------------------------------------------------
.text:0000000000049E4C                 ALIGN 0x10
.text:0000000000049E50 ; =============== S U B R O U T I N E =======================================
.text:0000000000049E50 ; Attributes: bp-based frame
.text:0000000000049E50                 EXPORT EAS_IntSetStrmParam
.text:0000000000049E50 EAS_IntSetStrmParam                     ; CODE XREF: .EAS_IntSetStrmParam+C↓j
.text:0000000000049E50                                         ; DATA XREF: LOAD:0000000000000AE0↑o ...
.text:0000000000049E50 var_40          = -0x40
.text:0000000000049E50 var_38          = -0x38
.text:0000000000049E50 var_30          = -0x30
.text:0000000000049E50 var_20          = -0x20
.text:0000000000049E50 var_10          = -0x10
.text:0000000000049E50 var_s0          =  0
.text:0000000000049E50 ; __unwind {
.text:0000000000049E50                 SUB             SP, SP, #0x50
.text:0000000000049E54                 STR             X23, [SP,#0x40+var_30]
.text:0000000000049E58                 STP             X22, X21, [SP,#0x40+var_20]
.text:0000000000049E5C                 STP             X20, X19, [SP,#0x40+var_10]
.text:0000000000049E60                 STP             X29, X30, [SP,#0x40+var_s0]
.text:0000000000049E64                 ADD             X29, SP, #0x40
.text:0000000000049E68                 MRS             X23, #3, c13, c0, #2
.text:0000000000049E6C                 MOV             X19, X3
.text:0000000000049E70                 LDR             X8, [X23,#0x28]
.text:0000000000049E74                 MOV             W21, W2
.text:0000000000049E78                 MOV             X22, X1
.text:0000000000049E7C                 MOV             X20, X0
.text:0000000000049E80                 STR             X8, [SP,#0x40+var_38]
.text:0000000000049E84                 LDR             X9, [X1]
.text:0000000000049E88                 LDR             X8, [X9,#0x50]
.text:0000000000049E8C                 CBZ             X8, loc_49EAC
.text:0000000000049E90                 LDR             X1, [X22,#0x20]
.text:0000000000049E94                 MOV             X0, X20
.text:0000000000049E98                 MOV             X3, X19
.text:0000000000049E9C                 SXTW            X2, W21
.text:0000000000049EA0                 BLR             X8
.text:0000000000049EA4                 CBZ             X0, loc_49ED0
.text:0000000000049EA8                 LDR             X9, [X22]
.text:0000000000049EAC loc_49EAC                               ; CODE XREF: EAS_IntSetStrmParam+3C↑j
.text:0000000000049EAC                 LDR             X8, [X9,#0x58]
.text:0000000000049EB0                 CBZ             X8, loc_49ECC
.text:0000000000049EB4                 LDR             X1, [X22,#0x20]
.text:0000000000049EB8                 MOV             X3, SP
.text:0000000000049EBC                 MOV             X0, X20
.text:0000000000049EC0                 MOV             W2, #4
.text:0000000000049EC4                 BLR             X8
.text:0000000000049EC8                 CBZ             X0, loc_49EF8
.text:0000000000049ECC loc_49ECC                               ; CODE XREF: EAS_IntSetStrmParam+60↑j
.text:0000000000049ECC                                         ; EAS_IntSetStrmParam+AC↓j
.text:0000000000049ECC                 MOV             X0, #0xFFFFFFFFFFFFFFE4
.text:0000000000049ED0 loc_49ED0                               ; CODE XREF: EAS_IntSetStrmParam+54↑j
.text:0000000000049ED0                                         ; EAS_IntSetStrmParam+BC↓j ...
.text:0000000000049ED0                 LDR             X8, [X23,#0x28]
.text:0000000000049ED4                 LDR             X9, [SP,#0x40+var_38]
.text:0000000000049ED8                 CMP             X8, X9
.text:0000000000049EDC                 B.NE            loc_49FA4
.text:0000000000049EE0                 LDP             X29, X30, [SP,#0x40+var_s0]
.text:0000000000049EE4                 LDP             X20, X19, [SP,#0x40+var_10]
.text:0000000000049EE8                 LDP             X22, X21, [SP,#0x40+var_20]
.text:0000000000049EEC                 LDR             X23, [SP,#0x40+var_30]
.text:0000000000049EF0                 ADD             SP, SP, #0x50 ; 'P'
.text:0000000000049EF4                 RET
.text:0000000000049EF8 ; ---------------------------------------------------------------------------
.text:0000000000049EF8 loc_49EF8                               ; CODE XREF: EAS_IntSetStrmParam+78↑j
.text:0000000000049EF8                 LDR             X1, [SP,#0x40+var_40]
.text:0000000000049EFC                 CBZ             X1, loc_49ECC
.text:0000000000049F00                 MOV             X0, #0xFFFFFFFFFFFFFFE4
.text:0000000000049F04                 SUB             W8, W21, #2
.text:0000000000049F08                 CMP             W8, #7
.text:0000000000049F0C                 B.HI            loc_49ED0
.text:0000000000049F10                 ADRP            X9, #unk_5B30@PAGE
.text:0000000000049F14                 ADD             X9, X9, #unk_5B30@PAGEOFF
.text:0000000000049F18                 ADR             X10, loc_49ED0
.text:0000000000049F1C                 LDRB            W11, [X9,X8]
.text:0000000000049F20                 ADD             X10, X10, X11,LSL#2
.text:0000000000049F24                 BR              X10
.text:0000000000049F28 ; ---------------------------------------------------------------------------
.text:0000000000049F28                 MOV             X0, X1
.text:0000000000049F2C                 MOV             X1, X19
.text:0000000000049F30                 BL              .VMSetTranposition
.text:0000000000049F34                 B               loc_49F7C
.text:0000000000049F38 ; ---------------------------------------------------------------------------
.text:0000000000049F38                 MOV             X0, X1
.text:0000000000049F3C                 MOV             X1, X19
.text:0000000000049F40                 BL              .VMSetDLSLib
.text:0000000000049F44                 CBNZ            X0, loc_49ED0
.text:0000000000049F48                 MOV             X0, X19
.text:0000000000049F4C                 BL              .DLSAddRef
.text:0000000000049F50                 LDR             X0, [X20,#0x170]
.text:0000000000049F54                 LDR             X1, [SP,#0x40+var_40]
.text:0000000000049F58                 BL              .VMInitializeAllChannels
.text:0000000000049F5C                 B               loc_49F7C
.text:0000000000049F60 ; ---------------------------------------------------------------------------
.text:0000000000049F60                 LDR             X0, [X20,#0x170]
.text:0000000000049F64                 MOV             X2, X19
.text:0000000000049F68                 BL              .VMSetPriority
.text:0000000000049F6C                 B               loc_49ED0
.text:0000000000049F70 ; ---------------------------------------------------------------------------
.text:0000000000049F70                 MOV             X0, X1
.text:0000000000049F74                 MOV             W1, W19
.text:0000000000049F78                 BL              .VMSetVolume
.text:0000000000049F7C loc_49F7C                               ; CODE XREF: EAS_IntSetStrmParam+E4↑j
.text:0000000000049F7C                                         ; EAS_IntSetStrmParam+10C↑j
.text:0000000000049F7C                 MOV             X0, XZR
.text:0000000000049F80                 B               loc_49ED0
.text:0000000000049F84 ; ---------------------------------------------------------------------------
.text:0000000000049F84                 MOV             X0, X1
.text:0000000000049F88                 MOV             X1, X19
.text:0000000000049F8C                 BL              .VMSetEASLib
.text:0000000000049F90                 B               loc_49ED0
.text:0000000000049F94 ; ---------------------------------------------------------------------------
.text:0000000000049F94                 LDR             X0, [X20,#0x170]
.text:0000000000049F98                 MOV             X2, X19
.text:0000000000049F9C                 BL              .VMSetPolyphony
.text:0000000000049FA0                 B               loc_49ED0
.text:0000000000049FA4 ; ---------------------------------------------------------------------------
.text:0000000000049FA4 loc_49FA4                               ; CODE XREF: EAS_IntSetStrmParam+8C↑j
.text:0000000000049FA4                 BL              .__stack_chk_fail
.text:0000000000049FA4 ; } // starts at 49E50
.text:0000000000049FA4 ; End of function EAS_IntSetStrmParam
.text:0000000000049FA8 ; =============== S U B R O U T I N E =======================================
.text:0000000000049FA8 ; Attributes: bp-based frame
.text:0000000000049FA8                 EXPORT EAS_IntGetStrmParam
.text:0000000000049FA8 EAS_IntGetStrmParam                     ; DATA XREF: LOAD:0000000000001740↑o
.text:0000000000049FA8 var_40          = -0x40
.text:0000000000049FA8 var_38          = -0x38
.text:0000000000049FA8 var_30          = -0x30
.text:0000000000049FA8 var_20          = -0x20
.text:0000000000049FA8 var_10          = -0x10
.text:0000000000049FA8 var_s0          =  0
.text:0000000000049FA8 ; __unwind {
.text:0000000000049FA8                 SUB             SP, SP, #0x50
.text:0000000000049FAC                 STR             X23, [SP,#0x40+var_30]
.text:0000000000049FB0                 STP             X22, X21, [SP,#0x40+var_20]
.text:0000000000049FB4                 STP             X20, X19, [SP,#0x40+var_10]
.text:0000000000049FB8                 STP             X29, X30, [SP,#0x40+var_s0]
.text:0000000000049FBC                 ADD             X29, SP, #0x40
.text:0000000000049FC0                 MRS             X23, #3, c13, c0, #2
.text:0000000000049FC4                 LDR             X8, [X23,#0x28]
.text:0000000000049FC8                 STR             X8, [SP,#0x40+var_38]
.text:0000000000049FCC                 LDR             X8, [X1]
.text:0000000000049FD0                 LDR             X8, [X8,#0x58]
.text:0000000000049FD4                 CBZ             X8, loc_4A01C
.text:0000000000049FD8                 MOV             X22, X1
.text:0000000000049FDC                 LDR             X1, [X1,#0x20]
.text:0000000000049FE0                 MOV             W21, W2
.text:0000000000049FE4                 SXTW            X2, W21
.text:0000000000049FE8                 MOV             X19, X3
.text:0000000000049FEC                 MOV             X20, X0
.text:0000000000049FF0                 BLR             X8
.text:0000000000049FF4                 CBZ             X0, loc_4A020
.text:0000000000049FF8                 LDR             X8, [X22]
.text:0000000000049FFC                 LDR             X8, [X8,#0x58]
.text:000000000004A000                 CBZ             X8, loc_4A01C
.text:000000000004A004                 LDR             X1, [X22,#0x20]
.text:000000000004A008                 MOV             X3, SP
.text:000000000004A00C                 MOV             X0, X20
.text:000000000004A010                 MOV             W2, #4
.text:000000000004A014                 BLR             X8
.text:000000000004A018                 CBZ             X0, loc_4A048
.text:000000000004A01C loc_4A01C                               ; CODE XREF: EAS_IntGetStrmParam+2C↑j
.text:000000000004A01C                                         ; EAS_IntGetStrmParam+58↑j ...
.text:000000000004A01C                 MOV             X0, #0xFFFFFFFFFFFFFFE4
.text:000000000004A020 loc_4A020                               ; CODE XREF: EAS_IntGetStrmParam+4C↑j
.text:000000000004A020                                         ; EAS_IntGetStrmParam+B4↓j ...
.text:000000000004A020                 LDR             X8, [X23,#0x28]
.text:000000000004A024                 LDR             X9, [SP,#0x40+var_38]
.text:000000000004A028                 CMP             X8, X9
.text:000000000004A02C                 B.NE            loc_4A0C4
.text:000000000004A030                 LDP             X29, X30, [SP,#0x40+var_s0]
.text:000000000004A034                 LDP             X20, X19, [SP,#0x40+var_10]
.text:000000000004A038                 LDP             X22, X21, [SP,#0x40+var_20]
.text:000000000004A03C                 LDR             X23, [SP,#0x40+var_30]
.text:000000000004A040                 ADD             SP, SP, #0x50 ; 'P'
.text:000000000004A044                 RET
.text:000000000004A048 ; ---------------------------------------------------------------------------
.text:000000000004A048 loc_4A048                               ; CODE XREF: EAS_IntGetStrmParam+70↑j
.text:000000000004A048                 LDR             X1, [SP,#0x40+var_40]
.text:000000000004A04C                 CBZ             X1, loc_4A01C
.text:000000000004A050                 MOV             X0, #0xFFFFFFFFFFFFFFE4
.text:000000000004A054                 SUB             W8, W21, #2
.text:000000000004A058                 CMP             W8, #0xE
.text:000000000004A05C                 B.HI            loc_4A020
.text:000000000004A060                 ADRP            X9, #unk_5B38@PAGE
.text:000000000004A064                 ADD             X9, X9, #unk_5B38@PAGEOFF
.text:000000000004A068                 ADR             X10, loc_4A020
.text:000000000004A06C                 LDRB            W11, [X9,X8]
.text:000000000004A070                 ADD             X10, X10, X11,LSL#2
.text:000000000004A074                 BR              X10
.text:000000000004A078 ; ---------------------------------------------------------------------------
.text:000000000004A078                 MOV             X0, X1
.text:000000000004A07C                 MOV             X1, X19
.text:000000000004A080                 BL              .VMGetTranposition
.text:000000000004A084                 MOV             X0, XZR
.text:000000000004A088                 B               loc_4A020
.text:000000000004A08C ; ---------------------------------------------------------------------------
.text:000000000004A08C                 LDR             X0, [X20,#0x170]
.text:000000000004A090                 MOV             X2, X19
.text:000000000004A094                 BL              .VMGetPolyphony
.text:000000000004A098                 B               loc_4A020
.text:000000000004A09C ; ---------------------------------------------------------------------------
.text:000000000004A09C                 LDR             X0, [X20,#0x170]
.text:000000000004A0A0                 MOV             X2, X19
.text:000000000004A0A4                 BL              .VMGetPriority
.text:000000000004A0A8                 B               loc_4A020
.text:000000000004A0AC ; ---------------------------------------------------------------------------
.text:000000000004A0AC                 MOV             X0, X1
.text:000000000004A0B0                 BL              .VMGetNoteCount
.text:000000000004A0B4                 MOV             X8, X0
.text:000000000004A0B8                 MOV             X0, XZR
.text:000000000004A0BC                 STR             X8, [X19]
.text:000000000004A0C0                 B               loc_4A020
.text:000000000004A0C4 ; ---------------------------------------------------------------------------
.text:000000000004A0C4 loc_4A0C4                               ; CODE XREF: EAS_IntGetStrmParam+84↑j
.text:000000000004A0C4                 BL              .__stack_chk_fail
.text:000000000004A0C4 ; } // starts at 49FA8
.text:000000000004A0C4 ; End of function EAS_IntGetStrmParam
.text:000000000004A0C8 ; =============== S U B R O U T I N E =======================================
.text:000000000004A0C8                 EXPORT EAS_Config
.text:000000000004A0C8 EAS_Config                              ; DATA XREF: LOAD:0000000000000AB0↑o
.text:000000000004A0C8 ; __unwind {
.text:000000000004A0C8                 ADRP            X0, #unk_581A8@PAGE
.text:000000000004A0CC                 ADD             X0, X0, #unk_581A8@PAGEOFF
.text:000000000004A0D0                 RET
.text:000000000004A0D0 ; } // starts at 4A0C8
.text:000000000004A0D0 ; End of function EAS_Config
.text:000000000004A0D0 ; ---------------------------------------------------------------------------
.text:000000000004A0D4                 ALIGN 8
.text:000000000004A0D8 ; =============== S U B R O U T I N E =======================================
.text:000000000004A0D8 ; Attributes: bp-based frame
.text:000000000004A0D8                 EXPORT EAS_Init
.text:000000000004A0D8 EAS_Init                                ; DATA XREF: LOAD:00000000000010F8↑o
.text:000000000004A0D8 var_30          = -0x30
.text:000000000004A0D8 var_28          = -0x28
.text:000000000004A0D8 var_20          = -0x20
.text:000000000004A0D8 var_10          = -0x10
.text:000000000004A0D8 var_s0          =  0
.text:000000000004A0D8 ; __unwind {
.text:000000000004A0D8                 SUB             SP, SP, #0x40
.text:000000000004A0DC                 STP             X22, X21, [SP,#0x30+var_20]
.text:000000000004A0E0                 STP             X20, X19, [SP,#0x30+var_10]
.text:000000000004A0E4                 STP             X29, X30, [SP,#0x30+var_s0]
.text:000000000004A0E8                 ADD             X29, SP, #0x30
.text:000000000004A0EC                 MRS             X22, #3, c13, c0, #2
.text:000000000004A0F0                 MOV             X19, X0
.text:000000000004A0F4                 LDR             X8, [X22,#0x28]
.text:000000000004A0F8                 STR             X8, [SP,#0x30+var_28]
.text:000000000004A0FC                 BL              .EAS_CMStaticMemoryModel
.text:000000000004A100                 MOV             W21, W0
.text:000000000004A104                 STR             XZR, [X19]
.text:000000000004A108                 MOV             X0, SP
.text:000000000004A10C                 BL              .EAS_HWInit
.text:000000000004A110                 CBZ             X0, loc_4A138
.text:000000000004A114 loc_4A114                               ; CODE XREF: EAS_Init+B0↓j
.text:000000000004A114                                         ; EAS_Init+BC↓j ...
.text:000000000004A114                 LDR             X8, [X22,#0x28]
.text:000000000004A118                 LDR             X9, [SP,#0x30+var_28]
.text:000000000004A11C                 CMP             X8, X9
.text:000000000004A120                 B.NE            loc_4A308
.text:000000000004A124                 LDP             X29, X30, [SP,#0x30+var_s0]
.text:000000000004A128                 LDP             X20, X19, [SP,#0x30+var_10]
.text:000000000004A12C                 LDP             X22, X21, [SP,#0x30+var_20]
.text:000000000004A130                 ADD             SP, SP, #0x40 ; '@'
.text:000000000004A134                 RET
.text:000000000004A138 ; ---------------------------------------------------------------------------
.text:000000000004A138 loc_4A138                               ; CODE XREF: EAS_Init+38↑j
.text:000000000004A138                 CBZ             W21, loc_4A2EC
.text:000000000004A13C                 MOV             W0, #1
.text:000000000004A140                 BL              .EAS_CMEnumData
.text:000000000004A144                 MOV             X20, X0
.text:000000000004A148                 CBZ             X0, loc_4A300
.text:000000000004A14C loc_4A14C                               ; CODE XREF: EAS_Init+224↓j
.text:000000000004A14C                 MOV             W2, #0x190
.text:000000000004A150                 MOV             X0, X20
.text:000000000004A154                 MOV             W1, WZR
.text:000000000004A158                 BL              .EAS_HWMemSet
.text:000000000004A15C                 LDR             X8, [SP,#0x30+var_30]
.text:000000000004A160                 MOV             W9, #0x61 ; 'a'
.text:000000000004A164                 MOV             W0, #0x57 ; 'W'
.text:000000000004A168                 STRB            W21, [X20,#0x18B]
.text:000000000004A16C                 STR             XZR, [X20,#0x180]
.text:000000000004A170                 STRB            W9, [X20,#0x18A]
.text:000000000004A174                 STR             X8, [X20]
.text:000000000004A178                 BL              .EAS_VolumeToGain
.text:000000000004A17C                 STRH            W0, [X20,#0x188]
.text:000000000004A180                 MOV             X0, X20
.text:000000000004A184                 BL              .VMInitialize
.text:000000000004A188                 CBNZ            X0, loc_4A114
.text:000000000004A18C                 MOV             X0, X20
.text:000000000004A190                 BL              .EAS_MixEngineInit
.text:000000000004A194                 CBNZ            X0, loc_4A114
.text:000000000004A198                 BL              .EAS_CMEnumFXModules
.text:000000000004A19C                 STR             X0, [X20,#8]
.text:000000000004A1A0                 CBZ             X0, loc_4A1B8
.text:000000000004A1A4                 LDR             X8, [X0]
.text:000000000004A1A8                 ADD             X1, X20, #0x10
.text:000000000004A1AC                 MOV             X0, X20
.text:000000000004A1B0                 BLR             X8
.text:000000000004A1B4                 CBNZ            X0, loc_4A114
.text:000000000004A1B8 loc_4A1B8                               ; CODE XREF: EAS_Init+C8↑j
.text:000000000004A1B8                 MOV             W0, #1
.text:000000000004A1BC                 BL              .EAS_CMEnumFXModules
.text:000000000004A1C0                 STR             X0, [X20,#0x18]
.text:000000000004A1C4                 CBZ             X0, loc_4A1DC
.text:000000000004A1C8                 LDR             X8, [X0]
.text:000000000004A1CC                 ADD             X1, X20, #0x20 ; ' '
.text:000000000004A1D0                 MOV             X0, X20
.text:000000000004A1D4                 BLR             X8
.text:000000000004A1D8                 CBNZ            X0, loc_4A114
.text:000000000004A1DC loc_4A1DC                               ; CODE XREF: EAS_Init+EC↑j
.text:000000000004A1DC                 MOV             W0, #2
.text:000000000004A1E0                 BL              .EAS_CMEnumFXModules
.text:000000000004A1E4                 STR             X0, [X20,#0x28]
.text:000000000004A1E8                 CBZ             X0, loc_4A200
.text:000000000004A1EC                 LDR             X8, [X0]
.text:000000000004A1F0                 ADD             X1, X20, #0x30 ; '0'
.text:000000000004A1F4                 MOV             X0, X20
.text:000000000004A1F8                 BLR             X8
.text:000000000004A1FC                 CBNZ            X0, loc_4A114
.text:000000000004A200 loc_4A200                               ; CODE XREF: EAS_Init+110↑j
.text:000000000004A200                 MOV             W0, #3
.text:000000000004A204                 BL              .EAS_CMEnumFXModules
.text:000000000004A208                 STR             X0, [X20,#0x38]
.text:000000000004A20C                 CBZ             X0, loc_4A224
.text:000000000004A210                 LDR             X8, [X0]
.text:000000000004A214                 ADD             X1, X20, #0x40 ; '@'
.text:000000000004A218                 MOV             X0, X20
.text:000000000004A21C                 BLR             X8
.text:000000000004A220                 CBNZ            X0, loc_4A114
.text:000000000004A224 loc_4A224                               ; CODE XREF: EAS_Init+134↑j
.text:000000000004A224                 MOV             W0, #4
.text:000000000004A228                 BL              .EAS_CMEnumFXModules
.text:000000000004A22C                 STR             X0, [X20,#0x48]
.text:000000000004A230                 CBZ             X0, loc_4A248
.text:000000000004A234                 LDR             X8, [X0]
.text:000000000004A238                 ADD             X1, X20, #0x50 ; 'P'
.text:000000000004A23C                 MOV             X0, X20
.text:000000000004A240                 BLR             X8
.text:000000000004A244                 CBNZ            X0, loc_4A114
.text:000000000004A248 loc_4A248                               ; CODE XREF: EAS_Init+158↑j
.text:000000000004A248                 MOV             W0, #5
.text:000000000004A24C                 BL              .EAS_CMEnumFXModules
.text:000000000004A250                 STR             X0, [X20,#0x58]
.text:000000000004A254                 CBZ             X0, loc_4A26C
.text:000000000004A258                 LDR             X8, [X0]
.text:000000000004A25C                 ADD             X1, X20, #0x60 ; '`'
.text:000000000004A260                 MOV             X0, X20
.text:000000000004A264                 BLR             X8
.text:000000000004A268                 CBNZ            X0, loc_4A114
.text:000000000004A26C loc_4A26C                               ; CODE XREF: EAS_Init+17C↑j
.text:000000000004A26C                 MOV             W0, #6
.text:000000000004A270                 BL              .EAS_CMEnumFXModules
.text:000000000004A274                 STR             X0, [X20,#0x68]
.text:000000000004A278                 CBZ             X0, loc_4A290
.text:000000000004A27C                 LDR             X8, [X0]
.text:000000000004A280                 ADD             X1, X20, #0x70 ; 'p'
.text:000000000004A284                 MOV             X0, X20
.text:000000000004A288                 BLR             X8
.text:000000000004A28C                 CBNZ            X0, loc_4A114
.text:000000000004A290 loc_4A290                               ; CODE XREF: EAS_Init+1A0↑j
.text:000000000004A290                 MOV             W0, #7
.text:000000000004A294                 BL              .EAS_CMEnumFXModules
.text:000000000004A298                 STR             X0, [X20,#0x78]
.text:000000000004A29C                 CBZ             X0, loc_4A2B4
.text:000000000004A2A0                 LDR             X8, [X0]
.text:000000000004A2A4                 ADD             X1, X20, #0x80
.text:000000000004A2A8                 MOV             X0, X20
.text:000000000004A2AC                 BLR             X8
.text:000000000004A2B0                 CBNZ            X0, loc_4A114
.text:000000000004A2B4 loc_4A2B4                               ; CODE XREF: EAS_Init+1C4↑j
.text:000000000004A2B4                 MOV             W0, #8
.text:000000000004A2B8                 BL              .EAS_CMEnumFXModules
.text:000000000004A2BC                 STR             X0, [X20,#0x88]
.text:000000000004A2C0                 CBZ             X0, loc_4A2D8
.text:000000000004A2C4                 LDR             X8, [X0]
.text:000000000004A2C8                 ADD             X1, X20, #0x90
.text:000000000004A2CC                 MOV             X0, X20
.text:000000000004A2D0                 BLR             X8
.text:000000000004A2D4                 CBNZ            X0, loc_4A114
.text:000000000004A2D8 loc_4A2D8                               ; CODE XREF: EAS_Init+1E8↑j
.text:000000000004A2D8                 MOV             X0, X20
.text:000000000004A2DC                 BL              .EAS_PEInit
.text:000000000004A2E0                 CBNZ            X0, loc_4A114
.text:000000000004A2E4                 STR             X20, [X19]
.text:000000000004A2E8                 B               loc_4A114
.text:000000000004A2EC ; ---------------------------------------------------------------------------
.text:000000000004A2EC loc_4A2EC                               ; CODE XREF: EAS_Init:loc_4A138↑j
.text:000000000004A2EC                 LDR             X0, [SP,#0x30+var_30]
.text:000000000004A2F0                 MOV             W1, #0x190
.text:000000000004A2F4                 BL              .EAS_HWMalloc
.text:000000000004A2F8                 MOV             X20, X0
.text:000000000004A2FC                 CBNZ            X0, loc_4A14C
.text:000000000004A300 loc_4A300                               ; CODE XREF: EAS_Init+70↑j
.text:000000000004A300                 MOV             X0, #0xFFFFFFFFFFFFFFFD
.text:000000000004A304                 B               loc_4A114
.text:000000000004A308 ; ---------------------------------------------------------------------------
.text:000000000004A308 loc_4A308                               ; CODE XREF: EAS_Init+48↑j
.text:000000000004A308                 BL              .__stack_chk_fail
.text:000000000004A308 ; } // starts at 4A0D8
.text:000000000004A308 ; End of function EAS_Init
.text:000000000004A308 ; ---------------------------------------------------------------------------
.text:000000000004A30C                 ALIGN 0x10
.text:000000000004A310 ; =============== S U B R O U T I N E =======================================
.text:000000000004A310 ; Attributes: bp-based frame
.text:000000000004A310                 EXPORT EAS_SetVolume
.text:000000000004A310 EAS_SetVolume                           ; CODE XREF: .EAS_SetVolume+C↓j
.text:000000000004A310                                         ; DATA XREF: LOAD:00000000000012F0↑o ...
.text:000000000004A310 var_38          = -0x38
.text:000000000004A310 var_30          = -0x30
.text:000000000004A310 var_28          = -0x28
.text:000000000004A310 var_20          = -0x20
.text:000000000004A310 var_10          = -0x10
.text:000000000004A310 var_s0          =  0
.text:000000000004A310 ; __unwind {
.text:000000000004A310                 SUB             SP, SP, #0x50
.text:000000000004A314                 STP             X22, X21, [SP,#0x40+var_20]
.text:000000000004A318                 STP             X20, X19, [SP,#0x40+var_10]
.text:000000000004A31C                 STP             X29, X30, [SP,#0x40+var_s0]
.text:000000000004A320                 ADD             X29, SP, #0x40
.text:000000000004A324                 MRS             X22, #3, c13, c0, #2
.text:000000000004A328                 CMP             X2, #0x64 ; 'd'
.text:000000000004A32C                 LDR             X8, [X22,#0x28]
.text:000000000004A330                 STR             X8, [SP,#0x40+var_28]
.text:000000000004A334                 B.LS            loc_4A340
.text:000000000004A338                 MOV             X0, #0xFFFFFFFFFFFFFFF3
.text:000000000004A33C                 B               loc_4A428
.text:000000000004A340 ; ---------------------------------------------------------------------------
.text:000000000004A340 loc_4A340                               ; CODE XREF: EAS_SetVolume+24↑j
.text:000000000004A340                 MOV             X21, X2
.text:000000000004A344                 MOV             X20, X1
.text:000000000004A348                 MOV             X19, X0
.text:000000000004A34C                 CBZ             X1, loc_4A410
.text:000000000004A350                 LDR             X8, [X20]
.text:000000000004A354                 ADD             X2, SP, #0x40+var_30
.text:000000000004A358                 LDR             X1, [X20,#0x20]
.text:000000000004A35C                 MOV             X0, X19
.text:000000000004A360                 LDR             X8, [X8,#0x20]
.text:000000000004A364                 BLR             X8
.text:000000000004A368                 MOV             X8, X0
.text:000000000004A36C                 MOV             X0, #0xFFFFFFFFFFFFFFE1
.text:000000000004A370                 CBNZ            X8, loc_4A428
.text:000000000004A374                 LDR             X8, [SP,#0x40+var_30]
.text:000000000004A378                 CMP             X8, #5
.text:000000000004A37C                 B.GT            loc_4A428
.text:000000000004A380                 LDR             X8, [X20]
.text:000000000004A384                 STRB            W21, [X20,#0x28]
.text:000000000004A388                 LDR             X8, [X8,#0x58]
.text:000000000004A38C                 CBZ             X8, loc_4A3B4
.text:000000000004A390                 LDR             X1, [X20,#0x20]
.text:000000000004A394                 MOV             W2, #0x12
.text:000000000004A398                 ADD             X3, SP, #0x40+var_38
.text:000000000004A39C                 MOV             X0, X19
.text:000000000004A3A0                 BLR             X8
.text:000000000004A3A4                 LDR             X8, [SP,#0x40+var_38]
.text:000000000004A3A8                 CMP             X0, #0
.text:000000000004A3AC                 CSEL            X8, X8, XZR, EQ
.text:000000000004A3B0                 ADD             X21, X8, X21
.text:000000000004A3B4 loc_4A3B4                               ; CODE XREF: EAS_SetVolume+7C↑j
.text:000000000004A3B4                 SUB             W0, W21, #0xA
.text:000000000004A3B8                 BL              .EAS_VolumeToGain
.text:000000000004A3BC                 LDR             X9, [X20]
.text:000000000004A3C0                 MOV             W21, W0
.text:000000000004A3C4                 LDR             X8, [X9,#0x50]
.text:000000000004A3C8                 CBZ             X8, loc_4A3E8
.text:000000000004A3CC                 LDR             X1, [X20,#0x20]
.text:000000000004A3D0                 MOV             X0, X19
.text:000000000004A3D4                 MOV             W2, #3
.text:000000000004A3D8                 SXTH            X3, W21
.text:000000000004A3DC                 BLR             X8
.text:000000000004A3E0                 CBZ             X0, loc_4A428
.text:000000000004A3E4                 LDR             X9, [X20]
.text:000000000004A3E8 loc_4A3E8                               ; CODE XREF: EAS_SetVolume+B8↑j
.text:000000000004A3E8                 LDR             X8, [X9,#0x58]
.text:000000000004A3EC                 CBZ             X8, loc_4A408
.text:000000000004A3F0                 LDR             X1, [X20,#0x20]
.text:000000000004A3F4                 ADD             X3, SP, #0x40+var_30
.text:000000000004A3F8                 MOV             X0, X19
.text:000000000004A3FC                 MOV             W2, #4
.text:000000000004A400                 BLR             X8
.text:000000000004A404                 CBZ             X0, loc_4A44C
.text:000000000004A408 loc_4A408                               ; CODE XREF: EAS_SetVolume+DC↑j
.text:000000000004A408                                         ; EAS_SetVolume+140↓j
.text:000000000004A408                 MOV             X0, #0xFFFFFFFFFFFFFFE4
.text:000000000004A40C                 B               loc_4A428
.text:000000000004A410 ; ---------------------------------------------------------------------------
.text:000000000004A410 loc_4A410                               ; CODE XREF: EAS_SetVolume+3C↑j
.text:000000000004A410                 SUB             W0, W21, #0xA
.text:000000000004A414                 STRB            W21, [X19,#0x18A]
.text:000000000004A418                 BL              .EAS_VolumeToGain
.text:000000000004A41C                 MOV             W8, W0
.text:000000000004A420                 MOV             X0, XZR
.text:000000000004A424                 STRH            W8, [X19,#0x188]
.text:000000000004A428 loc_4A428                               ; CODE XREF: EAS_SetVolume+2C↑j
.text:000000000004A428                                         ; EAS_SetVolume+60↑j ...
.text:000000000004A428                 LDR             X8, [X22,#0x28]
.text:000000000004A42C                 LDR             X9, [SP,#0x40+var_28]
.text:000000000004A430                 CMP             X8, X9
.text:000000000004A434                 B.NE            loc_4A464
.text:000000000004A438                 LDP             X29, X30, [SP,#0x40+var_s0]
.text:000000000004A43C                 LDP             X20, X19, [SP,#0x40+var_10]
.text:000000000004A440                 LDP             X22, X21, [SP,#0x40+var_20]
.text:000000000004A444                 ADD             SP, SP, #0x50 ; 'P'
.text:000000000004A448                 RET
.text:000000000004A44C ; ---------------------------------------------------------------------------
.text:000000000004A44C loc_4A44C                               ; CODE XREF: EAS_SetVolume+F4↑j
.text:000000000004A44C                 LDR             X0, [SP,#0x40+var_30]
.text:000000000004A450                 CBZ             X0, loc_4A408
.text:000000000004A454                 MOV             W1, W21
.text:000000000004A458                 BL              .VMSetVolume
.text:000000000004A45C                 MOV             X0, XZR
.text:000000000004A460                 B               loc_4A428
.text:000000000004A464 ; ---------------------------------------------------------------------------
.text:000000000004A464 loc_4A464                               ; CODE XREF: EAS_SetVolume+124↑j
.text:000000000004A464                 BL              .__stack_chk_fail
.text:000000000004A464 ; } // starts at 4A310
.text:000000000004A464 ; End of function EAS_SetVolume
.text:000000000004A468 ; =============== S U B R O U T I N E =======================================
.text:000000000004A468 ; Attributes: bp-based frame
.text:000000000004A468                 EXPORT EAS_Shutdown
.text:000000000004A468 EAS_Shutdown                            ; DATA XREF: LOAD:00000000000015D8↑o
.text:000000000004A468 var_20          = -0x20
.text:000000000004A468 var_10          = -0x10
.text:000000000004A468 var_s0          =  0
.text:000000000004A468 ; __unwind {
.text:000000000004A468                 STR             X21, [SP,#-0x10+var_20]!
.text:000000000004A46C                 STP             X20, X19, [SP,#0x20+var_10]
.text:000000000004A470                 STP             X29, X30, [SP,#0x20+var_s0]
.text:000000000004A474                 ADD             X29, SP, #0x20
.text:000000000004A478                 CBZ             X0, loc_4A4F8
.text:000000000004A47C                 LDR             X8, [X0,#0xA8]
.text:000000000004A480                 MOV             X20, X0
.text:000000000004A484                 LDR             X19, [X0]
.text:000000000004A488                 CBZ             X8, loc_4A500
.text:000000000004A48C                 LDR             X1, [X20,#0xC8]
.text:000000000004A490                 CBZ             X1, loc_4A500
.text:000000000004A494                 LDR             X8, [X8,#0x28]
.text:000000000004A498                 MOV             X0, X20
.text:000000000004A49C                 BLR             X8
.text:000000000004A4A0                 MOV             X21, X0
.text:000000000004A4A4                 LDR             X8, [X20,#0xD8]
.text:000000000004A4A8                 CBZ             X8, loc_4A50C
.text:000000000004A4AC loc_4A4AC                               ; CODE XREF: EAS_Shutdown+A0↓j
.text:000000000004A4AC                 LDR             X1, [X20,#0xF8]
.text:000000000004A4B0                 CBZ             X1, loc_4A50C
.text:000000000004A4B4                 LDR             X8, [X8,#0x28]
.text:000000000004A4B8                 MOV             X0, X20
.text:000000000004A4BC                 BLR             X8
.text:000000000004A4C0                 CMP             X0, #0
.text:000000000004A4C4                 CSEL            X21, X21, X0, EQ
.text:000000000004A4C8                 LDR             X8, [X20,#0x108]
.text:000000000004A4CC                 CBZ             X8, loc_4A514
.text:000000000004A4D0 loc_4A4D0                               ; CODE XREF: EAS_Shutdown+A8↓j
.text:000000000004A4D0                 LDR             X1, [X20,#0x128]
.text:000000000004A4D4                 CBZ             X1, loc_4A514
.text:000000000004A4D8                 LDR             X8, [X8,#0x28]
.text:000000000004A4DC                 MOV             X0, X20
.text:000000000004A4E0                 BLR             X8
.text:000000000004A4E4                 CMP             X0, #0
.text:000000000004A4E8                 CSEL            X21, X21, X0, EQ
.text:000000000004A4EC                 LDR             X8, [X20,#0x138]
.text:000000000004A4F0                 CBNZ            X8, loc_4A51C
.text:000000000004A4F4                 B               loc_4A538
.text:000000000004A4F8 ; ---------------------------------------------------------------------------
.text:000000000004A4F8 loc_4A4F8                               ; CODE XREF: EAS_Shutdown+10↑j
.text:000000000004A4F8                 MOV             X21, #0xFFFFFFFFFFFFFFE6
.text:000000000004A4FC                 B               loc_4A6E0
.text:000000000004A500 ; ---------------------------------------------------------------------------
.text:000000000004A500 loc_4A500                               ; CODE XREF: EAS_Shutdown+20↑j
.text:000000000004A500                                         ; EAS_Shutdown+28↑j
.text:000000000004A500                 MOV             X21, XZR
.text:000000000004A504                 LDR             X8, [X20,#0xD8]
.text:000000000004A508                 CBNZ            X8, loc_4A4AC
.text:000000000004A50C loc_4A50C                               ; CODE XREF: EAS_Shutdown+40↑j
.text:000000000004A50C                                         ; EAS_Shutdown+48↑j
.text:000000000004A50C                 LDR             X8, [X20,#0x108]
.text:000000000004A510                 CBNZ            X8, loc_4A4D0
.text:000000000004A514 loc_4A514                               ; CODE XREF: EAS_Shutdown+64↑j
.text:000000000004A514                                         ; EAS_Shutdown+6C↑j
.text:000000000004A514                 LDR             X8, [X20,#0x138]
.text:000000000004A518                 CBZ             X8, loc_4A538
.text:000000000004A51C loc_4A51C                               ; CODE XREF: EAS_Shutdown+88↑j
.text:000000000004A51C                 LDR             X1, [X20,#0x158]
.text:000000000004A520                 CBZ             X1, loc_4A538
.text:000000000004A524                 LDR             X8, [X8,#0x28]
.text:000000000004A528                 MOV             X0, X20
.text:000000000004A52C                 BLR             X8
.text:000000000004A530                 CMP             X0, #0
.text:000000000004A534                 CSEL            X21, X21, X0, EQ
.text:000000000004A538 loc_4A538                               ; CODE XREF: EAS_Shutdown+8C↑j
.text:000000000004A538                                         ; EAS_Shutdown+B0↑j ...
.text:000000000004A538                 MOV             X0, X20
.text:000000000004A53C                 BL              .EAS_PEShutdown
.text:000000000004A540                 CMP             X0, #0
.text:000000000004A544                 CCMP            X21, #0, #0, NE
.text:000000000004A548                 CSEL            X21, X0, X21, EQ
.text:000000000004A54C                 MOV             X0, X20
.text:000000000004A550                 BL              .EAS_MixEngineShutdown
.text:000000000004A554                 CMP             X21, #0
.text:000000000004A558                 LDR             X8, [X20,#8]
.text:000000000004A55C                 CCMP            X0, #0, #4, EQ
.text:000000000004A560                 CSEL            X21, X0, X21, NE
.text:000000000004A564                 CBZ             X8, loc_4A584
.text:000000000004A568                 LDR             X8, [X8,#0x10]
.text:000000000004A56C                 MOV             X0, X20
.text:000000000004A570                 LDR             X1, [X20,#0x10]
.text:000000000004A574                 BLR             X8
.text:000000000004A578                 CMP             X0, #0
.text:000000000004A57C                 CCMP            X21, #0, #0, NE
.text:000000000004A580                 CSEL            X21, X0, X21, EQ
.text:000000000004A584 loc_4A584                               ; CODE XREF: EAS_Shutdown+FC↑j
.text:000000000004A584                 LDR             X8, [X20,#0x18]
.text:000000000004A588                 CBZ             X8, loc_4A5A8
.text:000000000004A58C                 LDR             X8, [X8,#0x10]
.text:000000000004A590                 MOV             X0, X20
.text:000000000004A594                 LDR             X1, [X20,#0x20]
.text:000000000004A598                 BLR             X8
.text:000000000004A59C                 CMP             X0, #0
.text:000000000004A5A0                 CCMP            X21, #0, #0, NE
.text:000000000004A5A4                 CSEL            X21, X0, X21, EQ
.text:000000000004A5A8 loc_4A5A8                               ; CODE XREF: EAS_Shutdown+120↑j
.text:000000000004A5A8                 LDR             X8, [X20,#0x28]
.text:000000000004A5AC                 CBZ             X8, loc_4A5CC
.text:000000000004A5B0                 LDR             X8, [X8,#0x10]
.text:000000000004A5B4                 MOV             X0, X20
.text:000000000004A5B8                 LDR             X1, [X20,#0x30]
.text:000000000004A5BC                 BLR             X8
.text:000000000004A5C0                 CMP             X0, #0
.text:000000000004A5C4                 CCMP            X21, #0, #0, NE
.text:000000000004A5C8                 CSEL            X21, X0, X21, EQ
.text:000000000004A5CC loc_4A5CC                               ; CODE XREF: EAS_Shutdown+144↑j
.text:000000000004A5CC                 LDR             X8, [X20,#0x38]
.text:000000000004A5D0                 CBZ             X8, loc_4A5F0
.text:000000000004A5D4                 LDR             X8, [X8,#0x10]
.text:000000000004A5D8                 MOV             X0, X20
.text:000000000004A5DC                 LDR             X1, [X20,#0x40]
.text:000000000004A5E0                 BLR             X8
.text:000000000004A5E4                 CMP             X0, #0
.text:000000000004A5E8                 CCMP            X21, #0, #0, NE
.text:000000000004A5EC                 CSEL            X21, X0, X21, EQ
.text:000000000004A5F0 loc_4A5F0                               ; CODE XREF: EAS_Shutdown+168↑j
.text:000000000004A5F0                 LDR             X8, [X20,#0x48]
.text:000000000004A5F4                 CBZ             X8, loc_4A614
.text:000000000004A5F8                 LDR             X8, [X8,#0x10]
.text:000000000004A5FC                 MOV             X0, X20
.text:000000000004A600                 LDR             X1, [X20,#0x50]
.text:000000000004A604                 BLR             X8
.text:000000000004A608                 CMP             X0, #0
.text:000000000004A60C                 CCMP            X21, #0, #0, NE
.text:000000000004A610                 CSEL            X21, X0, X21, EQ
.text:000000000004A614 loc_4A614                               ; CODE XREF: EAS_Shutdown+18C↑j
.text:000000000004A614                 LDR             X8, [X20,#0x58]
.text:000000000004A618                 CBZ             X8, loc_4A638
.text:000000000004A61C                 LDR             X8, [X8,#0x10]
.text:000000000004A620                 MOV             X0, X20
.text:000000000004A624                 LDR             X1, [X20,#0x60]
.text:000000000004A628                 BLR             X8
.text:000000000004A62C                 CMP             X0, #0
.text:000000000004A630                 CCMP            X21, #0, #0, NE
.text:000000000004A634                 CSEL            X21, X0, X21, EQ
.text:000000000004A638 loc_4A638                               ; CODE XREF: EAS_Shutdown+1B0↑j
.text:000000000004A638                 LDR             X8, [X20,#0x68]
.text:000000000004A63C                 CBZ             X8, loc_4A65C
.text:000000000004A640                 LDR             X8, [X8,#0x10]
.text:000000000004A644                 MOV             X0, X20
.text:000000000004A648                 LDR             X1, [X20,#0x70]
.text:000000000004A64C                 BLR             X8
.text:000000000004A650                 CMP             X0, #0
.text:000000000004A654                 CCMP            X21, #0, #0, NE
.text:000000000004A658                 CSEL            X21, X0, X21, EQ
.text:000000000004A65C loc_4A65C                               ; CODE XREF: EAS_Shutdown+1D4↑j
.text:000000000004A65C                 LDR             X8, [X20,#0x78]
.text:000000000004A660                 CBZ             X8, loc_4A680
.text:000000000004A664                 LDR             X8, [X8,#0x10]
.text:000000000004A668                 MOV             X0, X20
.text:000000000004A66C                 LDR             X1, [X20,#0x80]
.text:000000000004A670                 BLR             X8
.text:000000000004A674                 CMP             X0, #0
.text:000000000004A678                 CCMP            X21, #0, #0, NE
.text:000000000004A67C                 CSEL            X21, X0, X21, EQ
.text:000000000004A680 loc_4A680                               ; CODE XREF: EAS_Shutdown+1F8↑j
.text:000000000004A680                 LDR             X8, [X20,#0x88]
.text:000000000004A684                 CBZ             X8, loc_4A6A4
.text:000000000004A688                 LDR             X8, [X8,#0x10]
.text:000000000004A68C                 MOV             X0, X20
.text:000000000004A690                 LDR             X1, [X20,#0x90]
.text:000000000004A694                 BLR             X8
.text:000000000004A698                 CMP             X0, #0
.text:000000000004A69C                 CCMP            X21, #0, #0, NE
.text:000000000004A6A0                 CSEL            X21, X0, X21, EQ
.text:000000000004A6A4 loc_4A6A4                               ; CODE XREF: EAS_Shutdown+21C↑j
.text:000000000004A6A4                 MOV             X0, X20
.text:000000000004A6A8                 BL              .VMShutdown
.text:000000000004A6AC                 LDRB            W8, [X20,#0x18B]
.text:000000000004A6B0                 CBZ             W8, loc_4A6D0
.text:000000000004A6B4                 CBZ             X19, loc_4A6E0
.text:000000000004A6B8 loc_4A6B8                               ; CODE XREF: EAS_Shutdown+274↓j
.text:000000000004A6B8                 MOV             X0, X19
.text:000000000004A6BC                 BL              .EAS_HWShutdown
.text:000000000004A6C0                 CMP             X0, #0
.text:000000000004A6C4                 CCMP            X21, #0, #0, NE
.text:000000000004A6C8                 CSEL            X0, X0, X21, EQ
.text:000000000004A6CC                 B               loc_4A6E4
.text:000000000004A6D0 ; ---------------------------------------------------------------------------
.text:000000000004A6D0 loc_4A6D0                               ; CODE XREF: EAS_Shutdown+248↑j
.text:000000000004A6D0                 MOV             X0, X19
.text:000000000004A6D4                 MOV             X1, X20
.text:000000000004A6D8                 BL              .EAS_HWFree
.text:000000000004A6DC                 CBNZ            X19, loc_4A6B8
.text:000000000004A6E0 loc_4A6E0                               ; CODE XREF: EAS_Shutdown+94↑j
.text:000000000004A6E0                                         ; EAS_Shutdown+24C↑j
.text:000000000004A6E0                 MOV             X0, X21
.text:000000000004A6E4 loc_4A6E4                               ; CODE XREF: EAS_Shutdown+264↑j
.text:000000000004A6E4                 LDP             X29, X30, [SP,#0x20+var_s0]
.text:000000000004A6E8                 LDP             X20, X19, [SP,#0x20+var_10]
.text:000000000004A6EC                 LDR             X21, [SP+0x20+var_20],#0x30
.text:000000000004A6F0                 RET
.text:000000000004A6F0 ; } // starts at 4A468
.text:000000000004A6F0 ; End of function EAS_Shutdown
.text:000000000004A6F0 ; ---------------------------------------------------------------------------
.text:000000000004A6F4                 ALIGN 8
.text:000000000004A6F8 ; =============== S U B R O U T I N E =======================================
.text:000000000004A6F8 ; Attributes: bp-based frame
.text:000000000004A6F8                 EXPORT EAS_OpenJETStream
.text:000000000004A6F8 EAS_OpenJETStream                       ; CODE XREF: .EAS_OpenJETStream+C↓j
.text:000000000004A6F8                                         ; DATA XREF: LOAD:stru_510↑o ...
.text:000000000004A6F8 var_50          = -0x50
.text:000000000004A6F8 var_48          = -0x48
.text:000000000004A6F8 var_40          = -0x40
.text:000000000004A6F8 var_30          = -0x30
.text:000000000004A6F8 var_20          = -0x20
.text:000000000004A6F8 var_10          = -0x10
.text:000000000004A6F8 var_s0          =  0
.text:000000000004A6F8 ; __unwind {
.text:000000000004A6F8                 SUB             SP, SP, #0x60
.text:000000000004A6FC                 STR             X25, [SP,#0x50+var_40]
.text:000000000004A700                 STP             X24, X23, [SP,#0x50+var_30]
.text:000000000004A704                 STP             X22, X21, [SP,#0x50+var_20]
.text:000000000004A708                 STP             X20, X19, [SP,#0x50+var_10]
.text:000000000004A70C                 STP             X29, X30, [SP,#0x50+var_s0]
.text:000000000004A710                 ADD             X29, SP, #0x50
.text:000000000004A714                 MRS             X24, #3, c13, c0, #2
.text:000000000004A718                 MOV             X19, X3
.text:000000000004A71C                 LDR             X8, [X24,#0x28]
.text:000000000004A720                 MOV             X21, X2
.text:000000000004A724                 MOV             X20, X0
.text:000000000004A728                 MOV             X22, X1
.text:000000000004A72C                 STR             X8, [SP,#0x50+var_48]
.text:000000000004A730                 LDRB            W9, [X0,#0x18B]
.text:000000000004A734                 LDR             X8, [X0,#0xC8]
.text:000000000004A738                 CBZ             W9, loc_4A748
.text:000000000004A73C                 CBZ             X8, loc_4A76C
.text:000000000004A740 loc_4A740                               ; CODE XREF: EAS_OpenJETStream+68↓j
.text:000000000004A740                 MOV             X0, #0xFFFFFFFFFFFFFFE5
.text:000000000004A744                 B               loc_4A7E0
.text:000000000004A748 ; ---------------------------------------------------------------------------
.text:000000000004A748 loc_4A748                               ; CODE XREF: EAS_OpenJETStream+40↑j
.text:000000000004A748                 CBZ             X8, loc_4A76C
.text:000000000004A74C                 LDR             X8, [X20,#0xF8]
.text:000000000004A750                 CBZ             X8, loc_4A80C
.text:000000000004A754                 LDR             X8, [X20,#0x128]
.text:000000000004A758                 CBZ             X8, loc_4A814
.text:000000000004A75C                 LDR             X8, [X20,#0x158]
.text:000000000004A760                 CBNZ            X8, loc_4A740
.text:000000000004A764                 MOV             W25, #3
.text:000000000004A768                 B               loc_4A770
.text:000000000004A76C ; ---------------------------------------------------------------------------
.text:000000000004A76C loc_4A76C                               ; CODE XREF: EAS_OpenJETStream+44↑j
.text:000000000004A76C                                         ; EAS_OpenJETStream:loc_4A748↑j
.text:000000000004A76C                 MOV             X25, XZR
.text:000000000004A770 loc_4A770                               ; CODE XREF: EAS_OpenJETStream+70↑j
.text:000000000004A770                                         ; EAS_OpenJETStream+118↓j ...
.text:000000000004A770                 MOV             W0, WZR
.text:000000000004A774                 STR             XZR, [X19]
.text:000000000004A778                 STR             XZR, [SP,#0x50+var_50]
.text:000000000004A77C                 BL              .EAS_CMEnumModules
.text:000000000004A780                 CBZ             X0, loc_4A7DC
.text:000000000004A784                 LDR             X8, [X0]
.text:000000000004A788                 MOV             X23, X0
.text:000000000004A78C                 MOV             X2, SP
.text:000000000004A790                 MOV             X0, X20
.text:000000000004A794                 MOV             X1, X22
.text:000000000004A798                 MOV             X3, X21
.text:000000000004A79C                 BLR             X8
.text:000000000004A7A0                 CBNZ            X0, loc_4A7E0
.text:000000000004A7A4                 LDR             X8, [SP,#0x50+var_50]
.text:000000000004A7A8                 CBZ             X8, loc_4A7DC
.text:000000000004A7AC                 ADRP            X10, #xmmword_4870@PAGE
.text:000000000004A7B0                 MOV             W9, #0x30 ; '0'
.text:000000000004A7B4                 MOV             X0, XZR
.text:000000000004A7B8                 MADD            X9, X25, X9, X20
.text:000000000004A7BC                 LDR             Q0, [X10,#xmmword_4870@PAGEOFF]
.text:000000000004A7C0                 MOV             W11, #0x64 ; 'd'
.text:000000000004A7C4                 STR             X23, [X9,#0xA8]!
.text:000000000004A7C8                 STP             XZR, X8, [X9,#0x18]
.text:000000000004A7CC                 STRH            W11, [X9,#0x28]
.text:000000000004A7D0                 STUR            Q0, [X9,#8]
.text:000000000004A7D4                 STR             X9, [X19]
.text:000000000004A7D8                 B               loc_4A7E0
.text:000000000004A7DC ; ---------------------------------------------------------------------------
.text:000000000004A7DC loc_4A7DC                               ; CODE XREF: EAS_OpenJETStream+88↑j
.text:000000000004A7DC                                         ; EAS_OpenJETStream+B0↑j
.text:000000000004A7DC                 MOV             X0, #0xFFFFFFFFFFFFFFF1
.text:000000000004A7E0 loc_4A7E0                               ; CODE XREF: EAS_OpenJETStream+4C↑j
.text:000000000004A7E0                                         ; EAS_OpenJETStream+A8↑j ...
.text:000000000004A7E0                 LDR             X8, [X24,#0x28]
.text:000000000004A7E4                 LDR             X9, [SP,#0x50+var_48]
.text:000000000004A7E8                 CMP             X8, X9
.text:000000000004A7EC                 B.NE            loc_4A81C
.text:000000000004A7F0                 LDP             X29, X30, [SP,#0x50+var_s0]
.text:000000000004A7F4                 LDP             X20, X19, [SP,#0x50+var_10]
.text:000000000004A7F8                 LDP             X22, X21, [SP,#0x50+var_20]
.text:000000000004A7FC                 LDP             X24, X23, [SP,#0x50+var_30]
.text:000000000004A800                 LDR             X25, [SP,#0x50+var_40]
.text:000000000004A804                 ADD             SP, SP, #0x60 ; '`'
.text:000000000004A808                 RET
.text:000000000004A80C ; ---------------------------------------------------------------------------
.text:000000000004A80C loc_4A80C                               ; CODE XREF: EAS_OpenJETStream+58↑j
.text:000000000004A80C                 MOV             W25, #1
.text:000000000004A810                 B               loc_4A770
.text:000000000004A814 ; ---------------------------------------------------------------------------
.text:000000000004A814 loc_4A814                               ; CODE XREF: EAS_OpenJETStream+60↑j
.text:000000000004A814                 MOV             W25, #2
.text:000000000004A818                 B               loc_4A770
.text:000000000004A81C ; ---------------------------------------------------------------------------
.text:000000000004A81C loc_4A81C                               ; CODE XREF: EAS_OpenJETStream+F4↑j
.text:000000000004A81C                 BL              .__stack_chk_fail
.text:000000000004A81C ; } // starts at 4A6F8
.text:000000000004A81C ; End of function EAS_OpenJETStream
.text:000000000004A820 ; =============== S U B R O U T I N E =======================================
.text:000000000004A820 ; Attributes: bp-based frame
.text:000000000004A820                 EXPORT EAS_OpenFile
.text:000000000004A820 EAS_OpenFile                            ; DATA XREF: LOAD:stru_BE8↑o
.text:000000000004A820 var_58          = -0x58
.text:000000000004A820 var_50          = -0x50
.text:000000000004A820 var_48          = -0x48
.text:000000000004A820 var_40          = -0x40
.text:000000000004A820 var_30          = -0x30
.text:000000000004A820 var_20          = -0x20
.text:000000000004A820 var_10          = -0x10
.text:000000000004A820 var_s0          =  0
.text:000000000004A820 ; __unwind {
.text:000000000004A820                 SUB             SP, SP, #0x70
.text:000000000004A824                 STR             X25, [SP,#0x60+var_40]
.text:000000000004A828                 STP             X24, X23, [SP,#0x60+var_30]
.text:000000000004A82C                 STP             X22, X21, [SP,#0x60+var_20]
.text:000000000004A830                 STP             X20, X19, [SP,#0x60+var_10]
.text:000000000004A834                 STP             X29, X30, [SP,#0x60+var_s0]
.text:000000000004A838                 ADD             X29, SP, #0x60
.text:000000000004A83C                 MRS             X24, #3, c13, c0, #2
.text:000000000004A840                 MOV             X20, X0
.text:000000000004A844                 LDR             X8, [X24,#0x28]
.text:000000000004A848                 MOV             X19, X2
.text:000000000004A84C                 ADD             X2, SP, #0x60+var_50
.text:000000000004A850                 MOV             W3, #1
.text:000000000004A854                 STR             X8, [SP,#0x60+var_48]
.text:000000000004A858                 LDR             X0, [X0]
.text:000000000004A85C                 BL              .EAS_HWOpenFile
.text:000000000004A860                 MOV             X21, X0
.text:000000000004A864                 CBNZ            X0, loc_4A978
.text:000000000004A868                 LDRB            W9, [X20,#0x18B]
.text:000000000004A86C                 LDR             X8, [X20,#0xC8]
.text:000000000004A870                 CBZ             W9, loc_4A88C
.text:000000000004A874                 CBZ             X8, loc_4A8B0
.text:000000000004A878 loc_4A878                               ; CODE XREF: EAS_OpenFile+84↓j
.text:000000000004A878                 LDR             X0, [X20]
.text:000000000004A87C                 LDR             X1, [SP,#0x60+var_50]
.text:000000000004A880                 BL              .EAS_HWCloseFile
.text:000000000004A884                 MOV             X21, #0xFFFFFFFFFFFFFFE5
.text:000000000004A888                 B               loc_4A978
.text:000000000004A88C ; ---------------------------------------------------------------------------
.text:000000000004A88C loc_4A88C                               ; CODE XREF: EAS_OpenFile+50↑j
.text:000000000004A88C                 CBZ             X8, loc_4A8B0
.text:000000000004A890                 LDR             X8, [X20,#0xF8]
.text:000000000004A894                 CBZ             X8, loc_4A944
.text:000000000004A898                 LDR             X8, [X20,#0x128]
.text:000000000004A89C                 CBZ             X8, loc_4A9A8
.text:000000000004A8A0                 LDR             X8, [X20,#0x158]
.text:000000000004A8A4                 CBNZ            X8, loc_4A878
.text:000000000004A8A8                 MOV             W25, #3
.text:000000000004A8AC                 B               loc_4A8B4
.text:000000000004A8B0 ; ---------------------------------------------------------------------------
.text:000000000004A8B0 loc_4A8B0                               ; CODE XREF: EAS_OpenFile+54↑j
.text:000000000004A8B0                                         ; EAS_OpenFile:loc_4A88C↑j
.text:000000000004A8B0                 MOV             X25, XZR
.text:000000000004A8B4 loc_4A8B4                               ; CODE XREF: EAS_OpenFile+8C↑j
.text:000000000004A8B4                                         ; EAS_OpenFile+128↓j ...
.text:000000000004A8B4                 MOV             W0, WZR
.text:000000000004A8B8                 STR             XZR, [X19]
.text:000000000004A8BC                 STR             XZR, [SP,#0x60+var_58]
.text:000000000004A8C0                 BL              .EAS_CMEnumModules
.text:000000000004A8C4                 CBZ             X0, loc_4A91C
.text:000000000004A8C8                 MOV             X22, X0
.text:000000000004A8CC                 MOV             W23, #1
.text:000000000004A8D0 loc_4A8D0                               ; CODE XREF: EAS_OpenFile+F8↓j
.text:000000000004A8D0                 LDR             X8, [X22]
.text:000000000004A8D4                 ADD             X2, SP, #0x60+var_58
.text:000000000004A8D8                 LDR             X1, [SP,#0x60+var_50]
.text:000000000004A8DC                 MOV             X0, X20
.text:000000000004A8E0                 MOV             X3, XZR
.text:000000000004A8E4                 BLR             X8
.text:000000000004A8E8                 CBNZ            X0, loc_4A930
.text:000000000004A8EC                 LDR             X8, [SP,#0x60+var_58]
.text:000000000004A8F0                 CBNZ            X8, loc_4A94C
.text:000000000004A8F4                 LDR             X0, [X20]
.text:000000000004A8F8                 MOV             X2, XZR
.text:000000000004A8FC                 LDR             X1, [SP,#0x60+var_50]
.text:000000000004A900                 BL              .EAS_HWFileSeek
.text:000000000004A904                 CBNZ            X0, loc_4A930
.text:000000000004A908                 MOV             W0, W23
.text:000000000004A90C                 BL              .EAS_CMEnumModules
.text:000000000004A910                 MOV             X22, X0
.text:000000000004A914                 ADD             W23, W23, #1
.text:000000000004A918                 CBNZ            X0, loc_4A8D0
.text:000000000004A91C loc_4A91C                               ; CODE XREF: EAS_OpenFile+A4↑j
.text:000000000004A91C                 LDR             X0, [X20]
.text:000000000004A920                 LDR             X1, [SP,#0x60+var_50]
.text:000000000004A924                 BL              .EAS_HWCloseFile
.text:000000000004A928                 MOV             X21, #0xFFFFFFFFFFFFFFF1
.text:000000000004A92C                 B               loc_4A978
.text:000000000004A930 ; ---------------------------------------------------------------------------
.text:000000000004A930 loc_4A930                               ; CODE XREF: EAS_OpenFile+C8↑j
.text:000000000004A930                                         ; EAS_OpenFile+E4↑j
.text:000000000004A930                 MOV             X21, X0
.text:000000000004A934                 LDR             X0, [X20]
.text:000000000004A938                 LDR             X1, [SP,#0x60+var_50]
.text:000000000004A93C                 BL              .EAS_HWCloseFile
.text:000000000004A940                 B               loc_4A978
.text:000000000004A944 ; ---------------------------------------------------------------------------
.text:000000000004A944 loc_4A944                               ; CODE XREF: EAS_OpenFile+74↑j
.text:000000000004A944                 MOV             W25, #1
.text:000000000004A948                 B               loc_4A8B4
.text:000000000004A94C ; ---------------------------------------------------------------------------
.text:000000000004A94C loc_4A94C                               ; CODE XREF: EAS_OpenFile+D0↑j
.text:000000000004A94C                 ADRP            X10, #xmmword_4870@PAGE
.text:000000000004A950                 MOV             W9, #0x30 ; '0'
.text:000000000004A954                 MOV             W11, #0x64 ; 'd'
.text:000000000004A958                 MADD            X9, X25, X9, X20
.text:000000000004A95C                 LDR             Q0, [X10,#xmmword_4870@PAGEOFF]
.text:000000000004A960                 MOV             X21, XZR
.text:000000000004A964                 STR             X22, [X9,#0xA8]!
.text:000000000004A968                 STP             XZR, X8, [X9,#0x18]
.text:000000000004A96C                 STRH            W11, [X9,#0x28]
.text:000000000004A970                 STUR            Q0, [X9,#8]
.text:000000000004A974                 STR             X9, [X19]
.text:000000000004A978 loc_4A978                               ; CODE XREF: EAS_OpenFile+44↑j
.text:000000000004A978                                         ; EAS_OpenFile+68↑j ...
.text:000000000004A978                 LDR             X8, [X24,#0x28]
.text:000000000004A97C                 LDR             X9, [SP,#0x60+var_48]
.text:000000000004A980                 CMP             X8, X9
.text:000000000004A984                 B.NE            loc_4A9B0
.text:000000000004A988                 MOV             X0, X21
.text:000000000004A98C                 LDR             X25, [SP,#0x60+var_40]
.text:000000000004A990                 LDP             X29, X30, [SP,#0x60+var_s0]
.text:000000000004A994                 LDP             X20, X19, [SP,#0x60+var_10]
.text:000000000004A998                 LDP             X22, X21, [SP,#0x60+var_20]
.text:000000000004A99C                 LDP             X24, X23, [SP,#0x60+var_30]
.text:000000000004A9A0                 ADD             SP, SP, #0x70 ; 'p'
.text:000000000004A9A4                 RET
.text:000000000004A9A8 ; ---------------------------------------------------------------------------
.text:000000000004A9A8 loc_4A9A8                               ; CODE XREF: EAS_OpenFile+7C↑j
.text:000000000004A9A8                 MOV             W25, #2
.text:000000000004A9AC                 B               loc_4A8B4
.text:000000000004A9B0 ; ---------------------------------------------------------------------------
.text:000000000004A9B0 loc_4A9B0                               ; CODE XREF: EAS_OpenFile+164↑j
.text:000000000004A9B0                 BL              .__stack_chk_fail
.text:000000000004A9B0 ; } // starts at 4A820
.text:000000000004A9B0 ; End of function EAS_OpenFile
.text:000000000004A9B0 ; ---------------------------------------------------------------------------
.text:000000000004A9B4                 ALIGN 8
.text:000000000004A9B8 ; =============== S U B R O U T I N E =======================================
.text:000000000004A9B8 ; Attributes: bp-based frame
.text:000000000004A9B8                 EXPORT EAS_GetFileType
.text:000000000004A9B8 EAS_GetFileType                         ; DATA XREF: LOAD:00000000000007E0↑o
.text:000000000004A9B8 var_30          = -0x30
.text:000000000004A9B8 var_28          = -0x28
.text:000000000004A9B8 var_20          = -0x20
.text:000000000004A9B8 var_10          = -0x10
.text:000000000004A9B8 var_s0          =  0
.text:000000000004A9B8 ; __unwind {
.text:000000000004A9B8                 SUB             SP, SP, #0x40
.text:000000000004A9BC                 STP             X22, X21, [SP,#0x30+var_20]
.text:000000000004A9C0                 STP             X20, X19, [SP,#0x30+var_10]
.text:000000000004A9C4                 STP             X29, X30, [SP,#0x30+var_s0]
.text:000000000004A9C8                 ADD             X29, SP, #0x30
.text:000000000004A9CC                 MRS             X22, #3, c13, c0, #2
.text:000000000004A9D0                 MOV             X20, X1
.text:000000000004A9D4                 LDR             X8, [X22,#0x28]
.text:000000000004A9D8                 MOV             X19, X2
.text:000000000004A9DC                 MOV             X2, SP
.text:000000000004A9E0                 MOV             X21, X0
.text:000000000004A9E4                 STR             X8, [SP,#0x30+var_28]
.text:000000000004A9E8                 LDR             X8, [X1]
.text:000000000004A9EC                 LDR             X1, [X1,#0x20]
.text:000000000004A9F0                 LDR             X8, [X8,#0x20]
.text:000000000004A9F4                 BLR             X8
.text:000000000004A9F8                 LDR             X8, [SP,#0x30+var_30]
.text:000000000004A9FC                 CMP             X0, #0
.text:000000000004AA00                 CCMP            X8, #5, #0, EQ
.text:000000000004AA04                 B.LE            loc_4AA10
.text:000000000004AA08                 MOV             X0, #0xFFFFFFFFFFFFFFE1
.text:000000000004AA0C                 B               loc_4AA38
.text:000000000004AA10 ; ---------------------------------------------------------------------------
.text:000000000004AA10 loc_4AA10                               ; CODE XREF: EAS_GetFileType+4C↑j
.text:000000000004AA10                 LDR             X8, [X20]
.text:000000000004AA14                 LDR             X8, [X8,#0x58]
.text:000000000004AA18                 CBZ             X8, loc_4AA34
.text:000000000004AA1C                 LDR             X1, [X20,#0x20]
.text:000000000004AA20                 MOV             X0, X21
.text:000000000004AA24                 MOV             X2, XZR
.text:000000000004AA28                 MOV             X3, X19
.text:000000000004AA2C                 BLR             X8
.text:000000000004AA30                 B               loc_4AA38
.text:000000000004AA34 ; ---------------------------------------------------------------------------
.text:000000000004AA34 loc_4AA34                               ; CODE XREF: EAS_GetFileType+60↑j
.text:000000000004AA34                 MOV             X0, #0xFFFFFFFFFFFFFFE3
.text:000000000004AA38 loc_4AA38                               ; CODE XREF: EAS_GetFileType+54↑j
.text:000000000004AA38                                         ; EAS_GetFileType+78↑j
.text:000000000004AA38                 LDR             X8, [X22,#0x28]
.text:000000000004AA3C                 LDR             X9, [SP,#0x30+var_28]
.text:000000000004AA40                 CMP             X8, X9
.text:000000000004AA44                 B.NE            loc_4AA5C
.text:000000000004AA48                 LDP             X29, X30, [SP,#0x30+var_s0]
.text:000000000004AA4C                 LDP             X20, X19, [SP,#0x30+var_10]
.text:000000000004AA50                 LDP             X22, X21, [SP,#0x30+var_20]
.text:000000000004AA54                 ADD             SP, SP, #0x40 ; '@'
.text:000000000004AA58                 RET
.text:000000000004AA5C ; ---------------------------------------------------------------------------
.text:000000000004AA5C loc_4AA5C                               ; CODE XREF: EAS_GetFileType+8C↑j
.text:000000000004AA5C                 BL              .__stack_chk_fail
.text:000000000004AA5C ; } // starts at 4A9B8
.text:000000000004AA5C ; End of function EAS_GetFileType
.text:000000000004AA60 ; =============== S U B R O U T I N E =======================================
.text:000000000004AA60 ; Attributes: bp-based frame
.text:000000000004AA60                 EXPORT EAS_Prepare
.text:000000000004AA60 EAS_Prepare                             ; CODE XREF: .EAS_Prepare+C↓j
.text:000000000004AA60                                         ; DATA XREF: LOAD:0000000000000F48↑o ...
.text:000000000004AA60 var_30          = -0x30
.text:000000000004AA60 var_28          = -0x28
.text:000000000004AA60 var_20          = -0x20
.text:000000000004AA60 var_10          = -0x10
.text:000000000004AA60 var_s0          =  0
.text:000000000004AA60 ; __unwind {
.text:000000000004AA60                 SUB             SP, SP, #0x40
.text:000000000004AA64                 STR             X21, [SP,#0x30+var_20]
.text:000000000004AA68                 STP             X20, X19, [SP,#0x30+var_10]
.text:000000000004AA6C                 STP             X29, X30, [SP,#0x30+var_s0]
.text:000000000004AA70                 ADD             X29, SP, #0x30
.text:000000000004AA74                 MRS             X21, #3, c13, c0, #2
.text:000000000004AA78                 LDR             X8, [X21,#0x28]
.text:000000000004AA7C                 STR             X8, [SP,#0x30+var_28]
.text:000000000004AA80                 LDR             X8, [X1]
.text:000000000004AA84                 CBZ             X8, loc_4AADC
.text:000000000004AA88                 MOV             X19, X1
.text:000000000004AA8C                 LDR             X8, [X8,#0x20]
.text:000000000004AA90                 LDR             X1, [X1,#0x20]
.text:000000000004AA94                 MOV             X2, SP
.text:000000000004AA98                 MOV             X20, X0
.text:000000000004AA9C                 BLR             X8
.text:000000000004AAA0                 CBNZ            X0, loc_4AAE8
.text:000000000004AAA4                 LDR             X8, [SP,#0x30+var_30]
.text:000000000004AAA8                 CMP             X8, #6
.text:000000000004AAAC                 B.NE            loc_4AAE4
.text:000000000004AAB0                 LDR             X8, [X19]
.text:000000000004AAB4                 MOV             X0, X20
.text:000000000004AAB8                 LDR             X1, [X19,#0x20]
.text:000000000004AABC                 LDR             X8, [X8,#8]
.text:000000000004AAC0                 BLR             X8
.text:000000000004AAC4                 CBNZ            X0, loc_4AAE8
.text:000000000004AAC8                 LDRB            W2, [X19,#0x28]
.text:000000000004AACC                 MOV             X0, X20
.text:000000000004AAD0                 MOV             X1, X19
.text:000000000004AAD4                 BL              .EAS_SetVolume
.text:000000000004AAD8                 B               loc_4AAE8
.text:000000000004AADC ; ---------------------------------------------------------------------------
.text:000000000004AADC loc_4AADC                               ; CODE XREF: EAS_Prepare+24↑j
.text:000000000004AADC                 MOV             X0, #0xFFFFFFFFFFFFFFE3
.text:000000000004AAE0                 B               loc_4AAE8
.text:000000000004AAE4 ; ---------------------------------------------------------------------------
.text:000000000004AAE4 loc_4AAE4                               ; CODE XREF: EAS_Prepare+4C↑j
.text:000000000004AAE4                 MOV             X0, #0xFFFFFFFFFFFFFFE1
.text:000000000004AAE8 loc_4AAE8                               ; CODE XREF: EAS_Prepare+40↑j
.text:000000000004AAE8                                         ; EAS_Prepare+64↑j ...
.text:000000000004AAE8                 LDR             X8, [X21,#0x28]
.text:000000000004AAEC                 LDR             X9, [SP,#0x30+var_28]
.text:000000000004AAF0                 CMP             X8, X9
.text:000000000004AAF4                 B.NE            loc_4AB0C
.text:000000000004AAF8                 LDP             X29, X30, [SP,#0x30+var_s0]
.text:000000000004AAFC                 LDP             X20, X19, [SP,#0x30+var_10]
.text:000000000004AB00                 LDR             X21, [SP,#0x30+var_20]
.text:000000000004AB04                 ADD             SP, SP, #0x40 ; '@'
.text:000000000004AB08                 RET
.text:000000000004AB0C ; ---------------------------------------------------------------------------
.text:000000000004AB0C loc_4AB0C                               ; CODE XREF: EAS_Prepare+94↑j
.text:000000000004AB0C                 BL              .__stack_chk_fail
.text:000000000004AB0C ; } // starts at 4AA60
.text:000000000004AB0C ; End of function EAS_Prepare
.text:000000000004AB10 ; =============== S U B R O U T I N E =======================================
.text:000000000004AB10 ; Attributes: bp-based frame
.text:000000000004AB10                 EXPORT EAS_Render
.text:000000000004AB10 EAS_Render                              ; DATA XREF: LOAD:0000000000001B18↑o
.text:000000000004AB10 var_58          = -0x58
.text:000000000004AB10 var_50          = -0x50
.text:000000000004AB10 var_48          = -0x48
.text:000000000004AB10 var_40          = -0x40
.text:000000000004AB10 var_30          = -0x30
.text:000000000004AB10 var_20          = -0x20
.text:000000000004AB10 var_10          = -0x10
.text:000000000004AB10 var_s0          =  0
.text:000000000004AB10 ; __unwind {
.text:000000000004AB10                 SUB             SP, SP, #0x70
.text:000000000004AB14                 STP             X26, X25, [SP,#0x60+var_40]
.text:000000000004AB18                 STP             X24, X23, [SP,#0x60+var_30]
.text:000000000004AB1C                 STP             X22, X21, [SP,#0x60+var_20]
.text:000000000004AB20                 STP             X20, X19, [SP,#0x60+var_10]
.text:000000000004AB24                 STP             X29, X30, [SP,#0x60+var_s0]
.text:000000000004AB28                 ADD             X29, SP, #0x60
.text:000000000004AB2C                 MRS             X23, #3, c13, c0, #2
.text:000000000004AB30                 MOV             X19, X0
.text:000000000004AB34                 LDR             X8, [X23,#0x28]
.text:000000000004AB38                 MOV             X20, X3
.text:000000000004AB3C                 MOV             X22, X2
.text:000000000004AB40                 MOV             X21, X1
.text:000000000004AB44                 STR             X8, [SP,#0x60+var_48]
.text:000000000004AB48                 STR             XZR, [X3]
.text:000000000004AB4C                 LDR             X0, [X0,#0x170]
.text:000000000004AB50                 BL              .VMInitWorkload
.text:000000000004AB54                 CMP             X22, #0x80
.text:000000000004AB58                 B.NE            loc_4AD40
.text:000000000004AB5C                 MOV             X0, X19
.text:000000000004AB60                 MOV             W1, #0x80
.text:000000000004AB64                 BL              .EAS_MixEnginePrep
.text:000000000004AB68                 MOV             X22, XZR
.text:000000000004AB6C                 STR             X21, [X19,#0xA0]
.text:000000000004AB70                 MOV             X24, XZR
.text:000000000004AB74 loc_4AB74                               ; CODE XREF: EAS_Render+17C↓j
.text:000000000004AB74                 ADD             X25, X19, X22
.text:000000000004AB78                 MOV             X21, X25
.text:000000000004AB7C                 LDR             X26, [X21,#0xA8]!
.text:000000000004AB80                 LDRB            W9, [X25,#0xD1]
.text:000000000004AB84                 AND             W8, W9, #0xFFFFFFFB
.text:000000000004AB88                 STRB            W8, [X25,#0xD1]
.text:000000000004AB8C                 CBZ             X26, loc_4AC80
.text:000000000004AB90                 TBZ             W9, #1, loc_4ABB4
.text:000000000004AB94                 LDR             X9, [X26,#0x38]
.text:000000000004AB98                 CBZ             X9, loc_4ABAC
.text:000000000004AB9C                 LDR             X1, [X25,#0xC8]
.text:000000000004ABA0                 MOV             X0, X19
.text:000000000004ABA4                 BLR             X9
.text:000000000004ABA8                 LDRB            W8, [X25,#0xD1]
.text:000000000004ABAC loc_4ABAC                               ; CODE XREF: EAS_Render+88↑j
.text:000000000004ABAC                 AND             W8, W8, #0xFFFFFFFD
.text:000000000004ABB0                 STRB            W8, [X25,#0xD1]
.text:000000000004ABB4 loc_4ABB4                               ; CODE XREF: EAS_Render+80↑j
.text:000000000004ABB4                 LDR             X8, [X26,#0x20]
.text:000000000004ABB8                 ADD             X2, SP, #0x60+var_58
.text:000000000004ABBC                 LDR             X1, [X25,#0xC8]
.text:000000000004ABC0                 MOV             X0, X19
.text:000000000004ABC4                 BLR             X8
.text:000000000004ABC8                 CBNZ            X0, loc_4AD44
.text:000000000004ABCC                 LDR             X9, [SP,#0x60+var_58]
.text:000000000004ABD0                 LDRB            W8, [X25,#0xD1]
.text:000000000004ABD4                 CMP             X9, #5
.text:000000000004ABD8                 B.NE            loc_4AC00
.text:000000000004ABDC                 TBZ             W8, #3, loc_4AC00
.text:000000000004ABE0                 LDR             X9, [X26,#0x40]
.text:000000000004ABE4                 CBZ             X9, loc_4ABF8
.text:000000000004ABE8                 LDR             X1, [X25,#0xC8]
.text:000000000004ABEC                 MOV             X0, X19
.text:000000000004ABF0                 BLR             X9
.text:000000000004ABF4                 LDRB            W8, [X25,#0xD1]
.text:000000000004ABF8 loc_4ABF8                               ; CODE XREF: EAS_Render+D4↑j
.text:000000000004ABF8                 AND             W8, W8, #0xFFFFFFF7
.text:000000000004ABFC                 STRB            W8, [X25,#0xD1]
.text:000000000004AC00 loc_4AC00                               ; CODE XREF: EAS_Render+C8↑j
.text:000000000004AC00                                         ; EAS_Render+CC↑j
.text:000000000004AC00                 TBNZ            W8, #0, loc_4AC24
.text:000000000004AC04                 LDP             X8, X9, [X25,#0xB0]
.text:000000000004AC08                 MOV             X0, X19
.text:000000000004AC0C                 MOV             X1, X21
.text:000000000004AC10                 MOV             W3, WZR
.text:000000000004AC14                 ADD             X2, X9, X8
.text:000000000004AC18                 BL              sub_4AD78
.text:000000000004AC1C                 CBNZ            X0, loc_4AD44
.text:000000000004AC20                 LDRB            W8, [X25,#0xD1]
.text:000000000004AC24 loc_4AC24                               ; CODE XREF: EAS_Render:loc_4AC00↑j
.text:000000000004AC24                 TST             W8, #0xFF
.text:000000000004AC28                 B.EQ            loc_4AD38
.text:000000000004AC2C                 LDR             X8, [X25,#0xC0]
.text:000000000004AC30                 CBZ             X8, loc_4AC80
.text:000000000004AC34                 LDR             X8, [X26,#0x20]
.text:000000000004AC38                 ADD             X2, SP, #0x60+var_58
.text:000000000004AC3C                 LDR             X1, [X25,#0xC8]
.text:000000000004AC40                 MOV             X0, X19
.text:000000000004AC44                 BLR             X8
.text:000000000004AC48                 CBNZ            X0, loc_4AD44
.text:000000000004AC4C                 LDR             X8, [SP,#0x60+var_58]
.text:000000000004AC50                 CMP             X8, #4
.text:000000000004AC54                 B.NE            loc_4AC80
.text:000000000004AC58                 LDR             X8, [X25,#0xC0]
.text:000000000004AC5C                 SUBS            X8, X8, #1
.text:000000000004AC60                 B.LT            loc_4AC68
.text:000000000004AC64                 STR             X8, [X25,#0xC0]
.text:000000000004AC68 loc_4AC68                               ; CODE XREF: EAS_Render+150↑j
.text:000000000004AC68                 LDR             X8, [X26,#0x30]
.text:000000000004AC6C                 MOV             X0, X19
.text:000000000004AC70                 LDR             X1, [X25,#0xC8]
.text:000000000004AC74                 BLR             X8
.text:000000000004AC78                 CBNZ            X0, loc_4AD44
.text:000000000004AC7C                 STR             XZR, [X25,#0xB0]
.text:000000000004AC80 loc_4AC80                               ; CODE XREF: EAS_Render+7C↑j
.text:000000000004AC80                                         ; EAS_Render+120↑j ...
.text:000000000004AC80                 ADD             X24, X24, #1
.text:000000000004AC84                 ADD             X22, X22, #0x30 ; '0'
.text:000000000004AC88                 CMP             X24, #4
.text:000000000004AC8C                 B.CC            loc_4AB74
.text:000000000004AC90                 LDR             X0, [X19,#0x170]
.text:000000000004AC94                 ADD             X3, SP, #0x60+var_50
.text:000000000004AC98                 LDR             X2, [X19,#0x98]
.text:000000000004AC9C                 MOV             W1, #0x80
.text:000000000004ACA0                 BL              .VMRender
.text:000000000004ACA4                 CBNZ            X0, loc_4AD44
.text:000000000004ACA8                 LDR             X8, [X19,#0xA8]
.text:000000000004ACAC                 CBZ             X8, loc_4ACBC
.text:000000000004ACB0                 LDRB            W8, [X19,#0xD1]
.text:000000000004ACB4                 AND             W8, W8, #0xFE
.text:000000000004ACB8                 STRB            W8, [X19,#0xD1]
.text:000000000004ACBC loc_4ACBC                               ; CODE XREF: EAS_Render+19C↑j
.text:000000000004ACBC                 LDR             X8, [X19,#0xD8]
.text:000000000004ACC0                 CBZ             X8, loc_4ACD0
.text:000000000004ACC4                 LDRB            W8, [X19,#0x101]
.text:000000000004ACC8                 AND             W8, W8, #0xFE
.text:000000000004ACCC                 STRB            W8, [X19,#0x101]
.text:000000000004ACD0 loc_4ACD0                               ; CODE XREF: EAS_Render+1B0↑j
.text:000000000004ACD0                 LDR             X8, [X19,#0x108]
.text:000000000004ACD4                 CBZ             X8, loc_4ACE4
.text:000000000004ACD8                 LDRB            W8, [X19,#0x131]
.text:000000000004ACDC                 AND             W8, W8, #0xFE
.text:000000000004ACE0                 STRB            W8, [X19,#0x131]
.text:000000000004ACE4 loc_4ACE4                               ; CODE XREF: EAS_Render+1C4↑j
.text:000000000004ACE4                 LDR             X8, [X19,#0x138]
.text:000000000004ACE8                 CBZ             X8, loc_4ACF8
.text:000000000004ACEC                 LDRB            W8, [X19,#0x161]
.text:000000000004ACF0                 AND             W8, W8, #0xFE
.text:000000000004ACF4                 STRB            W8, [X19,#0x161]
.text:000000000004ACF8 loc_4ACF8                               ; CODE XREF: EAS_Render+1D8↑j
.text:000000000004ACF8                 MOV             X0, X19
.text:000000000004ACFC                 MOV             W1, #0x80
.text:000000000004AD00                 BL              .EAS_PERender
.text:000000000004AD04                 CBNZ            X0, loc_4AD44
.text:000000000004AD08                 MOV             X0, X19
.text:000000000004AD0C                 MOV             W1, #0x80
.text:000000000004AD10                 MOV             W21, #0x80
.text:000000000004AD14                 BL              .EAS_MixEnginePost
.text:000000000004AD18                 STR             X21, [X20]
.text:000000000004AD1C                 LDP             X9, X8, [X19,#0x178]
.text:000000000004AD20                 ADD             X8, X8, #0x5CE
.text:000000000004AD24                 STR             X8, [X19,#0x180]
.text:000000000004AD28                 CBZ             X9, loc_4AD38
.text:000000000004AD2C                 MOV             X0, X19
.text:000000000004AD30                 BL              .JET_Process
.text:000000000004AD34                 CBNZ            X0, loc_4AD44
.text:000000000004AD38 loc_4AD38                               ; CODE XREF: EAS_Render+118↑j
.text:000000000004AD38                                         ; EAS_Render+218↑j
.text:000000000004AD38                 MOV             X0, XZR
.text:000000000004AD3C                 B               loc_4AD44
.text:000000000004AD40 ; ---------------------------------------------------------------------------
.text:000000000004AD40 loc_4AD40                               ; CODE XREF: EAS_Render+48↑j
.text:000000000004AD40                 MOV             X0, #0xFFFFFFFFFFFFFFF0
.text:000000000004AD44 loc_4AD44                               ; CODE XREF: EAS_Render+B8↑j
.text:000000000004AD44                                         ; EAS_Render+10C↑j ...
.text:000000000004AD44                 LDR             X8, [X23,#0x28]
.text:000000000004AD48                 LDR             X9, [SP,#0x60+var_48]
.text:000000000004AD4C                 CMP             X8, X9
.text:000000000004AD50                 B.NE            loc_4AD70
.text:000000000004AD54                 LDP             X29, X30, [SP,#0x60+var_s0]
.text:000000000004AD58                 LDP             X20, X19, [SP,#0x60+var_10]
.text:000000000004AD5C                 LDP             X22, X21, [SP,#0x60+var_20]
.text:000000000004AD60                 LDP             X24, X23, [SP,#0x60+var_30]
.text:000000000004AD64                 LDP             X26, X25, [SP,#0x60+var_40]
.text:000000000004AD68                 ADD             SP, SP, #0x70 ; 'p'
.text:000000000004AD6C                 RET
.text:000000000004AD70 ; ---------------------------------------------------------------------------
.text:000000000004AD70 loc_4AD70                               ; CODE XREF: EAS_Render+240↑j
.text:000000000004AD70                 BL              .__stack_chk_fail
.text:000000000004AD70 ; } // starts at 4AB10
.text:000000000004AD70 ; End of function EAS_Render
.text:000000000004AD70 ; ---------------------------------------------------------------------------
.text:000000000004AD74                 ALIGN 8
.text:000000000004AD78 ; =============== S U B R O U T I N E =======================================
.text:000000000004AD78 ; Attributes: bp-based frame
.text:000000000004AD78 sub_4AD78                               ; CODE XREF: EAS_Render+108↑p
.text:000000000004AD78                                         ; EAS_ParseMetaData+D8↓p ...
.text:000000000004AD78 var_68          = -0x68
.text:000000000004AD78 var_60          = -0x60
.text:000000000004AD78 var_58          = -0x58
.text:000000000004AD78 var_50          = -0x50
.text:000000000004AD78 var_40          = -0x40
.text:000000000004AD78 var_30          = -0x30
.text:000000000004AD78 var_20          = -0x20
.text:000000000004AD78 var_10          = -0x10
.text:000000000004AD78 var_s0          =  0
.text:000000000004AD78 ; __unwind {
.text:000000000004AD78                 SUB             SP, SP, #0x80
.text:000000000004AD7C                 STP             X28, X27, [SP,#0x70+var_50]
.text:000000000004AD80                 STP             X26, X25, [SP,#0x70+var_40]
.text:000000000004AD84                 STP             X24, X23, [SP,#0x70+var_30]
.text:000000000004AD88                 STP             X22, X21, [SP,#0x70+var_20]
.text:000000000004AD8C                 STP             X20, X19, [SP,#0x70+var_10]
.text:000000000004AD90                 STP             X29, X30, [SP,#0x70+var_s0]
.text:000000000004AD94                 ADD             X29, SP, #0x70
.text:000000000004AD98                 MRS             X24, #3, c13, c0, #2
.text:000000000004AD9C                 MOV             X19, X1
.text:000000000004ADA0                 LDR             X8, [X24,#0x28]
.text:000000000004ADA4                 MOV             X22, X0
.text:000000000004ADA8                 STR             X8, [SP,#0x70+var_58]
.text:000000000004ADAC                 LDR             X25, [X1]
.text:000000000004ADB0                 LDR             X8, [X25,#0x10]
.text:000000000004ADB4                 STR             XZR, [SP,#0x70+var_68]
.text:000000000004ADB8                 CBZ             X8, loc_4AEA4
.text:000000000004ADBC                 LDRB            W8, [X19,#0x29]
.text:000000000004ADC0                 MOV             W20, W3
.text:000000000004ADC4                 MOV             X21, X2
.text:000000000004ADC8                 MOV             W27, WZR
.text:000000000004ADCC                 MOV             W26, #0xA
.text:000000000004ADD0                 AND             W8, W8, #0xFE
.text:000000000004ADD4                 LSR             X28, X2, #8
.text:000000000004ADD8                 STRB            W8, [X19,#0x29]
.text:000000000004ADDC loc_4ADDC                               ; CODE XREF: sub_4AD78:loc_4AE9C↓j
.text:000000000004ADDC                 LDR             X8, [X25,#0x20]
.text:000000000004ADE0                 ADD             X2, SP, #0x70+var_60
.text:000000000004ADE4                 LDR             X1, [X19,#0x20]
.text:000000000004ADE8                 MOV             X0, X22
.text:000000000004ADEC                 BLR             X8
.text:000000000004ADF0                 CBNZ            X0, loc_4AED8
.text:000000000004ADF4                 LDR             X8, [SP,#0x70+var_60]
.text:000000000004ADF8                 CMP             X8, #2
.text:000000000004ADFC                 B.GE            loc_4AEEC
.text:000000000004AE00                 LDR             X8, [X25,#0x10]
.text:000000000004AE04                 CBZ             X8, loc_4AE68
.text:000000000004AE08                 LDR             X1, [X19,#0x20]
.text:000000000004AE0C                 ADD             X2, SP, #0x70+var_68
.text:000000000004AE10                 MOV             X0, X22
.text:000000000004AE14                 BLR             X8
.text:000000000004AE18                 CBNZ            X0, loc_4AED8
.text:000000000004AE1C                 LDR             X8, [SP,#0x70+var_68]
.text:000000000004AE20                 CMP             X8, X28
.text:000000000004AE24                 B.CS            loc_4AE70
.text:000000000004AE28                 LDR             X8, [X25,#0x18]
.text:000000000004AE2C                 CBZ             X8, loc_4AE44
.text:000000000004AE30                 LDR             X1, [X19,#0x20]
.text:000000000004AE34                 MOV             X0, X22
.text:000000000004AE38                 MOV             W2, W20
.text:000000000004AE3C                 BLR             X8
.text:000000000004AE40                 CBNZ            X0, loc_4AF88
.text:000000000004AE44 loc_4AE44                               ; CODE XREF: sub_4AD78+B4↑j
.text:000000000004AE44                 MOV             W23, WZR
.text:000000000004AE48                 ADD             W4, W27, #1
.text:000000000004AE4C                 CBNZ            W20, loc_4AE60
.text:000000000004AE50                 MOV             W8, #0x1869F
.text:000000000004AE58                 CMP             W27, W8
.text:000000000004AE5C                 B.GE            loc_4AF40
.text:000000000004AE60 loc_4AE60                               ; CODE XREF: sub_4AD78+D4↑j
.text:000000000004AE60                 MOV             W27, W4
.text:000000000004AE64                 B               loc_4AE78
.text:000000000004AE68 ; ---------------------------------------------------------------------------
.text:000000000004AE68 loc_4AE68                               ; CODE XREF: sub_4AD78+8C↑j
.text:000000000004AE68                 MOV             W23, WZR
.text:000000000004AE6C                 B               loc_4AE78
.text:000000000004AE70 ; ---------------------------------------------------------------------------
.text:000000000004AE70 loc_4AE70                               ; CODE XREF: sub_4AD78+AC↑j
.text:000000000004AE70                 MOV             W23, #1
.text:000000000004AE74                 STR             X21, [X19,#8]
.text:000000000004AE78 loc_4AE78                               ; CODE XREF: sub_4AD78+EC↑j
.text:000000000004AE78                                         ; sub_4AD78+F4↑j
.text:000000000004AE78                 LDR             X0, [X22,#0x170]
.text:000000000004AE7C                 BL              .VMCheckWorkload
.text:000000000004AE80                 CBNZ            W0, loc_4AEE0
.text:000000000004AE84                 SUBS            W26, W26, #1
.text:000000000004AE88                 B.NE            loc_4AE9C
.text:000000000004AE8C                 LDR             X0, [X22]
.text:000000000004AE90                 BL              .EAS_HWYield
.text:000000000004AE94                 MOV             W26, #0xA
.text:000000000004AE98                 CBNZ            W0, loc_4AEE0
.text:000000000004AE9C loc_4AE9C                               ; CODE XREF: sub_4AD78+110↑j
.text:000000000004AE9C                 CBZ             W23, loc_4ADDC
.text:000000000004AEA0                 B               loc_4AEFC
.text:000000000004AEA4 ; ---------------------------------------------------------------------------
.text:000000000004AEA4 loc_4AEA4                               ; CODE XREF: sub_4AD78+40↑j
.text:000000000004AEA4                 LDR             X8, [X25,#0x20]
.text:000000000004AEA8                 ADD             X2, SP, #0x70+var_60
.text:000000000004AEAC                 LDR             X1, [X19,#0x20]
.text:000000000004AEB0                 MOV             X0, X22
.text:000000000004AEB4                 BLR             X8
.text:000000000004AEB8                 MOV             X23, X0
.text:000000000004AEBC                 CBNZ            X0, loc_4AF0C
.text:000000000004AEC0                 LDR             X8, [SP,#0x70+var_60]
.text:000000000004AEC4                 CMP             X8, #3
.text:000000000004AEC8                 B.HI            loc_4AEFC
.text:000000000004AECC                 LDP             X8, X9, [X19,#8]
.text:000000000004AED0                 ADD             X8, X8, X9
.text:000000000004AED4                 B               loc_4AEF8
.text:000000000004AED8 ; ---------------------------------------------------------------------------
.text:000000000004AED8 loc_4AED8                               ; CODE XREF: sub_4AD78+78↑j
.text:000000000004AED8                                         ; sub_4AD78+A0↑j
.text:000000000004AED8                 MOV             X23, X0
.text:000000000004AEDC                 B               loc_4AF0C
.text:000000000004AEE0 ; ---------------------------------------------------------------------------
.text:000000000004AEE0 loc_4AEE0                               ; CODE XREF: sub_4AD78+108↑j
.text:000000000004AEE0                                         ; sub_4AD78+120↑j
.text:000000000004AEE0                 CBNZ            W23, loc_4AEFC
.text:000000000004AEE4                 MOV             X23, XZR
.text:000000000004AEE8                 B               loc_4AF0C
.text:000000000004AEEC ; ---------------------------------------------------------------------------
.text:000000000004AEEC loc_4AEEC                               ; CODE XREF: sub_4AD78+84↑j
.text:000000000004AEEC                 CBZ             W20, loc_4AEFC
.text:000000000004AEF0                 LDR             X8, [SP,#0x70+var_68]
.text:000000000004AEF4                 LSL             X8, X8, #8
.text:000000000004AEF8 loc_4AEF8                               ; CODE XREF: sub_4AD78+15C↑j
.text:000000000004AEF8                 STR             X8, [X19,#8]
.text:000000000004AEFC loc_4AEFC                               ; CODE XREF: sub_4AD78+128↑j
.text:000000000004AEFC                                         ; sub_4AD78+150↑j ...
.text:000000000004AEFC                 LDRB            W8, [X19,#0x29]
.text:000000000004AF00                 MOV             X23, XZR
.text:000000000004AF04                 ORR             W8, W8, #1
.text:000000000004AF08                 STRB            W8, [X19,#0x29]
.text:000000000004AF0C loc_4AF0C                               ; CODE XREF: sub_4AD78+144↑j
.text:000000000004AF0C                                         ; sub_4AD78+164↑j ...
.text:000000000004AF0C                 LDR             X8, [X24,#0x28]
.text:000000000004AF10                 LDR             X9, [SP,#0x70+var_58]
.text:000000000004AF14                 CMP             X8, X9
.text:000000000004AF18                 B.NE            loc_4AFB4
.text:000000000004AF1C                 MOV             X0, X23
.text:000000000004AF20                 LDP             X29, X30, [SP,#0x70+var_s0]
.text:000000000004AF24                 LDP             X20, X19, [SP,#0x70+var_10]
.text:000000000004AF28                 LDP             X22, X21, [SP,#0x70+var_20]
.text:000000000004AF2C                 LDP             X24, X23, [SP,#0x70+var_30]
.text:000000000004AF30                 LDP             X26, X25, [SP,#0x70+var_40]
.text:000000000004AF34                 LDP             X28, X27, [SP,#0x70+var_50]
.text:000000000004AF38                 ADD             SP, SP, #0x80
.text:000000000004AF3C                 RET
.text:000000000004AF40 ; ---------------------------------------------------------------------------
.text:000000000004AF40 loc_4AF40                               ; CODE XREF: sub_4AD78+E4↑j
.text:000000000004AF40                 ADRP            X1, #aSonivox@PAGE ; "Sonivox"
.text:000000000004AF44                 ADRP            X2, #aSAbortingDEven@PAGE ; "%s() aborting, %d events. Infinite loop"...
.text:000000000004AF48                 ADRP            X3, #aEasParseevents@PAGE ; "EAS_ParseEvents"
.text:000000000004AF4C                 ADD             X1, X1, #aSonivox@PAGEOFF ; "Sonivox"
.text:000000000004AF50                 ADD             X2, X2, #aSAbortingDEven@PAGEOFF ; "%s() aborting, %d events. Infinite loop"...
.text:000000000004AF54                 ADD             X3, X3, #aEasParseevents@PAGEOFF ; "EAS_ParseEvents"
.text:000000000004AF58                 MOV             W0, #6
.text:000000000004AF5C                 BL              .__android_log_print
.text:000000000004AF60                 ADRP            X1, #a68664359@PAGE ; "68664359"
.text:000000000004AF64                 MOV             W0, #0x4554
.text:000000000004AF68                 ADD             X1, X1, #a68664359@PAGEOFF ; "68664359"
.text:000000000004AF6C                 MOVK            W0, #0x534E,LSL#16
.text:000000000004AF70                 MOV             W2, #0xFFFFFFFF
.text:000000000004AF74                 MOV             X3, XZR
.text:000000000004AF78                 MOV             W4, WZR
.text:000000000004AF7C                 BL              .__android_log_error_write
.text:000000000004AF80                 MOV             X23, #0xFFFFFFFFFFFFFFFC
.text:000000000004AF84                 B               loc_4AF0C
.text:000000000004AF88 ; ---------------------------------------------------------------------------
.text:000000000004AF88 loc_4AF88                               ; CODE XREF: sub_4AD78+C8↑j
.text:000000000004AF88                 MOV             X23, X0
.text:000000000004AF8C                 ADRP            X1, #aSonivox@PAGE ; "Sonivox"
.text:000000000004AF90                 ADRP            X2, #aSPfeventReturn@PAGE ; "%s() pfEvent returned %ld"
.text:000000000004AF94                 ADRP            X3, #aEasParseevents@PAGE ; "EAS_ParseEvents"
.text:000000000004AF98                 ADD             X1, X1, #aSonivox@PAGEOFF ; "Sonivox"
.text:000000000004AF9C                 ADD             X2, X2, #aSPfeventReturn@PAGEOFF ; "%s() pfEvent returned %ld"
.text:000000000004AFA0                 ADD             X3, X3, #aEasParseevents@PAGEOFF ; "EAS_ParseEvents"
.text:000000000004AFA4                 MOV             W0, #6
.text:000000000004AFA8                 MOV             X4, X23
.text:000000000004AFAC                 BL              .__android_log_print
.text:000000000004AFB0                 B               loc_4AF0C
.text:000000000004AFB4 ; ---------------------------------------------------------------------------
.text:000000000004AFB4 loc_4AFB4                               ; CODE XREF: sub_4AD78+1A0↑j
.text:000000000004AFB4                 BL              .__stack_chk_fail
.text:000000000004AFB4 ; } // starts at 4AD78
.text:000000000004AFB4 ; End of function sub_4AD78
.text:000000000004AFB8 ; =============== S U B R O U T I N E =======================================
.text:000000000004AFB8                 EXPORT EAS_SetRepeat
.text:000000000004AFB8 EAS_SetRepeat                           ; DATA XREF: LOAD:0000000000001908↑o
.text:000000000004AFB8 ; __unwind {
.text:000000000004AFB8                 MOV             X0, XZR
.text:000000000004AFBC                 STR             X2, [X1,#0x18]
.text:000000000004AFC0                 RET
.text:000000000004AFC0 ; } // starts at 4AFB8
.text:000000000004AFC0 ; End of function EAS_SetRepeat
.text:000000000004AFC0 ; ---------------------------------------------------------------------------
.text:000000000004AFC4                 ALIGN 8
.text:000000000004AFC8 ; =============== S U B R O U T I N E =======================================
.text:000000000004AFC8                 EXPORT EAS_GetRepeat
.text:000000000004AFC8 EAS_GetRepeat                           ; DATA XREF: LOAD:0000000000001BC0↑o
.text:000000000004AFC8 ; __unwind {
.text:000000000004AFC8                 LDR             X8, [X1,#0x18]
.text:000000000004AFCC                 MOV             X0, XZR
.text:000000000004AFD0                 STR             X8, [X2]
.text:000000000004AFD4                 RET
.text:000000000004AFD4 ; } // starts at 4AFC8
.text:000000000004AFD4 ; End of function EAS_GetRepeat
.text:000000000004AFD8 ; =============== S U B R O U T I N E =======================================
.text:000000000004AFD8                 EXPORT EAS_SetPlaybackRate
.text:000000000004AFD8 EAS_SetPlaybackRate                     ; DATA XREF: LOAD:00000000000017A0↑o
.text:000000000004AFD8 var_10          = -0x10
.text:000000000004AFD8 ; __unwind {
.text:000000000004AFD8                 MOV             X8, #0xFFFFFFFFF8000000
.text:000000000004AFDC                 ADD             X8, X2, X8
.text:000000000004AFE0                 MOV             W9, #0x18000000
.text:000000000004AFE4                 CMP             X8, X9
.text:000000000004AFE8                 B.LS            loc_4AFF4
.text:000000000004AFEC                 MOV             X0, #0xFFFFFFFFFFFFFFE4
.text:000000000004AFF0                 RET
.text:000000000004AFF4 ; ---------------------------------------------------------------------------
.text:000000000004AFF4 loc_4AFF4                               ; CODE XREF: EAS_SetPlaybackRate+10↑j
.text:000000000004AFF4                 MOV             W8, #0x5CE
.text:000000000004AFF8                 LSR             X9, X2, #8
.text:000000000004AFFC                 MUL             X8, X9, X8
.text:000000000004B000                 LDR             X9, [X1]
.text:000000000004B004                 MOV             X3, X2
.text:000000000004B008                 LSR             X8, X8, #0x14
.text:000000000004B00C                 STR             X8, [X1,#0x10]
.text:000000000004B010                 LDR             X8, [X9,#0x50]
.text:000000000004B014                 CBZ             X8, loc_4B038
.text:000000000004B018                 STP             X29, X30, [SP,#var_10]!
.text:000000000004B01C                 MOV             X29, SP
.text:000000000004B020                 LDR             X1, [X1,#0x20]
.text:000000000004B024                 MOV             W2, #1
.text:000000000004B028                 BLR             X8
.text:000000000004B02C                 MOV             X0, XZR
.text:000000000004B030                 LDP             X29, X30, [SP+0x10+var_10],#0x10
.text:000000000004B034                 RET
.text:000000000004B038 ; ---------------------------------------------------------------------------
.text:000000000004B038 loc_4B038                               ; CODE XREF: EAS_SetPlaybackRate+3C↑j
.text:000000000004B038                 MOV             X0, XZR
.text:000000000004B03C                 RET
.text:000000000004B03C ; } // starts at 4AFD8
.text:000000000004B03C ; End of function EAS_SetPlaybackRate
.text:000000000004B040 ; =============== S U B R O U T I N E =======================================
.text:000000000004B040 ; Attributes: bp-based frame
.text:000000000004B040                 EXPORT EAS_SetTransposition
.text:000000000004B040 EAS_SetTransposition                    ; CODE XREF: .EAS_SetTransposition+C↓j
.text:000000000004B040                                         ; DATA XREF: LOAD:0000000000000F60↑o ...
.text:000000000004B040 var_30          = -0x30
.text:000000000004B040 var_28          = -0x28
.text:000000000004B040 var_20          = -0x20
.text:000000000004B040 var_10          = -0x10
.text:000000000004B040 var_s0          =  0
.text:000000000004B040 ; __unwind {
.text:000000000004B040                 SUB             SP, SP, #0x40
.text:000000000004B044                 STP             X22, X21, [SP,#0x30+var_20]
.text:000000000004B048                 STP             X20, X19, [SP,#0x30+var_10]
.text:000000000004B04C                 STP             X29, X30, [SP,#0x30+var_s0]
.text:000000000004B050                 ADD             X29, SP, #0x30
.text:000000000004B054                 MRS             X22, #3, c13, c0, #2
.text:000000000004B058                 ADD             X9, X2, #0xC
.text:000000000004B05C                 LDR             X8, [X22,#0x28]
.text:000000000004B060                 CMP             X9, #0x18
.text:000000000004B064                 STR             X8, [SP,#0x30+var_28]
.text:000000000004B068                 B.LS            loc_4B094
.text:000000000004B06C loc_4B06C                               ; CODE XREF: EAS_SetTransposition+B8↓j
.text:000000000004B06C                                         ; EAS_SetTransposition+D0↓j ...
.text:000000000004B06C                 MOV             X0, #0xFFFFFFFFFFFFFFE4
.text:000000000004B070 loc_4B070                               ; CODE XREF: EAS_SetTransposition+7C↓j
.text:000000000004B070                                         ; EAS_SetTransposition+88↓j ...
.text:000000000004B070                 LDR             X8, [X22,#0x28]
.text:000000000004B074                 LDR             X9, [SP,#0x30+var_28]
.text:000000000004B078                 CMP             X8, X9
.text:000000000004B07C                 B.NE            loc_4B12C
.text:000000000004B080                 LDP             X29, X30, [SP,#0x30+var_s0]
.text:000000000004B084                 LDP             X20, X19, [SP,#0x30+var_10]
.text:000000000004B088                 LDP             X22, X21, [SP,#0x30+var_20]
.text:000000000004B08C                 ADD             SP, SP, #0x40 ; '@'
.text:000000000004B090                 RET
.text:000000000004B094 ; ---------------------------------------------------------------------------
.text:000000000004B094 loc_4B094                               ; CODE XREF: EAS_SetTransposition+28↑j
.text:000000000004B094                 LDR             X8, [X1]
.text:000000000004B098                 MOV             X21, X1
.text:000000000004B09C                 LDR             X1, [X1,#0x20]
.text:000000000004B0A0                 MOV             X19, X2
.text:000000000004B0A4                 MOV             X2, SP
.text:000000000004B0A8                 MOV             X20, X0
.text:000000000004B0AC                 LDR             X8, [X8,#0x20]
.text:000000000004B0B0                 BLR             X8
.text:000000000004B0B4                 MOV             X8, X0
.text:000000000004B0B8                 MOV             X0, #0xFFFFFFFFFFFFFFE1
.text:000000000004B0BC                 CBNZ            X8, loc_4B070
.text:000000000004B0C0                 LDR             X8, [SP,#0x30+var_30]
.text:000000000004B0C4                 CMP             X8, #5
.text:000000000004B0C8                 B.GT            loc_4B070
.text:000000000004B0CC                 LDR             X9, [X21]
.text:000000000004B0D0                 LDR             X8, [X9,#0x50]
.text:000000000004B0D4                 CBZ             X8, loc_4B0F4
.text:000000000004B0D8                 LDR             X1, [X21,#0x20]
.text:000000000004B0DC                 MOV             X0, X20
.text:000000000004B0E0                 MOV             W2, #2
.text:000000000004B0E4                 MOV             X3, X19
.text:000000000004B0E8                 BLR             X8
.text:000000000004B0EC                 CBZ             X0, loc_4B070
.text:000000000004B0F0                 LDR             X9, [X21]
.text:000000000004B0F4 loc_4B0F4                               ; CODE XREF: EAS_SetTransposition+94↑j
.text:000000000004B0F4                 LDR             X8, [X9,#0x58]
.text:000000000004B0F8                 CBZ             X8, loc_4B06C
.text:000000000004B0FC                 LDR             X1, [X21,#0x20]
.text:000000000004B100                 MOV             X3, SP
.text:000000000004B104                 MOV             X0, X20
.text:000000000004B108                 MOV             W2, #4
.text:000000000004B10C                 BLR             X8
.text:000000000004B110                 CBNZ            X0, loc_4B06C
.text:000000000004B114                 LDR             X0, [SP,#0x30+var_30]
.text:000000000004B118                 CBZ             X0, loc_4B06C
.text:000000000004B11C                 MOV             X1, X19
.text:000000000004B120                 BL              .VMSetTranposition
.text:000000000004B124                 MOV             X0, XZR
.text:000000000004B128                 B               loc_4B070
.text:000000000004B12C ; ---------------------------------------------------------------------------
.text:000000000004B12C loc_4B12C                               ; CODE XREF: EAS_SetTransposition+3C↑j
.text:000000000004B12C                 BL              .__stack_chk_fail
.text:000000000004B12C ; } // starts at 4B040
.text:000000000004B12C ; End of function EAS_SetTransposition
.text:000000000004B130 ; =============== S U B R O U T I N E =======================================
.text:000000000004B130 ; Attributes: bp-based frame
.text:000000000004B130                 EXPORT EAS_ParseMetaData
.text:000000000004B130 EAS_ParseMetaData                       ; DATA XREF: LOAD:00000000000013B0↑o
.text:000000000004B130 var_48          = -0x48
.text:000000000004B130 var_40          = -0x40
.text:000000000004B130 var_38          = -0x38
.text:000000000004B130 var_30          = -0x30
.text:000000000004B130 var_20          = -0x20
.text:000000000004B130 var_10          = -0x10
.text:000000000004B130 var_s0          =  0
.text:000000000004B130 ; __unwind {
.text:000000000004B130                 SUB             SP, SP, #0x60
.text:000000000004B134                 STR             X23, [SP,#0x50+var_30]
.text:000000000004B138                 STP             X22, X21, [SP,#0x50+var_20]
.text:000000000004B13C                 STP             X20, X19, [SP,#0x50+var_10]
.text:000000000004B140                 STP             X29, X30, [SP,#0x50+var_s0]
.text:000000000004B144                 ADD             X29, SP, #0x50
.text:000000000004B148                 MRS             X22, #3, c13, c0, #2
.text:000000000004B14C                 LDR             X8, [X22,#0x28]
.text:000000000004B150                 STR             X8, [SP,#0x50+var_38]
.text:000000000004B154                 LDR             X23, [X1]
.text:000000000004B158                 CBZ             X23, loc_4B190
.text:000000000004B15C                 MOV             X21, X1
.text:000000000004B160                 LDR             X8, [X23,#0x20]
.text:000000000004B164                 LDR             X1, [X1,#0x20]
.text:000000000004B168                 MOV             X19, X2
.text:000000000004B16C                 ADD             X2, SP, #0x50+var_48
.text:000000000004B170                 MOV             X20, X0
.text:000000000004B174                 BLR             X8
.text:000000000004B178                 CBNZ            X0, loc_4B194
.text:000000000004B17C                 LDR             X8, [SP,#0x50+var_48]
.text:000000000004B180                 CMP             X8, #5
.text:000000000004B184                 B.LE            loc_4B1BC
.text:000000000004B188                 MOV             X0, #0xFFFFFFFFFFFFFFE1
.text:000000000004B18C                 B               loc_4B194
.text:000000000004B190 ; ---------------------------------------------------------------------------
.text:000000000004B190 loc_4B190                               ; CODE XREF: EAS_ParseMetaData+28↑j
.text:000000000004B190                 MOV             X0, #0xFFFFFFFFFFFFFFE3
.text:000000000004B194 loc_4B194                               ; CODE XREF: EAS_ParseMetaData+48↑j
.text:000000000004B194                                         ; EAS_ParseMetaData+5C↑j ...
.text:000000000004B194                 LDR             X8, [X22,#0x28]
.text:000000000004B198                 LDR             X9, [SP,#0x50+var_38]
.text:000000000004B19C                 CMP             X8, X9
.text:000000000004B1A0                 B.NE            loc_4B264
.text:000000000004B1A4                 LDP             X29, X30, [SP,#0x50+var_s0]
.text:000000000004B1A8                 LDP             X20, X19, [SP,#0x50+var_10]
.text:000000000004B1AC                 LDP             X22, X21, [SP,#0x50+var_20]
.text:000000000004B1B0                 LDR             X23, [SP,#0x50+var_30]
.text:000000000004B1B4                 ADD             SP, SP, #0x60 ; '`'
.text:000000000004B1B8                 RET
.text:000000000004B1BC ; ---------------------------------------------------------------------------
.text:000000000004B1BC loc_4B1BC                               ; CODE XREF: EAS_ParseMetaData+54↑j
.text:000000000004B1BC                 LDR             X8, [X23,#0x60]
.text:000000000004B1C0                 CBZ             X8, loc_4B1D8
.text:000000000004B1C4                 LDR             X1, [X21,#0x20]
.text:000000000004B1C8                 MOV             X0, X20
.text:000000000004B1CC                 MOV             X2, X19
.text:000000000004B1D0                 BLR             X8
.text:000000000004B1D4                 B               loc_4B194
.text:000000000004B1D8 ; ---------------------------------------------------------------------------
.text:000000000004B1D8 loc_4B1D8                               ; CODE XREF: EAS_ParseMetaData+90↑j
.text:000000000004B1D8                 LDR             X8, [X23,#0x30]
.text:000000000004B1DC                 MOV             X0, X20
.text:000000000004B1E0                 LDR             X1, [X21,#0x20]
.text:000000000004B1E4                 BLR             X8
.text:000000000004B1E8                 CBNZ            X0, loc_4B194
.text:000000000004B1EC                 STR             XZR, [X21,#8]
.text:000000000004B1F0                 LDR             X0, [X20,#0x170]
.text:000000000004B1F4                 BL              .VMInitWorkload
.text:000000000004B1F8                 MOV             X0, X20
.text:000000000004B1FC                 MOV             X1, X21
.text:000000000004B200                 MOV             W2, #0x7FFFFFFF
.text:000000000004B204                 MOV             W3, #3
.text:000000000004B208                 BL              sub_4AD78
.text:000000000004B20C                 CBNZ            X0, loc_4B194
.text:000000000004B210                 LDR             X8, [X21]
.text:000000000004B214                 ADD             X2, SP, #0x50+var_40
.text:000000000004B218                 LDR             X1, [X21,#0x20]
.text:000000000004B21C                 MOV             X0, X20
.text:000000000004B220                 LDR             X8, [X8,#0x20]
.text:000000000004B224                 BLR             X8
.text:000000000004B228                 MOV             X8, X0
.text:000000000004B22C                 MOV             X0, #0xFFFFFFFFFFFFFFE1
.text:000000000004B230                 CBNZ            X8, loc_4B194
.text:000000000004B234                 LDR             X8, [SP,#0x50+var_40]
.text:000000000004B238                 CMP             X8, #5
.text:000000000004B23C                 B.GT            loc_4B194
.text:000000000004B240                 LDR             X8, [X21,#8]
.text:000000000004B244                 MOV             X0, X20
.text:000000000004B248                 LSR             X8, X8, #8
.text:000000000004B24C                 STR             X8, [X19]
.text:000000000004B250                 STR             XZR, [X21,#8]
.text:000000000004B254                 LDR             X8, [X23,#0x30]
.text:000000000004B258                 LDR             X1, [X21,#0x20]
.text:000000000004B25C                 BLR             X8
.text:000000000004B260                 B               loc_4B194
.text:000000000004B264 ; ---------------------------------------------------------------------------
.text:000000000004B264 loc_4B264                               ; CODE XREF: EAS_ParseMetaData+70↑j
.text:000000000004B264                 BL              .__stack_chk_fail
.text:000000000004B264 ; } // starts at 4B130
.text:000000000004B264 ; End of function EAS_ParseMetaData
.text:000000000004B268 ; =============== S U B R O U T I N E =======================================
.text:000000000004B268 ; Attributes: bp-based frame
.text:000000000004B268                 EXPORT EAS_GetLocation
.text:000000000004B268 EAS_GetLocation                         ; CODE XREF: .EAS_GetLocation+C↓j
.text:000000000004B268                                         ; DATA XREF: LOAD:0000000000001248↑o ...
.text:000000000004B268 var_30          = -0x30
.text:000000000004B268 var_28          = -0x28
.text:000000000004B268 var_20          = -0x20
.text:000000000004B268 var_10          = -0x10
.text:000000000004B268 var_s0          =  0
.text:000000000004B268 ; __unwind {
.text:000000000004B268                 SUB             SP, SP, #0x40
.text:000000000004B26C                 STR             X21, [SP,#0x30+var_20]
.text:000000000004B270                 STP             X20, X19, [SP,#0x30+var_10]
.text:000000000004B274                 STP             X29, X30, [SP,#0x30+var_s0]
.text:000000000004B278                 ADD             X29, SP, #0x30
.text:000000000004B27C                 MRS             X21, #3, c13, c0, #2
.text:000000000004B280                 MOV             X20, X1
.text:000000000004B284                 LDR             X8, [X21,#0x28]
.text:000000000004B288                 MOV             X19, X2
.text:000000000004B28C                 MOV             X2, SP
.text:000000000004B290                 STR             X8, [SP,#0x30+var_28]
.text:000000000004B294                 LDR             X8, [X1]
.text:000000000004B298                 LDR             X1, [X1,#0x20]
.text:000000000004B29C                 LDR             X8, [X8,#0x20]
.text:000000000004B2A0                 BLR             X8
.text:000000000004B2A4                 LDR             X8, [SP,#0x30+var_30]
.text:000000000004B2A8                 CMP             X0, #0
.text:000000000004B2AC                 CCMP            X8, #5, #0, EQ
.text:000000000004B2B0                 B.LE            loc_4B2BC
.text:000000000004B2B4                 MOV             X0, #0xFFFFFFFFFFFFFFE1
.text:000000000004B2B8                 B               loc_4B2CC
.text:000000000004B2BC ; ---------------------------------------------------------------------------
.text:000000000004B2BC loc_4B2BC                               ; CODE XREF: EAS_GetLocation+48↑j
.text:000000000004B2BC                 LDR             X8, [X20,#8]
.text:000000000004B2C0                 MOV             X0, XZR
.text:000000000004B2C4                 LSR             X8, X8, #8
.text:000000000004B2C8                 STR             X8, [X19]
.text:000000000004B2CC loc_4B2CC                               ; CODE XREF: EAS_GetLocation+50↑j
.text:000000000004B2CC                 LDR             X8, [X21,#0x28]
.text:000000000004B2D0                 LDR             X9, [SP,#0x30+var_28]
.text:000000000004B2D4                 CMP             X8, X9
.text:000000000004B2D8                 B.NE            loc_4B2F0
.text:000000000004B2DC                 LDP             X29, X30, [SP,#0x30+var_s0]
.text:000000000004B2E0                 LDP             X20, X19, [SP,#0x30+var_10]
.text:000000000004B2E4                 LDR             X21, [SP,#0x30+var_20]
.text:000000000004B2E8                 ADD             SP, SP, #0x40 ; '@'
.text:000000000004B2EC                 RET
.text:000000000004B2F0 ; ---------------------------------------------------------------------------
.text:000000000004B2F0 loc_4B2F0                               ; CODE XREF: EAS_GetLocation+70↑j
.text:000000000004B2F0                 BL              .__stack_chk_fail
.text:000000000004B2F0 ; } // starts at 4B268
.text:000000000004B2F0 ; End of function EAS_GetLocation
.text:000000000004B2F0 ; ---------------------------------------------------------------------------
.text:000000000004B2F4                 ALIGN 8
.text:000000000004B2F8 ; =============== S U B R O U T I N E =======================================
.text:000000000004B2F8 ; Attributes: bp-based frame
.text:000000000004B2F8                 EXPORT EAS_RegisterMetaDataCallback
.text:000000000004B2F8 EAS_RegisterMetaDataCallback            ; DATA XREF: LOAD:0000000000000D50↑o
.text:000000000004B2F8 var_68          = -0x68
.text:000000000004B2F8 var_58          = -0x58
.text:000000000004B2F8 var_48          = -0x48
.text:000000000004B2F8 var_40          = -0x40
.text:000000000004B2F8 var_30          = -0x30
.text:000000000004B2F8 var_20          = -0x20
.text:000000000004B2F8 var_10          = -0x10
.text:000000000004B2F8 var_s0          =  0
.text:000000000004B2F8 ; __unwind {
.text:000000000004B2F8                 SUB             SP, SP, #0x80
.text:000000000004B2FC                 STR             X25, [SP,#0x70+var_40]
.text:000000000004B300                 STP             X24, X23, [SP,#0x70+var_30]
.text:000000000004B304                 STP             X22, X21, [SP,#0x70+var_20]
.text:000000000004B308                 STP             X20, X19, [SP,#0x70+var_10]
.text:000000000004B30C                 STP             X29, X30, [SP,#0x70+var_s0]
.text:000000000004B310                 ADD             X29, SP, #0x70
.text:000000000004B314                 MRS             X25, #3, c13, c0, #2
.text:000000000004B318                 MOV             X21, X1
.text:000000000004B31C                 LDR             X8, [X25,#0x28]
.text:000000000004B320                 MOV             X24, X2
.text:000000000004B324                 ADD             X2, SP, #0x70+var_68
.text:000000000004B328                 MOV             X20, X5
.text:000000000004B32C                 MOV             X22, X4
.text:000000000004B330                 STR             X8, [SP,#0x70+var_48]
.text:000000000004B334                 MOV             X23, X3
.text:000000000004B338                 LDR             X8, [X1]
.text:000000000004B33C                 MOV             X19, X0
.text:000000000004B340                 LDR             X1, [X1,#0x20]
.text:000000000004B344                 LDR             X8, [X8,#0x20]
.text:000000000004B348                 BLR             X8
.text:000000000004B34C                 LDR             X8, [SP,#0x70+var_68]
.text:000000000004B350                 CMP             X0, #0
.text:000000000004B354                 CCMP            X8, #5, #0, EQ
.text:000000000004B358                 B.LE            loc_4B364
.text:000000000004B35C                 MOV             X0, #0xFFFFFFFFFFFFFFE1
.text:000000000004B360                 B               loc_4B394
.text:000000000004B364 ; ---------------------------------------------------------------------------
.text:000000000004B364 loc_4B364                               ; CODE XREF: EAS_RegisterMetaDataCallback+60↑j
.text:000000000004B364                 LDR             X8, [X21]
.text:000000000004B368                 LDR             X8, [X8,#0x50]
.text:000000000004B36C                 STP             X24, X23, [SP,#0x70+var_68]
.text:000000000004B370                 STP             X20, X22, [SP,#0x70+var_58]
.text:000000000004B374                 CBZ             X8, loc_4B390
.text:000000000004B378                 LDR             X1, [X21,#0x20]
.text:000000000004B37C                 MOV             W2, #5
.text:000000000004B380                 ADD             X3, SP, #0x70+var_68
.text:000000000004B384                 MOV             X0, X19
.text:000000000004B388                 BLR             X8
.text:000000000004B38C                 B               loc_4B394
.text:000000000004B390 ; ---------------------------------------------------------------------------
.text:000000000004B390 loc_4B390                               ; CODE XREF: EAS_RegisterMetaDataCallback+7C↑j
.text:000000000004B390                 MOV             X0, #0xFFFFFFFFFFFFFFE3
.text:000000000004B394 loc_4B394                               ; CODE XREF: EAS_RegisterMetaDataCallback+68↑j
.text:000000000004B394                                         ; EAS_RegisterMetaDataCallback+94↑j
.text:000000000004B394                 LDR             X8, [X25,#0x28]
.text:000000000004B398                 LDR             X9, [SP,#0x70+var_48]
.text:000000000004B39C                 CMP             X8, X9
.text:000000000004B3A0                 B.NE            loc_4B3C0
.text:000000000004B3A4                 LDP             X29, X30, [SP,#0x70+var_s0]
.text:000000000004B3A8                 LDP             X20, X19, [SP,#0x70+var_10]
.text:000000000004B3AC                 LDP             X22, X21, [SP,#0x70+var_20]
.text:000000000004B3B0                 LDP             X24, X23, [SP,#0x70+var_30]
.text:000000000004B3B4                 LDR             X25, [SP,#0x70+var_40]
.text:000000000004B3B8                 ADD             SP, SP, #0x80
.text:000000000004B3BC                 RET
.text:000000000004B3C0 ; ---------------------------------------------------------------------------
.text:000000000004B3C0 loc_4B3C0                               ; CODE XREF: EAS_RegisterMetaDataCallback+A8↑j
.text:000000000004B3C0                 BL              .__stack_chk_fail
.text:000000000004B3C0 ; } // starts at 4B2F8
.text:000000000004B3C0 ; End of function EAS_RegisterMetaDataCallback
.text:000000000004B3C0 ; ---------------------------------------------------------------------------
.text:000000000004B3C4                 ALIGN 8
.text:000000000004B3C8 ; =============== S U B R O U T I N E =======================================
.text:000000000004B3C8 ; Attributes: bp-based frame
.text:000000000004B3C8                 EXPORT EAS_GetNoteCount
.text:000000000004B3C8 EAS_GetNoteCount                        ; DATA XREF: LOAD:00000000000006D8↑o
.text:000000000004B3C8 var_30          = -0x30
.text:000000000004B3C8 var_28          = -0x28
.text:000000000004B3C8 var_20          = -0x20
.text:000000000004B3C8 var_10          = -0x10
.text:000000000004B3C8 var_s0          =  0
.text:000000000004B3C8 ; __unwind {
.text:000000000004B3C8                 SUB             SP, SP, #0x40
.text:000000000004B3CC                 STP             X22, X21, [SP,#0x30+var_20]
.text:000000000004B3D0                 STP             X20, X19, [SP,#0x30+var_10]
.text:000000000004B3D4                 STP             X29, X30, [SP,#0x30+var_s0]
.text:000000000004B3D8                 ADD             X29, SP, #0x30
.text:000000000004B3DC                 MRS             X22, #3, c13, c0, #2
.text:000000000004B3E0                 MOV             X21, X1
.text:000000000004B3E4                 LDR             X8, [X22,#0x28]
.text:000000000004B3E8                 MOV             X19, X2
.text:000000000004B3EC                 MOV             X2, SP
.text:000000000004B3F0                 MOV             X20, X0
.text:000000000004B3F4                 STR             X8, [SP,#0x30+var_28]
.text:000000000004B3F8                 LDR             X8, [X1]
.text:000000000004B3FC                 LDR             X1, [X1,#0x20]
.text:000000000004B400                 LDR             X8, [X8,#0x20]
.text:000000000004B404                 BLR             X8
.text:000000000004B408                 LDR             X8, [SP,#0x30+var_30]
.text:000000000004B40C                 CMP             X0, #0
.text:000000000004B410                 CCMP            X8, #5, #0, EQ
.text:000000000004B414                 B.LE            loc_4B420
.text:000000000004B418                 MOV             X0, #0xFFFFFFFFFFFFFFE1
.text:000000000004B41C                 B               loc_4B46C
.text:000000000004B420 ; ---------------------------------------------------------------------------
.text:000000000004B420 loc_4B420                               ; CODE XREF: EAS_GetNoteCount+4C↑j
.text:000000000004B420                 LDR             X8, [X21]
.text:000000000004B424                 LDR             X8, [X8,#0x58]
.text:000000000004B428                 CBZ             X8, loc_4B468
.text:000000000004B42C                 LDR             X1, [X21,#0x20]
.text:000000000004B430                 MOV             X0, X20
.text:000000000004B434                 MOV             W2, #0x10
.text:000000000004B438                 MOV             X3, X19
.text:000000000004B43C                 BLR             X8
.text:000000000004B440                 CBZ             X0, loc_4B46C
.text:000000000004B444                 LDR             X8, [X21]
.text:000000000004B448                 LDR             X8, [X8,#0x58]
.text:000000000004B44C                 CBZ             X8, loc_4B468
.text:000000000004B450                 LDR             X1, [X21,#0x20]
.text:000000000004B454                 MOV             X3, SP
.text:000000000004B458                 MOV             X0, X20
.text:000000000004B45C                 MOV             W2, #4
.text:000000000004B460                 BLR             X8
.text:000000000004B464                 CBZ             X0, loc_4B490
.text:000000000004B468 loc_4B468                               ; CODE XREF: EAS_GetNoteCount+60↑j
.text:000000000004B468                                         ; EAS_GetNoteCount+84↑j ...
.text:000000000004B468                 MOV             X0, #0xFFFFFFFFFFFFFFE4
.text:000000000004B46C loc_4B46C                               ; CODE XREF: EAS_GetNoteCount+54↑j
.text:000000000004B46C                                         ; EAS_GetNoteCount+78↑j ...
.text:000000000004B46C                 LDR             X8, [X22,#0x28]
.text:000000000004B470                 LDR             X9, [SP,#0x30+var_28]
.text:000000000004B474                 CMP             X8, X9
.text:000000000004B478                 B.NE            loc_4B4AC
.text:000000000004B47C                 LDP             X29, X30, [SP,#0x30+var_s0]
.text:000000000004B480                 LDP             X20, X19, [SP,#0x30+var_10]
.text:000000000004B484                 LDP             X22, X21, [SP,#0x30+var_20]
.text:000000000004B488                 ADD             SP, SP, #0x40 ; '@'
.text:000000000004B48C                 RET
.text:000000000004B490 ; ---------------------------------------------------------------------------
.text:000000000004B490 loc_4B490                               ; CODE XREF: EAS_GetNoteCount+9C↑j
.text:000000000004B490                 LDR             X0, [SP,#0x30+var_30]
.text:000000000004B494                 CBZ             X0, loc_4B468
.text:000000000004B498                 BL              .VMGetNoteCount
.text:000000000004B49C                 MOV             X8, X0
.text:000000000004B4A0                 MOV             X0, XZR
.text:000000000004B4A4                 STR             X8, [X19]
.text:000000000004B4A8                 B               loc_4B46C
.text:000000000004B4AC ; ---------------------------------------------------------------------------
.text:000000000004B4AC loc_4B4AC                               ; CODE XREF: EAS_GetNoteCount+B0↑j
.text:000000000004B4AC                 BL              .__stack_chk_fail
.text:000000000004B4AC ; } // starts at 4B3C8
.text:000000000004B4AC ; End of function EAS_GetNoteCount
.text:000000000004B4B0 ; =============== S U B R O U T I N E =======================================
.text:000000000004B4B0 ; Attributes: bp-based frame
.text:000000000004B4B0                 EXPORT EAS_CloseFile
.text:000000000004B4B0 EAS_CloseFile                           ; CODE XREF: .EAS_CloseFile+C↓j
.text:000000000004B4B0                                         ; DATA XREF: LOAD:0000000000001CC8↑o ...
.text:000000000004B4B0 var_10          = -0x10
.text:000000000004B4B0 var_s0          =  0
.text:000000000004B4B0 ; __unwind {
.text:000000000004B4B0                 LDR             X8, [X1]
.text:000000000004B4B4                 CBZ             X8, loc_4B4E8
.text:000000000004B4B8                 STR             X19, [SP,#-0x10+var_10]!
.text:000000000004B4BC                 STP             X29, X30, [SP,#0x10+var_s0]
.text:000000000004B4C0                 ADD             X29, SP, #0x10
.text:000000000004B4C4                 MOV             X19, X1
.text:000000000004B4C8                 LDR             X8, [X8,#0x28]
.text:000000000004B4CC                 LDR             X1, [X1,#0x20]
.text:000000000004B4D0                 BLR             X8
.text:000000000004B4D4                 STR             XZR, [X19,#0x20]
.text:000000000004B4D8                 STR             XZR, [X19]
.text:000000000004B4DC                 LDP             X29, X30, [SP,#0x10+var_s0]
.text:000000000004B4E0                 LDR             X19, [SP+0x10+var_10],#0x20
.text:000000000004B4E4                 RET
.text:000000000004B4E8 ; ---------------------------------------------------------------------------
.text:000000000004B4E8 loc_4B4E8                               ; CODE XREF: EAS_CloseFile+4↑j
.text:000000000004B4E8                 MOV             X0, #0xFFFFFFFFFFFFFFE3
.text:000000000004B4EC                 RET
.text:000000000004B4EC ; } // starts at 4B4B0
.text:000000000004B4EC ; End of function EAS_CloseFile
.text:000000000004B4F0 ; =============== S U B R O U T I N E =======================================
.text:000000000004B4F0 ; Attributes: bp-based frame
.text:000000000004B4F0                 EXPORT EAS_OpenMIDIStream
.text:000000000004B4F0 EAS_OpenMIDIStream                      ; DATA XREF: LOAD:0000000000000F30↑o
.text:000000000004B4F0 var_50          = -0x50
.text:000000000004B4F0 var_48          = -0x48
.text:000000000004B4F0 var_40          = -0x40
.text:000000000004B4F0 var_30          = -0x30
.text:000000000004B4F0 var_20          = -0x20
.text:000000000004B4F0 var_10          = -0x10
.text:000000000004B4F0 var_s0          =  0
.text:000000000004B4F0 ; __unwind {
.text:000000000004B4F0                 SUB             SP, SP, #0x60
.text:000000000004B4F4                 STR             X25, [SP,#0x50+var_40]
.text:000000000004B4F8                 STP             X24, X23, [SP,#0x50+var_30]
.text:000000000004B4FC                 STP             X22, X21, [SP,#0x50+var_20]
.text:000000000004B500                 STP             X20, X19, [SP,#0x50+var_10]
.text:000000000004B504                 STP             X29, X30, [SP,#0x50+var_s0]
.text:000000000004B508                 ADD             X29, SP, #0x50
.text:000000000004B50C                 MRS             X23, #3, c13, c0, #2
.text:000000000004B510                 MOV             X20, X1
.text:000000000004B514                 LDR             X8, [X23,#0x28]
.text:000000000004B518                 MOV             X19, X0
.text:000000000004B51C                 MOV             X21, X2
.text:000000000004B520                 STR             X8, [SP,#0x50+var_48]
.text:000000000004B524                 STR             XZR, [X1]
.text:000000000004B528                 LDRB            W9, [X0,#0x18B]
.text:000000000004B52C                 LDR             X8, [X0,#0xC8]
.text:000000000004B530                 CBZ             W9, loc_4B540
.text:000000000004B534                 CBZ             X8, loc_4B564
.text:000000000004B538 loc_4B538                               ; CODE XREF: EAS_OpenMIDIStream+68↓j
.text:000000000004B538                 MOV             X21, #0xFFFFFFFFFFFFFFE5
.text:000000000004B53C                 B               loc_4B67C
.text:000000000004B540 ; ---------------------------------------------------------------------------
.text:000000000004B540 loc_4B540                               ; CODE XREF: EAS_OpenMIDIStream+40↑j
.text:000000000004B540                 CBZ             X8, loc_4B580
.text:000000000004B544                 LDR             X8, [X19,#0xF8]
.text:000000000004B548                 CBZ             X8, loc_4B588
.text:000000000004B54C                 LDR             X8, [X19,#0x128]
.text:000000000004B550                 CBZ             X8, loc_4B590
.text:000000000004B554                 LDR             X8, [X19,#0x158]
.text:000000000004B558                 CBNZ            X8, loc_4B538
.text:000000000004B55C                 MOV             W24, #3
.text:000000000004B560                 B               loc_4B594
.text:000000000004B564 ; ---------------------------------------------------------------------------
.text:000000000004B564 loc_4B564                               ; CODE XREF: EAS_OpenMIDIStream+44↑j
.text:000000000004B564                 MOV             W0, #9
.text:000000000004B568                 BL              .EAS_CMEnumData
.text:000000000004B56C                 MOV             X22, X0
.text:000000000004B570                 MOV             X24, XZR
.text:000000000004B574                 CBNZ            X22, loc_4B5A8
.text:000000000004B578 loc_4B578                               ; CODE XREF: EAS_OpenMIDIStream+B4↓j
.text:000000000004B578                 MOV             X21, #0xFFFFFFFFFFFFFFFD
.text:000000000004B57C                 B               loc_4B67C
.text:000000000004B580 ; ---------------------------------------------------------------------------
.text:000000000004B580 loc_4B580                               ; CODE XREF: EAS_OpenMIDIStream:loc_4B540↑j
.text:000000000004B580                 MOV             X24, XZR
.text:000000000004B584                 B               loc_4B594
.text:000000000004B588 ; ---------------------------------------------------------------------------
.text:000000000004B588 loc_4B588                               ; CODE XREF: EAS_OpenMIDIStream+58↑j
.text:000000000004B588                 MOV             W24, #1
.text:000000000004B58C                 B               loc_4B594
.text:000000000004B590 ; ---------------------------------------------------------------------------
.text:000000000004B590 loc_4B590                               ; CODE XREF: EAS_OpenMIDIStream+60↑j
.text:000000000004B590                 MOV             W24, #2
.text:000000000004B594 loc_4B594                               ; CODE XREF: EAS_OpenMIDIStream+70↑j
.text:000000000004B594                                         ; EAS_OpenMIDIStream+94↑j ...
.text:000000000004B594                 LDR             X0, [X19]
.text:000000000004B598                 MOV             W1, #0x18
.text:000000000004B59C                 BL              .EAS_HWMalloc
.text:000000000004B5A0                 MOV             X22, X0
.text:000000000004B5A4                 CBZ             X22, loc_4B578
.text:000000000004B5A8 loc_4B5A8                               ; CODE XREF: EAS_OpenMIDIStream+84↑j
.text:000000000004B5A8                 MOV             X0, X22
.text:000000000004B5AC                 MOV             W1, WZR
.text:000000000004B5B0                 MOV             W2, #0x18
.text:000000000004B5B4                 BL              .EAS_HWMemSet
.text:000000000004B5B8                 MOV             W8, #0x30 ; '0'
.text:000000000004B5BC                 MADD            X25, X24, X8, X19
.text:000000000004B5C0                 ADRP            X8, #xmmword_4870@PAGE
.text:000000000004B5C4                 LDR             Q0, [X8,#xmmword_4870@PAGEOFF]
.text:000000000004B5C8                 MOV             W8, #0x64 ; 'd'
.text:000000000004B5CC                 STR             XZR, [X25,#0xA8]!
.text:000000000004B5D0                 MOV             X24, X25
.text:000000000004B5D4                 STR             X22, [X24,#0x20]!
.text:000000000004B5D8                 STUR            Q0, [X25,#8]
.text:000000000004B5DC                 STR             XZR, [X25,#0x18]
.text:000000000004B5E0                 STRH            W8, [X25,#0x28]
.text:000000000004B5E4                 CBZ             X21, loc_4B614
.text:000000000004B5E8                 LDR             X8, [X21]
.text:000000000004B5EC                 LDR             X8, [X8,#0x58]
.text:000000000004B5F0                 CBZ             X8, loc_4B638
.text:000000000004B5F4                 LDR             X1, [X21,#0x20]
.text:000000000004B5F8                 MOV             X3, SP
.text:000000000004B5FC                 MOV             X0, X19
.text:000000000004B600                 MOV             W2, #4
.text:000000000004B604                 BLR             X8
.text:000000000004B608                 LDR             X8, [SP,#0x50+var_50]
.text:000000000004B60C                 MOV             X21, X0
.text:000000000004B610                 B               loc_4B63C
.text:000000000004B614 ; ---------------------------------------------------------------------------
.text:000000000004B614 loc_4B614                               ; CODE XREF: EAS_OpenMIDIStream+F4↑j
.text:000000000004B614                 MOV             X0, X19
.text:000000000004B618                 MOV             X1, X22
.text:000000000004B61C                 BL              .VMInitMIDI
.text:000000000004B620                 MOV             X21, X0
.text:000000000004B624                 CBNZ            X21, loc_4B64C
.text:000000000004B628 loc_4B628                               ; CODE XREF: EAS_OpenMIDIStream+158↓j
.text:000000000004B628                 ADD             X0, X22, #8
.text:000000000004B62C                 BL              .EAS_InitMIDIStream
.text:000000000004B630                 STR             X25, [X20]
.text:000000000004B634                 B               loc_4B67C
.text:000000000004B638 ; ---------------------------------------------------------------------------
.text:000000000004B638 loc_4B638                               ; CODE XREF: EAS_OpenMIDIStream+100↑j
.text:000000000004B638                 MOV             X21, #0xFFFFFFFFFFFFFFE3
.text:000000000004B63C loc_4B63C                               ; CODE XREF: EAS_OpenMIDIStream+120↑j
.text:000000000004B63C                 MOV             X0, X8
.text:000000000004B640                 STR             X8, [X22]
.text:000000000004B644                 BL              .VMIncRefCount
.text:000000000004B648                 CBZ             X21, loc_4B628
.text:000000000004B64C loc_4B64C                               ; CODE XREF: EAS_OpenMIDIStream+134↑j
.text:000000000004B64C                 LDR             X20, [X24]
.text:000000000004B650                 LDR             X1, [X20]
.text:000000000004B654                 CBZ             X1, loc_4B664
.text:000000000004B658                 MOV             X0, X19
.text:000000000004B65C                 BL              .VMMIDIShutdown
.text:000000000004B660                 STR             XZR, [X20]
.text:000000000004B664 loc_4B664                               ; CODE XREF: EAS_OpenMIDIStream+164↑j
.text:000000000004B664                 LDRB            W8, [X19,#0x18B]
.text:000000000004B668                 CBNZ            W8, loc_4B678
.text:000000000004B66C                 LDR             X0, [X19]
.text:000000000004B670                 MOV             X1, X20
.text:000000000004B674                 BL              .EAS_HWFree
.text:000000000004B678 loc_4B678                               ; CODE XREF: EAS_OpenMIDIStream+178↑j
.text:000000000004B678                 STR             XZR, [X24]
.text:000000000004B67C loc_4B67C                               ; CODE XREF: EAS_OpenMIDIStream+4C↑j
.text:000000000004B67C                                         ; EAS_OpenMIDIStream+8C↑j ...
.text:000000000004B67C                 LDR             X8, [X23,#0x28]
.text:000000000004B680                 LDR             X9, [SP,#0x50+var_48]
.text:000000000004B684                 CMP             X8, X9
.text:000000000004B688                 B.NE            loc_4B6AC
.text:000000000004B68C                 MOV             X0, X21
.text:000000000004B690                 LDR             X25, [SP,#0x50+var_40]
.text:000000000004B694                 LDP             X29, X30, [SP,#0x50+var_s0]
.text:000000000004B698                 LDP             X20, X19, [SP,#0x50+var_10]
.text:000000000004B69C                 LDP             X22, X21, [SP,#0x50+var_20]
.text:000000000004B6A0                 LDP             X24, X23, [SP,#0x50+var_30]
.text:000000000004B6A4                 ADD             SP, SP, #0x60 ; '`'
.text:000000000004B6A8                 RET
.text:000000000004B6AC ; ---------------------------------------------------------------------------
.text:000000000004B6AC loc_4B6AC                               ; CODE XREF: EAS_OpenMIDIStream+198↑j
.text:000000000004B6AC                 BL              .__stack_chk_fail
.text:000000000004B6AC ; } // starts at 4B4F0
.text:000000000004B6AC ; End of function EAS_OpenMIDIStream
.text:000000000004B6B0 ; =============== S U B R O U T I N E =======================================
.text:000000000004B6B0 ; Attributes: bp-based frame
.text:000000000004B6B0                 EXPORT EAS_CloseMIDIStream
.text:000000000004B6B0 EAS_CloseMIDIStream                     ; DATA XREF: LOAD:0000000000001A28↑o
.text:000000000004B6B0 var_20          = -0x20
.text:000000000004B6B0 var_10          = -0x10
.text:000000000004B6B0 var_s0          =  0
.text:000000000004B6B0 ; __unwind {
.text:000000000004B6B0                 STR             X21, [SP,#-0x10+var_20]!
.text:000000000004B6B4                 STP             X20, X19, [SP,#0x20+var_10]
.text:000000000004B6B8                 STP             X29, X30, [SP,#0x20+var_s0]
.text:000000000004B6BC                 ADD             X29, SP, #0x20
.text:000000000004B6C0                 LDR             X20, [X1,#0x20]
.text:000000000004B6C4                 MOV             X19, X1
.text:000000000004B6C8                 MOV             X21, X0
.text:000000000004B6CC                 LDR             X1, [X20]
.text:000000000004B6D0                 CBZ             X1, loc_4B6E0
.text:000000000004B6D4                 MOV             X0, X21
.text:000000000004B6D8                 BL              .VMMIDIShutdown
.text:000000000004B6DC                 STR             XZR, [X20]
.text:000000000004B6E0 loc_4B6E0                               ; CODE XREF: EAS_CloseMIDIStream+20↑j
.text:000000000004B6E0                 LDRB            W8, [X21,#0x18B]
.text:000000000004B6E4                 CBNZ            W8, loc_4B6F4
.text:000000000004B6E8                 LDR             X0, [X21]
.text:000000000004B6EC                 MOV             X1, X20
.text:000000000004B6F0                 BL              .EAS_HWFree
.text:000000000004B6F4 loc_4B6F4                               ; CODE XREF: EAS_CloseMIDIStream+34↑j
.text:000000000004B6F4                 STR             XZR, [X19,#0x20]
.text:000000000004B6F8                 MOV             X0, XZR
.text:000000000004B6FC                 LDP             X29, X30, [SP,#0x20+var_s0]
.text:000000000004B700                 LDP             X20, X19, [SP,#0x20+var_10]
.text:000000000004B704                 LDR             X21, [SP+0x20+var_20],#0x30
.text:000000000004B708                 RET
.text:000000000004B708 ; } // starts at 4B6B0
.text:000000000004B708 ; End of function EAS_CloseMIDIStream
.text:000000000004B708 ; ---------------------------------------------------------------------------
.text:000000000004B70C                 ALIGN 0x10
.text:000000000004B710 ; =============== S U B R O U T I N E =======================================
.text:000000000004B710 ; Attributes: bp-based frame
.text:000000000004B710                 EXPORT EAS_WriteMIDIStream
.text:000000000004B710 EAS_WriteMIDIStream                     ; DATA XREF: LOAD:00000000000015F0↑o
.text:000000000004B710 var_30          = -0x30
.text:000000000004B710 var_20          = -0x20
.text:000000000004B710 var_10          = -0x10
.text:000000000004B710 var_s0          =  0
.text:000000000004B710 ; __unwind {
.text:000000000004B710                 STR             X23, [SP,#-0x10+var_30]!
.text:000000000004B714                 STP             X22, X21, [SP,#0x30+var_20]
.text:000000000004B718                 STP             X20, X19, [SP,#0x30+var_10]
.text:000000000004B71C                 STP             X29, X30, [SP,#0x30+var_s0]
.text:000000000004B720                 ADD             X29, SP, #0x30
.text:000000000004B724                 CMP             X3, #1
.text:000000000004B728                 B.LT            loc_4B768
.text:000000000004B72C                 LDR             X23, [X1,#0x20]
.text:000000000004B730                 MOV             X19, X3
.text:000000000004B734                 MOV             X20, X2
.text:000000000004B738                 MOV             X21, X0
.text:000000000004B73C                 ADD             X22, X23, #8
.text:000000000004B740 loc_4B740                               ; CODE XREF: EAS_WriteMIDIStream+50↓j
.text:000000000004B740                 CBZ             X19, loc_4B770
.text:000000000004B744                 LDR             X1, [X23]
.text:000000000004B748                 MOV             X0, X21
.text:000000000004B74C                 LDRB            W3, [X20],#1
.text:000000000004B750                 MOV             X2, X22
.text:000000000004B754                 MOV             W4, WZR
.text:000000000004B758                 SUB             X19, X19, #1
.text:000000000004B75C                 BL              .EAS_ParseMIDIStream
.text:000000000004B760                 CBZ             X0, loc_4B740
.text:000000000004B764                 B               loc_4B774
.text:000000000004B768 ; ---------------------------------------------------------------------------
.text:000000000004B768 loc_4B768                               ; CODE XREF: EAS_WriteMIDIStream+18↑j
.text:000000000004B768                 MOV             X0, #0xFFFFFFFFFFFFFFF3
.text:000000000004B76C                 B               loc_4B774
.text:000000000004B770 ; ---------------------------------------------------------------------------
.text:000000000004B770 loc_4B770                               ; CODE XREF: EAS_WriteMIDIStream:loc_4B740↑j
.text:000000000004B770                 MOV             X0, XZR
.text:000000000004B774 loc_4B774                               ; CODE XREF: EAS_WriteMIDIStream+54↑j
.text:000000000004B774                                         ; EAS_WriteMIDIStream+5C↑j
.text:000000000004B774                 LDP             X29, X30, [SP,#0x30+var_s0]
.text:000000000004B778                 LDP             X20, X19, [SP,#0x30+var_10]
.text:000000000004B77C                 LDP             X22, X21, [SP,#0x30+var_20]
.text:000000000004B780                 LDR             X23, [SP+0x30+var_30],#0x40
.text:000000000004B784                 RET
.text:000000000004B784 ; } // starts at 4B710
.text:000000000004B784 ; End of function EAS_WriteMIDIStream
.text:000000000004B788 ; =============== S U B R O U T I N E =======================================
.text:000000000004B788 ; Attributes: bp-based frame
.text:000000000004B788                 EXPORT EAS_State
.text:000000000004B788 EAS_State                               ; CODE XREF: .EAS_State+C↓j
.text:000000000004B788                                         ; DATA XREF: LOAD:00000000000005D0↑o ...
.text:000000000004B788 var_10          = -0x10
.text:000000000004B788 var_s0          =  0
.text:000000000004B788 ; __unwind {
.text:000000000004B788                 STP             X20, X19, [SP,#-0x10+var_10]!
.text:000000000004B78C                 STP             X29, X30, [SP,#0x10+var_s0]
.text:000000000004B790                 ADD             X29, SP, #0x10
.text:000000000004B794                 LDR             X8, [X1]
.text:000000000004B798                 CBZ             X8, loc_4B804
.text:000000000004B79C                 MOV             X20, X1
.text:000000000004B7A0                 LDR             X8, [X8,#0x20]
.text:000000000004B7A4                 LDR             X1, [X1,#0x20]
.text:000000000004B7A8                 MOV             X19, X2
.text:000000000004B7AC                 BLR             X8
.text:000000000004B7B0                 CBNZ            X0, loc_4B818
.text:000000000004B7B4                 LDR             X9, [X20,#0x18]
.text:000000000004B7B8                 LDR             X8, [X19]
.text:000000000004B7BC                 CBZ             X9, loc_4B7C8
.text:000000000004B7C0                 CMP             X8, #4
.text:000000000004B7C4                 B.EQ            loc_4B80C
.text:000000000004B7C8 loc_4B7C8                               ; CODE XREF: EAS_State+34↑j
.text:000000000004B7C8                 CMP             X8, #5
.text:000000000004B7CC                 B.EQ            loc_4B7D8
.text:000000000004B7D0                 CMP             X8, #3
.text:000000000004B7D4                 B.NE            loc_4B7FC
.text:000000000004B7D8 loc_4B7D8                               ; CODE XREF: EAS_State+44↑j
.text:000000000004B7D8                 LDRB            W8, [X20,#0x29]
.text:000000000004B7DC                 TBZ             W8, #1, loc_4B7F4
.text:000000000004B7E0                 TST             W8, #4
.text:000000000004B7E4                 MOV             W8, #5
.text:000000000004B7E8                 MOV             W9, #3
.text:000000000004B7EC                 CSEL            X8, X9, X8, EQ
.text:000000000004B7F0                 STR             X8, [X19]
.text:000000000004B7F4 loc_4B7F4                               ; CODE XREF: EAS_State+54↑j
.text:000000000004B7F4                 LDRB            W8, [X20,#0x29]
.text:000000000004B7F8                 TBNZ            W8, #3, loc_4B80C
.text:000000000004B7FC loc_4B7FC                               ; CODE XREF: EAS_State+4C↑j
.text:000000000004B7FC                 MOV             X0, XZR
.text:000000000004B800                 B               loc_4B818
.text:000000000004B804 ; ---------------------------------------------------------------------------
.text:000000000004B804 loc_4B804                               ; CODE XREF: EAS_State+10↑j
.text:000000000004B804                 MOV             X0, #0xFFFFFFFFFFFFFFE3
.text:000000000004B808                 B               loc_4B818
.text:000000000004B80C ; ---------------------------------------------------------------------------
.text:000000000004B80C loc_4B80C                               ; CODE XREF: EAS_State+3C↑j
.text:000000000004B80C                                         ; EAS_State+70↑j
.text:000000000004B80C                 MOV             W8, #1
.text:000000000004B810                 MOV             X0, XZR
.text:000000000004B814                 STR             X8, [X19]
.text:000000000004B818 loc_4B818                               ; CODE XREF: EAS_State+28↑j
.text:000000000004B818                                         ; EAS_State+78↑j ...
.text:000000000004B818                 LDP             X29, X30, [SP,#0x10+var_s0]
.text:000000000004B81C                 LDP             X20, X19, [SP+0x10+var_10],#0x20
.text:000000000004B820                 RET
.text:000000000004B820 ; } // starts at 4B788
.text:000000000004B820 ; End of function EAS_State
.text:000000000004B820 ; ---------------------------------------------------------------------------
.text:000000000004B824                 ALIGN 8
.text:000000000004B828 ; =============== S U B R O U T I N E =======================================
.text:000000000004B828 ; Attributes: bp-based frame
.text:000000000004B828                 EXPORT EAS_SetPolyphony
.text:000000000004B828 EAS_SetPolyphony                        ; DATA XREF: LOAD:0000000000000750↑o
.text:000000000004B828 var_30          = -0x30
.text:000000000004B828 var_28          = -0x28
.text:000000000004B828 var_20          = -0x20
.text:000000000004B828 var_10          = -0x10
.text:000000000004B828 var_s0          =  0
.text:000000000004B828 ; __unwind {
.text:000000000004B828                 SUB             SP, SP, #0x40
.text:000000000004B82C                 STP             X22, X21, [SP,#0x30+var_20]
.text:000000000004B830                 STP             X20, X19, [SP,#0x30+var_10]
.text:000000000004B834                 STP             X29, X30, [SP,#0x30+var_s0]
.text:000000000004B838                 ADD             X29, SP, #0x30
.text:000000000004B83C                 MRS             X22, #3, c13, c0, #2
.text:000000000004B840                 MOV             X21, X1
.text:000000000004B844                 LDR             X8, [X22,#0x28]
.text:000000000004B848                 MOV             X19, X2
.text:000000000004B84C                 MOV             X2, SP
.text:000000000004B850                 MOV             X20, X0
.text:000000000004B854                 STR             X8, [SP,#0x30+var_28]
.text:000000000004B858                 LDR             X8, [X1]
.text:000000000004B85C                 LDR             X1, [X1,#0x20]
.text:000000000004B860                 LDR             X8, [X8,#0x20]
.text:000000000004B864                 BLR             X8
.text:000000000004B868                 LDR             X8, [SP,#0x30+var_30]
.text:000000000004B86C                 CMP             X0, #0
.text:000000000004B870                 CCMP            X8, #5, #0, EQ
.text:000000000004B874                 B.LE            loc_4B880
.text:000000000004B878                 MOV             X0, #0xFFFFFFFFFFFFFFE1
.text:000000000004B87C                 B               loc_4B8CC
.text:000000000004B880 ; ---------------------------------------------------------------------------
.text:000000000004B880 loc_4B880                               ; CODE XREF: EAS_SetPolyphony+4C↑j
.text:000000000004B880                 LDR             X9, [X21]
.text:000000000004B884                 LDR             X8, [X9,#0x50]
.text:000000000004B888                 CBZ             X8, loc_4B8A8
.text:000000000004B88C                 LDR             X1, [X21,#0x20]
.text:000000000004B890                 MOV             X0, X20
.text:000000000004B894                 MOV             W2, #8
.text:000000000004B898                 MOV             X3, X19
.text:000000000004B89C                 BLR             X8
.text:000000000004B8A0                 CBZ             X0, loc_4B8CC
.text:000000000004B8A4                 LDR             X9, [X21]
.text:000000000004B8A8 loc_4B8A8                               ; CODE XREF: EAS_SetPolyphony+60↑j
.text:000000000004B8A8                 LDR             X8, [X9,#0x58]
.text:000000000004B8AC                 CBZ             X8, loc_4B8C8
.text:000000000004B8B0                 LDR             X1, [X21,#0x20]
.text:000000000004B8B4                 MOV             X3, SP
.text:000000000004B8B8                 MOV             X0, X20
.text:000000000004B8BC                 MOV             W2, #4
.text:000000000004B8C0                 BLR             X8
.text:000000000004B8C4                 CBZ             X0, loc_4B8F0
.text:000000000004B8C8 loc_4B8C8                               ; CODE XREF: EAS_SetPolyphony+84↑j
.text:000000000004B8C8                                         ; EAS_SetPolyphony+CC↓j
.text:000000000004B8C8                 MOV             X0, #0xFFFFFFFFFFFFFFE4
.text:000000000004B8CC loc_4B8CC                               ; CODE XREF: EAS_SetPolyphony+54↑j
.text:000000000004B8CC                                         ; EAS_SetPolyphony+78↑j ...
.text:000000000004B8CC                 LDR             X8, [X22,#0x28]
.text:000000000004B8D0                 LDR             X9, [SP,#0x30+var_28]
.text:000000000004B8D4                 CMP             X8, X9
.text:000000000004B8D8                 B.NE            loc_4B908
.text:000000000004B8DC                 LDP             X29, X30, [SP,#0x30+var_s0]
.text:000000000004B8E0                 LDP             X20, X19, [SP,#0x30+var_10]
.text:000000000004B8E4                 LDP             X22, X21, [SP,#0x30+var_20]
.text:000000000004B8E8                 ADD             SP, SP, #0x40 ; '@'
.text:000000000004B8EC                 RET
.text:000000000004B8F0 ; ---------------------------------------------------------------------------
.text:000000000004B8F0 loc_4B8F0                               ; CODE XREF: EAS_SetPolyphony+9C↑j
.text:000000000004B8F0                 LDR             X1, [SP,#0x30+var_30]
.text:000000000004B8F4                 CBZ             X1, loc_4B8C8
.text:000000000004B8F8                 LDR             X0, [X20,#0x170]
.text:000000000004B8FC                 MOV             X2, X19
.text:000000000004B900                 BL              .VMSetPolyphony
.text:000000000004B904                 B               loc_4B8CC
.text:000000000004B908 ; ---------------------------------------------------------------------------
.text:000000000004B908 loc_4B908                               ; CODE XREF: EAS_SetPolyphony+B0↑j
.text:000000000004B908                 BL              .__stack_chk_fail
.text:000000000004B908 ; } // starts at 4B828
.text:000000000004B908 ; End of function EAS_SetPolyphony
.text:000000000004B908 ; ---------------------------------------------------------------------------
.text:000000000004B90C                 ALIGN 0x10
.text:000000000004B910 ; =============== S U B R O U T I N E =======================================
.text:000000000004B910 ; Attributes: bp-based frame
.text:000000000004B910                 EXPORT EAS_GetPolyphony
.text:000000000004B910 EAS_GetPolyphony                        ; DATA XREF: LOAD:00000000000012D8↑o
.text:000000000004B910 var_30          = -0x30
.text:000000000004B910 var_28          = -0x28
.text:000000000004B910 var_20          = -0x20
.text:000000000004B910 var_10          = -0x10
.text:000000000004B910 var_s0          =  0
.text:000000000004B910 ; __unwind {
.text:000000000004B910                 SUB             SP, SP, #0x40
.text:000000000004B914                 STP             X22, X21, [SP,#0x30+var_20]
.text:000000000004B918                 STP             X20, X19, [SP,#0x30+var_10]
.text:000000000004B91C                 STP             X29, X30, [SP,#0x30+var_s0]
.text:000000000004B920                 ADD             X29, SP, #0x30
.text:000000000004B924                 MRS             X22, #3, c13, c0, #2
.text:000000000004B928                 MOV             X21, X1
.text:000000000004B92C                 LDR             X8, [X22,#0x28]
.text:000000000004B930                 MOV             X19, X2
.text:000000000004B934                 MOV             X2, SP
.text:000000000004B938                 MOV             X20, X0
.text:000000000004B93C                 STR             X8, [SP,#0x30+var_28]
.text:000000000004B940                 LDR             X8, [X1]
.text:000000000004B944                 LDR             X1, [X1,#0x20]
.text:000000000004B948                 LDR             X8, [X8,#0x20]
.text:000000000004B94C                 BLR             X8
.text:000000000004B950                 LDR             X8, [SP,#0x30+var_30]
.text:000000000004B954                 CMP             X0, #0
.text:000000000004B958                 CCMP            X8, #5, #0, EQ
.text:000000000004B95C                 B.LE            loc_4B968
.text:000000000004B960                 MOV             X0, #0xFFFFFFFFFFFFFFE1
.text:000000000004B964                 B               loc_4B9B4
.text:000000000004B968 ; ---------------------------------------------------------------------------
.text:000000000004B968 loc_4B968                               ; CODE XREF: EAS_GetPolyphony+4C↑j
.text:000000000004B968                 LDR             X8, [X21]
.text:000000000004B96C                 LDR             X8, [X8,#0x58]
.text:000000000004B970                 CBZ             X8, loc_4B9B0
.text:000000000004B974                 LDR             X1, [X21,#0x20]
.text:000000000004B978                 MOV             X0, X20
.text:000000000004B97C                 MOV             W2, #8
.text:000000000004B980                 MOV             X3, X19
.text:000000000004B984                 BLR             X8
.text:000000000004B988                 CBZ             X0, loc_4B9B4
.text:000000000004B98C                 LDR             X8, [X21]
.text:000000000004B990                 LDR             X8, [X8,#0x58]
.text:000000000004B994                 CBZ             X8, loc_4B9B0
.text:000000000004B998                 LDR             X1, [X21,#0x20]
.text:000000000004B99C                 MOV             X3, SP
.text:000000000004B9A0                 MOV             X0, X20
.text:000000000004B9A4                 MOV             W2, #4
.text:000000000004B9A8                 BLR             X8
.text:000000000004B9AC                 CBZ             X0, loc_4B9D8
.text:000000000004B9B0 loc_4B9B0                               ; CODE XREF: EAS_GetPolyphony+60↑j
.text:000000000004B9B0                                         ; EAS_GetPolyphony+84↑j ...
.text:000000000004B9B0                 MOV             X0, #0xFFFFFFFFFFFFFFE4
.text:000000000004B9B4 loc_4B9B4                               ; CODE XREF: EAS_GetPolyphony+54↑j
.text:000000000004B9B4                                         ; EAS_GetPolyphony+78↑j ...
.text:000000000004B9B4                 LDR             X8, [X22,#0x28]
.text:000000000004B9B8                 LDR             X9, [SP,#0x30+var_28]
.text:000000000004B9BC                 CMP             X8, X9
.text:000000000004B9C0                 B.NE            loc_4B9F0
.text:000000000004B9C4                 LDP             X29, X30, [SP,#0x30+var_s0]
.text:000000000004B9C8                 LDP             X20, X19, [SP,#0x30+var_10]
.text:000000000004B9CC                 LDP             X22, X21, [SP,#0x30+var_20]
.text:000000000004B9D0                 ADD             SP, SP, #0x40 ; '@'
.text:000000000004B9D4                 RET
.text:000000000004B9D8 ; ---------------------------------------------------------------------------
.text:000000000004B9D8 loc_4B9D8                               ; CODE XREF: EAS_GetPolyphony+9C↑j
.text:000000000004B9D8                 LDR             X1, [SP,#0x30+var_30]
.text:000000000004B9DC                 CBZ             X1, loc_4B9B0
.text:000000000004B9E0                 LDR             X0, [X20,#0x170]
.text:000000000004B9E4                 MOV             X2, X19
.text:000000000004B9E8                 BL              .VMGetPolyphony
.text:000000000004B9EC                 B               loc_4B9B4
.text:000000000004B9F0 ; ---------------------------------------------------------------------------
.text:000000000004B9F0 loc_4B9F0                               ; CODE XREF: EAS_GetPolyphony+B0↑j
.text:000000000004B9F0                 BL              .__stack_chk_fail
.text:000000000004B9F0 ; } // starts at 4B910
.text:000000000004B9F0 ; End of function EAS_GetPolyphony
.text:000000000004B9F0 ; ---------------------------------------------------------------------------
.text:000000000004B9F4                 ALIGN 8
.text:000000000004B9F8 ; =============== S U B R O U T I N E =======================================
.text:000000000004B9F8                 EXPORT EAS_SetSynthPolyphony
.text:000000000004B9F8 EAS_SetSynthPolyphony                   ; DATA XREF: LOAD:0000000000001800↑o
.text:000000000004B9F8 ; __unwind {
.text:000000000004B9F8                 LDR             X0, [X0,#0x170]
.text:000000000004B9FC                 B               .VMSetSynthPolyphony
.text:000000000004B9FC ; } // starts at 4B9F8
.text:000000000004B9FC ; End of function EAS_SetSynthPolyphony
.text:000000000004BA00 ; =============== S U B R O U T I N E =======================================
.text:000000000004BA00                 EXPORT EAS_GetSynthPolyphony
.text:000000000004BA00 EAS_GetSynthPolyphony                   ; DATA XREF: LOAD:0000000000001B00↑o
.text:000000000004BA00 ; __unwind {
.text:000000000004BA00                 LDR             X0, [X0,#0x170]
.text:000000000004BA04                 B               .VMGetSynthPolyphony
.text:000000000004BA04 ; } // starts at 4BA00
.text:000000000004BA04 ; End of function EAS_GetSynthPolyphony
.text:000000000004BA08 ; =============== S U B R O U T I N E =======================================
.text:000000000004BA08 ; Attributes: bp-based frame
.text:000000000004BA08                 EXPORT EAS_SetPriority
.text:000000000004BA08 EAS_SetPriority                         ; DATA XREF: LOAD:0000000000001A70↑o
.text:000000000004BA08 var_30          = -0x30
.text:000000000004BA08 var_28          = -0x28
.text:000000000004BA08 var_20          = -0x20
.text:000000000004BA08 var_10          = -0x10
.text:000000000004BA08 var_s0          =  0
.text:000000000004BA08 ; __unwind {
.text:000000000004BA08                 SUB             SP, SP, #0x40
.text:000000000004BA0C                 STP             X22, X21, [SP,#0x30+var_20]
.text:000000000004BA10                 STP             X20, X19, [SP,#0x30+var_10]
.text:000000000004BA14                 STP             X29, X30, [SP,#0x30+var_s0]
.text:000000000004BA18                 ADD             X29, SP, #0x30
.text:000000000004BA1C                 MRS             X22, #3, c13, c0, #2
.text:000000000004BA20                 MOV             X21, X1
.text:000000000004BA24                 LDR             X8, [X22,#0x28]
.text:000000000004BA28                 MOV             X19, X2
.text:000000000004BA2C                 MOV             X2, SP
.text:000000000004BA30                 MOV             X20, X0
.text:000000000004BA34                 STR             X8, [SP,#0x30+var_28]
.text:000000000004BA38                 LDR             X8, [X1]
.text:000000000004BA3C                 LDR             X1, [X1,#0x20]
.text:000000000004BA40                 LDR             X8, [X8,#0x20]
.text:000000000004BA44                 BLR             X8
.text:000000000004BA48                 LDR             X8, [SP,#0x30+var_30]
.text:000000000004BA4C                 CMP             X0, #0
.text:000000000004BA50                 CCMP            X8, #5, #0, EQ
.text:000000000004BA54                 B.LE            loc_4BA60
.text:000000000004BA58                 MOV             X0, #0xFFFFFFFFFFFFFFE1
.text:000000000004BA5C                 B               loc_4BAAC
.text:000000000004BA60 ; ---------------------------------------------------------------------------
.text:000000000004BA60 loc_4BA60                               ; CODE XREF: EAS_SetPriority+4C↑j
.text:000000000004BA60                 LDR             X9, [X21]
.text:000000000004BA64                 LDR             X8, [X9,#0x50]
.text:000000000004BA68                 CBZ             X8, loc_4BA88
.text:000000000004BA6C                 LDR             X1, [X21,#0x20]
.text:000000000004BA70                 MOV             W2, #9
.text:000000000004BA74                 MOV             X0, X20
.text:000000000004BA78                 MOV             X3, X19
.text:000000000004BA7C                 BLR             X8
.text:000000000004BA80                 CBZ             X0, loc_4BAAC
.text:000000000004BA84                 LDR             X9, [X21]
.text:000000000004BA88 loc_4BA88                               ; CODE XREF: EAS_SetPriority+60↑j
.text:000000000004BA88                 LDR             X8, [X9,#0x58]
.text:000000000004BA8C                 CBZ             X8, loc_4BAA8
.text:000000000004BA90                 LDR             X1, [X21,#0x20]
.text:000000000004BA94                 MOV             X3, SP
.text:000000000004BA98                 MOV             X0, X20
.text:000000000004BA9C                 MOV             W2, #4
.text:000000000004BAA0                 BLR             X8
.text:000000000004BAA4                 CBZ             X0, loc_4BAD0
.text:000000000004BAA8 loc_4BAA8                               ; CODE XREF: EAS_SetPriority+84↑j
.text:000000000004BAA8                                         ; EAS_SetPriority+CC↓j
.text:000000000004BAA8                 MOV             X0, #0xFFFFFFFFFFFFFFE4
.text:000000000004BAAC loc_4BAAC                               ; CODE XREF: EAS_SetPriority+54↑j
.text:000000000004BAAC                                         ; EAS_SetPriority+78↑j ...
.text:000000000004BAAC                 LDR             X8, [X22,#0x28]
.text:000000000004BAB0                 LDR             X9, [SP,#0x30+var_28]
.text:000000000004BAB4                 CMP             X8, X9
.text:000000000004BAB8                 B.NE            loc_4BAE8
.text:000000000004BABC                 LDP             X29, X30, [SP,#0x30+var_s0]
.text:000000000004BAC0                 LDP             X20, X19, [SP,#0x30+var_10]
.text:000000000004BAC4                 LDP             X22, X21, [SP,#0x30+var_20]
.text:000000000004BAC8                 ADD             SP, SP, #0x40 ; '@'
.text:000000000004BACC                 RET
.text:000000000004BAD0 ; ---------------------------------------------------------------------------
.text:000000000004BAD0 loc_4BAD0                               ; CODE XREF: EAS_SetPriority+9C↑j
.text:000000000004BAD0                 LDR             X1, [SP,#0x30+var_30]
.text:000000000004BAD4                 CBZ             X1, loc_4BAA8
.text:000000000004BAD8                 LDR             X0, [X20,#0x170]
.text:000000000004BADC                 MOV             X2, X19
.text:000000000004BAE0                 BL              .VMSetPriority
.text:000000000004BAE4                 B               loc_4BAAC
.text:000000000004BAE8 ; ---------------------------------------------------------------------------
.text:000000000004BAE8 loc_4BAE8                               ; CODE XREF: EAS_SetPriority+B0↑j
.text:000000000004BAE8                 BL              .__stack_chk_fail
.text:000000000004BAE8 ; } // starts at 4BA08
.text:000000000004BAE8 ; End of function EAS_SetPriority
.text:000000000004BAE8 ; ---------------------------------------------------------------------------
.text:000000000004BAEC                 ALIGN 0x10
.text:000000000004BAF0 ; =============== S U B R O U T I N E =======================================
.text:000000000004BAF0 ; Attributes: bp-based frame
.text:000000000004BAF0                 EXPORT EAS_GetPriority
.text:000000000004BAF0 EAS_GetPriority                         ; DATA XREF: LOAD:stru_AC8↑o
.text:000000000004BAF0 var_30          = -0x30
.text:000000000004BAF0 var_28          = -0x28
.text:000000000004BAF0 var_20          = -0x20
.text:000000000004BAF0 var_10          = -0x10
.text:000000000004BAF0 var_s0          =  0
.text:000000000004BAF0 ; __unwind {
.text:000000000004BAF0                 SUB             SP, SP, #0x40
.text:000000000004BAF4                 STP             X22, X21, [SP,#0x30+var_20]
.text:000000000004BAF8                 STP             X20, X19, [SP,#0x30+var_10]
.text:000000000004BAFC                 STP             X29, X30, [SP,#0x30+var_s0]
.text:000000000004BB00                 ADD             X29, SP, #0x30
.text:000000000004BB04                 MRS             X22, #3, c13, c0, #2
.text:000000000004BB08                 MOV             X21, X1
.text:000000000004BB0C                 LDR             X8, [X22,#0x28]
.text:000000000004BB10                 MOV             X19, X2
.text:000000000004BB14                 MOV             X2, SP
.text:000000000004BB18                 MOV             X20, X0
.text:000000000004BB1C                 STR             X8, [SP,#0x30+var_28]
.text:000000000004BB20                 LDR             X8, [X1]
.text:000000000004BB24                 LDR             X1, [X1,#0x20]
.text:000000000004BB28                 LDR             X8, [X8,#0x20]
.text:000000000004BB2C                 BLR             X8
.text:000000000004BB30                 LDR             X8, [SP,#0x30+var_30]
.text:000000000004BB34                 CMP             X0, #0
.text:000000000004BB38                 CCMP            X8, #5, #0, EQ
.text:000000000004BB3C                 B.LE            loc_4BB48
.text:000000000004BB40                 MOV             X0, #0xFFFFFFFFFFFFFFE1
.text:000000000004BB44                 B               loc_4BB94
.text:000000000004BB48 ; ---------------------------------------------------------------------------
.text:000000000004BB48 loc_4BB48                               ; CODE XREF: EAS_GetPriority+4C↑j
.text:000000000004BB48                 LDR             X8, [X21]
.text:000000000004BB4C                 LDR             X8, [X8,#0x58]
.text:000000000004BB50                 CBZ             X8, loc_4BB90
.text:000000000004BB54                 LDR             X1, [X21,#0x20]
.text:000000000004BB58                 MOV             W2, #9
.text:000000000004BB5C                 MOV             X0, X20
.text:000000000004BB60                 MOV             X3, X19
.text:000000000004BB64                 BLR             X8
.text:000000000004BB68                 CBZ             X0, loc_4BB94
.text:000000000004BB6C                 LDR             X8, [X21]
.text:000000000004BB70                 LDR             X8, [X8,#0x58]
.text:000000000004BB74                 CBZ             X8, loc_4BB90
.text:000000000004BB78                 LDR             X1, [X21,#0x20]
.text:000000000004BB7C                 MOV             X3, SP
.text:000000000004BB80                 MOV             X0, X20
.text:000000000004BB84                 MOV             W2, #4
.text:000000000004BB88                 BLR             X8
.text:000000000004BB8C                 CBZ             X0, loc_4BBB8
.text:000000000004BB90 loc_4BB90                               ; CODE XREF: EAS_GetPriority+60↑j
.text:000000000004BB90                                         ; EAS_GetPriority+84↑j ...
.text:000000000004BB90                 MOV             X0, #0xFFFFFFFFFFFFFFE4
.text:000000000004BB94 loc_4BB94                               ; CODE XREF: EAS_GetPriority+54↑j
.text:000000000004BB94                                         ; EAS_GetPriority+78↑j ...
.text:000000000004BB94                 LDR             X8, [X22,#0x28]
.text:000000000004BB98                 LDR             X9, [SP,#0x30+var_28]
.text:000000000004BB9C                 CMP             X8, X9
.text:000000000004BBA0                 B.NE            loc_4BBD0
.text:000000000004BBA4                 LDP             X29, X30, [SP,#0x30+var_s0]
.text:000000000004BBA8                 LDP             X20, X19, [SP,#0x30+var_10]
.text:000000000004BBAC                 LDP             X22, X21, [SP,#0x30+var_20]
.text:000000000004BBB0                 ADD             SP, SP, #0x40 ; '@'
.text:000000000004BBB4                 RET
.text:000000000004BBB8 ; ---------------------------------------------------------------------------
.text:000000000004BBB8 loc_4BBB8                               ; CODE XREF: EAS_GetPriority+9C↑j
.text:000000000004BBB8                 LDR             X1, [SP,#0x30+var_30]
.text:000000000004BBBC                 CBZ             X1, loc_4BB90
.text:000000000004BBC0                 LDR             X0, [X20,#0x170]
.text:000000000004BBC4                 MOV             X2, X19
.text:000000000004BBC8                 BL              .VMGetPriority
.text:000000000004BBCC                 B               loc_4BB94
.text:000000000004BBD0 ; ---------------------------------------------------------------------------
.text:000000000004BBD0 loc_4BBD0                               ; CODE XREF: EAS_GetPriority+B0↑j
.text:000000000004BBD0                 BL              .__stack_chk_fail
.text:000000000004BBD0 ; } // starts at 4BAF0
.text:000000000004BBD0 ; End of function EAS_GetPriority
.text:000000000004BBD0 ; ---------------------------------------------------------------------------
.text:000000000004BBD4                 ALIGN 8
.text:000000000004BBD8 ; =============== S U B R O U T I N E =======================================
.text:000000000004BBD8 ; Attributes: bp-based frame
.text:000000000004BBD8                 EXPORT EAS_GetVolume
.text:000000000004BBD8 EAS_GetVolume                           ; DATA XREF: LOAD:0000000000001638↑o
.text:000000000004BBD8 var_20          = -0x20
.text:000000000004BBD8 var_18          = -0x18
.text:000000000004BBD8 var_10          = -0x10
.text:000000000004BBD8 var_s0          =  0
.text:000000000004BBD8 ; __unwind {
.text:000000000004BBD8                 SUB             SP, SP, #0x30
.text:000000000004BBDC                 STP             X20, X19, [SP,#0x20+var_10]
.text:000000000004BBE0                 STP             X29, X30, [SP,#0x20+var_s0]
.text:000000000004BBE4                 ADD             X29, SP, #0x20
.text:000000000004BBE8                 MRS             X20, #3, c13, c0, #2
.text:000000000004BBEC                 LDR             X8, [X20,#0x28]
.text:000000000004BBF0                 STR             X8, [SP,#0x20+var_18]
.text:000000000004BBF4                 CBZ             X1, loc_4BC28
.text:000000000004BBF8                 LDR             X8, [X1]
.text:000000000004BBFC                 MOV             X19, X1
.text:000000000004BC00                 LDR             X1, [X1,#0x20]
.text:000000000004BC04                 MOV             X2, SP
.text:000000000004BC08                 LDR             X8, [X8,#0x20]
.text:000000000004BC0C                 BLR             X8
.text:000000000004BC10                 LDR             X8, [SP,#0x20+var_20]
.text:000000000004BC14                 CMP             X0, #0
.text:000000000004BC18                 CCMP            X8, #5, #0, EQ
.text:000000000004BC1C                 B.LE            loc_4BC30
.text:000000000004BC20                 MOV             X0, #0xFFFFFFFFFFFFFFE1
.text:000000000004BC24                 B               loc_4BC34
.text:000000000004BC28 ; ---------------------------------------------------------------------------
.text:000000000004BC28 loc_4BC28                               ; CODE XREF: EAS_GetVolume+1C↑j
.text:000000000004BC28                 LDRB            W0, [X0,#0x18A]
.text:000000000004BC2C                 B               loc_4BC34
.text:000000000004BC30 ; ---------------------------------------------------------------------------
.text:000000000004BC30 loc_4BC30                               ; CODE XREF: EAS_GetVolume+44↑j
.text:000000000004BC30                 LDRB            W0, [X19,#0x28]
.text:000000000004BC34 loc_4BC34                               ; CODE XREF: EAS_GetVolume+4C↑j
.text:000000000004BC34                                         ; EAS_GetVolume+54↑j
.text:000000000004BC34                 LDR             X8, [X20,#0x28]
.text:000000000004BC38                 LDR             X9, [SP,#0x20+var_18]
.text:000000000004BC3C                 CMP             X8, X9
.text:000000000004BC40                 B.NE            loc_4BC54
.text:000000000004BC44                 LDP             X29, X30, [SP,#0x20+var_s0]
.text:000000000004BC48                 LDP             X20, X19, [SP,#0x20+var_10]
.text:000000000004BC4C                 ADD             SP, SP, #0x30 ; '0'
.text:000000000004BC50                 RET
.text:000000000004BC54 ; ---------------------------------------------------------------------------
.text:000000000004BC54 loc_4BC54                               ; CODE XREF: EAS_GetVolume+68↑j
.text:000000000004BC54                 BL              .__stack_chk_fail
.text:000000000004BC54 ; } // starts at 4BBD8
.text:000000000004BC54 ; End of function EAS_GetVolume
.text:000000000004BC58 ; =============== S U B R O U T I N E =======================================
.text:000000000004BC58 ; Attributes: bp-based frame
.text:000000000004BC58                 EXPORT EAS_SetMaxLoad
.text:000000000004BC58 EAS_SetMaxLoad                          ; DATA XREF: LOAD:0000000000001B30↑o
.text:000000000004BC58 var_s0          =  0
.text:000000000004BC58 ; __unwind {
.text:000000000004BC58                 STP             X29, X30, [SP,#-0x10+var_s0]!
.text:000000000004BC5C                 MOV             X29, SP
.text:000000000004BC60                 LDR             X0, [X0,#0x170]
.text:000000000004BC64                 BL              .VMSetWorkload
.text:000000000004BC68                 MOV             X0, XZR
.text:000000000004BC6C                 LDP             X29, X30, [SP+var_s0],#0x10
.text:000000000004BC70                 RET
.text:000000000004BC70 ; } // starts at 4BC58
.text:000000000004BC70 ; End of function EAS_SetMaxLoad
.text:000000000004BC70 ; ---------------------------------------------------------------------------
.text:000000000004BC74                 ALIGN 8
.text:000000000004BC78 ; =============== S U B R O U T I N E =======================================
.text:000000000004BC78 ; Attributes: bp-based frame
.text:000000000004BC78                 EXPORT EAS_SetMaxPCMStreams
.text:000000000004BC78 EAS_SetMaxPCMStreams                    ; DATA XREF: LOAD:00000000000007C8↑o
.text:000000000004BC78 var_30          = -0x30
.text:000000000004BC78 var_28          = -0x28
.text:000000000004BC78 var_20          = -0x20
.text:000000000004BC78 var_10          = -0x10
.text:000000000004BC78 var_s0          =  0
.text:000000000004BC78 ; __unwind {
.text:000000000004BC78                 SUB             SP, SP, #0x40
.text:000000000004BC7C                 STP             X22, X21, [SP,#0x30+var_20]
.text:000000000004BC80                 STP             X20, X19, [SP,#0x30+var_10]
.text:000000000004BC84                 STP             X29, X30, [SP,#0x30+var_s0]
.text:000000000004BC88                 ADD             X29, SP, #0x30
.text:000000000004BC8C                 MRS             X22, #3, c13, c0, #2
.text:000000000004BC90                 MOV             X20, X1
.text:000000000004BC94                 LDR             X8, [X22,#0x28]
.text:000000000004BC98                 MOV             X21, X2
.text:000000000004BC9C                 MOV             X2, SP
.text:000000000004BCA0                 MOV             X19, X0
.text:000000000004BCA4                 STR             X8, [SP,#0x30+var_28]
.text:000000000004BCA8                 LDR             X8, [X1]
.text:000000000004BCAC                 LDR             X1, [X1,#0x20]
.text:000000000004BCB0                 LDR             X8, [X8,#0x20]
.text:000000000004BCB4                 BLR             X8
.text:000000000004BCB8                 LDR             X8, [SP,#0x30+var_30]
.text:000000000004BCBC                 CMP             X0, #0
.text:000000000004BCC0                 CCMP            X8, #5, #0, EQ
.text:000000000004BCC4                 B.LE            loc_4BCD0
.text:000000000004BCC8                 MOV             X0, #0xFFFFFFFFFFFFFFE1
.text:000000000004BCCC                 B               loc_4BD18
.text:000000000004BCD0 ; ---------------------------------------------------------------------------
.text:000000000004BCD0 loc_4BCD0                               ; CODE XREF: EAS_SetMaxPCMStreams+4C↑j
.text:000000000004BCD0                 LDR             X9, [X20]
.text:000000000004BCD4                 LDR             X8, [X9,#0x50]
.text:000000000004BCD8                 CBZ             X8, loc_4BCF8
.text:000000000004BCDC                 LDR             X1, [X20,#0x20]
.text:000000000004BCE0                 MOV             W2, #0x11
.text:000000000004BCE4                 MOV             X0, X19
.text:000000000004BCE8                 MOV             X3, X21
.text:000000000004BCEC                 BLR             X8
.text:000000000004BCF0                 CBZ             X0, loc_4BD18
.text:000000000004BCF4                 LDR             X9, [X20]
.text:000000000004BCF8 loc_4BCF8                               ; CODE XREF: EAS_SetMaxPCMStreams+60↑j
.text:000000000004BCF8                 LDR             X8, [X9,#0x58]
.text:000000000004BCFC                 CBZ             X8, loc_4BD14
.text:000000000004BD00                 LDR             X1, [X20,#0x20]
.text:000000000004BD04                 MOV             X3, SP
.text:000000000004BD08                 MOV             X0, X19
.text:000000000004BD0C                 MOV             W2, #4
.text:000000000004BD10                 BLR             X8
.text:000000000004BD14 loc_4BD14                               ; CODE XREF: EAS_SetMaxPCMStreams+84↑j
.text:000000000004BD14                 MOV             X0, #0xFFFFFFFFFFFFFFE4
.text:000000000004BD18 loc_4BD18                               ; CODE XREF: EAS_SetMaxPCMStreams+54↑j
.text:000000000004BD18                                         ; EAS_SetMaxPCMStreams+78↑j
.text:000000000004BD18                 LDR             X8, [X22,#0x28]
.text:000000000004BD1C                 LDR             X9, [SP,#0x30+var_28]
.text:000000000004BD20                 CMP             X8, X9
.text:000000000004BD24                 B.NE            loc_4BD3C
.text:000000000004BD28                 LDP             X29, X30, [SP,#0x30+var_s0]
.text:000000000004BD2C                 LDP             X20, X19, [SP,#0x30+var_10]
.text:000000000004BD30                 LDP             X22, X21, [SP,#0x30+var_20]
.text:000000000004BD34                 ADD             SP, SP, #0x40 ; '@'
.text:000000000004BD38                 RET
.text:000000000004BD3C ; ---------------------------------------------------------------------------
.text:000000000004BD3C loc_4BD3C                               ; CODE XREF: EAS_SetMaxPCMStreams+AC↑j
.text:000000000004BD3C                 BL              .__stack_chk_fail
.text:000000000004BD3C ; } // starts at 4BC78
.text:000000000004BD3C ; End of function EAS_SetMaxPCMStreams
.text:000000000004BD40 ; =============== S U B R O U T I N E =======================================
.text:000000000004BD40 ; Attributes: bp-based frame
.text:000000000004BD40                 EXPORT EAS_Locate
.text:000000000004BD40 EAS_Locate                              ; CODE XREF: .EAS_Locate+C↓j
.text:000000000004BD40                                         ; DATA XREF: LOAD:0000000000000A20↑o ...
.text:000000000004BD40 var_44          = -0x44
.text:000000000004BD40 var_40          = -0x40
.text:000000000004BD40 var_38          = -0x38
.text:000000000004BD40 var_30          = -0x30
.text:000000000004BD40 var_20          = -0x20
.text:000000000004BD40 var_10          = -0x10
.text:000000000004BD40 var_s0          =  0
.text:000000000004BD40 ; __unwind {
.text:000000000004BD40                 SUB             SP, SP, #0x60
.text:000000000004BD44                 STP             X24, X23, [SP,#0x50+var_30]
.text:000000000004BD48                 STP             X22, X21, [SP,#0x50+var_20]
.text:000000000004BD4C                 STP             X20, X19, [SP,#0x50+var_10]
.text:000000000004BD50                 STP             X29, X30, [SP,#0x50+var_s0]
.text:000000000004BD54                 ADD             X29, SP, #0x50
.text:000000000004BD58                 MRS             X23, #3, c13, c0, #2
.text:000000000004BD5C                 LDR             X8, [X23,#0x28]
.text:000000000004BD60                 STR             X8, [SP,#0x50+var_38]
.text:000000000004BD64                 LDR             X24, [X1]
.text:000000000004BD68                 CBZ             X24, loc_4BDA4
.text:000000000004BD6C                 MOV             X19, X1
.text:000000000004BD70                 LDR             X8, [X24,#0x20]
.text:000000000004BD74                 LDR             X1, [X1,#0x20]
.text:000000000004BD78                 MOV             X21, X2
.text:000000000004BD7C                 ADD             X2, SP, #0x50+var_40
.text:000000000004BD80                 MOV             W22, W3
.text:000000000004BD84                 MOV             X20, X0
.text:000000000004BD88                 BLR             X8
.text:000000000004BD8C                 CBNZ            X0, loc_4BDA8
.text:000000000004BD90                 LDR             X8, [SP,#0x50+var_40]
.text:000000000004BD94                 CMP             X8, #5
.text:000000000004BD98                 B.LE            loc_4BDD0
.text:000000000004BD9C                 MOV             X0, #0xFFFFFFFFFFFFFFE1
.text:000000000004BDA0                 B               loc_4BDA8
.text:000000000004BDA4 ; ---------------------------------------------------------------------------
.text:000000000004BDA4 loc_4BDA4                               ; CODE XREF: EAS_Locate+28↑j
.text:000000000004BDA4                 MOV             X0, #0xFFFFFFFFFFFFFFE3
.text:000000000004BDA8 loc_4BDA8                               ; CODE XREF: EAS_Locate+4C↑j
.text:000000000004BDA8                                         ; EAS_Locate+60↑j ...
.text:000000000004BDA8                 LDR             X8, [X23,#0x28]
.text:000000000004BDAC                 LDR             X9, [SP,#0x50+var_38]
.text:000000000004BDB0                 CMP             X8, X9
.text:000000000004BDB4                 B.NE            loc_4BE8C
.text:000000000004BDB8                 LDP             X29, X30, [SP,#0x50+var_s0]
.text:000000000004BDBC                 LDP             X20, X19, [SP,#0x50+var_10]
.text:000000000004BDC0                 LDP             X22, X21, [SP,#0x50+var_20]
.text:000000000004BDC4                 LDP             X24, X23, [SP,#0x50+var_30]
.text:000000000004BDC8                 ADD             SP, SP, #0x60 ; '`'
.text:000000000004BDCC                 RET
.text:000000000004BDD0 ; ---------------------------------------------------------------------------
.text:000000000004BDD0 loc_4BDD0                               ; CODE XREF: EAS_Locate+58↑j
.text:000000000004BDD0                 LDR             X9, [X19,#8]
.text:000000000004BDD4                 CMP             W22, #0
.text:000000000004BDD8                 MOV             X0, XZR
.text:000000000004BDDC                 ASR             X10, X9, #8
.text:000000000004BDE0                 CSEL            X10, XZR, X10, EQ
.text:000000000004BDE4                 ADD             X10, X10, X21
.text:000000000004BDE8                 BIC             X21, X10, X10,ASR#63
.text:000000000004BDEC                 CMP             X21, X9,LSR#8
.text:000000000004BDF0                 B.EQ            loc_4BDA8
.text:000000000004BDF4                 LDRB            W9, [X19,#0x29]
.text:000000000004BDF8                 ORR             W9, W9, #4
.text:000000000004BDFC                 STRB            W9, [X19,#0x29]
.text:000000000004BE00                 LDR             X9, [X24,#0x48]
.text:000000000004BE04                 CBZ             X9, loc_4BE2C
.text:000000000004BE08                 LDR             X1, [X19,#0x20]
.text:000000000004BE0C                 ADD             X3, SP, #0x50+var_44
.text:000000000004BE10                 MOV             X0, X20
.text:000000000004BE14                 STR             WZR, [SP,#0x50+var_44]
.text:000000000004BE18                 MOV             X2, X21
.text:000000000004BE1C                 BLR             X9
.text:000000000004BE20                 LDR             W8, [SP,#0x50+var_44]
.text:000000000004BE24                 CBZ             W8, loc_4BE7C
.text:000000000004BE28                 LDR             X8, [SP,#0x50+var_40]
.text:000000000004BE2C loc_4BE2C                               ; CODE XREF: EAS_Locate+C4↑j
.text:000000000004BE2C                 CMP             X8, #5
.text:000000000004BE30                 B.EQ            loc_4BE3C
.text:000000000004BE34                 CMP             X8, #3
.text:000000000004BE38                 B.NE            loc_4BE4C
.text:000000000004BE3C loc_4BE3C                               ; CODE XREF: EAS_Locate+F0↑j
.text:000000000004BE3C                 LDRB            W8, [X19,#0x29]
.text:000000000004BE40                 TBNZ            W8, #3, loc_4BE4C
.text:000000000004BE44                 ORR             W8, W8, #2
.text:000000000004BE48                 STRB            W8, [X19,#0x29]
.text:000000000004BE4C loc_4BE4C                               ; CODE XREF: EAS_Locate+F8↑j
.text:000000000004BE4C                                         ; EAS_Locate+100↑j
.text:000000000004BE4C                 LDR             X8, [X24,#0x30]
.text:000000000004BE50                 MOV             X0, X20
.text:000000000004BE54                 LDR             X1, [X19,#0x20]
.text:000000000004BE58                 BLR             X8
.text:000000000004BE5C                 CBNZ            X0, loc_4BDA8
.text:000000000004BE60                 MOV             X0, X20
.text:000000000004BE64                 STR             XZR, [X19,#8]
.text:000000000004BE68                 MOV             X1, X19
.text:000000000004BE6C                 MOV             W3, #1
.text:000000000004BE70                 LSL             X2, X21, #8
.text:000000000004BE74                 BL              sub_4AD78
.text:000000000004BE78                 B               loc_4BDA8
.text:000000000004BE7C ; ---------------------------------------------------------------------------
.text:000000000004BE7C loc_4BE7C                               ; CODE XREF: EAS_Locate+E4↑j
.text:000000000004BE7C                 CBNZ            X0, loc_4BDA8
.text:000000000004BE80                 LSL             X8, X21, #8
.text:000000000004BE84                 STR             X8, [X19,#8]
.text:000000000004BE88                 B               loc_4BDA8
.text:000000000004BE8C ; ---------------------------------------------------------------------------
.text:000000000004BE8C loc_4BE8C                               ; CODE XREF: EAS_Locate+74↑j
.text:000000000004BE8C                 BL              .__stack_chk_fail
.text:000000000004BE8C ; } // starts at 4BD40
.text:000000000004BE8C ; End of function EAS_Locate
.text:000000000004BE90 ; =============== S U B R O U T I N E =======================================
.text:000000000004BE90                 EXPORT EAS_GetRenderTime
.text:000000000004BE90 EAS_GetRenderTime                       ; DATA XREF: LOAD:0000000000001440↑o
.text:000000000004BE90 ; __unwind {
.text:000000000004BE90                 LDR             X8, [X0,#0x180]
.text:000000000004BE94                 MOV             X0, XZR
.text:000000000004BE98                 LSR             X8, X8, #8
.text:000000000004BE9C                 STR             X8, [X1]
.text:000000000004BEA0                 RET
.text:000000000004BEA0 ; } // starts at 4BE90
.text:000000000004BEA0 ; End of function EAS_GetRenderTime
.text:000000000004BEA0 ; ---------------------------------------------------------------------------
.text:000000000004BEA4                 ALIGN 8
.text:000000000004BEA8 ; =============== S U B R O U T I N E =======================================
.text:000000000004BEA8 ; Attributes: bp-based frame
.text:000000000004BEA8                 EXPORT EAS_Pause
.text:000000000004BEA8 EAS_Pause                               ; CODE XREF: .EAS_Pause+C↓j
.text:000000000004BEA8                                         ; DATA XREF: LOAD:0000000000001200↑o ...
.text:000000000004BEA8 var_30          = -0x30
.text:000000000004BEA8 var_28          = -0x28
.text:000000000004BEA8 var_20          = -0x20
.text:000000000004BEA8 var_10          = -0x10
.text:000000000004BEA8 var_s0          =  0
.text:000000000004BEA8 ; __unwind {
.text:000000000004BEA8                 SUB             SP, SP, #0x40
.text:000000000004BEAC                 STR             X21, [SP,#0x30+var_20]
.text:000000000004BEB0                 STP             X20, X19, [SP,#0x30+var_10]
.text:000000000004BEB4                 STP             X29, X30, [SP,#0x30+var_s0]
.text:000000000004BEB8                 ADD             X29, SP, #0x30
.text:000000000004BEBC                 MRS             X20, #3, c13, c0, #2
.text:000000000004BEC0                 LDR             X8, [X20,#0x28]
.text:000000000004BEC4                 STR             X8, [SP,#0x30+var_28]
.text:000000000004BEC8                 LDR             X21, [X1]
.text:000000000004BECC                 CBZ             X21, loc_4BF04
.text:000000000004BED0                 MOV             X19, X1
.text:000000000004BED4                 LDR             X8, [X21,#0x20]
.text:000000000004BED8                 LDR             X1, [X1,#0x20]
.text:000000000004BEDC                 MOV             X2, SP
.text:000000000004BEE0                 BLR             X8
.text:000000000004BEE4                 CBNZ            X0, loc_4BF28
.text:000000000004BEE8                 LDR             X9, [SP,#0x30+var_30]
.text:000000000004BEEC                 LDRB            W8, [X19,#0x29]
.text:000000000004BEF0                 CMP             X9, #2
.text:000000000004BEF4                 B.CC            loc_4BF0C
.text:000000000004BEF8                 TBNZ            W8, #3, loc_4BF0C
.text:000000000004BEFC                 MOV             X0, #0xFFFFFFFFFFFFFFE1
.text:000000000004BF00                 B               loc_4BF28
.text:000000000004BF04 ; ---------------------------------------------------------------------------
.text:000000000004BF04 loc_4BF04                               ; CODE XREF: EAS_Pause+24↑j
.text:000000000004BF04                 MOV             X0, #0xFFFFFFFFFFFFFFE3
.text:000000000004BF08                 B               loc_4BF28
.text:000000000004BF0C ; ---------------------------------------------------------------------------
.text:000000000004BF0C loc_4BF0C                               ; CODE XREF: EAS_Pause+4C↑j
.text:000000000004BF0C                                         ; EAS_Pause+50↑j
.text:000000000004BF0C                 LDR             X9, [X21,#0x38]
.text:000000000004BF10                 MOV             X10, #0xFFFFFFFFFFFFFFF8
.text:000000000004BF14                 AND             W8, W8, #0xFFFFFFF7
.text:000000000004BF18                 ORR             W8, W8, #2
.text:000000000004BF1C                 CMP             X9, #0
.text:000000000004BF20                 CSEL            X0, X10, XZR, EQ
.text:000000000004BF24                 STRB            W8, [X19,#0x29]
.text:000000000004BF28 loc_4BF28                               ; CODE XREF: EAS_Pause+3C↑j
.text:000000000004BF28                                         ; EAS_Pause+58↑j ...
.text:000000000004BF28                 LDR             X8, [X20,#0x28]
.text:000000000004BF2C                 LDR             X9, [SP,#0x30+var_28]
.text:000000000004BF30                 CMP             X8, X9
.text:000000000004BF34                 B.NE            loc_4BF4C
.text:000000000004BF38                 LDP             X29, X30, [SP,#0x30+var_s0]
.text:000000000004BF3C                 LDP             X20, X19, [SP,#0x30+var_10]
.text:000000000004BF40                 LDR             X21, [SP,#0x30+var_20]
.text:000000000004BF44                 ADD             SP, SP, #0x40 ; '@'
.text:000000000004BF48                 RET
.text:000000000004BF4C ; ---------------------------------------------------------------------------
.text:000000000004BF4C loc_4BF4C                               ; CODE XREF: EAS_Pause+8C↑j
.text:000000000004BF4C                 BL              .__stack_chk_fail
.text:000000000004BF4C ; } // starts at 4BEA8
.text:000000000004BF4C ; End of function EAS_Pause
.text:000000000004BF50 ; =============== S U B R O U T I N E =======================================
.text:000000000004BF50 ; Attributes: bp-based frame
.text:000000000004BF50                 EXPORT EAS_Resume
.text:000000000004BF50 EAS_Resume                              ; CODE XREF: .EAS_Resume+C↓j
.text:000000000004BF50                                         ; DATA XREF: LOAD:00000000000016B0↑o ...
.text:000000000004BF50 var_30          = -0x30
.text:000000000004BF50 var_28          = -0x28
.text:000000000004BF50 var_20          = -0x20
.text:000000000004BF50 var_10          = -0x10
.text:000000000004BF50 var_s0          =  0
.text:000000000004BF50 ; __unwind {
.text:000000000004BF50                 SUB             SP, SP, #0x40
.text:000000000004BF54                 STR             X21, [SP,#0x30+var_20]
.text:000000000004BF58                 STP             X20, X19, [SP,#0x30+var_10]
.text:000000000004BF5C                 STP             X29, X30, [SP,#0x30+var_s0]
.text:000000000004BF60                 ADD             X29, SP, #0x30
.text:000000000004BF64                 MRS             X20, #3, c13, c0, #2
.text:000000000004BF68                 LDR             X8, [X20,#0x28]
.text:000000000004BF6C                 STR             X8, [SP,#0x30+var_28]
.text:000000000004BF70                 LDR             X21, [X1]
.text:000000000004BF74                 CBZ             X21, loc_4BFB4
.text:000000000004BF78                 MOV             X19, X1
.text:000000000004BF7C                 LDR             X8, [X21,#0x20]
.text:000000000004BF80                 LDR             X1, [X1,#0x20]
.text:000000000004BF84                 MOV             X2, SP
.text:000000000004BF88                 BLR             X8
.text:000000000004BF8C                 CBNZ            X0, loc_4BFDC
.text:000000000004BF90                 LDR             X8, [SP,#0x30+var_30]
.text:000000000004BF94                 CMP             X8, #3
.text:000000000004BF98                 B.EQ            loc_4BFBC
.text:000000000004BF9C                 CMP             X8, #5
.text:000000000004BFA0                 B.EQ            loc_4BFBC
.text:000000000004BFA4                 LDRB            W8, [X19,#0x29]
.text:000000000004BFA8                 TBNZ            W8, #1, loc_4BFBC
.text:000000000004BFAC                 MOV             X0, #0xFFFFFFFFFFFFFFE1
.text:000000000004BFB0                 B               loc_4BFDC
.text:000000000004BFB4 ; ---------------------------------------------------------------------------
.text:000000000004BFB4 loc_4BFB4                               ; CODE XREF: EAS_Resume+24↑j
.text:000000000004BFB4                 MOV             X0, #0xFFFFFFFFFFFFFFE3
.text:000000000004BFB8                 B               loc_4BFDC
.text:000000000004BFBC ; ---------------------------------------------------------------------------
.text:000000000004BFBC loc_4BFBC                               ; CODE XREF: EAS_Resume+48↑j
.text:000000000004BFBC                                         ; EAS_Resume+50↑j ...
.text:000000000004BFBC                 LDR             X8, [X21,#0x40]
.text:000000000004BFC0                 MOV             X10, #0xFFFFFFFFFFFFFFF8
.text:000000000004BFC4                 LDRB            W9, [X19,#0x29]
.text:000000000004BFC8                 CMP             X8, #0
.text:000000000004BFCC                 AND             W8, W9, #0xFFFFFFFD
.text:000000000004BFD0                 ORR             W8, W8, #8
.text:000000000004BFD4                 CSEL            X0, X10, XZR, EQ
.text:000000000004BFD8                 STRB            W8, [X19,#0x29]
.text:000000000004BFDC loc_4BFDC                               ; CODE XREF: EAS_Resume+3C↑j
.text:000000000004BFDC                                         ; EAS_Resume+60↑j ...
.text:000000000004BFDC                 LDR             X8, [X20,#0x28]
.text:000000000004BFE0                 LDR             X9, [SP,#0x30+var_28]
.text:000000000004BFE4                 CMP             X8, X9
.text:000000000004BFE8                 B.NE            loc_4C000
.text:000000000004BFEC                 LDP             X29, X30, [SP,#0x30+var_s0]
.text:000000000004BFF0                 LDP             X20, X19, [SP,#0x30+var_10]
.text:000000000004BFF4                 LDR             X21, [SP,#0x30+var_20]
.text:000000000004BFF8                 ADD             SP, SP, #0x40 ; '@'
.text:000000000004BFFC                 RET
.text:000000000004C000 ; ---------------------------------------------------------------------------
.text:000000000004C000 loc_4C000                               ; CODE XREF: EAS_Resume+98↑j
.text:000000000004C000                 BL              .__stack_chk_fail
.text:000000000004C000 ; } // starts at 4BF50
.text:000000000004C000 ; End of function EAS_Resume
.text:000000000004C000 ; ---------------------------------------------------------------------------
.text:000000000004C004                 ALIGN 8
.text:000000000004C008 ; =============== S U B R O U T I N E =======================================
.text:000000000004C008                 EXPORT EAS_GetParameter
.text:000000000004C008 EAS_GetParameter                        ; DATA XREF: LOAD:0000000000001860↑o
.text:000000000004C008 ; __unwind {
.text:000000000004C008                 CMP             X1, #8
.text:000000000004C00C                 B.GT            loc_4C030
.text:000000000004C010                 ADD             X8, X0, X1,LSL#4
.text:000000000004C014                 LDR             X0, [X8,#0x10]
.text:000000000004C018                 CBZ             X0, loc_4C030
.text:000000000004C01C                 LDR             X8, [X8,#8]
.text:000000000004C020                 MOV             X1, X2
.text:000000000004C024                 MOV             X2, X3
.text:000000000004C028                 LDR             X4, [X8,#0x18]
.text:000000000004C02C                 BR              X4
.text:000000000004C030 ; ---------------------------------------------------------------------------
.text:000000000004C030 loc_4C030                               ; CODE XREF: EAS_GetParameter+4↑j
.text:000000000004C030                                         ; EAS_GetParameter+10↑j
.text:000000000004C030                 MOV             X0, #0xFFFFFFFFFFFFFFFE
.text:000000000004C034                 RET
.text:000000000004C034 ; } // starts at 4C008
.text:000000000004C034 ; End of function EAS_GetParameter
.text:000000000004C038 ; =============== S U B R O U T I N E =======================================
.text:000000000004C038                 EXPORT EAS_SetParameter
.text:000000000004C038 EAS_SetParameter                        ; DATA XREF: LOAD:stru_C18↑o
.text:000000000004C038 ; __unwind {
.text:000000000004C038                 CMP             X1, #8
.text:000000000004C03C                 B.GT            loc_4C060
.text:000000000004C040                 ADD             X8, X0, X1,LSL#4
.text:000000000004C044                 LDR             X0, [X8,#0x10]
.text:000000000004C048                 CBZ             X0, loc_4C060
.text:000000000004C04C                 LDR             X8, [X8,#8]
.text:000000000004C050                 MOV             X1, X2
.text:000000000004C054                 MOV             X2, X3
.text:000000000004C058                 LDR             X4, [X8,#0x20]
.text:000000000004C05C                 BR              X4
.text:000000000004C060 ; ---------------------------------------------------------------------------
.text:000000000004C060 loc_4C060                               ; CODE XREF: EAS_SetParameter+4↑j
.text:000000000004C060                                         ; EAS_SetParameter+10↑j
.text:000000000004C060                 MOV             X0, #0xFFFFFFFFFFFFFFFE
.text:000000000004C064                 RET
.text:000000000004C064 ; } // starts at 4C038
.text:000000000004C064 ; End of function EAS_SetParameter
.text:000000000004C068 ; =============== S U B R O U T I N E =======================================
.text:000000000004C068 ; Attributes: bp-based frame
.text:000000000004C068                 EXPORT EAS_SetSoundLibrary
.text:000000000004C068 EAS_SetSoundLibrary                     ; DATA XREF: LOAD:00000000000013C8↑o
.text:000000000004C068 var_30          = -0x30
.text:000000000004C068 var_28          = -0x28
.text:000000000004C068 var_20          = -0x20
.text:000000000004C068 var_10          = -0x10
.text:000000000004C068 var_s0          =  0
.text:000000000004C068 ; __unwind {
.text:000000000004C068                 SUB             SP, SP, #0x40
.text:000000000004C06C                 STP             X22, X21, [SP,#0x30+var_20]
.text:000000000004C070                 STP             X20, X19, [SP,#0x30+var_10]
.text:000000000004C074                 STP             X29, X30, [SP,#0x30+var_s0]
.text:000000000004C078                 ADD             X29, SP, #0x30
.text:000000000004C07C                 MRS             X22, #3, c13, c0, #2
.text:000000000004C080                 MOV             X19, X2
.text:000000000004C084                 LDR             X8, [X22,#0x28]
.text:000000000004C088                 MOV             X20, X0
.text:000000000004C08C                 STR             X8, [SP,#0x30+var_28]
.text:000000000004C090                 CBZ             X1, loc_4C0C8
.text:000000000004C094                 LDR             X8, [X1]
.text:000000000004C098                 MOV             X21, X1
.text:000000000004C09C                 LDR             X1, [X1,#0x20]
.text:000000000004C0A0                 MOV             X2, SP
.text:000000000004C0A4                 MOV             X0, X20
.text:000000000004C0A8                 LDR             X8, [X8,#0x20]
.text:000000000004C0AC                 BLR             X8
.text:000000000004C0B0                 LDR             X8, [SP,#0x30+var_30]
.text:000000000004C0B4                 CMP             X0, #0
.text:000000000004C0B8                 CCMP            X8, #5, #0, EQ
.text:000000000004C0BC                 B.LE            loc_4C0D8
.text:000000000004C0C0                 MOV             X0, #0xFFFFFFFFFFFFFFE1
.text:000000000004C0C4                 B               loc_4C124
.text:000000000004C0C8 ; ---------------------------------------------------------------------------
.text:000000000004C0C8 loc_4C0C8                               ; CODE XREF: EAS_SetSoundLibrary+28↑j
.text:000000000004C0C8                 LDR             X0, [X20,#0x170]
.text:000000000004C0CC                 MOV             X1, X19
.text:000000000004C0D0                 BL              .VMSetGlobalEASLib
.text:000000000004C0D4                 B               loc_4C124
.text:000000000004C0D8 ; ---------------------------------------------------------------------------
.text:000000000004C0D8 loc_4C0D8                               ; CODE XREF: EAS_SetSoundLibrary+54↑j
.text:000000000004C0D8                 LDR             X9, [X21]
.text:000000000004C0DC                 LDR             X8, [X9,#0x50]
.text:000000000004C0E0                 CBZ             X8, loc_4C100
.text:000000000004C0E4                 LDR             X1, [X21,#0x20]
.text:000000000004C0E8                 MOV             X0, X20
.text:000000000004C0EC                 MOV             W2, #7
.text:000000000004C0F0                 MOV             X3, X19
.text:000000000004C0F4                 BLR             X8
.text:000000000004C0F8                 CBZ             X0, loc_4C124
.text:000000000004C0FC                 LDR             X9, [X21]
.text:000000000004C100 loc_4C100                               ; CODE XREF: EAS_SetSoundLibrary+78↑j
.text:000000000004C100                 LDR             X8, [X9,#0x58]
.text:000000000004C104                 CBZ             X8, loc_4C120
.text:000000000004C108                 LDR             X1, [X21,#0x20]
.text:000000000004C10C                 MOV             X3, SP
.text:000000000004C110                 MOV             X0, X20
.text:000000000004C114                 MOV             W2, #4
.text:000000000004C118                 BLR             X8
.text:000000000004C11C                 CBZ             X0, loc_4C148
.text:000000000004C120 loc_4C120                               ; CODE XREF: EAS_SetSoundLibrary+9C↑j
.text:000000000004C120                                         ; EAS_SetSoundLibrary+E4↓j
.text:000000000004C120                 MOV             X0, #0xFFFFFFFFFFFFFFE4
.text:000000000004C124 loc_4C124                               ; CODE XREF: EAS_SetSoundLibrary+5C↑j
.text:000000000004C124                                         ; EAS_SetSoundLibrary+6C↑j ...
.text:000000000004C124                 LDR             X8, [X22,#0x28]
.text:000000000004C128                 LDR             X9, [SP,#0x30+var_28]
.text:000000000004C12C                 CMP             X8, X9
.text:000000000004C130                 B.NE            loc_4C15C
.text:000000000004C134                 LDP             X29, X30, [SP,#0x30+var_s0]
.text:000000000004C138                 LDP             X20, X19, [SP,#0x30+var_10]
.text:000000000004C13C                 LDP             X22, X21, [SP,#0x30+var_20]
.text:000000000004C140                 ADD             SP, SP, #0x40 ; '@'
.text:000000000004C144                 RET
.text:000000000004C148 ; ---------------------------------------------------------------------------
.text:000000000004C148 loc_4C148                               ; CODE XREF: EAS_SetSoundLibrary+B4↑j
.text:000000000004C148                 LDR             X0, [SP,#0x30+var_30]
.text:000000000004C14C                 CBZ             X0, loc_4C120
.text:000000000004C150                 MOV             X1, X19
.text:000000000004C154                 BL              .VMSetEASLib
.text:000000000004C158                 B               loc_4C124
.text:000000000004C15C ; ---------------------------------------------------------------------------
.text:000000000004C15C loc_4C15C                               ; CODE XREF: EAS_SetSoundLibrary+C8↑j
.text:000000000004C15C                 BL              .__stack_chk_fail
.text:000000000004C15C ; } // starts at 4C068
.text:000000000004C15C ; End of function EAS_SetSoundLibrary
.text:000000000004C160 ; =============== S U B R O U T I N E =======================================
.text:000000000004C160                 EXPORT EAS_SetHeaderSearchFlag
.text:000000000004C160 EAS_SetHeaderSearchFlag                 ; DATA XREF: LOAD:0000000000000B10↑o
.text:000000000004C160 ; __unwind {
.text:000000000004C160                 MOV             X8, X0
.text:000000000004C164                 MOV             X0, XZR
.text:000000000004C168                 STRB            W1, [X8,#0x18C]
.text:000000000004C16C                 RET
.text:000000000004C16C ; } // starts at 4C160
.text:000000000004C16C ; End of function EAS_SetHeaderSearchFlag
.text:000000000004C170 ; =============== S U B R O U T I N E =======================================
.text:000000000004C170 ; Attributes: bp-based frame
.text:000000000004C170                 EXPORT EAS_SetPlayMode
.text:000000000004C170 EAS_SetPlayMode                         ; DATA XREF: LOAD:00000000000009C0↑o
.text:000000000004C170 var_28          = -0x28
.text:000000000004C170 var_20          = -0x20
.text:000000000004C170 var_10          = -0x10
.text:000000000004C170 var_s0          =  0
.text:000000000004C170 ; __unwind {
.text:000000000004C170                 SUB             SP, SP, #0x40
.text:000000000004C174                 STR             X21, [SP,#0x30+var_20]
.text:000000000004C178                 STP             X20, X19, [SP,#0x30+var_10]
.text:000000000004C17C                 STP             X29, X30, [SP,#0x30+var_s0]
.text:000000000004C180                 ADD             X29, SP, #0x30
.text:000000000004C184                 MRS             X21, #3, c13, c0, #2
.text:000000000004C188                 MOV             X20, X1
.text:000000000004C18C                 LDR             X8, [X21,#0x28]
.text:000000000004C190                 MOV             X19, X0
.text:000000000004C194                 STR             X8, [SP,#0x30+var_28]
.text:000000000004C198                 LDR             X9, [X1]
.text:000000000004C19C                 LDR             X8, [X9,#0x50]
.text:000000000004C1A0                 CBZ             X8, loc_4C1C0
.text:000000000004C1A4                 LDR             X1, [X20,#0x20]
.text:000000000004C1A8                 MOV             X3, X2
.text:000000000004C1AC                 MOV             W2, #0x13
.text:000000000004C1B0                 MOV             X0, X19
.text:000000000004C1B4                 BLR             X8
.text:000000000004C1B8                 CBZ             X0, loc_4C1E0
.text:000000000004C1BC                 LDR             X9, [X20]
.text:000000000004C1C0 loc_4C1C0                               ; CODE XREF: EAS_SetPlayMode+30↑j
.text:000000000004C1C0                 LDR             X8, [X9,#0x58]
.text:000000000004C1C4                 CBZ             X8, loc_4C1DC
.text:000000000004C1C8                 LDR             X1, [X20,#0x20]
.text:000000000004C1CC                 MOV             X3, SP
.text:000000000004C1D0                 MOV             X0, X19
.text:000000000004C1D4                 MOV             W2, #4
.text:000000000004C1D8                 BLR             X8
.text:000000000004C1DC loc_4C1DC                               ; CODE XREF: EAS_SetPlayMode+54↑j
.text:000000000004C1DC                 MOV             X0, #0xFFFFFFFFFFFFFFE4
.text:000000000004C1E0 loc_4C1E0                               ; CODE XREF: EAS_SetPlayMode+48↑j
.text:000000000004C1E0                 LDR             X8, [X21,#0x28]
.text:000000000004C1E4                 LDR             X9, [SP,#0x30+var_28]
.text:000000000004C1E8                 CMP             X8, X9
.text:000000000004C1EC                 B.NE            loc_4C204
.text:000000000004C1F0                 LDP             X29, X30, [SP,#0x30+var_s0]
.text:000000000004C1F4                 LDP             X20, X19, [SP,#0x30+var_10]
.text:000000000004C1F8                 LDR             X21, [SP,#0x30+var_20]
.text:000000000004C1FC                 ADD             SP, SP, #0x40 ; '@'
.text:000000000004C200                 RET
.text:000000000004C204 ; ---------------------------------------------------------------------------
.text:000000000004C204 loc_4C204                               ; CODE XREF: EAS_SetPlayMode+7C↑j
.text:000000000004C204                 BL              .__stack_chk_fail
.text:000000000004C204 ; } // starts at 4C170
.text:000000000004C204 ; End of function EAS_SetPlayMode
.text:000000000004C208 ; =============== S U B R O U T I N E =======================================
.text:000000000004C208 ; Attributes: bp-based frame
.text:000000000004C208                 EXPORT EAS_LoadDLSCollection
.text:000000000004C208 EAS_LoadDLSCollection                   ; DATA XREF: LOAD:0000000000001788↑o
.text:000000000004C208 var_38          = -0x38
.text:000000000004C208 var_30          = -0x30
.text:000000000004C208 var_28          = -0x28
.text:000000000004C208 var_20          = -0x20
.text:000000000004C208 var_10          = -0x10
.text:000000000004C208 var_s0          =  0
.text:000000000004C208 ; __unwind {
.text:000000000004C208                 SUB             SP, SP, #0x50
.text:000000000004C20C                 STP             X22, X21, [SP,#0x40+var_20]
.text:000000000004C210                 STP             X20, X19, [SP,#0x40+var_10]
.text:000000000004C214                 STP             X29, X30, [SP,#0x40+var_s0]
.text:000000000004C218                 ADD             X29, SP, #0x40
.text:000000000004C21C                 MRS             X22, #3, c13, c0, #2
.text:000000000004C220                 MOV             X21, X2
.text:000000000004C224                 LDR             X8, [X22,#0x28]
.text:000000000004C228                 MOV             X20, X1
.text:000000000004C22C                 MOV             X19, X0
.text:000000000004C230                 STR             X8, [SP,#0x40+var_28]
.text:000000000004C234                 CBZ             X1, loc_4C268
.text:000000000004C238                 LDR             X8, [X20]
.text:000000000004C23C                 ADD             X2, SP, #0x40+var_30
.text:000000000004C240                 LDR             X1, [X20,#0x20]
.text:000000000004C244                 MOV             X0, X19
.text:000000000004C248                 LDR             X8, [X8,#0x20]
.text:000000000004C24C                 BLR             X8
.text:000000000004C250                 LDR             X8, [SP,#0x40+var_30]
.text:000000000004C254                 CMP             X0, #0
.text:000000000004C258                 CCMP            X8, #5, #0, EQ
.text:000000000004C25C                 B.LE            loc_4C268
.text:000000000004C260                 MOV             X21, #0xFFFFFFFFFFFFFFE1
.text:000000000004C264                 B               loc_4C2DC
.text:000000000004C268 ; ---------------------------------------------------------------------------
.text:000000000004C268 loc_4C268                               ; CODE XREF: EAS_LoadDLSCollection+2C↑j
.text:000000000004C268                                         ; EAS_LoadDLSCollection+54↑j
.text:000000000004C268                 LDR             X0, [X19]
.text:000000000004C26C                 ADD             X2, SP, #0x40+var_30
.text:000000000004C270                 MOV             X1, X21
.text:000000000004C274                 MOV             W3, #1
.text:000000000004C278                 BL              .EAS_HWOpenFile
.text:000000000004C27C                 MOV             X21, X0
.text:000000000004C280                 CBNZ            X0, loc_4C2DC
.text:000000000004C284                 LDR             X0, [X19]
.text:000000000004C288                 ADD             X3, SP, #0x40+var_38
.text:000000000004C28C                 LDR             X1, [SP,#0x40+var_30]
.text:000000000004C290                 MOV             X2, XZR
.text:000000000004C294                 BL              .DLSParser
.text:000000000004C298                 LDR             X8, [X19]
.text:000000000004C29C                 MOV             X21, X0
.text:000000000004C2A0                 LDR             X1, [SP,#0x40+var_30]
.text:000000000004C2A4                 MOV             X0, X8
.text:000000000004C2A8                 BL              .EAS_HWCloseFile
.text:000000000004C2AC                 CBNZ            X21, loc_4C2DC
.text:000000000004C2B0                 CBZ             X20, loc_4C2CC
.text:000000000004C2B4                 LDR             X3, [SP,#0x40+var_38]
.text:000000000004C2B8                 MOV             X0, X19
.text:000000000004C2BC                 MOV             X1, X20
.text:000000000004C2C0                 MOV             W2, #6
.text:000000000004C2C4                 BL              .EAS_IntSetStrmParam
.text:000000000004C2C8                 B               loc_4C2D8
.text:000000000004C2CC ; ---------------------------------------------------------------------------
.text:000000000004C2CC loc_4C2CC                               ; CODE XREF: EAS_LoadDLSCollection+A8↑j
.text:000000000004C2CC                 LDR             X1, [SP,#0x40+var_38]
.text:000000000004C2D0                 MOV             X0, X19
.text:000000000004C2D4                 BL              .VMSetGlobalDLSLib
.text:000000000004C2D8 loc_4C2D8                               ; CODE XREF: EAS_LoadDLSCollection+C0↑j
.text:000000000004C2D8                 MOV             X21, X0
.text:000000000004C2DC loc_4C2DC                               ; CODE XREF: EAS_LoadDLSCollection+5C↑j
.text:000000000004C2DC                                         ; EAS_LoadDLSCollection+78↑j ...
.text:000000000004C2DC                 LDR             X8, [X22,#0x28]
.text:000000000004C2E0                 LDR             X9, [SP,#0x40+var_28]
.text:000000000004C2E4                 CMP             X8, X9
.text:000000000004C2E8                 B.NE            loc_4C304
.text:000000000004C2EC                 MOV             X0, X21
.text:000000000004C2F0                 LDP             X29, X30, [SP,#0x40+var_s0]
.text:000000000004C2F4                 LDP             X20, X19, [SP,#0x40+var_10]
.text:000000000004C2F8                 LDP             X22, X21, [SP,#0x40+var_20]
.text:000000000004C2FC                 ADD             SP, SP, #0x50 ; 'P'
.text:000000000004C300                 RET
.text:000000000004C304 ; ---------------------------------------------------------------------------
.text:000000000004C304 loc_4C304                               ; CODE XREF: EAS_LoadDLSCollection+E0↑j
.text:000000000004C304                 BL              .__stack_chk_fail
.text:000000000004C304 ; } // starts at 4C208
.text:000000000004C304 ; End of function EAS_LoadDLSCollection
.text:000000000004C308 ; =============== S U B R O U T I N E =======================================
.text:000000000004C308 ; Attributes: bp-based frame
.text:000000000004C308                 EXPORT EAS_SearchFile
.text:000000000004C308 EAS_SearchFile                          ; CODE XREF: .EAS_SearchFile+C↓j
.text:000000000004C308                                         ; DATA XREF: LOAD:0000000000000858↑o ...
.text:000000000004C308 var_4C          = -0x4C
.text:000000000004C308 var_48          = -0x48
.text:000000000004C308 var_40          = -0x40
.text:000000000004C308 var_30          = -0x30
.text:000000000004C308 var_20          = -0x20
.text:000000000004C308 var_10          = -0x10
.text:000000000004C308 var_s0          =  0
.text:000000000004C308 ; __unwind {
.text:000000000004C308                 SUB             SP, SP, #0x60
.text:000000000004C30C                 STR             X25, [SP,#0x50+var_40]
.text:000000000004C310                 STP             X24, X23, [SP,#0x50+var_30]
.text:000000000004C314                 STP             X22, X21, [SP,#0x50+var_20]
.text:000000000004C318                 STP             X20, X19, [SP,#0x50+var_10]
.text:000000000004C31C                 STP             X29, X30, [SP,#0x50+var_s0]
.text:000000000004C320                 ADD             X29, SP, #0x50
.text:000000000004C324                 MRS             X24, #3, c13, c0, #2
.text:000000000004C328                 MOV             X9, #0xFFFFFFFFFFFFFFFF
.text:000000000004C32C                 LDR             X8, [X24,#0x28]
.text:000000000004C330                 MOV             X23, X0
.text:000000000004C334                 MOV             X21, X2
.text:000000000004C338                 ADD             X2, SP, #0x50+var_4C
.text:000000000004C33C                 MOV             X19, X4
.text:000000000004C340                 STR             X8, [SP,#0x50+var_48]
.text:000000000004C344                 MOV             X20, X3
.text:000000000004C348                 STR             X9, [X4]
.text:000000000004C34C                 MOV             X22, X1
.text:000000000004C350                 LDR             X0, [X0]
.text:000000000004C354                 BL              .EAS_HWGetByte
.text:000000000004C358                 CBNZ            X0, loc_4C3BC
.text:000000000004C35C                 MOV             W25, WZR
.text:000000000004C360 loc_4C360                               ; CODE XREF: EAS_SearchFile+8C↓j
.text:000000000004C360                 LDRB            W8, [SP,#0x50+var_4C]
.text:000000000004C364                 LDRB            W9, [X21,W25,SXTW]
.text:000000000004C368                 CMP             W8, W9
.text:000000000004C36C                 B.NE            loc_4C380
.text:000000000004C370                 ADD             W25, W25, #1
.text:000000000004C374                 CMP             W25, #4
.text:000000000004C378                 B.NE            loc_4C384
.text:000000000004C37C                 B               loc_4C39C
.text:000000000004C380 ; ---------------------------------------------------------------------------
.text:000000000004C380 loc_4C380                               ; CODE XREF: EAS_SearchFile+64↑j
.text:000000000004C380                 MOV             W25, WZR
.text:000000000004C384 loc_4C384                               ; CODE XREF: EAS_SearchFile+70↑j
.text:000000000004C384                 LDR             X0, [X23]
.text:000000000004C388                 ADD             X2, SP, #0x50+var_4C
.text:000000000004C38C                 MOV             X1, X22
.text:000000000004C390                 BL              .EAS_HWGetByte
.text:000000000004C394                 CBZ             X0, loc_4C360
.text:000000000004C398                 B               loc_4C3BC
.text:000000000004C39C ; ---------------------------------------------------------------------------
.text:000000000004C39C loc_4C39C                               ; CODE XREF: EAS_SearchFile+74↑j
.text:000000000004C39C                 LDR             X0, [X23]
.text:000000000004C3A0                 MOV             X1, X22
.text:000000000004C3A4                 MOV             X2, X19
.text:000000000004C3A8                 BL              .EAS_HWFilePos
.text:000000000004C3AC                 CBNZ            X0, loc_4C3BC
.text:000000000004C3B0                 LDR             X8, [X19]
.text:000000000004C3B4                 SUB             X8, X8, X20
.text:000000000004C3B8                 STR             X8, [X19]
.text:000000000004C3BC loc_4C3BC                               ; CODE XREF: EAS_SearchFile+50↑j
.text:000000000004C3BC                                         ; EAS_SearchFile+90↑j ...
.text:000000000004C3BC                 LDR             X8, [X24,#0x28]
.text:000000000004C3C0                 LDR             X9, [SP,#0x50+var_48]
.text:000000000004C3C4                 CMP             X8, X9
.text:000000000004C3C8                 B.NE            loc_4C3E8
.text:000000000004C3CC                 LDP             X29, X30, [SP,#0x50+var_s0]
.text:000000000004C3D0                 LDP             X20, X19, [SP,#0x50+var_10]
.text:000000000004C3D4                 LDP             X22, X21, [SP,#0x50+var_20]
.text:000000000004C3D8                 LDP             X24, X23, [SP,#0x50+var_30]
.text:000000000004C3DC                 LDR             X25, [SP,#0x50+var_40]
.text:000000000004C3E0                 ADD             SP, SP, #0x60 ; '`'
.text:000000000004C3E4                 RET
.text:000000000004C3E8 ; ---------------------------------------------------------------------------
.text:000000000004C3E8 loc_4C3E8                               ; CODE XREF: EAS_SearchFile+C0↑j
.text:000000000004C3E8                 BL              .__stack_chk_fail
.text:000000000004C3E8 ; } // starts at 4C308
.text:000000000004C3E8 ; End of function EAS_SearchFile
.text:000000000004C3E8 ; ---------------------------------------------------------------------------
.text:000000000004C3EC                 ALIGN 0x10
.text:000000000004C3F0 ; =============== S U B R O U T I N E =======================================
.text:000000000004C3F0 ; Attributes: bp-based frame
.text:000000000004C3F0 sub_4C3F0                               ; DATA XREF: .data.rel.ro:EAS_Reverb↓o
.text:000000000004C3F0 var_20          = -0x20
.text:000000000004C3F0 var_10          = -0x10
.text:000000000004C3F0 var_s0          =  0
.text:000000000004C3F0 ; __unwind {
.text:000000000004C3F0                 STP             X22, X21, [SP,#-0x10+var_20]!
.text:000000000004C3F4                 STP             X20, X19, [SP,#0x20+var_10]
.text:000000000004C3F8                 STP             X29, X30, [SP,#0x20+var_s0]
.text:000000000004C3FC                 ADD             X29, SP, #0x20
.text:000000000004C400                 LDRB            W8, [X0,#0x18B]
.text:000000000004C404                 MOV             X19, X1
.text:000000000004C408                 CBZ             W8, loc_4C6CC
.text:000000000004C40C                 MOV             W0, #2
.text:000000000004C410                 BL              .EAS_CMEnumFXData
.text:000000000004C414                 MOV             X20, X0
.text:000000000004C418                 CBZ             X0, loc_4C6E0
.text:000000000004C41C loc_4C41C                               ; CODE XREF: sub_4C3F0+2EC↓j
.text:000000000004C41C                 MOV             W2, #0x2240
.text:000000000004C420                 MOV             X0, X20
.text:000000000004C424                 MOV             W1, WZR
.text:000000000004C428                 BL              .EAS_HWMemSet
.text:000000000004C42C                 ADRP            X8, #xmmword_4810@PAGE
.text:000000000004C430                 ADRP            X10, #xmmword_4880@PAGE
.text:000000000004C434                 ADRP            X11, #xmmword_47D0@PAGE
.text:000000000004C438                 LDR             Q0, [X8,#xmmword_4810@PAGEOFF]
.text:000000000004C43C                 ADRP            X8, #xmmword_47E0@PAGE
.text:000000000004C440                 MOV             W9, #0x20FA
.text:000000000004C444                 LDR             Q1, [X10,#xmmword_4880@PAGEOFF]
.text:000000000004C448                 LDR             Q2, [X11,#xmmword_47D0@PAGEOFF]
.text:000000000004C44C                 MOV             W11, #0x212A
.text:000000000004C450                 LDR             Q3, [X8,#xmmword_47E0@PAGEOFF]
.text:000000000004C454                 ADRP            X8, #xmmword_47B0@PAGE
.text:000000000004C458                 STR             Q0, [X20,X9]
.text:000000000004C45C                 ADRP            X9, #xmmword_4860@PAGE
.text:000000000004C460                 STR             Q1, [X20,X11]
.text:000000000004C464                 MOV             W11, #0x217A
.text:000000000004C468                 LDR             Q0, [X8,#xmmword_47B0@PAGEOFF]
.text:000000000004C46C                 ADRP            X8, #xmmword_4850@PAGE
.text:000000000004C470                 MOV             W10, #0x210A
.text:000000000004C474                 LDR             Q1, [X9,#xmmword_4860@PAGEOFF]
.text:000000000004C478                 MOV             W9, #0x219A
.text:000000000004C47C                 STR             Q3, [X20,X11]
.text:000000000004C480                 MOV             W11, #0x211A
.text:000000000004C484                 LDR             Q3, [X8,#xmmword_4850@PAGEOFF]
.text:000000000004C488                 MOV             W8, #0x213A
.text:000000000004C48C                 STR             Q0, [X20,X9]
.text:000000000004C490                 MOV             W9, #0x21CA
.text:000000000004C494                 STR             Q2, [X20,X10]
.text:000000000004C498                 ADRP            X10, #xmmword_4890@PAGE
.text:000000000004C49C                 STR             Q1, [X20,X11]
.text:000000000004C4A0                 MOV             W11, #0x459
.text:000000000004C4A4                 STR             Q3, [X20,X9]
.text:000000000004C4A8                 MOV             W9, #0x2142
.text:000000000004C4AC                 LDR             Q0, [X10,#xmmword_4890@PAGEOFF]
.text:000000000004C4B0                 MOV             W10, #0x213C
.text:000000000004C4B4                 STRH            W11, [X20,X8]
.text:000000000004C4B8                 MOV             W8, #0x21EA
.text:000000000004C4BC                 STR             XZR, [X20,X9]
.text:000000000004C4C0                 ADRP            X9, #xmmword_47F0@PAGE
.text:000000000004C4C4                 STR             XZR, [X20,X10]
.text:000000000004C4C8                 MOV             W10, #0x215A
.text:000000000004C4CC                 STR             Q0, [X20,X8]
.text:000000000004C4D0                 MOV             W8, #0x216A
.text:000000000004C4D4                 LDR             Q0, [X9,#xmmword_47F0@PAGEOFF]
.text:000000000004C4D8                 MOV             W9, #0x21DA
.text:000000000004C4DC                 STR             Q2, [X20,X10]
.text:000000000004C4E0                 MOV             W10, #0x222A
.text:000000000004C4E4                 STR             Q1, [X20,X8]
.text:000000000004C4E8                 MOV             W21, #0x218A
.text:000000000004C4EC                 MOV             W8, #0x2192
.text:000000000004C4F0                 STRH            W11, [X20,X9]
.text:000000000004C4F4                 STRH            W11, [X20,X10]
.text:000000000004C4F8                 MOV             W9, #0x218C
.text:000000000004C4FC                 MOV             W10, #0x21AA
.text:000000000004C500                 STRH            W11, [X20,X21]
.text:000000000004C504                 STR             XZR, [X20,X8]
.text:000000000004C508                 MOV             W8, #0x21BA
.text:000000000004C50C                 STR             XZR, [X20,X9]
.text:000000000004C510                 MOV             W9, #0x21FA
.text:000000000004C514                 STR             Q2, [X20,X10]
.text:000000000004C518                 ADRP            X10, #xmmword_4830@PAGE
.text:000000000004C51C                 STR             Q1, [X20,X8]
.text:000000000004C520                 MOV             W8, #0x21E2
.text:000000000004C524                 STR             Q2, [X20,X9]
.text:000000000004C528                 MOV             W9, #0x21DC
.text:000000000004C52C                 LDR             Q2, [X10,#xmmword_4830@PAGEOFF]
.text:000000000004C530                 MOV             W10, #0x220A
.text:000000000004C534                 STR             XZR, [X20,X8]
.text:000000000004C538                 MOV             W8, #0x221A
.text:000000000004C53C                 STR             XZR, [X20,X9]
.text:000000000004C540                 MOV             W9, #0x2232
.text:000000000004C544                 STR             Q1, [X20,X10]
.text:000000000004C548                 MOV             W10, #0x222C
.text:000000000004C54C                 STR             Q2, [X20,X8]
.text:000000000004C550                 ADRP            X8, #xmmword_4800@PAGE
.text:000000000004C554                 MOV             W22, #0x214A
.text:000000000004C558                 STR             XZR, [X20,X9]
.text:000000000004C55C                 STR             XZR, [X20,X10]
.text:000000000004C560                 MOV             W9, #0x80
.text:000000000004C564                 LDR             Q1, [X8,#xmmword_4800@PAGEOFF]
.text:000000000004C568                 MOV             W8, #0x1BE
.text:000000000004C56C                 STR             Q0, [X20,X22]
.text:000000000004C570                 ADD             X0, X20, #0xAA ; s
.text:000000000004C574                 STRH            W9, [X20,#4]
.text:000000000004C578                 MOV             W9, #0x91A
.text:000000000004C57C                 STRH            W8, [X20,#0x3A]
.text:000000000004C580                 MOV             X8, #0x89E089D
.text:000000000004C588                 STUR            Q1, [X20,#0x2A]
.text:000000000004C58C                 MOVK            X8, #0x8000,LSL#32
.text:000000000004C590                 STRH            W9, [X20,#0x3C]
.text:000000000004C594                 MOVK            X8, #0xF0F,LSL#48
.text:000000000004C598                 STRH            WZR, [X20,#0x42]
.text:000000000004C59C                 MOV             W9, #0xE35
.text:000000000004C5A0                 STRH            WZR, [X20,#0x48]
.text:000000000004C5A4                 MOV             W1, WZR ; c
.text:000000000004C5A8                 STUR            XZR, [X20,#0x4A]
.text:000000000004C5AC                 STUR            X8, [X20,#0x56]
.text:000000000004C5B0                 MOV             W8, #0xE28
.text:000000000004C5B4                 STRH            W9, [X20,#0x40]
.text:000000000004C5B8                 MOV             W9, #0x85D
.text:000000000004C5BC                 MOV             W2, #0x2000 ; n
.text:000000000004C5C0                 STRH            WZR, [X20,#0x28]
.text:000000000004C5C4                 STRH            W8, [X20,#0x46]
.text:000000000004C5C8                 ADRP            X8, #qword_55B0@PAGE
.text:000000000004C5CC                 STRH            W9, [X20,#0x3E]
.text:000000000004C5D0                 MOV             W9, #0x7019
.text:000000000004C5D4                 STRH            WZR, [X20,#0x76]
.text:000000000004C5D8                 LDR             D0, [X8,#qword_55B0@PAGEOFF]
.text:000000000004C5DC                 MOV             W8, #0xE4C
.text:000000000004C5E0                 STRH            W9, [X20,#0x5E]
.text:000000000004C5E4                 MOV             W9, #1
.text:000000000004C5E8                 STR             WZR, [X20,#0x84]
.text:000000000004C5EC                 STRH            W8, [X20,#0x44]
.text:000000000004C5F0                 MOV             W8, #2
.text:000000000004C5F4                 STRH            W9, [X20,#0x6E]
.text:000000000004C5F8                 MOV             W9, #0x1333
.text:000000000004C5FC                 STUR            D0, [X20,#0x64]
.text:000000000004C600                 STRH            W8, [X20,#0x6C]
.text:000000000004C604                 MOV             W8, #0x6CCC
.text:000000000004C608                 STRH            W9, [X20,#0x7A]
.text:000000000004C60C                 STUR            XZR, [X20,#0x7C]
.text:000000000004C610                 STRH            W8, [X20,#0x78]
.text:000000000004C614                 STR             XZR, [X20,#0x88]
.text:000000000004C618                 STRH            W9, [X20,#0x94]
.text:000000000004C61C                 STRH            W8, [X20,#0x92]
.text:000000000004C620                 STRH            WZR, [X20,#0x90]
.text:000000000004C624                 STUR            WZR, [X20,#0x9E]
.text:000000000004C628                 STUR            XZR, [X20,#0x96]
.text:000000000004C62C                 STUR            XZR, [X20,#0xA2]
.text:000000000004C630                 BL              .memset
.text:000000000004C634                 MOV             W9, #0x214C
.text:000000000004C638                 LDRH            W8, [X20,X22]
.text:000000000004C63C                 MOV             W10, #0x214E
.text:000000000004C640                 LDR             W11, [X20,#0x2150]
.text:000000000004C644                 MOV             W12, #0x2184
.text:000000000004C648                 LDRH            W9, [X20,X9]
.text:000000000004C64C                 MOV             X0, XZR
.text:000000000004C650                 LDRH            W10, [X20,X10]
.text:000000000004C654                 STRH            W8, [X20,#0x54]
.text:000000000004C658                 MOV             W8, #0x2180
.text:000000000004C65C                 STR             W11, [X20,#0x70]
.text:000000000004C660                 MOV             W11, #0x2182
.text:000000000004C664                 STRH            W9, [X20,#0x52]
.text:000000000004C668                 MOV             W9, #0x2186
.text:000000000004C66C                 STRH            W10, [X20,#0x74]
.text:000000000004C670                 LDRH            W8, [X20,X8]
.text:000000000004C674                 LDRSH           W10, [X20,X11]
.text:000000000004C678                 MOV             W11, #0x5622
.text:000000000004C67C                 LDRSH           W9, [X20,X9]
.text:000000000004C680                 LDRSH           W13, [X20,X21]
.text:000000000004C684                 STRH            W8, [X20,#0x60]
.text:000000000004C688                 MUL             W8, W10, W11
.text:000000000004C68C                 MOV             W10, #0x2188
.text:000000000004C690                 MUL             W9, W9, W11
.text:000000000004C694                 LDRH            W12, [X20,X12]
.text:000000000004C698                 MUL             W11, W13, W11
.text:000000000004C69C                 LSR             W8, W8, #0x10
.text:000000000004C6A0                 LDRH            W10, [X20,X10]
.text:000000000004C6A4                 LSR             W9, W9, #0x10
.text:000000000004C6A8                 STRH            W8, [X20,#0x56]
.text:000000000004C6AC                 LSR             W8, W11, #0x10
.text:000000000004C6B0                 ADD             W8, W8, #0x1BE
.text:000000000004C6B4                 STRH            W12, [X20,#0x2E]
.text:000000000004C6B8                 STRH            W9, [X20,#0x2C]
.text:000000000004C6BC                 STRH            W10, [X20,#0x38]
.text:000000000004C6C0                 STRH            W8, [X20,#0x36]
.text:000000000004C6C4                 STR             X20, [X19]
.text:000000000004C6C8                 B               loc_4C6E4
.text:000000000004C6CC ; ---------------------------------------------------------------------------
.text:000000000004C6CC loc_4C6CC                               ; CODE XREF: sub_4C3F0+18↑j
.text:000000000004C6CC                 LDR             X0, [X0]
.text:000000000004C6D0                 MOV             W1, #0x2240
.text:000000000004C6D4                 BL              .EAS_HWMalloc
.text:000000000004C6D8                 MOV             X20, X0
.text:000000000004C6DC                 CBNZ            X0, loc_4C41C
.text:000000000004C6E0 loc_4C6E0                               ; CODE XREF: sub_4C3F0+28↑j
.text:000000000004C6E0                 MOV             X0, #0xFFFFFFFFFFFFFFFD
.text:000000000004C6E4 loc_4C6E4                               ; CODE XREF: sub_4C3F0+2D8↑j
.text:000000000004C6E4                 LDP             X29, X30, [SP,#0x20+var_s0]
.text:000000000004C6E8                 LDP             X20, X19, [SP,#0x20+var_10]
.text:000000000004C6EC                 LDP             X22, X21, [SP+0x20+var_20],#0x30
.text:000000000004C6F0                 RET
.text:000000000004C6F0 ; } // starts at 4C3F0
.text:000000000004C6F0 ; End of function sub_4C3F0
.text:000000000004C6F0 ; ---------------------------------------------------------------------------
.text:000000000004C6F4                 ALIGN 8
.text:000000000004C6F8 ; =============== S U B R O U T I N E =======================================
.text:000000000004C6F8 sub_4C6F8                               ; DATA XREF: .data.rel.ro:00000000000581F8↓o
.text:000000000004C6F8 ; __unwind {
.text:000000000004C6F8                 LDR             W8, [X0,#0x68]
.text:000000000004C6FC                 CBZ             W8, loc_4C71C
.text:000000000004C700 loc_4C700                               ; CODE XREF: sub_4C6F8+38↓j
.text:000000000004C700                 CMP             X1, X2
.text:000000000004C704                 B.EQ            locret_4CE64
.text:000000000004C708                 LSL             X8, X3, #2
.text:000000000004C70C                 MOV             X0, X1
.text:000000000004C710                 MOV             X1, X2
.text:000000000004C714                 MOV             X2, X8
.text:000000000004C718                 B               .EAS_HWMemCpy
.text:000000000004C71C ; ---------------------------------------------------------------------------
.text:000000000004C71C loc_4C71C                               ; CODE XREF: sub_4C6F8+4↑j
.text:000000000004C71C                 LDRH            W8, [X0,#0x70]
.text:000000000004C720                 CBNZ            W8, loc_4C734
.text:000000000004C724                 LDRH            W8, [X0,#0x72]
.text:000000000004C728                 MOV             W9, #0x7FFF
.text:000000000004C72C                 CMP             W8, W9
.text:000000000004C730                 B.EQ            loc_4C700
.text:000000000004C734 loc_4C734                               ; CODE XREF: sub_4C6F8+28↑j
.text:000000000004C734                 LDRH            W8, [X0,#0x6E]
.text:000000000004C738                 LDRH            W9, [X0,#0x6C]
.text:000000000004C73C                 CMP             W8, W9
.text:000000000004C740                 B.NE            loc_4C74C
.text:000000000004C744                 LDRH            W9, [X0,#0x56]
.text:000000000004C748                 B               loc_4C808
.text:000000000004C74C ; ---------------------------------------------------------------------------
.text:000000000004C74C loc_4C74C                               ; CODE XREF: sub_4C6F8+48↑j
.text:000000000004C74C                 MOV             W9, #0x50 ; 'P'
.text:000000000004C750                 LDRH            W13, [X0,#0x30]
.text:000000000004C754                 SXTH            X10, W8
.text:000000000004C758                 LDRH            W4, [X0,#0x3A]
.text:000000000004C75C                 NOP
.text:000000000004C760                 MADD            X10, X10, X9, X0
.text:000000000004C764                 MOV             W9, #0x20FC
.text:000000000004C768                 MOV             W11, #0x2102
.text:000000000004C76C                 MOV             W12, #0x20FA
.text:000000000004C770                 MOV             W14, #0x20FE
.text:000000000004C774                 LDRH            W9, [X10,X9]
.text:000000000004C778                 MOV             W16, #0x5622
.text:000000000004C77C                 MOV             W15, #0x213A
.text:000000000004C780                 STRH            W9, [X0,#0x52]
.text:000000000004C784                 LDRH            W9, [X10,X11]
.text:000000000004C788                 MOV             W11, #0x2132
.text:000000000004C78C                 STRH            W9, [X0,#0x72]
.text:000000000004C790                 MOV             W9, #0x2100
.text:000000000004C794                 LDRSH           W11, [X10,X11]
.text:000000000004C798                 LDRH            W12, [X10,X12]
.text:000000000004C79C                 LDRH            W14, [X10,X14]
.text:000000000004C7A0                 LDRH            W17, [X10,X9]
.text:000000000004C7A4                 MUL             W9, W11, W16
.text:000000000004C7A8                 MOV             W11, #0x2136
.text:000000000004C7AC                 LDRSH           W15, [X10,X15]
.text:000000000004C7B0                 LSR             W9, W9, #0x10
.text:000000000004C7B4                 STRH            W12, [X0,#0x54]
.text:000000000004C7B8                 STRH            W14, [X0,#0x74]
.text:000000000004C7BC                 MOV             W12, #0x2138
.text:000000000004C7C0                 STRH            W17, [X0,#0x70]
.text:000000000004C7C4                 MOV             W14, #0x2130
.text:000000000004C7C8                 STRH            W9, [X0,#0x56]
.text:000000000004C7CC                 MOV             W17, #0x2134
.text:000000000004C7D0                 LDRSH           W11, [X10,X11]
.text:000000000004C7D4                 MUL             W15, W15, W16
.text:000000000004C7D8                 LDRH            W12, [X10,X12]
.text:000000000004C7DC                 LDRH            W14, [X10,X14]
.text:000000000004C7E0                 LDRH            W10, [X10,X17]
.text:000000000004C7E4                 MUL             W11, W11, W16
.text:000000000004C7E8                 STRH            W8, [X0,#0x6C]
.text:000000000004C7EC                 STRH            W12, [X0,#0x38]
.text:000000000004C7F0                 ADD             W12, W4, W15,LSR#16
.text:000000000004C7F4                 STRH            W14, [X0,#0x60]
.text:000000000004C7F8                 ADD             W11, W13, W11,LSR#16
.text:000000000004C7FC                 STRH            W10, [X0,#0x2E]
.text:000000000004C800                 STRH            W12, [X0,#0x36]
.text:000000000004C804                 STRH            W11, [X0,#0x2C]
.text:000000000004C808 loc_4C808                               ; CODE XREF: sub_4C6F8+50↑j
.text:000000000004C808                 LDRH            W10, [X0,#0x58]
.text:000000000004C80C                 CMP             W10, W9
.text:000000000004C810                 B.CS            loc_4C828
.text:000000000004C814                 LDRH            W8, [X0,#0x5C]
.text:000000000004C818                 LDRH            W9, [X0,#0x5A]
.text:000000000004C81C                 LDRH            W13, [X0,#0x4A]
.text:000000000004C820                 LDRH            W11, [X0,#0x4C]
.text:000000000004C824                 B               loc_4C8FC
.text:000000000004C828 ; ---------------------------------------------------------------------------
.text:000000000004C828 loc_4C828                               ; CODE XREF: sub_4C6F8+118↑j
.text:000000000004C828                 LDRSH           W8, [X0,#0x5C]
.text:000000000004C82C                 STRH            WZR, [X0,#0x58]
.text:000000000004C830                 CMP             W8, #1
.text:000000000004C834                 B.LT            loc_4C894
.text:000000000004C838                 LDRH            W9, [X0,#0x5E]
.text:000000000004C83C                 MOV             W12, #0xEB2
.text:000000000004C840                 LDRH            W10, [X0,#0x60]
.text:000000000004C844                 MOV             W13, #0x7FFF
.text:000000000004C848                 MOV             W11, WZR
.text:000000000004C84C                 ADD             W9, W9, W9,LSL#2
.text:000000000004C850                 STUR            W13, [X0,#0x4A]
.text:000000000004C854                 ADD             W9, W9, #1
.text:000000000004C858                 STRH            W13, [X0,#0x5A]
.text:000000000004C85C                 SUB             W12, W12, W10
.text:000000000004C860                 AND             W14, W9, W10
.text:000000000004C864                 ADD             W9, W9, W9,LSL#2
.text:000000000004C868                 ADD             W12, W12, W14
.text:000000000004C86C                 MOV             W14, #0x914
.text:000000000004C870                 ADD             W15, W9, #1
.text:000000000004C874                 SUB             W9, W14, W10
.text:000000000004C878                 STRH            W12, [X0,#0x40]
.text:000000000004C87C                 AND             W10, W15, W10
.text:000000000004C880                 SUB             W10, W9, W10
.text:000000000004C884                 STRH            W15, [X0,#0x5E]
.text:000000000004C888                 MOV             W9, #0x7FFF
.text:000000000004C88C                 STRH            W10, [X0,#0x46]
.text:000000000004C890                 B               loc_4C8F0
.text:000000000004C894 ; ---------------------------------------------------------------------------
.text:000000000004C894 loc_4C894                               ; CODE XREF: sub_4C6F8+13C↑j
.text:000000000004C894                 LDRH            W10, [X0,#0x5E]
.text:000000000004C898                 MOV             W11, #0x7FFF0000
.text:000000000004C89C                 LDRH            W12, [X0,#0x60]
.text:000000000004C8A0                 MOV             W14, #0x914
.text:000000000004C8A4                 MOV             W13, WZR
.text:000000000004C8A8                 STUR            W11, [X0,#0x4A]
.text:000000000004C8AC                 MOV             W9, #0x8000
.text:000000000004C8B0                 ADD             W10, W10, W10,LSL#2
.text:000000000004C8B4                 ADD             W10, W10, #1
.text:000000000004C8B8                 SUB             W14, W14, W12
.text:000000000004C8BC                 STRH            W9, [X0,#0x5A]
.text:000000000004C8C0                 AND             W15, W10, W12
.text:000000000004C8C4                 ADD             W10, W10, W10,LSL#2
.text:000000000004C8C8                 SUB             W14, W14, W15
.text:000000000004C8CC                 MOV             W15, #0xEB2
.text:000000000004C8D0                 ADD             W10, W10, #1
.text:000000000004C8D4                 SUB             W15, W15, W12
.text:000000000004C8D8                 STRH            W14, [X0,#0x3E]
.text:000000000004C8DC                 AND             W11, W10, W12
.text:000000000004C8E0                 ADD             W12, W15, W11
.text:000000000004C8E4                 STRH            W10, [X0,#0x5E]
.text:000000000004C8E8                 MOV             W11, #0x7FFF
.text:000000000004C8EC                 STRH            W12, [X0,#0x44]
.text:000000000004C8F0 loc_4C8F0                               ; CODE XREF: sub_4C6F8+198↑j
.text:000000000004C8F0                 NEG             W8, W8
.text:000000000004C8F4                 MOV             W10, WZR
.text:000000000004C8F8                 STRH            W8, [X0,#0x5C]
.text:000000000004C8FC loc_4C8FC                               ; CODE XREF: sub_4C6F8+12C↑j
.text:000000000004C8FC                 ADD             W12, W8, W9
.text:000000000004C900                 MOV             W8, #0xFFFF95F7
.text:000000000004C904                 SBFX            W9, W12, #1, #0xF
.text:000000000004C908                 MUL             W8, W9, W8
.text:000000000004C90C                 MOV             W14, #0x5A82
.text:000000000004C910                 ADD             W17, W10, W3
.text:000000000004C914                 STRH            W12, [X0,#0x5A]
.text:000000000004C918                 ASR             W8, W8, #0xF
.text:000000000004C91C                 ADD             W15, W8, #8,LSL#12
.text:000000000004C920                 SUB             W16, W8, #8,LSL#12
.text:000000000004C924                 STRH            W17, [X0,#0x58]
.text:000000000004C928                 MUL             W15, W15, W9
.text:000000000004C92C                 MOV             W8, #0xFFFF8000
.text:000000000004C930                 MUL             W16, W16, W9
.text:000000000004C934                 MOV             W9, #0x7FFF
.text:000000000004C938                 ADD             W10, W14, W15,ASR#15
.text:000000000004C93C                 CMN             W10, #8,LSL#12
.text:000000000004C940                 CSEL            W10, W10, W8, GT
.text:000000000004C944                 ADD             W14, W14, W16,ASR#15
.text:000000000004C948                 CMP             W10, W9
.text:000000000004C94C                 CSEL            W10, W10, W9, LT
.text:000000000004C950                 CMN             W14, #8,LSL#12
.text:000000000004C954                 CSEL            W14, W14, W8, GT
.text:000000000004C958                 SUB             W10, W10, W13,SXTH
.text:000000000004C95C                 CMP             W14, W9
.text:000000000004C960                 LSR             W15, W10, #7
.text:000000000004C964                 LDRH            W10, [X0,#0x28]
.text:000000000004C968                 CSEL            W14, W14, W9, LT
.text:000000000004C96C                 SUB             W11, W14, W11,SXTH
.text:000000000004C970                 STRH            W15, [X0,#0x4E]
.text:000000000004C974                 LSR             W11, W11, #7
.text:000000000004C978                 CMP             W3, #1
.text:000000000004C97C                 STRH            W11, [X0,#0x50]
.text:000000000004C980                 B.LT            loc_4CE44
.text:000000000004C984                 SXTW            X11, W3
.text:000000000004C988 loc_4C988                               ; CODE XREF: sub_4C6F8+748↓j
.text:000000000004C988                 LDRH            W14, [X0,#0x2C]
.text:000000000004C98C                 ADD             X12, X0, #0xAA
.text:000000000004C990                 LDRSH           W15, [X1]
.text:000000000004C994                 SXTH            W13, W13
.text:000000000004C998                 LDRSH           W16, [X0,#0x2A]
.text:000000000004C99C                 LDRSH           W17, [X0,#0x2E]
.text:000000000004C9A0                 ADD             W14, W14, W10
.text:000000000004C9A4                 LDRH            W4, [X0,#0x32]
.text:000000000004C9A8                 AND             X14, X14, #0xFFF
.text:000000000004C9AC                 LDRH            W5, [X0,#0x36]
.text:000000000004C9B0                 ADD             W15, W16, W15,ASR#2
.text:000000000004C9B4                 LDRSH           W14, [X12,X14,LSL#1]
.text:000000000004C9B8                 MUL             W16, W15, W17
.text:000000000004C9BC                 ADD             W4, W4, W10
.text:000000000004C9C0                 AND             X4, X4, #0xFFF
.text:000000000004C9C4                 SUB             W14, W14, W16,ASR#15
.text:000000000004C9C8                 LDRH            W16, [X0,#0x30]
.text:000000000004C9CC                 CMN             W14, #8,LSL#12
.text:000000000004C9D0                 CSEL            W14, W14, W8, GT
.text:000000000004C9D4                 CMP             W14, W9
.text:000000000004C9D8                 CSEL            W14, W14, W9, LT
.text:000000000004C9DC                 ADD             W16, W16, W10
.text:000000000004C9E0                 MUL             W17, W14, W17
.text:000000000004C9E4                 AND             X16, X16, #0xFFF
.text:000000000004C9E8                 ADD             W15, W15, W17,ASR#15
.text:000000000004C9EC                 LDRSH           W17, [X0,#0x34]
.text:000000000004C9F0                 CMN             W15, #8,LSL#12
.text:000000000004C9F4                 CSEL            W15, W15, W8, GT
.text:000000000004C9F8                 CMP             W15, W9
.text:000000000004C9FC                 CSEL            W15, W15, W9, LT
.text:000000000004CA00                 STRH            W15, [X12,X16,LSL#1]
.text:000000000004CA04                 ADD             W15, W5, W10
.text:000000000004CA08                 STRH            W14, [X12,X4,LSL#1]
.text:000000000004CA0C                 AND             X15, X15, #0xFFF
.text:000000000004CA10                 LDRSH           W14, [X1,#2]
.text:000000000004CA14                 ADD             X1, X1, #4
.text:000000000004CA18                 LDRSH           W16, [X0,#0x38]
.text:000000000004CA1C                 LDRSH           W15, [X12,X15,LSL#1]
.text:000000000004CA20                 LDRH            W4, [X0,#0x3A]
.text:000000000004CA24                 ADD             W14, W17, W14,ASR#2
.text:000000000004CA28                 LDRH            W5, [X0,#0x3E]
.text:000000000004CA2C                 LDRH            W6, [X0,#0x40]
.text:000000000004CA30                 MUL             W17, W14, W16
.text:000000000004CA34                 ADD             W4, W4, W10
.text:000000000004CA38                 ADD             W5, W5, W10
.text:000000000004CA3C                 SUB             W15, W15, W17,ASR#15
.text:000000000004CA40                 LDRH            W17, [X0,#0x3C]
.text:000000000004CA44                 CMN             W15, #8,LSL#12
.text:000000000004CA48                 CSEL            W15, W15, W8, GT
.text:000000000004CA4C                 CMP             W15, W9
.text:000000000004CA50                 CSEL            W15, W15, W9, LT
.text:000000000004CA54                 ADD             W17, W17, W10
.text:000000000004CA58                 MUL             W16, W15, W16
.text:000000000004CA5C                 AND             X4, X4, #0xFFF
.text:000000000004CA60                 ADD             W6, W6, W10
.text:000000000004CA64                 AND             X5, X5, #0xFFF
.text:000000000004CA68                 ADD             W14, W14, W16,ASR#15
.text:000000000004CA6C                 CMN             W14, #8,LSL#12
.text:000000000004CA70                 CSEL            W14, W14, W8, GT
.text:000000000004CA74                 CMP             W14, W9
.text:000000000004CA78                 CSEL            W14, W14, W9, LT
.text:000000000004CA7C                 AND             X16, X17, #0xFFF
.text:000000000004CA80                 LDRSH           W17, [X0,#0x4C]
.text:000000000004CA84                 AND             X6, X6, #0xFFF
.text:000000000004CA88                 STRH            W14, [X12,X4,LSL#1]
.text:000000000004CA8C                 STRH            W15, [X12,X16,LSL#1]
.text:000000000004CA90                 LDRSH           W14, [X12,X5,LSL#1]
.text:000000000004CA94                 LDRSH           W15, [X12,X6,LSL#1]
.text:000000000004CA98                 LDRSH           W16, [X0,#0x52]
.text:000000000004CA9C                 LDRSH           W4, [X0,#0x42]
.text:000000000004CAA0                 MUL             W14, W14, W13
.text:000000000004CAA4                 LDRH            W5, [X0,#0x44]
.text:000000000004CAA8                 MUL             W15, W17, W15
.text:000000000004CAAC                 LDRH            W6, [X0,#0x46]
.text:000000000004CAB0                 ASR             W15, W15, #0xF
.text:000000000004CAB4                 ADD             W14, W15, W14,ASR#15
.text:000000000004CAB8                 LDRSH           W15, [X0,#0x54]
.text:000000000004CABC                 CMN             W14, #8,LSL#12
.text:000000000004CAC0                 CSEL            W14, W14, W8, GT
.text:000000000004CAC4                 CMP             W14, W9
.text:000000000004CAC8                 CSEL            W14, W14, W9, LT
.text:000000000004CACC                 MUL             W4, W15, W4
.text:000000000004CAD0                 ADD             W5, W5, W10
.text:000000000004CAD4                 MUL             W14, W14, W16
.text:000000000004CAD8                 ADD             W6, W6, W10
.text:000000000004CADC                 ASR             W14, W14, #0xF
.text:000000000004CAE0                 ADD             W14, W14, W4,ASR#15
.text:000000000004CAE4                 CMN             W14, #8,LSL#12
.text:000000000004CAE8                 CSEL            W14, W14, W8, GT
.text:000000000004CAEC                 CMP             W14, W9
.text:000000000004CAF0                 CSEL            W14, W14, W9, LT
.text:000000000004CAF4                 AND             X4, X5, #0xFFF
.text:000000000004CAF8                 AND             X5, X6, #0xFFF
.text:000000000004CAFC                 LDRH            W6, [X0,#0x82]
.text:000000000004CB00                 STRH            W14, [X0,#0x42]
.text:000000000004CB04                 LDRSH           W4, [X12,X4,LSL#1]
.text:000000000004CB08                 LDRSH           W5, [X12,X5,LSL#1]
.text:000000000004CB0C                 MUL             W13, W4, W13
.text:000000000004CB10                 LDRH            W4, [X0,#0x7C]
.text:000000000004CB14                 MUL             W17, W5, W17
.text:000000000004CB18                 LDRH            W5, [X0,#0x80]
.text:000000000004CB1C                 ASR             W17, W17, #0xF
.text:000000000004CB20                 ADD             W13, W17, W13,ASR#15
.text:000000000004CB24                 LDRSH           W17, [X0,#0x48]
.text:000000000004CB28                 CMN             W13, #8,LSL#12
.text:000000000004CB2C                 CSEL            W13, W13, W8, GT
.text:000000000004CB30                 CMP             W13, W9
.text:000000000004CB34                 CSEL            W13, W13, W9, LT
.text:000000000004CB38                 MUL             W15, W17, W15
.text:000000000004CB3C                 LDRSH           W17, [X0,#0x86]
.text:000000000004CB40                 ADD             W5, W5, W10
.text:000000000004CB44                 MUL             W13, W13, W16
.text:000000000004CB48                 ADD             W16, W4, W10
.text:000000000004CB4C                 LDRH            W4, [X0,#0x7E]
.text:000000000004CB50                 AND             X16, X16, #0xFFF
.text:000000000004CB54                 ASR             W13, W13, #0xF
.text:000000000004CB58                 ADD             W13, W13, W15,ASR#15
.text:000000000004CB5C                 CMN             W13, #8,LSL#12
.text:000000000004CB60                 CSEL            W13, W13, W8, GT
.text:000000000004CB64                 CMP             W13, W9
.text:000000000004CB68                 CSEL            W15, W13, W9, LT
.text:000000000004CB6C                 ADD             W13, W15, W14
.text:000000000004CB70                 CMN             W13, #8,LSL#12
.text:000000000004CB74                 CSEL            W13, W13, W8, GT
.text:000000000004CB78                 STRH            W15, [X0,#0x48]
.text:000000000004CB7C                 SUB             W14, W15, W14
.text:000000000004CB80                 LDRH            W15, [X0,#0x84]
.text:000000000004CB84                 CMP             W13, W9
.text:000000000004CB88                 CSEL            W13, W13, W9, LT
.text:000000000004CB8C                 CMN             W14, #8,LSL#12
.text:000000000004CB90                 CSEL            W14, W14, W8, GT
.text:000000000004CB94                 CMP             W14, W9
.text:000000000004CB98                 STRH            W13, [X0,#0x34]
.text:000000000004CB9C                 CSEL            W14, W14, W9, LT
.text:000000000004CBA0                 ADD             W4, W4, W10
.text:000000000004CBA4                 AND             X5, X5, #0xFFF
.text:000000000004CBA8                 STRH            W14, [X0,#0x2A]
.text:000000000004CBAC                 AND             X14, X4, #0xFFF
.text:000000000004CBB0                 LDRSH           W16, [X12,X16,LSL#1]
.text:000000000004CBB4                 ADD             W4, W6, W10
.text:000000000004CBB8                 LDRSH           W6, [X0,#0x88]
.text:000000000004CBBC                 ADD             W15, W15, W10
.text:000000000004CBC0                 LDRSH           W14, [X12,X14,LSL#1]
.text:000000000004CBC4                 AND             X15, X15, #0xFFF
.text:000000000004CBC8                 LDRSH           W5, [X12,X5,LSL#1]
.text:000000000004CBCC                 MUL             W16, W17, W16
.text:000000000004CBD0                 AND             X17, X4, #0xFFF
.text:000000000004CBD4                 LDRSH           W4, [X0,#0x8A]
.text:000000000004CBD8                 ASR             W16, W16, #0xF
.text:000000000004CBDC                 MUL             W14, W6, W14
.text:000000000004CBE0                 CMN             W16, #8,LSL#12
.text:000000000004CBE4                 LDRSH           W17, [X12,X17,LSL#1]
.text:000000000004CBE8                 CSEL            W16, W16, W8, GT
.text:000000000004CBEC                 LDRSH           W15, [X12,X15,LSL#1]
.text:000000000004CBF0                 CMP             W16, W9
.text:000000000004CBF4                 MUL             W4, W4, W5
.text:000000000004CBF8                 CSEL            W16, W16, W9, LT
.text:000000000004CBFC                 ADD             W14, W16, W14,ASR#15
.text:000000000004CC00                 LDRSH           W16, [X0,#0x8C]
.text:000000000004CC04                 CMN             W14, #8,LSL#12
.text:000000000004CC08                 CSEL            W14, W14, W8, GT
.text:000000000004CC0C                 CMP             W14, W9
.text:000000000004CC10                 CSEL            W14, W14, W9, LT
.text:000000000004CC14                 MUL             W16, W16, W17
.text:000000000004CC18                 ADD             W14, W14, W4,ASR#15
.text:000000000004CC1C                 LDRSH           W4, [X0,#0x8E]
.text:000000000004CC20                 CMN             W14, #8,LSL#12
.text:000000000004CC24                 LDRSH           W17, [X0,#0x78]
.text:000000000004CC28                 CSEL            W14, W14, W8, GT
.text:000000000004CC2C                 CMP             W14, W9
.text:000000000004CC30                 CSEL            W14, W14, W9, LT
.text:000000000004CC34                 MUL             W15, W4, W15
.text:000000000004CC38                 ADD             W14, W14, W16,ASR#15
.text:000000000004CC3C                 LDRSH           W16, [X0,#0x76]
.text:000000000004CC40                 CMN             W14, #8,LSL#12
.text:000000000004CC44                 CSEL            W14, W14, W8, GT
.text:000000000004CC48                 CMP             W14, W9
.text:000000000004CC4C                 CSEL            W14, W14, W9, LT
.text:000000000004CC50                 ADD             W14, W14, W15,ASR#15
.text:000000000004CC54                 LDRSH           W15, [X0,#0x7A]
.text:000000000004CC58                 CMN             W14, #8,LSL#12
.text:000000000004CC5C                 CSEL            W14, W14, W8, GT
.text:000000000004CC60                 CMP             W14, W9
.text:000000000004CC64                 CSEL            W14, W14, W9, LT
.text:000000000004CC68                 MUL             W15, W15, W16
.text:000000000004CC6C                 MUL             W14, W14, W17
.text:000000000004CC70                 ASR             W14, W14, #0xF
.text:000000000004CC74                 ADD             W14, W14, W15,ASR#15
.text:000000000004CC78                 LDRSH           W15, [X0,#0x70]
.text:000000000004CC7C                 CMN             W14, #8,LSL#12
.text:000000000004CC80                 CSEL            W14, W14, W8, GT
.text:000000000004CC84                 CMP             W14, W9
.text:000000000004CC88                 CSEL            W14, W14, W9, LT
.text:000000000004CC8C                 ADD             W13, W14, W13
.text:000000000004CC90                 CMN             W13, #8,LSL#12
.text:000000000004CC94                 CSEL            W13, W13, W8, GT
.text:000000000004CC98                 STRH            W14, [X0,#0x76]
.text:000000000004CC9C                 CMP             W13, W9
.text:000000000004CCA0                 LDRSH           W14, [X2]
.text:000000000004CCA4                 CSEL            W13, W13, W9, LT
.text:000000000004CCA8                 MUL             W13, W15, W13
.text:000000000004CCAC                 LSL             W13, W13, #1
.text:000000000004CCB0                 ADD             W13, W14, W13,ASR#15
.text:000000000004CCB4                 CMN             W13, #8,LSL#12
.text:000000000004CCB8                 CSEL            W13, W13, W8, GT
.text:000000000004CCBC                 CMP             W13, W9
.text:000000000004CCC0                 CSEL            W13, W13, W9, LT
.text:000000000004CCC4                 STRH            W13, [X2]
.text:000000000004CCC8                 LDRH            W13, [X0,#0x96]
.text:000000000004CCCC                 LDRH            W14, [X0,#0x98]
.text:000000000004CCD0                 LDRH            W15, [X0,#0x9A]
.text:000000000004CCD4                 LDRSH           W4, [X0,#0xA0]
.text:000000000004CCD8                 ADD             W13, W13, W10
.text:000000000004CCDC                 LDRSH           W5, [X0,#0xA2]
.text:000000000004CCE0                 AND             X13, X13, #0xFFF
.text:000000000004CCE4                 LDRH            W16, [X0,#0x9C]
.text:000000000004CCE8                 ADD             W14, W14, W10
.text:000000000004CCEC                 LDRH            W17, [X0,#0x9E]
.text:000000000004CCF0                 AND             X14, X14, #0xFFF
.text:000000000004CCF4                 LDRSH           W13, [X12,X13,LSL#1]
.text:000000000004CCF8                 ADD             W15, W15, W10
.text:000000000004CCFC                 AND             X15, X15, #0xFFF
.text:000000000004CD00                 LDRSH           W14, [X12,X14,LSL#1]
.text:000000000004CD04                 ADD             W16, W16, W10
.text:000000000004CD08                 AND             X16, X16, #0xFFF
.text:000000000004CD0C                 MUL             W13, W4, W13
.text:000000000004CD10                 LDRSH           W4, [X0,#0xA4]
.text:000000000004CD14                 LDRSH           W15, [X12,X15,LSL#1]
.text:000000000004CD18                 ADD             W17, W17, W10
.text:000000000004CD1C                 ASR             W13, W13, #0xF
.text:000000000004CD20                 MUL             W14, W5, W14
.text:000000000004CD24                 CMN             W13, #8,LSL#12
.text:000000000004CD28                 LDRSH           W16, [X12,X16,LSL#1]
.text:000000000004CD2C                 CSEL            W13, W13, W8, GT
.text:000000000004CD30                 CMP             W13, W9
.text:000000000004CD34                 MUL             W15, W4, W15
.text:000000000004CD38                 CSEL            W13, W13, W9, LT
.text:000000000004CD3C                 ADD             W13, W13, W14,ASR#15
.text:000000000004CD40                 LDRSH           W14, [X0,#0xA6]
.text:000000000004CD44                 CMN             W13, #8,LSL#12
.text:000000000004CD48                 CSEL            W13, W13, W8, GT
.text:000000000004CD4C                 CMP             W13, W9
.text:000000000004CD50                 CSEL            W13, W13, W9, LT
.text:000000000004CD54                 MUL             W14, W14, W16
.text:000000000004CD58                 AND             X17, X17, #0xFFF
.text:000000000004CD5C                 ADD             W13, W13, W15,ASR#15
.text:000000000004CD60                 LDRSH           W15, [X0,#0xA8]
.text:000000000004CD64                 CMN             W13, #8,LSL#12
.text:000000000004CD68                 CSEL            W13, W13, W8, GT
.text:000000000004CD6C                 LDRSH           W12, [X12,X17,LSL#1]
.text:000000000004CD70                 CMP             W13, W9
.text:000000000004CD74                 CSEL            W13, W13, W9, LT
.text:000000000004CD78                 ADD             W13, W13, W14,ASR#15
.text:000000000004CD7C                 LDRSH           W14, [X0,#0x90]
.text:000000000004CD80                 CMN             W13, #8,LSL#12
.text:000000000004CD84                 MUL             W12, W15, W12
.text:000000000004CD88                 CSEL            W13, W13, W8, GT
.text:000000000004CD8C                 LDRSH           W15, [X0,#0x92]
.text:000000000004CD90                 CMP             W13, W9
.text:000000000004CD94                 CSEL            W13, W13, W9, LT
.text:000000000004CD98                 ADD             W12, W13, W12,ASR#15
.text:000000000004CD9C                 LDRSH           W13, [X0,#0x94]
.text:000000000004CDA0                 CMN             W12, #8,LSL#12
.text:000000000004CDA4                 CSEL            W12, W12, W8, GT
.text:000000000004CDA8                 CMP             W12, W9
.text:000000000004CDAC                 CSEL            W12, W12, W9, LT
.text:000000000004CDB0                 MUL             W13, W13, W14
.text:000000000004CDB4                 LDRSH           W14, [X0,#0x70]
.text:000000000004CDB8                 SUB             W10, W10, #1
.text:000000000004CDBC                 MUL             W12, W12, W15
.text:000000000004CDC0                 ASR             W12, W12, #0xF
.text:000000000004CDC4                 ADD             W12, W12, W13,ASR#15
.text:000000000004CDC8                 LDRSH           W13, [X0,#0x2A]
.text:000000000004CDCC                 CMN             W12, #8,LSL#12
.text:000000000004CDD0                 CSEL            W12, W12, W8, GT
.text:000000000004CDD4                 CMP             W12, W9
.text:000000000004CDD8                 CSEL            W12, W12, W9, LT
.text:000000000004CDDC                 ADD             W13, W12, W13
.text:000000000004CDE0                 CMN             W13, #8,LSL#12
.text:000000000004CDE4                 CSEL            W13, W13, W8, GT
.text:000000000004CDE8                 STRH            W12, [X0,#0x90]
.text:000000000004CDEC                 CMP             W13, W9
.text:000000000004CDF0                 CSEL            W12, W13, W9, LT
.text:000000000004CDF4                 LDRSH           W13, [X2,#2]
.text:000000000004CDF8                 MUL             W12, W14, W12
.text:000000000004CDFC                 LSL             W12, W12, #1
.text:000000000004CE00                 ADD             W12, W13, W12,ASR#15
.text:000000000004CE04                 CMN             W12, #8,LSL#12
.text:000000000004CE08                 CSEL            W12, W12, W8, GT
.text:000000000004CE0C                 CMP             W12, W9
.text:000000000004CE10                 CSEL            W12, W12, W9, LT
.text:000000000004CE14                 SUBS            X11, X11, #1
.text:000000000004CE18                 STRH            W12, [X2,#2]
.text:000000000004CE1C                 ADD             X2, X2, #4
.text:000000000004CE20                 LDRH            W12, [X0,#0x4E]
.text:000000000004CE24                 LDRH            W13, [X0,#0x4A]
.text:000000000004CE28                 LDRH            W14, [X0,#0x50]
.text:000000000004CE2C                 LDRH            W15, [X0,#0x4C]
.text:000000000004CE30                 ADD             W13, W13, W12
.text:000000000004CE34                 ADD             W12, W15, W14
.text:000000000004CE38                 STRH            W13, [X0,#0x4A]
.text:000000000004CE3C                 STRH            W12, [X0,#0x4C]
.text:000000000004CE40                 B.NE            loc_4C988
.text:000000000004CE44 loc_4CE44                               ; CODE XREF: sub_4C6F8+288↑j
.text:000000000004CE44                 LDRSH           W8, [X0,#2]
.text:000000000004CE48                 STRH            W10, [X0,#0x28]
.text:000000000004CE4C                 CMP             W8, #0x7F
.text:000000000004CE50                 B.LT            loc_4CE5C
.text:000000000004CE54                 MOV             W8, WZR
.text:000000000004CE58                 STRH            WZR, [X0,#2]
.text:000000000004CE5C loc_4CE5C                               ; CODE XREF: sub_4C6F8+758↑j
.text:000000000004CE5C                 ADD             W8, W8, W3
.text:000000000004CE60                 STRH            W8, [X0,#2]
.text:000000000004CE64 locret_4CE64                            ; CODE XREF: sub_4C6F8+C↑j
.text:000000000004CE64                 RET
.text:000000000004CE64 ; } // starts at 4C6F8
.text:000000000004CE64 ; End of function sub_4C6F8
.text:000000000004CE68 ; =============== S U B R O U T I N E =======================================
.text:000000000004CE68 sub_4CE68                               ; DATA XREF: .data.rel.ro:0000000000058200↓o
.text:000000000004CE68 var_10          = -0x10
.text:000000000004CE68 ; __unwind {
.text:000000000004CE68                 LDRB            W8, [X0,#0x18B]
.text:000000000004CE6C                 CBZ             W8, loc_4CE78
.text:000000000004CE70                 MOV             X0, XZR
.text:000000000004CE74                 RET
.text:000000000004CE78 ; ---------------------------------------------------------------------------
.text:000000000004CE78 loc_4CE78                               ; CODE XREF: sub_4CE68+4↑j
.text:000000000004CE78                 STP             X29, X30, [SP,#var_10]!
.text:000000000004CE7C                 MOV             X29, SP
.text:000000000004CE80                 LDR             X0, [X0]
.text:000000000004CE84                 BL              .EAS_HWFree
.text:000000000004CE88                 LDP             X29, X30, [SP+0x10+var_10],#0x10
.text:000000000004CE8C                 MOV             X0, XZR
.text:000000000004CE90                 RET
.text:000000000004CE90 ; } // starts at 4CE68
.text:000000000004CE90 ; End of function sub_4CE68
.text:000000000004CE90 ; ---------------------------------------------------------------------------
.text:000000000004CE94                 ALIGN 8
.text:000000000004CE98 ; =============== S U B R O U T I N E =======================================
.text:000000000004CE98 sub_4CE98                               ; DATA XREF: .data.rel.ro:0000000000058208↓o
.text:000000000004CE98 ; FUNCTION CHUNK AT .text:000000000004CEDC SIZE 0000000C BYTES
.text:000000000004CE98 ; __unwind {
.text:000000000004CE98                 CMP             X1, #3
.text:000000000004CE9C                 B.HI            loc_4CEC0
.text:000000000004CEA0                 ADRP            X8, #unk_5B47@PAGE
.text:000000000004CEA4                 ADD             X8, X8, #unk_5B47@PAGEOFF
.text:000000000004CEA8                 ADR             X9, loc_4CEB8
.text:000000000004CEAC                 LDRB            W10, [X8,X1]
.text:000000000004CEB0                 ADD             X9, X9, X10,LSL#2
.text:000000000004CEB4                 BR              X9
.text:000000000004CEB8 ; ---------------------------------------------------------------------------
.text:000000000004CEB8 loc_4CEB8                               ; DATA XREF: sub_4CE98+10↑o
.text:000000000004CEB8                 LDR             W8, [X0,#0x68]
.text:000000000004CEBC                 B               loc_4CEDC
.text:000000000004CEC0 ; ---------------------------------------------------------------------------
.text:000000000004CEC0 loc_4CEC0                               ; CODE XREF: sub_4CE98+4↑j
.text:000000000004CEC0                 MOV             X0, #0xFFFFFFFFFFFFFFE4
.text:000000000004CEC4                 RET
.text:000000000004CEC4 ; End of function sub_4CE98
.text:000000000004CEC8 ; ---------------------------------------------------------------------------
.text:000000000004CEC8                 LDRSB           X8, [X0,#0x6C]
.text:000000000004CECC                 B               loc_4CEDC
.text:000000000004CED0 ; ---------------------------------------------------------------------------
.text:000000000004CED0                 LDRSH           X8, [X0,#0x70]
.text:000000000004CED4                 B               loc_4CEDC
.text:000000000004CED8 ; ---------------------------------------------------------------------------
.text:000000000004CED8                 LDRSH           X8, [X0,#0x72]
.text:000000000004CEDC ; START OF FUNCTION CHUNK FOR sub_4CE98
.text:000000000004CEDC loc_4CEDC                               ; CODE XREF: sub_4CE98+24↑j
.text:000000000004CEDC                                         ; .text:000000000004CECC↑j ...
.text:000000000004CEDC                 MOV             X0, XZR
.text:000000000004CEE0                 STR             X8, [X2]
.text:000000000004CEE4                 RET
.text:000000000004CEE4 ; } // starts at 4CE98
.text:000000000004CEE4 ; END OF FUNCTION CHUNK FOR sub_4CE98
.text:000000000004CEE8 ; =============== S U B R O U T I N E =======================================
.text:000000000004CEE8 sub_4CEE8                               ; DATA XREF: .data.rel.ro:0000000000058210↓o
.text:000000000004CEE8 ; FUNCTION CHUNK AT .text:000000000004CF5C SIZE 00000018 BYTES
.text:000000000004CEE8 ; __unwind {
.text:000000000004CEE8                 CMP             X1, #3
.text:000000000004CEEC                 B.HI            loc_4CF3C
.text:000000000004CEF0                 ADRP            X8, #unk_5B4B@PAGE
.text:000000000004CEF4                 ADD             X8, X8, #unk_5B4B@PAGEOFF
.text:000000000004CEF8                 ADR             X9, loc_4CF08
.text:000000000004CEFC                 LDRB            W10, [X8,X1]
.text:000000000004CF00                 ADD             X9, X9, X10,LSL#2
.text:000000000004CF04                 BR              X9
.text:000000000004CF08 ; ---------------------------------------------------------------------------
.text:000000000004CF08 loc_4CF08                               ; DATA XREF: sub_4CEE8+10↑o
.text:000000000004CF08                 STR             W2, [X0,#0x68]
.text:000000000004CF0C                 MOV             X0, XZR
.text:000000000004CF10                 RET
.text:000000000004CF14 ; ---------------------------------------------------------------------------
.text:000000000004CF14                 LSR             X8, X2, #0xF
.text:000000000004CF18                 CBZ             X8, loc_4CF5C
.text:000000000004CF1C                 MOV             X8, #0xFFFFFFFFFFFFFFE4
.text:000000000004CF20                 MOV             X0, X8
.text:000000000004CF24                 RET
.text:000000000004CF28 ; ---------------------------------------------------------------------------
.text:000000000004CF28                 LSR             X8, X2, #0xF
.text:000000000004CF2C                 CBZ             X8, loc_4CF68
.text:000000000004CF30                 MOV             X8, #0xFFFFFFFFFFFFFFE4
.text:000000000004CF34                 MOV             X0, X8
.text:000000000004CF38                 RET
.text:000000000004CF3C ; ---------------------------------------------------------------------------
.text:000000000004CF3C loc_4CF3C                               ; CODE XREF: sub_4CEE8+4↑j
.text:000000000004CF3C                 MOV             X8, #0xFFFFFFFFFFFFFFE4
.text:000000000004CF40                 MOV             X0, X8
.text:000000000004CF44                 RET
.text:000000000004CF44 ; End of function sub_4CEE8
.text:000000000004CF48 ; ---------------------------------------------------------------------------
.text:000000000004CF48                 CMP             X2, #3
.text:000000000004CF4C                 B.LS            loc_4CF74
.text:000000000004CF50                 MOV             X8, #0xFFFFFFFFFFFFFFE4
.text:000000000004CF54                 MOV             X0, X8
.text:000000000004CF58                 RET
.text:000000000004CF5C ; ---------------------------------------------------------------------------
.text:000000000004CF5C ; START OF FUNCTION CHUNK FOR sub_4CEE8
.text:000000000004CF5C loc_4CF5C                               ; CODE XREF: sub_4CEE8+30↑j
.text:000000000004CF5C                 STRH            W2, [X0,#0x70]
.text:000000000004CF60                 MOV             X0, X8
.text:000000000004CF64                 RET
.text:000000000004CF68 ; ---------------------------------------------------------------------------
.text:000000000004CF68 loc_4CF68                               ; CODE XREF: sub_4CEE8+44↑j
.text:000000000004CF68                 STRH            W2, [X0,#0x72]
.text:000000000004CF6C                 MOV             X0, X8
.text:000000000004CF70                 RET
.text:000000000004CF70 ; END OF FUNCTION CHUNK FOR sub_4CEE8
.text:000000000004CF74 ; ---------------------------------------------------------------------------
.text:000000000004CF74 loc_4CF74                               ; CODE XREF: .text:000000000004CF4C↑j
.text:000000000004CF74                 STRH            W2, [X0,#0x6E]
.text:000000000004CF78                 MOV             X0, XZR
.text:000000000004CF7C                 RET
.text:000000000004CF7C ; } // starts at 4CEE8
.text:000000000004CF80 ; =============== S U B R O U T I N E =======================================
.text:000000000004CF80 ; Attributes: bp-based frame
.text:000000000004CF80 sub_4CF80                               ; DATA XREF: .data.rel.ro:EAS_RTTTL_Parser↓o
.text:000000000004CF80 var_98          = -0x98
.text:000000000004CF80 var_68          = -0x68
.text:000000000004CF80 var_38          = -0x38
.text:000000000004CF80 var_30          = -0x30
.text:000000000004CF80 var_20          = -0x20
.text:000000000004CF80 var_10          = -0x10
.text:000000000004CF80 var_s0          =  0
.text:000000000004CF80 ; __unwind {
.text:000000000004CF80                 SUB             SP, SP, #0xB0
.text:000000000004CF84                 STR             X23, [SP,#0xA0+var_30]
.text:000000000004CF88                 STP             X22, X21, [SP,#0xA0+var_20]
.text:000000000004CF8C                 STP             X20, X19, [SP,#0xA0+var_10]
.text:000000000004CF90                 STP             X29, X30, [SP,#0xA0+var_s0]
.text:000000000004CF94                 ADD             X29, SP, #0xA0
.text:000000000004CF98                 MRS             X23, #3, c13, c0, #2
.text:000000000004CF9C                 MOV             X19, X2
.text:000000000004CFA0                 LDR             X8, [X23,#0x28]
.text:000000000004CFA4                 MOV             X21, X1
.text:000000000004CFA8                 MOV             X20, X3
.text:000000000004CFAC                 MOV             X22, X0
.text:000000000004CFB0                 STUR            X8, [X29,#var_38]
.text:000000000004CFB4                 STR             X3, [SP,#0xA0+var_68]
.text:000000000004CFB8                 STR             X1, [SP,#0xA0+var_98]
.text:000000000004CFBC                 ADD             X1, SP, #0xA0+var_98
.text:000000000004CFC0                 STR             XZR, [X2]
.text:000000000004CFC4                 MOV             W2, WZR
.text:000000000004CFC8                 BL              sub_4DB58
.text:000000000004CFCC                 MOV             X8, X0
.text:000000000004CFD0                 MOV             X0, XZR
.text:000000000004CFD4                 CBNZ            X8, loc_4D034
.text:000000000004CFD8                 LDRB            W8, [X22,#0x18B]
.text:000000000004CFDC                 CBZ             W8, loc_4D01C
.text:000000000004CFE0                 MOV             W0, #0xD
.text:000000000004CFE4                 BL              .EAS_CMEnumData
.text:000000000004CFE8                 MOV             X22, X0
.text:000000000004CFEC                 CBZ             X0, loc_4D030
.text:000000000004CFF0 loc_4CFF0                               ; CODE XREF: sub_4CF80+AC↓j
.text:000000000004CFF0                 MOV             X0, X22
.text:000000000004CFF4                 MOV             W1, WZR
.text:000000000004CFF8                 MOV             W2, #0x60 ; '`'
.text:000000000004CFFC                 BL              .EAS_HWMemSet
.text:000000000004D000                 MOV             X0, XZR
.text:000000000004D004                 STR             X21, [X22]
.text:000000000004D008                 MOV             W8, #6
.text:000000000004D00C                 STR             X20, [X22,#0x30]
.text:000000000004D010                 STRB            W8, [X22,#0x5A]
.text:000000000004D014                 STR             X22, [X19]
.text:000000000004D018                 B               loc_4D034
.text:000000000004D01C ; ---------------------------------------------------------------------------
.text:000000000004D01C loc_4D01C                               ; CODE XREF: sub_4CF80+5C↑j
.text:000000000004D01C                 LDR             X0, [X22]
.text:000000000004D020                 MOV             W1, #0x60 ; '`'
.text:000000000004D024                 BL              .EAS_HWMalloc
.text:000000000004D028                 MOV             X22, X0
.text:000000000004D02C                 CBNZ            X0, loc_4CFF0
.text:000000000004D030 loc_4D030                               ; CODE XREF: sub_4CF80+6C↑j
.text:000000000004D030                 MOV             X0, #0xFFFFFFFFFFFFFFFD
.text:000000000004D034 loc_4D034                               ; CODE XREF: sub_4CF80+54↑j
.text:000000000004D034                                         ; sub_4CF80+98↑j
.text:000000000004D034                 LDR             X8, [X23,#0x28]
.text:000000000004D038                 LDUR            X9, [X29,#var_38]
.text:000000000004D03C                 CMP             X8, X9
.text:000000000004D040                 B.NE            loc_4D05C
.text:000000000004D044                 LDP             X29, X30, [SP,#0xA0+var_s0]
.text:000000000004D048                 LDP             X20, X19, [SP,#0xA0+var_10]
.text:000000000004D04C                 LDP             X22, X21, [SP,#0xA0+var_20]
.text:000000000004D050                 LDR             X23, [SP,#0xA0+var_30]
.text:000000000004D054                 ADD             SP, SP, #0xB0
.text:000000000004D058                 RET
.text:000000000004D05C ; ---------------------------------------------------------------------------
.text:000000000004D05C loc_4D05C                               ; CODE XREF: sub_4CF80+C0↑j
.text:000000000004D05C                 BL              .__stack_chk_fail
.text:000000000004D05C ; } // starts at 4CF80
.text:000000000004D05C ; End of function sub_4CF80
.text:000000000004D060 ; =============== S U B R O U T I N E =======================================
.text:000000000004D060 ; Attributes: bp-based frame
.text:000000000004D060 sub_4D060                               ; DATA XREF: .data.rel.ro:0000000000058220↓o
.text:000000000004D060 var_20          = -0x20
.text:000000000004D060 var_10          = -0x10
.text:000000000004D060 var_s0          =  0
.text:000000000004D060 ; __unwind {
.text:000000000004D060                 STR             X21, [SP,#-0x10+var_20]!
.text:000000000004D064                 STP             X20, X19, [SP,#0x20+var_10]
.text:000000000004D068                 STP             X29, X30, [SP,#0x20+var_s0]
.text:000000000004D06C                 ADD             X29, SP, #0x20
.text:000000000004D070                 LDRB            W8, [X1,#0x5A]
.text:000000000004D074                 CMP             W8, #6
.text:000000000004D078                 B.NE            loc_4D0D4
.text:000000000004D07C                 MOV             X19, X1
.text:000000000004D080                 ADD             X1, X1, #8
.text:000000000004D084                 MOV             X20, X0
.text:000000000004D088                 BL              .VMInitMIDI
.text:000000000004D08C                 MOV             X21, X0
.text:000000000004D090                 CBNZ            X0, loc_4D0D8
.text:000000000004D094                 LDR             X8, [X19,#0x10]
.text:000000000004D098                 MOV             W9, #7
.text:000000000004D09C                 MOV             X0, X20
.text:000000000004D0A0                 MOV             X1, X19
.text:000000000004D0A4                 STRB            W9, [X19,#0x5A]
.text:000000000004D0A8                 CMP             X8, #0
.text:000000000004D0AC                 CSET            W2, NE
.text:000000000004D0B0                 BL              sub_4DB58
.text:000000000004D0B4                 MOV             X21, X0
.text:000000000004D0B8                 CBZ             X0, loc_4D0EC
.text:000000000004D0BC                 LDRB            W8, [X20,#0x18B]
.text:000000000004D0C0                 CBNZ            W8, loc_4D0D8
.text:000000000004D0C4                 LDR             X0, [X20]
.text:000000000004D0C8                 MOV             X1, X19
.text:000000000004D0CC                 BL              .EAS_HWFree
.text:000000000004D0D0                 B               loc_4D0D8
.text:000000000004D0D4 ; ---------------------------------------------------------------------------
.text:000000000004D0D4 loc_4D0D4                               ; CODE XREF: sub_4D060+18↑j
.text:000000000004D0D4                 MOV             X21, #0xFFFFFFFFFFFFFFE1
.text:000000000004D0D8 loc_4D0D8                               ; CODE XREF: sub_4D060+30↑j
.text:000000000004D0D8                                         ; sub_4D060+60↑j ...
.text:000000000004D0D8                 LDP             X29, X30, [SP,#0x20+var_s0]
.text:000000000004D0DC                 LDP             X20, X19, [SP,#0x20+var_10]
.text:000000000004D0E0                 MOV             X0, X21
.text:000000000004D0E4                 LDR             X21, [SP+0x20+var_20],#0x30
.text:000000000004D0E8                 RET
.text:000000000004D0EC ; ---------------------------------------------------------------------------
.text:000000000004D0EC loc_4D0EC                               ; CODE XREF: sub_4D060+58↑j
.text:000000000004D0EC                 STRB            WZR, [X19,#0x5A]
.text:000000000004D0F0                 B               loc_4D0D8
.text:000000000004D0F0 ; } // starts at 4D060
.text:000000000004D0F0 ; End of function sub_4D060
.text:000000000004D0F0 ; ---------------------------------------------------------------------------
.text:000000000004D0F4                 ALIGN 8
.text:000000000004D0F8 ; =============== S U B R O U T I N E =======================================
.text:000000000004D0F8 sub_4D0F8                               ; DATA XREF: .data.rel.ro:0000000000058228↓o
.text:000000000004D0F8 ; __unwind {
.text:000000000004D0F8                 LDR             X8, [X1,#0x38]
.text:000000000004D0FC                 MOV             X0, XZR
.text:000000000004D100                 ASR             X8, X8, #8
.text:000000000004D104                 STR             X8, [X2]
.text:000000000004D108                 RET
.text:000000000004D108 ; } // starts at 4D0F8
.text:000000000004D108 ; End of function sub_4D0F8
.text:000000000004D108 ; ---------------------------------------------------------------------------
.text:000000000004D10C                 ALIGN 0x10
.text:000000000004D110 ; =============== S U B R O U T I N E =======================================
.text:000000000004D110 ; Attributes: bp-based frame
.text:000000000004D110 sub_4D110                               ; DATA XREF: .data.rel.ro:0000000000058230↓o
.text:000000000004D110 var_70          = -0x70
.text:000000000004D110 var_64          = -0x64
.text:000000000004D110 var_60          = -0x60
.text:000000000004D110 var_5C          = -0x5C
.text:000000000004D110 var_58          = -0x58
.text:000000000004D110 var_50          = -0x50
.text:000000000004D110 var_40          = -0x40
.text:000000000004D110 var_30          = -0x30
.text:000000000004D110 var_20          = -0x20
.text:000000000004D110 var_10          = -0x10
.text:000000000004D110 var_s0          =  0
.text:000000000004D110 ; __unwind {
.text:000000000004D110                 SUB             SP, SP, #0x80
.text:000000000004D114                 STP             X28, X27, [SP,#0x70+var_50]
.text:000000000004D118                 STP             X26, X25, [SP,#0x70+var_40]
.text:000000000004D11C                 STP             X24, X23, [SP,#0x70+var_30]
.text:000000000004D120                 STP             X22, X21, [SP,#0x70+var_20]
.text:000000000004D124                 STP             X20, X19, [SP,#0x70+var_10]
.text:000000000004D128                 STP             X29, X30, [SP,#0x70+var_s0]
.text:000000000004D12C                 ADD             X29, SP, #0x70
.text:000000000004D130                 MRS             X24, #3, c13, c0, #2
.text:000000000004D134                 LDR             X8, [X24,#0x28]
.text:000000000004D138                 STR             X8, [SP,#0x70+var_58]
.text:000000000004D13C                 LDRB            W8, [X1,#0x5A]
.text:000000000004D140                 CMP             W8, #5
.text:000000000004D144                 B.LS            loc_4D150
.text:000000000004D148                 MOV             X0, XZR
.text:000000000004D14C                 B               loc_4D8F4
.text:000000000004D150 ; ---------------------------------------------------------------------------
.text:000000000004D150 loc_4D150                               ; CODE XREF: sub_4D110+34↑j
.text:000000000004D150                 LDR             X8, [X1,#0x38]
.text:000000000004D154                 MOV             W21, W2
.text:000000000004D158                 MOV             X19, X1
.text:000000000004D15C                 MOV             X20, X0
.text:000000000004D160                 CBZ             X8, loc_4D170
.text:000000000004D164                 LDRB            W3, [X19,#0x5C]
.text:000000000004D168                 CBNZ            W3, loc_4D1A4
.text:000000000004D16C                 B               loc_4D1DC
.text:000000000004D170 ; ---------------------------------------------------------------------------
.text:000000000004D170 loc_4D170                               ; CODE XREF: sub_4D110+50↑j
.text:000000000004D170                 LDR             X0, [X20,#0x170]
.text:000000000004D174                 MOV             W3, #0x50 ; 'P'
.text:000000000004D178                 LDR             X1, [X19,#8]
.text:000000000004D17C                 MOV             W2, WZR
.text:000000000004D180                 BL              .VMProgramChange
.text:000000000004D184                 LDR             X0, [X20,#0x170]
.text:000000000004D188                 MOV             W2, WZR
.text:000000000004D18C                 LDR             X1, [X19,#8]
.text:000000000004D190                 MOV             W3, #7
.text:000000000004D194                 MOV             W4, #0x7F
.text:000000000004D198                 BL              .VMControlChange
.text:000000000004D19C                 LDRB            W3, [X19,#0x5C]
.text:000000000004D1A0                 CBZ             W3, loc_4D1DC
.text:000000000004D1A4 loc_4D1A4                               ; CODE XREF: sub_4D110+58↑j
.text:000000000004D1A4                 LDR             X0, [X20,#0x170]
.text:000000000004D1A8                 MOV             W2, WZR
.text:000000000004D1AC                 LDR             X1, [X19,#8]
.text:000000000004D1B0                 MOV             W4, WZR
.text:000000000004D1B4                 BL              .VMStopNote
.text:000000000004D1B8                 LDR             X8, [X19,#0x48]
.text:000000000004D1BC                 STRB            WZR, [X19,#0x5C]
.text:000000000004D1C0                 CBZ             X8, loc_4D1DC
.text:000000000004D1C4                 LDR             X9, [X19,#0x38]
.text:000000000004D1C8                 MOV             X0, XZR
.text:000000000004D1CC                 STR             XZR, [X19,#0x48]
.text:000000000004D1D0                 ADD             X8, X9, X8
.text:000000000004D1D4                 STR             X8, [X19,#0x38]
.text:000000000004D1D8                 B               loc_4D8F4
.text:000000000004D1DC ; ---------------------------------------------------------------------------
.text:000000000004D1DC loc_4D1DC                               ; CODE XREF: sub_4D110+5C↑j
.text:000000000004D1DC                                         ; sub_4D110+90↑j ...
.text:000000000004D1DC                 LDRSB           X8, [X19,#0x5E]
.text:000000000004D1E0                 MOV             W9, WZR
.text:000000000004D1E4                 LDR             X10, [X19,#0x40]
.text:000000000004D1E8                 ADD             X22, X19, #0x59 ; 'Y'
.text:000000000004D1EC                 LDRB            W11, [X19,#0x5D]
.text:000000000004D1F0                 MOV             W28, #0xA
.text:000000000004D1F4                 MUL             X8, X10, X8
.text:000000000004D1F8                 STR             W11, [SP,#0x70+var_64]
.text:000000000004D1FC                 STR             X8, [SP,#0x70+var_70]
.text:000000000004D200                 B               loc_4D21C
.text:000000000004D204 ; ---------------------------------------------------------------------------
.text:000000000004D204 loc_4D204                               ; CODE XREF: sub_4D110+380↓j
.text:000000000004D204                 MOV             W9, W27
.text:000000000004D208                 STRB            W8, [X19,#0x5B]
.text:000000000004D20C                 B               loc_4D21C
.text:000000000004D210 ; ---------------------------------------------------------------------------
.text:000000000004D210 loc_4D210                               ; CODE XREF: sub_4D110+1EC↓j
.text:000000000004D210                 CMP             X0, #3
.text:000000000004D214                 B.NE            loc_4D8F4
.text:000000000004D218 loc_4D218                               ; CODE XREF: sub_4D110+544↓j
.text:000000000004D218                 MOV             W9, #0x17
.text:000000000004D21C loc_4D21C                               ; CODE XREF: sub_4D110+F0↑j
.text:000000000004D21C                                         ; sub_4D110+FC↑j ...
.text:000000000004D21C                 MOV             W27, W9
.text:000000000004D220 loc_4D220                               ; CODE XREF: sub_4D110+19C↓j
.text:000000000004D220                 LDR             X23, [X20]
.text:000000000004D224 loc_4D224                               ; CODE XREF: sub_4D110+148↓j
.text:000000000004D224                                         ; sub_4D110+150↓j
.text:000000000004D224                 LDRB            W8, [X22]
.text:000000000004D228                 CBZ             W8, loc_4D238
.text:000000000004D22C                 STRB            W8, [SP,#0x70+var_60]
.text:000000000004D230                 STRB            WZR, [X22]
.text:000000000004D234                 B               loc_4D250
.text:000000000004D238 ; ---------------------------------------------------------------------------
.text:000000000004D238 loc_4D238                               ; CODE XREF: sub_4D110+118↑j
.text:000000000004D238                 LDR             X1, [X19]
.text:000000000004D23C                 ADD             X2, SP, #0x70+var_60
.text:000000000004D240                 MOV             X0, X23
.text:000000000004D244                 BL              .EAS_HWGetByte
.text:000000000004D248                 CBNZ            X0, loc_4D268
.text:000000000004D24C                 LDRB            W8, [SP,#0x70+var_60]
.text:000000000004D250 loc_4D250                               ; CODE XREF: sub_4D110+124↑j
.text:000000000004D250                 SUB             W9, W8, #9
.text:000000000004D254                 CMP             W9, #5
.text:000000000004D258                 B.CC            loc_4D224
.text:000000000004D25C                 CMP             W8, #0x20 ; ' '
.text:000000000004D260                 B.EQ            loc_4D224
.text:000000000004D264                 B               loc_4D2B4
.text:000000000004D268 ; ---------------------------------------------------------------------------
.text:000000000004D268 loc_4D268                               ; CODE XREF: sub_4D110+138↑j
.text:000000000004D268                 CMP             X0, #3
.text:000000000004D26C                 B.NE            loc_4D8F4
.text:000000000004D270                 ANDS            W8, W27, #0xFF
.text:000000000004D274                 B.NE            loc_4D82C
.text:000000000004D278                 LDRB            W8, [X19,#0x58]
.text:000000000004D27C                 CMP             W8, #0xF
.text:000000000004D280                 B.EQ            loc_4D294
.text:000000000004D284                 CBZ             W8, loc_4D840
.text:000000000004D288                 SUB             W8, W8, #1
.text:000000000004D28C                 STRB            W8, [X19,#0x58]
.text:000000000004D290                 B               loc_4D298
.text:000000000004D294 ; ---------------------------------------------------------------------------
.text:000000000004D294 loc_4D294                               ; CODE XREF: sub_4D110+170↑j
.text:000000000004D294                 CBNZ            W21, loc_4D840
.text:000000000004D298 loc_4D298                               ; CODE XREF: sub_4D110+180↑j
.text:000000000004D298                 LDR             X0, [X20]
.text:000000000004D29C                 LDR             X1, [X19]
.text:000000000004D2A0                 LDR             X2, [X19,#0x50]
.text:000000000004D2A4                 BL              .EAS_HWFileSeek
.text:000000000004D2A8                 MOV             W27, WZR
.text:000000000004D2AC                 CBZ             X0, loc_4D220
.text:000000000004D2B0                 B               loc_4D8F4
.text:000000000004D2B4 ; ---------------------------------------------------------------------------
.text:000000000004D2B4 loc_4D2B4                               ; CODE XREF: sub_4D110+154↑j
.text:000000000004D2B4                 SUB             W9, W8, #0x41 ; 'A'
.text:000000000004D2B8                 ORR             W10, W8, #0x20
.text:000000000004D2BC                 CMP             W9, #0x1A
.text:000000000004D2C0                 CSEL            W8, W10, W8, CC
.text:000000000004D2C4                 CMP             W8, #0x73 ; 's'
.text:000000000004D2C8                 B.EQ            loc_4D418
.text:000000000004D2CC                 CMP             W8, #0x6F ; 'o'
.text:000000000004D2D0                 B.EQ            loc_4D370
.text:000000000004D2D4                 CMP             W8, #0x62 ; 'b'
.text:000000000004D2D8                 B.NE            loc_4D498
.text:000000000004D2DC                 LDR             X23, [X20]
.text:000000000004D2E0                 LDRB            W8, [X22]
.text:000000000004D2E4                 TST             W8, #0xFF
.text:000000000004D2E8                 B.NE            loc_4D318
.text:000000000004D2EC loc_4D2EC                               ; CODE XREF: sub_4D110+204↓j
.text:000000000004D2EC                 LDR             X1, [X19]
.text:000000000004D2F0                 MOV             X0, X23
.text:000000000004D2F4                 MOV             X2, X22
.text:000000000004D2F8                 BL              .EAS_HWGetByte
.text:000000000004D2FC                 CBNZ            X0, loc_4D210
.text:000000000004D300                 LDRB            W8, [X22]
.text:000000000004D304                 B               loc_4D318
.text:000000000004D308 ; ---------------------------------------------------------------------------
.text:000000000004D308 loc_4D308                               ; CODE XREF: sub_4D110+214↓j
.text:000000000004D308                                         ; sub_4D110+21C↓j
.text:000000000004D308                 MOV             W8, WZR
.text:000000000004D30C                 STRB            WZR, [X22]
.text:000000000004D310                 TST             W8, #0xFF
.text:000000000004D314                 B.EQ            loc_4D2EC
.text:000000000004D318 loc_4D318                               ; CODE XREF: sub_4D110+1D8↑j
.text:000000000004D318                                         ; sub_4D110+1F4↑j
.text:000000000004D318                 AND             W9, W8, #0xFF
.text:000000000004D31C                 SUB             W10, W9, #9
.text:000000000004D320                 CMP             W10, #5
.text:000000000004D324                 B.CC            loc_4D308
.text:000000000004D328                 CMP             W9, #0x20 ; ' '
.text:000000000004D32C                 B.EQ            loc_4D308
.text:000000000004D330                 SUB             W9, W8, #0x41 ; 'A'
.text:000000000004D334                 AND             W9, W9, #0xFF
.text:000000000004D338                 ORR             W10, W8, #0x20
.text:000000000004D33C                 CMP             W9, #0x1A
.text:000000000004D340                 CSEL            W9, W10, W8, CC
.text:000000000004D344                 SUB             W9, W9, #0x30 ; '0'
.text:000000000004D348                 AND             W10, W9, #0xFF
.text:000000000004D34C                 MOV             W9, #0x17
.text:000000000004D350                 CMP             W10, #9
.text:000000000004D354                 B.HI            loc_4D21C
.text:000000000004D358                 LDR             X23, [X20]
.text:000000000004D35C                 MOV             W26, WZR
.text:000000000004D360                 MOV             X25, #0xFFFFFFFFFFFFFFFF
.text:000000000004D364                 TST             W8, #0xFF
.text:000000000004D368                 B.NE            loc_4D540
.text:000000000004D36C                 B               loc_4D514
.text:000000000004D370 ; ---------------------------------------------------------------------------
.text:000000000004D370 loc_4D370                               ; CODE XREF: sub_4D110+1C0↑j
.text:000000000004D370                 LDR             X23, [X20]
.text:000000000004D374                 MOV             W25, WZR
.text:000000000004D378                 LDRB            W8, [X22]
.text:000000000004D37C                 MOV             X26, #0xFFFFFFFFFFFFFFFF
.text:000000000004D380                 TST             W8, #0xFF
.text:000000000004D384                 B.NE            loc_4D3D8
.text:000000000004D388                 B               loc_4D3AC
.text:000000000004D38C ; ---------------------------------------------------------------------------
.text:000000000004D38C loc_4D38C                               ; CODE XREF: sub_4D110+300↓j
.text:000000000004D38C                 MUL             W10, W25, W28
.text:000000000004D390                 MOV             W8, WZR
.text:000000000004D394                 STRB            WZR, [X22]
.text:000000000004D398                 ADD             W9, W10, W9,SXTB
.text:000000000004D39C                 SUB             W25, W9, #0x30 ; '0'
.text:000000000004D3A0                 SXTW            X26, W25
.text:000000000004D3A4                 TST             W8, #0xFF
.text:000000000004D3A8                 B.NE            loc_4D3D8
.text:000000000004D3AC loc_4D3AC                               ; CODE XREF: sub_4D110+278↑j
.text:000000000004D3AC                                         ; sub_4D110+2C4↓j
.text:000000000004D3AC                 LDR             X1, [X19]
.text:000000000004D3B0                 MOV             X0, X23
.text:000000000004D3B4                 MOV             X2, X22
.text:000000000004D3B8                 BL              .EAS_HWGetByte
.text:000000000004D3BC                 CBNZ            X0, loc_4D4C4
.text:000000000004D3C0                 LDRB            W8, [X22]
.text:000000000004D3C4                 B               loc_4D3D8
.text:000000000004D3C8 ; ---------------------------------------------------------------------------
.text:000000000004D3C8 loc_4D3C8                               ; CODE XREF: sub_4D110+2D4↓j
.text:000000000004D3C8                                         ; sub_4D110+2DC↓j
.text:000000000004D3C8                 MOV             W8, WZR
.text:000000000004D3CC                 STRB            WZR, [X22]
.text:000000000004D3D0                 TST             W8, #0xFF
.text:000000000004D3D4                 B.EQ            loc_4D3AC
.text:000000000004D3D8 loc_4D3D8                               ; CODE XREF: sub_4D110+274↑j
.text:000000000004D3D8                                         ; sub_4D110+298↑j ...
.text:000000000004D3D8                 AND             W9, W8, #0xFF
.text:000000000004D3DC                 SUB             W10, W9, #9
.text:000000000004D3E0                 CMP             W10, #5
.text:000000000004D3E4                 B.CC            loc_4D3C8
.text:000000000004D3E8                 CMP             W9, #0x20 ; ' '
.text:000000000004D3EC                 B.EQ            loc_4D3C8
.text:000000000004D3F0                 SUB             W9, W8, #0x41 ; 'A'
.text:000000000004D3F4                 AND             W9, W9, #0xFF
.text:000000000004D3F8                 ORR             W10, W8, #0x20
.text:000000000004D3FC                 CMP             W9, #0x1A
.text:000000000004D400                 CSEL            W9, W10, W8, CC
.text:000000000004D404                 SUB             W8, W9, #0x30 ; '0'
.text:000000000004D408                 AND             W8, W8, #0xFF
.text:000000000004D40C                 CMP             W8, #9
.text:000000000004D410                 B.LS            loc_4D38C
.text:000000000004D414                 B               loc_4D4D4
.text:000000000004D418 ; ---------------------------------------------------------------------------
.text:000000000004D418 loc_4D418                               ; CODE XREF: sub_4D110+1B8↑j
.text:000000000004D418                 LDR             X23, [X20]
.text:000000000004D41C loc_4D41C                               ; CODE XREF: sub_4D110+340↓j
.text:000000000004D41C                                         ; sub_4D110+348↓j
.text:000000000004D41C                 LDRB            W8, [X22]
.text:000000000004D420                 CBZ             W8, loc_4D430
.text:000000000004D424                 STRB            W8, [SP,#0x70+var_5C]
.text:000000000004D428                 STRB            WZR, [X22]
.text:000000000004D42C                 B               loc_4D448
.text:000000000004D430 ; ---------------------------------------------------------------------------
.text:000000000004D430 loc_4D430                               ; CODE XREF: sub_4D110+310↑j
.text:000000000004D430                 LDR             X1, [X19]
.text:000000000004D434                 ADD             X2, SP, #0x70+var_5C
.text:000000000004D438                 MOV             X0, X23
.text:000000000004D43C                 BL              .EAS_HWGetByte
.text:000000000004D440                 CBNZ            X0, loc_4D8F4
.text:000000000004D444                 LDRB            W8, [SP,#0x70+var_5C]
.text:000000000004D448 loc_4D448                               ; CODE XREF: sub_4D110+31C↑j
.text:000000000004D448                 SUB             W9, W8, #9
.text:000000000004D44C                 CMP             W9, #5
.text:000000000004D450                 B.CC            loc_4D41C
.text:000000000004D454                 CMP             W8, #0x20 ; ' '
.text:000000000004D458                 B.EQ            loc_4D41C
.text:000000000004D45C                 SUB             W9, W8, #0x41 ; 'A'
.text:000000000004D460                 ORR             W10, W8, #0x20
.text:000000000004D464                 CMP             W9, #0x1A
.text:000000000004D468                 CSEL            W8, W10, W8, CC
.text:000000000004D46C                 MOV             X0, #0xFFFFFFFFFFFFFFEF
.text:000000000004D470                 SUB             W9, W8, #0x63 ; 'c'
.text:000000000004D474                 CMP             W9, #0x10
.text:000000000004D478                 B.HI            loc_4D8F4
.text:000000000004D47C                 MOV             W10, #1
.text:000000000004D480                 LSL             W9, W10, W9
.text:000000000004D484                 MOV             W10, #0x10801
.text:000000000004D48C                 TST             W9, W10
.text:000000000004D490                 B.NE            loc_4D204
.text:000000000004D494                 B               loc_4D8F4
.text:000000000004D498 ; ---------------------------------------------------------------------------
.text:000000000004D498 loc_4D498                               ; CODE XREF: sub_4D110+1C8↑j
.text:000000000004D498                 SUB             W9, W8, #0x30 ; '0'
.text:000000000004D49C                 CMP             W9, #9
.text:000000000004D4A0                 B.LS            loc_4D580
.text:000000000004D4A4                 SUB             W9, W8, #0x61 ; 'a'
.text:000000000004D4A8                 CMP             W9, #7
.text:000000000004D4AC                 B.HI            loc_4D688
.text:000000000004D4B0                 ADRP            X9, #unk_55B8@PAGE
.text:000000000004D4B4                 ADD             X9, X9, #unk_55B8@PAGEOFF
.text:000000000004D4B8                 ADD             X8, X9, W8,SXTB
.text:000000000004D4BC                 LDURB           W9, [X8,#-0x61]
.text:000000000004D4C0                 B               loc_4D21C
.text:000000000004D4C4 ; ---------------------------------------------------------------------------
.text:000000000004D4C4 loc_4D4C4                               ; CODE XREF: sub_4D110+2AC↑j
.text:000000000004D4C4                 CMP             X0, #3
.text:000000000004D4C8                 B.NE            loc_4D8F4
.text:000000000004D4CC                 CMN             X26, #1
.text:000000000004D4D0                 B.EQ            loc_4D8E8
.text:000000000004D4D4 loc_4D4D4                               ; CODE XREF: sub_4D110+304↑j
.text:000000000004D4D4                 AND             X8, X26, #0xFFFFFFFFFFFFFFFC
.text:000000000004D4D8                 CMP             X8, #4
.text:000000000004D4DC                 B.NE            loc_4D8F0
.text:000000000004D4E0                 ADD             W8, W26, W26,LSL#1
.text:000000000004D4E4                 LSL             W8, W8, #2
.text:000000000004D4E8                 MOV             W9, W27
.text:000000000004D4EC                 STRB            W8, [X19,#0x5D]
.text:000000000004D4F0                 B               loc_4D21C
.text:000000000004D4F4 ; ---------------------------------------------------------------------------
.text:000000000004D4F4 loc_4D4F4                               ; CODE XREF: sub_4D110+468↓j
.text:000000000004D4F4                 MUL             W10, W26, W28
.text:000000000004D4F8                 MOV             W8, WZR
.text:000000000004D4FC                 STRB            WZR, [X22]
.text:000000000004D500                 ADD             W9, W10, W9,SXTB
.text:000000000004D504                 SUB             W26, W9, #0x30 ; '0'
.text:000000000004D508                 SXTW            X25, W26
.text:000000000004D50C                 TST             W8, #0xFF
.text:000000000004D510                 B.NE            loc_4D540
.text:000000000004D514 loc_4D514                               ; CODE XREF: sub_4D110+25C↑j
.text:000000000004D514                                         ; sub_4D110+42C↓j
.text:000000000004D514                 LDR             X1, [X19]
.text:000000000004D518                 MOV             X0, X23
.text:000000000004D51C                 MOV             X2, X22
.text:000000000004D520                 BL              .EAS_HWGetByte
.text:000000000004D524                 CBNZ            X0, loc_4D630
.text:000000000004D528                 LDRB            W8, [X22]
.text:000000000004D52C                 B               loc_4D540
.text:000000000004D530 ; ---------------------------------------------------------------------------
.text:000000000004D530 loc_4D530                               ; CODE XREF: sub_4D110+43C↓j
.text:000000000004D530                                         ; sub_4D110+444↓j
.text:000000000004D530                 MOV             W8, WZR
.text:000000000004D534                 STRB            WZR, [X22]
.text:000000000004D538                 TST             W8, #0xFF
.text:000000000004D53C                 B.EQ            loc_4D514
.text:000000000004D540 loc_4D540                               ; CODE XREF: sub_4D110+258↑j
.text:000000000004D540                                         ; sub_4D110+400↑j ...
.text:000000000004D540                 AND             W9, W8, #0xFF
.text:000000000004D544                 SUB             W10, W9, #9
.text:000000000004D548                 CMP             W10, #5
.text:000000000004D54C                 B.CC            loc_4D530
.text:000000000004D550                 CMP             W9, #0x20 ; ' '
.text:000000000004D554                 B.EQ            loc_4D530
.text:000000000004D558                 SUB             W9, W8, #0x41 ; 'A'
.text:000000000004D55C                 AND             W9, W9, #0xFF
.text:000000000004D560                 ORR             W10, W8, #0x20
.text:000000000004D564                 CMP             W9, #0x1A
.text:000000000004D568                 CSEL            W9, W10, W8, CC
.text:000000000004D56C                 SUB             W8, W9, #0x30 ; '0'
.text:000000000004D570                 AND             W8, W8, #0xFF
.text:000000000004D574                 CMP             W8, #9
.text:000000000004D578                 B.LS            loc_4D4F4
.text:000000000004D57C                 B               loc_4D640
.text:000000000004D580 ; ---------------------------------------------------------------------------
.text:000000000004D580 loc_4D580                               ; CODE XREF: sub_4D110+390↑j
.text:000000000004D580                 STRB            W8, [X22]
.text:000000000004D584                 TST             W27, #0xFF
.text:000000000004D588                 LDR             X23, [X20]
.text:000000000004D58C                 B.EQ            loc_4D6A4
.text:000000000004D590                 MOV             W26, WZR
.text:000000000004D594                 MOV             X25, #0xFFFFFFFFFFFFFFFF
.text:000000000004D598                 TST             W8, #0xFF
.text:000000000004D59C                 B.NE            loc_4D5F0
.text:000000000004D5A0                 B               loc_4D5C4
.text:000000000004D5A4 ; ---------------------------------------------------------------------------
.text:000000000004D5A4 loc_4D5A4                               ; CODE XREF: sub_4D110+518↓j
.text:000000000004D5A4                 MUL             W10, W26, W28
.text:000000000004D5A8                 MOV             W8, WZR
.text:000000000004D5AC                 STRB            WZR, [X22]
.text:000000000004D5B0                 ADD             W9, W10, W9,SXTB
.text:000000000004D5B4                 SUB             W26, W9, #0x30 ; '0'
.text:000000000004D5B8                 SXTW            X25, W26
.text:000000000004D5BC                 TST             W8, #0xFF
.text:000000000004D5C0                 B.NE            loc_4D5F0
.text:000000000004D5C4 loc_4D5C4                               ; CODE XREF: sub_4D110+490↑j
.text:000000000004D5C4                                         ; sub_4D110+4DC↓j
.text:000000000004D5C4                 LDR             X1, [X19]
.text:000000000004D5C8                 MOV             X0, X23
.text:000000000004D5CC                 MOV             X2, X22
.text:000000000004D5D0                 BL              .EAS_HWGetByte
.text:000000000004D5D4                 CBNZ            X0, loc_4D658
.text:000000000004D5D8                 LDRB            W8, [X22]
.text:000000000004D5DC                 B               loc_4D5F0
.text:000000000004D5E0 ; ---------------------------------------------------------------------------
.text:000000000004D5E0 loc_4D5E0                               ; CODE XREF: sub_4D110+4EC↓j
.text:000000000004D5E0                                         ; sub_4D110+4F4↓j
.text:000000000004D5E0                 MOV             W8, WZR
.text:000000000004D5E4                 STRB            WZR, [X22]
.text:000000000004D5E8                 TST             W8, #0xFF
.text:000000000004D5EC                 B.EQ            loc_4D5C4
.text:000000000004D5F0 loc_4D5F0                               ; CODE XREF: sub_4D110+48C↑j
.text:000000000004D5F0                                         ; sub_4D110+4B0↑j ...
.text:000000000004D5F0                 AND             W9, W8, #0xFF
.text:000000000004D5F4                 SUB             W10, W9, #9
.text:000000000004D5F8                 CMP             W10, #5
.text:000000000004D5FC                 B.CC            loc_4D5E0
.text:000000000004D600                 CMP             W9, #0x20 ; ' '
.text:000000000004D604                 B.EQ            loc_4D5E0
.text:000000000004D608                 SUB             W9, W8, #0x41 ; 'A'
.text:000000000004D60C                 AND             W9, W9, #0xFF
.text:000000000004D610                 ORR             W10, W8, #0x20
.text:000000000004D614                 CMP             W9, #0x1A
.text:000000000004D618                 CSEL            W9, W10, W8, CC
.text:000000000004D61C                 SUB             W8, W9, #0x30 ; '0'
.text:000000000004D620                 AND             W8, W8, #0xFF
.text:000000000004D624                 CMP             W8, #9
.text:000000000004D628                 B.LS            loc_4D5A4
.text:000000000004D62C                 B               loc_4D668
.text:000000000004D630 ; ---------------------------------------------------------------------------
.text:000000000004D630 loc_4D630                               ; CODE XREF: sub_4D110+414↑j
.text:000000000004D630                 CMP             X0, #3
.text:000000000004D634                 B.NE            loc_4D8F4
.text:000000000004D638                 CMN             X25, #1
.text:000000000004D63C                 B.EQ            loc_4D8E8
.text:000000000004D640 loc_4D640                               ; CODE XREF: sub_4D110+46C↑j
.text:000000000004D640                 AND             X8, X25, #0xFFFFFFFFFFFFFFFC
.text:000000000004D644                 CMP             X8, #4
.text:000000000004D648                 B.NE            loc_4D7F0
.text:000000000004D64C                 MOV             W8, W25
.text:000000000004D650                 STR             W25, [SP,#0x70+var_64]
.text:000000000004D654                 B               loc_4D218
.text:000000000004D658 ; ---------------------------------------------------------------------------
.text:000000000004D658 loc_4D658                               ; CODE XREF: sub_4D110+4C4↑j
.text:000000000004D658                 CMP             X0, #3
.text:000000000004D65C                 B.NE            loc_4D8F4
.text:000000000004D660                 CMN             X25, #1
.text:000000000004D664                 B.EQ            loc_4D8E8
.text:000000000004D668 loc_4D668                               ; CODE XREF: sub_4D110+51C↑j
.text:000000000004D668                 AND             X8, X25, #0xFFFFFFFFFFFFFFFC
.text:000000000004D66C                 CMP             X8, #4
.text:000000000004D670                 B.NE            loc_4D8F0
.text:000000000004D674                 ADD             W8, W25, W25,LSL#1
.text:000000000004D678                 LSL             W8, W8, #2
.text:000000000004D67C                 MOV             W9, W27
.text:000000000004D680                 STR             W8, [SP,#0x70+var_64]
.text:000000000004D684                 B               loc_4D21C
.text:000000000004D688 ; ---------------------------------------------------------------------------
.text:000000000004D688 loc_4D688                               ; CODE XREF: sub_4D110+39C↑j
.text:000000000004D688                 CMP             W8, #0x6F ; 'o'
.text:000000000004D68C                 B.LE            loc_4D7C0
.text:000000000004D690                 MOV             W9, #1
.text:000000000004D694                 CMP             W8, #0x70 ; 'p'
.text:000000000004D698                 B.EQ            loc_4D21C
.text:000000000004D69C                 MOV             W9, W27
.text:000000000004D6A0                 B               loc_4D21C
.text:000000000004D6A4 ; ---------------------------------------------------------------------------
.text:000000000004D6A4 loc_4D6A4                               ; CODE XREF: sub_4D110+47C↑j
.text:000000000004D6A4                 MOV             W26, WZR
.text:000000000004D6A8                 MOV             X25, #0xFFFFFFFFFFFFFFFF
.text:000000000004D6AC                 TST             W8, #0xFF
.text:000000000004D6B0                 B.NE            loc_4D704
.text:000000000004D6B4                 B               loc_4D6D8
.text:000000000004D6B8 ; ---------------------------------------------------------------------------
.text:000000000004D6B8 loc_4D6B8                               ; CODE XREF: sub_4D110+62C↓j
.text:000000000004D6B8                 MUL             W10, W26, W28
.text:000000000004D6BC                 MOV             W8, WZR
.text:000000000004D6C0                 STRB            WZR, [X22]
.text:000000000004D6C4                 ADD             W9, W10, W9,SXTB
.text:000000000004D6C8                 SUB             W26, W9, #0x30 ; '0'
.text:000000000004D6CC                 SXTW            X25, W26
.text:000000000004D6D0                 TST             W8, #0xFF
.text:000000000004D6D4                 B.NE            loc_4D704
.text:000000000004D6D8 loc_4D6D8                               ; CODE XREF: sub_4D110+5A4↑j
.text:000000000004D6D8                                         ; sub_4D110+5F0↓j
.text:000000000004D6D8                 LDR             X1, [X19]
.text:000000000004D6DC                 MOV             X0, X23
.text:000000000004D6E0                 MOV             X2, X22
.text:000000000004D6E4                 BL              .EAS_HWGetByte
.text:000000000004D6E8                 CBNZ            X0, loc_4D768
.text:000000000004D6EC                 LDRB            W8, [X22]
.text:000000000004D6F0                 B               loc_4D704
.text:000000000004D6F4 ; ---------------------------------------------------------------------------
.text:000000000004D6F4 loc_4D6F4                               ; CODE XREF: sub_4D110+600↓j
.text:000000000004D6F4                                         ; sub_4D110+608↓j
.text:000000000004D6F4                 MOV             W8, WZR
.text:000000000004D6F8                 STRB            WZR, [X22]
.text:000000000004D6FC                 TST             W8, #0xFF
.text:000000000004D700                 B.EQ            loc_4D6D8
.text:000000000004D704 loc_4D704                               ; CODE XREF: sub_4D110+5A0↑j
.text:000000000004D704                                         ; sub_4D110+5C4↑j ...
.text:000000000004D704                 AND             W9, W8, #0xFF
.text:000000000004D708                 SUB             W10, W9, #9
.text:000000000004D70C                 CMP             W10, #5
.text:000000000004D710                 B.CC            loc_4D6F4
.text:000000000004D714                 CMP             W9, #0x20 ; ' '
.text:000000000004D718                 B.EQ            loc_4D6F4
.text:000000000004D71C                 SUB             W9, W8, #0x41 ; 'A'
.text:000000000004D720                 AND             W9, W9, #0xFF
.text:000000000004D724                 ORR             W10, W8, #0x20
.text:000000000004D728                 CMP             W9, #0x1A
.text:000000000004D72C                 CSEL            W9, W10, W8, CC
.text:000000000004D730                 SUB             W8, W9, #0x30 ; '0'
.text:000000000004D734                 AND             W8, W8, #0xFF
.text:000000000004D738                 CMP             W8, #9
.text:000000000004D73C                 B.LS            loc_4D6B8
.text:000000000004D740                 CMP             X25, #0x20 ; ' '
.text:000000000004D744                 B.HI            loc_4D8F0
.text:000000000004D748                 MOV             X9, #0x10116
.text:000000000004D750                 MOV             W8, #1
.text:000000000004D754                 MOVK            X9, #1,LSL#32
.text:000000000004D758                 LSL             X8, X8, X25
.text:000000000004D75C                 TST             X8, X9
.text:000000000004D760                 B.NE            loc_4D798
.text:000000000004D764                 B               loc_4D8F0
.text:000000000004D768 ; ---------------------------------------------------------------------------
.text:000000000004D768 loc_4D768                               ; CODE XREF: sub_4D110+5D8↑j
.text:000000000004D768                 CMP             X0, #3
.text:000000000004D76C                 B.NE            loc_4D8F4
.text:000000000004D770                 ADD             X8, X25, #1
.text:000000000004D774                 CMP             X8, #0x21 ; '!'
.text:000000000004D778                 B.HI            loc_4D8F0
.text:000000000004D77C                 MOV             X10, #0x2022C
.text:000000000004D784                 MOV             W9, #1
.text:000000000004D788                 MOVK            X10, #2,LSL#32
.text:000000000004D78C                 LSL             X9, X9, X8
.text:000000000004D790                 TST             X9, X10
.text:000000000004D794                 B.EQ            loc_4D8E4
.text:000000000004D798 loc_4D798                               ; CODE XREF: sub_4D110+650↑j
.text:000000000004D798                 MOV             W8, #0x40 ; '@'
.text:000000000004D79C loc_4D79C                               ; CODE XREF: sub_4D110+694↓j
.text:000000000004D79C                 ASR             X25, X25, #1
.text:000000000004D7A0                 SBFX            W8, W8, #1, #7
.text:000000000004D7A4                 CBNZ            X25, loc_4D79C
.text:000000000004D7A8                 LDR             X9, [X19,#0x40]
.text:000000000004D7AC                 SXTW            X8, W8
.text:000000000004D7B0                 MUL             X8, X9, X8
.text:000000000004D7B4                 MOV             W9, WZR
.text:000000000004D7B8                 STR             X8, [SP,#0x70+var_70]
.text:000000000004D7BC                 B               loc_4D21C
.text:000000000004D7C0 ; ---------------------------------------------------------------------------
.text:000000000004D7C0 loc_4D7C0                               ; CODE XREF: sub_4D110+57C↑j
.text:000000000004D7C0                 CMP             W8, #0x23 ; '#'
.text:000000000004D7C4                 B.EQ            loc_4D814
.text:000000000004D7C8                 CMP             W8, #0x2C ; ','
.text:000000000004D7CC                 B.EQ            loc_4D820
.text:000000000004D7D0                 MOV             W9, W27
.text:000000000004D7D4                 CMP             W8, #0x2E ; '.'
.text:000000000004D7D8                 B.NE            loc_4D21C
.text:000000000004D7DC                 LDR             X8, [SP,#0x70+var_70]
.text:000000000004D7E0                 MOV             W9, W27
.text:000000000004D7E4                 ADD             X8, X8, X8,ASR#1
.text:000000000004D7E8                 STR             X8, [SP,#0x70+var_70]
.text:000000000004D7EC                 B               loc_4D21C
.text:000000000004D7F0 ; ---------------------------------------------------------------------------
.text:000000000004D7F0 loc_4D7F0                               ; CODE XREF: sub_4D110+538↑j
.text:000000000004D7F0                 SUB             X8, X25, #0x19
.text:000000000004D7F4                 CMP             X8, #0x36B
.text:000000000004D7F8                 B.HI            loc_4D8F0
.text:000000000004D7FC                 MOV             W8, #0x1D4C00
.text:000000000004D804                 MOV             W9, W27
.text:000000000004D808                 UDIV            W8, W8, W25
.text:000000000004D80C                 STR             X8, [X19,#0x40]
.text:000000000004D810                 B               loc_4D21C
.text:000000000004D814 ; ---------------------------------------------------------------------------
.text:000000000004D814 loc_4D814                               ; CODE XREF: sub_4D110+6B4↑j
.text:000000000004D814                 TST             W27, #0xFF
.text:000000000004D818                 CSINC           W9, WZR, W27, EQ
.text:000000000004D81C                 B               loc_4D21C
.text:000000000004D820 ; ---------------------------------------------------------------------------
.text:000000000004D820 loc_4D820                               ; CODE XREF: sub_4D110+6BC↑j
.text:000000000004D820                 ANDS            W8, W27, #0xFF
.text:000000000004D824                 MOV             W9, W27
.text:000000000004D828                 B.EQ            loc_4D21C
.text:000000000004D82C loc_4D82C                               ; CODE XREF: sub_4D110+164↑j
.text:000000000004D82C                 CMP             W8, #1
.text:000000000004D830                 B.NE            loc_4D85C
.text:000000000004D834                 LDR             X8, [X19,#0x38]
.text:000000000004D838                 LDR             X9, [SP,#0x70+var_70]
.text:000000000004D83C                 B               loc_4D8CC
.text:000000000004D840 ; ---------------------------------------------------------------------------
.text:000000000004D840 loc_4D840                               ; CODE XREF: sub_4D110+174↑j
.text:000000000004D840                                         ; sub_4D110:loc_4D294↑j
.text:000000000004D840                 MOV             W8, #2
.text:000000000004D844                 LDR             X1, [X19,#8]
.text:000000000004D848                 STRB            W8, [X19,#0x5A]
.text:000000000004D84C                 LDR             X0, [X20,#0x170]
.text:000000000004D850                 BL              .VMReleaseAllVoices
.text:000000000004D854                 MOV             X0, XZR
.text:000000000004D858                 B               loc_4D8F4
.text:000000000004D85C ; ---------------------------------------------------------------------------
.text:000000000004D85C loc_4D85C                               ; CODE XREF: sub_4D110+720↑j
.text:000000000004D85C                 LDR             W8, [SP,#0x70+var_64]
.text:000000000004D860                 ADD             W3, W27, W8
.text:000000000004D864                 STRB            W3, [X19,#0x5C]
.text:000000000004D868                 CBNZ            W21, loc_4D880
.text:000000000004D86C                 LDR             X0, [X20,#0x170]
.text:000000000004D870                 MOV             W2, WZR
.text:000000000004D874                 LDR             X1, [X19,#8]
.text:000000000004D878                 MOV             W4, #0x7F
.text:000000000004D87C                 BL              .VMStartNote
.text:000000000004D880 loc_4D880                               ; CODE XREF: sub_4D110+758↑j
.text:000000000004D880                 LDRSB           W8, [X19,#0x5B]
.text:000000000004D884                 LDR             X9, [SP,#0x70+var_70]
.text:000000000004D888                 CMP             W8, #0x63 ; 'c'
.text:000000000004D88C                 B.EQ            loc_4D8A8
.text:000000000004D890                 CMP             W8, #0x6E ; 'n'
.text:000000000004D894                 B.EQ            loc_4D8B4
.text:000000000004D898                 CMP             W8, #0x73 ; 's'
.text:000000000004D89C                 B.NE            loc_4D8C0
.text:000000000004D8A0                 ASR             X8, X9, #1
.text:000000000004D8A4                 B               loc_4D8B8
.text:000000000004D8A8 ; ---------------------------------------------------------------------------
.text:000000000004D8A8 loc_4D8A8                               ; CODE XREF: sub_4D110+77C↑j
.text:000000000004D8A8                 MOV             X8, XZR
.text:000000000004D8AC                 STR             XZR, [X19,#0x48]
.text:000000000004D8B0                 B               loc_4D8C4
.text:000000000004D8B4 ; ---------------------------------------------------------------------------
.text:000000000004D8B4 loc_4D8B4                               ; CODE XREF: sub_4D110+784↑j
.text:000000000004D8B4                 ASR             X8, X9, #4
.text:000000000004D8B8 loc_4D8B8                               ; CODE XREF: sub_4D110+794↑j
.text:000000000004D8B8                 STR             X8, [X19,#0x48]
.text:000000000004D8BC                 B               loc_4D8C4
.text:000000000004D8C0 ; ---------------------------------------------------------------------------
.text:000000000004D8C0 loc_4D8C0                               ; CODE XREF: sub_4D110+78C↑j
.text:000000000004D8C0                 LDR             X8, [X19,#0x48]
.text:000000000004D8C4 loc_4D8C4                               ; CODE XREF: sub_4D110+7A0↑j
.text:000000000004D8C4                                         ; sub_4D110+7AC↑j
.text:000000000004D8C4                 SUB             X8, X9, X8
.text:000000000004D8C8                 LDR             X9, [X19,#0x38]
.text:000000000004D8CC loc_4D8CC                               ; CODE XREF: sub_4D110+72C↑j
.text:000000000004D8CC                 ADD             X8, X8, X9
.text:000000000004D8D0                 MOV             W9, #1
.text:000000000004D8D4                 MOV             X0, XZR
.text:000000000004D8D8                 STR             X8, [X19,#0x38]
.text:000000000004D8DC                 STRB            W9, [X19,#0x5A]
.text:000000000004D8E0                 B               loc_4D8F4
.text:000000000004D8E4 ; ---------------------------------------------------------------------------
.text:000000000004D8E4 loc_4D8E4                               ; CODE XREF: sub_4D110+684↑j
.text:000000000004D8E4                 CBNZ            X8, loc_4D8F0
.text:000000000004D8E8 loc_4D8E8                               ; CODE XREF: sub_4D110+3C0↑j
.text:000000000004D8E8                                         ; sub_4D110+52C↑j ...
.text:000000000004D8E8                 MOV             W0, #3
.text:000000000004D8EC                 B               loc_4D8F4
.text:000000000004D8F0 ; ---------------------------------------------------------------------------
.text:000000000004D8F0 loc_4D8F0                               ; CODE XREF: sub_4D110+3CC↑j
.text:000000000004D8F0                                         ; sub_4D110+560↑j ...
.text:000000000004D8F0                 MOV             X0, #0xFFFFFFFFFFFFFFEF
.text:000000000004D8F4 loc_4D8F4                               ; CODE XREF: sub_4D110+3C↑j
.text:000000000004D8F4                                         ; sub_4D110+C8↑j ...
.text:000000000004D8F4                 LDR             X8, [X24,#0x28]
.text:000000000004D8F8                 LDR             X9, [SP,#0x70+var_58]
.text:000000000004D8FC                 CMP             X8, X9
.text:000000000004D900                 B.NE            loc_4D924
.text:000000000004D904                 LDP             X29, X30, [SP,#0x70+var_s0]
.text:000000000004D908                 LDP             X20, X19, [SP,#0x70+var_10]
.text:000000000004D90C                 LDP             X22, X21, [SP,#0x70+var_20]
.text:000000000004D910                 LDP             X24, X23, [SP,#0x70+var_30]
.text:000000000004D914                 LDP             X26, X25, [SP,#0x70+var_40]
.text:000000000004D918                 LDP             X28, X27, [SP,#0x70+var_50]
.text:000000000004D91C                 ADD             SP, SP, #0x80
.text:000000000004D920                 RET
.text:000000000004D924 ; ---------------------------------------------------------------------------
.text:000000000004D924 loc_4D924                               ; CODE XREF: sub_4D110+7F0↑j
.text:000000000004D924                 BL              .__stack_chk_fail
.text:000000000004D924 ; } // starts at 4D110
.text:000000000004D924 ; End of function sub_4D110
.text:000000000004D928 ; =============== S U B R O U T I N E =======================================
.text:000000000004D928 ; Attributes: bp-based frame
.text:000000000004D928 sub_4D928                               ; DATA XREF: .data.rel.ro:0000000000058238↓o
.text:000000000004D928 var_10          = -0x10
.text:000000000004D928 var_s0          =  0
.text:000000000004D928 ; __unwind {
.text:000000000004D928                 STP             X20, X19, [SP,#-0x10+var_10]!
.text:000000000004D92C                 STP             X29, X30, [SP,#0x10+var_s0]
.text:000000000004D930                 ADD             X29, SP, #0x10
.text:000000000004D934                 LDRB            W8, [X1,#0x5A]
.text:000000000004D938                 MOV             X20, X1
.text:000000000004D93C                 MOV             X19, X2
.text:000000000004D940                 CMP             W8, #2
.text:000000000004D944                 B.NE            loc_4D958
.text:000000000004D948                 LDR             X0, [X20,#8]
.text:000000000004D94C                 BL              .VMActiveVoices
.text:000000000004D950                 CBZ             X0, loc_4D974
.text:000000000004D954                 LDRB            W8, [X20,#0x5A]
.text:000000000004D958 loc_4D958                               ; CODE XREF: sub_4D928+1C↑j
.text:000000000004D958                 CMP             W8, #3
.text:000000000004D95C                 B.NE            loc_4D984
.text:000000000004D960                 LDR             X0, [X20,#8]
.text:000000000004D964                 BL              .VMActiveVoices
.text:000000000004D968                 CBZ             X0, loc_4D97C
.text:000000000004D96C                 LDRB            W8, [X20,#0x5A]
.text:000000000004D970                 B               loc_4D984
.text:000000000004D974 ; ---------------------------------------------------------------------------
.text:000000000004D974 loc_4D974                               ; CODE XREF: sub_4D928+28↑j
.text:000000000004D974                 MOV             W8, #4
.text:000000000004D978                 B               loc_4D980
.text:000000000004D97C ; ---------------------------------------------------------------------------
.text:000000000004D97C loc_4D97C                               ; CODE XREF: sub_4D928+40↑j
.text:000000000004D97C                 MOV             W8, #5
.text:000000000004D980 loc_4D980                               ; CODE XREF: sub_4D928+50↑j
.text:000000000004D980                 STRB            W8, [X20,#0x5A]
.text:000000000004D984 loc_4D984                               ; CODE XREF: sub_4D928+34↑j
.text:000000000004D984                                         ; sub_4D928+48↑j
.text:000000000004D984                 STR             X8, [X19]
.text:000000000004D988                 MOV             X0, XZR
.text:000000000004D98C                 LDP             X29, X30, [SP,#0x10+var_s0]
.text:000000000004D990                 LDP             X20, X19, [SP+0x10+var_10],#0x20
.text:000000000004D994                 RET
.text:000000000004D994 ; } // starts at 4D928
.text:000000000004D994 ; End of function sub_4D928
.text:000000000004D998 ; =============== S U B R O U T I N E =======================================
.text:000000000004D998 ; Attributes: bp-based frame
.text:000000000004D998 sub_4D998                               ; DATA XREF: .data.rel.ro:0000000000058240↓o
.text:000000000004D998 var_20          = -0x20
.text:000000000004D998 var_10          = -0x10
.text:000000000004D998 var_s0          =  0
.text:000000000004D998 ; __unwind {
.text:000000000004D998                 STR             X21, [SP,#-0x10+var_20]!
.text:000000000004D99C                 STP             X20, X19, [SP,#0x20+var_10]
.text:000000000004D9A0                 STP             X29, X30, [SP,#0x20+var_s0]
.text:000000000004D9A4                 ADD             X29, SP, #0x20
.text:000000000004D9A8                 MOV             X19, X1
.text:000000000004D9AC                 LDR             X1, [X1]
.text:000000000004D9B0                 MOV             X20, X0
.text:000000000004D9B4                 LDR             X0, [X0]
.text:000000000004D9B8                 BL              .EAS_HWCloseFile
.text:000000000004D9BC                 MOV             X21, X0
.text:000000000004D9C0                 CBNZ            X0, loc_4D9E8
.text:000000000004D9C4                 LDR             X1, [X19,#8]
.text:000000000004D9C8                 CBZ             X1, loc_4D9D4
.text:000000000004D9CC                 MOV             X0, X20
.text:000000000004D9D0                 BL              .VMMIDIShutdown
.text:000000000004D9D4 loc_4D9D4                               ; CODE XREF: sub_4D998+30↑j
.text:000000000004D9D4                 LDRB            W8, [X20,#0x18B]
.text:000000000004D9D8                 CBNZ            W8, loc_4D9E8
.text:000000000004D9DC                 LDR             X0, [X20]
.text:000000000004D9E0                 MOV             X1, X19
.text:000000000004D9E4                 BL              .EAS_HWFree
.text:000000000004D9E8 loc_4D9E8                               ; CODE XREF: sub_4D998+28↑j
.text:000000000004D9E8                                         ; sub_4D998+40↑j
.text:000000000004D9E8                 LDP             X29, X30, [SP,#0x20+var_s0]
.text:000000000004D9EC                 LDP             X20, X19, [SP,#0x20+var_10]
.text:000000000004D9F0                 MOV             X0, X21
.text:000000000004D9F4                 LDR             X21, [SP+0x20+var_20],#0x30
.text:000000000004D9F8                 RET
.text:000000000004D9F8 ; } // starts at 4D998
.text:000000000004D9F8 ; End of function sub_4D998
.text:000000000004D9F8 ; ---------------------------------------------------------------------------
.text:000000000004D9FC                 ALIGN 0x20
.text:000000000004DA00 ; =============== S U B R O U T I N E =======================================
.text:000000000004DA00 ; Attributes: bp-based frame
.text:000000000004DA00 sub_4DA00                               ; DATA XREF: .data.rel.ro:0000000000058248↓o
.text:000000000004DA00 var_10          = -0x10
.text:000000000004DA00 var_s0          =  0
.text:000000000004DA00 ; __unwind {
.text:000000000004DA00                 STP             X20, X19, [SP,#-0x10+var_10]!
.text:000000000004DA04                 STP             X29, X30, [SP,#0x10+var_s0]
.text:000000000004DA08                 ADD             X29, SP, #0x10
.text:000000000004DA0C                 MOV             X19, X1
.text:000000000004DA10                 LDR             X1, [X1,#8]
.text:000000000004DA14                 MOV             X20, X0
.text:000000000004DA18                 LDR             X0, [X0,#0x170]
.text:000000000004DA1C                 MOV             W2, #1
.text:000000000004DA20                 BL              .VMReset
.text:000000000004DA24                 MOV             W8, #7
.text:000000000004DA28                 STR             XZR, [X19,#0x38]
.text:000000000004DA2C                 STRB            WZR, [X19,#0x5C]
.text:000000000004DA30                 LDR             X1, [X19]
.text:000000000004DA34                 STRB            W8, [X19,#0x5A]
.text:000000000004DA38                 LDR             X0, [X20]
.text:000000000004DA3C                 LDR             X2, [X19,#0x30]
.text:000000000004DA40                 BL              .EAS_HWFileSeek
.text:000000000004DA44                 CBNZ            X0, loc_4DA60
.text:000000000004DA48                 MOV             X0, X20
.text:000000000004DA4C                 MOV             X1, X19
.text:000000000004DA50                 MOV             W2, #1
.text:000000000004DA54                 BL              sub_4DB58
.text:000000000004DA58                 CBNZ            X0, loc_4DA60
.text:000000000004DA5C                 STRB            WZR, [X19,#0x5A]
.text:000000000004DA60 loc_4DA60                               ; CODE XREF: sub_4DA00+44↑j
.text:000000000004DA60                                         ; sub_4DA00+58↑j
.text:000000000004DA60                 LDP             X29, X30, [SP,#0x10+var_s0]
.text:000000000004DA64                 LDP             X20, X19, [SP+0x10+var_10],#0x20
.text:000000000004DA68                 RET
.text:000000000004DA68 ; } // starts at 4DA00
.text:000000000004DA68 ; End of function sub_4DA00
.text:000000000004DA68 ; ---------------------------------------------------------------------------
.text:000000000004DA6C                 ALIGN 0x10
.text:000000000004DA70 ; =============== S U B R O U T I N E =======================================
.text:000000000004DA70 sub_4DA70                               ; DATA XREF: .data.rel.ro:0000000000058250↓o
.text:000000000004DA70 var_20          = -0x20
.text:000000000004DA70 var_10          = -0x10
.text:000000000004DA70 ; __unwind {
.text:000000000004DA70                 LDRB            W8, [X1,#0x5A]
.text:000000000004DA74                 CMP             W8, #4
.text:000000000004DA78                 B.NE            loc_4DA84
.text:000000000004DA7C                 MOV             X0, #0xFFFFFFFFFFFFFFE8
.text:000000000004DA80                 RET
.text:000000000004DA84 ; ---------------------------------------------------------------------------
.text:000000000004DA84 loc_4DA84                               ; CODE XREF: sub_4DA70+8↑j
.text:000000000004DA84                 STR             X19, [SP,#var_20]!
.text:000000000004DA88                 STP             X29, X30, [SP,#0x20+var_10]
.text:000000000004DA8C                 ADD             X29, SP, #0x20+var_10
.text:000000000004DA90                 MOV             X19, X1
.text:000000000004DA94                 LDR             X0, [X0,#0x170]
.text:000000000004DA98                 LDR             X1, [X1,#8]
.text:000000000004DA9C                 BL              .VMMuteAllVoices
.text:000000000004DAA0                 MOV             W8, #3
.text:000000000004DAA4                 MOV             X0, XZR
.text:000000000004DAA8                 STRB            W8, [X19,#0x5A]
.text:000000000004DAAC                 LDP             X29, X30, [SP,#0x20+var_10]
.text:000000000004DAB0                 LDR             X19, [SP+0x20+var_20],#0x20
.text:000000000004DAB4                 RET
.text:000000000004DAB4 ; } // starts at 4DA70
.text:000000000004DAB4 ; End of function sub_4DA70
.text:000000000004DAB8 ; =============== S U B R O U T I N E =======================================
.text:000000000004DAB8 sub_4DAB8                               ; DATA XREF: .data.rel.ro:0000000000058258↓o
.text:000000000004DAB8 ; __unwind {
.text:000000000004DAB8                 LDRB            W8, [X1,#0x5A]
.text:000000000004DABC                 CMP             W8, #4
.text:000000000004DAC0                 B.NE            loc_4DACC
.text:000000000004DAC4                 MOV             X0, #0xFFFFFFFFFFFFFFE8
.text:000000000004DAC8                 RET
.text:000000000004DACC ; ---------------------------------------------------------------------------
.text:000000000004DACC loc_4DACC                               ; CODE XREF: sub_4DAB8+8↑j
.text:000000000004DACC                 MOV             W8, #1
.text:000000000004DAD0                 MOV             X0, XZR
.text:000000000004DAD4                 STRB            W8, [X1,#0x5A]
.text:000000000004DAD8                 RET
.text:000000000004DAD8 ; } // starts at 4DAB8
.text:000000000004DAD8 ; End of function sub_4DAB8
.text:000000000004DAD8 ; ---------------------------------------------------------------------------
.text:000000000004DADC                 ALIGN 0x20
.text:000000000004DAE0 ; __unwind {
.text:000000000004DAE0                 CMP             X2, #5
.text:000000000004DAE4                 B.NE            loc_4DB0C
.text:000000000004DAE8                 STP             X29, X30, [SP,#-0x10]!
.text:000000000004DAEC                 MOV             X29, SP
.text:000000000004DAF0                 ADD             X0, X1, #0x10
.text:000000000004DAF4                 MOV             X1, X3
.text:000000000004DAF8                 MOV             W2, #0x20 ; ' '
.text:000000000004DAFC                 BL              .EAS_HWMemCpy
.text:000000000004DB00                 MOV             X0, XZR
.text:000000000004DB04                 LDP             X29, X30, [SP],#0x10
.text:000000000004DB08                 RET
.text:000000000004DB0C ; ---------------------------------------------------------------------------
.text:000000000004DB0C loc_4DB0C                               ; CODE XREF: .text:000000000004DAE4↑j
.text:000000000004DB0C                 MOV             X0, #0xFFFFFFFFFFFFFFE4
.text:000000000004DB10                 RET
.text:000000000004DB10 ; } // starts at 4DAE0
.text:000000000004DB10 ; ---------------------------------------------------------------------------
.text:000000000004DB14                 ALIGN 8
.text:000000000004DB18 ; __unwind {
.text:000000000004DB18                 CBZ             X2, loc_4DB34
.text:000000000004DB1C                 CMP             X2, #0x12
.text:000000000004DB20                 B.EQ            loc_4DB3C
.text:000000000004DB24                 CMP             X2, #4
.text:000000000004DB28                 B.NE            loc_4DB4C
.text:000000000004DB2C                 LDR             X8, [X1,#8]
.text:000000000004DB30                 B               loc_4DB40
.text:000000000004DB34 ; ---------------------------------------------------------------------------
.text:000000000004DB34 loc_4DB34                               ; CODE XREF: .text:000000000004DB18↑j
.text:000000000004DB34                 MOV             W8, #0xB
.text:000000000004DB38                 B               loc_4DB40
.text:000000000004DB3C ; ---------------------------------------------------------------------------
.text:000000000004DB3C loc_4DB3C                               ; CODE XREF: .text:000000000004DB20↑j
.text:000000000004DB3C                 MOV             W8, #8
.text:000000000004DB40 loc_4DB40                               ; CODE XREF: .text:000000000004DB30↑j
.text:000000000004DB40                                         ; .text:000000000004DB38↑j
.text:000000000004DB40                 MOV             X0, XZR
.text:000000000004DB44                 STR             X8, [X3]
.text:000000000004DB48                 RET
.text:000000000004DB4C ; ---------------------------------------------------------------------------
.text:000000000004DB4C loc_4DB4C                               ; CODE XREF: .text:000000000004DB28↑j
.text:000000000004DB4C                 MOV             X0, #0xFFFFFFFFFFFFFFE4
.text:000000000004DB50                 RET
.text:000000000004DB50 ; } // starts at 4DB18
.text:000000000004DB50 ; ---------------------------------------------------------------------------
.text:000000000004DB54                 ALIGN 8
.text:000000000004DB58 ; =============== S U B R O U T I N E =======================================
.text:000000000004DB58 ; Attributes: bp-based frame
.text:000000000004DB58 sub_4DB58                               ; CODE XREF: sub_4CF80+48↑p
.text:000000000004DB58                                         ; sub_4D060+50↑p ...
.text:000000000004DB58 var_78          = -0x78
.text:000000000004DB58 var_6C          = -0x6C
.text:000000000004DB58 var_68          = -0x68
.text:000000000004DB58 var_64          = -0x64
.text:000000000004DB58 var_60          = -0x60
.text:000000000004DB58 var_5C          = -0x5C
.text:000000000004DB58 var_58          = -0x58
.text:000000000004DB58 var_50          = -0x50
.text:000000000004DB58 var_40          = -0x40
.text:000000000004DB58 var_30          = -0x30
.text:000000000004DB58 var_20          = -0x20
.text:000000000004DB58 var_10          = -0x10
.text:000000000004DB58 var_s0          =  0
.text:000000000004DB58 ; __unwind {
.text:000000000004DB58                 SUB             SP, SP, #0x90
.text:000000000004DB5C                 STP             X28, X27, [SP,#0x80+var_50]
.text:000000000004DB60                 STP             X26, X25, [SP,#0x80+var_40]
.text:000000000004DB64                 STP             X24, X23, [SP,#0x80+var_30]
.text:000000000004DB68                 STP             X22, X21, [SP,#0x80+var_20]
.text:000000000004DB6C                 STP             X20, X19, [SP,#0x80+var_10]
.text:000000000004DB70                 STP             X29, X30, [SP,#0x80+var_s0]
.text:000000000004DB74                 ADD             X29, SP, #0x80
.text:000000000004DB78                 MRS             X24, #3, c13, c0, #2
.text:000000000004DB7C                 ADRP            X9, #xmmword_4790@PAGE
.text:000000000004DB80                 LDR             X8, [X24,#0x28]
.text:000000000004DB84                 ADRP            X10, #xmmword_4820@PAGE
.text:000000000004DB88                 MOV             X19, X1
.text:000000000004DB8C                 LDR             Q0, [X9,#xmmword_4790@PAGEOFF]
.text:000000000004DB90                 MOV             X20, X0
.text:000000000004DB94                 LDR             Q1, [X10,#xmmword_4820@PAGEOFF]
.text:000000000004DB98                 STR             X8, [SP,#0x80+var_58]
.text:000000000004DB9C                 MOV             W8, #0x43C006E
.text:000000000004DBA4                 STRH            WZR, [X1,#0x58]
.text:000000000004DBA8                 STUR            Q0, [X1,#0x38]
.text:000000000004DBAC                 STUR            Q1, [X1,#0x48]
.text:000000000004DBB0                 STUR            W8, [X1,#0x5B]
.text:000000000004DBB4                 CBZ             W2, loc_4DBD0
.text:000000000004DBB8                 LDR             X8, [X19,#0x18]
.text:000000000004DBBC                 CBZ             X8, loc_4DBD0
.text:000000000004DBC0                 LDR             X8, [X19,#0x10]
.text:000000000004DBC4                 CMP             X8, #0
.text:000000000004DBC8                 CSET            W23, NE
.text:000000000004DBCC                 B               loc_4DBD4
.text:000000000004DBD0 ; ---------------------------------------------------------------------------
.text:000000000004DBD0 loc_4DBD0                               ; CODE XREF: sub_4DB58+5C↑j
.text:000000000004DBD0                                         ; sub_4DB58+64↑j
.text:000000000004DBD0                 MOV             W23, WZR
.text:000000000004DBD4 loc_4DBD4                               ; CODE XREF: sub_4DB58+74↑j
.text:000000000004DBD4                 LDR             X0, [X20]
.text:000000000004DBD8                 LDR             X1, [X19]
.text:000000000004DBDC                 LDR             X2, [X19,#0x30]
.text:000000000004DBE0                 BL              .EAS_HWFileSeek
.text:000000000004DBE4                 CBZ             X0, loc_4DC18
.text:000000000004DBE8 loc_4DBE8                               ; CODE XREF: sub_4DB58+F0↓j
.text:000000000004DBE8                                         ; sub_4DB58+130↓j ...
.text:000000000004DBE8                 LDR             X8, [X24,#0x28]
.text:000000000004DBEC                 LDR             X9, [SP,#0x80+var_58]
.text:000000000004DBF0                 CMP             X8, X9
.text:000000000004DBF4                 B.NE            loc_4E234
.text:000000000004DBF8                 LDP             X29, X30, [SP,#0x80+var_s0]
.text:000000000004DBFC                 LDP             X20, X19, [SP,#0x80+var_10]
.text:000000000004DC00                 LDP             X22, X21, [SP,#0x80+var_20]
.text:000000000004DC04                 LDP             X24, X23, [SP,#0x80+var_30]
.text:000000000004DC08                 LDP             X26, X25, [SP,#0x80+var_40]
.text:000000000004DC0C                 LDP             X28, X27, [SP,#0x80+var_50]
.text:000000000004DC10                 ADD             SP, SP, #0x90
.text:000000000004DC14                 RET
.text:000000000004DC18 ; ---------------------------------------------------------------------------
.text:000000000004DC18 loc_4DC18                               ; CODE XREF: sub_4DB58+8C↑j
.text:000000000004DC18                 ADD             X28, X19, #0x50 ; 'P'
.text:000000000004DC1C                 CBZ             W23, loc_4DC30
.text:000000000004DC20                 LDR             X0, [X19,#0x18]
.text:000000000004DC24                 MOV             W1, WZR
.text:000000000004DC28                 LDR             X2, [X19,#0x28]
.text:000000000004DC2C                 BL              .EAS_HWMemSet
.text:000000000004DC30 loc_4DC30                               ; CODE XREF: sub_4DB58+C4↑j
.text:000000000004DC30                 MOV             X25, XZR
.text:000000000004DC34                 ADD             X22, X19, #0x59 ; 'Y'
.text:000000000004DC38 loc_4DC38                               ; CODE XREF: sub_4DB58+124↓j
.text:000000000004DC38                 LDR             X0, [X20]
.text:000000000004DC3C                 ADD             X2, SP, #0x80+var_6C
.text:000000000004DC40                 LDR             X1, [X19]
.text:000000000004DC44                 BL              .EAS_HWGetByte
.text:000000000004DC48                 CBNZ            X0, loc_4DBE8
.text:000000000004DC4C                 LDRB            W8, [SP,#0x80+var_6C]
.text:000000000004DC50                 CMP             W8, #0x3A ; ':'
.text:000000000004DC54                 B.EQ            loc_4DC8C
.text:000000000004DC58                 CBZ             W23, loc_4DC74
.text:000000000004DC5C                 LDR             X9, [X19,#0x28]
.text:000000000004DC60                 SUB             X9, X9, #1
.text:000000000004DC64                 CMP             X25, X9
.text:000000000004DC68                 B.GE            loc_4DC74
.text:000000000004DC6C                 LDR             X9, [X19,#0x18]
.text:000000000004DC70                 STRB            W8, [X9,X25]
.text:000000000004DC74 loc_4DC74                               ; CODE XREF: sub_4DB58+100↑j
.text:000000000004DC74                                         ; sub_4DB58+110↑j
.text:000000000004DC74                 ADD             X25, X25, #1
.text:000000000004DC78                 CMP             X25, #0x20 ; ' '
.text:000000000004DC7C                 B.CC            loc_4DC38
.text:000000000004DC80                 B.NE            loc_4DC8C
.text:000000000004DC84 loc_4DC84                               ; CODE XREF: sub_4DB58+21C↓j
.text:000000000004DC84                                         ; sub_4DB58+3B0↓j ...
.text:000000000004DC84                 MOV             X0, #0xFFFFFFFFFFFFFFEF
.text:000000000004DC88                 B               loc_4DBE8
.text:000000000004DC8C ; ---------------------------------------------------------------------------
.text:000000000004DC8C loc_4DC8C                               ; CODE XREF: sub_4DB58+FC↑j
.text:000000000004DC8C                                         ; sub_4DB58+128↑j
.text:000000000004DC8C                 CBZ             W23, loc_4DCA0
.text:000000000004DC90                 LDP             X8, X1, [X19,#0x10]
.text:000000000004DC94                 LDR             X2, [X19,#0x20]
.text:000000000004DC98                 MOV             W0, #1
.text:000000000004DC9C                 BLR             X8
.text:000000000004DCA0 loc_4DCA0                               ; CODE XREF: sub_4DB58:loc_4DC8C↑j
.text:000000000004DCA0                 MOV             X26, #0x22C
.text:000000000004DCA4                 MOV             X21, #0x116
.text:000000000004DCA8                 MOV             W27, #0x4C00
.text:000000000004DCAC                 MOVK            X26, #2,LSL#16
.text:000000000004DCB0                 MOVK            X21, #1,LSL#16
.text:000000000004DCB4                 MOVK            W27, #0x1D,LSL#16
.text:000000000004DCB8                 MOVK            X26, #2,LSL#32
.text:000000000004DCBC                 MOVK            X21, #1,LSL#32
.text:000000000004DCC0 loc_4DCC0                               ; CODE XREF: sub_4DB58+6B0↓j
.text:000000000004DCC0                 LDR             X23, [X20]
.text:000000000004DCC4 loc_4DCC4                               ; CODE XREF: sub_4DB58+1A0↓j
.text:000000000004DCC4                                         ; sub_4DB58+1A8↓j
.text:000000000004DCC4                 LDRB            W8, [X22]
.text:000000000004DCC8                 CBZ             W8, loc_4DCD8
.text:000000000004DCCC                 STRB            W8, [SP,#0x80+var_68]
.text:000000000004DCD0                 STRB            WZR, [X22]
.text:000000000004DCD4                 B               loc_4DCF0
.text:000000000004DCD8 ; ---------------------------------------------------------------------------
.text:000000000004DCD8 loc_4DCD8                               ; CODE XREF: sub_4DB58+170↑j
.text:000000000004DCD8                 LDR             X1, [X19]
.text:000000000004DCDC                 ADD             X2, SP, #0x80+var_68
.text:000000000004DCE0                 MOV             X0, X23
.text:000000000004DCE4                 BL              .EAS_HWGetByte
.text:000000000004DCE8                 CBNZ            X0, loc_4DBE8
.text:000000000004DCEC                 LDRB            W8, [SP,#0x80+var_68]
.text:000000000004DCF0 loc_4DCF0                               ; CODE XREF: sub_4DB58+17C↑j
.text:000000000004DCF0                 SUB             W9, W8, #9
.text:000000000004DCF4                 CMP             W9, #5
.text:000000000004DCF8                 B.CC            loc_4DCC4
.text:000000000004DCFC                 CMP             W8, #0x20 ; ' '
.text:000000000004DD00                 B.EQ            loc_4DCC4
.text:000000000004DD04                 SUB             W9, W8, #0x41 ; 'A'
.text:000000000004DD08                 LDR             X23, [X20]
.text:000000000004DD0C                 ORR             W10, W8, #0x20
.text:000000000004DD10                 STRB            WZR, [SP,#0x80+var_6C]
.text:000000000004DD14                 CMP             W9, #0x1A
.text:000000000004DD18                 CSEL            W25, W10, W8, CC
.text:000000000004DD1C loc_4DD1C                               ; CODE XREF: sub_4DB58+1F8↓j
.text:000000000004DD1C                                         ; sub_4DB58+200↓j
.text:000000000004DD1C                 LDRB            W8, [X22]
.text:000000000004DD20                 CBZ             W8, loc_4DD30
.text:000000000004DD24                 STRB            W8, [SP,#0x80+var_64]
.text:000000000004DD28                 STRB            WZR, [X22]
.text:000000000004DD2C                 B               loc_4DD48
.text:000000000004DD30 ; ---------------------------------------------------------------------------
.text:000000000004DD30 loc_4DD30                               ; CODE XREF: sub_4DB58+1C8↑j
.text:000000000004DD30                 LDR             X1, [X19]
.text:000000000004DD34                 ADD             X2, SP, #0x80+var_64
.text:000000000004DD38                 MOV             X0, X23
.text:000000000004DD3C                 BL              .EAS_HWGetByte
.text:000000000004DD40                 CBNZ            X0, loc_4DBE8
.text:000000000004DD44                 LDRB            W8, [SP,#0x80+var_64]
.text:000000000004DD48 loc_4DD48                               ; CODE XREF: sub_4DB58+1D4↑j
.text:000000000004DD48                 SUB             W9, W8, #9
.text:000000000004DD4C                 CMP             W9, #5
.text:000000000004DD50                 B.CC            loc_4DD1C
.text:000000000004DD54                 CMP             W8, #0x20 ; ' '
.text:000000000004DD58                 B.EQ            loc_4DD1C
.text:000000000004DD5C                 SUB             W9, W8, #0x41 ; 'A'
.text:000000000004DD60                 ORR             W10, W8, #0x20
.text:000000000004DD64                 CMP             W9, #0x1A
.text:000000000004DD68                 CSEL            W8, W10, W8, CC
.text:000000000004DD6C                 CMP             W8, #0x3D ; '='
.text:000000000004DD70                 STRB            W8, [SP,#0x80+var_6C]
.text:000000000004DD74                 B.NE            loc_4DC84
.text:000000000004DD78                 SXTB            W8, W25
.text:000000000004DD7C                 MOV             X0, #0xFFFFFFFFFFFFFFEF
.text:000000000004DD80                 SUB             W8, W8, #0x62 ; 'b'
.text:000000000004DD84                 CMP             W8, #0x11
.text:000000000004DD88                 B.HI            loc_4DBE8
.text:000000000004DD8C                 ADRP            X11, #unk_5B50@PAGE
.text:000000000004DD90                 STR             X28, [SP,#0x80+var_78]
.text:000000000004DD94                 ADD             X11, X11, #unk_5B50@PAGEOFF
.text:000000000004DD98                 MOV             W25, #1
.text:000000000004DD9C                 ADR             X9, loc_4DBE8
.text:000000000004DDA0                 LDRH            W10, [X11,X8,LSL#1]
.text:000000000004DDA4                 ADD             X9, X9, X10,LSL#2
.text:000000000004DDA8                 BR              X9
.text:000000000004DDAC ; ---------------------------------------------------------------------------
.text:000000000004DDAC                 LDR             X23, [X20]
.text:000000000004DDB0                 MOV             W25, WZR
.text:000000000004DDB4                 LDRB            W8, [X22]
.text:000000000004DDB8                 MOV             X28, #0xFFFFFFFFFFFFFFFF
.text:000000000004DDBC                 TST             W8, #0xFF
.text:000000000004DDC0                 B.NE            loc_4DE18
.text:000000000004DDC4                 B               loc_4DDEC
.text:000000000004DDC8 ; ---------------------------------------------------------------------------
.text:000000000004DDC8 loc_4DDC8                               ; CODE XREF: sub_4DB58+2F8↓j
.text:000000000004DDC8                 MOV             W10, #0xA
.text:000000000004DDCC                 STRB            WZR, [X22]
.text:000000000004DDD0                 MOV             W8, WZR
.text:000000000004DDD4                 MUL             W10, W25, W10
.text:000000000004DDD8                 ADD             W9, W10, W9,SXTB
.text:000000000004DDDC                 SUB             W25, W9, #0x30 ; '0'
.text:000000000004DDE0                 SXTW            X28, W25
.text:000000000004DDE4                 TST             W8, #0xFF
.text:000000000004DDE8                 B.NE            loc_4DE18
.text:000000000004DDEC loc_4DDEC                               ; CODE XREF: sub_4DB58+26C↑j
.text:000000000004DDEC                                         ; sub_4DB58+2BC↓j
.text:000000000004DDEC                 LDR             X1, [X19]
.text:000000000004DDF0                 MOV             X0, X23
.text:000000000004DDF4                 MOV             X2, X22
.text:000000000004DDF8                 BL              .EAS_HWGetByte
.text:000000000004DDFC                 CBNZ            X0, loc_4E0F4
.text:000000000004DE00                 LDRB            W8, [X22]
.text:000000000004DE04                 B               loc_4DE18
.text:000000000004DE08 ; ---------------------------------------------------------------------------
.text:000000000004DE08 loc_4DE08                               ; CODE XREF: sub_4DB58+2CC↓j
.text:000000000004DE08                                         ; sub_4DB58+2D4↓j
.text:000000000004DE08                 MOV             W8, WZR
.text:000000000004DE0C                 STRB            WZR, [X22]
.text:000000000004DE10                 TST             W8, #0xFF
.text:000000000004DE14                 B.EQ            loc_4DDEC
.text:000000000004DE18 loc_4DE18                               ; CODE XREF: sub_4DB58+268↑j
.text:000000000004DE18                                         ; sub_4DB58+290↑j ...
.text:000000000004DE18                 AND             W9, W8, #0xFF
.text:000000000004DE1C                 SUB             W10, W9, #9
.text:000000000004DE20                 CMP             W10, #5
.text:000000000004DE24                 B.CC            loc_4DE08
.text:000000000004DE28                 CMP             W9, #0x20 ; ' '
.text:000000000004DE2C                 B.EQ            loc_4DE08
.text:000000000004DE30                 SUB             W9, W8, #0x41 ; 'A'
.text:000000000004DE34                 AND             W9, W9, #0xFF
.text:000000000004DE38                 ORR             W10, W8, #0x20
.text:000000000004DE3C                 CMP             W9, #0x1A
.text:000000000004DE40                 CSEL            W9, W10, W8, CC
.text:000000000004DE44                 SUB             W8, W9, #0x30 ; '0'
.text:000000000004DE48                 AND             W8, W8, #0xFF
.text:000000000004DE4C                 CMP             W8, #9
.text:000000000004DE50                 B.LS            loc_4DDC8
.text:000000000004DE54                 B               loc_4E104
.text:000000000004DE58 ; ---------------------------------------------------------------------------
.text:000000000004DE58                 LDR             X23, [X20]
.text:000000000004DE5C                 MOV             W28, WZR
.text:000000000004DE60                 LDRB            W8, [X22]
.text:000000000004DE64                 MOV             X25, #0xFFFFFFFFFFFFFFFF
.text:000000000004DE68                 TST             W8, #0xFF
.text:000000000004DE6C                 B.NE            loc_4DEC4
.text:000000000004DE70                 B               loc_4DE98
.text:000000000004DE74 ; ---------------------------------------------------------------------------
.text:000000000004DE74 loc_4DE74                               ; CODE XREF: sub_4DB58+3A4↓j
.text:000000000004DE74                 MOV             W10, #0xA
.text:000000000004DE78                 STRB            WZR, [X22]
.text:000000000004DE7C                 MOV             W8, WZR
.text:000000000004DE80                 MUL             W10, W28, W10
.text:000000000004DE84                 ADD             W9, W10, W9,SXTB
.text:000000000004DE88                 SUB             W28, W9, #0x30 ; '0'
.text:000000000004DE8C                 SXTW            X25, W28
.text:000000000004DE90                 TST             W8, #0xFF
.text:000000000004DE94                 B.NE            loc_4DEC4
.text:000000000004DE98 loc_4DE98                               ; CODE XREF: sub_4DB58+318↑j
.text:000000000004DE98                                         ; sub_4DB58+368↓j
.text:000000000004DE98                 LDR             X1, [X19]
.text:000000000004DE9C                 MOV             X0, X23
.text:000000000004DEA0                 MOV             X2, X22
.text:000000000004DEA4                 BL              .EAS_HWGetByte
.text:000000000004DEA8                 CBNZ            X0, loc_4E11C
.text:000000000004DEAC                 LDRB            W8, [X22]
.text:000000000004DEB0                 B               loc_4DEC4
.text:000000000004DEB4 ; ---------------------------------------------------------------------------
.text:000000000004DEB4 loc_4DEB4                               ; CODE XREF: sub_4DB58+378↓j
.text:000000000004DEB4                                         ; sub_4DB58+380↓j
.text:000000000004DEB4                 MOV             W8, WZR
.text:000000000004DEB8                 STRB            WZR, [X22]
.text:000000000004DEBC                 TST             W8, #0xFF
.text:000000000004DEC0                 B.EQ            loc_4DE98
.text:000000000004DEC4 loc_4DEC4                               ; CODE XREF: sub_4DB58+314↑j
.text:000000000004DEC4                                         ; sub_4DB58+33C↑j ...
.text:000000000004DEC4                 AND             W9, W8, #0xFF
.text:000000000004DEC8                 SUB             W10, W9, #9
.text:000000000004DECC                 CMP             W10, #5
.text:000000000004DED0                 B.CC            loc_4DEB4
.text:000000000004DED4                 CMP             W9, #0x20 ; ' '
.text:000000000004DED8                 B.EQ            loc_4DEB4
.text:000000000004DEDC                 SUB             W9, W8, #0x41 ; 'A'
.text:000000000004DEE0                 AND             W9, W9, #0xFF
.text:000000000004DEE4                 ORR             W10, W8, #0x20
.text:000000000004DEE8                 CMP             W9, #0x1A
.text:000000000004DEEC                 CSEL            W9, W10, W8, CC
.text:000000000004DEF0                 SUB             W8, W9, #0x30 ; '0'
.text:000000000004DEF4                 AND             W8, W8, #0xFF
.text:000000000004DEF8                 CMP             W8, #9
.text:000000000004DEFC                 B.LS            loc_4DE74
.text:000000000004DF00                 MOV             W8, #1
.text:000000000004DF04                 CMP             X25, #0x20 ; ' '
.text:000000000004DF08                 B.HI            loc_4DC84
.text:000000000004DF0C                 LSL             X8, X8, X25
.text:000000000004DF10                 TST             X8, X21
.text:000000000004DF14                 B.NE            loc_4E140
.text:000000000004DF18                 B               loc_4DC84
.text:000000000004DF1C ; ---------------------------------------------------------------------------
.text:000000000004DF1C                 LDR             X23, [X20]
.text:000000000004DF20                 MOV             W25, WZR
.text:000000000004DF24                 LDRB            W8, [X22]
.text:000000000004DF28                 MOV             X28, #0xFFFFFFFFFFFFFFFF
.text:000000000004DF2C                 TST             W8, #0xFF
.text:000000000004DF30                 B.NE            loc_4DF88
.text:000000000004DF34                 B               loc_4DF5C
.text:000000000004DF38 ; ---------------------------------------------------------------------------
.text:000000000004DF38 loc_4DF38                               ; CODE XREF: sub_4DB58+468↓j
.text:000000000004DF38                 MOV             W10, #0xA
.text:000000000004DF3C                 STRB            WZR, [X22]
.text:000000000004DF40                 MOV             W8, WZR
.text:000000000004DF44                 MUL             W10, W25, W10
.text:000000000004DF48                 ADD             W9, W10, W9,SXTB
.text:000000000004DF4C                 SUB             W25, W9, #0x30 ; '0'
.text:000000000004DF50                 SXTW            X28, W25
.text:000000000004DF54                 TST             W8, #0xFF
.text:000000000004DF58                 B.NE            loc_4DF88
.text:000000000004DF5C loc_4DF5C                               ; CODE XREF: sub_4DB58+3DC↑j
.text:000000000004DF5C                                         ; sub_4DB58+42C↓j
.text:000000000004DF5C                 LDR             X1, [X19]
.text:000000000004DF60                 MOV             X0, X23
.text:000000000004DF64                 MOV             X2, X22
.text:000000000004DF68                 BL              .EAS_HWGetByte
.text:000000000004DF6C                 CBNZ            X0, loc_4E15C
.text:000000000004DF70                 LDRB            W8, [X22]
.text:000000000004DF74                 B               loc_4DF88
.text:000000000004DF78 ; ---------------------------------------------------------------------------
.text:000000000004DF78 loc_4DF78                               ; CODE XREF: sub_4DB58+43C↓j
.text:000000000004DF78                                         ; sub_4DB58+444↓j
.text:000000000004DF78                 MOV             W8, WZR
.text:000000000004DF7C                 STRB            WZR, [X22]
.text:000000000004DF80                 TST             W8, #0xFF
.text:000000000004DF84                 B.EQ            loc_4DF5C
.text:000000000004DF88 loc_4DF88                               ; CODE XREF: sub_4DB58+3D8↑j
.text:000000000004DF88                                         ; sub_4DB58+400↑j ...
.text:000000000004DF88                 AND             W9, W8, #0xFF
.text:000000000004DF8C                 SUB             W10, W9, #9
.text:000000000004DF90                 CMP             W10, #5
.text:000000000004DF94                 B.CC            loc_4DF78
.text:000000000004DF98                 CMP             W9, #0x20 ; ' '
.text:000000000004DF9C                 B.EQ            loc_4DF78
.text:000000000004DFA0                 SUB             W9, W8, #0x41 ; 'A'
.text:000000000004DFA4                 AND             W9, W9, #0xFF
.text:000000000004DFA8                 ORR             W10, W8, #0x20
.text:000000000004DFAC                 CMP             W9, #0x1A
.text:000000000004DFB0                 CSEL            W9, W10, W8, CC
.text:000000000004DFB4                 SUB             W8, W9, #0x30 ; '0'
.text:000000000004DFB8                 AND             W8, W8, #0xFF
.text:000000000004DFBC                 CMP             W8, #9
.text:000000000004DFC0                 B.LS            loc_4DF38
.text:000000000004DFC4                 B               loc_4E16C
.text:000000000004DFC8 ; ---------------------------------------------------------------------------
.text:000000000004DFC8                 LDR             X23, [X20]
.text:000000000004DFCC                 MOV             W25, WZR
.text:000000000004DFD0                 LDRB            W8, [X22]
.text:000000000004DFD4                 MOV             X28, #0xFFFFFFFFFFFFFFFF
.text:000000000004DFD8                 TST             W8, #0xFF
.text:000000000004DFDC                 B.NE            loc_4E034
.text:000000000004DFE0                 B               loc_4E008
.text:000000000004DFE4 ; ---------------------------------------------------------------------------
.text:000000000004DFE4 loc_4DFE4                               ; CODE XREF: sub_4DB58+514↓j
.text:000000000004DFE4                 MOV             W10, #0xA
.text:000000000004DFE8                 STRB            WZR, [X22]
.text:000000000004DFEC                 MOV             W8, WZR
.text:000000000004DFF0                 MUL             W10, W25, W10
.text:000000000004DFF4                 ADD             W9, W10, W9,SXTB
.text:000000000004DFF8                 SUB             W25, W9, #0x30 ; '0'
.text:000000000004DFFC                 SXTW            X28, W25
.text:000000000004E000                 TST             W8, #0xFF
.text:000000000004E004                 B.NE            loc_4E034
.text:000000000004E008 loc_4E008                               ; CODE XREF: sub_4DB58+488↑j
.text:000000000004E008                                         ; sub_4DB58+4D8↓j
.text:000000000004E008                 LDR             X1, [X19]
.text:000000000004E00C                 MOV             X0, X23
.text:000000000004E010                 MOV             X2, X22
.text:000000000004E014                 BL              .EAS_HWGetByte
.text:000000000004E018                 CBNZ            X0, loc_4E17C
.text:000000000004E01C                 LDRB            W8, [X22]
.text:000000000004E020                 B               loc_4E034
.text:000000000004E024 ; ---------------------------------------------------------------------------
.text:000000000004E024 loc_4E024                               ; CODE XREF: sub_4DB58+4E8↓j
.text:000000000004E024                                         ; sub_4DB58+4F0↓j
.text:000000000004E024                 MOV             W8, WZR
.text:000000000004E028                 STRB            WZR, [X22]
.text:000000000004E02C                 TST             W8, #0xFF
.text:000000000004E030                 B.EQ            loc_4E008
.text:000000000004E034 loc_4E034                               ; CODE XREF: sub_4DB58+484↑j
.text:000000000004E034                                         ; sub_4DB58+4AC↑j ...
.text:000000000004E034                 AND             W9, W8, #0xFF
.text:000000000004E038                 SUB             W10, W9, #9
.text:000000000004E03C                 CMP             W10, #5
.text:000000000004E040                 B.CC            loc_4E024
.text:000000000004E044                 CMP             W9, #0x20 ; ' '
.text:000000000004E048                 B.EQ            loc_4E024
.text:000000000004E04C                 SUB             W9, W8, #0x41 ; 'A'
.text:000000000004E050                 AND             W9, W9, #0xFF
.text:000000000004E054                 ORR             W10, W8, #0x20
.text:000000000004E058                 CMP             W9, #0x1A
.text:000000000004E05C                 CSEL            W9, W10, W8, CC
.text:000000000004E060                 SUB             W8, W9, #0x30 ; '0'
.text:000000000004E064                 AND             W8, W8, #0xFF
.text:000000000004E068                 CMP             W8, #9
.text:000000000004E06C                 B.LS            loc_4DFE4
.text:000000000004E070                 B               loc_4E18C
.text:000000000004E074 ; ---------------------------------------------------------------------------
.text:000000000004E074                 LDR             X23, [X20]
.text:000000000004E078 loc_4E078                               ; CODE XREF: sub_4DB58+554↓j
.text:000000000004E078                                         ; sub_4DB58+55C↓j
.text:000000000004E078                 LDRB            W8, [X22]
.text:000000000004E07C                 CBZ             W8, loc_4E08C
.text:000000000004E080                 STRB            W8, [SP,#0x80+var_60]
.text:000000000004E084                 STRB            WZR, [X22]
.text:000000000004E088                 B               loc_4E0A4
.text:000000000004E08C ; ---------------------------------------------------------------------------
.text:000000000004E08C loc_4E08C                               ; CODE XREF: sub_4DB58+524↑j
.text:000000000004E08C                 LDR             X1, [X19]
.text:000000000004E090                 ADD             X2, SP, #0x80+var_60
.text:000000000004E094                 MOV             X0, X23
.text:000000000004E098                 BL              .EAS_HWGetByte
.text:000000000004E09C                 CBNZ            X0, loc_4DBE8
.text:000000000004E0A0                 LDRB            W8, [SP,#0x80+var_60]
.text:000000000004E0A4 loc_4E0A4                               ; CODE XREF: sub_4DB58+530↑j
.text:000000000004E0A4                 SUB             W9, W8, #9
.text:000000000004E0A8                 CMP             W9, #5
.text:000000000004E0AC                 B.CC            loc_4E078
.text:000000000004E0B0                 CMP             W8, #0x20 ; ' '
.text:000000000004E0B4                 B.EQ            loc_4E078
.text:000000000004E0B8                 SUB             W9, W8, #0x41 ; 'A'
.text:000000000004E0BC                 ORR             W10, W8, #0x20
.text:000000000004E0C0                 CMP             W9, #0x1A
.text:000000000004E0C4                 CSEL            W8, W10, W8, CC
.text:000000000004E0C8                 MOV             X0, #0xFFFFFFFFFFFFFFEF
.text:000000000004E0CC                 SUB             W9, W8, #0x63 ; 'c'
.text:000000000004E0D0                 CMP             W9, #0x10
.text:000000000004E0D4                 B.HI            loc_4DBE8
.text:000000000004E0D8                 MOV             W10, #0x10801
.text:000000000004E0E0                 LSL             W9, W25, W9
.text:000000000004E0E4                 TST             W9, W10
.text:000000000004E0E8                 B.EQ            loc_4DBE8
.text:000000000004E0EC                 STRB            W8, [X19,#0x5B]
.text:000000000004E0F0                 B               loc_4E1A4
.text:000000000004E0F4 ; ---------------------------------------------------------------------------
.text:000000000004E0F4 loc_4E0F4                               ; CODE XREF: sub_4DB58+2A4↑j
.text:000000000004E0F4                 CMP             X0, #3
.text:000000000004E0F8                 B.NE            loc_4DBE8
.text:000000000004E0FC                 CMN             X28, #1
.text:000000000004E100                 B.EQ            loc_4E22C
.text:000000000004E104 loc_4E104                               ; CODE XREF: sub_4DB58+2FC↑j
.text:000000000004E104                 SUB             X8, X28, #0x19
.text:000000000004E108                 CMP             X8, #0x36B
.text:000000000004E10C                 B.HI            loc_4DC84
.text:000000000004E110                 UDIV            W8, W27, W28
.text:000000000004E114                 STR             X8, [X19,#0x40]
.text:000000000004E118                 B               loc_4E1A4
.text:000000000004E11C ; ---------------------------------------------------------------------------
.text:000000000004E11C loc_4E11C                               ; CODE XREF: sub_4DB58+350↑j
.text:000000000004E11C                 CMP             X0, #3
.text:000000000004E120                 B.NE            loc_4DBE8
.text:000000000004E124                 ADD             X8, X25, #1
.text:000000000004E128                 MOV             W9, #1
.text:000000000004E12C                 CMP             X8, #0x21 ; '!'
.text:000000000004E130                 B.HI            loc_4DC84
.text:000000000004E134                 LSL             X9, X9, X8
.text:000000000004E138                 TST             X9, X26
.text:000000000004E13C                 B.EQ            loc_4E228
.text:000000000004E140 loc_4E140                               ; CODE XREF: sub_4DB58+3BC↑j
.text:000000000004E140                 MOV             W8, #0x40 ; '@'
.text:000000000004E144 loc_4E144                               ; CODE XREF: sub_4DB58+5F4↓j
.text:000000000004E144                 ASR             X25, X25, #1
.text:000000000004E148                 SBFX            W8, W8, #1, #7
.text:000000000004E14C                 CBNZ            X25, loc_4E144
.text:000000000004E150                 STRB            W8, [SP,#0x80+var_6C]
.text:000000000004E154                 STRB            W8, [X19,#0x5E]
.text:000000000004E158                 B               loc_4E1A4
.text:000000000004E15C ; ---------------------------------------------------------------------------
.text:000000000004E15C loc_4E15C                               ; CODE XREF: sub_4DB58+414↑j
.text:000000000004E15C                 CMP             X0, #3
.text:000000000004E160                 B.NE            loc_4DBE8
.text:000000000004E164                 CMN             X28, #1
.text:000000000004E168                 B.EQ            loc_4E22C
.text:000000000004E16C loc_4E16C                               ; CODE XREF: sub_4DB58+46C↑j
.text:000000000004E16C                 CMP             X28, #0xF
.text:000000000004E170                 B.HI            loc_4DC84
.text:000000000004E174                 STRB            W28, [X19,#0x58]
.text:000000000004E178                 B               loc_4E1A4
.text:000000000004E17C ; ---------------------------------------------------------------------------
.text:000000000004E17C loc_4E17C                               ; CODE XREF: sub_4DB58+4C0↑j
.text:000000000004E17C                 CMP             X0, #3
.text:000000000004E180                 B.NE            loc_4DBE8
.text:000000000004E184                 CMN             X28, #1
.text:000000000004E188                 B.EQ            loc_4E22C
.text:000000000004E18C loc_4E18C                               ; CODE XREF: sub_4DB58+518↑j
.text:000000000004E18C                 AND             X8, X28, #0xFFFFFFFFFFFFFFFC
.text:000000000004E190                 CMP             X8, #4
.text:000000000004E194                 B.NE            loc_4DC84
.text:000000000004E198                 ADD             W8, W28, W28,LSL#1
.text:000000000004E19C                 LSL             W8, W8, #2
.text:000000000004E1A0                 STRB            W8, [X19,#0x5D]
.text:000000000004E1A4 loc_4E1A4                               ; CODE XREF: sub_4DB58+598↑j
.text:000000000004E1A4                                         ; sub_4DB58+5C0↑j ...
.text:000000000004E1A4                 LDR             X28, [SP,#0x80+var_78]
.text:000000000004E1A8                 LDR             X23, [X20]
.text:000000000004E1AC                 STRB            WZR, [SP,#0x80+var_6C]
.text:000000000004E1B0 loc_4E1B0                               ; CODE XREF: sub_4DB58+68C↓j
.text:000000000004E1B0                                         ; sub_4DB58+694↓j
.text:000000000004E1B0                 LDRB            W8, [X22]
.text:000000000004E1B4                 CBZ             W8, loc_4E1C4
.text:000000000004E1B8                 STRB            W8, [SP,#0x80+var_5C]
.text:000000000004E1BC                 STRB            WZR, [X22]
.text:000000000004E1C0                 B               loc_4E1DC
.text:000000000004E1C4 ; ---------------------------------------------------------------------------
.text:000000000004E1C4 loc_4E1C4                               ; CODE XREF: sub_4DB58+65C↑j
.text:000000000004E1C4                 LDR             X1, [X19]
.text:000000000004E1C8                 ADD             X2, SP, #0x80+var_5C
.text:000000000004E1CC                 MOV             X0, X23
.text:000000000004E1D0                 BL              .EAS_HWGetByte
.text:000000000004E1D4                 CBNZ            X0, loc_4DBE8
.text:000000000004E1D8                 LDRB            W8, [SP,#0x80+var_5C]
.text:000000000004E1DC loc_4E1DC                               ; CODE XREF: sub_4DB58+668↑j
.text:000000000004E1DC                 SUB             W9, W8, #9
.text:000000000004E1E0                 CMP             W9, #5
.text:000000000004E1E4                 B.CC            loc_4E1B0
.text:000000000004E1E8                 CMP             W8, #0x20 ; ' '
.text:000000000004E1EC                 B.EQ            loc_4E1B0
.text:000000000004E1F0                 SUB             W9, W8, #0x41 ; 'A'
.text:000000000004E1F4                 ORR             W10, W8, #0x20
.text:000000000004E1F8                 CMP             W9, #0x1A
.text:000000000004E1FC                 CSEL            W8, W10, W8, CC
.text:000000000004E200                 CMP             W8, #0x2C ; ','
.text:000000000004E204                 STRB            W8, [SP,#0x80+var_6C]
.text:000000000004E208                 B.EQ            loc_4DCC0
.text:000000000004E20C                 CMP             W8, #0x3A ; ':'
.text:000000000004E210                 B.NE            loc_4DC84
.text:000000000004E214                 LDR             X0, [X20]
.text:000000000004E218                 MOV             X2, X28
.text:000000000004E21C                 LDR             X1, [X19]
.text:000000000004E220                 BL              .EAS_HWFilePos
.text:000000000004E224                 B               loc_4DBE8
.text:000000000004E228 ; ---------------------------------------------------------------------------
.text:000000000004E228 loc_4E228                               ; CODE XREF: sub_4DB58+5E4↑j
.text:000000000004E228                 CBNZ            X8, loc_4DC84
.text:000000000004E22C loc_4E22C                               ; CODE XREF: sub_4DB58+5A8↑j
.text:000000000004E22C                                         ; sub_4DB58+610↑j ...
.text:000000000004E22C                 MOV             W0, #3
.text:000000000004E230                 B               loc_4DBE8
.text:000000000004E234 ; ---------------------------------------------------------------------------
.text:000000000004E234 loc_4E234                               ; CODE XREF: sub_4DB58+9C↑j
.text:000000000004E234                 BL              .__stack_chk_fail
.text:000000000004E234 ; } // starts at 4DB58
.text:000000000004E234 ; End of function sub_4DB58
.text:000000000004E238 ; =============== S U B R O U T I N E =======================================
.text:000000000004E238 ; Attributes: bp-based frame
.text:000000000004E238                 EXPORT SMF_CheckFileType
.text:000000000004E238 SMF_CheckFileType                       ; CODE XREF: .SMF_CheckFileType+C↓j
.text:000000000004E238                                         ; DATA XREF: LOAD:0000000000000B28↑o ...
.text:000000000004E238 var_48          = -0x48
.text:000000000004E238 var_3C          = -0x3C
.text:000000000004E238 var_3B          = -0x3B
.text:000000000004E238 var_3A          = -0x3A
.text:000000000004E238 var_39          = -0x39
.text:000000000004E238 var_38          = -0x38
.text:000000000004E238 var_30          = -0x30
.text:000000000004E238 var_20          = -0x20
.text:000000000004E238 var_10          = -0x10
.text:000000000004E238 var_s0          =  0
.text:000000000004E238 ; __unwind {
.text:000000000004E238                 SUB             SP, SP, #0x60
.text:000000000004E23C                 STR             X23, [SP,#0x50+var_30]
.text:000000000004E240                 STP             X22, X21, [SP,#0x50+var_20]
.text:000000000004E244                 STP             X20, X19, [SP,#0x50+var_10]
.text:000000000004E248                 STP             X29, X30, [SP,#0x50+var_s0]
.text:000000000004E24C                 ADD             X29, SP, #0x50
.text:000000000004E250                 MRS             X23, #3, c13, c0, #2
.text:000000000004E254                 MOV             X21, X0
.text:000000000004E258                 LDR             X8, [X23,#0x28]
.text:000000000004E25C                 MOV             X19, X2
.text:000000000004E260                 MOV             X20, X1
.text:000000000004E264                 STR             X8, [SP,#0x50+var_38]
.text:000000000004E268                 STR             XZR, [X2]
.text:000000000004E26C                 MOV             X2, X3
.text:000000000004E270                 LDR             X0, [X0]
.text:000000000004E274                 STR             X3, [SP,#0x50+var_48]
.text:000000000004E278                 BL              .EAS_HWFileSeek
.text:000000000004E27C                 CBZ             X0, loc_4E2A8
.text:000000000004E280 loc_4E280                               ; CODE XREF: SMF_CheckFileType+A0↓j
.text:000000000004E280                                         ; SMF_CheckFileType+BC↓j ...
.text:000000000004E280                 LDR             X8, [X23,#0x28]
.text:000000000004E284                 LDR             X9, [SP,#0x50+var_38]
.text:000000000004E288                 CMP             X8, X9
.text:000000000004E28C                 B.NE            loc_4E394
.text:000000000004E290                 LDP             X29, X30, [SP,#0x50+var_s0]
.text:000000000004E294                 LDP             X20, X19, [SP,#0x50+var_10]
.text:000000000004E298                 LDP             X22, X21, [SP,#0x50+var_20]
.text:000000000004E29C                 LDR             X23, [SP,#0x50+var_30]
.text:000000000004E2A0                 ADD             SP, SP, #0x60 ; '`'
.text:000000000004E2A4                 RET
.text:000000000004E2A8 ; ---------------------------------------------------------------------------
.text:000000000004E2A8 loc_4E2A8                               ; CODE XREF: SMF_CheckFileType+44↑j
.text:000000000004E2A8                 LDRB            W8, [X21,#0x18C]
.text:000000000004E2AC                 CBZ             W8, loc_4E2DC
.text:000000000004E2B0                 ADRP            X2, #aMthd@PAGE ; "MThd"
.text:000000000004E2B4                 ADD             X2, X2, #aMthd@PAGEOFF ; "MThd"
.text:000000000004E2B8                 ADD             X4, SP, #0x50+var_48
.text:000000000004E2BC                 MOV             X0, X21
.text:000000000004E2C0                 MOV             X1, X20
.text:000000000004E2C4                 MOV             W3, #4
.text:000000000004E2C8                 BL              .EAS_SearchFile
.text:000000000004E2CC                 CBZ             X0, loc_4E328
.text:000000000004E2D0                 CMP             X0, #3
.text:000000000004E2D4                 CSEL            X0, XZR, X0, EQ
.text:000000000004E2D8                 B               loc_4E280
.text:000000000004E2DC ; ---------------------------------------------------------------------------
.text:000000000004E2DC loc_4E2DC                               ; CODE XREF: SMF_CheckFileType+74↑j
.text:000000000004E2DC                 LDR             X0, [X21]
.text:000000000004E2E0                 ADD             X2, SP, #0x50+var_3C
.text:000000000004E2E4                 MOV             X4, SP
.text:000000000004E2E8                 MOV             X1, X20
.text:000000000004E2EC                 MOV             W3, #4
.text:000000000004E2F0                 BL              .EAS_HWReadFile
.text:000000000004E2F4                 CBNZ            X0, loc_4E280
.text:000000000004E2F8                 LDRB            W8, [SP,#0x50+var_3C]
.text:000000000004E2FC                 CMP             W8, #0x4D ; 'M'
.text:000000000004E300                 B.NE            loc_4E280
.text:000000000004E304                 LDRB            W8, [SP,#0x50+var_3B]
.text:000000000004E308                 CMP             W8, #0x54 ; 'T'
.text:000000000004E30C                 B.NE            loc_4E280
.text:000000000004E310                 LDRB            W8, [SP,#0x50+var_3A]
.text:000000000004E314                 CMP             W8, #0x68 ; 'h'
.text:000000000004E318                 B.NE            loc_4E280
.text:000000000004E31C                 LDRB            W8, [SP,#0x50+var_39]
.text:000000000004E320                 CMP             W8, #0x64 ; 'd'
.text:000000000004E324                 B.NE            loc_4E38C
.text:000000000004E328 loc_4E328                               ; CODE XREF: SMF_CheckFileType+94↑j
.text:000000000004E328                 LDRB            W8, [X21,#0x18B]
.text:000000000004E32C                 CBZ             W8, loc_4E360
.text:000000000004E330                 MOV             W0, #5
.text:000000000004E334                 BL              .EAS_CMEnumData
.text:000000000004E338                 MOV             X21, X0
.text:000000000004E33C                 CBZ             X21, loc_4E384
.text:000000000004E340 loc_4E340                               ; CODE XREF: SMF_CheckFileType+148↓j
.text:000000000004E340                 LDR             X8, [SP,#0x50+var_48]
.text:000000000004E344                 MOV             X0, XZR
.text:000000000004E348                 MOV             W9, #6
.text:000000000004E34C                 STP             XZR, X20, [X21,#0x10]
.text:000000000004E350                 STP             X8, XZR, [X21,#0x40]
.text:000000000004E354                 STRB            W9, [X21,#0x56]
.text:000000000004E358                 STR             X21, [X19]
.text:000000000004E35C                 B               loc_4E280
.text:000000000004E360 ; ---------------------------------------------------------------------------
.text:000000000004E360 loc_4E360                               ; CODE XREF: SMF_CheckFileType+F4↑j
.text:000000000004E360                 LDR             X0, [X21]
.text:000000000004E364                 MOV             W22, #0x58 ; 'X'
.text:000000000004E368                 MOV             X1, X22
.text:000000000004E36C                 BL              .EAS_HWMalloc
.text:000000000004E370                 MOV             W1, WZR
.text:000000000004E374                 MOV             X2, X22
.text:000000000004E378                 MOV             X21, X0
.text:000000000004E37C                 BL              .EAS_HWMemSet
.text:000000000004E380                 CBNZ            X21, loc_4E340
.text:000000000004E384 loc_4E384                               ; CODE XREF: SMF_CheckFileType+104↑j
.text:000000000004E384                 MOV             X0, #0xFFFFFFFFFFFFFFFD
.text:000000000004E388                 B               loc_4E280
.text:000000000004E38C ; ---------------------------------------------------------------------------
.text:000000000004E38C loc_4E38C                               ; CODE XREF: SMF_CheckFileType+EC↑j
.text:000000000004E38C                 MOV             X0, XZR
.text:000000000004E390                 B               loc_4E280
.text:000000000004E394 ; ---------------------------------------------------------------------------
.text:000000000004E394 loc_4E394                               ; CODE XREF: SMF_CheckFileType+54↑j
.text:000000000004E394                 BL              .__stack_chk_fail
.text:000000000004E394 ; } // starts at 4E238
.text:000000000004E394 ; End of function SMF_CheckFileType
.text:000000000004E398 ; =============== S U B R O U T I N E =======================================
.text:000000000004E398 ; Attributes: bp-based frame
.text:000000000004E398                 EXPORT SMF_Prepare
.text:000000000004E398 SMF_Prepare                             ; CODE XREF: .SMF_Prepare+C↓j
.text:000000000004E398                                         ; DATA XREF: LOAD:0000000000001218↑o ...
.text:000000000004E398 var_10          = -0x10
.text:000000000004E398 var_s0          =  0
.text:000000000004E398 ; __unwind {
.text:000000000004E398                 STP             X20, X19, [SP,#-0x10+var_10]!
.text:000000000004E39C                 STP             X29, X30, [SP,#0x10+var_s0]
.text:000000000004E3A0                 ADD             X29, SP, #0x10
.text:000000000004E3A4                 LDRB            W8, [X1,#0x56]
.text:000000000004E3A8                 CMP             W8, #6
.text:000000000004E3AC                 B.NE            loc_4E3DC
.text:000000000004E3B0                 MOV             X19, X1
.text:000000000004E3B4                 ADD             X1, X1, #0x10
.text:000000000004E3B8                 MOV             X20, X0
.text:000000000004E3BC                 BL              .VMInitMIDI
.text:000000000004E3C0                 CBNZ            X0, loc_4E3E0
.text:000000000004E3C4                 LDR             X0, [X20]
.text:000000000004E3C8                 MOV             X1, X19
.text:000000000004E3CC                 BL              .SMF_ParseHeader
.text:000000000004E3D0                 CBNZ            X0, loc_4E3E0
.text:000000000004E3D4                 STRB            WZR, [X19,#0x56]
.text:000000000004E3D8                 B               loc_4E3E0
.text:000000000004E3DC ; ---------------------------------------------------------------------------
.text:000000000004E3DC loc_4E3DC                               ; CODE XREF: SMF_Prepare+14↑j
.text:000000000004E3DC                 MOV             X0, #0xFFFFFFFFFFFFFFE1
.text:000000000004E3E0 loc_4E3E0                               ; CODE XREF: SMF_Prepare+28↑j
.text:000000000004E3E0                                         ; SMF_Prepare+38↑j ...
.text:000000000004E3E0                 LDP             X29, X30, [SP,#0x10+var_s0]
.text:000000000004E3E4                 LDP             X20, X19, [SP+0x10+var_10],#0x20
.text:000000000004E3E8                 RET
.text:000000000004E3E8 ; } // starts at 4E398
.text:000000000004E3E8 ; End of function SMF_Prepare
.text:000000000004E3E8 ; ---------------------------------------------------------------------------
.text:000000000004E3EC                 ALIGN 0x10
.text:000000000004E3F0 ; =============== S U B R O U T I N E =======================================
.text:000000000004E3F0                 EXPORT SMF_Time
.text:000000000004E3F0 SMF_Time                                ; CODE XREF: .SMF_Time+C↓j
.text:000000000004E3F0                                         ; DATA XREF: LOAD:0000000000000960↑o ...
.text:000000000004E3F0 ; __unwind {
.text:000000000004E3F0                 LDR             X8, [X1,#0x48]
.text:000000000004E3F4                 MOV             X0, XZR
.text:000000000004E3F8                 ASR             X8, X8, #8
.text:000000000004E3FC                 STR             X8, [X2]
.text:000000000004E400                 LDR             X8, [X1,#0x48]
.text:000000000004E404                 ASR             X8, X8, #8
.text:000000000004E408                 STR             X8, [X2]
.text:000000000004E40C                 RET
.text:000000000004E40C ; } // starts at 4E3F0
.text:000000000004E40C ; End of function SMF_Time
.text:000000000004E410 ; =============== S U B R O U T I N E =======================================
.text:000000000004E410 ; Attributes: bp-based frame
.text:000000000004E410                 EXPORT SMF_Event
.text:000000000004E410 SMF_Event                               ; CODE XREF: .SMF_Event+C↓j
.text:000000000004E410                                         ; DATA XREF: LOAD:stru_468↑o ...
.text:000000000004E410 var_80          = -0x80
.text:000000000004E410 var_74          = -0x74
.text:000000000004E410 var_70          = -0x70
.text:000000000004E410 var_64          = -0x64
.text:000000000004E410 var_60          = -0x60
.text:000000000004E410 var_58          = -0x58
.text:000000000004E410 var_50          = -0x50
.text:000000000004E410 var_40          = -0x40
.text:000000000004E410 var_30          = -0x30
.text:000000000004E410 var_20          = -0x20
.text:000000000004E410 var_10          = -0x10
.text:000000000004E410 var_s0          =  0
.text:000000000004E410 ; __unwind {
.text:000000000004E410                 SUB             SP, SP, #0x90
.text:000000000004E414                 STP             X28, X27, [SP,#0x80+var_50]
.text:000000000004E418                 STP             X26, X25, [SP,#0x80+var_40]
.text:000000000004E41C                 STP             X24, X23, [SP,#0x80+var_30]
.text:000000000004E420                 STP             X22, X21, [SP,#0x80+var_20]
.text:000000000004E424                 STP             X20, X19, [SP,#0x80+var_10]
.text:000000000004E428                 STP             X29, X30, [SP,#0x80+var_s0]
.text:000000000004E42C                 ADD             X29, SP, #0x80
.text:000000000004E430                 MRS             X25, #3, c13, c0, #2
.text:000000000004E434                 LDR             X8, [X25,#0x28]
.text:000000000004E438                 STR             X8, [SP,#0x80+var_58]
.text:000000000004E43C                 CBZ             X1, loc_4E4A8
.text:000000000004E440                 LDR             X27, [X1,#8]
.text:000000000004E444                 MOV             X19, X1
.text:000000000004E448                 CBZ             X27, loc_4E4B0
.text:000000000004E44C                 LDRB            W8, [X19,#0x56]
.text:000000000004E450                 CMP             W8, #5
.text:000000000004E454                 B.HI            loc_4E8D0
.text:000000000004E458                 MOV             W8, #7
.text:000000000004E45C                 LDR             X26, [X27,#8]
.text:000000000004E460                 MOV             X20, X0
.text:000000000004E464                 STRB            W8, [X19,#0x56]
.text:000000000004E468                 LDR             X8, [X27,#0x20]
.text:000000000004E46C                 LDR             X0, [X0]
.text:000000000004E470                 LDR             X1, [X27]
.text:000000000004E474                 TST             X8, #1
.text:000000000004E478                 MOV             W8, #2
.text:000000000004E47C                 CSEL            W21, W2, W8, EQ
.text:000000000004E480                 ADD             X2, SP, #0x80+var_74
.text:000000000004E484                 BL              .EAS_HWGetByte
.text:000000000004E488                 CBZ             X0, loc_4E4C0
.text:000000000004E48C loc_4E48C                               ; CODE XREF: SMF_Event+DC↓j
.text:000000000004E48C                                         ; SMF_Event+FC↓j ...
.text:000000000004E48C                 CBZ             X0, loc_4E81C
.text:000000000004E490 loc_4E490                               ; CODE XREF: SMF_Event+218↓j
.text:000000000004E490                                         ; SMF_Event+2BC↓j ...
.text:000000000004E490                 CMP             X0, #3
.text:000000000004E494                 B.NE            loc_4E8D4
.text:000000000004E498                 LDR             X8, [X19,#8]
.text:000000000004E49C                 MOV             W9, #0xFFFFFFFF
.text:000000000004E4A0                 STR             X9, [X8,#8]
.text:000000000004E4A4                 B               loc_4E830
.text:000000000004E4A8 ; ---------------------------------------------------------------------------
.text:000000000004E4A8 loc_4E4A8                               ; CODE XREF: SMF_Event+2C↑j
.text:000000000004E4A8                 MOV             X0, #0xFFFFFFFFFFFFFFFF
.text:000000000004E4AC                 B               loc_4E8D4
.text:000000000004E4B0 ; ---------------------------------------------------------------------------
.text:000000000004E4B0 loc_4E4B0                               ; CODE XREF: SMF_Event+38↑j
.text:000000000004E4B0                 MOV             W8, #7
.text:000000000004E4B4                 MOV             X0, #0xFFFFFFFFFFFFFFFF
.text:000000000004E4B8                 STRB            W8, [X19,#0x56]
.text:000000000004E4BC                 B               loc_4E8D4
.text:000000000004E4C0 ; ---------------------------------------------------------------------------
.text:000000000004E4C0 loc_4E4C0                               ; CODE XREF: SMF_Event+78↑j
.text:000000000004E4C0                 LDRB            W22, [SP,#0x80+var_74]
.text:000000000004E4C4                 CMP             W22, #0xF0
.text:000000000004E4C8                 B.EQ            loc_4E564
.text:000000000004E4CC                 CMP             W22, #0xF7
.text:000000000004E4D0                 B.EQ            loc_4E564
.text:000000000004E4D4                 CMP             W22, #0xFF
.text:000000000004E4D8                 B.NE            loc_4E630
.text:000000000004E4DC                 LDR             X0, [X20]
.text:000000000004E4E0                 ADD             X2, SP, #0x80+var_64
.text:000000000004E4E4                 LDR             X1, [X27]
.text:000000000004E4E8                 BL              .EAS_HWGetByte
.text:000000000004E4EC                 CBNZ            X0, loc_4E48C
.text:000000000004E4F0                 LDR             X22, [X20]
.text:000000000004E4F4                 MOV             X24, XZR
.text:000000000004E4F8                 LDR             X23, [X27]
.text:000000000004E4FC loc_4E4FC                               ; CODE XREF: SMF_Event+110↓j
.text:000000000004E4FC                 ADD             X2, SP, #0x80+var_70
.text:000000000004E500                 MOV             X0, X22
.text:000000000004E504                 MOV             X1, X23
.text:000000000004E508                 BL              .EAS_HWGetByte
.text:000000000004E50C                 CBNZ            X0, loc_4E48C
.text:000000000004E510                 LDRB            W8, [SP,#0x80+var_70]
.text:000000000004E514                 MOV             X21, X8
.text:000000000004E518                 BFI             X21, X24, #7, #0x39 ; '9'
.text:000000000004E51C                 MOV             X24, X21
.text:000000000004E520                 TBNZ            W8, #7, loc_4E4FC
.text:000000000004E524                 LDR             X0, [X20]
.text:000000000004E528                 ADD             X2, SP, #0x80+var_60
.text:000000000004E52C                 LDR             X1, [X27]
.text:000000000004E530                 BL              .EAS_HWFilePos
.text:000000000004E534                 CBNZ            X0, loc_4E48C
.text:000000000004E538                 TBNZ            X21, #0x3F, loc_4E684 ; '?'
.text:000000000004E53C                 LDR             X9, [SP,#0x80+var_60]
.text:000000000004E540                 MOV             W8, #0x7FFFFFFF
.text:000000000004E544                 SUB             X8, X8, X9
.text:000000000004E548                 CMP             X21, X8
.text:000000000004E54C                 B.LE            loc_4E6D4
.text:000000000004E550                 ADRP            X1, #aSonivox@PAGE ; "Sonivox"
.text:000000000004E554                 ADRP            X2, #aSTooLargeLenLd@PAGE ; "%s() too large len = %ld"
.text:000000000004E558                 ADD             X1, X1, #aSonivox@PAGEOFF ; "Sonivox"
.text:000000000004E55C                 ADD             X2, X2, #aSTooLargeLenLd@PAGEOFF ; "%s() too large len = %ld"
.text:000000000004E560                 B               loc_4E694
.text:000000000004E564 ; ---------------------------------------------------------------------------
.text:000000000004E564 loc_4E564                               ; CODE XREF: SMF_Event+B8↑j
.text:000000000004E564                                         ; SMF_Event+C0↑j
.text:000000000004E564                 LDR             X23, [X20]
.text:000000000004E568                 LDR             X24, [X27]
.text:000000000004E56C                 STR             X26, [SP,#0x80+var_80]
.text:000000000004E570                 MOV             X26, XZR
.text:000000000004E574 loc_4E574                               ; CODE XREF: SMF_Event+188↓j
.text:000000000004E574                 ADD             X2, SP, #0x80+var_60
.text:000000000004E578                 MOV             X0, X23
.text:000000000004E57C                 MOV             X1, X24
.text:000000000004E580                 BL              .EAS_HWGetByte
.text:000000000004E584                 CBNZ            X0, loc_4E624
.text:000000000004E588                 LDRB            W8, [SP,#0x80+var_60]
.text:000000000004E58C                 MOV             X28, X8
.text:000000000004E590                 BFI             X28, X26, #7, #0x39 ; '9'
.text:000000000004E594                 MOV             X26, X28
.text:000000000004E598                 TBNZ            W8, #7, loc_4E574
.text:000000000004E59C                 CMP             W22, #0xF0
.text:000000000004E5A0                 B.NE            loc_4E5C0
.text:000000000004E5A4                 LDR             X1, [X19,#0x10]
.text:000000000004E5A8                 ADD             X2, X27, #0x18
.text:000000000004E5AC                 MOV             X0, X20
.text:000000000004E5B0                 MOV             W3, #0xF0
.text:000000000004E5B4                 MOV             W4, W21
.text:000000000004E5B8                 BL              .EAS_ParseMIDIStream
.text:000000000004E5BC                 CBNZ            X0, loc_4E624
.text:000000000004E5C0 loc_4E5C0                               ; CODE XREF: SMF_Event+190↑j
.text:000000000004E5C0                 CBZ             X28, loc_4E614
.text:000000000004E5C4                 ADD             X22, X27, #0x18
.text:000000000004E5C8 loc_4E5C8                               ; CODE XREF: SMF_Event:loc_4E610↓j
.text:000000000004E5C8                 LDR             X0, [X20]
.text:000000000004E5CC                 ADD             X2, SP, #0x80+var_70
.text:000000000004E5D0                 LDR             X1, [X27]
.text:000000000004E5D4                 BL              .EAS_HWGetByte
.text:000000000004E5D8                 CBNZ            X0, loc_4E624
.text:000000000004E5DC                 LDR             X1, [X19,#0x10]
.text:000000000004E5E0                 MOV             X0, X20
.text:000000000004E5E4                 LDRB            W3, [SP,#0x80+var_70]
.text:000000000004E5E8                 MOV             X2, X22
.text:000000000004E5EC                 MOV             W4, W21
.text:000000000004E5F0                 BL              .EAS_ParseMIDIStream
.text:000000000004E5F4                 CBNZ            X0, loc_4E624
.text:000000000004E5F8                 LDRB            W8, [X27,#0x1F]
.text:000000000004E5FC                 SUB             X28, X28, #1
.text:000000000004E600                 TBZ             W8, #0, loc_4E610
.text:000000000004E604                 LDRB            W8, [X19,#0x57]
.text:000000000004E608                 ORR             W8, W8, #8
.text:000000000004E60C                 STRB            W8, [X19,#0x57]
.text:000000000004E610 loc_4E610                               ; CODE XREF: SMF_Event+1F0↑j
.text:000000000004E610                 CBNZ            X28, loc_4E5C8
.text:000000000004E614 loc_4E614                               ; CODE XREF: SMF_Event:loc_4E5C0↑j
.text:000000000004E614                 LDR             X26, [SP,#0x80+var_80]
.text:000000000004E618                 LDR             X8, [X19,#0x48]
.text:000000000004E61C                 CBNZ            X8, loc_4E81C
.text:000000000004E620                 B               loc_4E964
.text:000000000004E624 ; ---------------------------------------------------------------------------
.text:000000000004E624 loc_4E624                               ; CODE XREF: SMF_Event+174↑j
.text:000000000004E624                                         ; SMF_Event+1AC↑j ...
.text:000000000004E624                 LDR             X26, [SP,#0x80+var_80]
.text:000000000004E628                 CBNZ            X0, loc_4E490
.text:000000000004E62C                 B               loc_4E81C
.text:000000000004E630 ; ---------------------------------------------------------------------------
.text:000000000004E630 loc_4E630                               ; CODE XREF: SMF_Event+C8↑j
.text:000000000004E630                 LDR             X1, [X19,#0x10]
.text:000000000004E634                 ADD             X23, X27, #0x18
.text:000000000004E638                 MOV             X0, X20
.text:000000000004E63C                 MOV             X2, X23
.text:000000000004E640                 MOV             W3, W22
.text:000000000004E644                 B               loc_4E658
.text:000000000004E648 ; ---------------------------------------------------------------------------
.text:000000000004E648 loc_4E648                               ; CODE XREF: SMF_Event+26C↓j
.text:000000000004E648                 LDR             X1, [X19,#0x10]
.text:000000000004E64C                 MOV             X0, X20
.text:000000000004E650                 LDRB            W3, [SP,#0x80+var_74]
.text:000000000004E654                 MOV             X2, X23
.text:000000000004E658 loc_4E658                               ; CODE XREF: SMF_Event+234↑j
.text:000000000004E658                 MOV             W4, W21
.text:000000000004E65C                 BL              .EAS_ParseMIDIStream
.text:000000000004E660                 CBNZ            X0, loc_4E48C
.text:000000000004E664                 LDRB            W8, [X27,#0x19]
.text:000000000004E668                 CBZ             W8, loc_4E814
.text:000000000004E66C                 LDR             X0, [X20]
.text:000000000004E670                 ADD             X2, SP, #0x80+var_74
.text:000000000004E674                 LDR             X1, [X27]
.text:000000000004E678                 BL              .EAS_HWGetByte
.text:000000000004E67C                 CBZ             X0, loc_4E648
.text:000000000004E680                 B               loc_4E48C
.text:000000000004E684 ; ---------------------------------------------------------------------------
.text:000000000004E684 loc_4E684                               ; CODE XREF: SMF_Event+128↑j
.text:000000000004E684                 ADRP            X1, #aSonivox@PAGE ; "Sonivox"
.text:000000000004E688                 ADRP            X2, #aSNegativeLenLd@PAGE ; "%s() negative len = %ld"
.text:000000000004E68C                 ADD             X1, X1, #aSonivox@PAGEOFF ; "Sonivox"
.text:000000000004E690                 ADD             X2, X2, #aSNegativeLenLd@PAGEOFF ; "%s() negative len = %ld"
.text:000000000004E694 loc_4E694                               ; CODE XREF: SMF_Event+150↑j
.text:000000000004E694                 ADRP            X3, #aSmfParsemetaev@PAGE ; "SMF_ParseMetaEvent"
.text:000000000004E698                 ADD             X3, X3, #aSmfParsemetaev@PAGEOFF ; "SMF_ParseMetaEvent"
.text:000000000004E69C                 MOV             W0, #6
.text:000000000004E6A0                 MOV             X4, X21
.text:000000000004E6A4                 BL              .__android_log_print
.text:000000000004E6A8                 ADRP            X1, #a68953854@PAGE ; "68953854"
.text:000000000004E6AC                 MOV             W0, #0x4554
.text:000000000004E6B0                 ADD             X1, X1, #a68953854@PAGEOFF ; "68953854"
.text:000000000004E6B4                 MOVK            W0, #0x534E,LSL#16
.text:000000000004E6B8                 MOV             W2, #0xFFFFFFFF
.text:000000000004E6BC                 MOV             X3, XZR
.text:000000000004E6C0                 MOV             W4, WZR
.text:000000000004E6C4                 BL              .__android_log_error_write
.text:000000000004E6C8                 MOV             X0, #0xFFFFFFFFFFFFFFEF
.text:000000000004E6CC                 CBNZ            X0, loc_4E490
.text:000000000004E6D0                 B               loc_4E81C
.text:000000000004E6D4 ; ---------------------------------------------------------------------------
.text:000000000004E6D4 loc_4E6D4                               ; CODE XREF: SMF_Event+13C↑j
.text:000000000004E6D4                 LDRB            W8, [SP,#0x80+var_64]
.text:000000000004E6D8                 ADD             X9, X9, X21
.text:000000000004E6DC                 STR             X9, [SP,#0x80+var_60]
.text:000000000004E6E0                 CMP             W8, #0x2F ; '/'
.text:000000000004E6E4                 B.EQ            loc_4E730
.text:000000000004E6E8                 CMP             W8, #0x58 ; 'X'
.text:000000000004E6EC                 B.EQ            loc_4E73C
.text:000000000004E6F0                 CMP             W8, #0x51 ; 'Q'
.text:000000000004E6F4                 B.NE            loc_4E74C
.text:000000000004E6F8                 CBZ             X21, loc_4E7C4
.text:000000000004E6FC                 MOV             X22, XZR
.text:000000000004E700 loc_4E700                               ; CODE XREF: SMF_Event+314↓j
.text:000000000004E700                 LDR             X0, [X20]
.text:000000000004E704                 ADD             X2, SP, #0x80+var_64
.text:000000000004E708                 LDR             X1, [X27]
.text:000000000004E70C                 BL              .EAS_HWGetByte
.text:000000000004E710                 CBNZ            X0, loc_4E48C
.text:000000000004E714                 LDRB            W8, [SP,#0x80+var_64]
.text:000000000004E718                 SUB             X21, X21, #1
.text:000000000004E71C                 BFI             X8, X22, #8, #0x38 ; '8'
.text:000000000004E720                 MOV             X22, X8
.text:000000000004E724                 CBNZ            X21, loc_4E700
.text:000000000004E728                 LSL             X8, X8, #0xA
.text:000000000004E72C                 B               loc_4E7C8
.text:000000000004E730 ; ---------------------------------------------------------------------------
.text:000000000004E730 loc_4E730                               ; CODE XREF: SMF_Event+2D4↑j
.text:000000000004E730                 MOV             W8, #0xFFFFFFFF
.text:000000000004E734                 STR             X8, [X27,#8]
.text:000000000004E738                 B               loc_4E800
.text:000000000004E73C ; ---------------------------------------------------------------------------
.text:000000000004E73C loc_4E73C                               ; CODE XREF: SMF_Event+2DC↑j
.text:000000000004E73C                 LDRB            W8, [X19,#0x57]
.text:000000000004E740                 ORR             W8, W8, #2
.text:000000000004E744                 STRB            W8, [X19,#0x57]
.text:000000000004E748                 B               loc_4E800
.text:000000000004E74C ; ---------------------------------------------------------------------------
.text:000000000004E74C loc_4E74C                               ; CODE XREF: SMF_Event+2E4↑j
.text:000000000004E74C                 LDR             X9, [X19,#0x20]
.text:000000000004E750                 CBZ             X9, loc_4E800
.text:000000000004E754                 SUB             W22, W8, #1
.text:000000000004E758                 CMP             W22, #4
.text:000000000004E75C                 B.HI            loc_4E800
.text:000000000004E760                 MOV             W8, #0x17
.text:000000000004E764                 LSR             W8, W8, W22
.text:000000000004E768                 TBZ             W8, #0, loc_4E800
.text:000000000004E76C                 LDR             X8, [X19,#0x38]
.text:000000000004E770                 ADD             X4, SP, #0x80+var_70
.text:000000000004E774                 LDR             X0, [X20]
.text:000000000004E778                 SUB             X8, X8, #1
.text:000000000004E77C                 CMP             X21, X8
.text:000000000004E780                 CSEL            X3, X21, X8, LT
.text:000000000004E784                 STR             X3, [SP,#0x80+var_70]
.text:000000000004E788                 LDR             X1, [X27]
.text:000000000004E78C                 LDR             X2, [X19,#0x28]
.text:000000000004E790                 BL              .EAS_HWReadFile
.text:000000000004E794                 CBNZ            X0, loc_4E48C
.text:000000000004E798                 LDR             X8, [X19,#0x28]
.text:000000000004E79C                 ADRP            X11, #unk_5B84@PAGE
.text:000000000004E7A0                 LDR             X9, [SP,#0x80+var_70]
.text:000000000004E7A4                 ADD             X11, X11, #unk_5B84@PAGEOFF
.text:000000000004E7A8                 SXTB            X10, W22
.text:000000000004E7AC                 LDR             W0, [X11,X10,LSL#2]
.text:000000000004E7B0                 STRB            WZR, [X8,X9]
.text:000000000004E7B4                 LDP             X8, X1, [X19,#0x20]
.text:000000000004E7B8                 LDR             X2, [X19,#0x30]
.text:000000000004E7BC                 BLR             X8
.text:000000000004E7C0                 B               loc_4E800
.text:000000000004E7C4 ; ---------------------------------------------------------------------------
.text:000000000004E7C4 loc_4E7C4                               ; CODE XREF: SMF_Event+2E8↑j
.text:000000000004E7C4                 MOV             X8, XZR
.text:000000000004E7C8 loc_4E7C8                               ; CODE XREF: SMF_Event+31C↑j
.text:000000000004E7C8                 LDRH            W9, [X19,#0x54]
.text:000000000004E7CC                 LDRB            W10, [X19,#0x57]
.text:000000000004E7D0                 UDIV            X8, X8, X9
.text:000000000004E7D4                 MOV             X9, #0x20C49BA5E353F7CF
.text:000000000004E7E4                 ADD             X8, X8, #0x1F4
.text:000000000004E7E8                 LSR             X8, X8, #3
.text:000000000004E7EC                 UMULH           X8, X8, X9
.text:000000000004E7F0                 ORR             W9, W10, #4
.text:000000000004E7F4                 LSR             X8, X8, #4
.text:000000000004E7F8                 STRB            W9, [X19,#0x57]
.text:000000000004E7FC                 STRH            W8, [X19,#0x52]
.text:000000000004E800 loc_4E800                               ; CODE XREF: SMF_Event+328↑j
.text:000000000004E800                                         ; SMF_Event+338↑j ...
.text:000000000004E800                 LDR             X0, [X20]
.text:000000000004E804                 LDR             X1, [X27]
.text:000000000004E808                 LDR             X2, [SP,#0x80+var_60]
.text:000000000004E80C                 BL              .EAS_HWFileSeek
.text:000000000004E810                 CBNZ            X0, loc_4E48C
.text:000000000004E814 loc_4E814                               ; CODE XREF: SMF_Event+258↑j
.text:000000000004E814                 LDR             X8, [X19,#0x48]
.text:000000000004E818                 CBZ             X8, loc_4E964
.text:000000000004E81C loc_4E81C                               ; CODE XREF: SMF_Event:loc_4E48C↑j
.text:000000000004E81C                                         ; SMF_Event+20C↑j ...
.text:000000000004E81C                 LDR             X23, [X19,#8]
.text:000000000004E820                 MOV             W9, #0xFFFFFFFF
.text:000000000004E824                 LDR             X8, [X23,#8]
.text:000000000004E828                 CMP             X8, X9
.text:000000000004E82C                 B.NE            loc_4E904
.text:000000000004E830 loc_4E830                               ; CODE XREF: SMF_Event+94↑j
.text:000000000004E830                                         ; SMF_Event+540↓j
.text:000000000004E830                 LDRH            W9, [X19,#0x50]
.text:000000000004E834                 STR             XZR, [X19,#8]
.text:000000000004E838                 CBZ             X9, loc_4E8BC
.text:000000000004E83C                 LDR             X10, [X19]
.text:000000000004E840                 MOV             X8, XZR
.text:000000000004E844                 MOV             X11, XZR
.text:000000000004E848                 MOV             W12, #0x7FFFFFF
.text:000000000004E84C loc_4E84C                               ; CODE XREF: SMF_Event+460↓j
.text:000000000004E84C                 LDR             X13, [X10,#8]
.text:000000000004E850                 CMP             X13, X12
.text:000000000004E854                 B.CS            loc_4E864
.text:000000000004E858                 MOV             X8, X10
.text:000000000004E85C                 STR             X10, [X19,#8]
.text:000000000004E860                 MOV             X12, X13
.text:000000000004E864 loc_4E864                               ; CODE XREF: SMF_Event+444↑j
.text:000000000004E864                 ADD             X11, X11, #1
.text:000000000004E868                 ADD             X10, X10, #0x28 ; '('
.text:000000000004E86C                 CMP             X11, X9
.text:000000000004E870                 B.CC            loc_4E84C
.text:000000000004E874                 CBZ             X8, loc_4E8BC
.text:000000000004E878                 LDRB            W9, [X19,#0x57]
.text:000000000004E87C                 MOV             W10, #1
.text:000000000004E880                 STRB            W10, [X19,#0x56]
.text:000000000004E884                 TBNZ            W9, #0, loc_4E8D0
.text:000000000004E888                 LDR             X8, [X8,#8]
.text:000000000004E88C                 MOV             X0, XZR
.text:000000000004E890                 LDRH            W9, [X19,#0x52]
.text:000000000004E894                 LDR             X11, [X19,#0x48]
.text:000000000004E898                 SUB             X8, X8, X26
.text:000000000004E89C                 LSR             X10, X8, #0xA
.text:000000000004E8A0                 AND             X8, X8, #0x3FF
.text:000000000004E8A4                 MUL             X10, X10, X9
.text:000000000004E8A8                 MUL             X8, X8, X9
.text:000000000004E8AC                 ADD             X9, X11, X10,LSL#8
.text:000000000004E8B0                 ADD             X8, X9, X8,LSR#2
.text:000000000004E8B4                 STR             X8, [X19,#0x48]
.text:000000000004E8B8                 B               loc_4E8D4
.text:000000000004E8BC ; ---------------------------------------------------------------------------
.text:000000000004E8BC loc_4E8BC                               ; CODE XREF: SMF_Event+428↑j
.text:000000000004E8BC                                         ; SMF_Event+464↑j
.text:000000000004E8BC                 MOV             W8, #2
.text:000000000004E8C0                 LDR             X1, [X19,#0x10]
.text:000000000004E8C4                 STRB            W8, [X19,#0x56]
.text:000000000004E8C8                 LDR             X0, [X20,#0x170]
.text:000000000004E8CC                 BL              .VMReleaseAllVoices
.text:000000000004E8D0 loc_4E8D0                               ; CODE XREF: SMF_Event+44↑j
.text:000000000004E8D0                                         ; SMF_Event+474↑j
.text:000000000004E8D0                 MOV             X0, XZR
.text:000000000004E8D4 loc_4E8D4                               ; CODE XREF: SMF_Event+84↑j
.text:000000000004E8D4                                         ; SMF_Event+9C↑j ...
.text:000000000004E8D4                 LDR             X8, [X25,#0x28]
.text:000000000004E8D8                 LDR             X9, [SP,#0x80+var_58]
.text:000000000004E8DC                 CMP             X8, X9
.text:000000000004E8E0                 B.NE            loc_4E99C
.text:000000000004E8E4                 LDP             X29, X30, [SP,#0x80+var_s0]
.text:000000000004E8E8                 LDP             X20, X19, [SP,#0x80+var_10]
.text:000000000004E8EC                 LDP             X22, X21, [SP,#0x80+var_20]
.text:000000000004E8F0                 LDP             X24, X23, [SP,#0x80+var_30]
.text:000000000004E8F4                 LDP             X26, X25, [SP,#0x80+var_40]
.text:000000000004E8F8                 LDP             X28, X27, [SP,#0x80+var_50]
.text:000000000004E8FC                 ADD             SP, SP, #0x90
.text:000000000004E900                 RET
.text:000000000004E904 ; ---------------------------------------------------------------------------
.text:000000000004E904 loc_4E904                               ; CODE XREF: SMF_Event+41C↑j
.text:000000000004E904                 LDR             X21, [X20]
.text:000000000004E908                 MOV             X24, XZR
.text:000000000004E90C                 LDR             X22, [X23]
.text:000000000004E910 loc_4E910                               ; CODE XREF: SMF_Event+524↓j
.text:000000000004E910                 ADD             X2, SP, #0x80+var_60
.text:000000000004E914                 MOV             X0, X21
.text:000000000004E918                 MOV             X1, X22
.text:000000000004E91C                 BL              .EAS_HWGetByte
.text:000000000004E920                 CBNZ            X0, loc_4E490
.text:000000000004E924                 LDRB            W9, [SP,#0x80+var_60]
.text:000000000004E928                 MOV             X8, X9
.text:000000000004E92C                 BFI             X8, X24, #7, #0x39 ; '9'
.text:000000000004E930                 MOV             X24, X8
.text:000000000004E934                 TBNZ            W9, #7, loc_4E910
.text:000000000004E938                 LDR             X9, [X23,#8]
.text:000000000004E93C                 ADD             X8, X9, X8
.text:000000000004E940                 STR             X8, [X23,#8]
.text:000000000004E944                 LDR             X8, [X19,#8]
.text:000000000004E948                 LDR             X8, [X8,#8]
.text:000000000004E94C                 CMP             X8, X26
.text:000000000004E950                 B.NE            loc_4E830
.text:000000000004E954                 MOV             W8, #1
.text:000000000004E958                 MOV             X0, XZR
.text:000000000004E95C                 STRB            W8, [X19,#0x56]
.text:000000000004E960                 B               loc_4E8D4
.text:000000000004E964 ; ---------------------------------------------------------------------------
.text:000000000004E964 loc_4E964                               ; CODE XREF: SMF_Event+210↑j
.text:000000000004E964                                         ; SMF_Event+408↑j
.text:000000000004E964                 LDRB            W8, [X19,#0x57]
.text:000000000004E968                 TBNZ            W8, #0, loc_4E988
.text:000000000004E96C                 MVN             W9, W8
.text:000000000004E970                 TST             W9, #0xE
.text:000000000004E974                 B.NE            loc_4E81C
.text:000000000004E978                 AND             W8, W8, #0xF0
.text:000000000004E97C                 ORR             W8, W8, #1
.text:000000000004E980                 STRB            W8, [X19,#0x57]
.text:000000000004E984                 B               loc_4E81C
.text:000000000004E988 ; ---------------------------------------------------------------------------
.text:000000000004E988 loc_4E988                               ; CODE XREF: SMF_Event+558↑j
.text:000000000004E988                 LDRB            W9, [X27,#0x1F]
.text:000000000004E98C                 TBZ             W9, #1, loc_4E81C
.text:000000000004E990                 AND             W8, W8, #0xFE
.text:000000000004E994                 STRB            W8, [X19,#0x57]
.text:000000000004E998                 B               loc_4E81C
.text:000000000004E99C ; ---------------------------------------------------------------------------
.text:000000000004E99C loc_4E99C                               ; CODE XREF: SMF_Event+4D0↑j
.text:000000000004E99C                 BL              .__stack_chk_fail
.text:000000000004E99C ; } // starts at 4E410
.text:000000000004E99C ; End of function SMF_Event
.text:000000000004E9A0 ; =============== S U B R O U T I N E =======================================
.text:000000000004E9A0 ; Attributes: bp-based frame
.text:000000000004E9A0                 EXPORT SMF_State
.text:000000000004E9A0 SMF_State                               ; CODE XREF: .SMF_State+C↓j
.text:000000000004E9A0                                         ; DATA XREF: LOAD:0000000000001830↑o ...
.text:000000000004E9A0 var_10          = -0x10
.text:000000000004E9A0 var_s0          =  0
.text:000000000004E9A0 ; __unwind {
.text:000000000004E9A0                 STP             X20, X19, [SP,#-0x10+var_10]!
.text:000000000004E9A4                 STP             X29, X30, [SP,#0x10+var_s0]
.text:000000000004E9A8                 ADD             X29, SP, #0x10
.text:000000000004E9AC                 LDRB            W8, [X1,#0x56]
.text:000000000004E9B0                 MOV             X20, X1
.text:000000000004E9B4                 MOV             X19, X2
.text:000000000004E9B8                 CMP             W8, #2
.text:000000000004E9BC                 B.NE            loc_4E9D0
.text:000000000004E9C0                 LDR             X0, [X20,#0x10]
.text:000000000004E9C4                 BL              .VMActiveVoices
.text:000000000004E9C8                 CBZ             X0, loc_4E9EC
.text:000000000004E9CC                 LDRB            W8, [X20,#0x56]
.text:000000000004E9D0 loc_4E9D0                               ; CODE XREF: SMF_State+1C↑j
.text:000000000004E9D0                 CMP             W8, #3
.text:000000000004E9D4                 B.NE            loc_4E9FC
.text:000000000004E9D8                 LDR             X0, [X20,#0x10]
.text:000000000004E9DC                 BL              .VMActiveVoices
.text:000000000004E9E0                 CBZ             X0, loc_4E9F4
.text:000000000004E9E4                 LDRB            W8, [X20,#0x56]
.text:000000000004E9E8                 B               loc_4E9FC
.text:000000000004E9EC ; ---------------------------------------------------------------------------
.text:000000000004E9EC loc_4E9EC                               ; CODE XREF: SMF_State+28↑j
.text:000000000004E9EC                 MOV             W8, #4
.text:000000000004E9F0                 B               loc_4E9F8
.text:000000000004E9F4 ; ---------------------------------------------------------------------------
.text:000000000004E9F4 loc_4E9F4                               ; CODE XREF: SMF_State+40↑j
.text:000000000004E9F4                 MOV             W8, #5
.text:000000000004E9F8 loc_4E9F8                               ; CODE XREF: SMF_State+50↑j
.text:000000000004E9F8                 STRB            W8, [X20,#0x56]
.text:000000000004E9FC loc_4E9FC                               ; CODE XREF: SMF_State+34↑j
.text:000000000004E9FC                                         ; SMF_State+48↑j
.text:000000000004E9FC                 STR             X8, [X19]
.text:000000000004EA00                 MOV             X0, XZR
.text:000000000004EA04                 LDP             X29, X30, [SP,#0x10+var_s0]
.text:000000000004EA08                 LDP             X20, X19, [SP+0x10+var_10],#0x20
.text:000000000004EA0C                 RET
.text:000000000004EA0C ; } // starts at 4E9A0
.text:000000000004EA0C ; End of function SMF_State
.text:000000000004EA10 ; =============== S U B R O U T I N E =======================================
.text:000000000004EA10 ; Attributes: bp-based frame
.text:000000000004EA10                 EXPORT SMF_Close
.text:000000000004EA10 SMF_Close                               ; CODE XREF: .SMF_Close+C↓j
.text:000000000004EA10                                         ; DATA XREF: LOAD:0000000000000B40↑o ...
.text:000000000004EA10 var_20          = -0x20
.text:000000000004EA10 var_10          = -0x10
.text:000000000004EA10 var_s0          =  0
.text:000000000004EA10 ; __unwind {
.text:000000000004EA10                 STP             X22, X21, [SP,#-0x10+var_20]!
.text:000000000004EA14                 STP             X20, X19, [SP,#0x20+var_10]
.text:000000000004EA18                 STP             X29, X30, [SP,#0x20+var_s0]
.text:000000000004EA1C                 ADD             X29, SP, #0x20
.text:000000000004EA20                 LDRH            W8, [X1,#0x50]
.text:000000000004EA24                 MOV             X19, X1
.text:000000000004EA28                 MOV             X20, X0
.text:000000000004EA2C                 CBZ             W8, loc_4EA64
.text:000000000004EA30                 MOV             X21, XZR
.text:000000000004EA34                 MOV             X22, XZR
.text:000000000004EA38 loc_4EA38                               ; CODE XREF: SMF_Close+50↓j
.text:000000000004EA38                 LDR             X9, [X19]
.text:000000000004EA3C                 LDR             X1, [X9,X21]
.text:000000000004EA40                 CBZ             X1, loc_4EA54
.text:000000000004EA44                 LDR             X0, [X20]
.text:000000000004EA48                 BL              .EAS_HWCloseFile
.text:000000000004EA4C                 CBNZ            X0, loc_4EAB0
.text:000000000004EA50                 LDRH            W8, [X19,#0x50]
.text:000000000004EA54 loc_4EA54                               ; CODE XREF: SMF_Close+30↑j
.text:000000000004EA54                 ADD             X22, X22, #1
.text:000000000004EA58                 ADD             X21, X21, #0x28 ; '('
.text:000000000004EA5C                 CMP             X22, W8,UXTH
.text:000000000004EA60                 B.CC            loc_4EA38
.text:000000000004EA64 loc_4EA64                               ; CODE XREF: SMF_Close+1C↑j
.text:000000000004EA64                 LDR             X1, [X19,#0x18]
.text:000000000004EA68                 CBZ             X1, loc_4EA78
.text:000000000004EA6C                 LDR             X0, [X20]
.text:000000000004EA70                 BL              .EAS_HWCloseFile
.text:000000000004EA74                 CBNZ            X0, loc_4EAB0
.text:000000000004EA78 loc_4EA78                               ; CODE XREF: SMF_Close+58↑j
.text:000000000004EA78                 LDR             X1, [X19,#0x10]
.text:000000000004EA7C                 CBZ             X1, loc_4EA88
.text:000000000004EA80                 MOV             X0, X20
.text:000000000004EA84                 BL              .VMMIDIShutdown
.text:000000000004EA88 loc_4EA88                               ; CODE XREF: SMF_Close+6C↑j
.text:000000000004EA88                 LDRB            W8, [X20,#0x18B]
.text:000000000004EA8C                 CBNZ            W8, loc_4EAAC
.text:000000000004EA90                 LDR             X1, [X19]
.text:000000000004EA94                 CBZ             X1, loc_4EAA0
.text:000000000004EA98                 LDR             X0, [X20]
.text:000000000004EA9C                 BL              .EAS_HWFree
.text:000000000004EAA0 loc_4EAA0                               ; CODE XREF: SMF_Close+84↑j
.text:000000000004EAA0                 LDR             X0, [X20]
.text:000000000004EAA4                 MOV             X1, X19
.text:000000000004EAA8                 BL              .EAS_HWFree
.text:000000000004EAAC loc_4EAAC                               ; CODE XREF: SMF_Close+7C↑j
.text:000000000004EAAC                 MOV             X0, XZR
.text:000000000004EAB0 loc_4EAB0                               ; CODE XREF: SMF_Close+3C↑j
.text:000000000004EAB0                                         ; SMF_Close+64↑j
.text:000000000004EAB0                 LDP             X29, X30, [SP,#0x20+var_s0]
.text:000000000004EAB4                 LDP             X20, X19, [SP,#0x20+var_10]
.text:000000000004EAB8                 LDP             X22, X21, [SP+0x20+var_20],#0x30
.text:000000000004EABC                 RET
.text:000000000004EABC ; } // starts at 4EA10
.text:000000000004EABC ; End of function SMF_Close
.text:000000000004EAC0 ; =============== S U B R O U T I N E =======================================
.text:000000000004EAC0 ; Attributes: bp-based frame
.text:000000000004EAC0                 EXPORT SMF_Reset
.text:000000000004EAC0 SMF_Reset                               ; CODE XREF: .SMF_Reset+C↓j
.text:000000000004EAC0                                         ; DATA XREF: LOAD:0000000000001050↑o ...
.text:000000000004EAC0 var_68          = -0x68
.text:000000000004EAC0 var_5C          = -0x5C
.text:000000000004EAC0 var_58          = -0x58
.text:000000000004EAC0 var_50          = -0x50
.text:000000000004EAC0 var_40          = -0x40
.text:000000000004EAC0 var_30          = -0x30
.text:000000000004EAC0 var_20          = -0x20
.text:000000000004EAC0 var_10          = -0x10
.text:000000000004EAC0 var_s0          =  0
.text:000000000004EAC0 ; __unwind {
.text:000000000004EAC0                 SUB             SP, SP, #0x80
.text:000000000004EAC4                 STP             X28, X27, [SP,#0x70+var_50]
.text:000000000004EAC8                 STP             X26, X25, [SP,#0x70+var_40]
.text:000000000004EACC                 STP             X24, X23, [SP,#0x70+var_30]
.text:000000000004EAD0                 STP             X22, X21, [SP,#0x70+var_20]
.text:000000000004EAD4                 STP             X20, X19, [SP,#0x70+var_10]
.text:000000000004EAD8                 STP             X29, X30, [SP,#0x70+var_s0]
.text:000000000004EADC                 ADD             X29, SP, #0x70
.text:000000000004EAE0                 MRS             X23, #3, c13, c0, #2
.text:000000000004EAE4                 MOV             X19, X1
.text:000000000004EAE8                 LDR             X8, [X23,#0x28]
.text:000000000004EAEC                 MOV             X20, X0
.text:000000000004EAF0                 MOV             W2, #1
.text:000000000004EAF4                 STR             X8, [SP,#0x70+var_58]
.text:000000000004EAF8                 STR             XZR, [X1,#0x48]
.text:000000000004EAFC                 LDR             X0, [X0,#0x170]
.text:000000000004EB00                 LDR             X1, [X1,#0x10]
.text:000000000004EB04                 BL              .VMReset
.text:000000000004EB08                 LDRH            W8, [X19,#0x50]
.text:000000000004EB0C                 STR             XZR, [X19,#8]
.text:000000000004EB10                 CBZ             W8, loc_4EBE4
.text:000000000004EB14                 LDR             X8, [X19]
.text:000000000004EB18                 MOV             X24, XZR
.text:000000000004EB1C                 MOV             W9, #0x7FFFFFFF
.text:000000000004EB20                 MOV             W26, #0x28 ; '('
.text:000000000004EB24                 STR             X9, [SP,#0x70+var_68]
.text:000000000004EB28 loc_4EB28                               ; CODE XREF: SMF_Reset+120↓j
.text:000000000004EB28                 NOP
.text:000000000004EB2C                 MADD            X8, X24, X26, X8
.text:000000000004EB30                 LDR             X0, [X20]
.text:000000000004EB34                 LDR             X1, [X8]
.text:000000000004EB38                 LDR             X2, [X8,#0x10]
.text:000000000004EB3C                 BL              .EAS_HWFileSeek
.text:000000000004EB40                 CBNZ            X0, loc_4EBEC
.text:000000000004EB44                 LDR             X8, [X19]
.text:000000000004EB48                 ADD             X9, X24, X24,LSL#2
.text:000000000004EB4C                 LSL             X27, X9, #3
.text:000000000004EB50                 ADD             X8, X8, X27
.text:000000000004EB54                 STR             XZR, [X8,#8]
.text:000000000004EB58                 LDR             X8, [X19]
.text:000000000004EB5C                 ADD             X8, X8, X27
.text:000000000004EB60                 ADD             X0, X8, #0x18
.text:000000000004EB64                 BL              .EAS_InitMIDIStream
.text:000000000004EB68                 LDR             X28, [X19]
.text:000000000004EB6C                 MOV             X25, XZR
.text:000000000004EB70                 LDR             X21, [X20]
.text:000000000004EB74                 LDR             X22, [X28,X27]
.text:000000000004EB78 loc_4EB78                               ; CODE XREF: SMF_Reset+DC↓j
.text:000000000004EB78                 ADD             X2, SP, #0x70+var_5C
.text:000000000004EB7C                 MOV             X0, X21
.text:000000000004EB80                 MOV             X1, X22
.text:000000000004EB84                 BL              .EAS_HWGetByte
.text:000000000004EB88                 CBNZ            X0, loc_4EBEC
.text:000000000004EB8C                 LDRB            W9, [SP,#0x70+var_5C]
.text:000000000004EB90                 MOV             X8, X9
.text:000000000004EB94                 BFI             X8, X25, #7, #0x39 ; '9'
.text:000000000004EB98                 MOV             X25, X8
.text:000000000004EB9C                 TBNZ            W9, #7, loc_4EB78
.text:000000000004EBA0                 ADD             X9, X28, X27
.text:000000000004EBA4                 LDR             X10, [X9,#8]
.text:000000000004EBA8                 ADD             X8, X10, X8
.text:000000000004EBAC                 LDR             X10, [SP,#0x70+var_68]
.text:000000000004EBB0                 STR             X8, [X9,#8]
.text:000000000004EBB4                 LDR             X8, [X19]
.text:000000000004EBB8                 ADD             X9, X8, X27
.text:000000000004EBBC                 LDR             X9, [X9,#8]
.text:000000000004EBC0                 CMP             X9, X10
.text:000000000004EBC4                 B.CS            loc_4EBD4
.text:000000000004EBC8                 MADD            X10, X24, X26, X8
.text:000000000004EBCC                 STR             X9, [SP,#0x70+var_68]
.text:000000000004EBD0                 STR             X10, [X19,#8]
.text:000000000004EBD4 loc_4EBD4                               ; CODE XREF: SMF_Reset+104↑j
.text:000000000004EBD4                 LDRH            W9, [X19,#0x50]
.text:000000000004EBD8                 ADD             X24, X24, #1
.text:000000000004EBDC                 CMP             X24, X9
.text:000000000004EBE0                 B.CC            loc_4EB28
.text:000000000004EBE4 loc_4EBE4                               ; CODE XREF: SMF_Reset+50↑j
.text:000000000004EBE4                 MOV             X0, XZR
.text:000000000004EBE8                 STRB            WZR, [X19,#0x56]
.text:000000000004EBEC loc_4EBEC                               ; CODE XREF: SMF_Reset+80↑j
.text:000000000004EBEC                                         ; SMF_Reset+C8↑j
.text:000000000004EBEC                 LDR             X8, [X23,#0x28]
.text:000000000004EBF0                 LDR             X9, [SP,#0x70+var_58]
.text:000000000004EBF4                 CMP             X8, X9
.text:000000000004EBF8                 B.NE            loc_4EC1C
.text:000000000004EBFC                 LDP             X29, X30, [SP,#0x70+var_s0]
.text:000000000004EC00                 LDP             X20, X19, [SP,#0x70+var_10]
.text:000000000004EC04                 LDP             X22, X21, [SP,#0x70+var_20]
.text:000000000004EC08                 LDP             X24, X23, [SP,#0x70+var_30]
.text:000000000004EC0C                 LDP             X26, X25, [SP,#0x70+var_40]
.text:000000000004EC10                 LDP             X28, X27, [SP,#0x70+var_50]
.text:000000000004EC14                 ADD             SP, SP, #0x80
.text:000000000004EC18                 RET
.text:000000000004EC1C ; ---------------------------------------------------------------------------
.text:000000000004EC1C loc_4EC1C                               ; CODE XREF: SMF_Reset+138↑j
.text:000000000004EC1C                 BL              .__stack_chk_fail
.text:000000000004EC1C ; } // starts at 4EAC0
.text:000000000004EC1C ; End of function SMF_Reset
.text:000000000004EC20 ; =============== S U B R O U T I N E =======================================
.text:000000000004EC20                 EXPORT SMF_Pause
.text:000000000004EC20 SMF_Pause                               ; CODE XREF: .SMF_Pause+C↓j
.text:000000000004EC20                                         ; DATA XREF: LOAD:0000000000000B58↑o ...
.text:000000000004EC20 var_20          = -0x20
.text:000000000004EC20 var_10          = -0x10
.text:000000000004EC20 ; __unwind {
.text:000000000004EC20                 LDRB            W8, [X1,#0x56]
.text:000000000004EC24                 CMP             W8, #4
.text:000000000004EC28                 B.NE            loc_4EC34
.text:000000000004EC2C                 MOV             X0, #0xFFFFFFFFFFFFFFE8
.text:000000000004EC30                 RET
.text:000000000004EC34 ; ---------------------------------------------------------------------------
.text:000000000004EC34 loc_4EC34                               ; CODE XREF: SMF_Pause+8↑j
.text:000000000004EC34                 STR             X19, [SP,#var_20]!
.text:000000000004EC38                 STP             X29, X30, [SP,#0x20+var_10]
.text:000000000004EC3C                 ADD             X29, SP, #0x20+var_10
.text:000000000004EC40                 MOV             X19, X1
.text:000000000004EC44                 LDR             X0, [X0,#0x170]
.text:000000000004EC48                 LDR             X1, [X1,#0x10]
.text:000000000004EC4C                 BL              .VMMuteAllVoices
.text:000000000004EC50                 MOV             W8, #3
.text:000000000004EC54                 MOV             X0, XZR
.text:000000000004EC58                 STRB            W8, [X19,#0x56]
.text:000000000004EC5C                 LDP             X29, X30, [SP,#0x20+var_10]
.text:000000000004EC60                 LDR             X19, [SP+0x20+var_20],#0x20
.text:000000000004EC64                 RET
.text:000000000004EC64 ; } // starts at 4EC20
.text:000000000004EC64 ; End of function SMF_Pause
.text:000000000004EC68 ; =============== S U B R O U T I N E =======================================
.text:000000000004EC68                 EXPORT SMF_Resume
.text:000000000004EC68 SMF_Resume                              ; CODE XREF: .SMF_Resume+C↓j
.text:000000000004EC68                                         ; DATA XREF: LOAD:stru_7F8↑o ...
.text:000000000004EC68 ; __unwind {
.text:000000000004EC68                 LDRB            W8, [X1,#0x56]
.text:000000000004EC6C                 CMP             W8, #4
.text:000000000004EC70                 B.NE            loc_4EC7C
.text:000000000004EC74                 MOV             X0, #0xFFFFFFFFFFFFFFE8
.text:000000000004EC78                 RET
.text:000000000004EC7C ; ---------------------------------------------------------------------------
.text:000000000004EC7C loc_4EC7C                               ; CODE XREF: SMF_Resume+8↑j
.text:000000000004EC7C                 MOV             W8, #1
.text:000000000004EC80                 MOV             X0, XZR
.text:000000000004EC84                 STRB            W8, [X1,#0x56]
.text:000000000004EC88                 RET
.text:000000000004EC88 ; } // starts at 4EC68
.text:000000000004EC88 ; End of function SMF_Resume
.text:000000000004EC88 ; ---------------------------------------------------------------------------
.text:000000000004EC8C                 ALIGN 0x10
.text:000000000004EC90 ; =============== S U B R O U T I N E =======================================
.text:000000000004EC90                 EXPORT SMF_SetData
.text:000000000004EC90 SMF_SetData                             ; CODE XREF: .SMF_SetData+C↓j
.text:000000000004EC90                                         ; DATA XREF: LOAD:stru_480↑o ...
.text:000000000004EC90 var_10          = -0x10
.text:000000000004EC90 ; __unwind {
.text:000000000004EC90                 MOV             X0, #0xFFFFFFFFFFFFFFE4
.text:000000000004EC94                 SUB             X8, X2, #5
.text:000000000004EC98                 CMP             X8, #0xA
.text:000000000004EC9C                 B.HI            locret_4EDD4
.text:000000000004ECA0                 ADRP            X9, #unk_5B74@PAGE
.text:000000000004ECA4                 ADD             X9, X9, #unk_5B74@PAGEOFF
.text:000000000004ECA8                 ADR             X10, loc_4ECB8
.text:000000000004ECAC                 LDRB            W11, [X9,X8]
.text:000000000004ECB0                 ADD             X10, X10, X11,LSL#2
.text:000000000004ECB4                 BR              X10
.text:000000000004ECB8 ; ---------------------------------------------------------------------------
.text:000000000004ECB8 loc_4ECB8                               ; DATA XREF: SMF_SetData+18↑o
.text:000000000004ECB8                 STP             X29, X30, [SP,#var_10]!
.text:000000000004ECBC                 MOV             X29, SP
.text:000000000004ECC0                 ADD             X0, X1, #0x20 ; ' '
.text:000000000004ECC4                 MOV             X1, X3
.text:000000000004ECC8                 MOV             W2, #0x20 ; ' '
.text:000000000004ECCC                 BL              .EAS_HWMemCpy
.text:000000000004ECD0                 MOV             X0, XZR
.text:000000000004ECD4                 LDP             X29, X30, [SP+0x10+var_10],#0x10
.text:000000000004ECD8                 RET
.text:000000000004ECDC ; ---------------------------------------------------------------------------
.text:000000000004ECDC                 LDRH            W8, [X1,#0x50]
.text:000000000004ECE0                 CBZ             W8, loc_4ED28
.text:000000000004ECE4                 MOV             X8, XZR
.text:000000000004ECE8                 MOV             X9, XZR
.text:000000000004ECEC                 MOV             W10, #0x20 ; ' '
.text:000000000004ECF0                 UBFIZ           X11, X3, #0x18, #8
.text:000000000004ECF4 loc_4ECF4                               ; CODE XREF: SMF_SetData+94↓j
.text:000000000004ECF4                 LDR             X12, [X1]
.text:000000000004ECF8                 ORR             X14, X11, X8
.text:000000000004ECFC                 ADD             X9, X9, #1
.text:000000000004ED00                 ADD             X8, X8, #0x40,LSL#12 ; '@'
.text:000000000004ED04                 LDR             X13, [X12,X10]
.text:000000000004ED08                 AND             X13, X13, #0x3FFFF
.text:000000000004ED0C                 ORR             X13, X14, X13
.text:000000000004ED10                 ORR             X13, X13, #2
.text:000000000004ED14                 STR             X13, [X12,X10]
.text:000000000004ED18                 ADD             X10, X10, #0x28 ; '('
.text:000000000004ED1C                 LDRH            W12, [X1,#0x50]
.text:000000000004ED20                 CMP             X9, X12
.text:000000000004ED24                 B.CC            loc_4ECF4
.text:000000000004ED28 loc_4ED28                               ; CODE XREF: SMF_SetData+50↑j
.text:000000000004ED28                 LDRB            W8, [X1,#0x57]
.text:000000000004ED2C                 MOV             X0, XZR
.text:000000000004ED30                 ORR             W8, W8, #0x80
.text:000000000004ED34                 STRB            W8, [X1,#0x57]
.text:000000000004ED38                 RET
.text:000000000004ED3C ; ---------------------------------------------------------------------------
.text:000000000004ED3C                 LDRH            W8, [X1,#0x50]
.text:000000000004ED40                 CBZ             W8, loc_4EDE8
.text:000000000004ED44                 MOV             X8, XZR
.text:000000000004ED48                 MOV             W9, #0x20 ; ' '
.text:000000000004ED4C loc_4ED4C                               ; CODE XREF: SMF_SetData+EC↓j
.text:000000000004ED4C                 LDR             X10, [X1]
.text:000000000004ED50                 TST             X3, #1
.text:000000000004ED54                 ADD             X8, X8, #1
.text:000000000004ED58                 LSR             X3, X3, #1
.text:000000000004ED5C                 LDR             X11, [X10,X9]
.text:000000000004ED60                 AND             X12, X11, #0xFFFFFFFFFFFFFFFE
.text:000000000004ED64                 ORR             X11, X11, #1
.text:000000000004ED68                 CSEL            X11, X12, X11, EQ
.text:000000000004ED6C                 STR             X11, [X10,X9]
.text:000000000004ED70                 ADD             X9, X9, #0x28 ; '('
.text:000000000004ED74                 LDRH            W10, [X1,#0x50]
.text:000000000004ED78                 CMP             X8, X10
.text:000000000004ED7C                 B.CC            loc_4ED4C
.text:000000000004ED80                 MOV             X0, XZR
.text:000000000004ED84                 RET
.text:000000000004ED88 ; ---------------------------------------------------------------------------
.text:000000000004ED88                 LDRH            W8, [X1,#0x50]
.text:000000000004ED8C                 CMP             X8, X3
.text:000000000004ED90                 B.LE            loc_4EDD8
.text:000000000004ED94                 LDR             X8, [X1]
.text:000000000004ED98                 MOV             W9, #0x28 ; '('
.text:000000000004ED9C                 MADD            X8, X3, X9, X8
.text:000000000004EDA0                 LDR             X9, [X8,#0x20]
.text:000000000004EDA4                 ORR             X9, X9, #1
.text:000000000004EDA8                 B               loc_4EDCC
.text:000000000004EDAC ; ---------------------------------------------------------------------------
.text:000000000004EDAC                 LDRH            W8, [X1,#0x50]
.text:000000000004EDB0                 CMP             X8, X3
.text:000000000004EDB4                 B.LE            loc_4EDE0
.text:000000000004EDB8                 LDR             X8, [X1]
.text:000000000004EDBC                 MOV             W9, #0x28 ; '('
.text:000000000004EDC0                 MADD            X8, X3, X9, X8
.text:000000000004EDC4                 LDR             X9, [X8,#0x20]
.text:000000000004EDC8                 AND             X9, X9, #0xFFFFFFFFFFFFFFFE
.text:000000000004EDCC loc_4EDCC                               ; CODE XREF: SMF_SetData+118↑j
.text:000000000004EDCC                 MOV             X0, XZR
.text:000000000004EDD0                 STR             X9, [X8,#0x20]
.text:000000000004EDD4 locret_4EDD4                            ; CODE XREF: SMF_SetData+C↑j
.text:000000000004EDD4                 RET
.text:000000000004EDD8 ; ---------------------------------------------------------------------------
.text:000000000004EDD8 loc_4EDD8                               ; CODE XREF: SMF_SetData+100↑j
.text:000000000004EDD8                 MOV             X0, #0xFFFFFFFFFFFFFFF3
.text:000000000004EDDC                 RET
.text:000000000004EDE0 ; ---------------------------------------------------------------------------
.text:000000000004EDE0 loc_4EDE0                               ; CODE XREF: SMF_SetData+124↑j
.text:000000000004EDE0                 MOV             X0, #0xFFFFFFFFFFFFFFF3
.text:000000000004EDE4                 RET
.text:000000000004EDE8 ; ---------------------------------------------------------------------------
.text:000000000004EDE8 loc_4EDE8                               ; CODE XREF: SMF_SetData+B0↑j
.text:000000000004EDE8                 MOV             X0, XZR
.text:000000000004EDEC                 RET
.text:000000000004EDEC ; } // starts at 4EC90
.text:000000000004EDEC ; End of function SMF_SetData
.text:000000000004EDF0 ; =============== S U B R O U T I N E =======================================
.text:000000000004EDF0                 EXPORT SMF_GetData
.text:000000000004EDF0 SMF_GetData                             ; CODE XREF: .SMF_GetData+C↓j
.text:000000000004EDF0                                         ; DATA XREF: LOAD:00000000000008D0↑o ...
.text:000000000004EDF0 ; __unwind {
.text:000000000004EDF0                 CMP             X2, #4
.text:000000000004EDF4                 B.EQ            loc_4EE10
.text:000000000004EDF8                 CBNZ            X2, loc_4EE20
.text:000000000004EDFC                 LDRH            W8, [X1,#0x50]
.text:000000000004EE00                 CMP             W8, #1
.text:000000000004EE04                 MOV             W8, #1
.text:000000000004EE08                 CINC            X8, X8, NE
.text:000000000004EE0C                 B               loc_4EE14
.text:000000000004EE10 ; ---------------------------------------------------------------------------
.text:000000000004EE10 loc_4EE10                               ; CODE XREF: SMF_GetData+4↑j
.text:000000000004EE10                 LDR             X8, [X1,#0x10]
.text:000000000004EE14 loc_4EE14                               ; CODE XREF: SMF_GetData+1C↑j
.text:000000000004EE14                 MOV             X0, XZR
.text:000000000004EE18                 STR             X8, [X3]
.text:000000000004EE1C                 RET
.text:000000000004EE20 ; ---------------------------------------------------------------------------
.text:000000000004EE20 loc_4EE20                               ; CODE XREF: SMF_GetData+8↑j
.text:000000000004EE20                 MOV             X0, #0xFFFFFFFFFFFFFFE4
.text:000000000004EE24                 RET
.text:000000000004EE24 ; } // starts at 4EDF0
.text:000000000004EE24 ; End of function SMF_GetData
.text:000000000004EE28 ; =============== S U B R O U T I N E =======================================
.text:000000000004EE28 ; Attributes: bp-based frame
.text:000000000004EE28                 EXPORT SMF_ParseHeader
.text:000000000004EE28 SMF_ParseHeader                         ; CODE XREF: .SMF_ParseHeader+C↓j
.text:000000000004EE28                                         ; DATA XREF: LOAD:0000000000001020↑o ...
.text:000000000004EE28 var_88          = -0x88
.text:000000000004EE28 var_80          = -0x80
.text:000000000004EE28 var_78          = -0x78
.text:000000000004EE28 var_70          = -0x70
.text:000000000004EE28 var_64          = -0x64
.text:000000000004EE28 var_60          = -0x60
.text:000000000004EE28 var_5C          = -0x5C
.text:000000000004EE28 var_58          = -0x58
.text:000000000004EE28 var_50          = -0x50
.text:000000000004EE28 var_40          = -0x40
.text:000000000004EE28 var_30          = -0x30
.text:000000000004EE28 var_20          = -0x20
.text:000000000004EE28 var_10          = -0x10
.text:000000000004EE28 var_s0          =  0
.text:000000000004EE28 ; __unwind {
.text:000000000004EE28                 SUB             SP, SP, #0xA0
.text:000000000004EE2C                 STP             X28, X27, [SP,#0x90+var_50]
.text:000000000004EE30                 STP             X26, X25, [SP,#0x90+var_40]
.text:000000000004EE34                 STP             X24, X23, [SP,#0x90+var_30]
.text:000000000004EE38                 STP             X22, X21, [SP,#0x90+var_20]
.text:000000000004EE3C                 STP             X20, X19, [SP,#0x90+var_10]
.text:000000000004EE40                 STP             X29, X30, [SP,#0x90+var_s0]
.text:000000000004EE44                 ADD             X29, SP, #0x90
.text:000000000004EE48                 MRS             X24, #3, c13, c0, #2
.text:000000000004EE4C                 MOV             X21, X1
.text:000000000004EE50                 LDR             X8, [X24,#0x28]
.text:000000000004EE54                 MOV             X19, X1
.text:000000000004EE58                 MOV             X20, X0
.text:000000000004EE5C                 STR             X8, [SP,#0x90+var_58]
.text:000000000004EE60                 LDR             X1, [X21,#0x18]!
.text:000000000004EE64                 LDR             X8, [X21,#0x28]
.text:000000000004EE68                 STRH            WZR, [X21,#0x38]
.text:000000000004EE6C                 ADD             X2, X8, #4
.text:000000000004EE70                 BL              .EAS_HWFileSeek
.text:000000000004EE74                 CBNZ            X0, loc_4EEF4
.text:000000000004EE78                 LDR             X1, [X21]
.text:000000000004EE7C                 ADD             X2, SP, #0x90+var_70
.text:000000000004EE80                 MOV             X0, X20
.text:000000000004EE84                 MOV             W3, #1
.text:000000000004EE88                 BL              .EAS_HWGetDWord
.text:000000000004EE8C                 CBNZ            X0, loc_4EEF4
.text:000000000004EE90                 LDR             X8, [X19,#0x40]
.text:000000000004EE94                 MOV             X0, X20
.text:000000000004EE98                 LDR             X1, [X19,#0x18]
.text:000000000004EE9C                 ADD             X2, X8, #0xA
.text:000000000004EEA0                 BL              .EAS_HWFileSeek
.text:000000000004EEA4                 CBNZ            X0, loc_4EEF4
.text:000000000004EEA8                 LDR             X1, [X21]
.text:000000000004EEAC                 ADD             X2, SP, #0x90+var_64
.text:000000000004EEB0                 MOV             X0, X20
.text:000000000004EEB4                 MOV             W3, #1
.text:000000000004EEB8                 BL              .EAS_HWGetWord
.text:000000000004EEBC                 CBNZ            X0, loc_4EEF4
.text:000000000004EEC0                 LDRH            W8, [SP,#0x90+var_64]
.text:000000000004EEC4                 CMP             W8, #0x81
.text:000000000004EEC8                 B.CC            loc_4EED8
.text:000000000004EECC                 MOV             W8, #0x80
.text:000000000004EED0                 STRH            W8, [SP,#0x90+var_64]
.text:000000000004EED4                 B               loc_4EEDC
.text:000000000004EED8 ; ---------------------------------------------------------------------------
.text:000000000004EED8 loc_4EED8                               ; CODE XREF: SMF_ParseHeader+A0↑j
.text:000000000004EED8                 CBZ             W8, loc_4F16C
.text:000000000004EEDC loc_4EEDC                               ; CODE XREF: SMF_ParseHeader+AC↑j
.text:000000000004EEDC                 LDR             X1, [X21]
.text:000000000004EEE0                 ADD             X2, SP, #0x90+var_60
.text:000000000004EEE4                 MOV             X0, X20
.text:000000000004EEE8                 MOV             W3, #1
.text:000000000004EEEC                 BL              .EAS_HWGetWord
.text:000000000004EEF0                 CBZ             X0, loc_4EF30
.text:000000000004EEF4 loc_4EEF4                               ; CODE XREF: SMF_ParseHeader+4C↑j
.text:000000000004EEF4                                         ; SMF_ParseHeader+64↑j ...
.text:000000000004EEF4                 CMP             X0, #3
.text:000000000004EEF8                 MOV             X8, #0xFFFFFFFFFFFFFFEF
.text:000000000004EEFC                 CSEL            X0, X8, X0, EQ
.text:000000000004EF00 loc_4EF00                               ; CODE XREF: SMF_ParseHeader+340↓j
.text:000000000004EF00                                         ; SMF_ParseHeader+348↓j ...
.text:000000000004EF00                 LDR             X8, [X24,#0x28]
.text:000000000004EF04                 LDR             X9, [SP,#0x90+var_58]
.text:000000000004EF08                 CMP             X8, X9
.text:000000000004EF0C                 B.NE            loc_4F18C
.text:000000000004EF10                 LDP             X29, X30, [SP,#0x90+var_s0]
.text:000000000004EF14                 LDP             X20, X19, [SP,#0x90+var_10]
.text:000000000004EF18                 LDP             X22, X21, [SP,#0x90+var_20]
.text:000000000004EF1C                 LDP             X24, X23, [SP,#0x90+var_30]
.text:000000000004EF20                 LDP             X26, X25, [SP,#0x90+var_40]
.text:000000000004EF24                 LDP             X28, X27, [SP,#0x90+var_50]
.text:000000000004EF28                 ADD             SP, SP, #0xA0
.text:000000000004EF2C                 RET
.text:000000000004EF30 ; ---------------------------------------------------------------------------
.text:000000000004EF30 loc_4EF30                               ; CODE XREF: SMF_ParseHeader+C8↑j
.text:000000000004EF30                 LDRH            W9, [SP,#0x90+var_60]
.text:000000000004EF34                 MOV             W8, #0xC0
.text:000000000004EF38                 STRH            W8, [X19,#0x54]
.text:000000000004EF3C                 SXTH            W10, W9
.text:000000000004EF40                 CMP             W10, #1
.text:000000000004EF44                 B.LT            loc_4EF50
.text:000000000004EF48                 AND             W8, W9, #0x7FFF
.text:000000000004EF4C                 STRH            W8, [X19,#0x54]
.text:000000000004EF50 loc_4EF50                               ; CODE XREF: SMF_ParseHeader+11C↑j
.text:000000000004EF50                 MOV             W9, #0x1E848000
.text:000000000004EF58                 UDIV            W8, W9, W8
.text:000000000004EF5C                 MOV             W9, #0x10624DD3
.text:000000000004EF64                 ADD             W8, W8, #0x1F4
.text:000000000004EF68                 UMULL           X8, W8, W9
.text:000000000004EF6C                 LDR             X9, [X19]
.text:000000000004EF70                 LSR             X8, X8, #0x26 ; '&'
.text:000000000004EF74                 STRH            W8, [X19,#0x52]
.text:000000000004EF78                 CBNZ            X9, loc_4EFAC
.text:000000000004EF7C                 LDRH            W8, [SP,#0x90+var_64]
.text:000000000004EF80                 MOV             X0, X20
.text:000000000004EF84                 ADD             X8, X8, X8,LSL#2
.text:000000000004EF88                 LSL             X1, X8, #3
.text:000000000004EF8C                 BL              .EAS_HWMalloc
.text:000000000004EF90                 STR             X0, [X19]
.text:000000000004EF94                 CBZ             X0, loc_4F17C
.text:000000000004EF98                 LDRH            W8, [SP,#0x90+var_64]
.text:000000000004EF9C                 MOV             W1, WZR
.text:000000000004EFA0                 ADD             X8, X8, X8,LSL#2
.text:000000000004EFA4                 LSL             X2, X8, #3
.text:000000000004EFA8                 BL              .EAS_HWMemSet
.text:000000000004EFAC loc_4EFAC                               ; CODE XREF: SMF_ParseHeader+150↑j
.text:000000000004EFAC                 LDRH            W8, [SP,#0x90+var_64]
.text:000000000004EFB0                 LDR             X22, [X19,#0x40]
.text:000000000004EFB4                 STR             XZR, [X19,#8]
.text:000000000004EFB8                 STRH            W8, [X19,#0x50]
.text:000000000004EFBC                 CBZ             W8, loc_4F174
.text:000000000004EFC0                 MOV             W27, #0x726B
.text:000000000004EFC4                 MOV             X25, XZR
.text:000000000004EFC8                 MOV             W23, #0x7FFFFFFF
.text:000000000004EFCC                 MOVK            W27, #0x4D54,LSL#16
.text:000000000004EFD0 loc_4EFD0                               ; CODE XREF: SMF_ParseHeader+210↓j
.text:000000000004EFD0                                         ; SMF_ParseHeader+300↓j
.text:000000000004EFD0                 LDR             X8, [SP,#0x90+var_70]
.text:000000000004EFD4                 MOV             X9, X22
.text:000000000004EFD8                 ADD             X8, X22, X8
.text:000000000004EFDC                 ADD             X22, X8, #8
.text:000000000004EFE0                 CMP             X22, X9
.text:000000000004EFE4                 STR             X22, [SP,#0x90+var_78]
.text:000000000004EFE8                 B.LS            loc_4F184
.text:000000000004EFEC                 LDR             X1, [X21]
.text:000000000004EFF0                 MOV             X0, X20
.text:000000000004EFF4                 MOV             X2, X22
.text:000000000004EFF8                 BL              .EAS_HWFileSeek
.text:000000000004EFFC                 CBNZ            X0, loc_4EEF4
.text:000000000004F000                 LDR             X1, [X21]
.text:000000000004F004                 ADD             X2, SP, #0x90+var_78
.text:000000000004F008                 MOV             X0, X20
.text:000000000004F00C                 MOV             W3, #1
.text:000000000004F010                 BL              .EAS_HWGetDWord
.text:000000000004F014                 CBNZ            X0, loc_4EEF4
.text:000000000004F018                 LDR             X1, [X21]
.text:000000000004F01C                 ADD             X2, SP, #0x90+var_70
.text:000000000004F020                 MOV             X0, X20
.text:000000000004F024                 MOV             W3, #1
.text:000000000004F028                 BL              .EAS_HWGetDWord
.text:000000000004F02C                 CBNZ            X0, loc_4EEF4
.text:000000000004F030                 LDR             X8, [SP,#0x90+var_78]
.text:000000000004F034                 CMP             X8, X27
.text:000000000004F038                 B.NE            loc_4EFD0
.text:000000000004F03C                 LDR             X8, [X19]
.text:000000000004F040                 ADD             X9, X25, X25,LSL#2
.text:000000000004F044                 LSL             X28, X9, #3
.text:000000000004F048                 STR             X23, [SP,#0x90+var_80]
.text:000000000004F04C                 ADD             X8, X8, X28
.text:000000000004F050                 STR             XZR, [X8,#8]
.text:000000000004F054                 LDR             X8, [X19,#0x18]
.text:000000000004F058                 LDR             X9, [X19]
.text:000000000004F05C                 STR             X8, [X9,X28]
.text:000000000004F060                 ADD             X9, X22, #8
.text:000000000004F064                 LDR             X8, [X19]
.text:000000000004F068                 STR             XZR, [X19,#0x18]
.text:000000000004F06C                 ADD             X8, X8, X28
.text:000000000004F070                 STR             X9, [X8,#0x10]
.text:000000000004F074                 LDR             X8, [X19]
.text:000000000004F078                 ADD             X8, X8, X28
.text:000000000004F07C                 ADD             X0, X8, #0x18
.text:000000000004F080                 BL              .EAS_InitMIDIStream
.text:000000000004F084                 LDR             X8, [X19]
.text:000000000004F088                 MOV             X26, XZR
.text:000000000004F08C                 LDR             X23, [X8,X28]
.text:000000000004F090                 STR             X8, [SP,#0x90+var_88]
.text:000000000004F094 loc_4F094                               ; CODE XREF: SMF_ParseHeader+290↓j
.text:000000000004F094                 ADD             X2, SP, #0x90+var_5C
.text:000000000004F098                 MOV             X0, X20
.text:000000000004F09C                 MOV             X1, X23
.text:000000000004F0A0                 BL              .EAS_HWGetByte
.text:000000000004F0A4                 CBNZ            X0, loc_4EEF4
.text:000000000004F0A8                 LDRB            W9, [SP,#0x90+var_5C]
.text:000000000004F0AC                 MOV             X8, X9
.text:000000000004F0B0                 BFI             X8, X26, #7, #0x39 ; '9'
.text:000000000004F0B4                 MOV             X26, X8
.text:000000000004F0B8                 TBNZ            W9, #7, loc_4F094
.text:000000000004F0BC                 LDP             X9, X23, [SP,#0x90+var_88]
.text:000000000004F0C0                 MOV             W11, #0x28 ; '('
.text:000000000004F0C4                 ADD             X9, X9, X28
.text:000000000004F0C8                 LDR             X10, [X9,#8]
.text:000000000004F0CC                 ADD             X8, X10, X8
.text:000000000004F0D0                 STR             X8, [X9,#8]
.text:000000000004F0D4                 LDR             X8, [X19]
.text:000000000004F0D8                 ADD             X9, X8, X28
.text:000000000004F0DC                 LDR             X9, [X9,#8]
.text:000000000004F0E0                 CMP             X9, X23
.text:000000000004F0E4                 B.CS            loc_4F0F4
.text:000000000004F0E8                 MADD            X10, X25, X11, X8
.text:000000000004F0EC                 MOV             X23, X9
.text:000000000004F0F0                 STR             X10, [X19,#8]
.text:000000000004F0F4 loc_4F0F4                               ; CODE XREF: SMF_ParseHeader+2BC↑j
.text:000000000004F0F4                 LDRH            W9, [X19,#0x50]
.text:000000000004F0F8                 SUB             X10, X9, #1
.text:000000000004F0FC                 CMP             X25, X10
.text:000000000004F100                 B.GE            loc_4F120
.text:000000000004F104                 MUL             X9, X25, X11
.text:000000000004F108                 MOV             X0, X20
.text:000000000004F10C                 MOV             X2, X21
.text:000000000004F110                 LDR             X1, [X8,X9]
.text:000000000004F114                 BL              .EAS_HWDupHandle
.text:000000000004F118                 CBNZ            X0, loc_4EEF4
.text:000000000004F11C                 LDRH            W9, [X19,#0x50]
.text:000000000004F120 loc_4F120                               ; CODE XREF: SMF_ParseHeader+2D8↑j
.text:000000000004F120                 ADD             X25, X25, #1
.text:000000000004F124                 CMP             X25, X9
.text:000000000004F128                 B.CC            loc_4EFD0
.text:000000000004F12C                 LDR             X8, [X19,#8]
.text:000000000004F130                 CBZ             X8, loc_4F174
.text:000000000004F134                 LDRB            W9, [X19,#0x57]
.text:000000000004F138                 TBNZ            W9, #0, loc_4F174
.text:000000000004F13C                 LDR             X8, [X8,#8]
.text:000000000004F140                 MOV             X0, XZR
.text:000000000004F144                 LDRH            W9, [X19,#0x52]
.text:000000000004F148                 LDR             X11, [X19,#0x48]
.text:000000000004F14C                 LSR             X10, X8, #0xA
.text:000000000004F150                 AND             X8, X8, #0x3FF
.text:000000000004F154                 MUL             X10, X10, X9
.text:000000000004F158                 MUL             X8, X8, X9
.text:000000000004F15C                 ADD             X9, X11, X10,LSL#8
.text:000000000004F160                 ADD             X8, X9, X8,LSR#2
.text:000000000004F164                 STR             X8, [X19,#0x48]
.text:000000000004F168                 B               loc_4EF00
.text:000000000004F16C ; ---------------------------------------------------------------------------
.text:000000000004F16C loc_4F16C                               ; CODE XREF: SMF_ParseHeader:loc_4EED8↑j
.text:000000000004F16C                 MOV             X0, #0xFFFFFFFFFFFFFFF3
.text:000000000004F170                 B               loc_4EF00
.text:000000000004F174 ; ---------------------------------------------------------------------------
.text:000000000004F174 loc_4F174                               ; CODE XREF: SMF_ParseHeader+194↑j
.text:000000000004F174                                         ; SMF_ParseHeader+308↑j ...
.text:000000000004F174                 MOV             X0, XZR
.text:000000000004F178                 B               loc_4EF00
.text:000000000004F17C ; ---------------------------------------------------------------------------
.text:000000000004F17C loc_4F17C                               ; CODE XREF: SMF_ParseHeader+16C↑j
.text:000000000004F17C                 MOV             X0, #0xFFFFFFFFFFFFFFFD
.text:000000000004F180                 B               loc_4EF00
.text:000000000004F184 ; ---------------------------------------------------------------------------
.text:000000000004F184 loc_4F184                               ; CODE XREF: SMF_ParseHeader+1C0↑j
.text:000000000004F184                 MOV             X0, #0xFFFFFFFFFFFFFFEF
.text:000000000004F188                 B               loc_4EF00
.text:000000000004F18C ; ---------------------------------------------------------------------------
.text:000000000004F18C loc_4F18C                               ; CODE XREF: SMF_ParseHeader+E4↑j
.text:000000000004F18C                 BL              .__stack_chk_fail
.text:000000000004F18C ; } // starts at 4EE28
.text:000000000004F18C ; End of function SMF_ParseHeader
.text:000000000004F190 ; =============== S U B R O U T I N E =======================================
.text:000000000004F190                 EXPORT InitVoice
.text:000000000004F190 InitVoice                               ; DATA XREF: LOAD:0000000000001650↑o
.text:000000000004F190 ; __unwind {
.text:000000000004F190                 ADRP            X8, #qword_55D0@PAGE
.text:000000000004F194                 STRH            WZR, [X0]
.text:000000000004F198                 STRH            WZR, [X0,#4]
.text:000000000004F19C                 LDR             D0, [X8,#qword_55D0@PAGEOFF]
.text:000000000004F1A0                 STR             D0, [X0,#8]
.text:000000000004F1A4                 RET
.text:000000000004F1A4 ; } // starts at 4F190
.text:000000000004F1A4 ; End of function InitVoice
.text:000000000004F1A8 ; =============== S U B R O U T I N E =======================================
.text:000000000004F1A8 ; Attributes: bp-based frame
.text:000000000004F1A8                 EXPORT VMInitialize
.text:000000000004F1A8 VMInitialize                            ; CODE XREF: .VMInitialize+C↓j
.text:000000000004F1A8                                         ; DATA XREF: LOAD:0000000000000DF8↑o ...
.text:000000000004F1A8 var_10          = -0x10
.text:000000000004F1A8 var_s0          =  0
.text:000000000004F1A8 ; __unwind {
.text:000000000004F1A8                 STP             X20, X19, [SP,#-0x10+var_10]!
.text:000000000004F1AC                 STP             X29, X30, [SP,#0x10+var_s0]
.text:000000000004F1B0                 ADD             X29, SP, #0x10
.text:000000000004F1B4                 LDRB            W8, [X0,#0x18B]
.text:000000000004F1B8                 MOV             X19, X0
.text:000000000004F1BC                 CBZ             W8, loc_4F23C
.text:000000000004F1C0                 MOV             W0, #3
.text:000000000004F1C4                 BL              .EAS_CMEnumData
.text:000000000004F1C8                 MOV             X20, X0
.text:000000000004F1CC                 CBZ             X0, loc_4F250
.text:000000000004F1D0 loc_4F1D0                               ; CODE XREF: VMInitialize+A4↓j
.text:000000000004F1D0                 MOV             W2, #0x1548
.text:000000000004F1D4                 MOV             X0, X20
.text:000000000004F1D8                 MOV             W1, WZR
.text:000000000004F1DC                 BL              .EAS_HWMemSet
.text:000000000004F1E0                 ADRP            X8, #easSoundLib_ptr@PAGE
.text:000000000004F1E4                 ADRP            X9, #qword_55D0@PAGE
.text:000000000004F1E8                 MOV             W10, #0x40 ; '@'
.text:000000000004F1EC                 LDR             X8, [X8,#easSoundLib_ptr@PAGEOFF]
.text:000000000004F1F0                 LDR             D0, [X9,#qword_55D0@PAGEOFF]
.text:000000000004F1F4                 STRH            W10, [X20,#0x1542]
.text:000000000004F1F8                 STR             XZR, [X20,#0x1538]
.text:000000000004F1FC                 STR             X8, [X20,#0x1520]
.text:000000000004F200                 MOV             X8, #0xFFFFFFFFFFFFFC00
.text:000000000004F204 loc_4F204                               ; CODE XREF: VMInitialize+70↓j
.text:000000000004F204                 ADD             X9, X20, X8
.text:000000000004F208                 ADDS            X8, X8, #0x10
.text:000000000004F20C                 STRH            WZR, [X9,#0x1520]
.text:000000000004F210                 STRH            WZR, [X9,#0x1524]
.text:000000000004F214                 STR             D0, [X9,#0x1528]
.text:000000000004F218                 B.NE            loc_4F204
.text:000000000004F21C                 ADRP            X8, #wtSynth_ptr@PAGE
.text:000000000004F220                 MOV             X0, X20
.text:000000000004F224                 LDR             X8, [X8,#wtSynth_ptr@PAGEOFF]
.text:000000000004F228                 LDR             X8, [X8]
.text:000000000004F22C                 BLR             X8
.text:000000000004F230                 MOV             X0, XZR
.text:000000000004F234                 STR             X20, [X19,#0x170]
.text:000000000004F238                 B               loc_4F254
.text:000000000004F23C ; ---------------------------------------------------------------------------
.text:000000000004F23C loc_4F23C                               ; CODE XREF: VMInitialize+14↑j
.text:000000000004F23C                 LDR             X0, [X19]
.text:000000000004F240                 MOV             W1, #0x1548
.text:000000000004F244                 BL              .EAS_HWMalloc
.text:000000000004F248                 MOV             X20, X0
.text:000000000004F24C                 CBNZ            X0, loc_4F1D0
.text:000000000004F250 loc_4F250                               ; CODE XREF: VMInitialize+24↑j
.text:000000000004F250                 MOV             X0, #0xFFFFFFFFFFFFFFFD
.text:000000000004F254 loc_4F254                               ; CODE XREF: VMInitialize+90↑j
.text:000000000004F254                 LDP             X29, X30, [SP,#0x10+var_s0]
.text:000000000004F258                 LDP             X20, X19, [SP+0x10+var_10],#0x20
.text:000000000004F25C                 RET
.text:000000000004F25C ; } // starts at 4F1A8
.text:000000000004F25C ; End of function VMInitialize
.text:000000000004F260 ; =============== S U B R O U T I N E =======================================
.text:000000000004F260 ; Attributes: bp-based frame
.text:000000000004F260                 EXPORT VMInitMIDI
.text:000000000004F260 VMInitMIDI                              ; CODE XREF: .VMInitMIDI+C↓j
.text:000000000004F260                                         ; DATA XREF: LOAD:00000000000019C8↑o ...
.text:000000000004F260 var_50          = -0x50
.text:000000000004F260 var_40          = -0x40
.text:000000000004F260 var_30          = -0x30
.text:000000000004F260 var_20          = -0x20
.text:000000000004F260 var_10          = -0x10
.text:000000000004F260 var_s0          =  0
.text:000000000004F260 ; __unwind {
.text:000000000004F260                 STR             X27, [SP,#-0x10+var_50]!
.text:000000000004F264                 STP             X26, X25, [SP,#0x50+var_40]
.text:000000000004F268                 STP             X24, X23, [SP,#0x50+var_30]
.text:000000000004F26C                 STP             X22, X21, [SP,#0x50+var_20]
.text:000000000004F270                 STP             X20, X19, [SP,#0x50+var_10]
.text:000000000004F274                 STP             X29, X30, [SP,#0x50+var_s0]
.text:000000000004F278                 ADD             X29, SP, #0x50
.text:000000000004F27C                 STR             XZR, [X1]
.text:000000000004F280                 MOV             X20, X1
.text:000000000004F284                 LDR             X8, [X0,#0x170]
.text:000000000004F288                 MOV             X19, X0
.text:000000000004F28C                 LDRB            W10, [X0,#0x18B]
.text:000000000004F290                 LDR             X9, [X8]
.text:000000000004F294                 CBZ             W10, loc_4F2A4
.text:000000000004F298                 CBZ             X9, loc_4F2C8
.text:000000000004F29C loc_4F29C                               ; CODE XREF: VMInitMIDI+5C↓j
.text:000000000004F29C                 MOV             X0, #0xFFFFFFFFFFFFFFE0
.text:000000000004F2A0                 B               loc_4F4B8
.text:000000000004F2A4 ; ---------------------------------------------------------------------------
.text:000000000004F2A4 loc_4F2A4                               ; CODE XREF: VMInitMIDI+34↑j
.text:000000000004F2A4                 CBZ             X9, loc_4F2E4
.text:000000000004F2A8                 LDR             X9, [X8,#8]
.text:000000000004F2AC                 CBZ             X9, loc_4F2EC
.text:000000000004F2B0                 LDR             X9, [X8,#0x10]
.text:000000000004F2B4                 CBZ             X9, loc_4F2F4
.text:000000000004F2B8                 LDR             X8, [X8,#0x18]
.text:000000000004F2BC                 CBNZ            X8, loc_4F29C
.text:000000000004F2C0                 MOV             W23, #3
.text:000000000004F2C4                 B               loc_4F2F8
.text:000000000004F2C8 ; ---------------------------------------------------------------------------
.text:000000000004F2C8 loc_4F2C8                               ; CODE XREF: VMInitMIDI+38↑j
.text:000000000004F2C8                 MOV             W0, #4
.text:000000000004F2CC                 BL              .EAS_CMEnumData
.text:000000000004F2D0                 MOV             X21, X0
.text:000000000004F2D4                 MOV             W23, WZR
.text:000000000004F2D8                 CBNZ            X21, loc_4F30C
.text:000000000004F2DC loc_4F2DC                               ; CODE XREF: VMInitMIDI+A8↓j
.text:000000000004F2DC                 MOV             X0, #0xFFFFFFFFFFFFFFFD
.text:000000000004F2E0                 B               loc_4F4B8
.text:000000000004F2E4 ; ---------------------------------------------------------------------------
.text:000000000004F2E4 loc_4F2E4                               ; CODE XREF: VMInitMIDI:loc_4F2A4↑j
.text:000000000004F2E4                 MOV             W23, WZR
.text:000000000004F2E8                 B               loc_4F2F8
.text:000000000004F2EC ; ---------------------------------------------------------------------------
.text:000000000004F2EC loc_4F2EC                               ; CODE XREF: VMInitMIDI+4C↑j
.text:000000000004F2EC                 MOV             W23, #1
.text:000000000004F2F0                 B               loc_4F2F8
.text:000000000004F2F4 ; ---------------------------------------------------------------------------
.text:000000000004F2F4 loc_4F2F4                               ; CODE XREF: VMInitMIDI+54↑j
.text:000000000004F2F4                 MOV             W23, #2
.text:000000000004F2F8 loc_4F2F8                               ; CODE XREF: VMInitMIDI+64↑j
.text:000000000004F2F8                                         ; VMInitMIDI+88↑j ...
.text:000000000004F2F8                 LDR             X0, [X19]
.text:000000000004F2FC                 MOV             W1, #0x260
.text:000000000004F300                 BL              .EAS_HWMalloc
.text:000000000004F304                 MOV             X21, X0
.text:000000000004F308                 CBZ             X21, loc_4F2DC
.text:000000000004F30C loc_4F30C                               ; CODE XREF: VMInitMIDI+78↑j
.text:000000000004F30C                 MOV             W2, #0x260
.text:000000000004F310                 MOV             X0, X21
.text:000000000004F314                 MOV             W1, WZR
.text:000000000004F318                 BL              .EAS_HWMemSet
.text:000000000004F31C                 LDR             X8, [X19,#0x170]
.text:000000000004F320                 LDR             X8, [X8,#0x1520]
.text:000000000004F324                 CBZ             X8, loc_4F354
.text:000000000004F328                 LDR             X9, [X8]
.text:000000000004F32C                 MOV             W10, #0x1534145
.text:000000000004F334                 CMP             X9, X10
.text:000000000004F338                 B.NE            loc_4F454
.text:000000000004F33C                 LDR             X9, [X8,#8]
.text:000000000004F340                 MOV             W10, #0x23FFFF
.text:000000000004F344                 AND             X9, X9, X10
.text:000000000004F348                 MOV             W10, #0x5622
.text:000000000004F34C                 CMP             X9, X10
.text:000000000004F350                 B.NE            loc_4F454
.text:000000000004F354 loc_4F354                               ; CODE XREF: VMInitMIDI+C4↑j
.text:000000000004F354                 STR             X8, [X21,#8]
.text:000000000004F358                 LDR             X8, [X19,#0x170]
.text:000000000004F35C                 LDR             X0, [X8,#0x1528]
.text:000000000004F360                 CBZ             X0, loc_4F36C
.text:000000000004F364                 STR             X0, [X21,#0x10]
.text:000000000004F368                 BL              .DLSAddRef
.text:000000000004F36C loc_4F36C                               ; CODE XREF: VMInitMIDI+100↑j
.text:000000000004F36C                 MOV             W9, #4
.text:000000000004F370                 MOV             W10, #0x7FFF
.text:000000000004F374                 ADD             X11, X21, #0x259
.text:000000000004F378                 MOV             W12, #0x501
.text:000000000004F37C                 STRB            W9, [X21,#0x256]
.text:000000000004F380                 STRH            W10, [X21,#0x224]
.text:000000000004F384                 MOV             W10, #0x1542
.text:000000000004F388                 MOV             X8, XZR
.text:000000000004F38C                 STRH            W12, [X11]
.text:000000000004F390                 MOV             W11, #0x3FFF
.text:000000000004F394                 LDR             X9, [X19,#0x170]
.text:000000000004F398                 LDRB            W12, [X9,X10]
.text:000000000004F39C                 MOV             W9, #0x2000
.text:000000000004F3A0                 MOV             W10, #0x6400
.text:000000000004F3A4                 MOVK            W9, #0xC8,LSL#16
.text:000000000004F3A8                 MOVK            W10, #0x7F40,LSL#16
.text:000000000004F3AC                 STRB            W12, [X21,#0x246]
.text:000000000004F3B0 loc_4F3B0                               ; CODE XREF: VMInitMIDI+17C↓j
.text:000000000004F3B0                 ADD             X12, X21, X8
.text:000000000004F3B4                 ADD             X8, X8, #0x20 ; ' '
.text:000000000004F3B8                 CMP             W8, #0x200
.text:000000000004F3BC                 LDRB            W13, [X12,#0x34]
.text:000000000004F3C0                 STUR            W9, [X12,#0x26]
.text:000000000004F3C4                 STUR            W10, [X12,#0x2D]
.text:000000000004F3C8                 STRB            WZR, [X12,#0x33]
.text:000000000004F3CC                 ORR             W13, W13, #4
.text:000000000004F3D0                 STRH            W11, [X12,#0x2A]
.text:000000000004F3D4                 STURH           WZR, [X12,#0x31]
.text:000000000004F3D8                 STRB            W13, [X12,#0x34]
.text:000000000004F3DC                 B.NE            loc_4F3B0
.text:000000000004F3E0                 MOV             X24, XZR
.text:000000000004F3E4                 MOV             W22, WZR
.text:000000000004F3E8                 MOV             W25, #0x7800
.text:000000000004F3EC                 MOV             W26, #8
.text:000000000004F3F0                 MOV             W27, #0x7900
.text:000000000004F3F4 loc_4F3F4                               ; CODE XREF: VMInitMIDI+1D8↓j
.text:000000000004F3F4                 ADD             X8, X21, X24
.text:000000000004F3F8                 CMP             W24, #0x120
.text:000000000004F3FC                 STRH            WZR, [X8,#0x34]
.text:000000000004F400                 STRH            WZR, [X8,#0x20]
.text:000000000004F404                 STR             XZR, [X8,#0x18]
.text:000000000004F408                 B.NE            loc_4F418
.text:000000000004F40C                 STRH            W25, [X8,#0x24]
.text:000000000004F410                 STRB            W26, [X8,#0x34]
.text:000000000004F414                 B               loc_4F41C
.text:000000000004F418 ; ---------------------------------------------------------------------------
.text:000000000004F418 loc_4F418                               ; CODE XREF: VMInitMIDI+1A8↑j
.text:000000000004F418                 STRH            W27, [X8,#0x24]
.text:000000000004F41C loc_4F41C                               ; CODE XREF: VMInitMIDI+1B4↑j
.text:000000000004F41C                 MOV             X1, X21
.text:000000000004F420                 MOV             W2, W22
.text:000000000004F424                 MOV             W3, WZR
.text:000000000004F428                 BL              .VMProgramChange
.text:000000000004F42C                 ADD             W22, W22, #1
.text:000000000004F430                 ADD             X24, X24, #0x20 ; ' '
.text:000000000004F434                 CMP             W24, #0x200
.text:000000000004F438                 B.NE            loc_4F3F4
.text:000000000004F43C                 STRB            W23, [X21,#0x258]
.text:000000000004F440                 MOV             X0, XZR
.text:000000000004F444                 LDR             X8, [X19,#0x170]
.text:000000000004F448                 STR             X21, [X8,W23,UXTW#3]
.text:000000000004F44C                 STR             X21, [X20]
.text:000000000004F450                 B               loc_4F4B8
.text:000000000004F454 ; ---------------------------------------------------------------------------
.text:000000000004F454 loc_4F454                               ; CODE XREF: VMInitMIDI+D8↑j
.text:000000000004F454                                         ; VMInitMIDI+F0↑j
.text:000000000004F454                 LDRB            W8, [X21,#0x259]
.text:000000000004F458                 SUB             W8, W8, #1
.text:000000000004F45C                 TST             W8, #0xFF
.text:000000000004F460                 STRB            W8, [X21,#0x259]
.text:000000000004F464                 B.EQ            loc_4F470
.text:000000000004F468                 MOV             X0, #0xFFFFFFFFFFFFFFE2
.text:000000000004F46C                 B               loc_4F4B8
.text:000000000004F470 ; ---------------------------------------------------------------------------
.text:000000000004F470 loc_4F470                               ; CODE XREF: VMInitMIDI+204↑j
.text:000000000004F470                 LDR             X1, [X21,#0x10]
.text:000000000004F474                 LDRB            W20, [X21,#0x258]
.text:000000000004F478                 CBZ             X1, loc_4F488
.text:000000000004F47C                 LDR             X0, [X19]
.text:000000000004F480                 BL              .DLSCleanup
.text:000000000004F484                 STR             XZR, [X21,#0x10]
.text:000000000004F488 loc_4F488                               ; CODE XREF: VMInitMIDI+218↑j
.text:000000000004F488                 LDR             X0, [X19,#0x170]
.text:000000000004F48C                 MOV             X1, X21
.text:000000000004F490                 MOV             W2, #1
.text:000000000004F494                 BL              .VMReset
.text:000000000004F498                 LDRB            W8, [X19,#0x18B]
.text:000000000004F49C                 CBNZ            W8, loc_4F4AC
.text:000000000004F4A0                 LDR             X0, [X19]
.text:000000000004F4A4                 MOV             X1, X21
.text:000000000004F4A8                 BL              .EAS_HWFree
.text:000000000004F4AC loc_4F4AC                               ; CODE XREF: VMInitMIDI+23C↑j
.text:000000000004F4AC                 LDR             X8, [X19,#0x170]
.text:000000000004F4B0                 MOV             X0, #0xFFFFFFFFFFFFFFE2
.text:000000000004F4B4                 STR             XZR, [X8,X20,LSL#3]
.text:000000000004F4B8 loc_4F4B8                               ; CODE XREF: VMInitMIDI+40↑j
.text:000000000004F4B8                                         ; VMInitMIDI+80↑j ...
.text:000000000004F4B8                 LDP             X29, X30, [SP,#0x50+var_s0]
.text:000000000004F4BC                 LDP             X20, X19, [SP,#0x50+var_10]
.text:000000000004F4C0                 LDP             X22, X21, [SP,#0x50+var_20]
.text:000000000004F4C4                 LDP             X24, X23, [SP,#0x50+var_30]
.text:000000000004F4C8                 LDP             X26, X25, [SP,#0x50+var_40]
.text:000000000004F4CC                 LDR             X27, [SP+0x50+var_50],#0x60
.text:000000000004F4D0                 RET
.text:000000000004F4D0 ; } // starts at 4F260
.text:000000000004F4D0 ; End of function VMInitMIDI
.text:000000000004F4D0 ; ---------------------------------------------------------------------------
.text:000000000004F4D4                 ALIGN 8
.text:000000000004F4D8 ; =============== S U B R O U T I N E =======================================
.text:000000000004F4D8                 EXPORT VMSetEASLib
.text:000000000004F4D8 VMSetEASLib                             ; CODE XREF: .VMSetEASLib+C↓j
.text:000000000004F4D8                                         ; DATA XREF: LOAD:00000000000009F0↑o ...
.text:000000000004F4D8 ; __unwind {
.text:000000000004F4D8                 CBZ             X1, loc_4F508
.text:000000000004F4DC                 LDR             X8, [X1]
.text:000000000004F4E0                 MOV             W9, #0x1534145
.text:000000000004F4E8                 CMP             X8, X9
.text:000000000004F4EC                 B.NE            loc_4F514
.text:000000000004F4F0                 LDR             X8, [X1,#8]
.text:000000000004F4F4                 MOV             W9, #0x23FFFF
.text:000000000004F4F8                 AND             X8, X8, X9
.text:000000000004F4FC                 MOV             W9, #0x5622
.text:000000000004F500                 CMP             X8, X9
.text:000000000004F504                 B.NE            loc_4F520
.text:000000000004F508 loc_4F508                               ; CODE XREF: VMSetEASLib↑j
.text:000000000004F508                 STR             X1, [X0,#8]
.text:000000000004F50C                 MOV             X0, XZR
.text:000000000004F510                 RET
.text:000000000004F514 ; ---------------------------------------------------------------------------
.text:000000000004F514 loc_4F514                               ; CODE XREF: VMSetEASLib+14↑j
.text:000000000004F514                 MOV             X8, #0xFFFFFFFFFFFFFFE2
.text:000000000004F518                 MOV             X0, X8
.text:000000000004F51C                 RET
.text:000000000004F520 ; ---------------------------------------------------------------------------
.text:000000000004F520 loc_4F520                               ; CODE XREF: VMSetEASLib+2C↑j
.text:000000000004F520                 MOV             X8, #0xFFFFFFFFFFFFFFE2
.text:000000000004F524                 MOV             X0, X8
.text:000000000004F528                 RET
.text:000000000004F528 ; } // starts at 4F4D8
.text:000000000004F528 ; End of function VMSetEASLib
.text:000000000004F528 ; ---------------------------------------------------------------------------
.text:000000000004F52C                 ALIGN 0x10
.text:000000000004F530 ; =============== S U B R O U T I N E =======================================
.text:000000000004F530                 EXPORT VMMIDIShutdown
.text:000000000004F530 VMMIDIShutdown                          ; CODE XREF: .VMMIDIShutdown+C↓j
.text:000000000004F530                                         ; DATA XREF: LOAD:00000000000011D0↑o ...
.text:000000000004F530 var_30          = -0x30
.text:000000000004F530 var_20          = -0x20
.text:000000000004F530 var_10          = -0x10
.text:000000000004F530 ; __unwind {
.text:000000000004F530                 LDRB            W8, [X1,#0x259]
.text:000000000004F534                 SUB             W8, W8, #1
.text:000000000004F538                 TST             W8, #0xFF
.text:000000000004F53C                 STRB            W8, [X1,#0x259]
.text:000000000004F540                 B.EQ            loc_4F548
.text:000000000004F544                 RET
.text:000000000004F548 ; ---------------------------------------------------------------------------
.text:000000000004F548 loc_4F548                               ; CODE XREF: VMMIDIShutdown+10↑j
.text:000000000004F548                 STR             X21, [SP,#var_30]!
.text:000000000004F54C                 STP             X20, X19, [SP,#0x30+var_20]
.text:000000000004F550                 STP             X29, X30, [SP,#0x30+var_10]
.text:000000000004F554                 ADD             X29, SP, #0x30+var_10
.text:000000000004F558                 MOV             X20, X1
.text:000000000004F55C                 LDR             X1, [X1,#0x10]
.text:000000000004F560                 MOV             X19, X0
.text:000000000004F564                 LDRB            W21, [X20,#0x258]
.text:000000000004F568                 CBZ             X1, loc_4F578
.text:000000000004F56C                 LDR             X0, [X19]
.text:000000000004F570                 BL              .DLSCleanup
.text:000000000004F574                 STR             XZR, [X20,#0x10]
.text:000000000004F578 loc_4F578                               ; CODE XREF: VMMIDIShutdown+38↑j
.text:000000000004F578                 LDR             X0, [X19,#0x170]
.text:000000000004F57C                 MOV             X1, X20
.text:000000000004F580                 MOV             W2, #1
.text:000000000004F584                 BL              .VMReset
.text:000000000004F588                 LDRB            W8, [X19,#0x18B]
.text:000000000004F58C                 CBNZ            W8, loc_4F59C
.text:000000000004F590                 LDR             X0, [X19]
.text:000000000004F594                 MOV             X1, X20
.text:000000000004F598                 BL              .EAS_HWFree
.text:000000000004F59C loc_4F59C                               ; CODE XREF: VMMIDIShutdown+5C↑j
.text:000000000004F59C                 LDR             X8, [X19,#0x170]
.text:000000000004F5A0                 STR             XZR, [X8,X21,LSL#3]
.text:000000000004F5A4                 LDP             X29, X30, [SP,#0x30+var_10]
.text:000000000004F5A8                 LDP             X20, X19, [SP,#0x30+var_20]
.text:000000000004F5AC                 LDR             X21, [SP+0x30+var_30],#0x30
.text:000000000004F5B0                 RET
.text:000000000004F5B0 ; } // starts at 4F530
.text:000000000004F5B0 ; End of function VMMIDIShutdown
.text:000000000004F5B0 ; ---------------------------------------------------------------------------
.text:000000000004F5B4                 ALIGN 8
.text:000000000004F5B8 ; =============== S U B R O U T I N E =======================================
.text:000000000004F5B8 ; Attributes: bp-based frame
.text:000000000004F5B8                 EXPORT VMInitializeAllChannels
.text:000000000004F5B8 VMInitializeAllChannels                 ; CODE XREF: .VMInitializeAllChannels+C↓j
.text:000000000004F5B8                                         ; DATA XREF: LOAD:00000000000019F8↑o ...
.text:000000000004F5B8 var_30          = -0x30
.text:000000000004F5B8 var_20          = -0x20
.text:000000000004F5B8 var_10          = -0x10
.text:000000000004F5B8 var_s0          =  0
.text:000000000004F5B8 ; __unwind {
.text:000000000004F5B8                 STP             X24, X23, [SP,#-0x10+var_30]!
.text:000000000004F5BC                 STP             X22, X21, [SP,#0x30+var_20]
.text:000000000004F5C0                 STP             X20, X19, [SP,#0x30+var_10]
.text:000000000004F5C4                 STP             X29, X30, [SP,#0x30+var_s0]
.text:000000000004F5C8                 ADD             X29, SP, #0x30
.text:000000000004F5CC                 MOV             W9, #0x2000
.text:000000000004F5D0                 MOV             W10, #0x6400
.text:000000000004F5D4                 MOV             X19, X1
.text:000000000004F5D8                 MOV             X8, XZR
.text:000000000004F5DC                 MOVK            W9, #0xC8,LSL#16
.text:000000000004F5E0                 MOVK            W10, #0x7F40,LSL#16
.text:000000000004F5E4                 MOV             W11, #0x3FFF
.text:000000000004F5E8 loc_4F5E8                               ; CODE XREF: VMInitializeAllChannels+5C↓j
.text:000000000004F5E8                 ADD             X12, X19, X8
.text:000000000004F5EC                 ADD             X8, X8, #0x20 ; ' '
.text:000000000004F5F0                 CMP             W8, #0x200
.text:000000000004F5F4                 LDRB            W13, [X12,#0x34]
.text:000000000004F5F8                 STUR            W9, [X12,#0x26]
.text:000000000004F5FC                 STUR            W10, [X12,#0x2D]
.text:000000000004F600                 STRB            WZR, [X12,#0x33]
.text:000000000004F604                 ORR             W13, W13, #4
.text:000000000004F608                 STRH            W11, [X12,#0x2A]
.text:000000000004F60C                 STURH           WZR, [X12,#0x31]
.text:000000000004F610                 STRB            W13, [X12,#0x34]
.text:000000000004F614                 B.NE            loc_4F5E8
.text:000000000004F618                 MOV             X21, XZR
.text:000000000004F61C                 MOV             W20, WZR
.text:000000000004F620                 MOV             W22, #0x7800
.text:000000000004F624                 MOV             W23, #8
.text:000000000004F628                 MOV             W24, #0x7900
.text:000000000004F62C loc_4F62C                               ; CODE XREF: VMInitializeAllChannels+B8↓j
.text:000000000004F62C                 ADD             X8, X19, X21
.text:000000000004F630                 CMP             W21, #0x120
.text:000000000004F634                 STRH            WZR, [X8,#0x34]
.text:000000000004F638                 STRH            WZR, [X8,#0x20]
.text:000000000004F63C                 STR             XZR, [X8,#0x18]
.text:000000000004F640                 B.NE            loc_4F650
.text:000000000004F644                 STRH            W22, [X8,#0x24]
.text:000000000004F648                 STRB            W23, [X8,#0x34]
.text:000000000004F64C                 B               loc_4F654
.text:000000000004F650 ; ---------------------------------------------------------------------------
.text:000000000004F650 loc_4F650                               ; CODE XREF: VMInitializeAllChannels+88↑j
.text:000000000004F650                 STRH            W24, [X8,#0x24]
.text:000000000004F654 loc_4F654                               ; CODE XREF: VMInitializeAllChannels+94↑j
.text:000000000004F654                 MOV             X1, X19
.text:000000000004F658                 MOV             W2, W20
.text:000000000004F65C                 MOV             W3, WZR
.text:000000000004F660                 BL              .VMProgramChange
.text:000000000004F664                 ADD             W20, W20, #1
.text:000000000004F668                 ADD             X21, X21, #0x20 ; ' '
.text:000000000004F66C                 CMP             W21, #0x200
.text:000000000004F670                 B.NE            loc_4F62C
.text:000000000004F674                 LDP             X29, X30, [SP,#0x30+var_s0]
.text:000000000004F678                 LDP             X20, X19, [SP,#0x30+var_10]
.text:000000000004F67C                 LDP             X22, X21, [SP,#0x30+var_20]
.text:000000000004F680                 LDP             X24, X23, [SP+0x30+var_30],#0x40
.text:000000000004F684                 RET
.text:000000000004F684 ; } // starts at 4F5B8
.text:000000000004F684 ; End of function VMInitializeAllChannels
.text:000000000004F688 ; =============== S U B R O U T I N E =======================================
.text:000000000004F688                 EXPORT VMIncRefCount
.text:000000000004F688 VMIncRefCount                           ; CODE XREF: .VMIncRefCount+C↓j
.text:000000000004F688                                         ; DATA XREF: LOAD:0000000000001458↑o ...
.text:000000000004F688 ; __unwind {
.text:000000000004F688                 LDRB            W8, [X0,#0x259]
.text:000000000004F68C                 ADD             W8, W8, #1
.text:000000000004F690                 STRB            W8, [X0,#0x259]
.text:000000000004F694                 RET
.text:000000000004F694 ; } // starts at 4F688
.text:000000000004F694 ; End of function VMIncRefCount
.text:000000000004F698 ; =============== S U B R O U T I N E =======================================
.text:000000000004F698 ; Attributes: bp-based frame
.text:000000000004F698                 EXPORT VMReset
.text:000000000004F698 VMReset                                 ; CODE XREF: .VMReset+C↓j
.text:000000000004F698                                         ; DATA XREF: LOAD:0000000000001368↑o ...
.text:000000000004F698 var_40          = -0x40
.text:000000000004F698 var_30          = -0x30
.text:000000000004F698 var_20          = -0x20
.text:000000000004F698 var_10          = -0x10
.text:000000000004F698 var_s0          =  0
.text:000000000004F698 ; __unwind {
.text:000000000004F698                 STR             X25, [SP,#-0x10+var_40]!
.text:000000000004F69C                 STP             X24, X23, [SP,#0x40+var_30]
.text:000000000004F6A0                 STP             X22, X21, [SP,#0x40+var_20]
.text:000000000004F6A4                 STP             X20, X19, [SP,#0x40+var_10]
.text:000000000004F6A8                 STP             X29, X30, [SP,#0x40+var_s0]
.text:000000000004F6AC                 ADD             X29, SP, #0x40
.text:000000000004F6B0                 MOV             X19, X1
.text:000000000004F6B4                 MOV             X20, X0
.text:000000000004F6B8                 CBZ             W2, loc_4F6F4
.text:000000000004F6BC                 LDRH            W8, [X19,#0x222]
.text:000000000004F6C0                 MOV             X0, X20
.text:000000000004F6C4                 LDRH            W9, [X20,#0x1540]
.text:000000000004F6C8                 SUB             W8, W9, W8
.text:000000000004F6CC                 STRH            W8, [X20,#0x1540]
.text:000000000004F6D0                 LDRB            W1, [X19,#0x258]
.text:000000000004F6D4                 STRH            WZR, [X19,#0x222]
.text:000000000004F6D8                 BL              .VMInitializeAllVoices
.text:000000000004F6DC                 LDRH            W8, [X19,#0x222]
.text:000000000004F6E0                 CBZ             W8, loc_4F708
.text:000000000004F6E4 loc_4F6E4                               ; CODE XREF: VMReset+6C↓j
.text:000000000004F6E4                 LDRB            W8, [X19,#0x256]
.text:000000000004F6E8                 ORR             W8, W8, #1
.text:000000000004F6EC                 STRB            W8, [X19,#0x256]
.text:000000000004F6F0                 B               loc_4F7D8
.text:000000000004F6F4 ; ---------------------------------------------------------------------------
.text:000000000004F6F4 loc_4F6F4                               ; CODE XREF: VMReset+20↑j
.text:000000000004F6F4                 MOV             X0, X20
.text:000000000004F6F8                 MOV             X1, X19
.text:000000000004F6FC                 BL              .VMMuteAllVoices
.text:000000000004F700                 LDRH            W8, [X19,#0x222]
.text:000000000004F704                 CBNZ            W8, loc_4F6E4
.text:000000000004F708 loc_4F708                               ; CODE XREF: VMReset+48↑j
.text:000000000004F708                 MOV             W9, #0x2000
.text:000000000004F70C                 MOV             W10, #0x6400
.text:000000000004F710                 MOV             X8, XZR
.text:000000000004F714                 MOVK            W9, #0xC8,LSL#16
.text:000000000004F718                 MOVK            W10, #0x7F40,LSL#16
.text:000000000004F71C                 MOV             W11, #0x3FFF
.text:000000000004F720 loc_4F720                               ; CODE XREF: VMReset+B4↓j
.text:000000000004F720                 ADD             X12, X19, X8
.text:000000000004F724                 ADD             X8, X8, #0x20 ; ' '
.text:000000000004F728                 CMP             W8, #0x200
.text:000000000004F72C                 LDRB            W13, [X12,#0x34]
.text:000000000004F730                 STUR            W9, [X12,#0x26]
.text:000000000004F734                 STUR            W10, [X12,#0x2D]
.text:000000000004F738                 STRB            WZR, [X12,#0x33]
.text:000000000004F73C                 ORR             W13, W13, #4
.text:000000000004F740                 STRH            W11, [X12,#0x2A]
.text:000000000004F744                 STURH           WZR, [X12,#0x31]
.text:000000000004F748                 STRB            W13, [X12,#0x34]
.text:000000000004F74C                 B.NE            loc_4F720
.text:000000000004F750                 MOV             X22, XZR
.text:000000000004F754                 MOV             W21, WZR
.text:000000000004F758                 MOV             W23, #0x7800
.text:000000000004F75C                 MOV             W24, #8
.text:000000000004F760                 MOV             W25, #0x7900
.text:000000000004F764 loc_4F764                               ; CODE XREF: VMReset+110↓j
.text:000000000004F764                 ADD             X8, X19, X22
.text:000000000004F768                 CMP             W22, #0x120
.text:000000000004F76C                 STRH            WZR, [X8,#0x34]
.text:000000000004F770                 STRH            WZR, [X8,#0x20]
.text:000000000004F774                 STR             XZR, [X8,#0x18]
.text:000000000004F778                 B.NE            loc_4F788
.text:000000000004F77C                 STRH            W23, [X8,#0x24]
.text:000000000004F780                 STRB            W24, [X8,#0x34]
.text:000000000004F784                 B               loc_4F78C
.text:000000000004F788 ; ---------------------------------------------------------------------------
.text:000000000004F788 loc_4F788                               ; CODE XREF: VMReset+E0↑j
.text:000000000004F788                 STRH            W25, [X8,#0x24]
.text:000000000004F78C loc_4F78C                               ; CODE XREF: VMReset+EC↑j
.text:000000000004F78C                 MOV             X1, X19
.text:000000000004F790                 MOV             W2, W21
.text:000000000004F794                 MOV             W3, WZR
.text:000000000004F798                 BL              .VMProgramChange
.text:000000000004F79C                 ADD             W21, W21, #1
.text:000000000004F7A0                 ADD             X22, X22, #0x20 ; ' '
.text:000000000004F7A4                 CMP             W22, #0x200
.text:000000000004F7A8                 B.NE            loc_4F764
.text:000000000004F7AC                 MOVI            V0.2D, #0
.text:000000000004F7B0                 ADD             X8, X19, #0x236
.text:000000000004F7B4                 LDRH            W9, [X19,#0x220]
.text:000000000004F7B8                 STR             Q0, [X8]
.text:000000000004F7BC                 LDRH            W8, [X20,#0x1542]
.text:000000000004F7C0                 LDRB            W10, [X19,#0x256]
.text:000000000004F7C4                 CMP             W9, W8
.text:000000000004F7C8                 CSEL            W8, W8, W9, CC
.text:000000000004F7CC                 AND             W9, W10, #0xFE
.text:000000000004F7D0                 STRB            W8, [X19,#0x246]
.text:000000000004F7D4                 STRB            W9, [X19,#0x256]
.text:000000000004F7D8 loc_4F7D8                               ; CODE XREF: VMReset+58↑j
.text:000000000004F7D8                 LDP             X29, X30, [SP,#0x40+var_s0]
.text:000000000004F7DC                 LDP             X20, X19, [SP,#0x40+var_10]
.text:000000000004F7E0                 LDP             X22, X21, [SP,#0x40+var_20]
.text:000000000004F7E4                 LDP             X24, X23, [SP,#0x40+var_30]
.text:000000000004F7E8                 LDR             X25, [SP+0x40+var_40],#0x50
.text:000000000004F7EC                 RET
.text:000000000004F7EC ; } // starts at 4F698
.text:000000000004F7EC ; End of function VMReset
.text:000000000004F7F0 ; =============== S U B R O U T I N E =======================================
.text:000000000004F7F0                 EXPORT VMInitializeAllVoices
.text:000000000004F7F0 VMInitializeAllVoices                   ; CODE XREF: .VMInitializeAllVoices+C↓j
.text:000000000004F7F0                                         ; DATA XREF: LOAD:0000000000000B70↑o ...
.text:000000000004F7F0 ; __unwind {
.text:000000000004F7F0                 ADRP            X9, #qword_55D0@PAGE
.text:000000000004F7F4                 MOV             W8, #0x1120
.text:000000000004F7F8                 ADD             X8, X0, X8
.text:000000000004F7FC                 LDR             D0, [X9,#qword_55D0@PAGEOFF]
.text:000000000004F800                 MOV             W9, #0x40 ; '@'
.text:000000000004F804 loc_4F804                               ; CODE XREF: VMInitializeAllVoices+50↓j
.text:000000000004F804                 LDRB            W10, [X8,#8]
.text:000000000004F808                 CMP             W10, #5
.text:000000000004F80C                 B.NE            loc_4F820
.text:000000000004F810                 LDRB            W10, [X8,#0xD]
.text:000000000004F814                 CMP             W1, W10,LSR#4
.text:000000000004F818                 B.EQ            loc_4F82C
.text:000000000004F81C                 B               loc_4F838
.text:000000000004F820 ; ---------------------------------------------------------------------------
.text:000000000004F820 loc_4F820                               ; CODE XREF: VMInitializeAllVoices+1C↑j
.text:000000000004F820                 LDRB            W10, [X8,#0xA]
.text:000000000004F824                 CMP             W1, W10,LSR#4
.text:000000000004F828                 B.NE            loc_4F838
.text:000000000004F82C loc_4F82C                               ; CODE XREF: VMInitializeAllVoices+28↑j
.text:000000000004F82C                 STRH            WZR, [X8]
.text:000000000004F830                 STRH            WZR, [X8,#4]
.text:000000000004F834                 STR             D0, [X8,#8]
.text:000000000004F838 loc_4F838                               ; CODE XREF: VMInitializeAllVoices+2C↑j
.text:000000000004F838                                         ; VMInitializeAllVoices+38↑j
.text:000000000004F838                 ADD             X8, X8, #0x10
.text:000000000004F83C                 SUBS            X9, X9, #1
.text:000000000004F840                 B.NE            loc_4F804
.text:000000000004F844                 RET
.text:000000000004F844 ; } // starts at 4F7F0
.text:000000000004F844 ; End of function VMInitializeAllVoices
.text:000000000004F848 ; =============== S U B R O U T I N E =======================================
.text:000000000004F848 ; Attributes: bp-based frame
.text:000000000004F848                 EXPORT VMMuteAllVoices
.text:000000000004F848 VMMuteAllVoices                         ; CODE XREF: .VMMuteAllVoices+C↓j
.text:000000000004F848                                         ; DATA XREF: LOAD:0000000000000A08↑o ...
.text:000000000004F848 var_40          = -0x40
.text:000000000004F848 var_30          = -0x30
.text:000000000004F848 var_20          = -0x20
.text:000000000004F848 var_10          = -0x10
.text:000000000004F848 var_s0          =  0
.text:000000000004F848 ; __unwind {
.text:000000000004F848                 STR             X25, [SP,#-0x10+var_40]!
.text:000000000004F84C                 STP             X24, X23, [SP,#0x40+var_30]
.text:000000000004F850                 STP             X22, X21, [SP,#0x40+var_20]
.text:000000000004F854                 STP             X20, X19, [SP,#0x40+var_10]
.text:000000000004F858                 STP             X29, X30, [SP,#0x40+var_s0]
.text:000000000004F85C                 ADD             X29, SP, #0x40
.text:000000000004F860                 ADRP            X8, #wtSynth_ptr@PAGE
.text:000000000004F864                 MOV             W9, #0x1128
.text:000000000004F868                 MOV             X19, X1
.text:000000000004F86C                 LDR             X8, [X8,#wtSynth_ptr@PAGEOFF]
.text:000000000004F870                 MOV             X20, X0
.text:000000000004F874                 MOV             X22, XZR
.text:000000000004F878                 MOV             X21, XZR
.text:000000000004F87C                 ADD             X24, X0, X9
.text:000000000004F880                 LDR             X23, [X8,#(off_58310 - 0x582F0)] ; sub_53460
.text:000000000004F884                 MOV             W25, #4
.text:000000000004F888 loc_4F888                               ; CODE XREF: VMMuteAllVoices+D4↓j
.text:000000000004F888                 LDRB            W10, [X24,X22]
.text:000000000004F88C                 ADD             X8, X24, X22
.text:000000000004F890                 CMP             W10, #5
.text:000000000004F894                 B.NE            loc_4F8F8
.text:000000000004F898                 LDRB            W9, [X8,#5]
.text:000000000004F89C                 LDRB            W10, [X19,#0x258]
.text:000000000004F8A0                 CMP             W10, W9,LSR#4
.text:000000000004F8A4                 B.NE            loc_4F910
.text:000000000004F8A8 loc_4F8A8                               ; CODE XREF: VMMuteAllVoices+C4↓j
.text:000000000004F8A8                 LSR             X10, X9, #1
.text:000000000004F8AC                 AND             X10, X10, #0x78
.text:000000000004F8B0                 AND             X9, X9, #0xF
.text:000000000004F8B4                 SUB             X2, X8, #8
.text:000000000004F8B8                 LDR             X10, [X20,X10]
.text:000000000004F8BC                 MOV             X0, X20
.text:000000000004F8C0                 MOV             X3, X21
.text:000000000004F8C4                 ADD             X9, X10, X9,LSL#5
.text:000000000004F8C8                 LDRB            W9, [X9,#0x35]
.text:000000000004F8CC                 ADD             X9, X10, X9
.text:000000000004F8D0                 LDRB            W10, [X9,#0x236]
.text:000000000004F8D4                 SUB             W10, W10, #1
.text:000000000004F8D8                 STRB            W10, [X9,#0x236]
.text:000000000004F8DC                 LDRB            W9, [X8,#2]
.text:000000000004F8E0                 LSR             X9, X9, #1
.text:000000000004F8E4                 AND             X9, X9, #0x78
.text:000000000004F8E8                 LDR             X1, [X20,X9]
.text:000000000004F8EC                 BLR             X23
.text:000000000004F8F0                 STRB            W25, [X24,X22]
.text:000000000004F8F4                 B               loc_4F910
.text:000000000004F8F8 ; ---------------------------------------------------------------------------
.text:000000000004F8F8 loc_4F8F8                               ; CODE XREF: VMMuteAllVoices+4C↑j
.text:000000000004F8F8                 LDRB            W11, [X19,#0x258]
.text:000000000004F8FC                 ORR             W10, W10, #4
.text:000000000004F900                 LDRB            W9, [X8,#2]
.text:000000000004F904                 CMP             W11, W9,LSR#4
.text:000000000004F908                 CCMP            W10, #4, #4, EQ
.text:000000000004F90C                 B.NE            loc_4F8A8
.text:000000000004F910 loc_4F910                               ; CODE XREF: VMMuteAllVoices+5C↑j
.text:000000000004F910                                         ; VMMuteAllVoices+AC↑j
.text:000000000004F910                 ADD             X21, X21, #1
.text:000000000004F914                 ADD             X22, X22, #0x10
.text:000000000004F918                 CMP             X21, #0x40 ; '@'
.text:000000000004F91C                 B.NE            loc_4F888
.text:000000000004F920                 LDP             X29, X30, [SP,#0x40+var_s0]
.text:000000000004F924                 LDP             X20, X19, [SP,#0x40+var_10]
.text:000000000004F928                 LDP             X22, X21, [SP,#0x40+var_20]
.text:000000000004F92C                 LDP             X24, X23, [SP,#0x40+var_30]
.text:000000000004F930                 LDR             X25, [SP+0x40+var_40],#0x50
.text:000000000004F934                 RET
.text:000000000004F934 ; } // starts at 4F848
.text:000000000004F934 ; End of function VMMuteAllVoices
.text:000000000004F938 ; =============== S U B R O U T I N E =======================================
.text:000000000004F938                 EXPORT VMResetControllers
.text:000000000004F938 VMResetControllers                      ; DATA XREF: LOAD:0000000000000708↑o
.text:000000000004F938 ; __unwind {
.text:000000000004F938                 MOV             W9, #0x2000
.text:000000000004F93C                 MOV             W10, #0x6400
.text:000000000004F940                 MOV             X8, XZR
.text:000000000004F944                 MOVK            W9, #0xC8,LSL#16
.text:000000000004F948                 MOVK            W10, #0x7F40,LSL#16
.text:000000000004F94C                 MOV             W11, #0x3FFF
.text:000000000004F950 loc_4F950                               ; CODE XREF: VMResetControllers+44↓j
.text:000000000004F950                 ADD             X12, X0, X8
.text:000000000004F954                 ADD             X8, X8, #0x20 ; ' '
.text:000000000004F958                 CMP             W8, #0x200
.text:000000000004F95C                 LDRB            W13, [X12,#0x34]
.text:000000000004F960                 STUR            W9, [X12,#0x26]
.text:000000000004F964                 STUR            W10, [X12,#0x2D]
.text:000000000004F968                 STRB            WZR, [X12,#0x33]
.text:000000000004F96C                 ORR             W13, W13, #4
.text:000000000004F970                 STRH            W11, [X12,#0x2A]
.text:000000000004F974                 STURH           WZR, [X12,#0x31]
.text:000000000004F978                 STRB            W13, [X12,#0x34]
.text:000000000004F97C                 B.NE            loc_4F950
.text:000000000004F980                 RET
.text:000000000004F980 ; } // starts at 4F938
.text:000000000004F980 ; End of function VMResetControllers
.text:000000000004F980 ; ---------------------------------------------------------------------------
.text:000000000004F984                 ALIGN 8
.text:000000000004F988 ; =============== S U B R O U T I N E =======================================
.text:000000000004F988                 EXPORT VMProgramChange
.text:000000000004F988 VMProgramChange                         ; CODE XREF: .VMProgramChange+C↓j
.text:000000000004F988                                         ; DATA XREF: LOAD:stru_450↑o ...
.text:000000000004F988 ; __unwind {
.text:000000000004F988                 AND             X8, X2, #0xFF
.text:000000000004F98C                 MOV             W10, #0x7900
.text:000000000004F990                 ADD             X8, X1, X8,LSL#5
.text:000000000004F994                 LDRH            W12, [X8,#0x24]
.text:000000000004F998                 AND             W9, W12, #0xFF00
.text:000000000004F99C                 CMP             W9, W10
.text:000000000004F9A0                 B.EQ            loc_4F9BC
.text:000000000004F9A4                 MOV             W10, #0x7800
.text:000000000004F9A8                 CMP             W9, W10
.text:000000000004F9AC                 B.NE            loc_4F9C8
.text:000000000004F9B0                 LDRB            W9, [X8,#0x34]
.text:000000000004F9B4                 ORR             W9, W9, #8
.text:000000000004F9B8                 B               loc_4F9C4
.text:000000000004F9BC ; ---------------------------------------------------------------------------
.text:000000000004F9BC loc_4F9BC                               ; CODE XREF: VMProgramChange+18↑j
.text:000000000004F9BC                 LDRB            W9, [X8,#0x34]
.text:000000000004F9C0                 AND             W9, W9, #0xFFFFFFF7
.text:000000000004F9C4 loc_4F9C4                               ; CODE XREF: VMProgramChange+30↑j
.text:000000000004F9C4                 STRB            W9, [X8,#0x34]
.text:000000000004F9C8 loc_4F9C8                               ; CODE XREF: VMProgramChange+24↑j
.text:000000000004F9C8                 LDR             X11, [X1,#0x10]
.text:000000000004F9CC                 CBZ             X11, loc_4FA08
.text:000000000004F9D0                 LDRH            W9, [X11,#0x30]
.text:000000000004F9D4                 CBZ             W9, loc_4FA08
.text:000000000004F9D8                 LDR             X13, [X11]
.text:000000000004F9DC                 MOV             W10, WZR
.text:000000000004F9E0                 AND             X11, X3, #0xFF
.text:000000000004F9E4                 BFI             X11, X12, #8, #0x10
.text:000000000004F9E8                 ADD             X13, X13, #8
.text:000000000004F9EC loc_4F9EC                               ; CODE XREF: VMProgramChange+7C↓j
.text:000000000004F9EC                 LDUR            X14, [X13,#-8]
.text:000000000004F9F0                 CMP             X14, X11
.text:000000000004F9F4                 B.EQ            loc_4FA40
.text:000000000004F9F8                 ADD             W10, W10, #1
.text:000000000004F9FC                 ADD             X13, X13, #0x10
.text:000000000004FA00                 CMP             W9, W10,UXTH
.text:000000000004FA04                 B.HI            loc_4F9EC
.text:000000000004FA08 loc_4FA08                               ; CODE XREF: VMProgramChange+44↑j
.text:000000000004FA08                                         ; VMProgramChange+4C↑j
.text:000000000004FA08                 LDR             X9, [X1,#8]
.text:000000000004FA0C                 CBZ             X9, loc_4FBA4
.text:000000000004FA10                 LDRH            W10, [X9,#0x50]
.text:000000000004FA14                 CBZ             X10, loc_4FA5C
.text:000000000004FA18                 LDR             X11, [X9,#0x10]
.text:000000000004FA1C                 MOV             X13, XZR
.text:000000000004FA20 loc_4FA20                               ; CODE XREF: VMProgramChange+B0↓j
.text:000000000004FA20                 LDRH            W14, [X11]
.text:000000000004FA24                 CMP             W14, W12
.text:000000000004FA28                 B.EQ            loc_4FA48
.text:000000000004FA2C                 ADD             X13, X13, #1
.text:000000000004FA30                 ADD             X11, X11, #0x102
.text:000000000004FA34                 CMP             X13, X10
.text:000000000004FA38                 B.CC            loc_4FA20
.text:000000000004FA3C                 B               loc_4FA5C
.text:000000000004FA40 ; ---------------------------------------------------------------------------
.text:000000000004FA40 loc_4FA40                               ; CODE XREF: VMProgramChange+6C↑j
.text:000000000004FA40                 LDRH            W14, [X13]
.text:000000000004FA44                 B               loc_4FBA8
.text:000000000004FA48 ; ---------------------------------------------------------------------------
.text:000000000004FA48 loc_4FA48                               ; CODE XREF: VMProgramChange+A0↑j
.text:000000000004FA48                 ADD             X11, X11, W3,UXTB#1
.text:000000000004FA4C                 LDRH            W14, [X11,#2]
.text:000000000004FA50                 MOV             W11, #0xFFFF
.text:000000000004FA54                 CMP             W14, W11
.text:000000000004FA58                 B.NE            loc_4FBA8
.text:000000000004FA5C loc_4FA5C                               ; CODE XREF: VMProgramChange+8C↑j
.text:000000000004FA5C                                         ; VMProgramChange+B4↑j
.text:000000000004FA5C                 LDRH            W11, [X9,#0x52]
.text:000000000004FA60                 AND             X13, X3, #0xFF
.text:000000000004FA64                 CBZ             W11, loc_4FA98
.text:000000000004FA68                 LDR             X16, [X9,#0x18]
.text:000000000004FA6C                 MOV             W14, WZR
.text:000000000004FA70                 MOV             X15, X13
.text:000000000004FA74                 BFI             X15, X12, #8, #0x10
.text:000000000004FA78                 ADD             X16, X16, #8
.text:000000000004FA7C loc_4FA7C                               ; CODE XREF: VMProgramChange+10C↓j
.text:000000000004FA7C                 LDUR            X12, [X16,#-8]
.text:000000000004FA80                 CMP             X12, X15
.text:000000000004FA84                 B.EQ            loc_4FAD8
.text:000000000004FA88                 ADD             W14, W14, #1
.text:000000000004FA8C                 ADD             X16, X16, #0x10
.text:000000000004FA90                 CMP             W11, W14,UXTH
.text:000000000004FA94                 B.HI            loc_4FA7C
.text:000000000004FA98 loc_4FA98                               ; CODE XREF: VMProgramChange+DC↑j
.text:000000000004FA98                 LDRB            W12, [X8,#0x34]
.text:000000000004FA9C                 MOV             W14, #0x7800
.text:000000000004FAA0                 TST             W12, #8
.text:000000000004FAA4                 MOV             W12, #0x7900
.text:000000000004FAA8                 CSEL            X12, X12, X14, EQ
.text:000000000004FAAC                 CBZ             W10, loc_4FAF4
.text:000000000004FAB0                 LDR             X14, [X9,#0x10]
.text:000000000004FAB4                 MOV             X15, XZR
.text:000000000004FAB8 loc_4FAB8                               ; CODE XREF: VMProgramChange+148↓j
.text:000000000004FAB8                 LDRH            W16, [X14]
.text:000000000004FABC                 CMP             X12, X16
.text:000000000004FAC0                 B.EQ            loc_4FAE0
.text:000000000004FAC4                 ADD             X15, X15, #1
.text:000000000004FAC8                 ADD             X14, X14, #0x102
.text:000000000004FACC                 CMP             X15, X10
.text:000000000004FAD0                 B.CC            loc_4FAB8
.text:000000000004FAD4                 B               loc_4FAF4
.text:000000000004FAD8 ; ---------------------------------------------------------------------------
.text:000000000004FAD8 loc_4FAD8                               ; CODE XREF: VMProgramChange+FC↑j
.text:000000000004FAD8                 LDRH            W14, [X16]
.text:000000000004FADC                 B               loc_4FBA8
.text:000000000004FAE0 ; ---------------------------------------------------------------------------
.text:000000000004FAE0 loc_4FAE0                               ; CODE XREF: VMProgramChange+138↑j
.text:000000000004FAE0                 ADD             X14, X14, X13,LSL#1
.text:000000000004FAE4                 MOV             W15, #0xFFFF
.text:000000000004FAE8                 LDRH            W14, [X14,#2]
.text:000000000004FAEC                 CMP             W14, W15
.text:000000000004FAF0                 B.NE            loc_4FBA8
.text:000000000004FAF4 loc_4FAF4                               ; CODE XREF: VMProgramChange+124↑j
.text:000000000004FAF4                                         ; VMProgramChange+14C↑j
.text:000000000004FAF4                 CBZ             W11, loc_4FB24
.text:000000000004FAF8                 LDR             X15, [X9,#0x18]
.text:000000000004FAFC                 MOV             W14, WZR
.text:000000000004FB00                 BFI             X13, X12, #8, #0xF
.text:000000000004FB04                 ADD             X15, X15, #8
.text:000000000004FB08 loc_4FB08                               ; CODE XREF: VMProgramChange+198↓j
.text:000000000004FB08                 LDUR            X16, [X15,#-8]
.text:000000000004FB0C                 CMP             X16, X13
.text:000000000004FB10                 B.EQ            loc_4FB58
.text:000000000004FB14                 ADD             W14, W14, #1
.text:000000000004FB18                 ADD             X15, X15, #0x10
.text:000000000004FB1C                 CMP             W11, W14,UXTH
.text:000000000004FB20                 B.HI            loc_4FB08
.text:000000000004FB24 loc_4FB24                               ; CODE XREF: VMProgramChange:loc_4FAF4↑j
.text:000000000004FB24                 CBZ             W10, loc_4FB50
.text:000000000004FB28                 LDR             X14, [X9,#0x10]
.text:000000000004FB2C                 MOV             X13, XZR
.text:000000000004FB30                 ADD             X14, X14, #2
.text:000000000004FB34 loc_4FB34                               ; CODE XREF: VMProgramChange+1C4↓j
.text:000000000004FB34                 LDURH           W15, [X14,#-2]
.text:000000000004FB38                 CMP             X12, X15
.text:000000000004FB3C                 B.EQ            loc_4FB60
.text:000000000004FB40                 ADD             X13, X13, #1
.text:000000000004FB44                 ADD             X14, X14, #0x102
.text:000000000004FB48                 CMP             X13, X10
.text:000000000004FB4C                 B.CC            loc_4FB34
.text:000000000004FB50 loc_4FB50                               ; CODE XREF: VMProgramChange:loc_4FB24↑j
.text:000000000004FB50                 CBNZ            W11, loc_4FB78
.text:000000000004FB54                 B               loc_4FBA4
.text:000000000004FB58 ; ---------------------------------------------------------------------------
.text:000000000004FB58 loc_4FB58                               ; CODE XREF: VMProgramChange+188↑j
.text:000000000004FB58                 LDRH            W14, [X15]
.text:000000000004FB5C                 B               loc_4FBA8
.text:000000000004FB60 ; ---------------------------------------------------------------------------
.text:000000000004FB60 loc_4FB60                               ; CODE XREF: VMProgramChange+1B4↑j
.text:000000000004FB60                 LDRH            W10, [X14]
.text:000000000004FB64                 MOV             W13, #0xFFFF
.text:000000000004FB68                 CMP             W10, W13
.text:000000000004FB6C                 CSEL            W14, W10, WZR, NE
.text:000000000004FB70                 B.NE            loc_4FBA8
.text:000000000004FB74                 CBZ             W11, loc_4FBA8
.text:000000000004FB78 loc_4FB78                               ; CODE XREF: VMProgramChange:loc_4FB50↑j
.text:000000000004FB78                 LDR             X9, [X9,#0x18]
.text:000000000004FB7C                 MOV             W10, WZR
.text:000000000004FB80                 LSL             X12, X12, #8
.text:000000000004FB84                 ADD             X9, X9, #8
.text:000000000004FB88 loc_4FB88                               ; CODE XREF: VMProgramChange+218↓j
.text:000000000004FB88                 LDUR            X13, [X9,#-8]
.text:000000000004FB8C                 CMP             X13, X12
.text:000000000004FB90                 B.EQ            loc_4FBC0
.text:000000000004FB94                 ADD             W10, W10, #1
.text:000000000004FB98                 ADD             X9, X9, #0x10
.text:000000000004FB9C                 CMP             W11, W10,UXTH
.text:000000000004FBA0                 B.HI            loc_4FB88
.text:000000000004FBA4 loc_4FBA4                               ; CODE XREF: VMProgramChange+84↑j
.text:000000000004FBA4                                         ; VMProgramChange+1CC↑j
.text:000000000004FBA4                 MOV             W14, WZR
.text:000000000004FBA8 loc_4FBA8                               ; CODE XREF: VMProgramChange+BC↑j
.text:000000000004FBA8                                         ; VMProgramChange+D0↑j ...
.text:000000000004FBA8                 LDRB            W9, [X8,#0x34]
.text:000000000004FBAC                 STRB            W3, [X8,#0x2C]
.text:000000000004FBB0                 STRH            W14, [X8,#0x22]
.text:000000000004FBB4                 ORR             W9, W9, #4
.text:000000000004FBB8                 STRB            W9, [X8,#0x34]
.text:000000000004FBBC                 RET
.text:000000000004FBC0 ; ---------------------------------------------------------------------------
.text:000000000004FBC0 loc_4FBC0                               ; CODE XREF: VMProgramChange+208↑j
.text:000000000004FBC0                 LDRH            W14, [X9]
.text:000000000004FBC4                 B               loc_4FBA8
.text:000000000004FBC4 ; } // starts at 4F988
.text:000000000004FBC4 ; End of function VMProgramChange
.text:000000000004FBC8 ; =============== S U B R O U T I N E =======================================
.text:000000000004FBC8 ; Attributes: bp-based frame
.text:000000000004FBC8                 EXPORT VMMuteVoice
.text:000000000004FBC8 VMMuteVoice                             ; DATA XREF: LOAD:0000000000001668↑o
.text:000000000004FBC8 var_10          = -0x10
.text:000000000004FBC8 var_s0          =  0
.text:000000000004FBC8 ; __unwind {
.text:000000000004FBC8                 STR             X19, [SP,#-0x10+var_10]!
.text:000000000004FBCC                 STP             X29, X30, [SP,#0x10+var_s0]
.text:000000000004FBD0                 ADD             X29, SP, #0x10
.text:000000000004FBD4                 ADD             X8, X0, X1,LSL#4
.text:000000000004FBD8                 MOV             W9, #0x1128
.text:000000000004FBDC                 ADD             X19, X8, X9
.text:000000000004FBE0                 LDRB            W9, [X19]
.text:000000000004FBE4                 CMP             W9, #0
.text:000000000004FBE8                 CCMP            W9, #4, #4, NE
.text:000000000004FBEC                 B.EQ            loc_4FC6C
.text:000000000004FBF0                 MOV             W10, #0x1120
.text:000000000004FBF4                 ADD             X2, X8, X10
.text:000000000004FBF8                 CMP             W9, #5
.text:000000000004FBFC                 B.NE            loc_4FC08
.text:000000000004FC00                 MOV             W9, #0x112D
.text:000000000004FC04                 B               loc_4FC0C
.text:000000000004FC08 ; ---------------------------------------------------------------------------
.text:000000000004FC08 loc_4FC08                               ; CODE XREF: VMMuteVoice+34↑j
.text:000000000004FC08                 MOV             W9, #0x112A
.text:000000000004FC0C loc_4FC0C                               ; CODE XREF: VMMuteVoice+3C↑j
.text:000000000004FC0C                 LDRB            W9, [X8,X9]
.text:000000000004FC10                 MOV             W11, #0x112A
.text:000000000004FC14                 SXTW            X3, W1
.text:000000000004FC18                 LSR             W10, W9, #1
.text:000000000004FC1C                 AND             X10, X10, #0x78
.text:000000000004FC20                 AND             W9, W9, #0xF
.text:000000000004FC24                 LDR             X10, [X0,X10]
.text:000000000004FC28                 ADD             X9, X10, X9,LSL#5
.text:000000000004FC2C                 LDRB            W9, [X9,#0x35]
.text:000000000004FC30                 ADD             X9, X10, X9
.text:000000000004FC34                 LDRB            W10, [X9,#0x236]
.text:000000000004FC38                 SUB             W10, W10, #1
.text:000000000004FC3C                 STRB            W10, [X9,#0x236]
.text:000000000004FC40                 ADRP            X9, #wtSynth_ptr@PAGE
.text:000000000004FC44                 LDRB            W8, [X8,X11]
.text:000000000004FC48                 LDR             X9, [X9,#wtSynth_ptr@PAGEOFF]
.text:000000000004FC4C                 LSR             X8, X8, #1
.text:000000000004FC50                 AND             X8, X8, #0x78
.text:000000000004FC54                 LDR             X9, [X9,#(off_58310 - 0x582F0)]
.text:000000000004FC58                 LDR             X8, [X0,X8]
.text:000000000004FC5C                 MOV             X1, X8
.text:000000000004FC60                 BLR             X9
.text:000000000004FC64                 MOV             W8, #4
.text:000000000004FC68                 STRB            W8, [X19]
.text:000000000004FC6C loc_4FC6C                               ; CODE XREF: VMMuteVoice+24↑j
.text:000000000004FC6C                 LDP             X29, X30, [SP,#0x10+var_s0]
.text:000000000004FC70                 LDR             X19, [SP+0x10+var_10],#0x20
.text:000000000004FC74                 RET
.text:000000000004FC74 ; } // starts at 4FBC8
.text:000000000004FC74 ; End of function VMMuteVoice
.text:000000000004FC78 ; =============== S U B R O U T I N E =======================================
.text:000000000004FC78 ; Attributes: bp-based frame
.text:000000000004FC78                 EXPORT VMReleaseVoice
.text:000000000004FC78 VMReleaseVoice                          ; DATA XREF: LOAD:0000000000000810↑o
.text:000000000004FC78 var_30          = -0x30
.text:000000000004FC78 var_20          = -0x20
.text:000000000004FC78 var_10          = -0x10
.text:000000000004FC78 var_s0          =  0
.text:000000000004FC78 ; __unwind {
.text:000000000004FC78                 STR             X23, [SP,#-0x10+var_30]!
.text:000000000004FC7C                 STP             X22, X21, [SP,#0x30+var_20]
.text:000000000004FC80                 STP             X20, X19, [SP,#0x30+var_10]
.text:000000000004FC84                 STP             X29, X30, [SP,#0x30+var_s0]
.text:000000000004FC88                 ADD             X29, SP, #0x30
.text:000000000004FC8C                 ADD             X8, X0, X2,LSL#4
.text:000000000004FC90                 MOV             W9, #0x1128
.text:000000000004FC94                 ADD             X23, X8, X9
.text:000000000004FC98                 LDRB            W9, [X23]
.text:000000000004FC9C                 SUB             W10, W9, #3
.text:000000000004FCA0                 CMP             W10, #2
.text:000000000004FCA4                 CCMP            W9, #0, #4, CS
.text:000000000004FCA8                 B.EQ            loc_4FD60
.text:000000000004FCAC                 MOV             W10, #0x1120
.text:000000000004FCB0                 MOV             X19, X0
.text:000000000004FCB4                 MOV             X20, X1
.text:000000000004FCB8                 ADD             X21, X8, X10
.text:000000000004FCBC                 CMP             W9, #5
.text:000000000004FCC0                 B.NE            loc_4FD34
.text:000000000004FCC4                 MOV             W9, #0x112D
.text:000000000004FCC8                 MOV             W11, #0x112A
.text:000000000004FCCC                 SXTW            X22, W2
.text:000000000004FCD0                 LDRB            W9, [X8,X9]
.text:000000000004FCD4                 MOV             X0, X19
.text:000000000004FCD8                 MOV             X2, X21
.text:000000000004FCDC                 MOV             X3, X22
.text:000000000004FCE0                 LSR             X10, X9, #1
.text:000000000004FCE4                 AND             X10, X10, #0x78
.text:000000000004FCE8                 AND             X9, X9, #0xF
.text:000000000004FCEC                 LDR             X10, [X19,X10]
.text:000000000004FCF0                 ADD             X9, X10, X9,LSL#5
.text:000000000004FCF4                 LDRB            W9, [X9,#0x35]
.text:000000000004FCF8                 ADD             X9, X10, X9
.text:000000000004FCFC                 LDRB            W10, [X9,#0x236]
.text:000000000004FD00                 SUB             W10, W10, #1
.text:000000000004FD04                 STRB            W10, [X9,#0x236]
.text:000000000004FD08                 ADRP            X9, #wtSynth_ptr@PAGE
.text:000000000004FD0C                 LDRB            W8, [X8,X11]
.text:000000000004FD10                 LDR             X9, [X9,#wtSynth_ptr@PAGEOFF]
.text:000000000004FD14                 LSR             X8, X8, #1
.text:000000000004FD18                 AND             X8, X8, #0x78
.text:000000000004FD1C                 LDR             X1, [X19,X8]
.text:000000000004FD20                 LDR             X8, [X9,#(off_58310 - 0x582F0)]
.text:000000000004FD24                 BLR             X8
.text:000000000004FD28                 MOV             W8, #4
.text:000000000004FD2C                 STRB            W8, [X23]
.text:000000000004FD30                 B               loc_4FD38
.text:000000000004FD34 ; ---------------------------------------------------------------------------
.text:000000000004FD34 loc_4FD34                               ; CODE XREF: VMReleaseVoice+48↑j
.text:000000000004FD34                 SXTW            X22, W2
.text:000000000004FD38 loc_4FD38                               ; CODE XREF: VMReleaseVoice+B8↑j
.text:000000000004FD38                 ADRP            X8, #wtSynth_ptr@PAGE
.text:000000000004FD3C                 MOV             X0, X19
.text:000000000004FD40                 MOV             X1, X20
.text:000000000004FD44                 LDR             X8, [X8,#wtSynth_ptr@PAGEOFF]
.text:000000000004FD48                 MOV             X2, X21
.text:000000000004FD4C                 MOV             X3, X22
.text:000000000004FD50                 LDR             X8, [X8,#(off_58308 - 0x582F0)] ; sub_53420
.text:000000000004FD54                 BLR             X8
.text:000000000004FD58                 MOV             W8, #3
.text:000000000004FD5C                 STRB            W8, [X23]
.text:000000000004FD60 loc_4FD60                               ; CODE XREF: VMReleaseVoice+30↑j
.text:000000000004FD60                 LDP             X29, X30, [SP,#0x30+var_s0]
.text:000000000004FD64                 LDP             X20, X19, [SP,#0x30+var_10]
.text:000000000004FD68                 LDP             X22, X21, [SP,#0x30+var_20]
.text:000000000004FD6C                 LDR             X23, [SP+0x30+var_30],#0x40
.text:000000000004FD70                 RET
.text:000000000004FD70 ; } // starts at 4FC78
.text:000000000004FD70 ; End of function VMReleaseVoice
.text:000000000004FD70 ; ---------------------------------------------------------------------------
.text:000000000004FD74                 ALIGN 8
.text:000000000004FD78 ; =============== S U B R O U T I N E =======================================
.text:000000000004FD78                 EXPORT VMInitMIPTable
.text:000000000004FD78 VMInitMIPTable                          ; CODE XREF: .VMInitMIPTable+C↓j
.text:000000000004FD78                                         ; DATA XREF: LOAD:0000000000001140↑o ...
.text:000000000004FD78 ; __unwind {
.text:000000000004FD78                 ADD             X8, X0, #0x115
.text:000000000004FD7C                 ADD             X9, X0, #0x135
.text:000000000004FD80                 ADD             X10, X0, #0x215
.text:000000000004FD84                 STRH            WZR, [X8]
.text:000000000004FD88                 ADD             X8, X0, #0x155
.text:000000000004FD8C                 STRH            WZR, [X9]
.text:000000000004FD90                 LDRB            W9, [X0,#0x256]
.text:000000000004FD94                 STURH           WZR, [X0,#0x35]
.text:000000000004FD98                 STRH            WZR, [X8]
.text:000000000004FD9C                 ADD             X8, X0, #0x175
.text:000000000004FDA0                 STURH           WZR, [X0,#0x55]
.text:000000000004FDA4                 AND             W9, W9, #0xFFFFFFFD
.text:000000000004FDA8                 STURH           WZR, [X0,#0x75]
.text:000000000004FDAC                 STURH           WZR, [X0,#0x95]
.text:000000000004FDB0                 STRH            WZR, [X8]
.text:000000000004FDB4                 ADD             X8, X0, #0x195
.text:000000000004FDB8                 STRB            W9, [X0,#0x256]
.text:000000000004FDBC                 ADD             X9, X0, #0x1B5
.text:000000000004FDC0                 STURH           WZR, [X0,#0xB5]
.text:000000000004FDC4                 STURH           WZR, [X0,#0xD5]
.text:000000000004FDC8                 STRH            WZR, [X8]
.text:000000000004FDCC                 ADD             X8, X0, #0x1D5
.text:000000000004FDD0                 STRH            WZR, [X9]
.text:000000000004FDD4                 ADD             X9, X0, #0x1F5
.text:000000000004FDD8                 STURH           WZR, [X0,#0xF5]
.text:000000000004FDDC                 STRH            WZR, [X8]
.text:000000000004FDE0                 STRH            WZR, [X9]
.text:000000000004FDE4                 STRH            WZR, [X10]
.text:000000000004FDE8                 RET
.text:000000000004FDE8 ; } // starts at 4FD78
.text:000000000004FDE8 ; End of function VMInitMIPTable
.text:000000000004FDE8 ; ---------------------------------------------------------------------------
.text:000000000004FDEC                 ALIGN 0x10
.text:000000000004FDF0 ; =============== S U B R O U T I N E =======================================
.text:000000000004FDF0                 EXPORT VMSetMIPEntry
.text:000000000004FDF0 VMSetMIPEntry                           ; CODE XREF: .VMSetMIPEntry+C↓j
.text:000000000004FDF0                                         ; DATA XREF: LOAD:0000000000000990↑o ...
.text:000000000004FDF0 ; __unwind {
.text:000000000004FDF0                 AND             W8, W3, #0xFF
.text:000000000004FDF4                 CMP             W8, #0xF
.text:000000000004FDF8                 B.HI            locret_4FE0C
.text:000000000004FDFC                 AND             X8, X2, #0xFF
.text:000000000004FE00                 ADD             X8, X1, X8,LSL#5
.text:000000000004FE04                 STRB            W3, [X8,#0x35]
.text:000000000004FE08                 STRB            W4, [X8,#0x36]
.text:000000000004FE0C locret_4FE0C                            ; CODE XREF: VMSetMIPEntry+8↑j
.text:000000000004FE0C                 RET
.text:000000000004FE0C ; } // starts at 4FDF0
.text:000000000004FE0C ; End of function VMSetMIPEntry
.text:000000000004FE10 ; =============== S U B R O U T I N E =======================================
.text:000000000004FE10 ; Attributes: bp-based frame
.text:000000000004FE10                 EXPORT VMMIPUpdateChannelMuting
.text:000000000004FE10 VMMIPUpdateChannelMuting                ; CODE XREF: .VMMIPUpdateChannelMuting+C↓j
.text:000000000004FE10                                         ; DATA XREF: LOAD:0000000000000C78↑o ...
.text:000000000004FE10 var_50          = -0x50
.text:000000000004FE10 var_40          = -0x40
.text:000000000004FE10 var_30          = -0x30
.text:000000000004FE10 var_20          = -0x20
.text:000000000004FE10 var_10          = -0x10
.text:000000000004FE10 var_s0          =  0
.text:000000000004FE10 ; __unwind {
.text:000000000004FE10                 STP             X28, X27, [SP,#-0x10+var_50]!
.text:000000000004FE14                 STP             X26, X25, [SP,#0x50+var_40]
.text:000000000004FE18                 STP             X24, X23, [SP,#0x50+var_30]
.text:000000000004FE1C                 STP             X22, X21, [SP,#0x50+var_20]
.text:000000000004FE20                 STP             X20, X19, [SP,#0x50+var_10]
.text:000000000004FE24                 STP             X29, X30, [SP,#0x50+var_s0]
.text:000000000004FE28                 ADD             X29, SP, #0x50
.text:000000000004FE2C                 LDRH            W8, [X1,#0x220]
.text:000000000004FE30                 MOV             X19, X1
.text:000000000004FE34                 MOV             X20, X0
.text:000000000004FE38                 CBNZ            W8, loc_4FE40
.text:000000000004FE3C                 LDRH            W8, [X20,#0x1542]
.text:000000000004FE40 loc_4FE40                               ; CODE XREF: VMMIPUpdateChannelMuting+28↑j
.text:000000000004FE40                 ADD             X9, X19, #0x34 ; '4'
.text:000000000004FE44                 MOV             W10, #0x236
.text:000000000004FE48 loc_4FE48                               ; CODE XREF: VMMIPUpdateChannelMuting+64↓j
.text:000000000004FE48                 LDRB            W11, [X9,#2]
.text:000000000004FE4C                 LDRB            W12, [X9]
.text:000000000004FE50                 CMP             W11, W8
.text:000000000004FE54                 CCMP            W11, #0, #4, LS
.text:000000000004FE58                 AND             W11, W12, #0xFFFFFFFD
.text:000000000004FE5C                 ORR             W12, W12, #2
.text:000000000004FE60                 CSEL            W11, W12, W11, EQ
.text:000000000004FE64                 STRB            W11, [X9],#0x20
.text:000000000004FE68                 STRB            WZR, [X19,X10]
.text:000000000004FE6C                 ADD             X10, X10, #1
.text:000000000004FE70                 CMP             X10, #0x246
.text:000000000004FE74                 B.NE            loc_4FE48
.text:000000000004FE78                 ADRP            X8, #wtSynth_ptr@PAGE
.text:000000000004FE7C                 MOV             W9, #0x112D
.text:000000000004FE80                 ADRP            X27, #unk_5B98@PAGE
.text:000000000004FE84                 LDR             X8, [X8,#wtSynth_ptr@PAGEOFF]
.text:000000000004FE88                 MOV             X21, XZR
.text:000000000004FE8C                 ADD             X22, X20, X9
.text:000000000004FE90                 MOV             W23, #3
.text:000000000004FE94                 MOV             W25, #4
.text:000000000004FE98                 LDR             X24, [X8,#(off_58308 - 0x582F0)]
.text:000000000004FE9C                 MOV             W26, #0x112A
.text:000000000004FEA0                 ADD             X27, X27, #unk_5B98@PAGEOFF
.text:000000000004FEA4 loc_4FEA4                               ; CODE XREF: VMMIPUpdateChannelMuting+12C↓j
.text:000000000004FEA4                 LDURB           W8, [X22,#-5]
.text:000000000004FEA8                 CBZ             W8, loc_4FF30
.text:000000000004FEAC                 CMP             W8, #5
.text:000000000004FEB0                 B.NE            loc_4FEBC
.text:000000000004FEB4                 MOV             X9, X22
.text:000000000004FEB8                 B               loc_4FEC4
.text:000000000004FEBC ; ---------------------------------------------------------------------------
.text:000000000004FEBC loc_4FEBC                               ; CODE XREF: VMMIPUpdateChannelMuting+A0↑j
.text:000000000004FEBC                 ADD             X9, X20, X21,LSL#4
.text:000000000004FEC0                 ADD             X9, X9, X26
.text:000000000004FEC4 loc_4FEC4                               ; CODE XREF: VMMIPUpdateChannelMuting+A8↑j
.text:000000000004FEC4                 LDRB            W9, [X9]
.text:000000000004FEC8                 LDRB            W10, [X19,#0x258]
.text:000000000004FECC                 CMP             W10, W9,LSR#4
.text:000000000004FED0                 B.NE            loc_4FF30
.text:000000000004FED4                 AND             X9, X9, #0xF
.text:000000000004FED8                 ADD             X9, X19, X9,LSL#5
.text:000000000004FEDC                 LDRB            W10, [X9,#0x34]
.text:000000000004FEE0                 LDRB            W28, [X9,#0x35]
.text:000000000004FEE4                 TBZ             W10, #1, loc_4FF20
.text:000000000004FEE8                 CMP             W8, #5
.text:000000000004FEEC                 B.HI            loc_4FF08
.text:000000000004FEF0                 ADR             X9, loc_4FF00
.text:000000000004FEF4                 LDRB            W10, [X27,X8]
.text:000000000004FEF8                 ADD             X9, X9, X10,LSL#2
.text:000000000004FEFC                 BR              X9
.text:000000000004FF00 ; ---------------------------------------------------------------------------
.text:000000000004FF00 loc_4FF00                               ; DATA XREF: VMMIPUpdateChannelMuting+E0↑o
.text:000000000004FF00                 STURB           W25, [X22,#-5]
.text:000000000004FF04                 B               loc_4FF30
.text:000000000004FF08 ; ---------------------------------------------------------------------------
.text:000000000004FF08 loc_4FF08                               ; CODE XREF: VMMIPUpdateChannelMuting+DC↑j
.text:000000000004FF08                 SUB             X2, X22, #0xD
.text:000000000004FF0C                 MOV             X0, X20
.text:000000000004FF10                 MOV             X1, X19
.text:000000000004FF14                 MOV             X3, X21
.text:000000000004FF18                 BLR             X24
.text:000000000004FF1C                 STURB           W23, [X22,#-5]
.text:000000000004FF20 loc_4FF20                               ; CODE XREF: VMMIPUpdateChannelMuting+D4↑j
.text:000000000004FF20                 ADD             X8, X19, X28
.text:000000000004FF24                 LDRB            W9, [X8,#0x236]
.text:000000000004FF28                 ADD             W9, W9, #1
.text:000000000004FF2C                 STRB            W9, [X8,#0x236]
.text:000000000004FF30 loc_4FF30                               ; CODE XREF: VMMIPUpdateChannelMuting+98↑j
.text:000000000004FF30                                         ; VMMIPUpdateChannelMuting+C0↑j ...
.text:000000000004FF30                 ADD             X21, X21, #1
.text:000000000004FF34                 ADD             X22, X22, #0x10
.text:000000000004FF38                 CMP             X21, #0x40 ; '@'
.text:000000000004FF3C                 B.NE            loc_4FEA4
.text:000000000004FF40                 LDP             X29, X30, [SP,#0x50+var_s0]
.text:000000000004FF44                 LDP             X20, X19, [SP,#0x50+var_10]
.text:000000000004FF48                 LDP             X22, X21, [SP,#0x50+var_20]
.text:000000000004FF4C                 LDP             X24, X23, [SP,#0x50+var_30]
.text:000000000004FF50                 LDP             X26, X25, [SP,#0x50+var_40]
.text:000000000004FF54                 LDP             X28, X27, [SP+0x50+var_50],#0x60
.text:000000000004FF58                 RET
.text:000000000004FF58 ; } // starts at 4FE10
.text:000000000004FF58 ; End of function VMMIPUpdateChannelMuting
.text:000000000004FF58 ; ---------------------------------------------------------------------------
.text:000000000004FF5C                 ALIGN 0x20
.text:000000000004FF60 ; =============== S U B R O U T I N E =======================================
.text:000000000004FF60 ; Attributes: bp-based frame
.text:000000000004FF60                 EXPORT VMUpdateMIPTable
.text:000000000004FF60 VMUpdateMIPTable                        ; CODE XREF: .VMUpdateMIPTable+C↓j
.text:000000000004FF60                                         ; DATA XREF: LOAD:00000000000011E8↑o ...
.text:000000000004FF60 var_60          = -0x60
.text:000000000004FF60 var_40          = -0x40
.text:000000000004FF60 var_18          = -0x18
.text:000000000004FF60 var_10          = -0x10
.text:000000000004FF60 var_s0          =  0
.text:000000000004FF60 ; __unwind {
.text:000000000004FF60                 SUB             SP, SP, #0x70
.text:000000000004FF64                 STR             X19, [SP,#0x60+var_10]
.text:000000000004FF68                 STP             X29, X30, [SP,#0x60+var_s0]
.text:000000000004FF6C                 ADD             X29, SP, #0x60
.text:000000000004FF70                 MRS             X19, #3, c13, c0, #2
.text:000000000004FF74                 MOVI            V0.2D, #0xFFFFFFFFFFFFFFFF
.text:000000000004FF78                 LDR             X8, [X19,#0x28]
.text:000000000004FF7C                 STUR            X8, [X29,#var_18]
.text:000000000004FF80                 LDRB            W8, [X1,#0x256]
.text:000000000004FF84                 ORR             W9, W8, #2
.text:000000000004FF88                 LDRB            W8, [X1,#0x35]
.text:000000000004FF8C                 STRB            W9, [X1,#0x256]
.text:000000000004FF90                 CMP             X8, #0x10
.text:000000000004FF94                 STP             Q0, Q0, [SP,#0x60+var_40]
.text:000000000004FF98                 STP             Q0, Q0, [SP,#0x60+var_60]
.text:000000000004FF9C                 B.EQ            loc_4FFA8
.text:000000000004FFA0                 MOV             X9, SP
.text:000000000004FFA4                 STR             WZR, [X9,X8,LSL#2]
.text:000000000004FFA8 loc_4FFA8                               ; CODE XREF: VMUpdateMIPTable+3C↑j
.text:000000000004FFA8                 LDRB            W8, [X1,#0x55]
.text:000000000004FFAC                 CMP             X8, #0x10
.text:000000000004FFB0                 B.EQ            loc_4FFC0
.text:000000000004FFB4                 MOV             X9, SP
.text:000000000004FFB8                 MOV             W10, #1
.text:000000000004FFBC                 STR             W10, [X9,X8,LSL#2]
.text:000000000004FFC0 loc_4FFC0                               ; CODE XREF: VMUpdateMIPTable+50↑j
.text:000000000004FFC0                 LDRB            W8, [X1,#0x75]
.text:000000000004FFC4                 CMP             X8, #0x10
.text:000000000004FFC8                 B.EQ            loc_4FFD8
.text:000000000004FFCC                 MOV             X9, SP
.text:000000000004FFD0                 MOV             W10, #2
.text:000000000004FFD4                 STR             W10, [X9,X8,LSL#2]
.text:000000000004FFD8 loc_4FFD8                               ; CODE XREF: VMUpdateMIPTable+68↑j
.text:000000000004FFD8                 LDRB            W8, [X1,#0x95]
.text:000000000004FFDC                 CMP             X8, #0x10
.text:000000000004FFE0                 B.EQ            loc_4FFF0
.text:000000000004FFE4                 MOV             X9, SP
.text:000000000004FFE8                 MOV             W10, #3
.text:000000000004FFEC                 STR             W10, [X9,X8,LSL#2]
.text:000000000004FFF0 loc_4FFF0                               ; CODE XREF: VMUpdateMIPTable+80↑j
.text:000000000004FFF0                 LDRB            W8, [X1,#0xB5]
.text:000000000004FFF4                 CMP             X8, #0x10
.text:000000000004FFF8                 B.EQ            loc_50008
.text:000000000004FFFC                 MOV             X9, SP
.text:0000000000050000                 MOV             W10, #4
.text:0000000000050004                 STR             W10, [X9,X8,LSL#2]
.text:0000000000050008 loc_50008                               ; CODE XREF: VMUpdateMIPTable+98↑j
.text:0000000000050008                 LDRB            W8, [X1,#0xD5]
.text:000000000005000C                 CMP             X8, #0x10
.text:0000000000050010                 B.EQ            loc_50020
.text:0000000000050014                 MOV             X9, SP
.text:0000000000050018                 MOV             W10, #5
.text:000000000005001C                 STR             W10, [X9,X8,LSL#2]
.text:0000000000050020 loc_50020                               ; CODE XREF: VMUpdateMIPTable+B0↑j
.text:0000000000050020                 LDRB            W8, [X1,#0xF5]
.text:0000000000050024                 CMP             X8, #0x10
.text:0000000000050028                 B.EQ            loc_50038
.text:000000000005002C                 MOV             X9, SP
.text:0000000000050030                 MOV             W10, #6
.text:0000000000050034                 STR             W10, [X9,X8,LSL#2]
.text:0000000000050038 loc_50038                               ; CODE XREF: VMUpdateMIPTable+C8↑j
.text:0000000000050038                 LDRB            W8, [X1,#0x115]
.text:000000000005003C                 CMP             X8, #0x10
.text:0000000000050040                 B.EQ            loc_50050
.text:0000000000050044                 MOV             X9, SP
.text:0000000000050048                 MOV             W10, #7
.text:000000000005004C                 STR             W10, [X9,X8,LSL#2]
.text:0000000000050050 loc_50050                               ; CODE XREF: VMUpdateMIPTable+E0↑j
.text:0000000000050050                 LDRB            W8, [X1,#0x135]
.text:0000000000050054                 CMP             X8, #0x10
.text:0000000000050058                 B.EQ            loc_50068
.text:000000000005005C                 MOV             X9, SP
.text:0000000000050060                 MOV             W10, #8
.text:0000000000050064                 STR             W10, [X9,X8,LSL#2]
.text:0000000000050068 loc_50068                               ; CODE XREF: VMUpdateMIPTable+F8↑j
.text:0000000000050068                 LDRB            W8, [X1,#0x155]
.text:000000000005006C                 CMP             X8, #0x10
.text:0000000000050070                 B.EQ            loc_50080
.text:0000000000050074                 MOV             X9, SP
.text:0000000000050078                 MOV             W10, #9
.text:000000000005007C                 STR             W10, [X9,X8,LSL#2]
.text:0000000000050080 loc_50080                               ; CODE XREF: VMUpdateMIPTable+110↑j
.text:0000000000050080                 LDRB            W8, [X1,#0x175]
.text:0000000000050084                 CMP             X8, #0x10
.text:0000000000050088                 B.EQ            loc_50098
.text:000000000005008C                 MOV             X9, SP
.text:0000000000050090                 MOV             W10, #0xA
.text:0000000000050094                 STR             W10, [X9,X8,LSL#2]
.text:0000000000050098 loc_50098                               ; CODE XREF: VMUpdateMIPTable+128↑j
.text:0000000000050098                 LDRB            W8, [X1,#0x195]
.text:000000000005009C                 CMP             X8, #0x10
.text:00000000000500A0                 B.EQ            loc_500B0
.text:00000000000500A4                 MOV             X9, SP
.text:00000000000500A8                 MOV             W10, #0xB
.text:00000000000500AC                 STR             W10, [X9,X8,LSL#2]
.text:00000000000500B0 loc_500B0                               ; CODE XREF: VMUpdateMIPTable+140↑j
.text:00000000000500B0                 LDRB            W8, [X1,#0x1B5]
.text:00000000000500B4                 CMP             X8, #0x10
.text:00000000000500B8                 B.EQ            loc_500C8
.text:00000000000500BC                 MOV             X9, SP
.text:00000000000500C0                 MOV             W10, #0xC
.text:00000000000500C4                 STR             W10, [X9,X8,LSL#2]
.text:00000000000500C8 loc_500C8                               ; CODE XREF: VMUpdateMIPTable+158↑j
.text:00000000000500C8                 LDRB            W8, [X1,#0x1D5]
.text:00000000000500CC                 CMP             X8, #0x10
.text:00000000000500D0                 B.EQ            loc_500E0
.text:00000000000500D4                 MOV             X9, SP
.text:00000000000500D8                 MOV             W10, #0xD
.text:00000000000500DC                 STR             W10, [X9,X8,LSL#2]
.text:00000000000500E0 loc_500E0                               ; CODE XREF: VMUpdateMIPTable+170↑j
.text:00000000000500E0                 LDRB            W8, [X1,#0x1F5]
.text:00000000000500E4                 CMP             X8, #0x10
.text:00000000000500E8                 B.EQ            loc_500F8
.text:00000000000500EC                 MOV             X9, SP
.text:00000000000500F0                 MOV             W10, #0xE
.text:00000000000500F4                 STR             W10, [X9,X8,LSL#2]
.text:00000000000500F8 loc_500F8                               ; CODE XREF: VMUpdateMIPTable+188↑j
.text:00000000000500F8                 LDRB            W8, [X1,#0x215]
.text:00000000000500FC                 CMP             X8, #0x10
.text:0000000000050100                 B.EQ            loc_50110
.text:0000000000050104                 MOV             X9, SP
.text:0000000000050108                 MOV             W10, #0xF
.text:000000000005010C                 STR             W10, [X9,X8,LSL#2]
.text:0000000000050110 loc_50110                               ; CODE XREF: VMUpdateMIPTable+1A0↑j
.text:0000000000050110                 MOV             X8, XZR
.text:0000000000050114                 MOV             W9, WZR
.text:0000000000050118                 MOV             W10, #0xFFFFFFFF
.text:000000000005011C                 MOV             X11, SP
.text:0000000000050120 loc_50120                               ; CODE XREF: VMUpdateMIPTable+210↓j
.text:0000000000050120                 LDRSW           X12, [X11,X8,LSL#2]
.text:0000000000050124                 CMN             W12, #1
.text:0000000000050128                 B.EQ            loc_50174
.text:000000000005012C                 ADD             X14, X1, X12,LSL#5
.text:0000000000050130                 MOV             X12, X14
.text:0000000000050134                 CMN             W10, #1
.text:0000000000050138                 LDRB            W13, [X12,#0x36]!
.text:000000000005013C                 B.EQ            loc_50150
.text:0000000000050140                 CMP             W9, W13
.text:0000000000050144                 B.NE            loc_50150
.text:0000000000050148                 STRB            W10, [X14,#0x35]
.text:000000000005014C                 B               loc_50168
.text:0000000000050150 ; ---------------------------------------------------------------------------
.text:0000000000050150 loc_50150                               ; CODE XREF: VMUpdateMIPTable+1DC↑j
.text:0000000000050150                                         ; VMUpdateMIPTable+1E4↑j
.text:0000000000050150                 SXTW            X10, W10
.text:0000000000050154                 ADD             X10, X10, #1
.text:0000000000050158                 SUB             W9, W13, W9
.text:000000000005015C                 ADD             X13, X1, X10
.text:0000000000050160                 STRB            W9, [X13,#0x246]
.text:0000000000050164                 LDRB            W9, [X12]
.text:0000000000050168 loc_50168                               ; CODE XREF: VMUpdateMIPTable+1EC↑j
.text:0000000000050168                 ADD             X8, X8, #1
.text:000000000005016C                 CMP             X8, #0x10
.text:0000000000050170                 B.CC            loc_50120
.text:0000000000050174 loc_50174                               ; CODE XREF: VMUpdateMIPTable+1C8↑j
.text:0000000000050174                 LDRB            W8, [X1,#0x256]
.text:0000000000050178                 ORR             W8, W8, #2
.text:000000000005017C                 STRB            W8, [X1,#0x256]
.text:0000000000050180                 BL              .VMMIPUpdateChannelMuting
.text:0000000000050184                 LDR             X8, [X19,#0x28]
.text:0000000000050188                 LDUR            X9, [X29,#var_18]
.text:000000000005018C                 CMP             X8, X9
.text:0000000000050190                 B.NE            loc_501A4
.text:0000000000050194                 LDP             X29, X30, [SP,#0x60+var_s0]
.text:0000000000050198                 LDR             X19, [SP,#0x60+var_10]
.text:000000000005019C                 ADD             SP, SP, #0x70 ; 'p'
.text:00000000000501A0                 RET
.text:00000000000501A4 ; ---------------------------------------------------------------------------
.text:00000000000501A4 loc_501A4                               ; CODE XREF: VMUpdateMIPTable+230↑j
.text:00000000000501A4                 BL              .__stack_chk_fail
.text:00000000000501A4 ; } // starts at 4FF60
.text:00000000000501A4 ; End of function VMUpdateMIPTable
.text:00000000000501A8 ; =============== S U B R O U T I N E =======================================
.text:00000000000501A8 ; Attributes: bp-based frame
.text:00000000000501A8                 EXPORT VMReleaseAllVoices
.text:00000000000501A8 VMReleaseAllVoices                      ; CODE XREF: .VMReleaseAllVoices+C↓j
.text:00000000000501A8                                         ; DATA XREF: LOAD:0000000000000CD8↑o ...
.text:00000000000501A8 var_50          = -0x50
.text:00000000000501A8 var_40          = -0x40
.text:00000000000501A8 var_30          = -0x30
.text:00000000000501A8 var_20          = -0x20
.text:00000000000501A8 var_10          = -0x10
.text:00000000000501A8 var_s0          =  0
.text:00000000000501A8 ; __unwind {
.text:00000000000501A8                 STR             X27, [SP,#-0x10+var_50]!
.text:00000000000501AC                 STP             X26, X25, [SP,#0x50+var_40]
.text:00000000000501B0                 STP             X24, X23, [SP,#0x50+var_30]
.text:00000000000501B4                 STP             X22, X21, [SP,#0x50+var_20]
.text:00000000000501B8                 STP             X20, X19, [SP,#0x50+var_10]
.text:00000000000501BC                 STP             X29, X30, [SP,#0x50+var_s0]
.text:00000000000501C0                 ADD             X29, SP, #0x50
.text:00000000000501C4                 MOV             X19, X1
.text:00000000000501C8                 MOV             X20, X0
.text:00000000000501CC                 MOV             X21, XZR
.text:00000000000501D0                 ADD             X22, X1, #0x34 ; '4'
.text:00000000000501D4 loc_501D4                               ; CODE XREF: VMReleaseAllVoices+5C↓j
.text:00000000000501D4                 LDRB            W8, [X22]
.text:00000000000501D8                 TBZ             W8, #0, loc_501F8
.text:00000000000501DC                 MOV             X0, X20
.text:00000000000501E0                 MOV             X1, X19
.text:00000000000501E4                 MOV             W2, W21
.text:00000000000501E8                 BL              .VMReleaseAllDeferredNoteOffs
.text:00000000000501EC                 LDRB            W8, [X22]
.text:00000000000501F0                 AND             W8, W8, #0xFE
.text:00000000000501F4                 STRB            W8, [X22]
.text:00000000000501F8 loc_501F8                               ; CODE XREF: VMReleaseAllVoices+30↑j
.text:00000000000501F8                 ADD             X21, X21, #1
.text:00000000000501FC                 ADD             X22, X22, #0x20 ; ' '
.text:0000000000050200                 CMP             X21, #0x10
.text:0000000000050204                 B.NE            loc_501D4
.text:0000000000050208                 ADRP            X8, #wtSynth_ptr@PAGE
.text:000000000005020C                 MOV             W9, #0x1128
.text:0000000000050210                 MOV             X22, XZR
.text:0000000000050214                 LDR             X8, [X8,#wtSynth_ptr@PAGEOFF]
.text:0000000000050218                 MOV             X21, XZR
.text:000000000005021C                 ADD             X23, X20, X9
.text:0000000000050220                 MOV             W26, #3
.text:0000000000050224                 MOV             W27, #4
.text:0000000000050228                 LDP             X24, X25, [X8,#0x18]
.text:000000000005022C loc_5022C                               ; CODE XREF: VMReleaseAllVoices+138↓j
.text:000000000005022C                 LDRB            W8, [X23,X22]
.text:0000000000050230                 SUB             W9, W8, #1
.text:0000000000050234                 CMP             W9, #2
.text:0000000000050238                 B.CS            loc_5026C
.text:000000000005023C                 ADD             X8, X23, X22
.text:0000000000050240                 LDRB            W10, [X19,#0x258]
.text:0000000000050244                 LDRB            W9, [X8,#2]
.text:0000000000050248                 CMP             W10, W9,LSR#4
.text:000000000005024C                 B.NE            loc_502D4
.text:0000000000050250                 SUB             X2, X8, #8
.text:0000000000050254                 MOV             X0, X20
.text:0000000000050258                 MOV             X1, X19
.text:000000000005025C                 MOV             X3, X21
.text:0000000000050260                 BLR             X24
.text:0000000000050264                 STRB            W26, [X23,X22]
.text:0000000000050268                 B               loc_502D4
.text:000000000005026C ; ---------------------------------------------------------------------------
.text:000000000005026C loc_5026C                               ; CODE XREF: VMReleaseAllVoices+90↑j
.text:000000000005026C                 CMP             W8, #5
.text:0000000000050270                 B.NE            loc_502D4
.text:0000000000050274                 ADD             X8, X23, X22
.text:0000000000050278                 LDRB            W10, [X19,#0x258]
.text:000000000005027C                 LDRB            W9, [X8,#5]
.text:0000000000050280                 CMP             W10, W9,LSR#4
.text:0000000000050284                 B.NE            loc_502D4
.text:0000000000050288                 LSR             X10, X9, #1
.text:000000000005028C                 AND             X10, X10, #0x78
.text:0000000000050290                 AND             X9, X9, #0xF
.text:0000000000050294                 SUB             X2, X8, #8
.text:0000000000050298                 LDR             X10, [X20,X10]
.text:000000000005029C                 MOV             X0, X20
.text:00000000000502A0                 MOV             X3, X21
.text:00000000000502A4                 ADD             X9, X10, X9,LSL#5
.text:00000000000502A8                 LDRB            W9, [X9,#0x35]
.text:00000000000502AC                 ADD             X9, X10, X9
.text:00000000000502B0                 LDRB            W10, [X9,#0x236]
.text:00000000000502B4                 SUB             W10, W10, #1
.text:00000000000502B8                 STRB            W10, [X9,#0x236]
.text:00000000000502BC                 LDRB            W9, [X8,#2]
.text:00000000000502C0                 LSR             X9, X9, #1
.text:00000000000502C4                 AND             X9, X9, #0x78
.text:00000000000502C8                 LDR             X1, [X20,X9]
.text:00000000000502CC                 BLR             X25
.text:00000000000502D0                 STRB            W27, [X23,X22]
.text:00000000000502D4 loc_502D4                               ; CODE XREF: VMReleaseAllVoices+A4↑j
.text:00000000000502D4                                         ; VMReleaseAllVoices+C0↑j ...
.text:00000000000502D4                 ADD             X21, X21, #1
.text:00000000000502D8                 ADD             X22, X22, #0x10
.text:00000000000502DC                 CMP             X22, #0x400
.text:00000000000502E0                 B.NE            loc_5022C
.text:00000000000502E4                 LDP             X29, X30, [SP,#0x50+var_s0]
.text:00000000000502E8                 LDP             X20, X19, [SP,#0x50+var_10]
.text:00000000000502EC                 LDP             X22, X21, [SP,#0x50+var_20]
.text:00000000000502F0                 LDP             X24, X23, [SP,#0x50+var_30]
.text:00000000000502F4                 LDP             X26, X25, [SP,#0x50+var_40]
.text:00000000000502F8                 LDR             X27, [SP+0x50+var_50],#0x60
.text:00000000000502FC                 RET
.text:00000000000502FC ; } // starts at 501A8
.text:00000000000502FC ; End of function VMReleaseAllVoices
.text:0000000000050300 ; =============== S U B R O U T I N E =======================================
.text:0000000000050300 ; Attributes: bp-based frame
.text:0000000000050300                 EXPORT VMReleaseAllDeferredNoteOffs
.text:0000000000050300 VMReleaseAllDeferredNoteOffs            ; CODE XREF: .VMReleaseAllDeferredNoteOffs+C↓j
.text:0000000000050300                                         ; DATA XREF: LOAD:0000000000001CE0↑o ...
.text:0000000000050300 var_50          = -0x50
.text:0000000000050300 var_40          = -0x40
.text:0000000000050300 var_30          = -0x30
.text:0000000000050300 var_20          = -0x20
.text:0000000000050300 var_10          = -0x10
.text:0000000000050300 var_s0          =  0
.text:0000000000050300 ; __unwind {
.text:0000000000050300                 STP             X28, X27, [SP,#-0x10+var_50]!
.text:0000000000050304                 STP             X26, X25, [SP,#0x50+var_40]
.text:0000000000050308                 STP             X24, X23, [SP,#0x50+var_30]
.text:000000000005030C                 STP             X22, X21, [SP,#0x50+var_20]
.text:0000000000050310                 STP             X20, X19, [SP,#0x50+var_10]
.text:0000000000050314                 STP             X29, X30, [SP,#0x50+var_s0]
.text:0000000000050318                 ADD             X29, SP, #0x50
.text:000000000005031C                 LDR             X8, [X0,#0x1530]
.text:0000000000050320                 ADRP            X9, #wtSynth_ptr@PAGE
.text:0000000000050324                 MOV             W10, #0x1128
.text:0000000000050328                 MOV             X19, X0
.text:000000000005032C                 LDR             X9, [X9,#wtSynth_ptr@PAGEOFF]
.text:0000000000050330                 MOV             X20, X1
.text:0000000000050334                 ADD             X8, X8, #5
.text:0000000000050338                 MOV             X23, XZR
.text:000000000005033C                 MOV             X21, XZR
.text:0000000000050340                 STR             X8, [X0,#0x1530]
.text:0000000000050344                 ADD             X25, X0, X10
.text:0000000000050348                 LDRB            W8, [X1,#0x258]
.text:000000000005034C                 LDP             X26, X27, [X9,#0x18]
.text:0000000000050350                 ORR             W28, W2, W8,LSL#4
.text:0000000000050354 loc_50354                               ; CODE XREF: VMReleaseAllDeferredNoteOffs+114↓j
.text:0000000000050354                 ADD             X24, X25, X23
.text:0000000000050358                 LDRB            W8, [X24,#2]
.text:000000000005035C                 CMP             W8, W28,UXTB
.text:0000000000050360                 B.NE            loc_50408
.text:0000000000050364                 LDRB            W8, [X24,#1]
.text:0000000000050368                 TBZ             W8, #1, loc_50408
.text:000000000005036C                 LDRB            W9, [X25,X23]
.text:0000000000050370                 SUB             W10, W9, #3
.text:0000000000050374                 CMP             W10, #2
.text:0000000000050378                 B.CC            loc_50400
.text:000000000005037C                 CBZ             W9, loc_50400
.text:0000000000050380                 SUB             X22, X24, #8
.text:0000000000050384                 CMP             W9, #5
.text:0000000000050388                 B.NE            loc_503E0
.text:000000000005038C                 LDRB            W8, [X24,#5]
.text:0000000000050390                 MOV             X0, X19
.text:0000000000050394                 MOV             X2, X22
.text:0000000000050398                 MOV             X3, X21
.text:000000000005039C                 LSR             X9, X8, #1
.text:00000000000503A0                 AND             X9, X9, #0x78
.text:00000000000503A4                 AND             X8, X8, #0xF
.text:00000000000503A8                 LDR             X9, [X19,X9]
.text:00000000000503AC                 ADD             X8, X9, X8,LSL#5
.text:00000000000503B0                 LDRB            W8, [X8,#0x35]
.text:00000000000503B4                 ADD             X8, X9, X8
.text:00000000000503B8                 LDRB            W9, [X8,#0x236]
.text:00000000000503BC                 SUB             W9, W9, #1
.text:00000000000503C0                 STRB            W9, [X8,#0x236]
.text:00000000000503C4                 LDRB            W8, [X24,#2]
.text:00000000000503C8                 LSR             X8, X8, #1
.text:00000000000503CC                 AND             X8, X8, #0x78
.text:00000000000503D0                 LDR             X1, [X19,X8]
.text:00000000000503D4                 BLR             X27
.text:00000000000503D8                 MOV             W8, #4
.text:00000000000503DC                 STRB            W8, [X25,X23]
.text:00000000000503E0 loc_503E0                               ; CODE XREF: VMReleaseAllDeferredNoteOffs+88↑j
.text:00000000000503E0                 MOV             X0, X19
.text:00000000000503E4                 MOV             X1, X20
.text:00000000000503E8                 MOV             X2, X22
.text:00000000000503EC                 MOV             X3, X21
.text:00000000000503F0                 BLR             X26
.text:00000000000503F4                 LDRB            W8, [X24,#1]
.text:00000000000503F8                 MOV             W9, #3
.text:00000000000503FC                 STRB            W9, [X25,X23]
.text:0000000000050400 loc_50400                               ; CODE XREF: VMReleaseAllDeferredNoteOffs+78↑j
.text:0000000000050400                                         ; VMReleaseAllDeferredNoteOffs+7C↑j
.text:0000000000050400                 AND             W8, W8, #0xFFFFFFFD
.text:0000000000050404                 STRB            W8, [X24,#1]
.text:0000000000050408 loc_50408                               ; CODE XREF: VMReleaseAllDeferredNoteOffs+60↑j
.text:0000000000050408                                         ; VMReleaseAllDeferredNoteOffs+68↑j
.text:0000000000050408                 ADD             X21, X21, #1
.text:000000000005040C                 ADD             X23, X23, #0x10
.text:0000000000050410                 CMP             X21, #0x40 ; '@'
.text:0000000000050414                 B.NE            loc_50354
.text:0000000000050418                 LDP             X29, X30, [SP,#0x50+var_s0]
.text:000000000005041C                 LDP             X20, X19, [SP,#0x50+var_10]
.text:0000000000050420                 LDP             X22, X21, [SP,#0x50+var_20]
.text:0000000000050424                 LDP             X24, X23, [SP,#0x50+var_30]
.text:0000000000050428                 LDP             X26, X25, [SP,#0x50+var_40]
.text:000000000005042C                 LDP             X28, X27, [SP+0x50+var_50],#0x60
.text:0000000000050430                 RET
.text:0000000000050430 ; } // starts at 50300
.text:0000000000050430 ; End of function VMReleaseAllDeferredNoteOffs
.text:0000000000050430 ; ---------------------------------------------------------------------------
.text:0000000000050434                 ALIGN 8
.text:0000000000050438 ; =============== S U B R O U T I N E =======================================
.text:0000000000050438 ; Attributes: bp-based frame
.text:0000000000050438                 EXPORT VMAllNotesOff
.text:0000000000050438 VMAllNotesOff                           ; DATA XREF: LOAD:00000000000013E0↑o
.text:0000000000050438 var_40          = -0x40
.text:0000000000050438 var_30          = -0x30
.text:0000000000050438 var_20          = -0x20
.text:0000000000050438 var_10          = -0x10
.text:0000000000050438 var_s0          =  0
.text:0000000000050438 ; __unwind {
.text:0000000000050438                 STR             X25, [SP,#-0x10+var_40]!
.text:000000000005043C                 STP             X24, X23, [SP,#0x40+var_30]
.text:0000000000050440                 STP             X22, X21, [SP,#0x40+var_20]
.text:0000000000050444                 STP             X20, X19, [SP,#0x40+var_10]
.text:0000000000050448                 STP             X29, X30, [SP,#0x40+var_s0]
.text:000000000005044C                 ADD             X29, SP, #0x40
.text:0000000000050450                 LDR             X8, [X0,#0x1530]
.text:0000000000050454                 ADRP            X9, #wtSynth_ptr@PAGE
.text:0000000000050458                 MOV             W10, #0x1120
.text:000000000005045C                 MOV             X19, X0
.text:0000000000050460                 LDR             X9, [X9,#wtSynth_ptr@PAGEOFF]
.text:0000000000050464                 MOV             X20, X1
.text:0000000000050468                 ADD             X8, X8, #5
.text:000000000005046C                 MOV             X21, XZR
.text:0000000000050470                 ADD             X22, X0, X10
.text:0000000000050474                 STR             X8, [X0,#0x1530]
.text:0000000000050478                 MOV             W25, #4
.text:000000000005047C                 LDRB            W8, [X1,#0x258]
.text:0000000000050480                 LDR             X23, [X9,#(off_58310 - 0x582F0)]
.text:0000000000050484                 ORR             W24, W2, W8,LSL#4
.text:0000000000050488 loc_50488                               ; CODE XREF: VMAllNotesOff+A0↓j
.text:0000000000050488                 LDRB            W8, [X22,#8]
.text:000000000005048C                 CBZ             W8, loc_504CC
.text:0000000000050490                 CMP             W8, #5
.text:0000000000050494                 B.NE            loc_504A8
.text:0000000000050498                 LDRB            W8, [X22,#0xD]
.text:000000000005049C                 CMP             W8, W24,UXTB
.text:00000000000504A0                 B.EQ            loc_504B4
.text:00000000000504A4                 B               loc_504CC
.text:00000000000504A8 ; ---------------------------------------------------------------------------
.text:00000000000504A8 loc_504A8                               ; CODE XREF: VMAllNotesOff+5C↑j
.text:00000000000504A8                 LDRB            W8, [X22,#0xA]
.text:00000000000504AC                 CMP             W8, W24,UXTB
.text:00000000000504B0                 B.NE            loc_504CC
.text:00000000000504B4 loc_504B4                               ; CODE XREF: VMAllNotesOff+68↑j
.text:00000000000504B4                 MOV             X0, X19
.text:00000000000504B8                 MOV             X1, X20
.text:00000000000504BC                 MOV             X2, X22
.text:00000000000504C0                 MOV             X3, X21
.text:00000000000504C4                 BLR             X23
.text:00000000000504C8                 STRB            W25, [X22,#8]
.text:00000000000504CC loc_504CC                               ; CODE XREF: VMAllNotesOff+54↑j
.text:00000000000504CC                                         ; VMAllNotesOff+6C↑j ...
.text:00000000000504CC                 ADD             X21, X21, #1
.text:00000000000504D0                 ADD             X22, X22, #0x10
.text:00000000000504D4                 CMP             X21, #0x40 ; '@'
.text:00000000000504D8                 B.NE            loc_50488
.text:00000000000504DC                 LDP             X29, X30, [SP,#0x40+var_s0]
.text:00000000000504E0                 LDP             X20, X19, [SP,#0x40+var_10]
.text:00000000000504E4                 LDP             X22, X21, [SP,#0x40+var_20]
.text:00000000000504E8                 LDP             X24, X23, [SP,#0x40+var_30]
.text:00000000000504EC                 LDR             X25, [SP+0x40+var_40],#0x50
.text:00000000000504F0                 RET
.text:00000000000504F0 ; } // starts at 50438
.text:00000000000504F0 ; End of function VMAllNotesOff
.text:00000000000504F0 ; ---------------------------------------------------------------------------
.text:00000000000504F4                 ALIGN 8
.text:00000000000504F8 ; =============== S U B R O U T I N E =======================================
.text:00000000000504F8 ; Attributes: bp-based frame
.text:00000000000504F8                 EXPORT VMDeferredStopNote
.text:00000000000504F8 VMDeferredStopNote                      ; DATA XREF: LOAD:0000000000000C48↑o
.text:00000000000504F8 var_50          = -0x50
.text:00000000000504F8 var_40          = -0x40
.text:00000000000504F8 var_30          = -0x30
.text:00000000000504F8 var_20          = -0x20
.text:00000000000504F8 var_10          = -0x10
.text:00000000000504F8 var_s0          =  0
.text:00000000000504F8 ; __unwind {
.text:00000000000504F8                 STP             X28, X27, [SP,#-0x10+var_50]!
.text:00000000000504FC                 STP             X26, X25, [SP,#0x50+var_40]
.text:0000000000050500                 STP             X24, X23, [SP,#0x50+var_30]
.text:0000000000050504                 STP             X22, X21, [SP,#0x50+var_20]
.text:0000000000050508                 STP             X20, X19, [SP,#0x50+var_10]
.text:000000000005050C                 STP             X29, X30, [SP,#0x50+var_s0]
.text:0000000000050510                 ADD             X29, SP, #0x50
.text:0000000000050514                 ADRP            X8, #wtSynth_ptr@PAGE
.text:0000000000050518                 MOV             W9, #0x1120
.text:000000000005051C                 MOV             X19, X1
.text:0000000000050520                 LDR             X8, [X8,#wtSynth_ptr@PAGEOFF]
.text:0000000000050524                 MOV             X20, X0
.text:0000000000050528                 MOV             X21, XZR
.text:000000000005052C                 MOV             W23, WZR
.text:0000000000050530                 MOV             W24, #3
.text:0000000000050534                 LDR             X25, [X8,#(off_58318 - 0x582F0)] ; sub_53490
.text:0000000000050538                 ADD             X22, X0, X9
.text:000000000005053C                 LDR             X26, [X8,#(off_58308 - 0x582F0)]
.text:0000000000050540                 MOV             W27, #1
.text:0000000000050544                 MOV             W28, #0x19
.text:0000000000050548 loc_50548                               ; CODE XREF: VMDeferredStopNote+DC↓j
.text:0000000000050548                 LDRB            W9, [X22,#9]
.text:000000000005054C                 TBZ             W9, #2, loc_505C8
.text:0000000000050550                 LDRB            W8, [X22,#8]
.text:0000000000050554                 CMP             W8, #5
.text:0000000000050558                 B.NE            loc_50564
.text:000000000005055C                 MOV             W23, #1
.text:0000000000050560                 B               loc_505C8
.text:0000000000050564 ; ---------------------------------------------------------------------------
.text:0000000000050564 loc_50564                               ; CODE XREF: VMDeferredStopNote+60↑j
.text:0000000000050564                 LDRB            W10, [X22,#0xA]
.text:0000000000050568                 EOR             W11, W9, #4
.text:000000000005056C                 STRB            W11, [X22,#9]
.text:0000000000050570                 AND             X10, X10, #0xF
.text:0000000000050574                 ADD             X9, X19, X10,LSL#5
.text:0000000000050578                 LDRB            W10, [X9,#0x34]
.text:000000000005057C                 TBNZ            W10, #0, loc_505B0
.text:0000000000050580                 CMP             W8, #4
.text:0000000000050584                 B.HI            loc_50594
.text:0000000000050588                 LSL             W8, W27, W8
.text:000000000005058C                 TST             W8, W28
.text:0000000000050590                 B.NE            loc_505C8
.text:0000000000050594 loc_50594                               ; CODE XREF: VMDeferredStopNote+8C↑j
.text:0000000000050594                 MOV             X0, X20
.text:0000000000050598                 MOV             X1, X19
.text:000000000005059C                 MOV             X2, X22
.text:00000000000505A0                 MOV             X3, X21
.text:00000000000505A4                 BLR             X26
.text:00000000000505A8                 STRB            W24, [X22,#8]
.text:00000000000505AC                 B               loc_505C8
.text:00000000000505B0 ; ---------------------------------------------------------------------------
.text:00000000000505B0 loc_505B0                               ; CODE XREF: VMDeferredStopNote+84↑j
.text:00000000000505B0                 ADD             X3, X9, #0x18
.text:00000000000505B4                 MOV             X0, X20
.text:00000000000505B8                 MOV             X1, X19
.text:00000000000505BC                 MOV             X2, X22
.text:00000000000505C0                 MOV             X4, X21
.text:00000000000505C4                 BLR             X25
.text:00000000000505C8 loc_505C8                               ; CODE XREF: VMDeferredStopNote+54↑j
.text:00000000000505C8                                         ; VMDeferredStopNote+68↑j ...
.text:00000000000505C8                 ADD             X21, X21, #1
.text:00000000000505CC                 ADD             X22, X22, #0x10
.text:00000000000505D0                 CMP             X21, #0x40 ; '@'
.text:00000000000505D4                 B.NE            loc_50548
.text:00000000000505D8                 CBNZ            W23, loc_505E8
.text:00000000000505DC                 LDRB            W8, [X19,#0x256]
.text:00000000000505E0                 EOR             W8, W8, #8
.text:00000000000505E4                 STRB            W8, [X19,#0x256]
.text:00000000000505E8 loc_505E8                               ; CODE XREF: VMDeferredStopNote+E0↑j
.text:00000000000505E8                 LDP             X29, X30, [SP,#0x50+var_s0]
.text:00000000000505EC                 LDP             X20, X19, [SP,#0x50+var_10]
.text:00000000000505F0                 LDP             X22, X21, [SP,#0x50+var_20]
.text:00000000000505F4                 LDP             X24, X23, [SP,#0x50+var_30]
.text:00000000000505F8                 LDP             X26, X25, [SP,#0x50+var_40]
.text:00000000000505FC                 LDP             X28, X27, [SP+0x50+var_50],#0x60
.text:0000000000050600                 RET
.text:0000000000050600 ; } // starts at 504F8
.text:0000000000050600 ; End of function VMDeferredStopNote
.text:0000000000050600 ; ---------------------------------------------------------------------------
.text:0000000000050604                 ALIGN 8
.text:0000000000050608 ; =============== S U B R O U T I N E =======================================
.text:0000000000050608 ; Attributes: bp-based frame
.text:0000000000050608                 EXPORT VMCatchNotesForSustainPedal
.text:0000000000050608 VMCatchNotesForSustainPedal             ; DATA XREF: LOAD:0000000000001470↑o
.text:0000000000050608 var_40          = -0x40
.text:0000000000050608 var_30          = -0x30
.text:0000000000050608 var_20          = -0x20
.text:0000000000050608 var_10          = -0x10
.text:0000000000050608 var_s0          =  0
.text:0000000000050608 ; __unwind {
.text:0000000000050608                 STR             X25, [SP,#-0x10+var_40]!
.text:000000000005060C                 STP             X24, X23, [SP,#0x40+var_30]
.text:0000000000050610                 STP             X22, X21, [SP,#0x40+var_20]
.text:0000000000050614                 STP             X20, X19, [SP,#0x40+var_10]
.text:0000000000050618                 STP             X29, X30, [SP,#0x40+var_s0]
.text:000000000005061C                 ADD             X29, SP, #0x40
.text:0000000000050620                 LDR             X8, [X0,#0x1530]
.text:0000000000050624                 ADRP            X9, #wtSynth_ptr@PAGE
.text:0000000000050628                 MOV             W10, #0x1120
.text:000000000005062C                 MOV             X19, X0
.text:0000000000050630                 MOV             X20, X1
.text:0000000000050634                 ADD             X8, X8, #5
.text:0000000000050638                 MOV             X21, XZR
.text:000000000005063C                 ADD             X23, X0, X10
.text:0000000000050640                 STR             X8, [X0,#0x1530]
.text:0000000000050644                 LDRB            W8, [X1,#0x258]
.text:0000000000050648                 LDR             X9, [X9,#wtSynth_ptr@PAGEOFF]
.text:000000000005064C                 ORR             W24, W2, W8,LSL#4
.text:0000000000050650                 AND             X8, X24, #0xFF
.text:0000000000050654                 LDR             X25, [X9,#(off_58318 - 0x582F0)]
.text:0000000000050658                 ADD             X8, X1, X8,LSL#5
.text:000000000005065C                 ADD             X22, X8, #0x18
.text:0000000000050660 loc_50660                               ; CODE XREF: VMCatchNotesForSustainPedal+94↓j
.text:0000000000050660                 LDRB            W8, [X23,#0xA]
.text:0000000000050664                 CMP             W8, W24,UXTB
.text:0000000000050668                 B.NE            loc_50690
.text:000000000005066C                 LDRB            W8, [X23,#8]
.text:0000000000050670                 CMP             W8, #3
.text:0000000000050674                 B.NE            loc_50690
.text:0000000000050678                 MOV             X0, X19
.text:000000000005067C                 MOV             X1, X20
.text:0000000000050680                 MOV             X2, X23
.text:0000000000050684                 MOV             X3, X22
.text:0000000000050688                 MOV             X4, X21
.text:000000000005068C                 BLR             X25
.text:0000000000050690 loc_50690                               ; CODE XREF: VMCatchNotesForSustainPedal+60↑j
.text:0000000000050690                                         ; VMCatchNotesForSustainPedal+6C↑j
.text:0000000000050690                 ADD             X21, X21, #1
.text:0000000000050694                 ADD             X23, X23, #0x10
.text:0000000000050698                 CMP             X21, #0x40 ; '@'
.text:000000000005069C                 B.NE            loc_50660
.text:00000000000506A0                 LDP             X29, X30, [SP,#0x40+var_s0]
.text:00000000000506A4                 LDP             X20, X19, [SP,#0x40+var_10]
.text:00000000000506A8                 LDP             X22, X21, [SP,#0x40+var_20]
.text:00000000000506AC                 LDP             X24, X23, [SP,#0x40+var_30]
.text:00000000000506B0                 LDR             X25, [SP+0x40+var_40],#0x50
.text:00000000000506B4                 RET
.text:00000000000506B4 ; } // starts at 50608
.text:00000000000506B4 ; End of function VMCatchNotesForSustainPedal
.text:00000000000506B8 ; =============== S U B R O U T I N E =======================================
.text:00000000000506B8                 EXPORT VMUpdateAllNotesAge
.text:00000000000506B8 VMUpdateAllNotesAge                     ; DATA XREF: LOAD:0000000000000D68↑o
.text:00000000000506B8 ; __unwind {
.text:00000000000506B8                 MOV             W9, #0x1124
.text:00000000000506BC                 MOV             X8, XZR
.text:00000000000506C0                 ADD             X9, X0, X9
.text:00000000000506C4 loc_506C4                               ; CODE XREF: VMUpdateAllNotesAge+28↓j
.text:00000000000506C4                 LDRH            W10, [X9,X8]
.text:00000000000506C8                 CMP             W10, W1,UXTH
.text:00000000000506CC                 B.CS            loc_506D8
.text:00000000000506D0                 ADD             W10, W10, #1
.text:00000000000506D4                 STRH            W10, [X9,X8]
.text:00000000000506D8 loc_506D8                               ; CODE XREF: VMUpdateAllNotesAge+14↑j
.text:00000000000506D8                 ADD             X8, X8, #0x10
.text:00000000000506DC                 CMP             X8, #0x400
.text:00000000000506E0                 B.NE            loc_506C4
.text:00000000000506E4                 RET
.text:00000000000506E4 ; } // starts at 506B8
.text:00000000000506E4 ; End of function VMUpdateAllNotesAge
.text:00000000000506E8 ; =============== S U B R O U T I N E =======================================
.text:00000000000506E8 ; Attributes: bp-based frame
.text:00000000000506E8                 EXPORT VMCheckKeyGroup
.text:00000000000506E8 VMCheckKeyGroup                         ; CODE XREF: .VMCheckKeyGroup+C↓j
.text:00000000000506E8                                         ; DATA XREF: LOAD:0000000000000C30↑o ...
.text:00000000000506E8 var_60          = -0x60
.text:00000000000506E8 var_58          = -0x58
.text:00000000000506E8 var_50          = -0x50
.text:00000000000506E8 var_40          = -0x40
.text:00000000000506E8 var_30          = -0x30
.text:00000000000506E8 var_20          = -0x20
.text:00000000000506E8 var_10          = -0x10
.text:00000000000506E8 var_s0          =  0
.text:00000000000506E8 ; __unwind {
.text:00000000000506E8                 SUB             SP, SP, #0x70
.text:00000000000506EC                 STP             X28, X27, [SP,#0x60+var_50]
.text:00000000000506F0                 STP             X26, X25, [SP,#0x60+var_40]
.text:00000000000506F4                 STP             X24, X23, [SP,#0x60+var_30]
.text:00000000000506F8                 STP             X22, X21, [SP,#0x60+var_20]
.text:00000000000506FC                 STP             X20, X19, [SP,#0x60+var_10]
.text:0000000000050700                 STP             X29, X30, [SP,#0x60+var_s0]
.text:0000000000050704                 ADD             X29, SP, #0x60
.text:0000000000050708                 LDR             X8, [X0,#0x1530]
.text:000000000005070C                 ADRP            X9, #wtSynth_ptr@PAGE
.text:0000000000050710                 MOV             W10, #0x1126
.text:0000000000050714                 MOV             X19, X0
.text:0000000000050718                 LDR             X9, [X9,#wtSynth_ptr@PAGEOFF]
.text:000000000005071C                 MOV             X20, X1
.text:0000000000050720                 ADD             X8, X8, #0xA
.text:0000000000050724                 MOV             W21, W2
.text:0000000000050728                 MOV             X23, XZR
.text:000000000005072C                 STR             X8, [X0,#0x1530]
.text:0000000000050730                 MOV             X22, XZR
.text:0000000000050734                 LDRB            W8, [X1,#0x258]
.text:0000000000050738                 ADD             X25, X0, X10
.text:000000000005073C                 MOV             W24, #0x28 ; '('
.text:0000000000050740                 ORR             W26, W3, W8,LSL#4
.text:0000000000050744                 LDR             X8, [X9,#(off_58310 - 0x582F0)]
.text:0000000000050748                 UBFX            X27, X26, #4, #4
.text:000000000005074C                 STR             X8, [SP,#0x60+var_58]
.text:0000000000050750                 AND             W8, W26, #0xF
.text:0000000000050754                 STR             X8, [SP,#0x60+var_60]
.text:0000000000050758 loc_50758                               ; CODE XREF: VMCheckKeyGroup+1A0↓j
.text:0000000000050758                 ADD             X28, X25, X23
.text:000000000005075C                 LDRB            W8, [X28,#2]
.text:0000000000050760                 CMP             W8, #5
.text:0000000000050764                 B.NE            loc_50790
.text:0000000000050768                 LDRB            W8, [X28,#7]
.text:000000000005076C                 CMP             W8, W26,UXTB
.text:0000000000050770                 B.NE            loc_5087C
.text:0000000000050774                 ADD             X8, X19, X23
.text:0000000000050778                 LDRH            W8, [X8,#0x1126]
.text:000000000005077C                 TBNZ            W8, #0xE, loc_507B8
.text:0000000000050780                 LDR             X9, [X20,#8]
.text:0000000000050784                 LDR             X9, [X9,#0x20]
.text:0000000000050788                 ADD             X8, X9, X8,LSL#5
.text:000000000005078C                 B               loc_507CC
.text:0000000000050790 ; ---------------------------------------------------------------------------
.text:0000000000050790 loc_50790                               ; CODE XREF: VMCheckKeyGroup+7C↑j
.text:0000000000050790                 LDRB            W9, [X28,#4]
.text:0000000000050794                 CMP             W9, W26,UXTB
.text:0000000000050798                 B.NE            loc_5087C
.text:000000000005079C                 ADD             X9, X19, X23
.text:00000000000507A0                 LDRH            W9, [X9,#0x1120]
.text:00000000000507A4                 TBNZ            W9, #0xE, loc_507EC
.text:00000000000507A8                 LDR             X10, [X20,#8]
.text:00000000000507AC                 LDR             X10, [X10,#0x20]
.text:00000000000507B0                 ADD             X9, X10, X9,LSL#5
.text:00000000000507B4                 B               loc_50800
.text:00000000000507B8 ; ---------------------------------------------------------------------------
.text:00000000000507B8 loc_507B8                               ; CODE XREF: VMCheckKeyGroup+94↑j
.text:00000000000507B8                 LDR             X9, [X20,#0x10]
.text:00000000000507BC                 AND             X8, X8, #0x3FFF
.text:00000000000507C0                 LDR             X9, [X9,#8]
.text:00000000000507C4                 NOP
.text:00000000000507C8                 MADD            X8, X8, X24, X9
.text:00000000000507CC loc_507CC                               ; CODE XREF: VMCheckKeyGroup+A4↑j
.text:00000000000507CC                 LDRH            W8, [X8]
.text:00000000000507D0                 AND             W8, W8, #0xF00
.text:00000000000507D4                 CMP             W8, W21,UXTH
.text:00000000000507D8                 B.NE            loc_5087C
.text:00000000000507DC                 LDRB            W8, [X28,#3]
.text:00000000000507E0                 TBZ             W8, #3, loc_50824
.text:00000000000507E4                 ORR             W8, W8, #0x40
.text:00000000000507E8                 B               loc_50878
.text:00000000000507EC ; ---------------------------------------------------------------------------
.text:00000000000507EC loc_507EC                               ; CODE XREF: VMCheckKeyGroup+BC↑j
.text:00000000000507EC                 LDR             X10, [X20,#0x10]
.text:00000000000507F0                 AND             X9, X9, #0x3FFF
.text:00000000000507F4                 LDR             X10, [X10,#8]
.text:00000000000507F8                 NOP
.text:00000000000507FC                 MADD            X9, X9, X24, X10
.text:0000000000050800 loc_50800                               ; CODE XREF: VMCheckKeyGroup+CC↑j
.text:0000000000050800                 LDRH            W9, [X9]
.text:0000000000050804                 AND             W9, W9, #0xF00
.text:0000000000050808                 CMP             W9, W21,UXTH
.text:000000000005080C                 B.NE            loc_5087C
.text:0000000000050810                 LDRB            W9, [X28,#3]
.text:0000000000050814                 TBNZ            W9, #3, loc_50874
.text:0000000000050818                 ORR             W8, W8, #4
.text:000000000005081C                 CMP             W8, #4
.text:0000000000050820                 B.EQ            loc_5087C
.text:0000000000050824 loc_50824                               ; CODE XREF: VMCheckKeyGroup+F8↑j
.text:0000000000050824                 LDR             X8, [X19,X27,LSL#3]
.text:0000000000050828                 SUB             X2, X28, #6
.text:000000000005082C                 LDR             X9, [SP,#0x60+var_60]
.text:0000000000050830                 MOV             X0, X19
.text:0000000000050834                 MOV             X3, X22
.text:0000000000050838                 ADD             X9, X8, X9,LSL#5
.text:000000000005083C                 LDRB            W9, [X9,#0x35]
.text:0000000000050840                 ADD             X8, X8, X9
.text:0000000000050844                 LDRB            W9, [X8,#0x236]
.text:0000000000050848                 SUB             W9, W9, #1
.text:000000000005084C                 STRB            W9, [X8,#0x236]
.text:0000000000050850                 LDRB            W8, [X28,#4]
.text:0000000000050854                 LSR             X8, X8, #1
.text:0000000000050858                 AND             X8, X8, #0x78
.text:000000000005085C                 LDR             X1, [X19,X8]
.text:0000000000050860                 LDR             X8, [SP,#0x60+var_58]
.text:0000000000050864                 BLR             X8
.text:0000000000050868                 MOV             W8, #4
.text:000000000005086C                 STRB            W8, [X28,#2]
.text:0000000000050870                 B               loc_5087C
.text:0000000000050874 ; ---------------------------------------------------------------------------
.text:0000000000050874 loc_50874                               ; CODE XREF: VMCheckKeyGroup+12C↑j
.text:0000000000050874                 ORR             W8, W9, #0x40
.text:0000000000050878 loc_50878                               ; CODE XREF: VMCheckKeyGroup+100↑j
.text:0000000000050878                 STRB            W8, [X28,#3]
.text:000000000005087C loc_5087C                               ; CODE XREF: VMCheckKeyGroup+88↑j
.text:000000000005087C                                         ; VMCheckKeyGroup+B0↑j ...
.text:000000000005087C                 ADD             X22, X22, #1
.text:0000000000050880                 ADD             X23, X23, #0x10
.text:0000000000050884                 CMP             X23, #0x400
.text:0000000000050888                 B.NE            loc_50758
.text:000000000005088C                 LDP             X29, X30, [SP,#0x60+var_s0]
.text:0000000000050890                 LDP             X20, X19, [SP,#0x60+var_10]
.text:0000000000050894                 LDP             X22, X21, [SP,#0x60+var_20]
.text:0000000000050898                 LDP             X24, X23, [SP,#0x60+var_30]
.text:000000000005089C                 LDP             X26, X25, [SP,#0x60+var_40]
.text:00000000000508A0                 LDP             X28, X27, [SP,#0x60+var_50]
.text:00000000000508A4                 ADD             SP, SP, #0x70 ; 'p'
.text:00000000000508A8                 RET
.text:00000000000508A8 ; } // starts at 506E8
.text:00000000000508A8 ; End of function VMCheckKeyGroup
.text:00000000000508A8 ; ---------------------------------------------------------------------------
.text:00000000000508AC                 ALIGN 0x10
.text:00000000000508B0 ; =============== S U B R O U T I N E =======================================
.text:00000000000508B0                 EXPORT VMCheckPolyphonyLimiting
.text:00000000000508B0 VMCheckPolyphonyLimiting                ; DATA XREF: LOAD:0000000000001A88↑o
.text:00000000000508B0 var_10          = -0x10
.text:00000000000508B0 ; __unwind {
.text:00000000000508B0                 LDR             X9, [X0,#0x1530]
.text:00000000000508B4                 CMP             X7, W6,SXTW
.text:00000000000508B8                 ADD             X9, X9, #0xA
.text:00000000000508BC                 STR             X9, [X0,#0x1530]
.text:00000000000508C0                 B.GE            loc_508CC
.text:00000000000508C4                 MOV             W0, WZR
.text:00000000000508C8                 RET
.text:00000000000508CC ; ---------------------------------------------------------------------------
.text:00000000000508CC loc_508CC                               ; CODE XREF: VMCheckPolyphonyLimiting+10↑j
.text:00000000000508CC                 LDRB            W11, [X1,#0x258]
.text:00000000000508D0                 ADD             X12, X0, W6,SXTW#4
.text:00000000000508D4                 MOV             W13, #0x112E
.text:00000000000508D8                 MOV             W8, W5
.text:00000000000508DC                 MOV             W5, W4
.text:00000000000508E0                 MOV             W4, W3
.text:00000000000508E4                 MOV             W9, WZR
.text:00000000000508E8                 MOV             W10, WZR
.text:00000000000508EC                 ADD             X12, X12, X13
.text:00000000000508F0                 ORR             W3, W2, W11,LSL#4
.text:00000000000508F4                 MOV             W11, #0x40 ; '@'
.text:00000000000508F8                 SXTW            X13, W6
.text:00000000000508FC loc_508FC                               ; CODE XREF: VMCheckPolyphonyLimiting+BC↓j
.text:00000000000508FC                 LDURB           W14, [X12,#-6]
.text:0000000000050900                 CMP             W14, #5
.text:0000000000050904                 B.NE            loc_50924
.text:0000000000050908                 LDURB           W14, [X12,#-1]
.text:000000000005090C                 CMP             W14, W3,UXTB
.text:0000000000050910                 B.NE            loc_5095C
.text:0000000000050914                 LDRB            W14, [X12]
.text:0000000000050918                 CMP             W14, W4,UXTB
.text:000000000005091C                 CINC            W10, W10, EQ
.text:0000000000050920                 B               loc_5095C
.text:0000000000050924 ; ---------------------------------------------------------------------------
.text:0000000000050924 loc_50924                               ; CODE XREF: VMCheckPolyphonyLimiting+54↑j
.text:0000000000050924                 LDURB           W14, [X12,#-4]
.text:0000000000050928                 CMP             W14, W3,UXTB
.text:000000000005092C                 B.NE            loc_5095C
.text:0000000000050930                 LDURB           W14, [X12,#-3]
.text:0000000000050934                 CMP             W14, W4,UXTB
.text:0000000000050938                 B.NE            loc_5095C
.text:000000000005093C                 LDRH            W14, [X0,#0x1544]
.text:0000000000050940                 ADD             W10, W10, #1
.text:0000000000050944                 LDURH           W15, [X12,#-0xA]
.text:0000000000050948                 SUB             W14, W14, W15
.text:000000000005094C                 AND             W15, W14, #0xFFFF
.text:0000000000050950                 CMP             W15, W9,UXTH
.text:0000000000050954                 CSEL            W11, W11, W6, CC
.text:0000000000050958                 CSEL            W9, W9, W14, CC
.text:000000000005095C loc_5095C                               ; CODE XREF: VMCheckPolyphonyLimiting+60↑j
.text:000000000005095C                                         ; VMCheckPolyphonyLimiting+70↑j ...
.text:000000000005095C                 ADD             X13, X13, #1
.text:0000000000050960                 ADD             X12, X12, #0x10
.text:0000000000050964                 ADD             W6, W6, #1
.text:0000000000050968                 CMP             X13, X7
.text:000000000005096C                 B.LE            loc_508FC
.text:0000000000050970                 MOV             W9, WZR
.text:0000000000050974                 CMP             W11, #0x40 ; '@'
.text:0000000000050978                 B.EQ            loc_509A0
.text:000000000005097C                 CMP             W10, #2
.text:0000000000050980                 B.LT            loc_509A0
.text:0000000000050984                 STP             X29, X30, [SP,#var_10]!
.text:0000000000050988                 MOV             X29, SP
.text:000000000005098C                 MOV             W6, W8
.text:0000000000050990                 SXTW            X2, W11
.text:0000000000050994                 BL              sub_509A8
.text:0000000000050998                 MOV             W9, #1
.text:000000000005099C                 LDP             X29, X30, [SP+0x10+var_10],#0x10
.text:00000000000509A0 loc_509A0                               ; CODE XREF: VMCheckPolyphonyLimiting+C8↑j
.text:00000000000509A0                                         ; VMCheckPolyphonyLimiting+D0↑j
.text:00000000000509A0                 MOV             W0, W9
.text:00000000000509A4                 RET
.text:00000000000509A4 ; } // starts at 508B0
.text:00000000000509A4 ; End of function VMCheckPolyphonyLimiting
.text:00000000000509A8 ; =============== S U B R O U T I N E =======================================
.text:00000000000509A8 ; Attributes: bp-based frame
.text:00000000000509A8 sub_509A8                               ; CODE XREF: VMCheckPolyphonyLimiting+E4↑p
.text:00000000000509A8                                         ; VMStartVoice+220↓p
.text:00000000000509A8 var_40          = -0x40
.text:00000000000509A8 var_30          = -0x30
.text:00000000000509A8 var_20          = -0x20
.text:00000000000509A8 var_10          = -0x10
.text:00000000000509A8 var_s0          =  0
.text:00000000000509A8 ; __unwind {
.text:00000000000509A8                 STP             X26, X25, [SP,#-0x10+var_40]!
.text:00000000000509AC                 STP             X24, X23, [SP,#0x40+var_30]
.text:00000000000509B0                 STP             X22, X21, [SP,#0x40+var_20]
.text:00000000000509B4                 STP             X20, X19, [SP,#0x40+var_10]
.text:00000000000509B8                 STP             X29, X30, [SP,#0x40+var_s0]
.text:00000000000509BC                 ADD             X29, SP, #0x40
.text:00000000000509C0                 ADD             X25, X0, X2,LSL#4
.text:00000000000509C4                 MOV             W8, #0x1128
.text:00000000000509C8                 ADD             X26, X25, X8
.text:00000000000509CC                 MOV             W8, #0x1120
.text:00000000000509D0                 MOV             W20, W6
.text:00000000000509D4                 LDRB            W9, [X26]
.text:00000000000509D8                 MOV             X19, X0
.text:00000000000509DC                 MOV             W21, W5
.text:00000000000509E0                 MOV             W22, W4
.text:00000000000509E4                 MOV             W23, W3
.text:00000000000509E8                 MOV             X24, X1
.text:00000000000509EC                 ADD             X8, X25, X8
.text:00000000000509F0                 CMP             W9, #4
.text:00000000000509F4                 B.EQ            loc_50A38
.text:00000000000509F8                 CMP             W9, #5
.text:00000000000509FC                 B.NE            loc_50A08
.text:0000000000050A00                 MOV             W9, #0x112D
.text:0000000000050A04                 B               loc_50A0C
.text:0000000000050A08 ; ---------------------------------------------------------------------------
.text:0000000000050A08 loc_50A08                               ; CODE XREF: sub_509A8+54↑j
.text:0000000000050A08                 MOV             W9, #0x112A
.text:0000000000050A0C loc_50A0C                               ; CODE XREF: sub_509A8+5C↑j
.text:0000000000050A0C                 LDRB            W9, [X25,X9]
.text:0000000000050A10                 LSR             W10, W9, #1
.text:0000000000050A14                 AND             X10, X10, #0x78
.text:0000000000050A18                 AND             W9, W9, #0xF
.text:0000000000050A1C                 LDR             X10, [X19,X10]
.text:0000000000050A20                 ADD             X9, X10, X9,LSL#5
.text:0000000000050A24                 LDRB            W9, [X9,#0x35]
.text:0000000000050A28                 ADD             X9, X10, X9
.text:0000000000050A2C                 LDRB            W10, [X9,#0x236]
.text:0000000000050A30                 SUB             W10, W10, #1
.text:0000000000050A34                 STRB            W10, [X9,#0x236]
.text:0000000000050A38 loc_50A38                               ; CODE XREF: sub_509A8+4C↑j
.text:0000000000050A38                 MOV             W9, #0x112A
.text:0000000000050A3C                 ADRP            X10, #wtSynth_ptr@PAGE
.text:0000000000050A40                 SXTW            X3, W2
.text:0000000000050A44                 LDRB            W9, [X25,X9]
.text:0000000000050A48                 MOV             X0, X19
.text:0000000000050A4C                 LDR             X10, [X10,#wtSynth_ptr@PAGEOFF]
.text:0000000000050A50                 MOV             X2, X8
.text:0000000000050A54                 LSR             X9, X9, #1
.text:0000000000050A58                 AND             X9, X9, #0x78
.text:0000000000050A5C                 LDR             X10, [X10,#(off_58310 - 0x582F0)]
.text:0000000000050A60                 LDR             X1, [X19,X9]
.text:0000000000050A64                 BLR             X10
.text:0000000000050A68                 MOV             W9, #5
.text:0000000000050A6C                 MOV             W10, #0x112E
.text:0000000000050A70                 MOV             W11, #0x112F
.text:0000000000050A74                 STRB            W9, [X26]
.text:0000000000050A78                 MOV             W12, #0x112D
.text:0000000000050A7C                 LDRB            W9, [X24,#0x258]
.text:0000000000050A80                 MOV             X8, XZR
.text:0000000000050A84                 STRB            W22, [X25,X10]
.text:0000000000050A88                 STRB            W21, [X25,X11]
.text:0000000000050A8C                 MOV             W11, #0x1124
.text:0000000000050A90                 STRH            W20, [X25,#0x1126]
.text:0000000000050A94                 ORR             W9, W23, W9,LSL#4
.text:0000000000050A98                 LSR             W10, W9, #1
.text:0000000000050A9C                 AND             X10, X10, #0x78
.text:0000000000050AA0                 STRB            W9, [X25,X12]
.text:0000000000050AA4                 AND             W9, W9, #0xF
.text:0000000000050AA8                 MOV             W12, #0x1129
.text:0000000000050AAC                 LDR             X10, [X19,X10]
.text:0000000000050AB0                 ADD             X9, X10, X9,LSL#5
.text:0000000000050AB4                 LDRB            W9, [X9,#0x35]
.text:0000000000050AB8                 ADD             X9, X10, X9
.text:0000000000050ABC                 LDRB            W10, [X9,#0x236]
.text:0000000000050AC0                 ADD             W10, W10, #1
.text:0000000000050AC4                 STRB            W10, [X9,#0x236]
.text:0000000000050AC8                 MOV             W10, #0xB9
.text:0000000000050ACC                 LDRB            W9, [X25,X12]
.text:0000000000050AD0                 AND             W13, W9, W10
.text:0000000000050AD4                 LDRH            W10, [X25,#0x1124]
.text:0000000000050AD8                 ADD             X9, X25, X11
.text:0000000000050ADC                 ADD             X11, X19, X11
.text:0000000000050AE0                 STRB            W13, [X25,X12]
.text:0000000000050AE4 loc_50AE4                               ; CODE XREF: sub_509A8+158↓j
.text:0000000000050AE4                 LDRH            W12, [X11,X8]
.text:0000000000050AE8                 CMP             W12, W10
.text:0000000000050AEC                 B.CS            loc_50AF8
.text:0000000000050AF0                 ADD             W12, W12, #1
.text:0000000000050AF4                 STRH            W12, [X11,X8]
.text:0000000000050AF8 loc_50AF8                               ; CODE XREF: sub_509A8+144↑j
.text:0000000000050AF8                 ADD             X8, X8, #0x10
.text:0000000000050AFC                 CMP             X8, #0x400
.text:0000000000050B00                 B.NE            loc_50AE4
.text:0000000000050B04                 LDRH            W8, [X19,#0x1544]
.text:0000000000050B08                 ADD             W10, W8, #1
.text:0000000000050B0C                 STRH            W10, [X19,#0x1544]
.text:0000000000050B10                 STRH            W8, [X9]
.text:0000000000050B14                 LDP             X29, X30, [SP,#0x40+var_s0]
.text:0000000000050B18                 LDP             X20, X19, [SP,#0x40+var_10]
.text:0000000000050B1C                 LDP             X22, X21, [SP,#0x40+var_20]
.text:0000000000050B20                 LDP             X24, X23, [SP,#0x40+var_30]
.text:0000000000050B24                 LDP             X26, X25, [SP+0x40+var_40],#0x50
.text:0000000000050B28                 RET
.text:0000000000050B28 ; } // starts at 509A8
.text:0000000000050B28 ; End of function sub_509A8
.text:0000000000050B28 ; ---------------------------------------------------------------------------
.text:0000000000050B2C                 ALIGN 0x10
.text:0000000000050B30 ; =============== S U B R O U T I N E =======================================
.text:0000000000050B30 ; Attributes: bp-based frame
.text:0000000000050B30                 EXPORT VMStartVoice
.text:0000000000050B30 VMStartVoice                            ; CODE XREF: .VMStartVoice+C↓j
.text:0000000000050B30                                         ; DATA XREF: LOAD:stru_720↑o ...
.text:0000000000050B30 var_4C          = -0x4C
.text:0000000000050B30 var_48          = -0x48
.text:0000000000050B30 var_40          = -0x40
.text:0000000000050B30 var_30          = -0x30
.text:0000000000050B30 var_20          = -0x20
.text:0000000000050B30 var_10          = -0x10
.text:0000000000050B30 var_s0          =  0
.text:0000000000050B30 ; __unwind {
.text:0000000000050B30                 SUB             SP, SP, #0x60
.text:0000000000050B34                 STP             X26, X25, [SP,#0x50+var_40]
.text:0000000000050B38                 STP             X24, X23, [SP,#0x50+var_30]
.text:0000000000050B3C                 STP             X22, X21, [SP,#0x50+var_20]
.text:0000000000050B40                 STP             X20, X19, [SP,#0x50+var_10]
.text:0000000000050B44                 STP             X29, X30, [SP,#0x50+var_s0]
.text:0000000000050B48                 ADD             X29, SP, #0x50
.text:0000000000050B4C                 MRS             X25, #3, c13, c0, #2
.text:0000000000050B50                 MOV             W24, W2
.text:0000000000050B54                 LDR             X9, [X25,#0x28]
.text:0000000000050B58                 MOV             W19, W5
.text:0000000000050B5C                 MOV             W22, W4
.text:0000000000050B60                 MOV             W23, W3
.text:0000000000050B64                 MOV             X20, X1
.text:0000000000050B68                 MOV             X21, X0
.text:0000000000050B6C                 STR             X9, [SP,#0x50+var_48]
.text:0000000000050B70                 AND             X8, X24, #0xFF
.text:0000000000050B74                 TBNZ            W5, #0xE, loc_50B8C
.text:0000000000050B78                 LDR             X9, [X20,#8]
.text:0000000000050B7C                 AND             X10, X19, #0xFFFF
.text:0000000000050B80                 LDR             X9, [X9,#0x20]
.text:0000000000050B84                 ADD             X26, X9, X10,LSL#5
.text:0000000000050B88                 B               loc_50BA8
.text:0000000000050B8C ; ---------------------------------------------------------------------------
.text:0000000000050B8C loc_50B8C                               ; CODE XREF: VMStartVoice+44↑j
.text:0000000000050B8C                 LDR             X9, [X20,#0x10]
.text:0000000000050B90                 AND             W10, W19, #0xFFFF
.text:0000000000050B94                 AND             W10, W10, #0x3FFF
.text:0000000000050B98                 MOV             W11, #0x28 ; '('
.text:0000000000050B9C                 LDR             X9, [X9,#8]
.text:0000000000050BA0                 NOP
.text:0000000000050BA4                 UMADDL          X26, W10, W11, X9
.text:0000000000050BA8 loc_50BA8                               ; CODE XREF: VMStartVoice+58↑j
.text:0000000000050BA8                 LDR             X9, [X21,#0x1530]
.text:0000000000050BAC                 ADD             X8, X20, X8,LSL#5
.text:0000000000050BB0                 ADD             X9, X9, #0xA
.text:0000000000050BB4                 STR             X9, [X21,#0x1530]
.text:0000000000050BB8                 LDRB            W8, [X8,#0x35]
.text:0000000000050BBC                 ADD             X8, X20, X8
.text:0000000000050BC0                 LDRB            W8, [X8,#0x236]
.text:0000000000050BC4                 CBZ             W8, loc_50CB4
.text:0000000000050BC8                 LDRH            W8, [X26]
.text:0000000000050BCC                 ANDS            W2, W8, #0xF00
.text:0000000000050BD0                 B.EQ            loc_50BE8
.text:0000000000050BD4                 MOV             X0, X21
.text:0000000000050BD8                 MOV             X1, X20
.text:0000000000050BDC                 MOV             W3, W24
.text:0000000000050BE0                 BL              .VMCheckKeyGroup
.text:0000000000050BE4                 LDRH            W8, [X26]
.text:0000000000050BE8 loc_50BE8                               ; CODE XREF: VMStartVoice+A0↑j
.text:0000000000050BE8                 TBNZ            W8, #6, loc_50CB4
.text:0000000000050BEC                 LDR             X10, [X21,#0x1530]
.text:0000000000050BF0                 MOV             W13, #0x112A
.text:0000000000050BF4                 MOV             X9, XZR
.text:0000000000050BF8                 MOV             X11, XZR
.text:0000000000050BFC                 MOV             W12, WZR
.text:0000000000050C00                 ADD             X10, X10, #0xA
.text:0000000000050C04                 MOV             W8, WZR
.text:0000000000050C08                 ADD             X13, X21, X13
.text:0000000000050C0C                 STR             X10, [X21,#0x1530]
.text:0000000000050C10                 LDRB            W10, [X20,#0x258]
.text:0000000000050C14                 ORR             W3, W24, W10,LSL#4
.text:0000000000050C18                 MOV             W10, #0x40 ; '@'
.text:0000000000050C1C loc_50C1C                               ; CODE XREF: VMStartVoice+160↓j
.text:0000000000050C1C                 ADD             X14, X13, X9
.text:0000000000050C20                 LDURB           W15, [X14,#-2]
.text:0000000000050C24                 CMP             W15, #5
.text:0000000000050C28                 B.NE            loc_50C48
.text:0000000000050C2C                 LDRB            W15, [X14,#3]
.text:0000000000050C30                 CMP             W15, W3,UXTB
.text:0000000000050C34                 B.NE            loc_50C84
.text:0000000000050C38                 LDRB            W14, [X14,#4]
.text:0000000000050C3C                 CMP             W14, W23,UXTB
.text:0000000000050C40                 CINC            W8, W8, EQ
.text:0000000000050C44                 B               loc_50C84
.text:0000000000050C48 ; ---------------------------------------------------------------------------
.text:0000000000050C48 loc_50C48                               ; CODE XREF: VMStartVoice+F8↑j
.text:0000000000050C48                 LDRB            W15, [X13,X9]
.text:0000000000050C4C                 CMP             W15, W3,UXTB
.text:0000000000050C50                 B.NE            loc_50C84
.text:0000000000050C54                 LDRB            W14, [X14,#1]
.text:0000000000050C58                 CMP             W14, W23,UXTB
.text:0000000000050C5C                 B.NE            loc_50C84
.text:0000000000050C60                 ADD             X14, X21, X9
.text:0000000000050C64                 LDRH            W15, [X21,#0x1544]
.text:0000000000050C68                 ADD             W8, W8, #1
.text:0000000000050C6C                 LDRH            W14, [X14,#0x1124]
.text:0000000000050C70                 SUB             W14, W15, W14
.text:0000000000050C74                 AND             W15, W14, #0xFFFF
.text:0000000000050C78                 CMP             W15, W12,UXTH
.text:0000000000050C7C                 CSEL            W10, W10, W11, CC
.text:0000000000050C80                 CSEL            W12, W12, W14, CC
.text:0000000000050C84 loc_50C84                               ; CODE XREF: VMStartVoice+104↑j
.text:0000000000050C84                                         ; VMStartVoice+114↑j ...
.text:0000000000050C84                 ADD             X11, X11, #1
.text:0000000000050C88                 ADD             X9, X9, #0x10
.text:0000000000050C8C                 CMP             X11, #0x40 ; '@'
.text:0000000000050C90                 B.NE            loc_50C1C
.text:0000000000050C94                 CMP             W10, #0x40 ; '@'
.text:0000000000050C98                 B.EQ            loc_50CB4
.text:0000000000050C9C                 CMP             W8, #2
.text:0000000000050CA0                 B.LT            loc_50CB4
.text:0000000000050CA4                 SXTW            X2, W10
.text:0000000000050CA8                 MOV             X0, X21
.text:0000000000050CAC                 MOV             X1, X20
.text:0000000000050CB0                 B               loc_50D44
.text:0000000000050CB4 ; ---------------------------------------------------------------------------
.text:0000000000050CB4 loc_50CB4                               ; CODE XREF: VMStartVoice+94↑j
.text:0000000000050CB4                                         ; VMStartVoice:loc_50BE8↑j ...
.text:0000000000050CB4                 LDRH            W9, [X21,#0x1542]
.text:0000000000050CB8                 LDRH            W8, [X21,#0x1540]
.text:0000000000050CBC                 CMP             W8, W9
.text:0000000000050CC0                 B.CS            loc_50D10
.text:0000000000050CC4                 LDRH            W10, [X20,#0x220]
.text:0000000000050CC8                 LDRH            W12, [X20,#0x222]
.text:0000000000050CCC                 SUB             W11, W10, #1
.text:0000000000050CD0                 CMP             W9, W11,UXTH
.text:0000000000050CD4                 CSEL            W9, W10, W9, HI
.text:0000000000050CD8                 CMP             W12, W9
.text:0000000000050CDC                 B.CS            loc_50D10
.text:0000000000050CE0                 MOV             W9, #0x1120
.text:0000000000050CE4                 MOV             X3, XZR
.text:0000000000050CE8                 ADD             X2, X21, X9
.text:0000000000050CEC loc_50CEC                               ; CODE XREF: VMStartVoice+1D4↓j
.text:0000000000050CEC                 LDRB            W9, [X2,#8]
.text:0000000000050CF0                 CBZ             W9, loc_50D80
.text:0000000000050CF4                 ADD             X9, X3, #1
.text:0000000000050CF8                 CMP             X3, #0x3F ; '?'
.text:0000000000050CFC                 ADD             X2, X2, #0x10
.text:0000000000050D00                 MOV             X3, X9
.text:0000000000050D04                 B.CC            loc_50CEC
.text:0000000000050D08                 MOV             W8, #0x40 ; '@'
.text:0000000000050D0C                 STR             W8, [SP,#0x50+var_4C]
.text:0000000000050D10 loc_50D10                               ; CODE XREF: VMStartVoice+190↑j
.text:0000000000050D10                                         ; VMStartVoice+1AC↑j
.text:0000000000050D10                 ADD             X2, SP, #0x50+var_4C
.text:0000000000050D14                 MOV             X0, X21
.text:0000000000050D18                 MOV             X1, X20
.text:0000000000050D1C                 MOV             W3, W24
.text:0000000000050D20                 MOV             W4, W23
.text:0000000000050D24                 MOV             X5, XZR
.text:0000000000050D28                 MOV             W6, #0x3F ; '?'
.text:0000000000050D2C                 BL              .VMStealVoice
.text:0000000000050D30                 CBNZ            X0, loc_50D54
.text:0000000000050D34                 LDRSW           X2, [SP,#0x50+var_4C]
.text:0000000000050D38                 MOV             X0, X21
.text:0000000000050D3C                 MOV             X1, X20
.text:0000000000050D40                 MOV             W3, W24
.text:0000000000050D44 loc_50D44                               ; CODE XREF: VMStartVoice+180↑j
.text:0000000000050D44                 MOV             W4, W23
.text:0000000000050D48                 MOV             W5, W22
.text:0000000000050D4C                 MOV             W6, W19
.text:0000000000050D50                 BL              sub_509A8
.text:0000000000050D54 loc_50D54                               ; CODE XREF: VMStartVoice+200↑j
.text:0000000000050D54                                         ; VMStartVoice+2D8↓j
.text:0000000000050D54                 LDR             X8, [X25,#0x28]
.text:0000000000050D58                 LDR             X9, [SP,#0x50+var_48]
.text:0000000000050D5C                 CMP             X8, X9
.text:0000000000050D60                 B.NE            loc_50E0C
.text:0000000000050D64                 LDP             X29, X30, [SP,#0x50+var_s0]
.text:0000000000050D68                 LDP             X20, X19, [SP,#0x50+var_10]
.text:0000000000050D6C                 LDP             X22, X21, [SP,#0x50+var_20]
.text:0000000000050D70                 LDP             X24, X23, [SP,#0x50+var_30]
.text:0000000000050D74                 LDP             X26, X25, [SP,#0x50+var_40]
.text:0000000000050D78                 ADD             SP, SP, #0x60 ; '`'
.text:0000000000050D7C                 RET
.text:0000000000050D80 ; ---------------------------------------------------------------------------
.text:0000000000050D80 loc_50D80                               ; CODE XREF: VMStartVoice+1C0↑j
.text:0000000000050D80                 ADD             W8, W8, #1
.text:0000000000050D84                 MOV             W11, #1
.text:0000000000050D88                 MOV             X0, X21
.text:0000000000050D8C                 STRH            W8, [X21,#0x1540]
.text:0000000000050D90                 MOV             X1, X20
.text:0000000000050D94                 LDRH            W8, [X20,#0x222]
.text:0000000000050D98                 MOV             W4, W19
.text:0000000000050D9C                 LDRB            W9, [X20,#0x258]
.text:0000000000050DA0                 STR             W3, [SP,#0x50+var_4C]
.text:0000000000050DA4                 ADD             W8, W8, #1
.text:0000000000050DA8                 ORR             W9, W24, W9,LSL#4
.text:0000000000050DAC                 LSR             W12, W9, #1
.text:0000000000050DB0                 STRH            W8, [X20,#0x222]
.text:0000000000050DB4                 STRB            W9, [X2,#0xA]
.text:0000000000050DB8                 AND             W9, W9, #0xF
.text:0000000000050DBC                 STRB            W23, [X2,#0xB]
.text:0000000000050DC0                 STRB            W22, [X2,#0xC]
.text:0000000000050DC4                 LDRH            W8, [X21,#0x1544]
.text:0000000000050DC8                 ADD             W10, W8, #1
.text:0000000000050DCC                 STRH            W10, [X21,#0x1544]
.text:0000000000050DD0                 AND             X10, X12, #0x78
.text:0000000000050DD4                 STRH            W8, [X2,#4]
.text:0000000000050DD8                 STRB            W11, [X2,#8]
.text:0000000000050DDC                 LDR             X8, [X21,X10]
.text:0000000000050DE0                 ADRP            X10, #wtSynth_ptr@PAGE
.text:0000000000050DE4                 ADD             X9, X8, X9,LSL#5
.text:0000000000050DE8                 LDRB            W9, [X9,#0x35]
.text:0000000000050DEC                 ADD             X8, X8, X9
.text:0000000000050DF0                 LDRB            W9, [X8,#0x236]
.text:0000000000050DF4                 LDR             X10, [X10,#wtSynth_ptr@PAGEOFF]
.text:0000000000050DF8                 ADD             W9, W9, #1
.text:0000000000050DFC                 LDR             X10, [X10,#(off_582F8 - 0x582F0)] ; sub_52C38
.text:0000000000050E00                 STRB            W9, [X8,#0x236]
.text:0000000000050E04                 BLR             X10
.text:0000000000050E08                 B               loc_50D54
.text:0000000000050E0C ; ---------------------------------------------------------------------------
.text:0000000000050E0C loc_50E0C                               ; CODE XREF: VMStartVoice+230↑j
.text:0000000000050E0C                 BL              .__stack_chk_fail
.text:0000000000050E0C ; } // starts at 50B30
.text:0000000000050E0C ; End of function VMStartVoice
.text:0000000000050E10 ; =============== S U B R O U T I N E =======================================
.text:0000000000050E10                 EXPORT VMFindAvailableVoice
.text:0000000000050E10 VMFindAvailableVoice                    ; DATA XREF: LOAD:0000000000001278↑o
.text:0000000000050E10 ; __unwind {
.text:0000000000050E10                 CMP             X3, W2,SXTW
.text:0000000000050E14                 B.GE            loc_50E20
.text:0000000000050E18                 MOV             X0, #0xFFFFFFFFFFFFFFFF
.text:0000000000050E1C                 B               loc_50E4C
.text:0000000000050E20 ; ---------------------------------------------------------------------------
.text:0000000000050E20 loc_50E20                               ; CODE XREF: VMFindAvailableVoice+4↑j
.text:0000000000050E20                 ADD             X8, X0, W2,SXTW#4
.text:0000000000050E24                 MOV             W9, #0x1128
.text:0000000000050E28                 ADD             X9, X8, X9
.text:0000000000050E2C                 MOV             X0, #0xFFFFFFFFFFFFFFFF
.text:0000000000050E30                 SXTW            X8, W2
.text:0000000000050E34 loc_50E34                               ; CODE XREF: VMFindAvailableVoice+38↓j
.text:0000000000050E34                 LDRB            W10, [X9]
.text:0000000000050E38                 CBZ             W10, loc_50E58
.text:0000000000050E3C                 ADD             X8, X8, #1
.text:0000000000050E40                 ADD             X9, X9, #0x10
.text:0000000000050E44                 CMP             X8, X3
.text:0000000000050E48                 B.LE            loc_50E34
.text:0000000000050E4C loc_50E4C                               ; CODE XREF: VMFindAvailableVoice+C↑j
.text:0000000000050E4C                 MOV             W8, #0x40 ; '@'
.text:0000000000050E50                 STR             W8, [X1]
.text:0000000000050E54                 RET
.text:0000000000050E58 ; ---------------------------------------------------------------------------
.text:0000000000050E58 loc_50E58                               ; CODE XREF: VMFindAvailableVoice+28↑j
.text:0000000000050E58                 MOV             X0, XZR
.text:0000000000050E5C                 STR             W8, [X1]
.text:0000000000050E60                 RET
.text:0000000000050E60 ; } // starts at 50E10
.text:0000000000050E60 ; End of function VMFindAvailableVoice
.text:0000000000050E60 ; ---------------------------------------------------------------------------
.text:0000000000050E64                 ALIGN 8
.text:0000000000050E68 ; =============== S U B R O U T I N E =======================================
.text:0000000000050E68                 EXPORT VMStealVoice
.text:0000000000050E68 VMStealVoice                            ; CODE XREF: .VMStealVoice+C↓j
.text:0000000000050E68                                         ; DATA XREF: LOAD:0000000000000FC0↑o ...
.text:0000000000050E68 var_20          = -0x20
.text:0000000000050E68 var_10          = -0x10
.text:0000000000050E68 ; __unwind {
.text:0000000000050E68                 CMP             X6, W5,SXTW
.text:0000000000050E6C                 B.GE            loc_50E78
.text:0000000000050E70                 MOV             X0, #0xFFFFFFFFFFFFFFEA
.text:0000000000050E74                 RET
.text:0000000000050E78 ; ---------------------------------------------------------------------------
.text:0000000000050E78 loc_50E78                               ; CODE XREF: VMStealVoice+4↑j
.text:0000000000050E78                 STR             X21, [SP,#var_20]!
.text:0000000000050E7C                 STP             X20, X19, [SP,#0x20+var_10]
.text:0000000000050E80                 ADD             X9, X0, W5,SXTW#4
.text:0000000000050E84                 MOV             W10, #0x1122
.text:0000000000050E88                 MOV             X8, XZR
.text:0000000000050E8C                 ADD             X10, X9, X10
.text:0000000000050E90                 MOV             W9, #0x40 ; '@'
.text:0000000000050E94                 MOV             W11, #0x112A
.text:0000000000050E98                 MOV             W12, #0x112B
.text:0000000000050E9C                 MOV             W13, #0x80
.text:0000000000050EA0                 AND             W14, W3, #0xFF
.text:0000000000050EA4                 MOV             W15, #0x180
.text:0000000000050EA8                 SXTW            X16, W5
.text:0000000000050EAC loc_50EAC                               ; CODE XREF: VMStealVoice+128↓j
.text:0000000000050EAC                 LDRB            W5, [X10,#6]
.text:0000000000050EB0                 CBZ             W5, loc_50F84
.text:0000000000050EB4                 ADD             X3, X0, X16,LSL#4
.text:0000000000050EB8                 LDRB            W19, [X1,#0x25A]
.text:0000000000050EBC                 CMP             W5, #5
.text:0000000000050EC0                 ADD             X17, X10, #0xB
.text:0000000000050EC4                 ADD             X7, X3, X11
.text:0000000000050EC8                 CSEL            X17, X7, X17, NE
.text:0000000000050ECC                 ADD             X3, X3, X12
.text:0000000000050ED0                 ADD             X21, X10, #0xC
.text:0000000000050ED4                 LDRB            W17, [X17]
.text:0000000000050ED8                 CSEL            X3, X3, X21, NE
.text:0000000000050EDC                 LSR             X7, X17, #1
.text:0000000000050EE0                 AND             X7, X7, #0x78
.text:0000000000050EE4                 LDR             X7, [X0,X7]
.text:0000000000050EE8                 LDRB            W20, [X7,#0x25A]
.text:0000000000050EEC                 CMP             W19, W20
.text:0000000000050EF0                 B.HI            loc_50F84
.text:0000000000050EF4                 LDRB            W3, [X3]
.text:0000000000050EF8                 CMP             W5, #5
.text:0000000000050EFC                 B.EQ            loc_50F28
.text:0000000000050F00                 LDRB            W5, [X10,#7]
.text:0000000000050F04                 TBNZ            W5, #3, loc_50F28
.text:0000000000050F08                 LDRSH           W5, [X10]
.text:0000000000050F0C                 LDRH            W19, [X10,#2]
.text:0000000000050F10                 SUB             W5, W15, W5,ASR#8
.text:0000000000050F14                 LSL             X19, X19, #1
.text:0000000000050F18                 ADD             X5, X19, W5,SXTW
.text:0000000000050F1C                 LDRB            W19, [X1,#0x256]
.text:0000000000050F20                 TBNZ            W19, #1, loc_50F38
.text:0000000000050F24                 B               loc_50F68
.text:0000000000050F28 ; ---------------------------------------------------------------------------
.text:0000000000050F28 loc_50F28                               ; CODE XREF: VMStealVoice+94↑j
.text:0000000000050F28                                         ; VMStealVoice+9C↑j
.text:0000000000050F28                 LDRB            W5, [X10,#0xD]
.text:0000000000050F2C                 SUB             X5, X13, X5
.text:0000000000050F30                 LDRB            W19, [X1,#0x256]
.text:0000000000050F34                 TBZ             W19, #1, loc_50F68
.text:0000000000050F38 loc_50F38                               ; CODE XREF: VMStealVoice+B8↑j
.text:0000000000050F38                 AND             X19, X17, #0xF
.text:0000000000050F3C                 ADD             X7, X7, X19,LSL#5
.text:0000000000050F40                 LDRB            W7, [X7,#0x35]
.text:0000000000050F44                 ADD             X19, X1, X7
.text:0000000000050F48                 LDRB            W20, [X19,#0x236]
.text:0000000000050F4C                 LDRB            W19, [X19,#0x246]
.text:0000000000050F50                 SUBS            W19, W20, W19
.text:0000000000050F54                 B.CC            loc_50F64
.text:0000000000050F58                 LSL             W19, W19, #0xC
.text:0000000000050F5C                 ADD             W19, W19, #1,LSL#12
.text:0000000000050F60                 ADD             X5, X5, W19,SXTW
.text:0000000000050F64 loc_50F64                               ; CODE XREF: VMStealVoice+EC↑j
.text:0000000000050F64                 ADD             X5, X5, X7,LSL#2
.text:0000000000050F68 loc_50F68                               ; CODE XREF: VMStealVoice+BC↑j
.text:0000000000050F68                                         ; VMStealVoice+CC↑j
.text:0000000000050F68                 CMP             W3, W4,UXTB
.text:0000000000050F6C                 CCMP            W17, W14, #0, EQ
.text:0000000000050F70                 ADD             X17, X5, #0x80
.text:0000000000050F74                 CSEL            X17, X17, X5, EQ
.text:0000000000050F78                 CMP             X17, X8
.text:0000000000050F7C                 CSEL            W9, W9, W16, LT
.text:0000000000050F80                 CSEL            X8, X8, X17, LT
.text:0000000000050F84 loc_50F84                               ; CODE XREF: VMStealVoice+48↑j
.text:0000000000050F84                                         ; VMStealVoice+88↑j
.text:0000000000050F84                 ADD             X16, X16, #1
.text:0000000000050F88                 ADD             X10, X10, #0x10
.text:0000000000050F8C                 CMP             X16, X6
.text:0000000000050F90                 B.LE            loc_50EAC
.text:0000000000050F94                 LDP             X20, X19, [SP,#0x20+var_10]
.text:0000000000050F98                 CMP             W9, #0x40 ; '@'
.text:0000000000050F9C                 LDR             X21, [SP+0x20+var_20],#0x20
.text:0000000000050FA0                 B.NE            loc_50FAC
.text:0000000000050FA4                 MOV             X0, #0xFFFFFFFFFFFFFFEA
.text:0000000000050FA8                 RET
.text:0000000000050FAC ; ---------------------------------------------------------------------------
.text:0000000000050FAC loc_50FAC                               ; CODE XREF: VMStealVoice+138↑j
.text:0000000000050FAC                 AND             W8, W9, #0xFFFF
.text:0000000000050FB0                 MOV             X0, XZR
.text:0000000000050FB4                 STR             W8, [X2]
.text:0000000000050FB8                 RET
.text:0000000000050FB8 ; } // starts at 50E68
.text:0000000000050FB8 ; End of function VMStealVoice
.text:0000000000050FB8 ; ---------------------------------------------------------------------------
.text:0000000000050FBC                 ALIGN 0x20
.text:0000000000050FC0 ; =============== S U B R O U T I N E =======================================
.text:0000000000050FC0 ; Attributes: bp-based frame
.text:0000000000050FC0                 EXPORT VMStartNote
.text:0000000000050FC0 VMStartNote                             ; CODE XREF: .VMStartNote+C↓j
.text:0000000000050FC0                                         ; DATA XREF: LOAD:00000000000006C0↑o ...
.text:0000000000050FC0 var_50          = -0x50
.text:0000000000050FC0 var_40          = -0x40
.text:0000000000050FC0 var_30          = -0x30
.text:0000000000050FC0 var_20          = -0x20
.text:0000000000050FC0 var_10          = -0x10
.text:0000000000050FC0 var_s0          =  0
.text:0000000000050FC0 ; __unwind {
.text:0000000000050FC0                 STR             X27, [SP,#-0x10+var_50]!
.text:0000000000050FC4                 STP             X26, X25, [SP,#0x50+var_40]
.text:0000000000050FC8                 STP             X24, X23, [SP,#0x50+var_30]
.text:0000000000050FCC                 STP             X22, X21, [SP,#0x50+var_20]
.text:0000000000050FD0                 STP             X20, X19, [SP,#0x50+var_10]
.text:0000000000050FD4                 STP             X29, X30, [SP,#0x50+var_s0]
.text:0000000000050FD8                 ADD             X29, SP, #0x50
.text:0000000000050FDC                 MOV             W21, W2
.text:0000000000050FE0                 LDR             X10, [X1,#0x218]
.text:0000000000050FE4                 AND             X8, X21, #0xFF
.text:0000000000050FE8                 ADD             X9, X1, X8,LSL#5
.text:0000000000050FEC                 ADD             X10, X10, #1
.text:0000000000050FF0                 LDRB            W8, [X9,#0x34]
.text:0000000000050FF4                 STR             X10, [X1,#0x218]
.text:0000000000050FF8                 TBNZ            W8, #1, loc_51144
.text:0000000000050FFC                 LDRH            W5, [X9,#0x22]
.text:0000000000051000                 MOV             W19, W4
.text:0000000000051004                 LDRSB           W9, [X9,#0x32]
.text:0000000000051008                 MOV             X22, X1
.text:000000000005100C                 MOV             W20, W3
.text:0000000000051010                 MOV             X23, X0
.text:0000000000051014                 TBNZ            W8, #3, loc_51028
.text:0000000000051018                 LDRSB           W8, [X22,#0x257]
.text:000000000005101C                 ADD             W9, W9, W20,UXTB
.text:0000000000051020                 ADD             W8, W9, W8
.text:0000000000051024                 B               loc_5102C
.text:0000000000051028 ; ---------------------------------------------------------------------------
.text:0000000000051028 loc_51028                               ; CODE XREF: VMStartNote+54↑j
.text:0000000000051028                 ADD             W8, W9, W20,UXTB
.text:000000000005102C loc_5102C                               ; CODE XREF: VMStartNote+64↑j
.text:000000000005102C                 CMP             W8, #0x7F
.text:0000000000051030                 MOV             W9, #0x7F
.text:0000000000051034                 CSEL            W8, W8, W9, LT
.text:0000000000051038                 BIC             W25, W8, W8,ASR#31
.text:000000000005103C                 TBNZ            W5, #0xE, loc_510B4
.text:0000000000051040                 MOV             W9, #0x28 ; '('
.text:0000000000051044 loc_51044                               ; CODE XREF: VMStartNote+D8↓j
.text:0000000000051044                 AND             W8, W5, #0xFFFF
.text:0000000000051048                 TBNZ            W5, #0xE, loc_5105C
.text:000000000005104C                 LDR             X10, [X22,#8]
.text:0000000000051050                 LDR             X10, [X10,#0x20]
.text:0000000000051054                 ADD             X10, X10, X8,LSL#5
.text:0000000000051058                 B               loc_51070
.text:000000000005105C ; ---------------------------------------------------------------------------
.text:000000000005105C loc_5105C                               ; CODE XREF: VMStartNote+88↑j
.text:000000000005105C                 LDR             X10, [X22,#0x10]
.text:0000000000051060                 AND             W11, W8, #0x3FFF
.text:0000000000051064                 LDR             X10, [X10,#8]
.text:0000000000051068                 NOP
.text:000000000005106C                 UMADDL          X10, W11, W9, X10
.text:0000000000051070 loc_51070                               ; CODE XREF: VMStartNote+98↑j
.text:0000000000051070                 LDRB            W11, [X10,#2]
.text:0000000000051074                 CMP             W25, W11
.text:0000000000051078                 B.LT            loc_51088
.text:000000000005107C                 LDRB            W11, [X10,#3]
.text:0000000000051080                 CMP             W25, W11
.text:0000000000051084                 B.LE            loc_51160
.text:0000000000051088 loc_51088                               ; CODE XREF: VMStartNote+B8↑j
.text:0000000000051088                 LDRSH           W10, [X10]
.text:000000000005108C                 MVN             W11, W10
.text:0000000000051090                 AND             W11, W11, #0x8000
.text:0000000000051094                 ADD             W5, W8, W11,LSR#15
.text:0000000000051098                 TBZ             W10, #0x1F, loc_51044
.text:000000000005109C                 MOV             X0, X23
.text:00000000000510A0                 MOV             X1, X22
.text:00000000000510A4                 MOV             W2, W21
.text:00000000000510A8                 MOV             W3, W20
.text:00000000000510AC                 MOV             W4, W19
.text:00000000000510B0                 B               loc_51178
.text:00000000000510B4 ; ---------------------------------------------------------------------------
.text:00000000000510B4 loc_510B4                               ; CODE XREF: VMStartNote+7C↑j
.text:00000000000510B4                 MOV             W26, #0x28 ; '('
.text:00000000000510B8 loc_510B8                               ; CODE XREF: VMStartNote+180↓j
.text:00000000000510B8                 AND             W24, W5, #0xFFFF
.text:00000000000510BC                 TBNZ            W5, #0xE, loc_510D0
.text:00000000000510C0                 LDR             X8, [X22,#8]
.text:00000000000510C4                 LDR             X8, [X8,#0x20]
.text:00000000000510C8                 ADD             X27, X8, X24,LSL#5
.text:00000000000510CC                 B               loc_510E4
.text:00000000000510D0 ; ---------------------------------------------------------------------------
.text:00000000000510D0 loc_510D0                               ; CODE XREF: VMStartNote+FC↑j
.text:00000000000510D0                 LDR             X8, [X22,#0x10]
.text:00000000000510D4                 AND             W9, W24, #0x3FFF
.text:00000000000510D8                 LDR             X8, [X8,#8]
.text:00000000000510DC                 NOP
.text:00000000000510E0                 UMADDL          X27, W9, W26, X8
.text:00000000000510E4 loc_510E4                               ; CODE XREF: VMStartNote+10C↑j
.text:00000000000510E4                 LDRB            W8, [X27,#2]
.text:00000000000510E8                 CMP             W25, W8
.text:00000000000510EC                 B.LT            loc_51130
.text:00000000000510F0                 LDRB            W8, [X27,#3]
.text:00000000000510F4                 CMP             W25, W8
.text:00000000000510F8                 B.GT            loc_51130
.text:00000000000510FC                 LDRB            W8, [X27,#0x20]
.text:0000000000051100                 CMP             W8, W19,UXTB
.text:0000000000051104                 B.HI            loc_51130
.text:0000000000051108                 LDRB            W8, [X27,#0x21]
.text:000000000005110C                 CMP             W8, W19,UXTB
.text:0000000000051110                 B.CC            loc_51130
.text:0000000000051114                 MOV             X0, X23
.text:0000000000051118                 MOV             X1, X22
.text:000000000005111C                 MOV             W2, W21
.text:0000000000051120                 MOV             W3, W20
.text:0000000000051124                 MOV             W4, W19
.text:0000000000051128                 MOV             W5, W24
.text:000000000005112C                 BL              .VMStartVoice
.text:0000000000051130 loc_51130                               ; CODE XREF: VMStartNote+12C↑j
.text:0000000000051130                                         ; VMStartNote+138↑j ...
.text:0000000000051130                 LDRSH           W8, [X27]
.text:0000000000051134                 MVN             W9, W8
.text:0000000000051138                 AND             W9, W9, #0x8000
.text:000000000005113C                 ADD             W5, W24, W9,LSR#15
.text:0000000000051140                 TBZ             W8, #0x1F, loc_510B8
.text:0000000000051144 loc_51144                               ; CODE XREF: VMStartNote+38↑j
.text:0000000000051144                 LDP             X29, X30, [SP,#0x50+var_s0]
.text:0000000000051148                 LDP             X20, X19, [SP,#0x50+var_10]
.text:000000000005114C                 LDP             X22, X21, [SP,#0x50+var_20]
.text:0000000000051150                 LDP             X24, X23, [SP,#0x50+var_30]
.text:0000000000051154                 LDP             X26, X25, [SP,#0x50+var_40]
.text:0000000000051158                 LDR             X27, [SP+0x50+var_50],#0x60
.text:000000000005115C                 RET
.text:0000000000051160 ; ---------------------------------------------------------------------------
.text:0000000000051160 loc_51160                               ; CODE XREF: VMStartNote+C4↑j
.text:0000000000051160                 MOV             X0, X23
.text:0000000000051164                 MOV             X1, X22
.text:0000000000051168                 MOV             W2, W21
.text:000000000005116C                 MOV             W3, W20
.text:0000000000051170                 MOV             W4, W19
.text:0000000000051174                 MOV             W5, W8
.text:0000000000051178 loc_51178                               ; CODE XREF: VMStartNote+F0↑j
.text:0000000000051178                 LDP             X29, X30, [SP,#0x50+var_s0]
.text:000000000005117C                 LDP             X20, X19, [SP,#0x50+var_10]
.text:0000000000051180                 LDP             X22, X21, [SP,#0x50+var_20]
.text:0000000000051184                 LDP             X24, X23, [SP,#0x50+var_30]
.text:0000000000051188                 LDP             X26, X25, [SP,#0x50+var_40]
.text:000000000005118C                 LDR             X27, [SP+0x50+var_50],#0x60
.text:0000000000051190                 B               .VMStartVoice
.text:0000000000051190 ; } // starts at 50FC0
.text:0000000000051190 ; End of function VMStartNote
.text:0000000000051190 ; ---------------------------------------------------------------------------
.text:0000000000051194                 ALIGN 8
.text:0000000000051198 ; =============== S U B R O U T I N E =======================================
.text:0000000000051198 ; Attributes: bp-based frame
.text:0000000000051198                 EXPORT VMStopNote
.text:0000000000051198 VMStopNote                              ; CODE XREF: .VMStopNote+C↓j
.text:0000000000051198                                         ; DATA XREF: LOAD:0000000000001518↑o ...
.text:0000000000051198 var_50          = -0x50
.text:0000000000051198 var_40          = -0x40
.text:0000000000051198 var_30          = -0x30
.text:0000000000051198 var_20          = -0x20
.text:0000000000051198 var_10          = -0x10
.text:0000000000051198 var_s0          =  0
.text:0000000000051198 ; __unwind {
.text:0000000000051198                 STP             X28, X27, [SP,#-0x10+var_50]!
.text:000000000005119C                 STP             X26, X25, [SP,#0x50+var_40]
.text:00000000000511A0                 STP             X24, X23, [SP,#0x50+var_30]
.text:00000000000511A4                 STP             X22, X21, [SP,#0x50+var_20]
.text:00000000000511A8                 STP             X20, X19, [SP,#0x50+var_10]
.text:00000000000511AC                 STP             X29, X30, [SP,#0x50+var_s0]
.text:00000000000511B0                 ADD             X29, SP, #0x50
.text:00000000000511B4                 LDR             X8, [X0,#0x1530]
.text:00000000000511B8                 ADRP            X9, #wtSynth_ptr@PAGE
.text:00000000000511BC                 MOV             W10, #0x1128
.text:00000000000511C0                 MOV             W19, W3
.text:00000000000511C4                 LDR             X9, [X9,#wtSynth_ptr@PAGEOFF]
.text:00000000000511C8                 MOV             X20, X0
.text:00000000000511CC                 ADD             X8, X8, #0xA
.text:00000000000511D0                 MOV             X21, X1
.text:00000000000511D4                 MOV             X23, XZR
.text:00000000000511D8                 STR             X8, [X0,#0x1530]
.text:00000000000511DC                 AND             X8, X2, #0xFF
.text:00000000000511E0                 LDRB            W11, [X1,#0x258]
.text:00000000000511E4                 MOV             X22, XZR
.text:00000000000511E8                 ADD             X8, X1, X8,LSL#5
.text:00000000000511EC                 LDR             X28, [X9,#(off_58308 - 0x582F0)]
.text:00000000000511F0                 MOV             W12, #1
.text:00000000000511F4                 ADD             X26, X0, X10
.text:00000000000511F8                 ADD             X27, X8, #0x34 ; '4'
.text:00000000000511FC                 ORR             W24, W2, W11,LSL#4
.text:0000000000051200                 MOV             W25, #0x19
.text:0000000000051204                 B               loc_51220
.text:0000000000051208 ; ---------------------------------------------------------------------------
.text:0000000000051208 loc_51208                               ; CODE XREF: VMStopNote+E0↓j
.text:0000000000051208                 ORR             W9, W10, #4
.text:000000000005120C                 STRB            W9, [X8,#1]
.text:0000000000051210                 LDRB            W8, [X21,#0x256]
.text:0000000000051214                 ORR             W8, W8, #8
.text:0000000000051218                 STRB            W8, [X21,#0x256]
.text:000000000005121C                 B               loc_512BC
.text:0000000000051220 ; ---------------------------------------------------------------------------
.text:0000000000051220 loc_51220                               ; CODE XREF: VMStopNote+6C↑j
.text:0000000000051220                                         ; VMStopNote+130↓j
.text:0000000000051220                 LDRB            W9, [X26,X23]
.text:0000000000051224                 ADD             X8, X26, X23
.text:0000000000051228                 CMP             W9, #5
.text:000000000005122C                 B.NE            loc_51254
.text:0000000000051230                 LDRB            W9, [X8,#5]
.text:0000000000051234                 CMP             W9, W24,UXTB
.text:0000000000051238                 B.NE            loc_512BC
.text:000000000005123C                 LDRB            W9, [X8,#6]
.text:0000000000051240                 CMP             W9, W19,UXTB
.text:0000000000051244                 B.NE            loc_512BC
.text:0000000000051248                 LDRB            W9, [X8,#1]
.text:000000000005124C                 ORR             W9, W9, #4
.text:0000000000051250                 B               loc_512B8
.text:0000000000051254 ; ---------------------------------------------------------------------------
.text:0000000000051254 loc_51254                               ; CODE XREF: VMStopNote+94↑j
.text:0000000000051254                 LDRB            W10, [X8,#2]
.text:0000000000051258                 CMP             W10, W24,UXTB
.text:000000000005125C                 B.NE            loc_512BC
.text:0000000000051260                 LDRB            W10, [X8,#3]
.text:0000000000051264                 CMP             W10, W19,UXTB
.text:0000000000051268                 B.NE            loc_512BC
.text:000000000005126C                 LDRB            W11, [X27]
.text:0000000000051270                 LDRB            W10, [X8,#1]
.text:0000000000051274                 TBNZ            W11, #0, loc_512B4
.text:0000000000051278                 TBNZ            W10, #3, loc_51208
.text:000000000005127C                 CMP             W9, #4
.text:0000000000051280                 B.HI            loc_51290
.text:0000000000051284                 LSL             W9, W12, W9
.text:0000000000051288                 TST             W9, W25
.text:000000000005128C                 B.NE            loc_512BC
.text:0000000000051290 loc_51290                               ; CODE XREF: VMStopNote+E8↑j
.text:0000000000051290                 SUB             X2, X8, #8
.text:0000000000051294                 MOV             X0, X20
.text:0000000000051298                 MOV             X1, X21
.text:000000000005129C                 MOV             X3, X22
.text:00000000000512A0                 BLR             X28
.text:00000000000512A4                 MOV             W8, #3
.text:00000000000512A8                 MOV             W12, #1
.text:00000000000512AC                 STRB            W8, [X26,X23]
.text:00000000000512B0                 B               loc_512BC
.text:00000000000512B4 ; ---------------------------------------------------------------------------
.text:00000000000512B4 loc_512B4                               ; CODE XREF: VMStopNote+DC↑j
.text:00000000000512B4                 ORR             W9, W10, #2
.text:00000000000512B8 loc_512B8                               ; CODE XREF: VMStopNote+B8↑j
.text:00000000000512B8                 STRB            W9, [X8,#1]
.text:00000000000512BC loc_512BC                               ; CODE XREF: VMStopNote+84↑j
.text:00000000000512BC                                         ; VMStopNote+A0↑j ...
.text:00000000000512BC                 ADD             X22, X22, #1
.text:00000000000512C0                 ADD             X23, X23, #0x10
.text:00000000000512C4                 CMP             X22, #0x40 ; '@'
.text:00000000000512C8                 B.NE            loc_51220
.text:00000000000512CC                 LDP             X29, X30, [SP,#0x50+var_s0]
.text:00000000000512D0                 LDP             X20, X19, [SP,#0x50+var_10]
.text:00000000000512D4                 LDP             X22, X21, [SP,#0x50+var_20]
.text:00000000000512D8                 LDP             X24, X23, [SP,#0x50+var_30]
.text:00000000000512DC                 LDP             X26, X25, [SP,#0x50+var_40]
.text:00000000000512E0                 LDP             X28, X27, [SP+0x50+var_50],#0x60
.text:00000000000512E4                 RET
.text:00000000000512E4 ; } // starts at 51198
.text:00000000000512E4 ; End of function VMStopNote
.text:00000000000512E8 ; =============== S U B R O U T I N E =======================================
.text:00000000000512E8                 EXPORT VMChannelPressure
.text:00000000000512E8 VMChannelPressure                       ; CODE XREF: .VMChannelPressure+C↓j
.text:00000000000512E8                                         ; DATA XREF: LOAD:0000000000001C50↑o ...
.text:00000000000512E8 ; __unwind {
.text:00000000000512E8                 AND             X8, X1, #0xFF
.text:00000000000512EC                 ADD             X8, X0, X8,LSL#5
.text:00000000000512F0                 LDRB            W9, [X8,#0x34]
.text:00000000000512F4                 STRB            W2, [X8,#0x33]
.text:00000000000512F8                 ORR             W9, W9, #4
.text:00000000000512FC                 STRB            W9, [X8,#0x34]
.text:0000000000051300                 RET
.text:0000000000051300 ; } // starts at 512E8
.text:0000000000051300 ; End of function VMChannelPressure
.text:0000000000051300 ; ---------------------------------------------------------------------------
.text:0000000000051304                 ALIGN 8
.text:0000000000051308 ; =============== S U B R O U T I N E =======================================
.text:0000000000051308                 EXPORT VMPitchBend
.text:0000000000051308 VMPitchBend                             ; CODE XREF: .VMPitchBend+C↓j
.text:0000000000051308                                         ; DATA XREF: LOAD:0000000000001920↑o ...
.text:0000000000051308 ; __unwind {
.text:0000000000051308                 AND             X8, X1, #0xFF
.text:000000000005130C                 AND             W10, W3, #0xFF
.text:0000000000051310                 ADD             X8, X0, X8,LSL#5
.text:0000000000051314                 AND             W11, W2, #0xFF
.text:0000000000051318                 ORR             W10, W11, W10,LSL#7
.text:000000000005131C                 LDRB            W9, [X8,#0x34]
.text:0000000000051320                 STRH            W10, [X8,#0x26]
.text:0000000000051324                 ORR             W9, W9, #4
.text:0000000000051328                 STRB            W9, [X8,#0x34]
.text:000000000005132C                 RET
.text:000000000005132C ; } // starts at 51308
.text:000000000005132C ; End of function VMPitchBend
.text:0000000000051330 ; =============== S U B R O U T I N E =======================================
.text:0000000000051330 ; Attributes: bp-based frame
.text:0000000000051330                 EXPORT VMControlChange
.text:0000000000051330 VMControlChange                         ; CODE XREF: .VMControlChange+C↓j
.text:0000000000051330                                         ; DATA XREF: LOAD:0000000000000E40↑o ...
.text:0000000000051330 var_40          = -0x40
.text:0000000000051330 var_30          = -0x30
.text:0000000000051330 var_20          = -0x20
.text:0000000000051330 var_10          = -0x10
.text:0000000000051330 var_s0          =  0
.text:0000000000051330 ; __unwind {
.text:0000000000051330                 STP             X26, X25, [SP,#-0x10+var_40]!
.text:0000000000051334                 STP             X24, X23, [SP,#0x40+var_30]
.text:0000000000051338                 STP             X22, X21, [SP,#0x40+var_20]
.text:000000000005133C                 STP             X20, X19, [SP,#0x40+var_10]
.text:0000000000051340                 STP             X29, X30, [SP,#0x40+var_s0]
.text:0000000000051344                 ADD             X29, SP, #0x40
.text:0000000000051348                 AND             X8, X2, #0xFF
.text:000000000005134C                 SXTB            W11, W3
.text:0000000000051350                 ADD             X8, X1, X8,LSL#5
.text:0000000000051354                 MOV             X24, X8
.text:0000000000051358                 LDRB            W10, [X24,#0x34]!
.text:000000000005135C                 ORR             W9, W10, #4
.text:0000000000051360                 STRB            W9, [X24]
.text:0000000000051364                 TBNZ            W11, #0x1F, loc_515C4
.text:0000000000051368                 ADRP            X12, #unk_5B9E@PAGE
.text:000000000005136C                 AND             X11, X3, #0xFF
.text:0000000000051370                 ADD             X12, X12, #unk_5B9E@PAGEOFF
.text:0000000000051374                 MOV             X19, X1
.text:0000000000051378                 MOV             X20, X0
.text:000000000005137C                 ADR             X13, loc_5138C
.text:0000000000051380                 LDRB            W14, [X12,X11]
.text:0000000000051384                 ADD             X13, X13, X14,LSL#2
.text:0000000000051388                 BR              X13
.text:000000000005138C ; ---------------------------------------------------------------------------
.text:000000000005138C loc_5138C                               ; DATA XREF: VMControlChange+4C↑o
.text:000000000005138C                 LDR             X8, [X20,#0x1530]
.text:0000000000051390                 ADRP            X9, #wtSynth_ptr@PAGE
.text:0000000000051394                 MOV             W10, #0x1128
.text:0000000000051398                 MOV             X22, XZR
.text:000000000005139C                 LDR             X9, [X9,#wtSynth_ptr@PAGEOFF]
.text:00000000000513A0                 MOV             X21, XZR
.text:00000000000513A4                 ADD             X8, X8, #5
.text:00000000000513A8                 ADD             X23, X20, X10
.text:00000000000513AC                 MOV             W26, #4
.text:00000000000513B0                 STR             X8, [X20,#0x1530]
.text:00000000000513B4                 LDRB            W8, [X19,#0x258]
.text:00000000000513B8                 LDR             X24, [X9,#(off_58310 - 0x582F0)]
.text:00000000000513BC                 ORR             W25, W2, W8,LSL#4
.text:00000000000513C0 loc_513C0                               ; CODE XREF: VMControlChange+E4↓j
.text:00000000000513C0                 LDRB            W9, [X23,X22]
.text:00000000000513C4                 CBZ             W9, loc_51408
.text:00000000000513C8                 ADD             X8, X23, X22
.text:00000000000513CC                 CMP             W9, #5
.text:00000000000513D0                 B.NE            loc_513E4
.text:00000000000513D4                 LDRB            W9, [X8,#5]
.text:00000000000513D8                 CMP             W9, W25,UXTB
.text:00000000000513DC                 B.EQ            loc_513F0
.text:00000000000513E0                 B               loc_51408
.text:00000000000513E4 ; ---------------------------------------------------------------------------
.text:00000000000513E4 loc_513E4                               ; CODE XREF: VMControlChange+A0↑j
.text:00000000000513E4                 LDRB            W9, [X8,#2]
.text:00000000000513E8                 CMP             W9, W25,UXTB
.text:00000000000513EC                 B.NE            loc_51408
.text:00000000000513F0 loc_513F0                               ; CODE XREF: VMControlChange+AC↑j
.text:00000000000513F0                 SUB             X2, X8, #8
.text:00000000000513F4                 MOV             X0, X20
.text:00000000000513F8                 MOV             X1, X19
.text:00000000000513FC                 MOV             X3, X21
.text:0000000000051400                 BLR             X24
.text:0000000000051404                 STRB            W26, [X23,X22]
.text:0000000000051408 loc_51408                               ; CODE XREF: VMControlChange+94↑j
.text:0000000000051408                                         ; VMControlChange+B0↑j ...
.text:0000000000051408                 ADD             X21, X21, #1
.text:000000000005140C                 ADD             X22, X22, #0x10
.text:0000000000051410                 CMP             X21, #0x40 ; '@'
.text:0000000000051414                 B.NE            loc_513C0
.text:0000000000051418                 B               loc_515C4
.text:000000000005141C ; ---------------------------------------------------------------------------
.text:000000000005141C                 MOV             W9, #0x3FFF
.text:0000000000051420                 STRH            W9, [X8,#0x2A]
.text:0000000000051424                 B               loc_515C4
.text:0000000000051428 ; ---------------------------------------------------------------------------
.text:0000000000051428                 LSL             W9, W4, #8
.text:000000000005142C                 STRH            W9, [X8,#0x24]
.text:0000000000051430                 B               loc_515C4
.text:0000000000051434 ; ---------------------------------------------------------------------------
.text:0000000000051434                 STRB            W4, [X8,#0x2D]
.text:0000000000051438                 B               loc_515C4
.text:000000000005143C ; ---------------------------------------------------------------------------
.text:000000000005143C                 LDRSH           W9, [X8,#0x2A]
.text:0000000000051440                 CMP             W9, #2
.text:0000000000051444                 B.EQ            loc_515A0
.text:0000000000051448                 CMP             W9, #1
.text:000000000005144C                 B.EQ            loc_515AC
.text:0000000000051450                 CBNZ            W9, loc_515C4
.text:0000000000051454                 AND             W9, W4, #0xFF
.text:0000000000051458                 MOV             W10, #0x64 ; 'd'
.text:000000000005145C                 MUL             W9, W9, W10
.text:0000000000051460                 STRH            W9, [X8,#0x28]
.text:0000000000051464                 B               loc_515C4
.text:0000000000051468 ; ---------------------------------------------------------------------------
.text:0000000000051468                 STRB            W4, [X8,#0x30]
.text:000000000005146C                 B               loc_515C4
.text:0000000000051470 ; ---------------------------------------------------------------------------
.text:0000000000051470                 STRB            W4, [X8,#0x24]
.text:0000000000051474                 B               loc_515C4
.text:0000000000051478 ; ---------------------------------------------------------------------------
.text:0000000000051478                 LDRH            W9, [X8,#0x2A]
.text:000000000005147C                 AND             W10, W4, #0xFF
.text:0000000000051480                 AND             W9, W9, #0x7F
.text:0000000000051484                 BFI             W9, W10, #7, #8
.text:0000000000051488                 STRH            W9, [X8,#0x2A]
.text:000000000005148C                 B               loc_515C4
.text:0000000000051490 ; ---------------------------------------------------------------------------
.text:0000000000051490                 STRB            W4, [X8,#0x2E]
.text:0000000000051494                 B               loc_515C4
.text:0000000000051498 ; ---------------------------------------------------------------------------
.text:0000000000051498                 STRB            W4, [X8,#0x2F]
.text:000000000005149C                 B               loc_515C4
.text:00000000000514A0 ; ---------------------------------------------------------------------------
.text:00000000000514A0                 AND             W8, W4, #0xFF
.text:00000000000514A4                 CMP             W8, #0x3F ; '?'
.text:00000000000514A8                 B.HI            loc_51514
.text:00000000000514AC                 TBZ             W10, #0, loc_514C0
.text:00000000000514B0                 MOV             X0, X20
.text:00000000000514B4                 MOV             X1, X19
.text:00000000000514B8                 BL              .VMReleaseAllDeferredNoteOffs
.text:00000000000514BC                 LDRB            W9, [X24]
.text:00000000000514C0 loc_514C0                               ; CODE XREF: VMControlChange+17C↑j
.text:00000000000514C0                 AND             W8, W9, #0xFE
.text:00000000000514C4                 STRB            W8, [X24]
.text:00000000000514C8                 B               loc_515C4
.text:00000000000514CC ; ---------------------------------------------------------------------------
.text:00000000000514CC                 LDRH            W9, [X8,#0x2A]
.text:00000000000514D0                 AND             W9, W9, #0x7F00
.text:00000000000514D4                 BFXIL           W9, W4, #0, #8
.text:00000000000514D8                 STRH            W9, [X8,#0x2A]
.text:00000000000514DC                 B               loc_515C4
.text:00000000000514E0 ; ---------------------------------------------------------------------------
.text:00000000000514E0                 MOV             W10, #0x7F
.text:00000000000514E4                 STRB            WZR, [X8,#0x2D]
.text:00000000000514E8                 AND             W9, W9, #0xFE
.text:00000000000514EC                 MOV             W11, #0x2000
.text:00000000000514F0                 STRB            W10, [X8,#0x30]
.text:00000000000514F4                 MOV             W10, #0x3FFF00C8
.text:00000000000514FC                 STRB            W9, [X24]
.text:0000000000051500                 STRH            W11, [X8,#0x26]
.text:0000000000051504                 STRB            WZR, [X8,#0x33]
.text:0000000000051508                 STR             W10, [X8,#0x28]
.text:000000000005150C                 STURH           WZR, [X8,#0x31]
.text:0000000000051510                 B               loc_515C4
.text:0000000000051514 ; ---------------------------------------------------------------------------
.text:0000000000051514 loc_51514                               ; CODE XREF: VMControlChange+178↑j
.text:0000000000051514                 TBNZ            W10, #0, loc_51594
.text:0000000000051518                 LDR             X8, [X20,#0x1530]
.text:000000000005151C                 ADRP            X9, #wtSynth_ptr@PAGE
.text:0000000000051520                 MOV             W10, #0x1120
.text:0000000000051524                 MOV             X21, XZR
.text:0000000000051528                 LDR             X9, [X9,#wtSynth_ptr@PAGEOFF]
.text:000000000005152C                 ADD             X23, X20, X10
.text:0000000000051530                 ADD             X8, X8, #5
.text:0000000000051534                 STR             X8, [X20,#0x1530]
.text:0000000000051538                 LDRB            W8, [X19,#0x258]
.text:000000000005153C                 LDR             X26, [X9,#(off_58318 - 0x582F0)]
.text:0000000000051540                 ORR             W25, W2, W8,LSL#4
.text:0000000000051544                 AND             X8, X25, #0xFF
.text:0000000000051548                 ADD             X8, X19, X8,LSL#5
.text:000000000005154C                 ADD             X22, X8, #0x18
.text:0000000000051550 loc_51550                               ; CODE XREF: VMControlChange+25C↓j
.text:0000000000051550                 LDRB            W8, [X23,#0xA]
.text:0000000000051554                 CMP             W8, W25,UXTB
.text:0000000000051558                 B.NE            loc_51580
.text:000000000005155C                 LDRB            W8, [X23,#8]
.text:0000000000051560                 CMP             W8, #3
.text:0000000000051564                 B.NE            loc_51580
.text:0000000000051568                 MOV             X0, X20
.text:000000000005156C                 MOV             X1, X19
.text:0000000000051570                 MOV             X2, X23
.text:0000000000051574                 MOV             X3, X22
.text:0000000000051578                 MOV             X4, X21
.text:000000000005157C                 BLR             X26
.text:0000000000051580 loc_51580                               ; CODE XREF: VMControlChange+228↑j
.text:0000000000051580                                         ; VMControlChange+234↑j
.text:0000000000051580                 ADD             X21, X21, #1
.text:0000000000051584                 ADD             X23, X23, #0x10
.text:0000000000051588                 CMP             X21, #0x40 ; '@'
.text:000000000005158C                 B.NE            loc_51550
.text:0000000000051590                 LDRB            W9, [X24]
.text:0000000000051594 loc_51594                               ; CODE XREF: VMControlChange:loc_51514↑j
.text:0000000000051594                 ORR             W8, W9, #1
.text:0000000000051598                 STRB            W8, [X24]
.text:000000000005159C                 B               loc_515C4
.text:00000000000515A0 ; ---------------------------------------------------------------------------
.text:00000000000515A0 loc_515A0                               ; CODE XREF: VMControlChange+114↑j
.text:00000000000515A0                 SUB             W9, W4, #0x40 ; '@'
.text:00000000000515A4                 STRB            W9, [X8,#0x32]
.text:00000000000515A8                 B               loc_515C4
.text:00000000000515AC ; ---------------------------------------------------------------------------
.text:00000000000515AC loc_515AC                               ; CODE XREF: VMControlChange+11C↑j
.text:00000000000515AC                 AND             W9, W4, #0xFF
.text:00000000000515B0                 MOV             W10, #0x3200
.text:00000000000515B4                 MUL             W9, W9, W10
.text:00000000000515B8                 ADD             W9, W9, #0x138,LSL#12
.text:00000000000515BC                 LSR             W9, W9, #0xD
.text:00000000000515C0                 STRB            W9, [X8,#0x31]
.text:00000000000515C4 loc_515C4                               ; CODE XREF: VMControlChange+34↑j
.text:00000000000515C4                                         ; VMControlChange+E8↑j ...
.text:00000000000515C4                 LDP             X29, X30, [SP,#0x40+var_s0]
.text:00000000000515C8                 LDP             X20, X19, [SP,#0x40+var_10]
.text:00000000000515CC                 LDP             X22, X21, [SP,#0x40+var_20]
.text:00000000000515D0                 LDP             X24, X23, [SP,#0x40+var_30]
.text:00000000000515D4                 LDP             X26, X25, [SP+0x40+var_40],#0x50
.text:00000000000515D8                 RET
.text:00000000000515D8 ; } // starts at 51330
.text:00000000000515D8 ; End of function VMControlChange
.text:00000000000515D8 ; ---------------------------------------------------------------------------
.text:00000000000515DC                 ALIGN 0x20
.text:00000000000515E0 ; =============== S U B R O U T I N E =======================================
.text:00000000000515E0                 EXPORT VMUpdateRPNStateMachine
.text:00000000000515E0 VMUpdateRPNStateMachine                 ; DATA XREF: LOAD:0000000000001110↑o
.text:00000000000515E0 ; __unwind {
.text:00000000000515E0                 AND             X9, X1, #0xFF
.text:00000000000515E4                 AND             W10, W2, #0xFF
.text:00000000000515E8                 MOV             X8, #0xFFFFFFFFFFFFFFFF
.text:00000000000515EC                 CMP             W10, #0x61 ; 'a'
.text:00000000000515F0                 B.LE            loc_5162C
.text:00000000000515F4                 SUB             W11, W10, #0x62 ; 'b'
.text:00000000000515F8                 CMP             W11, #2
.text:00000000000515FC                 B.CC            loc_51644
.text:0000000000051600                 CMP             W10, #0x64 ; 'd'
.text:0000000000051604                 B.EQ            loc_51684
.text:0000000000051608                 CMP             W10, #0x65 ; 'e'
.text:000000000005160C                 B.NE            loc_5163C
.text:0000000000051610                 ADD             X8, X0, X9,LSL#5
.text:0000000000051614                 AND             W10, W3, #0xFF
.text:0000000000051618                 LDRH            W9, [X8,#0x2A]
.text:000000000005161C                 AND             W9, W9, #0x7F
.text:0000000000051620                 BFI             W9, W10, #7, #8
.text:0000000000051624                 STRH            W9, [X8,#0x2A]
.text:0000000000051628                 B               loc_516C0
.text:000000000005162C ; ---------------------------------------------------------------------------
.text:000000000005162C loc_5162C                               ; CODE XREF: VMUpdateRPNStateMachine+10↑j
.text:000000000005162C                 CMP             W10, #6
.text:0000000000051630                 B.EQ            loc_51654
.text:0000000000051634                 CMP             W10, #0x26 ; '&'
.text:0000000000051638                 B.EQ            loc_516C0
.text:000000000005163C loc_5163C                               ; CODE XREF: VMUpdateRPNStateMachine+2C↑j
.text:000000000005163C                 MOV             X0, X8
.text:0000000000051640                 RET
.text:0000000000051644 ; ---------------------------------------------------------------------------
.text:0000000000051644 loc_51644                               ; CODE XREF: VMUpdateRPNStateMachine+1C↑j
.text:0000000000051644                 ADD             X8, X0, X9,LSL#5
.text:0000000000051648                 MOV             W9, #0x3FFF
.text:000000000005164C                 STRH            W9, [X8,#0x2A]
.text:0000000000051650                 B               loc_516C0
.text:0000000000051654 ; ---------------------------------------------------------------------------
.text:0000000000051654 loc_51654                               ; CODE XREF: VMUpdateRPNStateMachine+50↑j
.text:0000000000051654                 ADD             X8, X0, X9,LSL#5
.text:0000000000051658                 LDRSH           W9, [X8,#0x2A]
.text:000000000005165C                 CMP             W9, #2
.text:0000000000051660                 B.EQ            loc_5169C
.text:0000000000051664                 CMP             W9, #1
.text:0000000000051668                 B.EQ            loc_516A8
.text:000000000005166C                 CBNZ            W9, loc_516C0
.text:0000000000051670                 AND             W9, W3, #0xFF
.text:0000000000051674                 MOV             W10, #0x64 ; 'd'
.text:0000000000051678                 MUL             W9, W9, W10
.text:000000000005167C                 STRH            W9, [X8,#0x28]
.text:0000000000051680                 B               loc_516C0
.text:0000000000051684 ; ---------------------------------------------------------------------------
.text:0000000000051684 loc_51684                               ; CODE XREF: VMUpdateRPNStateMachine+24↑j
.text:0000000000051684                 ADD             X8, X0, X9,LSL#5
.text:0000000000051688                 LDRH            W9, [X8,#0x2A]
.text:000000000005168C                 AND             W9, W9, #0x7F00
.text:0000000000051690                 BFXIL           W9, W3, #0, #8
.text:0000000000051694                 STRH            W9, [X8,#0x2A]
.text:0000000000051698                 B               loc_516C0
.text:000000000005169C ; ---------------------------------------------------------------------------
.text:000000000005169C loc_5169C                               ; CODE XREF: VMUpdateRPNStateMachine+80↑j
.text:000000000005169C                 SUB             W9, W3, #0x40 ; '@'
.text:00000000000516A0                 STRB            W9, [X8,#0x32]
.text:00000000000516A4                 B               loc_516C0
.text:00000000000516A8 ; ---------------------------------------------------------------------------
.text:00000000000516A8 loc_516A8                               ; CODE XREF: VMUpdateRPNStateMachine+88↑j
.text:00000000000516A8                 AND             W9, W3, #0xFF
.text:00000000000516AC                 MOV             W10, #0x3200
.text:00000000000516B0                 MUL             W9, W9, W10
.text:00000000000516B4                 ADD             W9, W9, #0x138,LSL#12
.text:00000000000516B8                 LSR             W9, W9, #0xD
.text:00000000000516BC                 STRB            W9, [X8,#0x31]
.text:00000000000516C0 loc_516C0                               ; CODE XREF: VMUpdateRPNStateMachine+48↑j
.text:00000000000516C0                                         ; VMUpdateRPNStateMachine+58↑j ...
.text:00000000000516C0                 MOV             X8, XZR
.text:00000000000516C4                 MOV             X0, X8
.text:00000000000516C8                 RET
.text:00000000000516C8 ; } // starts at 515E0
.text:00000000000516C8 ; End of function VMUpdateRPNStateMachine
.text:00000000000516C8 ; ---------------------------------------------------------------------------
.text:00000000000516CC                 ALIGN 0x10
.text:00000000000516D0 ; =============== S U B R O U T I N E =======================================
.text:00000000000516D0 ; Attributes: bp-based frame
.text:00000000000516D0                 EXPORT VMUpdateStaticChannelParameters
.text:00000000000516D0 VMUpdateStaticChannelParameters         ; CODE XREF: .VMUpdateStaticChannelParameters+C↓j
.text:00000000000516D0                                         ; DATA XREF: LOAD:00000000000016C8↑o ...
.text:00000000000516D0 var_30          = -0x30
.text:00000000000516D0 var_20          = -0x20
.text:00000000000516D0 var_10          = -0x10
.text:00000000000516D0 var_s0          =  0
.text:00000000000516D0 ; __unwind {
.text:00000000000516D0                 STR             X23, [SP,#-0x10+var_30]!
.text:00000000000516D4                 STP             X22, X21, [SP,#0x30+var_20]
.text:00000000000516D8                 STP             X20, X19, [SP,#0x30+var_10]
.text:00000000000516DC                 STP             X29, X30, [SP,#0x30+var_s0]
.text:00000000000516E0                 ADD             X29, SP, #0x30
.text:00000000000516E4                 ADRP            X8, #wtSynth_ptr@PAGE
.text:00000000000516E8                 MOV             X19, X1
.text:00000000000516EC                 MOV             X20, X0
.text:00000000000516F0                 LDR             X8, [X8,#wtSynth_ptr@PAGEOFF]
.text:00000000000516F4                 LDRB            W9, [X1,#0x256]
.text:00000000000516F8                 LDR             X22, [X8,#(off_58320 - 0x582F0)] ; sub_534E0
.text:00000000000516FC                 TBNZ            W9, #2, loc_51734
.text:0000000000051700                 MOV             X21, XZR
.text:0000000000051704                 ADD             X23, X19, #0x34 ; '4'
.text:0000000000051708 loc_51708                               ; CODE XREF: VMUpdateStaticChannelParameters+5C↓j
.text:0000000000051708                 LDRB            W8, [X23]
.text:000000000005170C                 TBZ             W8, #2, loc_51720
.text:0000000000051710                 MOV             X0, X20
.text:0000000000051714                 MOV             X1, X19
.text:0000000000051718                 MOV             W2, W21
.text:000000000005171C                 BLR             X22
.text:0000000000051720 loc_51720                               ; CODE XREF: VMUpdateStaticChannelParameters+3C↑j
.text:0000000000051720                 ADD             X21, X21, #1
.text:0000000000051724                 ADD             X23, X23, #0x20 ; ' '
.text:0000000000051728                 CMP             X21, #0x10
.text:000000000005172C                 B.NE            loc_51708
.text:0000000000051730                 B               loc_51840
.text:0000000000051734 ; ---------------------------------------------------------------------------
.text:0000000000051734 loc_51734                               ; CODE XREF: VMUpdateStaticChannelParameters+2C↑j
.text:0000000000051734                 MOV             X0, X20
.text:0000000000051738                 MOV             X1, X19
.text:000000000005173C                 MOV             W2, WZR
.text:0000000000051740                 BLR             X22
.text:0000000000051744                 MOV             X0, X20
.text:0000000000051748                 MOV             X1, X19
.text:000000000005174C                 MOV             W2, #1
.text:0000000000051750                 BLR             X22
.text:0000000000051754                 MOV             X0, X20
.text:0000000000051758                 MOV             X1, X19
.text:000000000005175C                 MOV             W2, #2
.text:0000000000051760                 BLR             X22
.text:0000000000051764                 MOV             X0, X20
.text:0000000000051768                 MOV             X1, X19
.text:000000000005176C                 MOV             W2, #3
.text:0000000000051770                 BLR             X22
.text:0000000000051774                 MOV             X0, X20
.text:0000000000051778                 MOV             X1, X19
.text:000000000005177C                 MOV             W2, #4
.text:0000000000051780                 BLR             X22
.text:0000000000051784                 MOV             W2, #5
.text:0000000000051788                 MOV             X0, X20
.text:000000000005178C                 MOV             X1, X19
.text:0000000000051790                 BLR             X22
.text:0000000000051794                 MOV             X0, X20
.text:0000000000051798                 MOV             X1, X19
.text:000000000005179C                 MOV             W2, #6
.text:00000000000517A0                 BLR             X22
.text:00000000000517A4                 MOV             X0, X20
.text:00000000000517A8                 MOV             X1, X19
.text:00000000000517AC                 MOV             W2, #7
.text:00000000000517B0                 BLR             X22
.text:00000000000517B4                 MOV             X0, X20
.text:00000000000517B8                 MOV             X1, X19
.text:00000000000517BC                 MOV             W2, #8
.text:00000000000517C0                 BLR             X22
.text:00000000000517C4                 MOV             W2, #9
.text:00000000000517C8                 MOV             X0, X20
.text:00000000000517CC                 MOV             X1, X19
.text:00000000000517D0                 BLR             X22
.text:00000000000517D4                 MOV             W2, #0xA
.text:00000000000517D8                 MOV             X0, X20
.text:00000000000517DC                 MOV             X1, X19
.text:00000000000517E0                 BLR             X22
.text:00000000000517E4                 MOV             W2, #0xB
.text:00000000000517E8                 MOV             X0, X20
.text:00000000000517EC                 MOV             X1, X19
.text:00000000000517F0                 BLR             X22
.text:00000000000517F4                 MOV             X0, X20
.text:00000000000517F8                 MOV             X1, X19
.text:00000000000517FC                 MOV             W2, #0xC
.text:0000000000051800                 BLR             X22
.text:0000000000051804                 MOV             W2, #0xD
.text:0000000000051808                 MOV             X0, X20
.text:000000000005180C                 MOV             X1, X19
.text:0000000000051810                 BLR             X22
.text:0000000000051814                 MOV             X0, X20
.text:0000000000051818                 MOV             X1, X19
.text:000000000005181C                 MOV             W2, #0xE
.text:0000000000051820                 BLR             X22
.text:0000000000051824                 MOV             X0, X20
.text:0000000000051828                 MOV             X1, X19
.text:000000000005182C                 MOV             W2, #0xF
.text:0000000000051830                 BLR             X22
.text:0000000000051834                 LDRB            W8, [X19,#0x256]
.text:0000000000051838                 AND             W8, W8, #0xFFFFFFFB
.text:000000000005183C                 STRB            W8, [X19,#0x256]
.text:0000000000051840 loc_51840                               ; CODE XREF: VMUpdateStaticChannelParameters+60↑j
.text:0000000000051840                 LDP             X29, X30, [SP,#0x30+var_s0]
.text:0000000000051844                 LDP             X20, X19, [SP,#0x30+var_10]
.text:0000000000051848                 LDP             X22, X21, [SP,#0x30+var_20]
.text:000000000005184C                 LDR             X23, [SP+0x30+var_30],#0x40
.text:0000000000051850                 RET
.text:0000000000051850 ; } // starts at 516D0
.text:0000000000051850 ; End of function VMUpdateStaticChannelParameters
.text:0000000000051850 ; ---------------------------------------------------------------------------
.text:0000000000051854                 ALIGN 8
.text:0000000000051858 ; =============== S U B R O U T I N E =======================================
.text:0000000000051858 ; Attributes: bp-based frame
.text:0000000000051858                 EXPORT VMAddSamples
.text:0000000000051858 VMAddSamples                            ; CODE XREF: .VMAddSamples+C↓j
.text:0000000000051858                                         ; DATA XREF: LOAD:0000000000001C80↑o ...
.text:0000000000051858 var_88          = -0x88
.text:0000000000051858 var_80          = -0x80
.text:0000000000051858 var_74          = -0x74
.text:0000000000051858 var_70          = -0x70
.text:0000000000051858 var_68          = -0x68
.text:0000000000051858 var_60          = -0x60
.text:0000000000051858 var_58          = -0x58
.text:0000000000051858 var_50          = -0x50
.text:0000000000051858 var_40          = -0x40
.text:0000000000051858 var_30          = -0x30
.text:0000000000051858 var_20          = -0x20
.text:0000000000051858 var_10          = -0x10
.text:0000000000051858 var_s0          =  0
.text:0000000000051858 ; __unwind {
.text:0000000000051858                 SUB             SP, SP, #0xA0
.text:000000000005185C                 STR             D8, [SP,#0x90+var_60]
.text:0000000000051860                 STP             X28, X27, [SP,#0x90+var_50]
.text:0000000000051864                 STP             X26, X25, [SP,#0x90+var_40]
.text:0000000000051868                 STP             X24, X23, [SP,#0x90+var_30]
.text:000000000005186C                 STP             X22, X21, [SP,#0x90+var_20]
.text:0000000000051870                 STP             X20, X19, [SP,#0x90+var_10]
.text:0000000000051874                 STP             X29, X30, [SP,#0x90+var_s0]
.text:0000000000051878                 ADD             X29, SP, #0x90
.text:000000000005187C                 ADRP            X8, #wtSynth_ptr@PAGE
.text:0000000000051880                 STR             X2, [SP,#0x90+var_58]
.text:0000000000051884                 STR             X1, [SP,#0x90+var_68]
.text:0000000000051888                 ADRP            X9, #qword_55D0@PAGE
.text:000000000005188C                 MOV             X21, X0
.text:0000000000051890                 LDR             X8, [X8,#wtSynth_ptr@PAGEOFF]
.text:0000000000051894                 MOV             X22, XZR
.text:0000000000051898                 LDR             D8, [X9,#qword_55D0@PAGEOFF]
.text:000000000005189C                 MOV             W25, WZR
.text:00000000000518A0                 MOV             W26, #0x1120
.text:00000000000518A4                 MOV             W27, #0x1128
.text:00000000000518A8                 LDR             X10, [X8,#(off_582F8 - 0x582F0)]
.text:00000000000518AC                 MOV             W28, #0x112A
.text:00000000000518B0                 MOV             W19, #0x112F
.text:00000000000518B4                 STR             X10, [SP,#0x90+var_88]
.text:00000000000518B8                 LDR             X10, [X8,#(off_58300 - 0x582F0)] ; sub_52E28
.text:00000000000518BC                 LDR             X8, [X8,#(off_58310 - 0x582F0)]
.text:00000000000518C0                 STR             X10, [SP,#0x90+var_70]
.text:00000000000518C4                 STR             X8, [SP,#0x90+var_80]
.text:00000000000518C8                 B               loc_51920
.text:00000000000518CC ; ---------------------------------------------------------------------------
.text:00000000000518CC loc_518CC                               ; CODE XREF: VMAddSamples+18C↓j
.text:00000000000518CC                 AND             X11, X11, #0x78
.text:00000000000518D0                 AND             X10, X10, #0xF
.text:00000000000518D4                 MOV             W9, WZR
.text:00000000000518D8                 LDR             X11, [X21,X11]
.text:00000000000518DC                 ADD             X10, X11, X10,LSL#5
.text:00000000000518E0                 LDRB            W10, [X10,#0x35]
.text:00000000000518E4                 ADD             X10, X11, X10
.text:00000000000518E8                 LDRB            W11, [X10,#0x236]
.text:00000000000518EC                 SUB             W11, W11, #1
.text:00000000000518F0                 STRB            W11, [X10,#0x236]
.text:00000000000518F4                 LDRH            W10, [X21,#0x1540]
.text:00000000000518F8                 SUB             W10, W10, #1
.text:00000000000518FC                 STRH            W10, [X21,#0x1540]
.text:0000000000051900                 LDRH            W10, [X8,#0x222]
.text:0000000000051904                 SUB             W10, W10, #1
.text:0000000000051908                 STRH            W10, [X8,#0x222]
.text:000000000005190C                 STRH            WZR, [X23]
.text:0000000000051910                 STRH            WZR, [X23,#4]
.text:0000000000051914                 STR             D8, [X21,X27]
.text:0000000000051918                 CBNZ            W9, loc_51944
.text:000000000005191C                 B               loc_51B74
.text:0000000000051920 ; ---------------------------------------------------------------------------
.text:0000000000051920 loc_51920                               ; CODE XREF: VMAddSamples+70↑j
.text:0000000000051920                                         ; VMAddSamples+334↓j
.text:0000000000051920                 LDRB            W9, [X21,X27]
.text:0000000000051924                 ADD             X23, X21, X26
.text:0000000000051928                 CMP             W9, #5
.text:000000000005192C                 B.NE            loc_51940
.text:0000000000051930                 LDRSH           W8, [X23,#2]
.text:0000000000051934                 CMP             W8, #0
.text:0000000000051938                 B.LE            loc_519AC
.text:000000000005193C loc_5193C                               ; CODE XREF: VMAddSamples+20C↓j
.text:000000000005193C                                         ; VMAddSamples+228↓j
.text:000000000005193C                 LDRB            W9, [X21,X27]
.text:0000000000051940 loc_51940                               ; CODE XREF: VMAddSamples+D4↑j
.text:0000000000051940                 CBZ             W9, loc_51B74
.text:0000000000051944 loc_51944                               ; CODE XREF: VMAddSamples+C0↑j
.text:0000000000051944                 ADD             X20, X21, X19
.text:0000000000051948                 LDR             X5, [SP,#0x90+var_58]
.text:000000000005194C                 MOV             X0, X21
.text:0000000000051950                 MOV             X2, X23
.text:0000000000051954                 LDURB           W8, [X20,#-5]
.text:0000000000051958                 MOV             X3, X22
.text:000000000005195C                 LSR             X8, X8, #1
.text:0000000000051960                 AND             X8, X8, #0x78
.text:0000000000051964                 LDR             X24, [X21,X8]
.text:0000000000051968                 LDP             X8, X4, [SP,#0x90+var_70]
.text:000000000005196C                 MOV             X1, X24
.text:0000000000051970                 BLR             X8
.text:0000000000051974                 ADD             W25, W25, #1
.text:0000000000051978                 CMP             W0, #1
.text:000000000005197C                 B.NE            loc_5199C
.text:0000000000051980                 LDRB            W8, [X21,X27]
.text:0000000000051984                 CBZ             W8, loc_5199C
.text:0000000000051988                 CMP             W8, #4
.text:000000000005198C                 B.EQ            loc_51AB0
.text:0000000000051990                 CMP             W8, #5
.text:0000000000051994                 B.NE            loc_51A84
.text:0000000000051998                 STRH            WZR, [X23,#2]
.text:000000000005199C loc_5199C                               ; CODE XREF: VMAddSamples+124↑j
.text:000000000005199C                                         ; VMAddSamples+12C↑j
.text:000000000005199C                 LDURB           W8, [X20,#-6]
.text:00000000000519A0                 TBNZ            W8, #6, loc_51ADC
.text:00000000000519A4 loc_519A4                               ; CODE XREF: VMAddSamples+280↓j
.text:00000000000519A4                 LDRB            W8, [X21,X27]
.text:00000000000519A8                 B               loc_51B64
.text:00000000000519AC ; ---------------------------------------------------------------------------
.text:00000000000519AC loc_519AC                               ; CODE XREF: VMAddSamples+E0↑j
.text:00000000000519AC                 ADD             X20, X21, X19
.text:00000000000519B0                 LDURB           W9, [X20,#-5]
.text:00000000000519B4                 LDURB           W10, [X20,#-2]
.text:00000000000519B8                 LSR             X8, X9, #1
.text:00000000000519BC                 AND             X8, X8, #0x78
.text:00000000000519C0                 LSR             X11, X10, #1
.text:00000000000519C4                 AND             X12, X11, #0x78
.text:00000000000519C8                 LDR             X8, [X21,X8]
.text:00000000000519CC                 LDR             X24, [X21,X12]
.text:00000000000519D0                 LDRB            W13, [X8,#0x256]
.text:00000000000519D4                 TBZ             W13, #1, loc_519E8
.text:00000000000519D8                 AND             X12, X9, #0xF
.text:00000000000519DC                 ADD             X12, X8, X12,LSL#5
.text:00000000000519E0                 LDRB            W12, [X12,#0x34]
.text:00000000000519E4                 TBNZ            W12, #1, loc_518CC
.text:00000000000519E8 loc_519E8                               ; CODE XREF: VMAddSamples+17C↑j
.text:00000000000519E8                 CMP             W9, W10
.text:00000000000519EC                 B.EQ            loc_51A0C
.text:00000000000519F0                 LDRH            W9, [X8,#0x222]
.text:00000000000519F4                 SUB             W9, W9, #1
.text:00000000000519F8                 STRH            W9, [X8,#0x222]
.text:00000000000519FC                 LDRH            W8, [X24,#0x222]
.text:0000000000051A00                 ADD             W8, W8, #1
.text:0000000000051A04                 STRH            W8, [X24,#0x222]
.text:0000000000051A08                 LDURB           W9, [X20,#-2]
.text:0000000000051A0C loc_51A0C                               ; CODE XREF: VMAddSamples+194↑j
.text:0000000000051A0C                 LDURH           W8, [X20,#-1]
.text:0000000000051A10                 MOV             X0, X21
.text:0000000000051A14                 STURB           W9, [X20,#-5]
.text:0000000000051A18                 MOV             W9, #0x10
.text:0000000000051A1C                 MOV             X1, X24
.text:0000000000051A20                 MOV             X2, X23
.text:0000000000051A24                 STURB           W9, [X20,#-2]
.text:0000000000051A28                 MOV             X3, X22
.text:0000000000051A2C                 STURH           W8, [X20,#-4]
.text:0000000000051A30                 LDRH            W8, [X23,#6]
.text:0000000000051A34                 STRH            W8, [X23]
.text:0000000000051A38                 LDR             X8, [X21,#0x1530]
.text:0000000000051A3C                 LDURB           W9, [X20,#-6]
.text:0000000000051A40                 ADD             X8, X8, #0xA
.text:0000000000051A44                 STR             W9, [SP,#0x90+var_74]
.text:0000000000051A48                 STR             X8, [X21,#0x1530]
.text:0000000000051A4C                 MOV             W8, #1
.text:0000000000051A50                 STRB            W8, [X21,X27]
.text:0000000000051A54                 LDRH            W4, [X23]
.text:0000000000051A58                 LDR             X8, [SP,#0x90+var_88]
.text:0000000000051A5C                 BLR             X8
.text:0000000000051A60                 LDR             W8, [SP,#0x90+var_74]
.text:0000000000051A64                 TBZ             W8, #2, loc_5193C
.text:0000000000051A68                 LDURB           W8, [X20,#-6]
.text:0000000000051A6C                 ORR             W8, W8, #4
.text:0000000000051A70                 STURB           W8, [X20,#-6]
.text:0000000000051A74                 LDRB            W8, [X24,#0x256]
.text:0000000000051A78                 ORR             W8, W8, #8
.text:0000000000051A7C                 STRB            W8, [X24,#0x256]
.text:0000000000051A80                 B               loc_5193C
.text:0000000000051A84 ; ---------------------------------------------------------------------------
.text:0000000000051A84 loc_51A84                               ; CODE XREF: VMAddSamples+13C↑j
.text:0000000000051A84                 LDURB           W8, [X20,#-5]
.text:0000000000051A88                 LSR             X9, X8, #1
.text:0000000000051A8C                 AND             X9, X9, #0x78
.text:0000000000051A90                 AND             X8, X8, #0xF
.text:0000000000051A94                 LDR             X9, [X21,X9]
.text:0000000000051A98                 ADD             X8, X9, X8,LSL#5
.text:0000000000051A9C                 LDRB            W8, [X8,#0x35]
.text:0000000000051AA0                 ADD             X8, X9, X8
.text:0000000000051AA4                 LDRB            W9, [X8,#0x236]
.text:0000000000051AA8                 SUB             W9, W9, #1
.text:0000000000051AAC                 STRB            W9, [X8,#0x236]
.text:0000000000051AB0 loc_51AB0                               ; CODE XREF: VMAddSamples+134↑j
.text:0000000000051AB0                 LDRH            W8, [X21,#0x1540]
.text:0000000000051AB4                 SUB             W8, W8, #1
.text:0000000000051AB8                 STRH            W8, [X21,#0x1540]
.text:0000000000051ABC                 LDRH            W8, [X24,#0x222]
.text:0000000000051AC0                 SUB             W8, W8, #1
.text:0000000000051AC4                 STRH            W8, [X24,#0x222]
.text:0000000000051AC8                 STRH            WZR, [X23]
.text:0000000000051ACC                 STRH            WZR, [X23,#4]
.text:0000000000051AD0                 STR             D8, [X21,X27]
.text:0000000000051AD4                 LDURB           W8, [X20,#-6]
.text:0000000000051AD8                 TBZ             W8, #6, loc_519A4
.text:0000000000051ADC loc_51ADC                               ; CODE XREF: VMAddSamples+148↑j
.text:0000000000051ADC                 AND             W8, W8, #0xBBBBBBBB
.text:0000000000051AE0                 STURB           W8, [X20,#-6]
.text:0000000000051AE4                 LDRB            W8, [X21,X27]
.text:0000000000051AE8                 CBZ             W8, loc_51B64
.text:0000000000051AEC                 CMP             W8, #4
.text:0000000000051AF0                 B.EQ            loc_51B64
.text:0000000000051AF4                 CMP             W8, #5
.text:0000000000051AF8                 ADD             X8, X21, X22,LSL#4
.text:0000000000051AFC                 MOV             W10, #0x112D
.text:0000000000051B00                 ADD             X9, X21, X28
.text:0000000000051B04                 ADD             X8, X8, X10
.text:0000000000051B08                 CSEL            X8, X8, X9, EQ
.text:0000000000051B0C                 MOV             X0, X21
.text:0000000000051B10                 MOV             X2, X23
.text:0000000000051B14                 LDRB            W8, [X8]
.text:0000000000051B18                 MOV             X3, X22
.text:0000000000051B1C                 LSR             X9, X8, #1
.text:0000000000051B20                 AND             X9, X9, #0x78
.text:0000000000051B24                 AND             X8, X8, #0xF
.text:0000000000051B28                 LDR             X9, [X21,X9]
.text:0000000000051B2C                 ADD             X8, X9, X8,LSL#5
.text:0000000000051B30                 LDRB            W8, [X8,#0x35]
.text:0000000000051B34                 ADD             X8, X9, X8
.text:0000000000051B38                 LDRB            W9, [X8,#0x236]
.text:0000000000051B3C                 SUB             W9, W9, #1
.text:0000000000051B40                 STRB            W9, [X8,#0x236]
.text:0000000000051B44                 LDURB           W8, [X20,#-5]
.text:0000000000051B48                 LSR             X8, X8, #1
.text:0000000000051B4C                 AND             X8, X8, #0x78
.text:0000000000051B50                 LDR             X1, [X21,X8]
.text:0000000000051B54                 LDR             X8, [SP,#0x90+var_80]
.text:0000000000051B58                 BLR             X8
.text:0000000000051B5C                 MOV             W8, #4
.text:0000000000051B60                 B               loc_51B70
.text:0000000000051B64 ; ---------------------------------------------------------------------------
.text:0000000000051B64 loc_51B64                               ; CODE XREF: VMAddSamples+150↑j
.text:0000000000051B64                                         ; VMAddSamples+290↑j ...
.text:0000000000051B64                 CMP             W8, #1
.text:0000000000051B68                 B.NE            loc_51B74
.text:0000000000051B6C                 MOV             W8, #2
.text:0000000000051B70 loc_51B70                               ; CODE XREF: VMAddSamples+308↑j
.text:0000000000051B70                 STRB            W8, [X21,X27]
.text:0000000000051B74 loc_51B74                               ; CODE XREF: VMAddSamples+C4↑j
.text:0000000000051B74                                         ; VMAddSamples:loc_51940↑j ...
.text:0000000000051B74                 ADD             X22, X22, #1
.text:0000000000051B78                 ADD             X26, X26, #0x10
.text:0000000000051B7C                 ADD             X27, X27, #0x10
.text:0000000000051B80                 ADD             X28, X28, #0x10
.text:0000000000051B84                 ADD             X19, X19, #0x10
.text:0000000000051B88                 CMP             X22, #0x40 ; '@'
.text:0000000000051B8C                 B.NE            loc_51920
.text:0000000000051B90                 SXTW            X0, W25
.text:0000000000051B94                 LDR             D8, [SP,#0x90+var_60]
.text:0000000000051B98                 LDP             X29, X30, [SP,#0x90+var_s0]
.text:0000000000051B9C                 LDP             X20, X19, [SP,#0x90+var_10]
.text:0000000000051BA0                 LDP             X22, X21, [SP,#0x90+var_20]
.text:0000000000051BA4                 LDP             X24, X23, [SP,#0x90+var_30]
.text:0000000000051BA8                 LDP             X26, X25, [SP,#0x90+var_40]
.text:0000000000051BAC                 LDP             X28, X27, [SP,#0x90+var_50]
.text:0000000000051BB0                 ADD             SP, SP, #0xA0
.text:0000000000051BB4                 RET
.text:0000000000051BB4 ; } // starts at 51858
.text:0000000000051BB4 ; End of function VMAddSamples
.text:0000000000051BB8 ; =============== S U B R O U T I N E =======================================
.text:0000000000051BB8 ; Attributes: bp-based frame
.text:0000000000051BB8                 EXPORT VMRender
.text:0000000000051BB8 VMRender                                ; CODE XREF: .VMRender+C↓j
.text:0000000000051BB8                                         ; DATA XREF: LOAD:0000000000001260↑o ...
.text:0000000000051BB8 var_60          = -0x60
.text:0000000000051BB8 var_58          = -0x58
.text:0000000000051BB8 var_50          = -0x50
.text:0000000000051BB8 var_40          = -0x40
.text:0000000000051BB8 var_30          = -0x30
.text:0000000000051BB8 var_20          = -0x20
.text:0000000000051BB8 var_10          = -0x10
.text:0000000000051BB8 var_s0          =  0
.text:0000000000051BB8 ; __unwind {
.text:0000000000051BB8                 SUB             SP, SP, #0x70
.text:0000000000051BBC                 STP             X28, X27, [SP,#0x60+var_50]
.text:0000000000051BC0                 STP             X26, X25, [SP,#0x60+var_40]
.text:0000000000051BC4                 STP             X24, X23, [SP,#0x60+var_30]
.text:0000000000051BC8                 STP             X22, X21, [SP,#0x60+var_20]
.text:0000000000051BCC                 STP             X20, X19, [SP,#0x60+var_10]
.text:0000000000051BD0                 STP             X29, X30, [SP,#0x60+var_s0]
.text:0000000000051BD4                 ADD             X29, SP, #0x60
.text:0000000000051BD8                 STR             XZR, [X3]
.text:0000000000051BDC                 MOV             X20, X3
.text:0000000000051BE0                 LDR             X8, [X0]
.text:0000000000051BE4                 MOV             X21, X2
.text:0000000000051BE8                 MOV             X19, X0
.text:0000000000051BEC                 MOV             X22, X1
.text:0000000000051BF0                 CBZ             X8, loc_51C00
.text:0000000000051BF4                 MOV             X0, X19
.text:0000000000051BF8                 MOV             X1, X8
.text:0000000000051BFC                 BL              .VMUpdateStaticChannelParameters
.text:0000000000051C00 loc_51C00                               ; CODE XREF: VMRender+38↑j
.text:0000000000051C00                 LDR             X1, [X19,#8]
.text:0000000000051C04                 CBZ             X1, loc_51C10
.text:0000000000051C08                 MOV             X0, X19
.text:0000000000051C0C                 BL              .VMUpdateStaticChannelParameters
.text:0000000000051C10 loc_51C10                               ; CODE XREF: VMRender+4C↑j
.text:0000000000051C10                 LDR             X1, [X19,#0x10]
.text:0000000000051C14                 CBZ             X1, loc_51C20
.text:0000000000051C18                 MOV             X0, X19
.text:0000000000051C1C                 BL              .VMUpdateStaticChannelParameters
.text:0000000000051C20 loc_51C20                               ; CODE XREF: VMRender+5C↑j
.text:0000000000051C20                 LDR             X1, [X19,#0x18]
.text:0000000000051C24                 CBZ             X1, loc_51C30
.text:0000000000051C28                 MOV             X0, X19
.text:0000000000051C2C                 BL              .VMUpdateStaticChannelParameters
.text:0000000000051C30 loc_51C30                               ; CODE XREF: VMRender+6C↑j
.text:0000000000051C30                 MOV             X0, X19
.text:0000000000051C34                 MOV             X1, X21
.text:0000000000051C38                 MOV             X2, X22
.text:0000000000051C3C                 BL              .VMAddSamples
.text:0000000000051C40                 ADRP            X8, #wtSynth_ptr@PAGE
.text:0000000000051C44                 MOV             W9, #0x1128
.text:0000000000051C48                 ADD             X23, X19, X9
.text:0000000000051C4C                 LDR             X8, [X8,#wtSynth_ptr@PAGEOFF]
.text:0000000000051C50                 MOV             W24, #0x2000
.text:0000000000051C54                 MOV             W25, #0x6400
.text:0000000000051C58                 MOV             X22, XZR
.text:0000000000051C5C                 MOVK            W24, #0xC8,LSL#16
.text:0000000000051C60                 LDR             X9, [X8,#(off_58318 - 0x582F0)]
.text:0000000000051C64                 MOVK            W25, #0x7F40,LSL#16
.text:0000000000051C68                 LDR             X8, [X8,#(off_58308 - 0x582F0)]
.text:0000000000051C6C                 MOV             W26, #0x3FFF
.text:0000000000051C70                 MOV             W28, #0x7800
.text:0000000000051C74                 STP             X8, X9, [SP,#0x60+var_60]
.text:0000000000051C78                 STR             X0, [X20]
.text:0000000000051C7C loc_51C7C                               ; CODE XREF: VMRender+318↓j
.text:0000000000051C7C                 LDR             X20, [X19,X22,LSL#3]
.text:0000000000051C80                 CBZ             X20, loc_51EC8
.text:0000000000051C84                 LDRB            W8, [X20,#0x256]
.text:0000000000051C88                 TBZ             W8, #3, loc_51D48
.text:0000000000051C8C                 MOV             X28, XZR
.text:0000000000051C90                 MOV             X21, XZR
.text:0000000000051C94                 MOV             W27, WZR
.text:0000000000051C98 loc_51C98                               ; CODE XREF: VMRender+180↓j
.text:0000000000051C98                 ADD             X9, X23, X28
.text:0000000000051C9C                 LDRB            W10, [X9,#1]
.text:0000000000051CA0                 TBZ             W10, #2, loc_51D2C
.text:0000000000051CA4                 LDRB            W8, [X23,X28]
.text:0000000000051CA8                 CMP             W8, #5
.text:0000000000051CAC                 B.NE            loc_51CB8
.text:0000000000051CB0                 MOV             W27, #1
.text:0000000000051CB4                 B               loc_51D2C
.text:0000000000051CB8 ; ---------------------------------------------------------------------------
.text:0000000000051CB8 loc_51CB8                               ; CODE XREF: VMRender+F4↑j
.text:0000000000051CB8                 LDRB            W11, [X9,#2]
.text:0000000000051CBC                 EOR             W12, W10, #4
.text:0000000000051CC0                 SUB             X2, X9, #8
.text:0000000000051CC4                 STRB            W12, [X9,#1]
.text:0000000000051CC8                 AND             X11, X11, #0xF
.text:0000000000051CCC                 ADD             X10, X20, X11,LSL#5
.text:0000000000051CD0                 LDRB            W11, [X10,#0x34]
.text:0000000000051CD4                 TBNZ            W11, #0, loc_51D14
.text:0000000000051CD8                 CMP             W8, #4
.text:0000000000051CDC                 B.HI            loc_51CF4
.text:0000000000051CE0                 MOV             W9, #1
.text:0000000000051CE4                 LSL             W8, W9, W8
.text:0000000000051CE8                 MOV             W9, #0x19
.text:0000000000051CEC                 TST             W8, W9
.text:0000000000051CF0                 B.NE            loc_51D2C
.text:0000000000051CF4 loc_51CF4                               ; CODE XREF: VMRender+124↑j
.text:0000000000051CF4                 LDR             X8, [SP,#0x60+var_60]
.text:0000000000051CF8                 MOV             X0, X19
.text:0000000000051CFC                 MOV             X1, X20
.text:0000000000051D00                 MOV             X3, X21
.text:0000000000051D04                 BLR             X8
.text:0000000000051D08                 MOV             W8, #3
.text:0000000000051D0C                 STRB            W8, [X23,X28]
.text:0000000000051D10                 B               loc_51D2C
.text:0000000000051D14 ; ---------------------------------------------------------------------------
.text:0000000000051D14 loc_51D14                               ; CODE XREF: VMRender+11C↑j
.text:0000000000051D14                 LDR             X8, [SP,#0x60+var_58]
.text:0000000000051D18                 ADD             X3, X10, #0x18
.text:0000000000051D1C                 MOV             X0, X19
.text:0000000000051D20                 MOV             X1, X20
.text:0000000000051D24                 MOV             X4, X21
.text:0000000000051D28                 BLR             X8
.text:0000000000051D2C loc_51D2C                               ; CODE XREF: VMRender+E8↑j
.text:0000000000051D2C                                         ; VMRender+FC↑j ...
.text:0000000000051D2C                 ADD             X21, X21, #1
.text:0000000000051D30                 ADD             X28, X28, #0x10
.text:0000000000051D34                 CMP             X21, #0x40 ; '@'
.text:0000000000051D38                 B.NE            loc_51C98
.text:0000000000051D3C                 LDRB            W8, [X20,#0x256]
.text:0000000000051D40                 MOV             W28, #0x7800
.text:0000000000051D44                 CBZ             W27, loc_51DFC
.text:0000000000051D48 loc_51D48                               ; CODE XREF: VMRender+D0↑j
.text:0000000000051D48                 TBZ             W8, #0, loc_51E08
.text:0000000000051D4C loc_51D4C                               ; CODE XREF: VMRender+24C↓j
.text:0000000000051D4C                 LDRH            W8, [X20,#0x222]
.text:0000000000051D50                 CBNZ            W8, loc_51E08
.text:0000000000051D54                 MOV             X8, XZR
.text:0000000000051D58 loc_51D58                               ; CODE XREF: VMRender+1CC↓j
.text:0000000000051D58                 ADD             X9, X20, X8
.text:0000000000051D5C                 ADD             X8, X8, #0x20 ; ' '
.text:0000000000051D60                 CMP             W8, #0x200
.text:0000000000051D64                 LDRB            W10, [X9,#0x34]
.text:0000000000051D68                 STUR            W24, [X9,#0x26]
.text:0000000000051D6C                 STUR            W25, [X9,#0x2D]
.text:0000000000051D70                 STRB            WZR, [X9,#0x33]
.text:0000000000051D74                 ORR             W10, W10, #4
.text:0000000000051D78                 STRH            W26, [X9,#0x2A]
.text:0000000000051D7C                 STURH           WZR, [X9,#0x31]
.text:0000000000051D80                 STRB            W10, [X9,#0x34]
.text:0000000000051D84                 B.NE            loc_51D58
.text:0000000000051D88                 MOV             X27, XZR
.text:0000000000051D8C                 MOV             W21, WZR
.text:0000000000051D90 loc_51D90                               ; CODE XREF: VMRender+224↓j
.text:0000000000051D90                 ADD             X8, X20, X27
.text:0000000000051D94                 CMP             W27, #0x120
.text:0000000000051D98                 STRH            WZR, [X8,#0x34]
.text:0000000000051D9C                 STRH            WZR, [X8,#0x20]
.text:0000000000051DA0                 STR             XZR, [X8,#0x18]
.text:0000000000051DA4                 B.NE            loc_51DB8
.text:0000000000051DA8                 MOV             W9, #8
.text:0000000000051DAC                 STRH            W28, [X8,#0x24]
.text:0000000000051DB0                 STRB            W9, [X8,#0x34]
.text:0000000000051DB4                 B               loc_51DC0
.text:0000000000051DB8 ; ---------------------------------------------------------------------------
.text:0000000000051DB8 loc_51DB8                               ; CODE XREF: VMRender+1EC↑j
.text:0000000000051DB8                 MOV             W9, #0x7900
.text:0000000000051DBC                 STRH            W9, [X8,#0x24]
.text:0000000000051DC0 loc_51DC0                               ; CODE XREF: VMRender+1FC↑j
.text:0000000000051DC0                 MOV             X1, X20
.text:0000000000051DC4                 MOV             W2, W21
.text:0000000000051DC8                 MOV             W3, WZR
.text:0000000000051DCC                 BL              .VMProgramChange
.text:0000000000051DD0                 ADD             W21, W21, #1
.text:0000000000051DD4                 ADD             X27, X27, #0x20 ; ' '
.text:0000000000051DD8                 CMP             W27, #0x200
.text:0000000000051DDC                 B.NE            loc_51D90
.text:0000000000051DE0                 LDRB            W1, [X20,#0x258]
.text:0000000000051DE4                 MOV             X0, X19
.text:0000000000051DE8                 BL              .VMInitializeAllVoices
.text:0000000000051DEC                 LDRB            W8, [X20,#0x256]
.text:0000000000051DF0                 AND             W8, W8, #0xFE
.text:0000000000051DF4                 STRB            W8, [X20,#0x256]
.text:0000000000051DF8                 B               loc_51E08
.text:0000000000051DFC ; ---------------------------------------------------------------------------
.text:0000000000051DFC loc_51DFC                               ; CODE XREF: VMRender+18C↑j
.text:0000000000051DFC                 EOR             W8, W8, #8
.text:0000000000051E00                 STRB            W8, [X20,#0x256]
.text:0000000000051E04                 TBNZ            W8, #0, loc_51D4C
.text:0000000000051E08 loc_51E08                               ; CODE XREF: VMRender:loc_51D48↑j
.text:0000000000051E08                                         ; VMRender+198↑j ...
.text:0000000000051E08                 LDRB            W8, [X20,#0x34]
.text:0000000000051E0C                 LDRB            W10, [X20,#0x74]
.text:0000000000051E10                 LDRB            W9, [X20,#0x54]
.text:0000000000051E14                 LDRB            W13, [X20,#0xD4]
.text:0000000000051E18                 AND             W8, W8, #0xFFFFFFFB
.text:0000000000051E1C                 LDRB            W11, [X20,#0x94]
.text:0000000000051E20                 LDRB            W14, [X20,#0x134]
.text:0000000000051E24                 AND             W9, W9, #0xFFFFFFFB
.text:0000000000051E28                 LDRB            W12, [X20,#0xB4]
.text:0000000000051E2C                 STRB            W8, [X20,#0x34]
.text:0000000000051E30                 AND             W8, W10, #0xFFFFFFFB
.text:0000000000051E34                 AND             W10, W11, #0xFFFFFFFB
.text:0000000000051E38                 LDRB            W11, [X20,#0x114]
.text:0000000000051E3C                 STRB            W9, [X20,#0x54]
.text:0000000000051E40                 STRB            W8, [X20,#0x74]
.text:0000000000051E44                 AND             W8, W13, #0xFFFFFFFB
.text:0000000000051E48                 LDRB            W9, [X20,#0xF4]
.text:0000000000051E4C                 AND             W12, W12, #0xFFFFFFFB
.text:0000000000051E50                 STRB            W10, [X20,#0x94]
.text:0000000000051E54                 AND             W10, W11, #0xFFFFFFFB
.text:0000000000051E58                 STRB            W8, [X20,#0xD4]
.text:0000000000051E5C                 AND             W8, W14, #0xFFFFFFFB
.text:0000000000051E60                 LDRB            W11, [X20,#0x1B4]
.text:0000000000051E64                 AND             W9, W9, #0xFFFFFFFB
.text:0000000000051E68                 STRB            W10, [X20,#0x114]
.text:0000000000051E6C                 STRB            W8, [X20,#0x134]
.text:0000000000051E70                 LDRB            W8, [X20,#0x154]
.text:0000000000051E74                 STRB            W9, [X20,#0xF4]
.text:0000000000051E78                 LDRB            W9, [X20,#0x174]
.text:0000000000051E7C                 LDRB            W10, [X20,#0x194]
.text:0000000000051E80                 AND             W8, W8, #0xFFFFFFFB
.text:0000000000051E84                 STRB            W12, [X20,#0xB4]
.text:0000000000051E88                 LDRB            W12, [X20,#0x1D4]
.text:0000000000051E8C                 LDRB            W13, [X20,#0x1F4]
.text:0000000000051E90                 AND             W9, W9, #0xFFFFFFFB
.text:0000000000051E94                 LDRB            W14, [X20,#0x214]
.text:0000000000051E98                 AND             W10, W10, #0xFFFFFFFB
.text:0000000000051E9C                 STRB            W8, [X20,#0x154]
.text:0000000000051EA0                 AND             W8, W11, #0xFFFFFFFB
.text:0000000000051EA4                 STRB            W9, [X20,#0x174]
.text:0000000000051EA8                 AND             W9, W12, #0xFFFFFFFB
.text:0000000000051EAC                 STRB            W10, [X20,#0x194]
.text:0000000000051EB0                 AND             W10, W13, #0xFFFFFFFB
.text:0000000000051EB4                 STRB            W8, [X20,#0x1B4]
.text:0000000000051EB8                 AND             W8, W14, #0xFFFFFFFB
.text:0000000000051EBC                 STRB            W9, [X20,#0x1D4]
.text:0000000000051EC0                 STRB            W10, [X20,#0x1F4]
.text:0000000000051EC4                 STRB            W8, [X20,#0x214]
.text:0000000000051EC8 loc_51EC8                               ; CODE XREF: VMRender+C8↑j
.text:0000000000051EC8                 ADD             X22, X22, #1
.text:0000000000051ECC                 CMP             X22, #4
.text:0000000000051ED0                 B.NE            loc_51C7C
.text:0000000000051ED4                 LDP             X29, X30, [SP,#0x60+var_s0]
.text:0000000000051ED8                 LDP             X20, X19, [SP,#0x60+var_10]
.text:0000000000051EDC                 LDP             X22, X21, [SP,#0x60+var_20]
.text:0000000000051EE0                 LDP             X24, X23, [SP,#0x60+var_30]
.text:0000000000051EE4                 LDP             X26, X25, [SP,#0x60+var_40]
.text:0000000000051EE8                 LDP             X28, X27, [SP,#0x60+var_50]
.text:0000000000051EEC                 MOV             X0, XZR
.text:0000000000051EF0                 ADD             SP, SP, #0x70 ; 'p'
.text:0000000000051EF4                 RET
.text:0000000000051EF4 ; } // starts at 51BB8
.text:0000000000051EF4 ; End of function VMRender
.text:0000000000051EF8 ; =============== S U B R O U T I N E =======================================
.text:0000000000051EF8                 EXPORT VMInitWorkload
.text:0000000000051EF8 VMInitWorkload                          ; CODE XREF: .VMInitWorkload+C↓j
.text:0000000000051EF8                                         ; DATA XREF: LOAD:0000000000001890↑o ...
.text:0000000000051EF8 ; __unwind {
.text:0000000000051EF8                 STR             XZR, [X0,#0x1530]
.text:0000000000051EFC                 RET
.text:0000000000051EFC ; } // starts at 51EF8
.text:0000000000051EFC ; End of function VMInitWorkload
.text:0000000000051F00 ; =============== S U B R O U T I N E =======================================
.text:0000000000051F00                 EXPORT VMSetWorkload
.text:0000000000051F00 VMSetWorkload                           ; CODE XREF: .VMSetWorkload+C↓j
.text:0000000000051F00                                         ; DATA XREF: LOAD:stru_870↑o ...
.text:0000000000051F00 ; __unwind {
.text:0000000000051F00                 STR             X1, [X0,#0x1538]
.text:0000000000051F04                 RET
.text:0000000000051F04 ; } // starts at 51F00
.text:0000000000051F04 ; End of function VMSetWorkload
.text:0000000000051F08 ; =============== S U B R O U T I N E =======================================
.text:0000000000051F08                 EXPORT VMCheckWorkload
.text:0000000000051F08 VMCheckWorkload                         ; CODE XREF: .VMCheckWorkload+C↓j
.text:0000000000051F08                                         ; DATA XREF: LOAD:0000000000000A38↑o ...
.text:0000000000051F08 ; __unwind {
.text:0000000000051F08                 LDR             X8, [X0,#0x1538]
.text:0000000000051F0C                 CMP             X8, #1
.text:0000000000051F10                 B.LT            loc_51F24
.text:0000000000051F14                 LDR             X9, [X0,#0x1530]
.text:0000000000051F18                 CMP             X9, X8
.text:0000000000051F1C                 CSET            W0, GE
.text:0000000000051F20                 RET
.text:0000000000051F24 ; ---------------------------------------------------------------------------
.text:0000000000051F24 loc_51F24                               ; CODE XREF: VMCheckWorkload+8↑j
.text:0000000000051F24                 MOV             W0, WZR
.text:0000000000051F28                 RET
.text:0000000000051F28 ; } // starts at 51F08
.text:0000000000051F28 ; End of function VMCheckWorkload
.text:0000000000051F28 ; ---------------------------------------------------------------------------
.text:0000000000051F2C                 ALIGN 0x10
.text:0000000000051F30 ; =============== S U B R O U T I N E =======================================
.text:0000000000051F30                 EXPORT VMActiveVoices
.text:0000000000051F30 VMActiveVoices                          ; CODE XREF: .VMActiveVoices+C↓j
.text:0000000000051F30                                         ; DATA XREF: LOAD:0000000000000618↑o ...
.text:0000000000051F30 ; __unwind {
.text:0000000000051F30                 LDRH            W0, [X0,#0x222]
.text:0000000000051F34                 RET
.text:0000000000051F34 ; } // starts at 51F30
.text:0000000000051F34 ; End of function VMActiveVoices
.text:0000000000051F38 ; =============== S U B R O U T I N E =======================================
.text:0000000000051F38 ; Attributes: bp-based frame
.text:0000000000051F38                 EXPORT VMSetSynthPolyphony
.text:0000000000051F38 VMSetSynthPolyphony                     ; CODE XREF: .VMSetSynthPolyphony+C↓j
.text:0000000000051F38                                         ; DATA XREF: LOAD:0000000000001878↑o ...
.text:0000000000051F38 var_50          = -0x50
.text:0000000000051F38 var_40          = -0x40
.text:0000000000051F38 var_30          = -0x30
.text:0000000000051F38 var_20          = -0x20
.text:0000000000051F38 var_10          = -0x10
.text:0000000000051F38 var_s0          =  0
.text:0000000000051F38 ; __unwind {
.text:0000000000051F38                 STP             X28, X27, [SP,#-0x10+var_50]!
.text:0000000000051F3C                 STP             X26, X25, [SP,#0x50+var_40]
.text:0000000000051F40                 STP             X24, X23, [SP,#0x50+var_30]
.text:0000000000051F44                 STP             X22, X21, [SP,#0x50+var_20]
.text:0000000000051F48                 STP             X20, X19, [SP,#0x50+var_10]
.text:0000000000051F4C                 STP             X29, X30, [SP,#0x50+var_s0]
.text:0000000000051F50                 ADD             X29, SP, #0x50
.text:0000000000051F54                 CMP             X2, #1
.text:0000000000051F58                 CSINC           X8, X2, XZR, GT
.text:0000000000051F5C                 CBZ             X1, loc_51F68
.text:0000000000051F60                 MOV             X0, #0xFFFFFFFFFFFFFFF3
.text:0000000000051F64                 B               loc_521E8
.text:0000000000051F68 ; ---------------------------------------------------------------------------
.text:0000000000051F68 loc_51F68                               ; CODE XREF: VMSetSynthPolyphony+24↑j
.text:0000000000051F68                 LDRH            W9, [X0,#0x1542]
.text:0000000000051F6C                 CMP             X8, #0x40 ; '@'
.text:0000000000051F70                 MOV             W10, #0x40 ; '@'
.text:0000000000051F74                 MOV             X19, X0
.text:0000000000051F78                 CSEL            X20, X8, X10, LT
.text:0000000000051F7C                 CMP             X20, X9
.text:0000000000051F80                 B.EQ            loc_521E4
.text:0000000000051F84                 LDR             X1, [X19]
.text:0000000000051F88                 STRH            W20, [X19,#0x1542]
.text:0000000000051F8C                 CBZ             X1, loc_51F9C
.text:0000000000051F90                 LDRB            W8, [X1,#0x256]
.text:0000000000051F94                 TBNZ            W8, #1, loc_51FD0
.text:0000000000051F98                 STRB            W20, [X1,#0x246]
.text:0000000000051F9C loc_51F9C                               ; CODE XREF: VMSetSynthPolyphony+54↑j
.text:0000000000051F9C                 LDR             X1, [X19,#8]
.text:0000000000051FA0                 CBZ             X1, loc_51FEC
.text:0000000000051FA4 loc_51FA4                               ; CODE XREF: VMSetSynthPolyphony+A4↓j
.text:0000000000051FA4                 LDRB            W8, [X1,#0x256]
.text:0000000000051FA8                 TBNZ            W8, #1, loc_51FE4
.text:0000000000051FAC                 STRB            W20, [X1,#0x246]
.text:0000000000051FB0                 LDR             X1, [X19,#0x10]
.text:0000000000051FB4                 CBZ             X1, loc_51FF4
.text:0000000000051FB8 loc_51FB8                               ; CODE XREF: VMSetSynthPolyphony+B8↓j
.text:0000000000051FB8                 LDRB            W8, [X1,#0x256]
.text:0000000000051FBC                 TBNZ            W8, #1, loc_5200C
.text:0000000000051FC0                 STRB            W20, [X1,#0x246]
.text:0000000000051FC4                 LDR             X1, [X19,#0x18]
.text:0000000000051FC8                 CBNZ            X1, loc_51FFC
.text:0000000000051FCC                 B               loc_52028
.text:0000000000051FD0 ; ---------------------------------------------------------------------------
.text:0000000000051FD0 loc_51FD0                               ; CODE XREF: VMSetSynthPolyphony+5C↑j
.text:0000000000051FD0                 MOV             X0, X19
.text:0000000000051FD4                 BL              .VMMIPUpdateChannelMuting
.text:0000000000051FD8                 LDR             X1, [X19,#8]
.text:0000000000051FDC                 CBNZ            X1, loc_51FA4
.text:0000000000051FE0                 B               loc_51FEC
.text:0000000000051FE4 ; ---------------------------------------------------------------------------
.text:0000000000051FE4 loc_51FE4                               ; CODE XREF: VMSetSynthPolyphony+70↑j
.text:0000000000051FE4                 MOV             X0, X19
.text:0000000000051FE8                 BL              .VMMIPUpdateChannelMuting
.text:0000000000051FEC loc_51FEC                               ; CODE XREF: VMSetSynthPolyphony+68↑j
.text:0000000000051FEC                                         ; VMSetSynthPolyphony+A8↑j
.text:0000000000051FEC                 LDR             X1, [X19,#0x10]
.text:0000000000051FF0                 CBNZ            X1, loc_51FB8
.text:0000000000051FF4 loc_51FF4                               ; CODE XREF: VMSetSynthPolyphony+7C↑j
.text:0000000000051FF4                 LDR             X1, [X19,#0x18]
.text:0000000000051FF8                 CBZ             X1, loc_52028
.text:0000000000051FFC loc_51FFC                               ; CODE XREF: VMSetSynthPolyphony+90↑j
.text:0000000000051FFC                                         ; VMSetSynthPolyphony+E0↓j
.text:0000000000051FFC                 LDRB            W8, [X1,#0x256]
.text:0000000000052000                 TBNZ            W8, #1, loc_52020
.text:0000000000052004                 STRB            W20, [X1,#0x246]
.text:0000000000052008                 B               loc_52028
.text:000000000005200C ; ---------------------------------------------------------------------------
.text:000000000005200C loc_5200C                               ; CODE XREF: VMSetSynthPolyphony+84↑j
.text:000000000005200C                 MOV             X0, X19
.text:0000000000052010                 BL              .VMMIPUpdateChannelMuting
.text:0000000000052014                 LDR             X1, [X19,#0x18]
.text:0000000000052018                 CBNZ            X1, loc_51FFC
.text:000000000005201C                 B               loc_52028
.text:0000000000052020 ; ---------------------------------------------------------------------------
.text:0000000000052020 loc_52020                               ; CODE XREF: VMSetSynthPolyphony+C8↑j
.text:0000000000052020                 MOV             X0, X19
.text:0000000000052024                 BL              .VMMIPUpdateChannelMuting
.text:0000000000052028 loc_52028                               ; CODE XREF: VMSetSynthPolyphony+94↑j
.text:0000000000052028                                         ; VMSetSynthPolyphony+C0↑j ...
.text:0000000000052028                 LDRH            W8, [X19,#0x1540]
.text:000000000005202C                 CMP             X20, X8
.text:0000000000052030                 B.GE            loc_521E4
.text:0000000000052034                 MOV             W10, #0x1128
.text:0000000000052038                 MOV             X9, XZR
.text:000000000005203C                 MOV             W8, WZR
.text:0000000000052040                 ADD             X10, X19, X10
.text:0000000000052044 loc_52044                               ; CODE XREF: VMSetSynthPolyphony+124↓j
.text:0000000000052044                 LDRB            W11, [X10,X9]
.text:0000000000052048                 ADD             X9, X9, #0x10
.text:000000000005204C                 ORR             W11, W11, #4
.text:0000000000052050                 CMP             W11, #4
.text:0000000000052054                 CINC            W8, W8, NE
.text:0000000000052058                 CMP             X9, #0x400
.text:000000000005205C                 B.NE            loc_52044
.text:0000000000052060                 SXTW            X21, W8
.text:0000000000052064                 CMP             X20, X21
.text:0000000000052068                 B.GE            loc_521E4
.text:000000000005206C                 ADRP            X8, #wtSynth_ptr@PAGE
.text:0000000000052070                 MOV             W1, #0x1128
.text:0000000000052074                 ADD             X23, X19, X1
.text:0000000000052078                 LDR             X8, [X8,#wtSynth_ptr@PAGEOFF]
.text:000000000005207C                 MOV             X24, #0xFFFFFFFFFFFFFFFF
.text:0000000000052080                 MOV             W16, #0xFFFFFFFF
.text:0000000000052084                 MOV             W22, #0x112A
.text:0000000000052088                 MOV             W27, #0x80
.text:000000000005208C                 LDR             X26, [X8,#(off_58310 - 0x582F0)]
.text:0000000000052090                 MOV             W28, #0x180
.text:0000000000052094 loc_52094                               ; CODE XREF: VMSetSynthPolyphony+2A4↓j
.text:0000000000052094                 MOV             X9, XZR
.text:0000000000052098                 MOV             X10, XZR
.text:000000000005209C                 MOV             W8, W16
.text:00000000000520A0                 MOV             X11, X24
.text:00000000000520A4 loc_520A4                               ; CODE XREF: VMSetSynthPolyphony+1FC↓j
.text:00000000000520A4                 LDRB            W15, [X23,X9]
.text:00000000000520A8                 ORR             W12, W15, #4
.text:00000000000520AC                 CMP             W12, #4
.text:00000000000520B0                 B.EQ            loc_52128
.text:00000000000520B4                 ADD             X14, X23, X9
.text:00000000000520B8                 CMP             W15, #5
.text:00000000000520BC                 LDRB            W13, [X14,#2]
.text:00000000000520C0                 LSR             X12, X13, #1
.text:00000000000520C4                 AND             X12, X12, #0x78
.text:00000000000520C8                 LDR             X12, [X19,X12]
.text:00000000000520CC                 B.EQ            loc_520F8
.text:00000000000520D0                 LDRB            W15, [X14,#1]
.text:00000000000520D4                 TBNZ            W15, #3, loc_520F8
.text:00000000000520D8                 ADD             X14, X19, X9
.text:00000000000520DC                 AND             X13, X13, #0xF
.text:00000000000520E0                 LDRSH           W15, [X14,#0x1122]
.text:00000000000520E4                 LDRH            W14, [X14,#0x1124]
.text:00000000000520E8                 SUB             W15, W28, W15,ASR#8
.text:00000000000520EC                 LSL             X14, X14, #1
.text:00000000000520F0                 ADD             X14, X14, W15,SXTW
.text:00000000000520F4                 B               loc_52108
.text:00000000000520F8 ; ---------------------------------------------------------------------------
.text:00000000000520F8 loc_520F8                               ; CODE XREF: VMSetSynthPolyphony+194↑j
.text:00000000000520F8                                         ; VMSetSynthPolyphony+19C↑j
.text:00000000000520F8                 LDRB            W13, [X14,#7]
.text:00000000000520FC                 LDRB            W15, [X14,#5]
.text:0000000000052100                 SUB             X14, X27, X13
.text:0000000000052104                 AND             X13, X15, #0xF
.text:0000000000052108 loc_52108                               ; CODE XREF: VMSetSynthPolyphony+1BC↑j
.text:0000000000052108                 ADD             X13, X12, X13,LSL#5
.text:000000000005210C                 LDRB            W12, [X12,#0x25A]
.text:0000000000052110                 LDRB            W13, [X13,#0x35]
.text:0000000000052114                 ADD             X13, X14, X13,LSL#2
.text:0000000000052118                 ADD             X12, X13, X12,LSL#8
.text:000000000005211C                 CMP             X12, X11
.text:0000000000052120                 CSEL            X11, X12, X11, GT
.text:0000000000052124                 CSEL            W8, W10, W8, GT
.text:0000000000052128 loc_52128                               ; CODE XREF: VMSetSynthPolyphony+178↑j
.text:0000000000052128                 ADD             X10, X10, #1
.text:000000000005212C                 ADD             X9, X9, #0x10
.text:0000000000052130                 CMP             X10, #0x40 ; '@'
.text:0000000000052134                 B.NE            loc_520A4
.text:0000000000052138                 TBNZ            W8, #0x1F, loc_521E4
.text:000000000005213C                 ADD             X9, X19, W8,SXTW#4
.text:0000000000052140                 ADD             X25, X9, X1
.text:0000000000052144                 LDRB            W10, [X25]
.text:0000000000052148                 CBZ             W10, loc_521D0
.text:000000000005214C                 CMP             W10, #4
.text:0000000000052150                 B.EQ            loc_521D0
.text:0000000000052154                 SXTW            X3, W8
.text:0000000000052158                 MOV             W8, #0x1120
.text:000000000005215C                 ADD             X2, X9, X8
.text:0000000000052160                 ADD             X8, X19, X3,LSL#4
.text:0000000000052164                 CMP             W10, #5
.text:0000000000052168                 B.NE            loc_52178
.text:000000000005216C                 MOV             W9, #0x112D
.text:0000000000052170                 LDRB            W8, [X8,X9]
.text:0000000000052174                 B               loc_5217C
.text:0000000000052178 ; ---------------------------------------------------------------------------
.text:0000000000052178 loc_52178                               ; CODE XREF: VMSetSynthPolyphony+230↑j
.text:0000000000052178                 LDRB            W8, [X8,X22]
.text:000000000005217C loc_5217C                               ; CODE XREF: VMSetSynthPolyphony+23C↑j
.text:000000000005217C                 LSR             W9, W8, #1
.text:0000000000052180                 AND             X9, X9, #0x78
.text:0000000000052184                 AND             W8, W8, #0xF
.text:0000000000052188                 ADD             X10, X19, X3,LSL#4
.text:000000000005218C                 LDR             X9, [X19,X9]
.text:0000000000052190                 MOV             X0, X19
.text:0000000000052194                 ADD             X8, X9, X8,LSL#5
.text:0000000000052198                 LDRB            W8, [X8,#0x35]
.text:000000000005219C                 ADD             X8, X9, X8
.text:00000000000521A0                 LDRB            W9, [X8,#0x236]
.text:00000000000521A4                 SUB             W9, W9, #1
.text:00000000000521A8                 STRB            W9, [X8,#0x236]
.text:00000000000521AC                 LDRB            W8, [X10,X22]
.text:00000000000521B0                 LSR             X8, X8, #1
.text:00000000000521B4                 AND             X8, X8, #0x78
.text:00000000000521B8                 LDR             X1, [X19,X8]
.text:00000000000521BC                 BLR             X26
.text:00000000000521C0                 MOV             W8, #4
.text:00000000000521C4                 MOV             W16, #0xFFFFFFFF
.text:00000000000521C8                 MOV             W1, #0x1128
.text:00000000000521CC                 STRB            W8, [X25]
.text:00000000000521D0 loc_521D0                               ; CODE XREF: VMSetSynthPolyphony+210↑j
.text:00000000000521D0                                         ; VMSetSynthPolyphony+218↑j
.text:00000000000521D0                 MOV             X0, XZR
.text:00000000000521D4                 SUB             X21, X21, #1
.text:00000000000521D8                 CMP             X20, X21
.text:00000000000521DC                 B.LT            loc_52094
.text:00000000000521E0                 B               loc_521E8
.text:00000000000521E4 ; ---------------------------------------------------------------------------
.text:00000000000521E4 loc_521E4                               ; CODE XREF: VMSetSynthPolyphony+48↑j
.text:00000000000521E4                                         ; VMSetSynthPolyphony+F8↑j ...
.text:00000000000521E4                 MOV             X0, XZR
.text:00000000000521E8 loc_521E8                               ; CODE XREF: VMSetSynthPolyphony+2C↑j
.text:00000000000521E8                                         ; VMSetSynthPolyphony+2A8↑j
.text:00000000000521E8                 LDP             X29, X30, [SP,#0x50+var_s0]
.text:00000000000521EC                 LDP             X20, X19, [SP,#0x50+var_10]
.text:00000000000521F0                 LDP             X22, X21, [SP,#0x50+var_20]
.text:00000000000521F4                 LDP             X24, X23, [SP,#0x50+var_30]
.text:00000000000521F8                 LDP             X26, X25, [SP,#0x50+var_40]
.text:00000000000521FC                 LDP             X28, X27, [SP+0x50+var_50],#0x60
.text:0000000000052200                 RET
.text:0000000000052200 ; } // starts at 51F38
.text:0000000000052200 ; End of function VMSetSynthPolyphony
.text:0000000000052200 ; ---------------------------------------------------------------------------
.text:0000000000052204                 ALIGN 8
.text:0000000000052208 ; =============== S U B R O U T I N E =======================================
.text:0000000000052208                 EXPORT VMGetSynthPolyphony
.text:0000000000052208 VMGetSynthPolyphony                     ; CODE XREF: .VMGetSynthPolyphony+C↓j
.text:0000000000052208                                         ; DATA XREF: LOAD:0000000000001A40↑o ...
.text:0000000000052208 ; __unwind {
.text:0000000000052208                 CBZ             X1, loc_52214
.text:000000000005220C                 MOV             X0, #0xFFFFFFFFFFFFFFF3
.text:0000000000052210                 RET
.text:0000000000052214 ; ---------------------------------------------------------------------------
.text:0000000000052214 loc_52214                               ; CODE XREF: VMGetSynthPolyphony↑j
.text:0000000000052214                 LDRH            W8, [X0,#0x1542]
.text:0000000000052218                 MOV             X0, XZR
.text:000000000005221C                 STR             X8, [X2]
.text:0000000000052220                 RET
.text:0000000000052220 ; } // starts at 52208
.text:0000000000052220 ; End of function VMGetSynthPolyphony
.text:0000000000052220 ; ---------------------------------------------------------------------------
.text:0000000000052224                 ALIGN 8
.text:0000000000052228 ; =============== S U B R O U T I N E =======================================
.text:0000000000052228 ; Attributes: bp-based frame
.text:0000000000052228                 EXPORT VMSetPolyphony
.text:0000000000052228 VMSetPolyphony                          ; CODE XREF: .VMSetPolyphony+C↓j
.text:0000000000052228                                         ; DATA XREF: LOAD:stru_5E8↑o ...
.text:0000000000052228 var_50          = -0x50
.text:0000000000052228 var_40          = -0x40
.text:0000000000052228 var_30          = -0x30
.text:0000000000052228 var_20          = -0x20
.text:0000000000052228 var_10          = -0x10
.text:0000000000052228 var_s0          =  0
.text:0000000000052228 ; __unwind {
.text:0000000000052228                 STP             X28, X27, [SP,#-0x10+var_50]!
.text:000000000005222C                 STP             X26, X25, [SP,#0x50+var_40]
.text:0000000000052230                 STP             X24, X23, [SP,#0x50+var_30]
.text:0000000000052234                 STP             X22, X21, [SP,#0x50+var_20]
.text:0000000000052238                 STP             X20, X19, [SP,#0x50+var_10]
.text:000000000005223C                 STP             X29, X30, [SP,#0x50+var_s0]
.text:0000000000052240                 ADD             X29, SP, #0x50
.text:0000000000052244                 TBNZ            X2, #0x3F, loc_5227C ; '?'
.text:0000000000052248                 MOV             X19, X1
.text:000000000005224C                 CBZ             X2, loc_52284
.text:0000000000052250                 CMP             X2, #0x41 ; 'A'
.text:0000000000052254                 B.GE            loc_52284
.text:0000000000052258                 STRH            W2, [X19,#0x220]
.text:000000000005225C                 MOV             X20, X0
.text:0000000000052260                 LDRH            W8, [X0,#0x1542]
.text:0000000000052264                 LDRB            W9, [X19,#0x256]
.text:0000000000052268                 CMP             X8, X2
.text:000000000005226C                 CSEL            X21, X8, X2, LT
.text:0000000000052270                 TBNZ            W9, #1, loc_52290
.text:0000000000052274                 STRB            W21, [X19,#0x246]
.text:0000000000052278                 B               loc_5229C
.text:000000000005227C ; ---------------------------------------------------------------------------
.text:000000000005227C loc_5227C                               ; CODE XREF: VMSetPolyphony+1C↑j
.text:000000000005227C                 MOV             X0, #0xFFFFFFFFFFFFFFF3
.text:0000000000052280                 B               loc_52458
.text:0000000000052284 ; ---------------------------------------------------------------------------
.text:0000000000052284 loc_52284                               ; CODE XREF: VMSetPolyphony+24↑j
.text:0000000000052284                                         ; VMSetPolyphony+2C↑j
.text:0000000000052284                 MOV             X0, XZR
.text:0000000000052288                 STRH            WZR, [X19,#0x220]
.text:000000000005228C                 B               loc_52458
.text:0000000000052290 ; ---------------------------------------------------------------------------
.text:0000000000052290 loc_52290                               ; CODE XREF: VMSetPolyphony+48↑j
.text:0000000000052290                 MOV             X0, X20
.text:0000000000052294                 MOV             X1, X19
.text:0000000000052298                 BL              .VMMIPUpdateChannelMuting
.text:000000000005229C loc_5229C                               ; CODE XREF: VMSetPolyphony+50↑j
.text:000000000005229C                 LDRH            W8, [X19,#0x222]
.text:00000000000522A0                 CMP             X21, X8
.text:00000000000522A4                 B.GE            loc_52454
.text:00000000000522A8                 LDRB            W8, [X19,#0x258]
.text:00000000000522AC                 MOV             W10, #0x112D
.text:00000000000522B0                 MOV             W9, WZR
.text:00000000000522B4                 ADD             X10, X20, X10
.text:00000000000522B8                 MOV             W11, #0x40 ; '@'
.text:00000000000522BC loc_522BC                               ; CODE XREF: VMSetPolyphony+B8↓j
.text:00000000000522BC                 LDRB            W12, [X10]
.text:00000000000522C0                 CMP             W8, W12,LSR#4
.text:00000000000522C4                 B.NE            loc_522D8
.text:00000000000522C8                 LDURB           W12, [X10,#-5]
.text:00000000000522CC                 ORR             W12, W12, #4
.text:00000000000522D0                 CMP             W12, #4
.text:00000000000522D4                 CINC            W9, W9, NE
.text:00000000000522D8 loc_522D8                               ; CODE XREF: VMSetPolyphony+9C↑j
.text:00000000000522D8                 ADD             X10, X10, #0x10
.text:00000000000522DC                 SUBS            X11, X11, #1
.text:00000000000522E0                 B.NE            loc_522BC
.text:00000000000522E4                 SXTW            X22, W9
.text:00000000000522E8                 CMP             X21, X22
.text:00000000000522EC                 B.GE            loc_52454
.text:00000000000522F0                 ADRP            X9, #wtSynth_ptr@PAGE
.text:00000000000522F4                 MOV             W10, #0x112F
.text:00000000000522F8                 ADD             X23, X20, X10
.text:00000000000522FC                 LDR             X9, [X9,#wtSynth_ptr@PAGEOFF]
.text:0000000000052300                 MOV             X1, #0xFFFFFFFFFFFFFFFF
.text:0000000000052304                 MOV             W16, #0xFFFFFFFF
.text:0000000000052308                 MOV             W26, #0x80
.text:000000000005230C                 MOV             W27, #0x180
.text:0000000000052310                 LDR             X28, [X9,#(off_58310 - 0x582F0)]
.text:0000000000052314                 MOV             W17, #0x1128
.text:0000000000052318                 MOV             W24, #0x112A
.text:000000000005231C                 B               loc_52324
.text:0000000000052320 ; ---------------------------------------------------------------------------
.text:0000000000052320 loc_52320                               ; CODE XREF: VMSetPolyphony+228↓j
.text:0000000000052320                 LDRB            W8, [X19,#0x258]
.text:0000000000052324 loc_52324                               ; CODE XREF: VMSetPolyphony+F4↑j
.text:0000000000052324                 MOV             X9, XZR
.text:0000000000052328                 MOV             X10, XZR
.text:000000000005232C                 AND             W11, W8, #0xFF
.text:0000000000052330                 MOV             W8, W16
.text:0000000000052334                 MOV             X12, X1
.text:0000000000052338 loc_52338                               ; CODE XREF: VMSetPolyphony+180↓j
.text:0000000000052338                 ADD             X14, X23, X9
.text:000000000005233C                 LDURB           W13, [X14,#-2]
.text:0000000000052340                 CMP             W11, W13,LSR#4
.text:0000000000052344                 B.NE            loc_5239C
.text:0000000000052348                 LDURB           W15, [X14,#-7]
.text:000000000005234C                 CMP             W15, #5
.text:0000000000052350                 B.EQ            loc_52378
.text:0000000000052354                 LDURB           W14, [X14,#-6]
.text:0000000000052358                 TBNZ            W14, #3, loc_52378
.text:000000000005235C                 ADD             X14, X20, X9
.text:0000000000052360                 LDRSH           W15, [X14,#0x1122]
.text:0000000000052364                 LDRH            W14, [X14,#0x1124]
.text:0000000000052368                 SUB             W15, W27, W15,ASR#8
.text:000000000005236C                 LSL             X14, X14, #1
.text:0000000000052370                 ADD             X14, X14, W15,SXTW
.text:0000000000052374                 B               loc_52380
.text:0000000000052378 ; ---------------------------------------------------------------------------
.text:0000000000052378 loc_52378                               ; CODE XREF: VMSetPolyphony+128↑j
.text:0000000000052378                                         ; VMSetPolyphony+130↑j
.text:0000000000052378                 LDRB            W14, [X23,X9]
.text:000000000005237C                 SUB             X14, X26, X14
.text:0000000000052380 loc_52380                               ; CODE XREF: VMSetPolyphony+14C↑j
.text:0000000000052380                 AND             X13, X13, #0xF
.text:0000000000052384                 ADD             X13, X19, X13,LSL#5
.text:0000000000052388                 LDRB            W13, [X13,#0x35]
.text:000000000005238C                 ADD             X13, X14, X13,LSL#2
.text:0000000000052390                 CMP             X13, X12
.text:0000000000052394                 CSEL            X12, X13, X12, GT
.text:0000000000052398                 CSEL            W8, W10, W8, GT
.text:000000000005239C loc_5239C                               ; CODE XREF: VMSetPolyphony+11C↑j
.text:000000000005239C                 ADD             X10, X10, #1
.text:00000000000523A0                 ADD             X9, X9, #0x10
.text:00000000000523A4                 CMP             X10, #0x40 ; '@'
.text:00000000000523A8                 B.NE            loc_52338
.text:00000000000523AC                 TBNZ            W8, #0x1F, loc_52454
.text:00000000000523B0                 ADD             X10, X20, W8,SXTW#4
.text:00000000000523B4                 ADD             X25, X10, X17
.text:00000000000523B8                 LDRB            W9, [X25]
.text:00000000000523BC                 CBZ             W9, loc_52448
.text:00000000000523C0                 CMP             W9, #4
.text:00000000000523C4                 B.EQ            loc_52448
.text:00000000000523C8                 SXTW            X3, W8
.text:00000000000523CC                 MOV             W8, #0x1120
.text:00000000000523D0                 ADD             X2, X10, X8
.text:00000000000523D4                 ADD             X8, X20, X3,LSL#4
.text:00000000000523D8                 CMP             W9, #5
.text:00000000000523DC                 B.NE            loc_523EC
.text:00000000000523E0                 MOV             W9, #0x112D
.text:00000000000523E4                 LDRB            W8, [X8,X9]
.text:00000000000523E8                 B               loc_523F0
.text:00000000000523EC ; ---------------------------------------------------------------------------
.text:00000000000523EC loc_523EC                               ; CODE XREF: VMSetPolyphony+1B4↑j
.text:00000000000523EC                 LDRB            W8, [X8,X24]
.text:00000000000523F0 loc_523F0                               ; CODE XREF: VMSetPolyphony+1C0↑j
.text:00000000000523F0                 LSR             W9, W8, #1
.text:00000000000523F4                 AND             X9, X9, #0x78
.text:00000000000523F8                 AND             W8, W8, #0xF
.text:00000000000523FC                 ADD             X10, X20, X3,LSL#4
.text:0000000000052400                 LDR             X9, [X20,X9]
.text:0000000000052404                 MOV             X0, X20
.text:0000000000052408                 ADD             X8, X9, X8,LSL#5
.text:000000000005240C                 LDRB            W8, [X8,#0x35]
.text:0000000000052410                 ADD             X8, X9, X8
.text:0000000000052414                 LDRB            W9, [X8,#0x236]
.text:0000000000052418                 SUB             W9, W9, #1
.text:000000000005241C                 STRB            W9, [X8,#0x236]
.text:0000000000052420                 LDRB            W8, [X10,X24]
.text:0000000000052424                 LSR             X8, X8, #1
.text:0000000000052428                 AND             X8, X8, #0x78
.text:000000000005242C                 LDR             X1, [X20,X8]
.text:0000000000052430                 BLR             X28
.text:0000000000052434                 MOV             W8, #4
.text:0000000000052438                 MOV             W16, #0xFFFFFFFF
.text:000000000005243C                 MOV             W17, #0x1128
.text:0000000000052440                 MOV             X1, #0xFFFFFFFFFFFFFFFF
.text:0000000000052444                 STRB            W8, [X25]
.text:0000000000052448 loc_52448                               ; CODE XREF: VMSetPolyphony+194↑j
.text:0000000000052448                                         ; VMSetPolyphony+19C↑j
.text:0000000000052448                 SUB             X22, X22, #1
.text:000000000005244C                 CMP             X21, X22
.text:0000000000052450                 B.LT            loc_52320
.text:0000000000052454 loc_52454                               ; CODE XREF: VMSetPolyphony+7C↑j
.text:0000000000052454                                         ; VMSetPolyphony+C4↑j ...
.text:0000000000052454                 MOV             X0, XZR
.text:0000000000052458 loc_52458                               ; CODE XREF: VMSetPolyphony+58↑j
.text:0000000000052458                                         ; VMSetPolyphony+64↑j
.text:0000000000052458                 LDP             X29, X30, [SP,#0x50+var_s0]
.text:000000000005245C                 LDP             X20, X19, [SP,#0x50+var_10]
.text:0000000000052460                 LDP             X22, X21, [SP,#0x50+var_20]
.text:0000000000052464                 LDP             X24, X23, [SP,#0x50+var_30]
.text:0000000000052468                 LDP             X26, X25, [SP,#0x50+var_40]
.text:000000000005246C                 LDP             X28, X27, [SP+0x50+var_50],#0x60
.text:0000000000052470                 RET
.text:0000000000052470 ; } // starts at 52228
.text:0000000000052470 ; End of function VMSetPolyphony
.text:0000000000052470 ; ---------------------------------------------------------------------------
.text:0000000000052474                 ALIGN 8
.text:0000000000052478 ; =============== S U B R O U T I N E =======================================
.text:0000000000052478                 EXPORT VMGetPolyphony
.text:0000000000052478 VMGetPolyphony                          ; CODE XREF: .VMGetPolyphony+C↓j
.text:0000000000052478                                         ; DATA XREF: LOAD:stru_1158↑o ...
.text:0000000000052478 ; __unwind {
.text:0000000000052478                 LDRH            W8, [X1,#0x220]
.text:000000000005247C                 MOV             X0, XZR
.text:0000000000052480                 STR             X8, [X2]
.text:0000000000052484                 RET
.text:0000000000052484 ; } // starts at 52478
.text:0000000000052484 ; End of function VMGetPolyphony
.text:0000000000052488 ; =============== S U B R O U T I N E =======================================
.text:0000000000052488                 EXPORT VMSetPriority
.text:0000000000052488 VMSetPriority                           ; CODE XREF: .VMSetPriority+C↓j
.text:0000000000052488                                         ; DATA XREF: LOAD:0000000000001578↑o ...
.text:0000000000052488 ; __unwind {
.text:0000000000052488                 MOV             X0, XZR
.text:000000000005248C                 STRB            W2, [X1,#0x25A]
.text:0000000000052490                 RET
.text:0000000000052490 ; } // starts at 52488
.text:0000000000052490 ; End of function VMSetPriority
.text:0000000000052490 ; ---------------------------------------------------------------------------
.text:0000000000052494                 ALIGN 8
.text:0000000000052498 ; =============== S U B R O U T I N E =======================================
.text:0000000000052498                 EXPORT VMGetPriority
.text:0000000000052498 VMGetPriority                           ; CODE XREF: .VMGetPriority+C↓j
.text:0000000000052498                                         ; DATA XREF: LOAD:0000000000000540↑o ...
.text:0000000000052498 ; __unwind {
.text:0000000000052498                 LDRB            W8, [X1,#0x25A]
.text:000000000005249C                 MOV             X0, XZR
.text:00000000000524A0                 STR             X8, [X2]
.text:00000000000524A4                 RET
.text:00000000000524A4 ; } // starts at 52498
.text:00000000000524A4 ; End of function VMGetPriority
.text:00000000000524A8 ; =============== S U B R O U T I N E =======================================
.text:00000000000524A8                 EXPORT VMSetVolume
.text:00000000000524A8 VMSetVolume                             ; CODE XREF: .VMSetVolume+C↓j
.text:00000000000524A8                                         ; DATA XREF: LOAD:0000000000001770↑o ...
.text:00000000000524A8 ; __unwind {
.text:00000000000524A8                 LDRB            W8, [X0,#0x256]
.text:00000000000524AC                 STRH            W1, [X0,#0x224]
.text:00000000000524B0                 ORR             W8, W8, #4
.text:00000000000524B4                 STRB            W8, [X0,#0x256]
.text:00000000000524B8                 RET
.text:00000000000524B8 ; } // starts at 524A8
.text:00000000000524B8 ; End of function VMSetVolume
.text:00000000000524B8 ; ---------------------------------------------------------------------------
.text:00000000000524BC                 ALIGN 0x20
.text:00000000000524C0 ; =============== S U B R O U T I N E =======================================
.text:00000000000524C0                 EXPORT VMSetPitchBendRange
.text:00000000000524C0 VMSetPitchBendRange                     ; DATA XREF: LOAD:0000000000001188↑o
.text:00000000000524C0 ; __unwind {
.text:00000000000524C0                 SXTW            X8, W1
.text:00000000000524C4                 ADD             X8, X0, X8,LSL#5
.text:00000000000524C8                 STRH            W2, [X8,#0x28]
.text:00000000000524CC                 RET
.text:00000000000524CC ; } // starts at 524C0
.text:00000000000524CC ; End of function VMSetPitchBendRange
.text:00000000000524D0 ; =============== S U B R O U T I N E =======================================
.text:00000000000524D0                 EXPORT VMValidateEASLib
.text:00000000000524D0 VMValidateEASLib                        ; DATA XREF: LOAD:stru_498↑o
.text:00000000000524D0 ; __unwind {
.text:00000000000524D0                 CBZ             X0, loc_52500
.text:00000000000524D4                 LDR             X8, [X0]
.text:00000000000524D8                 MOV             W9, #0x1534145
.text:00000000000524E0                 CMP             X8, X9
.text:00000000000524E4                 B.NE            loc_52508
.text:00000000000524E8                 LDR             X8, [X0,#8]
.text:00000000000524EC                 MOV             W9, #0x23FFFF
.text:00000000000524F0                 AND             X8, X8, X9
.text:00000000000524F4                 MOV             W9, #0x5622
.text:00000000000524F8                 CMP             X8, X9
.text:00000000000524FC                 B.NE            loc_52510
.text:0000000000052500 loc_52500                               ; CODE XREF: VMValidateEASLib↑j
.text:0000000000052500                 MOV             X0, XZR
.text:0000000000052504                 RET
.text:0000000000052508 ; ---------------------------------------------------------------------------
.text:0000000000052508 loc_52508                               ; CODE XREF: VMValidateEASLib+14↑j
.text:0000000000052508                 MOV             X0, #0xFFFFFFFFFFFFFFE2
.text:000000000005250C                 RET
.text:0000000000052510 ; ---------------------------------------------------------------------------
.text:0000000000052510 loc_52510                               ; CODE XREF: VMValidateEASLib+2C↑j
.text:0000000000052510                 MOV             X0, #0xFFFFFFFFFFFFFFE2
.text:0000000000052514                 RET
.text:0000000000052514 ; } // starts at 524D0
.text:0000000000052514 ; End of function VMValidateEASLib
.text:0000000000052518 ; =============== S U B R O U T I N E =======================================
.text:0000000000052518                 EXPORT VMSetGlobalEASLib
.text:0000000000052518 VMSetGlobalEASLib                       ; CODE XREF: .VMSetGlobalEASLib+C↓j
.text:0000000000052518                                         ; DATA XREF: LOAD:0000000000000660↑o ...
.text:0000000000052518 ; __unwind {
.text:0000000000052518                 CBZ             X1, loc_52548
.text:000000000005251C                 LDR             X8, [X1]
.text:0000000000052520                 MOV             W9, #0x1534145
.text:0000000000052528                 CMP             X8, X9
.text:000000000005252C                 B.NE            loc_52554
.text:0000000000052530                 LDR             X8, [X1,#8]
.text:0000000000052534                 MOV             W9, #0x23FFFF
.text:0000000000052538                 AND             X8, X8, X9
.text:000000000005253C                 MOV             W9, #0x5622
.text:0000000000052540                 CMP             X8, X9
.text:0000000000052544                 B.NE            loc_52560
.text:0000000000052548 loc_52548                               ; CODE XREF: VMSetGlobalEASLib↑j
.text:0000000000052548                 STR             X1, [X0,#0x1520]
.text:000000000005254C                 MOV             X0, XZR
.text:0000000000052550                 RET
.text:0000000000052554 ; ---------------------------------------------------------------------------
.text:0000000000052554 loc_52554                               ; CODE XREF: VMSetGlobalEASLib+14↑j
.text:0000000000052554                 MOV             X8, #0xFFFFFFFFFFFFFFE2
.text:0000000000052558                 MOV             X0, X8
.text:000000000005255C                 RET
.text:0000000000052560 ; ---------------------------------------------------------------------------
.text:0000000000052560 loc_52560                               ; CODE XREF: VMSetGlobalEASLib+2C↑j
.text:0000000000052560                 MOV             X8, #0xFFFFFFFFFFFFFFE2
.text:0000000000052564                 MOV             X0, X8
.text:0000000000052568                 RET
.text:0000000000052568 ; } // starts at 52518
.text:0000000000052568 ; End of function VMSetGlobalEASLib
.text:0000000000052568 ; ---------------------------------------------------------------------------
.text:000000000005256C                 ALIGN 0x10
.text:0000000000052570 ; =============== S U B R O U T I N E =======================================
.text:0000000000052570 ; Attributes: bp-based frame
.text:0000000000052570                 EXPORT VMSetGlobalDLSLib
.text:0000000000052570 VMSetGlobalDLSLib                       ; CODE XREF: .VMSetGlobalDLSLib+C↓j
.text:0000000000052570                                         ; DATA XREF: LOAD:stru_648↑o ...
.text:0000000000052570 var_10          = -0x10
.text:0000000000052570 var_s0          =  0
.text:0000000000052570 ; __unwind {
.text:0000000000052570                 STP             X20, X19, [SP,#-0x10+var_10]!
.text:0000000000052574                 STP             X29, X30, [SP,#0x10+var_s0]
.text:0000000000052578                 ADD             X29, SP, #0x10
.text:000000000005257C                 LDR             X9, [X0,#0x170]
.text:0000000000052580                 MOV             X19, X1
.text:0000000000052584                 LDR             X8, [X9,#0x1528]
.text:0000000000052588                 CBZ             X8, loc_525A0
.text:000000000005258C                 MOV             X20, X0
.text:0000000000052590                 LDR             X0, [X0]
.text:0000000000052594                 MOV             X1, X8
.text:0000000000052598                 BL              .DLSCleanup
.text:000000000005259C                 LDR             X9, [X20,#0x170]
.text:00000000000525A0 loc_525A0                               ; CODE XREF: VMSetGlobalDLSLib+18↑j
.text:00000000000525A0                 STR             X19, [X9,#0x1528]
.text:00000000000525A4                 MOV             X0, XZR
.text:00000000000525A8                 LDP             X29, X30, [SP,#0x10+var_s0]
.text:00000000000525AC                 LDP             X20, X19, [SP+0x10+var_10],#0x20
.text:00000000000525B0                 RET
.text:00000000000525B0 ; } // starts at 52570
.text:00000000000525B0 ; End of function VMSetGlobalDLSLib
.text:00000000000525B0 ; ---------------------------------------------------------------------------
.text:00000000000525B4                 ALIGN 8
.text:00000000000525B8 ; =============== S U B R O U T I N E =======================================
.text:00000000000525B8                 EXPORT VMSetDLSLib
.text:00000000000525B8 VMSetDLSLib                             ; CODE XREF: .VMSetDLSLib+C↓j
.text:00000000000525B8                                         ; DATA XREF: LOAD:00000000000009D8↑o ...
.text:00000000000525B8 ; __unwind {
.text:00000000000525B8                 MOV             X8, X0
.text:00000000000525BC                 MOV             X0, XZR
.text:00000000000525C0                 STR             X1, [X8,#0x10]
.text:00000000000525C4                 RET
.text:00000000000525C4 ; } // starts at 525B8
.text:00000000000525C4 ; End of function VMSetDLSLib
.text:00000000000525C8 ; =============== S U B R O U T I N E =======================================
.text:00000000000525C8                 EXPORT VMSetTranposition
.text:00000000000525C8 VMSetTranposition                       ; CODE XREF: .VMSetTranposition+C↓j
.text:00000000000525C8                                         ; DATA XREF: LOAD:0000000000001080↑o ...
.text:00000000000525C8 ; __unwind {
.text:00000000000525C8                 STRB            W1, [X0,#0x257]
.text:00000000000525CC                 RET
.text:00000000000525CC ; } // starts at 525C8
.text:00000000000525CC ; End of function VMSetTranposition
.text:00000000000525D0 ; =============== S U B R O U T I N E =======================================
.text:00000000000525D0                 EXPORT VMGetTranposition
.text:00000000000525D0 VMGetTranposition                       ; CODE XREF: .VMGetTranposition+C↓j
.text:00000000000525D0                                         ; DATA XREF: LOAD:00000000000006F0↑o ...
.text:00000000000525D0 ; __unwind {
.text:00000000000525D0                 LDRSB           X8, [X0,#0x257]
.text:00000000000525D4                 STR             X8, [X1]
.text:00000000000525D8                 RET
.text:00000000000525D8 ; } // starts at 525D0
.text:00000000000525D8 ; End of function VMGetTranposition
.text:00000000000525D8 ; ---------------------------------------------------------------------------
.text:00000000000525DC                 ALIGN 0x20
.text:00000000000525E0 ; =============== S U B R O U T I N E =======================================
.text:00000000000525E0                 EXPORT VMGetNoteCount
.text:00000000000525E0 VMGetNoteCount                          ; CODE XREF: .VMGetNoteCount+C↓j
.text:00000000000525E0                                         ; DATA XREF: LOAD:0000000000000570↑o ...
.text:00000000000525E0 ; __unwind {
.text:00000000000525E0                 LDR             X0, [X0,#0x218]
.text:00000000000525E4                 RET
.text:00000000000525E4 ; } // starts at 525E0
.text:00000000000525E4 ; End of function VMGetNoteCount
.text:00000000000525E8 ; =============== S U B R O U T I N E =======================================
.text:00000000000525E8 ; Attributes: bp-based frame
.text:00000000000525E8                 EXPORT VMShutdown
.text:00000000000525E8 VMShutdown                              ; CODE XREF: .VMShutdown+C↓j
.text:00000000000525E8                                         ; DATA XREF: LOAD:0000000000001170↑o ...
.text:00000000000525E8 var_10          = -0x10
.text:00000000000525E8 var_s0          =  0
.text:00000000000525E8 ; __unwind {
.text:00000000000525E8                 LDR             X8, [X0,#0x170]
.text:00000000000525EC                 CBZ             X8, locret_52638
.text:00000000000525F0                 STR             X19, [SP,#-0x10+var_10]!
.text:00000000000525F4                 STP             X29, X30, [SP,#0x10+var_s0]
.text:00000000000525F8                 ADD             X29, SP, #0x10
.text:00000000000525FC                 LDR             X1, [X8,#0x1528]
.text:0000000000052600                 MOV             X19, X0
.text:0000000000052604                 CBZ             X1, loc_52618
.text:0000000000052608                 LDR             X0, [X19]
.text:000000000005260C                 BL              .DLSCleanup
.text:0000000000052610                 LDR             X8, [X19,#0x170]
.text:0000000000052614                 STR             XZR, [X8,#0x1528]
.text:0000000000052618 loc_52618                               ; CODE XREF: VMShutdown+1C↑j
.text:0000000000052618                 LDRB            W8, [X19,#0x18B]
.text:000000000005261C                 CBNZ            W8, loc_5262C
.text:0000000000052620                 LDR             X0, [X19]
.text:0000000000052624                 LDR             X1, [X19,#0x170]
.text:0000000000052628                 BL              .EAS_HWFree
.text:000000000005262C loc_5262C                               ; CODE XREF: VMShutdown+34↑j
.text:000000000005262C                 STR             XZR, [X19,#0x170]
.text:0000000000052630                 LDP             X29, X30, [SP,#0x10+var_s0]
.text:0000000000052634                 LDR             X19, [SP+0x10+var_10],#0x20
.text:0000000000052638 locret_52638                            ; CODE XREF: VMShutdown+4↑j
.text:0000000000052638                 RET
.text:0000000000052638 ; } // starts at 525E8
.text:0000000000052638 ; End of function VMShutdown
.text:0000000000052638 ; ---------------------------------------------------------------------------
.text:000000000005263C                 ALIGN 0x20
.text:0000000000052640 ; =============== S U B R O U T I N E =======================================
.text:0000000000052640                 EXPORT WT_VoiceGain
.text:0000000000052640 WT_VoiceGain                            ; CODE XREF: .WT_VoiceGain+C↓j
.text:0000000000052640                                         ; DATA XREF: LOAD:0000000000001488↑o ...
.text:0000000000052640 var_10          = -0x10
.text:0000000000052640 ; __unwind {
.text:0000000000052640                 LDR             X9, [X1,#0x38]
.text:0000000000052644                 CMP             X9, #0
.text:0000000000052648                 B.LE            loc_526EC
.text:000000000005264C                 LDRSH           X8, [X0,#0x20]
.text:0000000000052650                 CMP             X9, #1
.text:0000000000052654                 LDRSH           X12, [X0,#0x22]
.text:0000000000052658                 LDR             X10, [X1]
.text:000000000005265C                 LDR             X11, [X1,#0x40]
.text:0000000000052660                 FMOV            D0, X8
.text:0000000000052664                 LDP             X13, X14, [X1,#0x28]
.text:0000000000052668                 SUB             X10, X10, X11
.text:000000000005266C                 LSL             X8, X10, #9
.text:0000000000052670                 LSL             X15, X11, #0x10
.text:0000000000052674                 INS             V0.D[1], X12
.text:0000000000052678                 BFXIL           X8, X10, #0x36, #1 ; '6'
.text:000000000005267C                 B.EQ            loc_52698
.text:0000000000052680                 ADD             X10, X13, X9,LSL#1
.text:0000000000052684                 CMP             X14, X10
.text:0000000000052688                 B.CS            loc_5272C
.text:000000000005268C                 ADD             X10, X14, X9,LSL#4
.text:0000000000052690                 CMP             X13, X10
.text:0000000000052694                 B.CS            loc_5272C
.text:0000000000052698 loc_52698                               ; CODE XREF: WT_VoiceGain+3C↑j
.text:0000000000052698                 MOV             X10, X14
.text:000000000005269C                 MOV             X11, X13
.text:00000000000526A0                 MOV             X12, X9
.text:00000000000526A4 loc_526A4                               ; CODE XREF: WT_VoiceGain+1B0↓j
.text:00000000000526A4                 UMOV            X9, V0.D[1]
.text:00000000000526A8                 ADD             X13, X15, X8
.text:00000000000526AC loc_526AC                               ; CODE XREF: WT_VoiceGain+A4↓j
.text:00000000000526AC                 LDRSH           X14, [X11],#2
.text:00000000000526B0                 ASR             X15, X13, #0x10
.text:00000000000526B4                 LDR             Q2, [X10]
.text:00000000000526B8                 MUL             X14, X15, X14
.text:00000000000526BC                 FMOV            X15, D0
.text:00000000000526C0                 SUBS            X12, X12, #1
.text:00000000000526C4                 ASR             X14, X14, #0xE
.text:00000000000526C8                 ADD             X13, X13, X8
.text:00000000000526CC                 MUL             X15, X14, X15
.text:00000000000526D0                 MUL             X14, X14, X9
.text:00000000000526D4                 FMOV            D1, X15
.text:00000000000526D8                 INS             V1.D[1], X14
.text:00000000000526DC                 SSRA            V2.2D, V1.2D, #4
.text:00000000000526E0                 STR             Q2, [X10],#0x10
.text:00000000000526E4                 B.NE            loc_526AC
.text:00000000000526E8 locret_526E8                            ; CODE XREF: WT_VoiceGain+1B4↓j
.text:00000000000526E8                 RET
.text:00000000000526EC ; ---------------------------------------------------------------------------
.text:00000000000526EC loc_526EC                               ; CODE XREF: WT_VoiceGain+8↑j
.text:00000000000526EC                 STP             X29, X30, [SP,#var_10]!
.text:00000000000526F0                 MOV             X29, SP
.text:00000000000526F4                 ADRP            X2, #aB26366256@PAGE ; "b/26366256"
.text:00000000000526F8                 ADD             X2, X2, #aB26366256@PAGEOFF ; "b/26366256"
.text:00000000000526FC                 MOV             W0, #6
.text:0000000000052700                 MOV             X1, XZR
.text:0000000000052704                 BL              .__android_log_print
.text:0000000000052708                 ADRP            X1, #a26366256@PAGE ; "26366256"
.text:000000000005270C                 MOV             W0, #0x4554
.text:0000000000052710                 ADD             X1, X1, #a26366256@PAGEOFF ; "26366256"
.text:0000000000052714                 MOVK            W0, #0x534E,LSL#16
.text:0000000000052718                 MOV             W2, #0xFFFFFFFF
.text:000000000005271C                 MOV             X3, XZR
.text:0000000000052720                 MOV             W4, WZR
.text:0000000000052724                 LDP             X29, X30, [SP+0x10+var_10],#0x10
.text:0000000000052728                 B               .__android_log_error_write
.text:000000000005272C ; ---------------------------------------------------------------------------
.text:000000000005272C loc_5272C                               ; CODE XREF: WT_VoiceGain+48↑j
.text:000000000005272C                                         ; WT_VoiceGain+54↑j
.text:000000000005272C                 MOVI            V4.2D, #0
.text:0000000000052730                 LSL             X10, X8, #1
.text:0000000000052734                 DUP             V5.2D, X15
.text:0000000000052738                 AND             X16, X9, #0xFFFFFFFFFFFFFFFE
.text:000000000005273C                 DUP             V1.2D, V0.D[0]
.text:0000000000052740                 SUB             X12, X9, X16
.text:0000000000052744                 DUP             V2.2D, V0.D[1]
.text:0000000000052748                 MADD            X15, X16, X8, X15
.text:000000000005274C                 DUP             V3.2D, X8
.text:0000000000052750                 ADD             X11, X13, X16,LSL#1
.text:0000000000052754                 MOV             X1, X16
.text:0000000000052758                 INS             V4.D[1], X8
.text:000000000005275C                 UMOV            X17, V1.D[1]
.text:0000000000052760                 UMOV            X0, V2.D[1]
.text:0000000000052764                 ADD             V4.2D, V5.2D, V4.2D
.text:0000000000052768                 DUP             V5.2D, X10
.text:000000000005276C                 ADD             X10, X14, X16,LSL#4
.text:0000000000052770 loc_52770                               ; CODE XREF: WT_VoiceGain+1A8↓j
.text:0000000000052770                 ADD             V6.2D, V4.2D, V3.2D
.text:0000000000052774                 LDRSH           X2, [X13]
.text:0000000000052778                 LDRSH           X5, [X13,#2]
.text:000000000005277C                 ADD             V4.2D, V4.2D, V5.2D
.text:0000000000052780                 LD2             {V16.2D-V17.2D}, [X14]
.text:0000000000052784                 ADD             X13, X13, #4
.text:0000000000052788                 SUBS            X1, X1, #2
.text:000000000005278C                 SSHR            V6.2D, V6.2D, #0x10
.text:0000000000052790                 FMOV            X4, D6
.text:0000000000052794                 UMOV            X3, V6.D[1]
.text:0000000000052798                 MUL             X2, X4, X2
.text:000000000005279C                 MUL             X3, X3, X5
.text:00000000000527A0                 FMOV            D6, X2
.text:00000000000527A4                 FMOV            X2, D1
.text:00000000000527A8                 INS             V6.D[1], X3
.text:00000000000527AC                 SSHR            V6.2D, V6.2D, #0xE
.text:00000000000527B0                 FMOV            X4, D6
.text:00000000000527B4                 UMOV            X3, V6.D[1]
.text:00000000000527B8                 MUL             X2, X4, X2
.text:00000000000527BC                 MUL             X5, X3, X17
.text:00000000000527C0                 MUL             X3, X3, X0
.text:00000000000527C4                 FMOV            D6, X2
.text:00000000000527C8                 FMOV            X2, D2
.text:00000000000527CC                 INS             V6.D[1], X5
.text:00000000000527D0                 MUL             X2, X4, X2
.text:00000000000527D4                 FMOV            D7, X2
.text:00000000000527D8                 SSRA            V16.2D, V6.2D, #4
.text:00000000000527DC                 INS             V7.D[1], X3
.text:00000000000527E0                 SSRA            V17.2D, V7.2D, #4
.text:00000000000527E4                 ST2             {V16.2D-V17.2D}, [X14],#0x20
.text:00000000000527E8                 B.NE            loc_52770
.text:00000000000527EC                 CMP             X9, X16
.text:00000000000527F0                 B.NE            loc_526A4
.text:00000000000527F4                 B               locret_526E8
.text:00000000000527F4 ; } // starts at 52640
.text:00000000000527F4 ; End of function WT_VoiceGain
.text:00000000000527F8 ; =============== S U B R O U T I N E =======================================
.text:00000000000527F8                 EXPORT WT_Interpolate
.text:00000000000527F8 WT_Interpolate                          ; CODE XREF: .WT_Interpolate+C↓j
.text:00000000000527F8                                         ; DATA XREF: LOAD:00000000000017B8↑o ...
.text:00000000000527F8 var_10          = -0x10
.text:00000000000527F8 ; __unwind {
.text:00000000000527F8                 LDR             X8, [X1,#0x38]
.text:00000000000527FC                 CMP             X8, #0
.text:0000000000052800                 B.LE            loc_52884
.text:0000000000052804                 LDP             X10, X9, [X0,#0x10]
.text:0000000000052808                 LDR             X13, [X0]
.text:000000000005280C                 LDR             X11, [X1,#0x28]
.text:0000000000052810                 LDRSB           X14, [X10]
.text:0000000000052814                 LDRSB           X15, [X10,#1]
.text:0000000000052818                 ADD             X13, X13, #1
.text:000000000005281C                 LDR             X12, [X1,#8]
.text:0000000000052820                 LSL             X14, X14, #8
.text:0000000000052824                 LSL             X15, X15, #8
.text:0000000000052828 loc_52828                               ; CODE XREF: WT_Interpolate:loc_52878↓j
.text:0000000000052828                 SUB             X16, X15, X14
.text:000000000005282C                 SUB             X8, X8, #1
.text:0000000000052830                 MUL             X16, X16, X9
.text:0000000000052834                 ADD             X9, X9, X12
.text:0000000000052838                 CMP             X9, #8,LSL#12
.text:000000000005283C                 LSR             X16, X16, #0xF
.text:0000000000052840                 ADD             W16, W16, W14
.text:0000000000052844                 LSR             W16, W16, #2
.text:0000000000052848                 STRH            W16, [X11],#2
.text:000000000005284C                 B.LT            loc_52878
.text:0000000000052850                 ADD             X10, X10, X9,LSR#15
.text:0000000000052854                 AND             X9, X9, #0x7FFF
.text:0000000000052858                 SUBS            X14, X10, X13
.text:000000000005285C                 B.MI            loc_52868
.text:0000000000052860                 LDR             X10, [X0,#8]
.text:0000000000052864                 ADD             X10, X10, X14
.text:0000000000052868 loc_52868                               ; CODE XREF: WT_Interpolate+64↑j
.text:0000000000052868                 LDRSB           X14, [X10]
.text:000000000005286C                 LDRSB           X15, [X10,#1]
.text:0000000000052870                 LSL             X14, X14, #8
.text:0000000000052874                 LSL             X15, X15, #8
.text:0000000000052878 loc_52878                               ; CODE XREF: WT_Interpolate+54↑j
.text:0000000000052878                 CBNZ            X8, loc_52828
.text:000000000005287C                 STP             X10, X9, [X0,#0x10]
.text:0000000000052880                 RET
.text:0000000000052884 ; ---------------------------------------------------------------------------
.text:0000000000052884 loc_52884                               ; CODE XREF: WT_Interpolate+8↑j
.text:0000000000052884                 STP             X29, X30, [SP,#var_10]!
.text:0000000000052888                 MOV             X29, SP
.text:000000000005288C                 ADRP            X2, #aB26366256@PAGE ; "b/26366256"
.text:0000000000052890                 ADD             X2, X2, #aB26366256@PAGEOFF ; "b/26366256"
.text:0000000000052894                 MOV             W0, #6
.text:0000000000052898                 MOV             X1, XZR
.text:000000000005289C                 BL              .__android_log_print
.text:00000000000528A0                 ADRP            X1, #a26366256@PAGE ; "26366256"
.text:00000000000528A4                 MOV             W0, #0x4554
.text:00000000000528A8                 ADD             X1, X1, #a26366256@PAGEOFF ; "26366256"
.text:00000000000528AC                 MOVK            W0, #0x534E,LSL#16
.text:00000000000528B0                 MOV             W2, #0xFFFFFFFF
.text:00000000000528B4                 MOV             X3, XZR
.text:00000000000528B8                 MOV             W4, WZR
.text:00000000000528BC                 LDP             X29, X30, [SP+0x10+var_10],#0x10
.text:00000000000528C0                 B               .__android_log_error_write
.text:00000000000528C0 ; } // starts at 527F8
.text:00000000000528C0 ; End of function WT_Interpolate
.text:00000000000528C0 ; ---------------------------------------------------------------------------
.text:00000000000528C4                 ALIGN 8
.text:00000000000528C8 ; =============== S U B R O U T I N E =======================================
.text:00000000000528C8                 EXPORT WT_InterpolateNoLoop
.text:00000000000528C8 WT_InterpolateNoLoop                    ; CODE XREF: .WT_InterpolateNoLoop+C↓j
.text:00000000000528C8                                         ; DATA XREF: LOAD:stru_4C8↑o ...
.text:00000000000528C8 var_10          = -0x10
.text:00000000000528C8 ; __unwind {
.text:00000000000528C8                 LDR             X8, [X1,#0x38]
.text:00000000000528CC                 CMP             X8, #0
.text:00000000000528D0                 B.LE            loc_5293C
.text:00000000000528D4                 LDP             X9, X10, [X0,#0x10]
.text:00000000000528D8                 LDR             X11, [X1,#0x28]
.text:00000000000528DC                 LDR             X12, [X1,#8]
.text:00000000000528E0                 LDRSB           X13, [X9]
.text:00000000000528E4                 LDRSB           X14, [X9,#1]
.text:00000000000528E8                 LSL             X13, X13, #8
.text:00000000000528EC                 LSL             X14, X14, #8
.text:00000000000528F0 loc_528F0                               ; CODE XREF: WT_InterpolateNoLoop:loc_52930↓j
.text:00000000000528F0                 SUB             X15, X14, X13
.text:00000000000528F4                 SUB             X8, X8, #1
.text:00000000000528F8                 MUL             X15, X15, X10
.text:00000000000528FC                 ADD             X10, X10, X12
.text:0000000000052900                 CMP             X10, #8,LSL#12
.text:0000000000052904                 LSR             X15, X15, #0xF
.text:0000000000052908                 ADD             W15, W15, W13
.text:000000000005290C                 LSR             W15, W15, #2
.text:0000000000052910                 STRH            W15, [X11],#2
.text:0000000000052914                 B.LT            loc_52930
.text:0000000000052918                 ADD             X9, X9, X10,LSR#15
.text:000000000005291C                 AND             X10, X10, #0x7FFF
.text:0000000000052920                 LDRSB           X13, [X9]
.text:0000000000052924                 LDRSB           X14, [X9,#1]
.text:0000000000052928                 LSL             X13, X13, #8
.text:000000000005292C                 LSL             X14, X14, #8
.text:0000000000052930 loc_52930                               ; CODE XREF: WT_InterpolateNoLoop+4C↑j
.text:0000000000052930                 CBNZ            X8, loc_528F0
.text:0000000000052934                 STP             X9, X10, [X0,#0x10]
.text:0000000000052938                 RET
.text:000000000005293C ; ---------------------------------------------------------------------------
.text:000000000005293C loc_5293C                               ; CODE XREF: WT_InterpolateNoLoop+8↑j
.text:000000000005293C                 STP             X29, X30, [SP,#var_10]!
.text:0000000000052940                 MOV             X29, SP
.text:0000000000052944                 ADRP            X2, #aB26366256@PAGE ; "b/26366256"
.text:0000000000052948                 ADD             X2, X2, #aB26366256@PAGEOFF ; "b/26366256"
.text:000000000005294C                 MOV             W0, #6
.text:0000000000052950                 MOV             X1, XZR
.text:0000000000052954                 BL              .__android_log_print
.text:0000000000052958                 ADRP            X1, #a26366256@PAGE ; "26366256"
.text:000000000005295C                 MOV             W0, #0x4554
.text:0000000000052960                 ADD             X1, X1, #a26366256@PAGEOFF ; "26366256"
.text:0000000000052964                 MOVK            W0, #0x534E,LSL#16
.text:0000000000052968                 MOV             W2, #0xFFFFFFFF
.text:000000000005296C                 MOV             X3, XZR
.text:0000000000052970                 MOV             W4, WZR
.text:0000000000052974                 LDP             X29, X30, [SP+0x10+var_10],#0x10
.text:0000000000052978                 B               .__android_log_error_write
.text:0000000000052978 ; } // starts at 528C8
.text:0000000000052978 ; End of function WT_InterpolateNoLoop
.text:0000000000052978 ; ---------------------------------------------------------------------------
.text:000000000005297C                 ALIGN 0x20
.text:0000000000052980 ; =============== S U B R O U T I N E =======================================
.text:0000000000052980                 EXPORT WT_VoiceFilter
.text:0000000000052980 WT_VoiceFilter                          ; DATA XREF: LOAD:0000000000000DB0↑o
.text:0000000000052980 var_10          = -0x10
.text:0000000000052980 ; __unwind {
.text:0000000000052980                 LDR             X8, [X1,#0x38]
.text:0000000000052984                 CMP             X8, #0
.text:0000000000052988                 B.LE            loc_529E4
.text:000000000005298C                 LDP             X11, X10, [X1,#0x20]
.text:0000000000052990                 LDRSH           X14, [X0]
.text:0000000000052994                 LDRSH           X9, [X0,#2]
.text:0000000000052998                 NEG             X12, X11
.text:000000000005299C                 LDP             X13, X11, [X1,#0x10]
.text:00000000000529A0                 ASR             X12, X12, #1
.text:00000000000529A4                 ASR             X13, X13, #1
.text:00000000000529A8 loc_529A8                               ; CODE XREF: WT_VoiceFilter+50↓j
.text:00000000000529A8                 MOV             X15, X9
.text:00000000000529AC                 LDRSH           X16, [X10]
.text:00000000000529B0                 MOV             X9, X14
.text:00000000000529B4                 MUL             X14, X14, X11
.text:00000000000529B8                 SUBS            X8, X8, #1
.text:00000000000529BC                 NEG             X14, X14
.text:00000000000529C0                 MADD            X14, X15, X12, X14
.text:00000000000529C4                 MADD            X15, X13, X16, X14
.text:00000000000529C8                 ASR             X14, X15, #0xE
.text:00000000000529CC                 STRH            W14, [X10],#2
.text:00000000000529D0                 B.NE            loc_529A8
.text:00000000000529D4                 LSR             X8, X15, #0xE
.text:00000000000529D8                 STRH            W9, [X0,#2]
.text:00000000000529DC                 STRH            W8, [X0]
.text:00000000000529E0                 RET
.text:00000000000529E4 ; ---------------------------------------------------------------------------
.text:00000000000529E4 loc_529E4                               ; CODE XREF: WT_VoiceFilter+8↑j
.text:00000000000529E4                 STP             X29, X30, [SP,#var_10]!
.text:00000000000529E8                 MOV             X29, SP
.text:00000000000529EC                 ADRP            X2, #aB26366256@PAGE ; "b/26366256"
.text:00000000000529F0                 ADD             X2, X2, #aB26366256@PAGEOFF ; "b/26366256"
.text:00000000000529F4                 MOV             W0, #6
.text:00000000000529F8                 MOV             X1, XZR
.text:00000000000529FC                 BL              .__android_log_print
.text:0000000000052A00                 ADRP            X1, #a26366256@PAGE ; "26366256"
.text:0000000000052A04                 MOV             W0, #0x4554
.text:0000000000052A08                 ADD             X1, X1, #a26366256@PAGEOFF ; "26366256"
.text:0000000000052A0C                 MOVK            W0, #0x534E,LSL#16
.text:0000000000052A10                 MOV             W2, #0xFFFFFFFF
.text:0000000000052A14                 MOV             X3, XZR
.text:0000000000052A18                 MOV             W4, WZR
.text:0000000000052A1C                 LDP             X29, X30, [SP+0x10+var_10],#0x10
.text:0000000000052A20                 B               .__android_log_error_write
.text:0000000000052A20 ; } // starts at 52980
.text:0000000000052A20 ; End of function WT_VoiceFilter
.text:0000000000052A20 ; ---------------------------------------------------------------------------
.text:0000000000052A24                 ALIGN 8
.text:0000000000052A28 ; =============== S U B R O U T I N E =======================================
.text:0000000000052A28                 EXPORT WT_NoiseGenerator
.text:0000000000052A28 WT_NoiseGenerator                       ; CODE XREF: .WT_NoiseGenerator+C↓j
.text:0000000000052A28                                         ; DATA XREF: LOAD:0000000000000A50↑o ...
.text:0000000000052A28 var_10          = -0x10
.text:0000000000052A28 ; __unwind {
.text:0000000000052A28                 LDR             X8, [X1,#0x38]
.text:0000000000052A2C                 CMP             X8, #0
.text:0000000000052A30                 B.LE            loc_52AA8
.text:0000000000052A34                 LDP             X12, X13, [X0,#0x10]
.text:0000000000052A38                 LDR             X15, [X0]
.text:0000000000052A3C                 MOV             W11, #0x8000
.text:0000000000052A40                 LDR             X9, [X1,#0x28]
.text:0000000000052A44                 LDR             X10, [X1,#8]
.text:0000000000052A48                 ASR             X14, X12, #0x12
.text:0000000000052A4C                 ASR             X12, X15, #0x12
.text:0000000000052A50 loc_52A50                               ; CODE XREF: WT_NoiseGenerator:loc_52AA0↓j
.text:0000000000052A50                 SUB             W15, W11, W13
.text:0000000000052A54                 MUL             W13, W13, W12
.text:0000000000052A58                 SUB             X8, X8, #1
.text:0000000000052A5C                 MUL             W15, W15, W14
.text:0000000000052A60                 LSR             W15, W15, #0xF
.text:0000000000052A64                 ADD             W13, W15, W13,LSR#15
.text:0000000000052A68                 STRH            W13, [X9],#2
.text:0000000000052A6C                 LDR             X13, [X0,#0x18]
.text:0000000000052A70                 ADD             X13, X13, X10
.text:0000000000052A74                 TST             X13, #0xFFFF8000
.text:0000000000052A78                 STR             X13, [X0,#0x18]
.text:0000000000052A7C                 B.EQ            loc_52AA0
.text:0000000000052A80                 LDR             X15, [X0]
.text:0000000000052A84                 AND             X13, X13, #0x7FFF
.text:0000000000052A88                 ADD             X14, X15, X15,LSL#2
.text:0000000000052A8C                 STP             X15, X13, [X0,#0x10]
.text:0000000000052A90                 ADD             X16, X14, #1
.text:0000000000052A94                 MOV             X14, X12
.text:0000000000052A98                 ASR             X12, X16, #0x12
.text:0000000000052A9C                 STR             X16, [X0]
.text:0000000000052AA0 loc_52AA0                               ; CODE XREF: WT_NoiseGenerator+54↑j
.text:0000000000052AA0                 CBNZ            X8, loc_52A50
.text:0000000000052AA4                 RET
.text:0000000000052AA8 ; ---------------------------------------------------------------------------
.text:0000000000052AA8 loc_52AA8                               ; CODE XREF: WT_NoiseGenerator+8↑j
.text:0000000000052AA8                 STP             X29, X30, [SP,#var_10]!
.text:0000000000052AAC                 MOV             X29, SP
.text:0000000000052AB0                 ADRP            X2, #aB26366256@PAGE ; "b/26366256"
.text:0000000000052AB4                 ADD             X2, X2, #aB26366256@PAGEOFF ; "b/26366256"
.text:0000000000052AB8                 MOV             W0, #6
.text:0000000000052ABC                 MOV             X1, XZR
.text:0000000000052AC0                 BL              .__android_log_print
.text:0000000000052AC4                 ADRP            X1, #a26366256@PAGE ; "26366256"
.text:0000000000052AC8                 MOV             W0, #0x4554
.text:0000000000052ACC                 ADD             X1, X1, #a26366256@PAGEOFF ; "26366256"
.text:0000000000052AD0                 MOVK            W0, #0x534E,LSL#16
.text:0000000000052AD4                 MOV             W2, #0xFFFFFFFF
.text:0000000000052AD8                 MOV             X3, XZR
.text:0000000000052ADC                 MOV             W4, WZR
.text:0000000000052AE0                 LDP             X29, X30, [SP+0x10+var_10],#0x10
.text:0000000000052AE4                 B               .__android_log_error_write
.text:0000000000052AE4 ; } // starts at 52A28
.text:0000000000052AE4 ; End of function WT_NoiseGenerator
.text:0000000000052AE8 ; =============== S U B R O U T I N E =======================================
.text:0000000000052AE8 ; Attributes: bp-based frame
.text:0000000000052AE8                 EXPORT WT_ProcessVoice
.text:0000000000052AE8 WT_ProcessVoice                         ; CODE XREF: .WT_ProcessVoice+C↓j
.text:0000000000052AE8                                         ; DATA XREF: LOAD:0000000000001500↑o ...
.text:0000000000052AE8 var_10          = -0x10
.text:0000000000052AE8 var_s0          =  0
.text:0000000000052AE8 ; __unwind {
.text:0000000000052AE8                 STP             X20, X19, [SP,#-0x10+var_10]!
.text:0000000000052AEC                 STP             X29, X30, [SP,#0x10+var_s0]
.text:0000000000052AF0                 ADD             X29, SP, #0x10
.text:0000000000052AF4                 LDR             X8, [X0,#8]
.text:0000000000052AF8                 MOV             X19, X1
.text:0000000000052AFC                 MOV             X20, X0
.text:0000000000052B00                 MOV             W9, #0xFFFFFFFF
.text:0000000000052B04                 CMP             X8, X9
.text:0000000000052B08                 B.NE            loc_52B24
.text:0000000000052B0C                 MOV             X0, X20
.text:0000000000052B10                 MOV             X1, X19
.text:0000000000052B14                 BL              .WT_NoiseGenerator
.text:0000000000052B18                 LDR             X13, [X19,#0x10]
.text:0000000000052B1C                 CBNZ            X13, loc_52B54
.text:0000000000052B20                 B               loc_52BEC
.text:0000000000052B24 ; ---------------------------------------------------------------------------
.text:0000000000052B24 loc_52B24                               ; CODE XREF: WT_ProcessVoice+20↑j
.text:0000000000052B24                 LDR             X9, [X20]
.text:0000000000052B28                 MOV             X0, X20
.text:0000000000052B2C                 MOV             X1, X19
.text:0000000000052B30                 CMP             X8, X9
.text:0000000000052B34                 B.NE            loc_52B48
.text:0000000000052B38                 BL              .WT_InterpolateNoLoop
.text:0000000000052B3C                 LDR             X13, [X19,#0x10]
.text:0000000000052B40                 CBNZ            X13, loc_52B54
.text:0000000000052B44                 B               loc_52BEC
.text:0000000000052B48 ; ---------------------------------------------------------------------------
.text:0000000000052B48 loc_52B48                               ; CODE XREF: WT_ProcessVoice+4C↑j
.text:0000000000052B48                 BL              .WT_Interpolate
.text:0000000000052B4C                 LDR             X13, [X19,#0x10]
.text:0000000000052B50                 CBZ             X13, loc_52BEC
.text:0000000000052B54 loc_52B54                               ; CODE XREF: WT_ProcessVoice+34↑j
.text:0000000000052B54                                         ; WT_ProcessVoice+58↑j
.text:0000000000052B54                 LDR             X8, [X19,#0x38]
.text:0000000000052B58                 CMP             X8, #0
.text:0000000000052B5C                 B.LE            loc_52BB8
.text:0000000000052B60                 LDP             X10, X12, [X19,#0x18]
.text:0000000000052B64                 LDR             X11, [X19,#0x28]
.text:0000000000052B68                 ASR             X13, X13, #1
.text:0000000000052B6C                 LDRSH           X14, [X20,#0x24]
.text:0000000000052B70                 LDRSH           X9, [X20,#0x26]
.text:0000000000052B74                 NEG             X12, X12
.text:0000000000052B78                 ASR             X12, X12, #1
.text:0000000000052B7C loc_52B7C                               ; CODE XREF: WT_ProcessVoice+BC↓j
.text:0000000000052B7C                 MOV             X15, X9
.text:0000000000052B80                 LDRSH           X16, [X11]
.text:0000000000052B84                 MOV             X9, X14
.text:0000000000052B88                 MUL             X14, X14, X10
.text:0000000000052B8C                 SUBS            X8, X8, #1
.text:0000000000052B90                 NEG             X14, X14
.text:0000000000052B94                 MADD            X14, X15, X12, X14
.text:0000000000052B98                 MADD            X15, X13, X16, X14
.text:0000000000052B9C                 ASR             X14, X15, #0xE
.text:0000000000052BA0                 STRH            W14, [X11],#2
.text:0000000000052BA4                 B.NE            loc_52B7C
.text:0000000000052BA8                 LSR             X8, X15, #0xE
.text:0000000000052BAC                 STRH            W9, [X20,#0x26]
.text:0000000000052BB0                 STRH            W8, [X20,#0x24]
.text:0000000000052BB4                 B               loc_52BEC
.text:0000000000052BB8 ; ---------------------------------------------------------------------------
.text:0000000000052BB8 loc_52BB8                               ; CODE XREF: WT_ProcessVoice+74↑j
.text:0000000000052BB8                 ADRP            X2, #aB26366256@PAGE ; "b/26366256"
.text:0000000000052BBC                 ADD             X2, X2, #aB26366256@PAGEOFF ; "b/26366256"
.text:0000000000052BC0                 MOV             W0, #6
.text:0000000000052BC4                 MOV             X1, XZR
.text:0000000000052BC8                 BL              .__android_log_print
.text:0000000000052BCC                 ADRP            X1, #a26366256@PAGE ; "26366256"
.text:0000000000052BD0                 MOV             W0, #0x4554
.text:0000000000052BD4                 ADD             X1, X1, #a26366256@PAGEOFF ; "26366256"
.text:0000000000052BD8                 MOVK            W0, #0x534E,LSL#16
.text:0000000000052BDC                 MOV             W2, #0xFFFFFFFF
.text:0000000000052BE0                 MOV             X3, XZR
.text:0000000000052BE4                 MOV             W4, WZR
.text:0000000000052BE8                 BL              .__android_log_error_write
.text:0000000000052BEC loc_52BEC                               ; CODE XREF: WT_ProcessVoice+38↑j
.text:0000000000052BEC                                         ; WT_ProcessVoice+5C↑j ...
.text:0000000000052BEC                 LDP             X29, X30, [SP,#0x10+var_s0]
.text:0000000000052BF0                 MOV             X0, X20
.text:0000000000052BF4                 MOV             X1, X19
.text:0000000000052BF8                 LDP             X20, X19, [SP+0x10+var_10],#0x20
.text:0000000000052BFC                 B               .WT_VoiceGain
.text:0000000000052BFC ; } // starts at 52AE8
.text:0000000000052BFC ; End of function WT_ProcessVoice
.text:0000000000052C00 ; =============== S U B R O U T I N E =======================================
.text:0000000000052C00 sub_52C00                               ; DATA XREF: .data.rel.ro:wtSynth↓o
.text:0000000000052C00 ; __unwind {
.text:0000000000052C00                 MOVI            V0.2D, #0
.text:0000000000052C04                 MOV             X8, XZR
.text:0000000000052C08                 MOV             W9, #0x202
.text:0000000000052C0C loc_52C0C                               ; CODE XREF: sub_52C00+28↓j
.text:0000000000052C0C                 ADD             X10, X0, X8
.text:0000000000052C10                 ADD             X8, X8, #0x40 ; '@'
.text:0000000000052C14                 CMP             X8, #1,LSL#12
.text:0000000000052C18                 STR             W9, [X10,#0x158]
.text:0000000000052C1C                 STR             D0, [X10,#0x150]
.text:0000000000052C20                 STP             XZR, XZR, [X10,#0x138]
.text:0000000000052C24                 STR             XZR, [X10,#0x130]
.text:0000000000052C28                 B.NE            loc_52C0C
.text:0000000000052C2C                 MOV             W0, #1
.text:0000000000052C30                 RET
.text:0000000000052C30 ; } // starts at 52C00
.text:0000000000052C30 ; End of function sub_52C00
.text:0000000000052C30 ; ---------------------------------------------------------------------------
.text:0000000000052C34                 ALIGN 8
.text:0000000000052C38 ; =============== S U B R O U T I N E =======================================
.text:0000000000052C38 ; Attributes: bp-based frame
.text:0000000000052C38 sub_52C38                               ; DATA XREF: VMStartVoice+2CC↑o
.text:0000000000052C38                                         ; .data.rel.ro:off_582F8↓o
.text:0000000000052C38 var_20          = -0x20
.text:0000000000052C38 var_10          = -0x10
.text:0000000000052C38 var_s0          =  0
.text:0000000000052C38 ; __unwind {
.text:0000000000052C38                 STP             X22, X21, [SP,#-0x10+var_20]!
.text:0000000000052C3C                 STP             X20, X19, [SP,#0x20+var_10]
.text:0000000000052C40                 STP             X29, X30, [SP,#0x20+var_s0]
.text:0000000000052C44                 ADD             X29, SP, #0x20
.text:0000000000052C48                 LDRB            W8, [X2,#0xA]
.text:0000000000052C4C                 MOV             W9, #8
.text:0000000000052C50                 STRH            W4, [X2]
.text:0000000000052C54                 MOV             X19, X1
.text:0000000000052C58                 MOV             W11, W4
.text:0000000000052C5C                 STRB            W9, [X2,#9]
.text:0000000000052C60                 AND             X8, X8, #0xF
.text:0000000000052C64                 ADD             X10, X1, X8,LSL#5
.text:0000000000052C68                 MOV             X8, X10
.text:0000000000052C6C                 LDRB            W9, [X8,#0x34]!
.text:0000000000052C70                 TBZ             W9, #2, loc_52CE4
.text:0000000000052C74                 LDRSH           W11, [X10,#0x26]
.text:0000000000052C78                 LDRSH           W12, [X10,#0x28]
.text:0000000000052C7C                 LSL             W11, W11, #2
.text:0000000000052C80                 SUB             W11, W11, #8,LSL#12
.text:0000000000052C84                 MUL             W12, W11, W12
.text:0000000000052C88                 MOV             X11, X10
.text:0000000000052C8C                 SBFX            X12, X12, #0xF, #0x11
.text:0000000000052C90                 STR             X12, [X11,#0x18]!
.text:0000000000052C94                 LDRB            W13, [X11,#0x16]
.text:0000000000052C98                 LDRB            W14, [X11,#0x18]
.text:0000000000052C9C                 MUL             W13, W13, W14
.text:0000000000052CA0                 LDRH            W14, [X19,#0x224]
.text:0000000000052CA4                 UBFIZ           W13, W13, #1, #0x10
.text:0000000000052CA8                 MUL             W13, W13, W13
.text:0000000000052CAC                 LSR             W13, W13, #0xF
.text:0000000000052CB0                 MUL             W13, W13, W14
.text:0000000000052CB4                 LSR             W13, W13, #0xF
.text:0000000000052CB8                 STRH            W13, [X11,#8]
.text:0000000000052CBC                 TBNZ            W9, #3, loc_52CD8
.text:0000000000052CC0                 LDRSB           X13, [X10,#0x31]
.text:0000000000052CC4                 MOV             W14, #0x64 ; 'd'
.text:0000000000052CC8                 LDRSB           X10, [X10,#0x32]
.text:0000000000052CCC                 ADD             X12, X13, X12
.text:0000000000052CD0                 MADD            X10, X10, X14, X12
.text:0000000000052CD4                 STR             X10, [X11]
.text:0000000000052CD8 loc_52CD8                               ; CODE XREF: sub_52C38+84↑j
.text:0000000000052CD8                 AND             W9, W9, #0xFFFFFFFB
.text:0000000000052CDC                 STRB            W9, [X8]
.text:0000000000052CE0                 LDRH            W11, [X2]
.text:0000000000052CE4 loc_52CE4                               ; CODE XREF: sub_52C38+38↑j
.text:0000000000052CE4                 TBNZ            W11, #0xE, loc_52DC8
.text:0000000000052CE8                 LDR             X8, [X19,#8]
.text:0000000000052CEC                 AND             X9, X4, #0xFFFF
.text:0000000000052CF0                 ADD             X20, X0, X3,LSL#6
.text:0000000000052CF4                 MOV             W10, #2
.text:0000000000052CF8                 ADD             X1, X20, #0x140
.text:0000000000052CFC                 LDR             X8, [X8,#0x20]
.text:0000000000052D00                 ADD             X22, X20, #0x120
.text:0000000000052D04                 ADD             X21, X8, X9,LSL#5
.text:0000000000052D08                 LDRH            W8, [X21,#0x1A]
.text:0000000000052D0C                 STRH            W8, [X20,#0x15A]
.text:0000000000052D10                 LDR             X9, [X19,#8]
.text:0000000000052D14                 LDR             X9, [X9,#0x28]
.text:0000000000052D18                 STRB            W10, [X20,#0x158]
.text:0000000000052D1C                 STRH            WZR, [X20,#0x150]
.text:0000000000052D20                 ADD             X8, X9, X8,LSL#5
.text:0000000000052D24                 LDRH            W9, [X8]
.text:0000000000052D28                 STRB            W10, [X20,#0x159]
.text:0000000000052D2C                 STRH            WZR, [X20,#0x152]
.text:0000000000052D30                 STRH            W9, [X20,#0x154]
.text:0000000000052D34                 LDRH            W9, [X8,#8]
.text:0000000000052D38                 STRH            WZR, [X20,#0x148]
.text:0000000000052D3C                 STRH            W9, [X20,#0x156]
.text:0000000000052D40                 LDRH            W9, [X8,#0x12]
.text:0000000000052D44                 NEG             W9, W9
.text:0000000000052D48                 STRH            W9, [X20,#0x14A]
.text:0000000000052D4C                 LDRB            W9, [X2,#0xA]
.text:0000000000052D50                 STRH            WZR, [X2,#2]
.text:0000000000052D54                 ADD             X2, X20, #0x142
.text:0000000000052D58                 LDRSB           W8, [X8,#0x1E]
.text:0000000000052D5C                 AND             X9, X9, #0xF
.text:0000000000052D60                 ADD             X9, X19, X9,LSL#5
.text:0000000000052D64                 LDRB            W9, [X9,#0x2F]
.text:0000000000052D68                 ADD             W8, W9, W8
.text:0000000000052D6C                 SUB             W0, W8, #0x40 ; '@'
.text:0000000000052D70                 BL              .EAS_CalcPanControl
.text:0000000000052D74                 STR             WZR, [X20,#0x144]
.text:0000000000052D78                 LDRB            W8, [X21]
.text:0000000000052D7C                 TBNZ            W8, #1, loc_52DDC
.text:0000000000052D80                 LDR             X8, [X19,#8]
.text:0000000000052D84                 MOV             X9, X21
.text:0000000000052D88                 LDP             X10, X8, [X8,#0x38]
.text:0000000000052D8C                 LDRH            W11, [X9,#0x18]!
.text:0000000000052D90                 LDR             X10, [X10,X11,LSL#3]
.text:0000000000052D94                 ADD             X8, X10, X8
.text:0000000000052D98                 STR             X8, [X20,#0x130]
.text:0000000000052D9C                 LDRB            W10, [X21]
.text:0000000000052DA0                 TBNZ            W10, #0, loc_52DF8
.text:0000000000052DA4                 LDR             X10, [X19,#8]
.text:0000000000052DA8                 LDRH            W9, [X9]
.text:0000000000052DAC                 LDR             X10, [X10,#0x30]
.text:0000000000052DB0                 LDR             X9, [X10,X9,LSL#3]
.text:0000000000052DB4                 ADD             X8, X8, X9
.text:0000000000052DB8                 SUB             X8, X8, #1
.text:0000000000052DBC                 STR             X8, [X22]
.text:0000000000052DC0                 STR             X8, [X20,#0x128]
.text:0000000000052DC4                 B               loc_52E14
.text:0000000000052DC8 ; ---------------------------------------------------------------------------
.text:0000000000052DC8 loc_52DC8                               ; CODE XREF: sub_52C38:loc_52CE4↑j
.text:0000000000052DC8                 MOV             X1, X19
.text:0000000000052DCC                 LDP             X29, X30, [SP,#0x20+var_s0]
.text:0000000000052DD0                 LDP             X20, X19, [SP,#0x20+var_10]
.text:0000000000052DD4                 LDP             X22, X21, [SP+0x20+var_20],#0x30
.text:0000000000052DD8                 B               .DLS_StartVoice
.text:0000000000052DDC ; ---------------------------------------------------------------------------
.text:0000000000052DDC loc_52DDC                               ; CODE XREF: sub_52C38+144↑j
.text:0000000000052DDC                 ADRP            X8, #xmmword_47C0@PAGE
.text:0000000000052DE0                 MOV             W9, #0x45CC58
.text:0000000000052DE8                 LDR             Q0, [X8,#xmmword_47C0@PAGEOFF]
.text:0000000000052DEC                 STR             X9, [X20,#0x130]
.text:0000000000052DF0                 STR             Q0, [X22]
.text:0000000000052DF4                 B               loc_52E14
.text:0000000000052DF8 ; ---------------------------------------------------------------------------
.text:0000000000052DF8 loc_52DF8                               ; CODE XREF: sub_52C38+168↑j
.text:0000000000052DF8                 LDR             X9, [X21,#8]
.text:0000000000052DFC                 ADD             X9, X9, X8
.text:0000000000052E00                 STR             X9, [X20,#0x128]
.text:0000000000052E04                 LDR             X9, [X21,#0x10]
.text:0000000000052E08                 ADD             X8, X8, X9
.text:0000000000052E0C                 SUB             X8, X8, #1
.text:0000000000052E10                 STR             X8, [X22]
.text:0000000000052E14 loc_52E14                               ; CODE XREF: sub_52C38+18C↑j
.text:0000000000052E14                                         ; sub_52C38+1BC↑j
.text:0000000000052E14                 LDP             X29, X30, [SP,#0x20+var_s0]
.text:0000000000052E18                 LDP             X20, X19, [SP,#0x20+var_10]
.text:0000000000052E1C                 MOV             X0, XZR
.text:0000000000052E20                 LDP             X22, X21, [SP+0x20+var_20],#0x30
.text:0000000000052E24                 RET
.text:0000000000052E24 ; } // starts at 52C38
.text:0000000000052E24 ; End of function sub_52C38
.text:0000000000052E28 ; =============== S U B R O U T I N E =======================================
.text:0000000000052E28 ; Attributes: bp-based frame
.text:0000000000052E28 sub_52E28                               ; DATA XREF: VMAddSamples+60↑o
.text:0000000000052E28                                         ; .data.rel.ro:off_58300↓o
.text:0000000000052E28 var_C8          = -0xC8
.text:0000000000052E28 var_C0          = -0xC0
.text:0000000000052E28 var_B8          = -0xB8
.text:0000000000052E28 var_A8          = -0xA8
.text:0000000000052E28 var_A0          = -0xA0
.text:0000000000052E28 var_98          = -0x98
.text:0000000000052E28 var_90          = -0x90
.text:0000000000052E28 var_88          = -0x88
.text:0000000000052E28 var_78          = -0x78
.text:0000000000052E28 var_68          = -0x68
.text:0000000000052E28 var_60          = -0x60
.text:0000000000052E28 var_58          = -0x58
.text:0000000000052E28 var_50          = -0x50
.text:0000000000052E28 var_40          = -0x40
.text:0000000000052E28 var_30          = -0x30
.text:0000000000052E28 var_20          = -0x20
.text:0000000000052E28 var_10          = -0x10
.text:0000000000052E28 var_s0          =  0
.text:0000000000052E28 ; __unwind {
.text:0000000000052E28                 SUB             SP, SP, #0xE0
.text:0000000000052E2C                 STP             X28, X27, [SP,#0xD0+var_50]
.text:0000000000052E30                 STP             X26, X25, [SP,#0xD0+var_40]
.text:0000000000052E34                 STP             X24, X23, [SP,#0xD0+var_30]
.text:0000000000052E38                 STP             X22, X21, [SP,#0xD0+var_20]
.text:0000000000052E3C                 STP             X20, X19, [SP,#0xD0+var_10]
.text:0000000000052E40                 STP             X29, X30, [SP,#0xD0+var_s0]
.text:0000000000052E44                 ADD             X29, SP, #0xD0
.text:0000000000052E48                 MRS             X21, #3, c13, c0, #2
.text:0000000000052E4C                 MOV             X20, X5
.text:0000000000052E50                 LDR             X8, [X21,#0x28]
.text:0000000000052E54                 MOV             X19, X2
.text:0000000000052E58                 MOV             X24, X1
.text:0000000000052E5C                 STUR            X8, [X29,#var_58]
.text:0000000000052E60                 LDRH            W8, [X2]
.text:0000000000052E64                 TBNZ            W8, #0xE, loc_52EF0
.text:0000000000052E68                 ADD             X28, X0, X3,LSL#6
.text:0000000000052E6C                 LDR             X9, [X24,#8]
.text:0000000000052E70                 STR             X21, [SP,#0xD0+var_A8]
.text:0000000000052E74                 MOV             X10, XZR
.text:0000000000052E78                 LDRSH           X12, [X19,#2]
.text:0000000000052E7C                 ADD             X15, X28, #0x158
.text:0000000000052E80                 LDRB            W11, [X28,#0x158]
.text:0000000000052E84                 LDP             X23, X25, [X9,#0x20]
.text:0000000000052E88                 LDRH            W27, [X28,#0x15A]
.text:0000000000052E8C                 LDRB            W9, [X19,#0xA]
.text:0000000000052E90                 SUB             W11, W11, #2
.text:0000000000052E94                 CMP             W11, #4
.text:0000000000052E98                 STR             X12, [SP,#0xD0+var_60]
.text:0000000000052E9C                 B.HI            loc_52F70
.text:0000000000052EA0                 ADRP            X12, #unk_5C1E@PAGE
.text:0000000000052EA4                 ADD             X12, X12, #unk_5C1E@PAGEOFF
.text:0000000000052EA8                 ADR             X13, loc_52EB8
.text:0000000000052EAC                 LDRB            W14, [X12,X11]
.text:0000000000052EB0                 ADD             X13, X13, X14,LSL#2
.text:0000000000052EB4                 BR              X13
.text:0000000000052EB8 ; ---------------------------------------------------------------------------
.text:0000000000052EB8 loc_52EB8                               ; DATA XREF: sub_52E28+80↑o
.text:0000000000052EB8                 LDRSH           X10, [X28,#0x150]
.text:0000000000052EBC                 LDRSH           X11, [X28,#0x154]
.text:0000000000052EC0                 ADD             X10, X11, X10
.text:0000000000052EC4                 MOV             W11, #0x7FFF
.text:0000000000052EC8                 CMP             X10, X11
.text:0000000000052ECC                 B.LT            loc_52F70
.text:0000000000052ED0                 MOV             W10, #4
.text:0000000000052ED4                 ADD             X11, X25, X27,LSL#5
.text:0000000000052ED8                 ADD             X12, X28, #0x154
.text:0000000000052EDC                 STRB            W10, [X15]
.text:0000000000052EE0                 MOV             W10, #0x7FFF
.text:0000000000052EE4                 LDRH            W11, [X11,#2]
.text:0000000000052EE8                 STRH            W11, [X12]
.text:0000000000052EEC                 B               loc_52F70
.text:0000000000052EF0 ; ---------------------------------------------------------------------------
.text:0000000000052EF0 loc_52EF0                               ; CODE XREF: sub_52E28+3C↑j
.text:0000000000052EF0                 MOV             X1, X24
.text:0000000000052EF4                 MOV             X2, X19
.text:0000000000052EF8                 MOV             X5, X20
.text:0000000000052EFC                 BL              .DLS_UpdateVoice
.text:0000000000052F00                 MOV             W22, W0
.text:0000000000052F04                 B               loc_533E4
.text:0000000000052F08 ; ---------------------------------------------------------------------------
.text:0000000000052F08                 LDRSH           W10, [X28,#0x150]
.text:0000000000052F0C                 ADD             X11, X25, X27,LSL#5
.text:0000000000052F10                 LDRSH           W12, [X28,#0x154]
.text:0000000000052F14                 LDRSH           X11, [X11,#4]
.text:0000000000052F18                 MUL             W10, W12, W10
.text:0000000000052F1C                 SBFX            X10, X10, #0xF, #0x11
.text:0000000000052F20                 CMP             X10, X11
.text:0000000000052F24                 B.GT            loc_52F70
.text:0000000000052F28                 CMP             W11, #1
.text:0000000000052F2C                 B.LT            loc_52F64
.text:0000000000052F30                 MOV             W12, #5
.text:0000000000052F34                 B               loc_52F68
.text:0000000000052F38 ; ---------------------------------------------------------------------------
.text:0000000000052F38                 LDRSH           W10, [X28,#0x150]
.text:0000000000052F3C                 LDRSH           W11, [X28,#0x154]
.text:0000000000052F40                 MUL             W10, W11, W10
.text:0000000000052F44                 CMP             W10, #8,LSL#12
.text:0000000000052F48                 B.GE            loc_52F5C
.text:0000000000052F4C                 MOV             W11, #8
.text:0000000000052F50                 MOV             X10, XZR
.text:0000000000052F54                 STRB            W11, [X15]
.text:0000000000052F58                 B               loc_52F70
.text:0000000000052F5C ; ---------------------------------------------------------------------------
.text:0000000000052F5C loc_52F5C                               ; CODE XREF: sub_52E28+120↑j
.text:0000000000052F5C                 SBFX            X10, X10, #0xF, #0x11
.text:0000000000052F60                 B               loc_52F70
.text:0000000000052F64 ; ---------------------------------------------------------------------------
.text:0000000000052F64 loc_52F64                               ; CODE XREF: sub_52E28+104↑j
.text:0000000000052F64                 MOV             W12, #8
.text:0000000000052F68 loc_52F68                               ; CODE XREF: sub_52E28+10C↑j
.text:0000000000052F68                 MOV             X10, X11
.text:0000000000052F6C                 STRB            W12, [X15]
.text:0000000000052F70 loc_52F70                               ; CODE XREF: sub_52E28+74↑j
.text:0000000000052F70                                         ; sub_52E28+A4↑j ...
.text:0000000000052F70                 STRH            W10, [X28,#0x150]
.text:0000000000052F74                 LDRB            W10, [X28,#0x159]
.text:0000000000052F78                 MOV             X11, XZR
.text:0000000000052F7C                 STR             X15, [SP,#0xD0+var_C0]
.text:0000000000052F80                 SUB             W12, W10, #2
.text:0000000000052F84                 CMP             W12, #4
.text:0000000000052F88                 B.HI            loc_5302C
.text:0000000000052F8C                 ADRP            X13, #unk_5C23@PAGE
.text:0000000000052F90                 ADD             X13, X13, #unk_5C23@PAGEOFF
.text:0000000000052F94                 ADD             X10, X28, #0x159
.text:0000000000052F98                 ADR             X14, loc_52FA8
.text:0000000000052F9C                 LDRB            W15, [X13,X12]
.text:0000000000052FA0                 ADD             X14, X14, X15,LSL#2
.text:0000000000052FA4                 BR              X14
.text:0000000000052FA8 ; ---------------------------------------------------------------------------
.text:0000000000052FA8 loc_52FA8                               ; DATA XREF: sub_52E28+170↑o
.text:0000000000052FA8                 LDRSH           X11, [X28,#0x152]
.text:0000000000052FAC                 LDRSH           X12, [X28,#0x156]
.text:0000000000052FB0                 ADD             X11, X12, X11
.text:0000000000052FB4                 MOV             W12, #0x7FFF
.text:0000000000052FB8                 CMP             X11, X12
.text:0000000000052FBC                 B.LT            loc_5302C
.text:0000000000052FC0                 MOV             W11, #4
.text:0000000000052FC4                 ADD             X12, X25, X27,LSL#5
.text:0000000000052FC8                 STRB            W11, [X10]
.text:0000000000052FCC                 MOV             W11, #0x7FFF
.text:0000000000052FD0                 LDRH            W10, [X12,#0xA]
.text:0000000000052FD4                 ADD             X12, X28, #0x156
.text:0000000000052FD8                 STRH            W10, [X12]
.text:0000000000052FDC                 B               loc_5302C
.text:0000000000052FE0 ; ---------------------------------------------------------------------------
.text:0000000000052FE0                 ADD             X11, X25, X27,LSL#5
.text:0000000000052FE4                 LDRSH           X13, [X28,#0x152]
.text:0000000000052FE8                 LDRSH           X14, [X28,#0x156]
.text:0000000000052FEC                 LDRSH           X12, [X11,#0xC]
.text:0000000000052FF0                 SUB             X11, X13, X14
.text:0000000000052FF4                 CMP             X11, X12
.text:0000000000052FF8                 B.GT            loc_5302C
.text:0000000000052FFC                 MOV             W13, #5
.text:0000000000053000                 MOV             X11, X12
.text:0000000000053004                 STRB            W13, [X10]
.text:0000000000053008                 B               loc_5302C
.text:000000000005300C ; ---------------------------------------------------------------------------
.text:000000000005300C                 LDRSH           X11, [X28,#0x152]
.text:0000000000053010                 LDRSH           X12, [X28,#0x156]
.text:0000000000053014                 SUB             X11, X11, X12
.text:0000000000053018                 CMP             X11, #0
.text:000000000005301C                 B.GT            loc_5302C
.text:0000000000053020                 MOV             W12, #8
.text:0000000000053024                 MOV             X11, XZR
.text:0000000000053028                 STRB            W12, [X10]
.text:000000000005302C loc_5302C                               ; CODE XREF: sub_52E28+160↑j
.text:000000000005302C                                         ; sub_52E28+194↑j ...
.text:000000000005302C                 STRH            W11, [X28,#0x152]
.text:0000000000053030                 LDRSH           W11, [X28,#0x14A]
.text:0000000000053034                 ADD             X10, X28, #0x14A
.text:0000000000053038                 STR             X3, [SP,#0xD0+var_C8]
.text:000000000005303C                 TBNZ            W11, #0x1F, loc_53068
.text:0000000000053040                 ADD             X12, X25, X27,LSL#5
.text:0000000000053044                 SUB             W14, W11, #2,LSL#12
.text:0000000000053048                 LSL             W13, W11, #2
.text:000000000005304C                 LDRH            W12, [X12,#0x14]
.text:0000000000053050                 CMP             W14, #4,LSL#12
.text:0000000000053054                 CINV            W13, W13, CC
.text:0000000000053058                 ADD             W11, W12, W11
.text:000000000005305C                 STRH            W13, [X28,#0x148]
.text:0000000000053060                 AND             W11, W11, #0x7FFF
.text:0000000000053064                 B               loc_5306C
.text:0000000000053068 ; ---------------------------------------------------------------------------
.text:0000000000053068 loc_53068                               ; CODE XREF: sub_52E28+214↑j
.text:0000000000053068                 ADD             W11, W11, #1
.text:000000000005306C loc_5306C                               ; CODE XREF: sub_52E28+23C↑j
.text:000000000005306C                 STRH            W11, [X10]
.text:0000000000053070                 AND             X22, X8, #0x3FFF
.text:0000000000053074                 LDR             X10, [X24,#8]
.text:0000000000053078                 AND             X21, X9, #0xF
.text:000000000005307C                 LDRB            W10, [X10,#0xA]
.text:0000000000053080                 STP             X0, X4, [SP,#0xD0+var_B8]
.text:0000000000053084                 TBZ             W10, #4, loc_53160
.text:0000000000053088                 ADD             X8, X25, X27,LSL#5
.text:000000000005308C                 LDRSH           X9, [X8,#0x1A]
.text:0000000000053090                 CBZ             X9, loc_53160
.text:0000000000053094                 LDRSH           W10, [X28,#0x152]
.text:0000000000053098                 MOV             X12, #0xFFFFFFFFFFFFDE30
.text:000000000005309C                 LDRSH           W11, [X8,#0x18]
.text:00000000000530A0                 LDRB            W26, [X8,#0x1D]
.text:00000000000530A4                 MUL             W10, W11, W10
.text:00000000000530A8                 MOV             X11, #0xFFFFFFFFFFFFEE8D
.text:00000000000530AC                 ASR             W10, W10, #0xF
.text:00000000000530B0                 ADD             X9, X9, W10,SXTW
.text:00000000000530B4                 ADD             X9, X9, X12
.text:00000000000530B8                 CMP             X9, X11
.text:00000000000530BC                 CSEL            X9, X9, X11, GT
.text:00000000000530C0                 CMP             X9, #0x77F
.text:00000000000530C4                 MOV             W10, #0x77F
.text:00000000000530C8                 CSEL            X0, X9, X10, LT
.text:00000000000530CC                 BL              .EAS_Calculate2toX
.text:00000000000530D0                 ADRP            X9, #unk_5C66@PAGE
.text:00000000000530D4                 ADD             X9, X9, #unk_5C66@PAGEOFF
.text:00000000000530D8                 LSL             X8, X26, #1
.text:00000000000530DC                 ADRP            X10, #unk_5C28@PAGE
.text:00000000000530E0                 LDRSH           W9, [X9,X8]
.text:00000000000530E4                 ADD             X10, X10, #unk_5C28@PAGEOFF
.text:00000000000530E8                 ADRP            X13, #unk_5CE2@PAGE
.text:00000000000530EC                 ADD             X13, X13, #unk_5CE2@PAGEOFF
.text:00000000000530F0                 LDRSH           W10, [X10,X8]
.text:00000000000530F4                 MOV             W11, #0x62C
.text:00000000000530F8                 MUL             W9, W9, W0
.text:00000000000530FC                 ADRP            X12, #unk_5CA4@PAGE
.text:0000000000053100                 ADD             X12, X12, #unk_5CA4@PAGEOFF
.text:0000000000053104                 ADD             W9, W10, W9,ASR#15
.text:0000000000053108                 MUL             W10, W0, W11
.text:000000000005310C                 LDRSH           W11, [X13,X8]
.text:0000000000053110                 MOV             W13, #0x7FFF
.text:0000000000053114                 LDRSH           W8, [X12,X8]
.text:0000000000053118                 ASR             W10, W10, #0xF
.text:000000000005311C                 MUL             W9, W9, W0
.text:0000000000053120                 MUL             W10, W10, W0
.text:0000000000053124                 MUL             W11, W11, W0
.text:0000000000053128                 ASR             W10, W10, #0xF
.text:000000000005312C                 ADD             W9, W13, W9,ASR#15
.text:0000000000053130                 ADD             W8, W8, W11,ASR#15
.text:0000000000053134                 SUB             W10, W10, #8,LSL#12
.text:0000000000053138                 MUL             W8, W8, W0
.text:000000000005313C                 MUL             W11, W9, W10
.text:0000000000053140                 SXTW            X9, W9
.text:0000000000053144                 ASR             W8, W8, #0xF
.text:0000000000053148                 MUL             W8, W8, W0
.text:000000000005314C                 ADD             W10, W10, W11,ASR#15
.text:0000000000053150                 SBFX            X10, X10, #1, #0x1F
.text:0000000000053154                 SBFX            X8, X8, #0xF, #0x11
.text:0000000000053158                 STP             X10, X9, [SP,#0xD0+var_88]
.text:000000000005315C                 B               loc_53164
.text:0000000000053160 ; ---------------------------------------------------------------------------
.text:0000000000053160 loc_53160                               ; CODE XREF: sub_52E28+25C↑j
.text:0000000000053160                                         ; sub_52E28+268↑j
.text:0000000000053160                 MOV             X8, XZR
.text:0000000000053164 loc_53164                               ; CODE XREF: sub_52E28+334↑j
.text:0000000000053164                 LDRB            W9, [X19,#0xC]
.text:0000000000053168                 ADD             X26, X23, X22,LSL#5
.text:000000000005316C                 ADD             X22, X25, X27,LSL#5
.text:0000000000053170                 STR             X8, [SP,#0xD0+var_90]
.text:0000000000053174                 LDRSH           W8, [X28,#0x148]
.text:0000000000053178                 ADD             X27, X24, X21,LSL#5
.text:000000000005317C                 LDRSH           W10, [X26,#6]
.text:0000000000053180                 ADD             X25, X28, #0x120
.text:0000000000053184                 LSL             W9, W9, #8
.text:0000000000053188                 LDRSB           W11, [X22,#0x1C]
.text:000000000005318C                 MUL             W9, W9, W9
.text:0000000000053190                 LDRSH           W12, [X27,#0x20]
.text:0000000000053194                 ADD             X21, X28, #0x148
.text:0000000000053198                 LSR             W9, W9, #0xF
.text:000000000005319C                 MUL             W9, W9, W10
.text:00000000000531A0                 MOV             W10, #0xA868
.text:00000000000531A4                 MUL             W8, W11, W8
.text:00000000000531A8                 MOVK            W10, #0x63,LSL#16 ; 'c'
.text:00000000000531AC                 ASR             W9, W9, #0xF
.text:00000000000531B0                 ASR             W8, W8, #0xF
.text:00000000000531B4                 MUL             W9, W9, W12
.text:00000000000531B8                 MUL             W8, W8, W10
.text:00000000000531BC                 ASR             W23, W9, #0xF
.text:00000000000531C0                 SBFX            X0, X8, #0xF, #0x11
.text:00000000000531C4                 BL              .EAS_Calculate2toX
.text:00000000000531C8                 LDRSH           W8, [X28,#0x150]
.text:00000000000531CC                 MUL             W9, W23, W0
.text:00000000000531D0                 ASR             W9, W9, #0xF
.text:00000000000531D4                 MUL             W8, W9, W8
.text:00000000000531D8                 LSR             W8, W8, #0xF
.text:00000000000531DC                 SXTH            X8, W8
.text:00000000000531E0                 STR             X8, [SP,#0xD0+var_A0]
.text:00000000000531E4                 LDR             X8, [X27,#0x18]
.text:00000000000531E8                 LDRSH           X10, [X26,#4]
.text:00000000000531EC                 LDRB            W11, [X27,#0x34]
.text:00000000000531F0                 LDRB            W9, [X19,#0xB]
.text:00000000000531F4                 ADD             X8, X8, X10
.text:00000000000531F8                 TBNZ            W11, #3, loc_53204
.text:00000000000531FC                 LDRSB           X10, [X24,#0x257]
.text:0000000000053200                 ADD             X9, X10, X9
.text:0000000000053204 loc_53204                               ; CODE XREF: sub_52E28+3D0↑j
.text:0000000000053204                 MOV             W10, #0x64 ; 'd'
.text:0000000000053208                 LDRB            W11, [X27,#0x33]
.text:000000000005320C                 MOV             W12, #0x3200
.text:0000000000053210                 LDRSH           W13, [X28,#0x152]
.text:0000000000053214                 MUL             X9, X9, X10
.text:0000000000053218                 LDRB            W10, [X27,#0x2D]
.text:000000000005321C                 LDRSH           W14, [X22,#0x16]
.text:0000000000053220                 MUL             W11, W11, W12
.text:0000000000053224                 LDRSH           W15, [X22,#0x10]
.text:0000000000053228                 ADD             X8, X8, X9
.text:000000000005322C                 MUL             W10, W10, W12
.text:0000000000053230                 LDRSH           W12, [X21]
.text:0000000000053234                 LSR             W11, W11, #0xF
.text:0000000000053238                 MUL             W13, W14, W13
.text:000000000005323C                 ADD             W10, W11, W10,LSR#15
.text:0000000000053240                 ASR             W9, W13, #0xF
.text:0000000000053244                 MUL             W11, W15, W12
.text:0000000000053248                 MUL             W10, W10, W12
.text:000000000005324C                 ADD             X8, X8, W9,SXTW
.text:0000000000053250                 ASR             W9, W10, #0xF
.text:0000000000053254                 ASR             W10, W11, #0xF
.text:0000000000053258                 ADD             X8, X8, W9,SXTW
.text:000000000005325C                 ADD             X0, X8, W10,SXTW
.text:0000000000053260                 BL              .EAS_Calculate2toX
.text:0000000000053264                 LDR             X9, [X25]
.text:0000000000053268                 MOV             X24, X0
.text:000000000005326C                 LDR             X8, [X28,#0x128]
.text:0000000000053270                 STR             X0, [SP,#0xD0+var_98]
.text:0000000000053274                 SUBS            X9, X9, X8
.text:0000000000053278                 B.EQ            loc_532BC
.text:000000000005327C                 LSL             X21, X9, #0xF
.text:0000000000053280                 CMP             X24, X21
.text:0000000000053284                 B.LE            loc_532BC
.text:0000000000053288                 ADRP            X1, #aSynth@PAGE ; "SYNTH"
.text:000000000005328C                 ADRP            X2, #aPPhaseincremen@PAGE ; "%p phaseIncrement=%d"
.text:0000000000053290                 ADD             X1, X1, #aSynth@PAGEOFF ; "SYNTH"
.text:0000000000053294                 ADD             X2, X2, #aPPhaseincremen@PAGEOFF ; "%p phaseIncrement=%d"
.text:0000000000053298                 MOV             W0, #5
.text:000000000005329C                 MOV             X3, X25
.text:00000000000532A0                 MOV             W4, W24
.text:00000000000532A4                 ADD             X22, X28, #0x128
.text:00000000000532A8                 BL              .__android_log_print
.text:00000000000532AC                 SDIV            X8, X24, X21
.text:00000000000532B0                 MSUB            X24, X8, X21, X24
.text:00000000000532B4                 LDR             X8, [X22]
.text:00000000000532B8                 STR             X24, [SP,#0xD0+var_98]
.text:00000000000532BC loc_532BC                               ; CODE XREF: sub_52E28+450↑j
.text:00000000000532BC                                         ; sub_52E28+45C↑j
.text:00000000000532BC                 LDP             X9, X11, [SP,#0xD0+var_B8]
.text:00000000000532C0                 MOV             W10, #0xFFFFFFFF
.text:00000000000532C4                 CMP             X8, X10
.text:00000000000532C8                 STR             X20, [SP,#0xD0+var_68]
.text:00000000000532CC                 ADD             X9, X9, #0x20 ; ' '
.text:00000000000532D0                 STP             X9, X11, [SP,#0xD0+var_78]
.text:00000000000532D4                 B.EQ            loc_53304
.text:00000000000532D8                 LDR             X9, [X25]
.text:00000000000532DC                 CMP             X8, X9
.text:00000000000532E0                 B.NE            loc_53304
.text:00000000000532E4                 LDP             X10, X9, [X28,#0x130]
.text:00000000000532E8                 ADD             X21, X9, X24,LSL#7
.text:00000000000532EC                 UBFX            X11, X21, #0xF, #0x11
.text:00000000000532F0                 ADD             X23, X11, X10
.text:00000000000532F4                 CMP             X23, X8
.text:00000000000532F8                 B.CS            loc_53314
.text:00000000000532FC                 MOV             W22, WZR
.text:0000000000053300                 B               loc_53378
.text:0000000000053304 ; ---------------------------------------------------------------------------
.text:0000000000053304 loc_53304                               ; CODE XREF: sub_52E28+4AC↑j
.text:0000000000053304                                         ; sub_52E28+4B8↑j
.text:0000000000053304                 MOV             W22, WZR
.text:0000000000053308                 TBZ             X20, #0x3F, loc_53398 ; '?'
.text:000000000005330C loc_5330C                               ; CODE XREF: sub_52E28:loc_53394↓j
.text:000000000005330C                 MOV             X8, XZR
.text:0000000000053310                 B               loc_533A4
.text:0000000000053314 ; ---------------------------------------------------------------------------
.text:0000000000053314 loc_53314                               ; CODE XREF: sub_52E28+4D0↑j
.text:0000000000053314                 SUB             X8, X8, X10
.text:0000000000053318                 LSL             X8, X8, #0xF
.text:000000000005331C                 SUB             X20, X8, X9
.text:0000000000053320                 CBZ             X24, loc_5332C
.text:0000000000053324                 SDIV            X8, X20, X24
.text:0000000000053328                 ADD             X20, X8, #1
.text:000000000005332C loc_5332C                               ; CODE XREF: sub_52E28+4F8↑j
.text:000000000005332C                 STR             X20, [SP,#0xD0+var_68]
.text:0000000000053330                 TBZ             X20, #0x3F, loc_53374 ; '?'
.text:0000000000053334                 ADRP            X1, #aSynth@PAGE ; "SYNTH"
.text:0000000000053338                 ADRP            X2, #aB26366256@PAGE ; "b/26366256"
.text:000000000005333C                 ADD             X1, X1, #aSynth@PAGEOFF ; "SYNTH"
.text:0000000000053340                 ADD             X2, X2, #aB26366256@PAGEOFF ; "b/26366256"
.text:0000000000053344                 MOV             W0, #6
.text:0000000000053348                 BL              .__android_log_print
.text:000000000005334C                 ADRP            X1, #a26366256@PAGE ; "26366256"
.text:0000000000053350                 MOV             W0, #0x4554
.text:0000000000053354                 ADD             X1, X1, #a26366256@PAGEOFF ; "26366256"
.text:0000000000053358                 MOVK            W0, #0x534E,LSL#16
.text:000000000005335C                 MOV             W2, #0xFFFFFFFF
.text:0000000000053360                 MOV             X3, XZR
.text:0000000000053364                 MOV             W4, WZR
.text:0000000000053368                 BL              .__android_log_error_write
.text:000000000005336C                 MOV             X20, XZR
.text:0000000000053370                 STR             XZR, [SP,#0xD0+var_68]
.text:0000000000053374 loc_53374                               ; CODE XREF: sub_52E28+508↑j
.text:0000000000053374                 MOV             W22, #1
.text:0000000000053378 loc_53378                               ; CODE XREF: sub_52E28+4D8↑j
.text:0000000000053378                 LDR             X8, [SP,#0xD0+var_C8]
.text:000000000005337C                 CMP             X8, #0x40 ; '@'
.text:0000000000053380                 B.LT            loc_53394
.text:0000000000053384                 ADD             X8, X28, #0x138
.text:0000000000053388                 ADD             X9, X28, #0x130
.text:000000000005338C                 STR             X21, [X8]
.text:0000000000053390                 STR             X23, [X9]
.text:0000000000053394 loc_53394                               ; CODE XREF: sub_52E28+558↑j
.text:0000000000053394                 TBNZ            X20, #0x3F, loc_5330C ; '?'
.text:0000000000053398 loc_53398                               ; CODE XREF: sub_52E28+4E0↑j
.text:0000000000053398                 CMP             X20, #0x81
.text:000000000005339C                 B.LT            loc_533A8
.text:00000000000533A0                 MOV             W8, #0x80
.text:00000000000533A4 loc_533A4                               ; CODE XREF: sub_52E28+4E8↑j
.text:00000000000533A4                 STR             X8, [SP,#0xD0+var_68]
.text:00000000000533A8 loc_533A8                               ; CODE XREF: sub_52E28+574↑j
.text:00000000000533A8                 ADD             X1, SP, #0xD0+var_A0
.text:00000000000533AC                 MOV             X0, X25
.text:00000000000533B0                 BL              .WT_ProcessVoice
.text:00000000000533B4                 LDRB            W8, [X19,#9]
.text:00000000000533B8                 LDRB            W9, [X19,#8]
.text:00000000000533BC                 AND             W8, W8, #0xFFFFFFF7
.text:00000000000533C0                 CMP             W9, #5
.text:00000000000533C4                 STRB            W8, [X19,#9]
.text:00000000000533C8                 B.EQ            loc_533DC
.text:00000000000533CC                 LDR             X8, [SP,#0xD0+var_C0]
.text:00000000000533D0                 LDRB            W8, [X8]
.text:00000000000533D4                 CMP             W8, #8
.text:00000000000533D8                 CSINC           W22, W22, WZR, NE
.text:00000000000533DC loc_533DC                               ; CODE XREF: sub_52E28+5A0↑j
.text:00000000000533DC                 LDP             X21, X8, [SP,#0xD0+var_A8]
.text:00000000000533E0                 STRH            W8, [X19,#2]
.text:00000000000533E4 loc_533E4                               ; CODE XREF: sub_52E28+DC↑j
.text:00000000000533E4                 LDR             X8, [X21,#0x28]
.text:00000000000533E8                 LDUR            X9, [X29,#var_58]
.text:00000000000533EC                 CMP             X8, X9
.text:00000000000533F0                 B.NE            loc_53418
.text:00000000000533F4                 MOV             W0, W22
.text:00000000000533F8                 LDP             X29, X30, [SP,#0xD0+var_s0]
.text:00000000000533FC                 LDP             X20, X19, [SP,#0xD0+var_10]
.text:0000000000053400                 LDP             X22, X21, [SP,#0xD0+var_20]
.text:0000000000053404                 LDP             X24, X23, [SP,#0xD0+var_30]
.text:0000000000053408                 LDP             X26, X25, [SP,#0xD0+var_40]
.text:000000000005340C                 LDP             X28, X27, [SP,#0xD0+var_50]
.text:0000000000053410                 ADD             SP, SP, #0xE0
.text:0000000000053414                 RET
.text:0000000000053418 ; ---------------------------------------------------------------------------
.text:0000000000053418 loc_53418                               ; CODE XREF: sub_52E28+5C8↑j
.text:0000000000053418                 BL              .__stack_chk_fail
.text:0000000000053418 ; } // starts at 52E28
.text:0000000000053418 ; End of function sub_52E28
.text:0000000000053418 ; ---------------------------------------------------------------------------
.text:000000000005341C                 ALIGN 0x20
.text:0000000000053420 ; =============== S U B R O U T I N E =======================================
.text:0000000000053420 sub_53420                               ; DATA XREF: VMReleaseVoice+D8↑o
.text:0000000000053420                                         ; .data.rel.ro:off_58308↓o
.text:0000000000053420 ; __unwind {
.text:0000000000053420                 LDRB            W8, [X2,#1]
.text:0000000000053424                 TBNZ            W8, #6, loc_5345C
.text:0000000000053428                 LDR             X8, [X1,#8]
.text:000000000005342C                 ADD             X9, X0, X3,LSL#6
.text:0000000000053430                 MOV             W11, #6
.text:0000000000053434                 LDRH            W10, [X9,#0x15A]
.text:0000000000053438                 LDR             X8, [X8,#0x28]
.text:000000000005343C                 STRB            W11, [X9,#0x158]
.text:0000000000053440                 ADD             X8, X8, X10,LSL#5
.text:0000000000053444                 LDRH            W10, [X8,#6]
.text:0000000000053448                 STRB            W11, [X9,#0x159]
.text:000000000005344C                 STRH            W10, [X9,#0x154]
.text:0000000000053450                 LDRH            W8, [X8,#0xE]
.text:0000000000053454                 STRH            W8, [X9,#0x156]
.text:0000000000053458                 RET
.text:000000000005345C ; ---------------------------------------------------------------------------
.text:000000000005345C loc_5345C                               ; CODE XREF: sub_53420+4↑j
.text:000000000005345C                 B               .DLS_ReleaseVoice
.text:000000000005345C ; } // starts at 53420
.text:000000000005345C ; End of function sub_53420
.text:0000000000053460 ; =============== S U B R O U T I N E =======================================
.text:0000000000053460 sub_53460                               ; DATA XREF: VMMuteAllVoices+38↑o
.text:0000000000053460                                         ; .data.rel.ro:off_58310↓o
.text:0000000000053460 ; __unwind {
.text:0000000000053460                 LDRB            W8, [X2,#1]
.text:0000000000053464                 TBNZ            W8, #6, loc_53488
.text:0000000000053468                 LDRB            W8, [X2,#9]
.text:000000000005346C                 MOV             W9, #0xB9
.text:0000000000053470                 ADD             X10, X0, X3,LSL#6
.text:0000000000053474                 AND             W8, W8, W9
.text:0000000000053478                 MOV             W9, #0x808
.text:000000000005347C                 STRB            W8, [X2,#9]
.text:0000000000053480                 STRH            W9, [X10,#0x158]
.text:0000000000053484                 RET
.text:0000000000053488 ; ---------------------------------------------------------------------------
.text:0000000000053488 loc_53488                               ; CODE XREF: sub_53460+4↑j
.text:0000000000053488                 B               .DLS_MuteVoice
.text:0000000000053488 ; } // starts at 53460
.text:0000000000053488 ; End of function sub_53460
.text:0000000000053488 ; ---------------------------------------------------------------------------
.text:000000000005348C                 ALIGN 0x10
.text:0000000000053490 ; =============== S U B R O U T I N E =======================================
.text:0000000000053490 sub_53490                               ; DATA XREF: VMDeferredStopNote+3C↑o
.text:0000000000053490                                         ; .data.rel.ro:off_58318↓o
.text:0000000000053490 ; __unwind {
.text:0000000000053490                 LDRB            W8, [X2,#1]
.text:0000000000053494                 TBNZ            W8, #6, loc_534DC
.text:0000000000053498                 LDR             X9, [X1,#8]
.text:000000000005349C                 ADD             X8, X0, X4,LSL#6
.text:00000000000534A0                 LDRH            W10, [X8,#0x15A]
.text:00000000000534A4                 LDR             X9, [X9,#0x28]
.text:00000000000534A8                 ADD             X9, X9, X10,LSL#5
.text:00000000000534AC                 LDRSH           W10, [X8,#0x150]
.text:00000000000534B0                 LDRSH           W9, [X9,#4]
.text:00000000000534B4                 CMP             W10, W9
.text:00000000000534B8                 B.LT            locret_534D8
.text:00000000000534BC                 MOV             W9, #4
.text:00000000000534C0                 STRB            W9, [X8,#0x158]
.text:00000000000534C4                 MOV             W9, #2
.text:00000000000534C8                 LDRB            W8, [X2,#9]
.text:00000000000534CC                 STRB            W9, [X2,#8]
.text:00000000000534D0                 ORR             W8, W8, #2
.text:00000000000534D4                 STRB            W8, [X2,#9]
.text:00000000000534D8 locret_534D8                            ; CODE XREF: sub_53490+28↑j
.text:00000000000534D8                 RET
.text:00000000000534DC ; ---------------------------------------------------------------------------
.text:00000000000534DC loc_534DC                               ; CODE XREF: sub_53490+4↑j
.text:00000000000534DC                 B               .DLS_SustainPedal
.text:00000000000534DC ; } // starts at 53490
.text:00000000000534DC ; End of function sub_53490
.text:00000000000534E0 ; =============== S U B R O U T I N E =======================================
.text:00000000000534E0 sub_534E0                               ; DATA XREF: VMUpdateStaticChannelParameters+28↑o
.text:00000000000534E0                                         ; .data.rel.ro:off_58320↓o
.text:00000000000534E0 ; __unwind {
.text:00000000000534E0                 AND             X8, X2, #0xFF
.text:00000000000534E4                 ADD             X8, X1, X8,LSL#5
.text:00000000000534E8                 LDRSH           W9, [X8,#0x26]
.text:00000000000534EC                 LDRSH           W10, [X8,#0x28]
.text:00000000000534F0                 LSL             W9, W9, #2
.text:00000000000534F4                 SUB             W9, W9, #8,LSL#12
.text:00000000000534F8                 MUL             W10, W9, W10
.text:00000000000534FC                 MOV             X9, X8
.text:0000000000053500                 SBFX            X10, X10, #0xF, #0x11
.text:0000000000053504                 STR             X10, [X9,#0x18]!
.text:0000000000053508                 LDRB            W11, [X9,#0x16]
.text:000000000005350C                 LDRB            W12, [X9,#0x18]
.text:0000000000053510                 MUL             W11, W11, W12
.text:0000000000053514                 LDRH            W12, [X1,#0x224]
.text:0000000000053518                 UBFIZ           W11, W11, #1, #0x10
.text:000000000005351C                 MUL             W11, W11, W11
.text:0000000000053520                 LSR             W11, W11, #0xF
.text:0000000000053524                 MUL             W11, W11, W12
.text:0000000000053528                 LSR             W12, W11, #0xF
.text:000000000005352C                 MOV             X11, X9
.text:0000000000053530                 STRH            W12, [X9,#8]
.text:0000000000053534                 LDRB            W12, [X11,#0x1C]!
.text:0000000000053538                 TBNZ            W12, #3, loc_53554
.text:000000000005353C                 LDRSB           X13, [X8,#0x31]
.text:0000000000053540                 MOV             W14, #0x64 ; 'd'
.text:0000000000053544                 LDRSB           X8, [X8,#0x32]
.text:0000000000053548                 ADD             X10, X13, X10
.text:000000000005354C                 MADD            X8, X8, X14, X10
.text:0000000000053550                 STR             X8, [X9]
.text:0000000000053554 loc_53554                               ; CODE XREF: sub_534E0+58↑j
.text:0000000000053554                 AND             W8, W12, #0xFFFFFFFB
.text:0000000000053558                 STRB            W8, [X11]
.text:000000000005355C                 RET
.text:000000000005355C ; } // starts at 534E0
.text:000000000005355C ; End of function sub_534E0
.text:0000000000053560 ; =============== S U B R O U T I N E =======================================
.text:0000000000053560 ; Attributes: bp-based frame
.text:0000000000053560                 EXPORT WT_CheckSampleEnd
.text:0000000000053560 WT_CheckSampleEnd                       ; CODE XREF: .WT_CheckSampleEnd+C↓j
.text:0000000000053560                                         ; DATA XREF: LOAD:0000000000000420↑o ...
.text:0000000000053560 var_30          = -0x30
.text:0000000000053560 var_20          = -0x20
.text:0000000000053560 var_10          = -0x10
.text:0000000000053560 var_s0          =  0
.text:0000000000053560 ; __unwind {
.text:0000000000053560                 STR             X23, [SP,#-0x10+var_30]!
.text:0000000000053564                 STP             X22, X21, [SP,#0x30+var_20]
.text:0000000000053568                 STP             X20, X19, [SP,#0x30+var_10]
.text:000000000005356C                 STP             X29, X30, [SP,#0x30+var_s0]
.text:0000000000053570                 ADD             X29, SP, #0x30
.text:0000000000053574                 LDR             X8, [X1,#8]
.text:0000000000053578                 MOV             W20, W2
.text:000000000005357C                 LDP             X10, X9, [X0,#0x10]
.text:0000000000053580                 LDR             X11, [X0]
.text:0000000000053584                 MOV             X19, X0
.text:0000000000053588                 ADD             X22, X9, X8,LSL#7
.text:000000000005358C                 UBFX            X12, X22, #0xF, #0x11
.text:0000000000053590                 ADD             X23, X12, X10
.text:0000000000053594                 CMP             X23, X11
.text:0000000000053598                 B.CS            loc_535BC
.text:000000000005359C                 MOV             W0, WZR
.text:00000000000535A0                 CBZ             W20, loc_535A8
.text:00000000000535A4 loc_535A4                               ; CODE XREF: WT_CheckSampleEnd+84↓j
.text:00000000000535A4                                         ; WT_CheckSampleEnd+CC↓j
.text:00000000000535A4                 STP             X23, X22, [X19,#0x10]
.text:00000000000535A8 loc_535A8                               ; CODE XREF: WT_CheckSampleEnd+40↑j
.text:00000000000535A8                                         ; WT_CheckSampleEnd+88↓j ...
.text:00000000000535A8                 LDP             X29, X30, [SP,#0x30+var_s0]
.text:00000000000535AC                 LDP             X20, X19, [SP,#0x30+var_10]
.text:00000000000535B0                 LDP             X22, X21, [SP,#0x30+var_20]
.text:00000000000535B4                 LDR             X23, [SP+0x30+var_30],#0x40
.text:00000000000535B8                 RET
.text:00000000000535BC ; ---------------------------------------------------------------------------
.text:00000000000535BC loc_535BC                               ; CODE XREF: WT_CheckSampleEnd+38↑j
.text:00000000000535BC                 SUB             X10, X11, X10
.text:00000000000535C0                 MOV             X21, X1
.text:00000000000535C4                 LSL             X10, X10, #0xF
.text:00000000000535C8                 SUB             X9, X10, X9
.text:00000000000535CC                 CBZ             X8, loc_535D8
.text:00000000000535D0                 SDIV            X8, X9, X8
.text:00000000000535D4                 ADD             X9, X8, #1
.text:00000000000535D8 loc_535D8                               ; CODE XREF: WT_CheckSampleEnd+6C↑j
.text:00000000000535D8                 STR             X9, [X21,#0x38]
.text:00000000000535DC                 TBNZ            X9, #0x3F, loc_535EC ; '?'
.text:00000000000535E0                 MOV             W0, #1
.text:00000000000535E4                 CBNZ            W20, loc_535A4
.text:00000000000535E8                 B               loc_535A8
.text:00000000000535EC ; ---------------------------------------------------------------------------
.text:00000000000535EC loc_535EC                               ; CODE XREF: WT_CheckSampleEnd+7C↑j
.text:00000000000535EC                 ADRP            X1, #aSynth@PAGE ; "SYNTH"
.text:00000000000535F0                 ADRP            X2, #aB26366256@PAGE ; "b/26366256"
.text:00000000000535F4                 ADD             X1, X1, #aSynth@PAGEOFF ; "SYNTH"
.text:00000000000535F8                 ADD             X2, X2, #aB26366256@PAGEOFF ; "b/26366256"
.text:00000000000535FC                 MOV             W0, #6
.text:0000000000053600                 BL              .__android_log_print
.text:0000000000053604                 ADRP            X1, #a26366256@PAGE ; "26366256"
.text:0000000000053608                 MOV             W0, #0x4554
.text:000000000005360C                 ADD             X1, X1, #a26366256@PAGEOFF ; "26366256"
.text:0000000000053610                 MOVK            W0, #0x534E,LSL#16
.text:0000000000053614                 MOV             W2, #0xFFFFFFFF
.text:0000000000053618                 MOV             X3, XZR
.text:000000000005361C                 MOV             W4, WZR
.text:0000000000053620                 BL              .__android_log_error_write
.text:0000000000053624                 MOV             W0, #1
.text:0000000000053628                 STR             XZR, [X21,#0x38]
.text:000000000005362C                 CBNZ            W20, loc_535A4
.text:0000000000053630                 B               loc_535A8
.text:0000000000053630 ; } // starts at 53560
.text:0000000000053630 ; End of function WT_CheckSampleEnd
.text:0000000000053630 ; ---------------------------------------------------------------------------
.text:0000000000053634                 ALIGN 8
.text:0000000000053638 ; =============== S U B R O U T I N E =======================================
.text:0000000000053638                 EXPORT WT_UpdateLFO
.text:0000000000053638 WT_UpdateLFO                            ; CODE XREF: .WT_UpdateLFO+C↓j
.text:0000000000053638                                         ; DATA XREF: LOAD:0000000000001038↑o ...
.text:0000000000053638 ; __unwind {
.text:0000000000053638                 LDRSH           W8, [X0,#2]
.text:000000000005363C                 TBNZ            W8, #0x1F, loc_53664
.text:0000000000053640                 SUB             W10, W8, #2,LSL#12
.text:0000000000053644                 LSL             W9, W8, #2
.text:0000000000053648                 CMP             W10, #4,LSL#12
.text:000000000005364C                 ADD             W8, W8, W1
.text:0000000000053650                 CINV            W9, W9, CC
.text:0000000000053654                 AND             W8, W8, #0x7FFF
.text:0000000000053658                 STRH            W9, [X0]
.text:000000000005365C                 STRH            W8, [X0,#2]
.text:0000000000053660                 RET
.text:0000000000053664 ; ---------------------------------------------------------------------------
.text:0000000000053664 loc_53664                               ; CODE XREF: WT_UpdateLFO+4↑j
.text:0000000000053664                 ADD             W8, W8, #1
.text:0000000000053668                 STRH            W8, [X0,#2]
.text:000000000005366C                 RET
.text:000000000005366C ; } // starts at 53638
.text:000000000005366C ; End of function WT_UpdateLFO
.text:0000000000053670 ; =============== S U B R O U T I N E =======================================
.text:0000000000053670 ; Attributes: bp-based frame
.text:0000000000053670                 EXPORT WT_SetFilterCoeffs
.text:0000000000053670 WT_SetFilterCoeffs                      ; CODE XREF: .WT_SetFilterCoeffs+C↓j
.text:0000000000053670                                         ; DATA XREF: LOAD:0000000000001C08↑o ...
.text:0000000000053670 var_10          = -0x10
.text:0000000000053670 var_s0          =  0
.text:0000000000053670 ; __unwind {
.text:0000000000053670                 STP             X20, X19, [SP,#-0x10+var_10]!
.text:0000000000053674                 STP             X29, X30, [SP,#0x10+var_s0]
.text:0000000000053678                 ADD             X29, SP, #0x10
.text:000000000005367C                 MOV             X20, X0
.text:0000000000053680                 MOV             X0, X1
.text:0000000000053684                 MOV             X19, X2
.text:0000000000053688                 BL              .EAS_Calculate2toX
.text:000000000005368C                 ADRP            X9, #unk_5C66@PAGE
.text:0000000000053690                 ADD             X9, X9, #unk_5C66@PAGEOFF
.text:0000000000053694                 LSL             X8, X19, #1
.text:0000000000053698                 ADRP            X10, #unk_5C28@PAGE
.text:000000000005369C                 LDRSH           W9, [X9,X8]
.text:00000000000536A0                 ADD             X10, X10, #unk_5C28@PAGEOFF
.text:00000000000536A4                 ADRP            X11, #unk_5CE2@PAGE
.text:00000000000536A8                 ADD             X11, X11, #unk_5CE2@PAGEOFF
.text:00000000000536AC                 LDRSH           W10, [X10,X8]
.text:00000000000536B0                 ADRP            X13, #unk_5CA4@PAGE
.text:00000000000536B4                 MOV             W12, #0x62C
.text:00000000000536B8                 MUL             W9, W9, W0
.text:00000000000536BC                 LDRSH           W11, [X11,X8]
.text:00000000000536C0                 ADD             X13, X13, #unk_5CA4@PAGEOFF
.text:00000000000536C4                 MUL             W12, W0, W12
.text:00000000000536C8                 ADD             W9, W10, W9,ASR#15
.text:00000000000536CC                 LDRSH           W8, [X13,X8]
.text:00000000000536D0                 ASR             W10, W12, #0xF
.text:00000000000536D4                 MUL             W11, W11, W0
.text:00000000000536D8                 MUL             W10, W10, W0
.text:00000000000536DC                 MUL             W9, W9, W0
.text:00000000000536E0                 ADD             W8, W8, W11,ASR#15
.text:00000000000536E4                 MOV             W11, #0x7FFF
.text:00000000000536E8                 ASR             W10, W10, #0xF
.text:00000000000536EC                 MUL             W8, W8, W0
.text:00000000000536F0                 SUB             W10, W10, #8,LSL#12
.text:00000000000536F4                 ADD             W9, W11, W9,ASR#15
.text:00000000000536F8                 ASR             W8, W8, #0xF
.text:00000000000536FC                 MUL             W11, W9, W10
.text:0000000000053700                 SXTW            X9, W9
.text:0000000000053704                 MUL             W8, W8, W0
.text:0000000000053708                 STR             X9, [X20,#0x20]
.text:000000000005370C                 ADD             W10, W10, W11,ASR#15
.text:0000000000053710                 SBFX            X8, X8, #0xF, #0x11
.text:0000000000053714                 SBFX            X9, X10, #1, #0x1F
.text:0000000000053718                 STP             X8, X9, [X20,#0x10]
.text:000000000005371C                 LDP             X29, X30, [SP,#0x10+var_s0]
.text:0000000000053720                 LDP             X20, X19, [SP+0x10+var_10],#0x20
.text:0000000000053724                 RET
.text:0000000000053724 ; } // starts at 53670
.text:0000000000053724 ; End of function WT_SetFilterCoeffs
.text:0000000000053728 ; =============== S U B R O U T I N E =======================================
.text:0000000000053728 ; Attributes: bp-based frame
.text:0000000000053728 sub_53728                               ; DATA XREF: .data.rel.ro:EAS_XMF_Parser↓o
.text:0000000000053728 var_60          = -0x60
.text:0000000000053728 var_58          = -0x58
.text:0000000000053728 var_4C          = -0x4C
.text:0000000000053728 var_48          = -0x48
.text:0000000000053728 var_40          = -0x40
.text:0000000000053728 var_30          = -0x30
.text:0000000000053728 var_20          = -0x20
.text:0000000000053728 var_10          = -0x10
.text:0000000000053728 var_s0          =  0
.text:0000000000053728 ; __unwind {
.text:0000000000053728                 SUB             SP, SP, #0x70
.text:000000000005372C                 STP             X26, X25, [SP,#0x60+var_40]
.text:0000000000053730                 STP             X24, X23, [SP,#0x60+var_30]
.text:0000000000053734                 STP             X22, X21, [SP,#0x60+var_20]
.text:0000000000053738                 STP             X20, X19, [SP,#0x60+var_10]
.text:000000000005373C                 STP             X29, X30, [SP,#0x60+var_s0]
.text:0000000000053740                 ADD             X29, SP, #0x60
.text:0000000000053744                 MRS             X24, #3, c13, c0, #2
.text:0000000000053748                 MOV             X19, X0
.text:000000000005374C                 LDR             X8, [X24,#0x28]
.text:0000000000053750                 MOV             X22, X3
.text:0000000000053754                 MOV             X23, X2
.text:0000000000053758                 MOV             W3, #1
.text:000000000005375C                 MOV             X20, X1
.text:0000000000053760                 STR             X8, [SP,#0x60+var_48]
.text:0000000000053764                 STR             XZR, [X2]
.text:0000000000053768                 MOV             X2, SP
.text:000000000005376C                 LDR             X0, [X0]
.text:0000000000053770                 BL              .EAS_HWGetDWord
.text:0000000000053774                 CBNZ            X0, loc_53804
.text:0000000000053778                 LDR             X8, [SP,#0x60+var_60]
.text:000000000005377C                 MOV             W9, #0x584D465F
.text:0000000000053784                 CMP             X8, X9
.text:0000000000053788                 B.NE            loc_53800
.text:000000000005378C                 LDR             X0, [X19]
.text:0000000000053790                 MOV             X2, SP
.text:0000000000053794                 MOV             X1, X20
.text:0000000000053798                 MOV             W3, #1
.text:000000000005379C                 BL              .EAS_HWGetDWord
.text:00000000000537A0                 CBNZ            X0, loc_53804
.text:00000000000537A4                 LDR             X8, [SP,#0x60+var_60]
.text:00000000000537A8                 MOV             W9, #0x322E3030
.text:00000000000537B0                 CMP             X8, X9
.text:00000000000537B4                 B.NE            loc_53830
.text:00000000000537B8                 LDR             X0, [X19]
.text:00000000000537BC                 MOV             X2, SP
.text:00000000000537C0                 MOV             X1, X20
.text:00000000000537C4                 MOV             W3, #1
.text:00000000000537C8                 BL              .EAS_HWGetDWord
.text:00000000000537CC                 CBNZ            X0, loc_53804
.text:00000000000537D0                 LDR             X8, [SP,#0x60+var_60]
.text:00000000000537D4                 CMP             X8, #2
.text:00000000000537D8                 B.NE            loc_53800
.text:00000000000537DC                 LDR             X0, [X19]
.text:00000000000537E0                 MOV             X2, SP
.text:00000000000537E4                 MOV             X1, X20
.text:00000000000537E8                 MOV             W3, #1
.text:00000000000537EC                 BL              .EAS_HWGetDWord
.text:00000000000537F0                 CBNZ            X0, loc_53804
.text:00000000000537F4                 LDR             X8, [SP,#0x60+var_60]
.text:00000000000537F8                 CMP             X8, #1
.text:00000000000537FC                 B.EQ            loc_53844
.text:0000000000053800 loc_53800                               ; CODE XREF: sub_53728+60↑j
.text:0000000000053800                                         ; sub_53728+B0↑j ...
.text:0000000000053800                 MOV             X0, XZR
.text:0000000000053804 loc_53804                               ; CODE XREF: sub_53728+4C↑j
.text:0000000000053804                                         ; sub_53728+78↑j ...
.text:0000000000053804                 LDR             X8, [X24,#0x28]
.text:0000000000053808                 LDR             X9, [SP,#0x60+var_48]
.text:000000000005380C                 CMP             X8, X9
.text:0000000000053810                 B.NE            loc_539C0
.text:0000000000053814                 LDP             X29, X30, [SP,#0x60+var_s0]
.text:0000000000053818                 LDP             X20, X19, [SP,#0x60+var_10]
.text:000000000005381C                 LDP             X22, X21, [SP,#0x60+var_20]
.text:0000000000053820                 LDP             X24, X23, [SP,#0x60+var_30]
.text:0000000000053824                 LDP             X26, X25, [SP,#0x60+var_40]
.text:0000000000053828                 ADD             SP, SP, #0x70 ; 'p'
.text:000000000005382C                 RET
.text:0000000000053830 ; ---------------------------------------------------------------------------
.text:0000000000053830 loc_53830                               ; CODE XREF: sub_53728+8C↑j
.text:0000000000053830                 MOV             W9, #0x3031
.text:0000000000053834                 ORR             X8, X8, #1
.text:0000000000053838                 MOVK            W9, #0x312E,LSL#16
.text:000000000005383C                 CMP             X8, X9
.text:0000000000053840                 B.NE            loc_53800
.text:0000000000053844 loc_53844                               ; CODE XREF: sub_53728+D4↑j
.text:0000000000053844                 LDRB            W8, [X19,#0x18B]
.text:0000000000053848                 CBZ             W8, loc_538F0
.text:000000000005384C                 MOV             W0, #6
.text:0000000000053850                 BL              .EAS_CMEnumData
.text:0000000000053854                 MOV             X21, X0
.text:0000000000053858                 CBZ             X0, loc_53904
.text:000000000005385C loc_5385C                               ; CODE XREF: sub_53728+1D8↓j
.text:000000000005385C                 MOV             X0, X21
.text:0000000000053860                 MOV             W1, WZR
.text:0000000000053864                 MOV             W2, #0x30 ; '0'
.text:0000000000053868                 BL              .EAS_HWMemSet
.text:000000000005386C                 MOV             X25, X21
.text:0000000000053870                 STP             X20, X22, [X21]
.text:0000000000053874                 STR             X21, [X23]
.text:0000000000053878                 LDR             X22, [X19]
.text:000000000005387C                 STR             XZR, [X25,#0x18]!
.text:0000000000053880                 LDR             X23, [X21]
.text:0000000000053884                 STR             XZR, [X21,#0x20]
.text:0000000000053888 loc_53888                               ; CODE XREF: sub_53728+178↓j
.text:0000000000053888                 ADD             X2, SP, #0x60+var_4C
.text:000000000005388C                 MOV             X0, X22
.text:0000000000053890                 MOV             X1, X23
.text:0000000000053894                 BL              .EAS_HWGetByte
.text:0000000000053898                 CBNZ            X0, loc_53804
.text:000000000005389C                 LDRSB           W8, [SP,#0x60+var_4C]
.text:00000000000538A0                 TBNZ            W8, #0x1F, loc_53888
.text:00000000000538A4                 LDR             X23, [X21]
.text:00000000000538A8                 ADD             X2, SP, #0x60+var_4C
.text:00000000000538AC                 MOV             X0, X22
.text:00000000000538B0                 MOV             X1, X23
.text:00000000000538B4                 BL              .EAS_HWGetByte
.text:00000000000538B8                 CBNZ            X0, loc_53804
.text:00000000000538BC                 MOV             X26, XZR
.text:00000000000538C0 loc_538C0                               ; CODE XREF: sub_53728+1C0↓j
.text:00000000000538C0                 LDRSB           W10, [SP,#0x60+var_4C]
.text:00000000000538C4                 LSL             X9, X26, #7
.text:00000000000538C8                 AND             X8, X10, #0xFF
.text:00000000000538CC                 TBZ             W10, #0x1F, loc_5390C
.text:00000000000538D0                 ADD             X2, SP, #0x60+var_4C
.text:00000000000538D4                 MOV             X0, X22
.text:00000000000538D8                 MOV             X1, X23
.text:00000000000538DC                 AND             X8, X8, #0x7F
.text:00000000000538E0                 ORR             X26, X9, X8
.text:00000000000538E4                 BL              .EAS_HWGetByte
.text:00000000000538E8                 CBZ             X0, loc_538C0
.text:00000000000538EC                 B               loc_53804
.text:00000000000538F0 ; ---------------------------------------------------------------------------
.text:00000000000538F0 loc_538F0                               ; CODE XREF: sub_53728+120↑j
.text:00000000000538F0                 LDR             X0, [X19]
.text:00000000000538F4                 MOV             W1, #0x30 ; '0'
.text:00000000000538F8                 BL              .EAS_HWMalloc
.text:00000000000538FC                 MOV             X21, X0
.text:0000000000053900                 CBNZ            X0, loc_5385C
.text:0000000000053904 loc_53904                               ; CODE XREF: sub_53728+130↑j
.text:0000000000053904                 MOV             X0, #0xFFFFFFFFFFFFFFFD
.text:0000000000053908                 B               loc_53804
.text:000000000005390C ; ---------------------------------------------------------------------------
.text:000000000005390C loc_5390C                               ; CODE XREF: sub_53728+1A4↑j
.text:000000000005390C                 LDR             X1, [X21]
.text:0000000000053910                 ORR             X2, X9, X8
.text:0000000000053914                 MOV             X0, X22
.text:0000000000053918                 BL              .EAS_HWFileSeekOfs
.text:000000000005391C                 CBNZ            X0, loc_53804
.text:0000000000053920                 LDR             X23, [X21]
.text:0000000000053924                 ADD             X2, SP, #0x60+var_4C
.text:0000000000053928                 MOV             X0, X22
.text:000000000005392C                 MOV             X1, X23
.text:0000000000053930                 BL              .EAS_HWGetByte
.text:0000000000053934                 CBNZ            X0, loc_53804
.text:0000000000053938                 MOV             X26, XZR
.text:000000000005393C loc_5393C                               ; CODE XREF: sub_53728+23C↓j
.text:000000000005393C                 LDRSB           W10, [SP,#0x60+var_4C]
.text:0000000000053940                 LSL             X9, X26, #7
.text:0000000000053944                 AND             X8, X10, #0xFF
.text:0000000000053948                 TBZ             W10, #0x1F, loc_5396C
.text:000000000005394C                 ADD             X2, SP, #0x60+var_4C
.text:0000000000053950                 MOV             X0, X22
.text:0000000000053954                 MOV             X1, X23
.text:0000000000053958                 AND             X8, X8, #0x7F
.text:000000000005395C                 ORR             X26, X9, X8
.text:0000000000053960                 BL              .EAS_HWGetByte
.text:0000000000053964                 CBZ             X0, loc_5393C
.text:0000000000053968                 B               loc_53804
.text:000000000005396C ; ---------------------------------------------------------------------------
.text:000000000005396C loc_5396C                               ; CODE XREF: sub_53728+220↑j
.text:000000000005396C                 ORR             X2, X9, X8
.text:0000000000053970                 ADD             X3, SP, #0x60+var_58
.text:0000000000053974                 MOV             X0, X22
.text:0000000000053978                 MOV             X1, X21
.text:000000000005397C                 MOV             X4, XZR
.text:0000000000053980                 BL              sub_53B38
.text:0000000000053984                 CBNZ            X0, loc_53804
.text:0000000000053988                 LDR             X2, [X25]
.text:000000000005398C                 CBZ             X2, loc_539B8
.text:0000000000053990                 LDR             X0, [X19]
.text:0000000000053994                 MOV             X1, X20
.text:0000000000053998                 BL              .EAS_HWFileSeek
.text:000000000005399C                 CBNZ            X0, loc_53804
.text:00000000000539A0                 LDR             X3, [X21,#0x18]
.text:00000000000539A4                 ADD             X2, X21, #0x10
.text:00000000000539A8                 MOV             X0, X19
.text:00000000000539AC                 MOV             X1, X20
.text:00000000000539B0                 BL              .SMF_CheckFileType
.text:00000000000539B4                 B               loc_53804
.text:00000000000539B8 ; ---------------------------------------------------------------------------
.text:00000000000539B8 loc_539B8                               ; CODE XREF: sub_53728+264↑j
.text:00000000000539B8                 MOV             X0, #0xFFFFFFFFFFFFFFEF
.text:00000000000539BC                 B               loc_53804
.text:00000000000539C0 ; ---------------------------------------------------------------------------
.text:00000000000539C0 loc_539C0                               ; CODE XREF: sub_53728+E8↑j
.text:00000000000539C0                 BL              .__stack_chk_fail
.text:00000000000539C0 ; } // starts at 53728
.text:00000000000539C0 ; End of function sub_53728
.text:00000000000539C0 ; ---------------------------------------------------------------------------
.text:00000000000539C4                 ALIGN 8
.text:00000000000539C8 ; =============== S U B R O U T I N E =======================================
.text:00000000000539C8 ; Attributes: bp-based frame
.text:00000000000539C8 sub_539C8                               ; DATA XREF: .data.rel.ro:0000000000058330↓o
.text:00000000000539C8 var_10          = -0x10
.text:00000000000539C8 var_s0          =  0
.text:00000000000539C8 ; __unwind {
.text:00000000000539C8                 STP             X20, X19, [SP,#-0x10+var_10]!
.text:00000000000539CC                 STP             X29, X30, [SP,#0x10+var_s0]
.text:00000000000539D0                 ADD             X29, SP, #0x10
.text:00000000000539D4                 LDR             X2, [X1,#0x20]
.text:00000000000539D8                 MOV             X19, X1
.text:00000000000539DC                 MOV             X20, X0
.text:00000000000539E0                 CBZ             X2, loc_539F8
.text:00000000000539E4                 MOV             X3, X19
.text:00000000000539E8                 LDR             X0, [X20]
.text:00000000000539EC                 LDR             X1, [X3],#0x28
.text:00000000000539F0                 BL              .DLSParser
.text:00000000000539F4                 CBNZ            X0, loc_53A3C
.text:00000000000539F8 loc_539F8                               ; CODE XREF: sub_539C8+18↑j
.text:00000000000539F8                 LDR             X1, [X19,#0x10]
.text:00000000000539FC                 MOV             X0, X20
.text:0000000000053A00                 BL              .SMF_Prepare
.text:0000000000053A04                 CBNZ            X0, loc_53A3C
.text:0000000000053A08                 LDR             X1, [X19,#0x28]
.text:0000000000053A0C                 CBZ             X1, loc_53A38
.text:0000000000053A10                 LDR             X8, [X19,#0x10]
.text:0000000000053A14                 LDR             X0, [X8,#0x10]
.text:0000000000053A18                 BL              .VMSetDLSLib
.text:0000000000053A1C                 CBNZ            X0, loc_53A3C
.text:0000000000053A20                 LDR             X0, [X19,#0x28]
.text:0000000000053A24                 BL              .DLSAddRef
.text:0000000000053A28                 LDR             X8, [X19,#0x10]
.text:0000000000053A2C                 LDR             X0, [X20,#0x170]
.text:0000000000053A30                 LDR             X1, [X8,#0x10]
.text:0000000000053A34                 BL              .VMInitializeAllChannels
.text:0000000000053A38 loc_53A38                               ; CODE XREF: sub_539C8+44↑j
.text:0000000000053A38                 MOV             X0, XZR
.text:0000000000053A3C loc_53A3C                               ; CODE XREF: sub_539C8+2C↑j
.text:0000000000053A3C                                         ; sub_539C8+3C↑j ...
.text:0000000000053A3C                 LDP             X29, X30, [SP,#0x10+var_s0]
.text:0000000000053A40                 LDP             X20, X19, [SP+0x10+var_10],#0x20
.text:0000000000053A44                 RET
.text:0000000000053A44 ; } // starts at 539C8
.text:0000000000053A44 ; End of function sub_539C8
.text:0000000000053A48 ; =============== S U B R O U T I N E =======================================
.text:0000000000053A48 sub_53A48                               ; DATA XREF: .data.rel.ro:0000000000058338↓o
.text:0000000000053A48 ; __unwind {
.text:0000000000053A48                 LDR             X1, [X1,#0x10]
.text:0000000000053A4C                 B               .SMF_Time
.text:0000000000053A4C ; } // starts at 53A48
.text:0000000000053A4C ; End of function sub_53A48
.text:0000000000053A50 ; =============== S U B R O U T I N E =======================================
.text:0000000000053A50 sub_53A50                               ; DATA XREF: .data.rel.ro:0000000000058340↓o
.text:0000000000053A50 ; __unwind {
.text:0000000000053A50                 LDR             X1, [X1,#0x10]
.text:0000000000053A54                 B               .SMF_Event
.text:0000000000053A54 ; } // starts at 53A50
.text:0000000000053A54 ; End of function sub_53A50
.text:0000000000053A58 ; =============== S U B R O U T I N E =======================================
.text:0000000000053A58 sub_53A58                               ; DATA XREF: .data.rel.ro:0000000000058348↓o
.text:0000000000053A58 ; __unwind {
.text:0000000000053A58                 LDR             X1, [X1,#0x10]
.text:0000000000053A5C                 B               .SMF_State
.text:0000000000053A5C ; } // starts at 53A58
.text:0000000000053A5C ; End of function sub_53A58
.text:0000000000053A60 ; =============== S U B R O U T I N E =======================================
.text:0000000000053A60 ; Attributes: bp-based frame
.text:0000000000053A60 sub_53A60                               ; DATA XREF: .data.rel.ro:0000000000058350↓o
.text:0000000000053A60 var_20          = -0x20
.text:0000000000053A60 var_10          = -0x10
.text:0000000000053A60 var_s0          =  0
.text:0000000000053A60 ; __unwind {
.text:0000000000053A60                 STR             X21, [SP,#-0x10+var_20]!
.text:0000000000053A64                 STP             X20, X19, [SP,#0x20+var_10]
.text:0000000000053A68                 STP             X29, X30, [SP,#0x20+var_s0]
.text:0000000000053A6C                 ADD             X29, SP, #0x20
.text:0000000000053A70                 MOV             X19, X1
.text:0000000000053A74                 LDR             X1, [X1,#0x10]
.text:0000000000053A78                 MOV             X21, X0
.text:0000000000053A7C                 BL              .SMF_Close
.text:0000000000053A80                 MOV             X20, X0
.text:0000000000053A84                 CBNZ            X0, loc_53AAC
.text:0000000000053A88                 LDR             X1, [X19,#0x28]
.text:0000000000053A8C                 CBZ             X1, loc_53A98
.text:0000000000053A90                 LDR             X0, [X21]
.text:0000000000053A94                 BL              .DLSCleanup
.text:0000000000053A98 loc_53A98                               ; CODE XREF: sub_53A60+2C↑j
.text:0000000000053A98                 LDRB            W8, [X21,#0x18B]
.text:0000000000053A9C                 CBNZ            W8, loc_53AAC
.text:0000000000053AA0                 LDR             X0, [X21]
.text:0000000000053AA4                 MOV             X1, X19
.text:0000000000053AA8                 BL              .EAS_HWFree
.text:0000000000053AAC loc_53AAC                               ; CODE XREF: sub_53A60+24↑j
.text:0000000000053AAC                                         ; sub_53A60+3C↑j
.text:0000000000053AAC                 MOV             X0, X20
.text:0000000000053AB0                 LDP             X29, X30, [SP,#0x20+var_s0]
.text:0000000000053AB4                 LDP             X20, X19, [SP,#0x20+var_10]
.text:0000000000053AB8                 LDR             X21, [SP+0x20+var_20],#0x30
.text:0000000000053ABC                 RET
.text:0000000000053ABC ; } // starts at 53A60
.text:0000000000053ABC ; End of function sub_53A60
.text:0000000000053AC0 ; =============== S U B R O U T I N E =======================================
.text:0000000000053AC0 sub_53AC0                               ; DATA XREF: .data.rel.ro:0000000000058358↓o
.text:0000000000053AC0 ; __unwind {
.text:0000000000053AC0                 LDR             X1, [X1,#0x10]
.text:0000000000053AC4                 B               .SMF_Reset
.text:0000000000053AC4 ; } // starts at 53AC0
.text:0000000000053AC4 ; End of function sub_53AC0
.text:0000000000053AC8 ; =============== S U B R O U T I N E =======================================
.text:0000000000053AC8 sub_53AC8                               ; DATA XREF: .data.rel.ro:0000000000058360↓o
.text:0000000000053AC8 ; __unwind {
.text:0000000000053AC8                 LDR             X1, [X1,#0x10]
.text:0000000000053ACC                 B               .SMF_Pause
.text:0000000000053ACC ; } // starts at 53AC8
.text:0000000000053ACC ; End of function sub_53AC8
.text:0000000000053AD0 ; =============== S U B R O U T I N E =======================================
.text:0000000000053AD0 sub_53AD0                               ; DATA XREF: .data.rel.ro:0000000000058368↓o
.text:0000000000053AD0 ; __unwind {
.text:0000000000053AD0                 LDR             X1, [X1,#0x10]
.text:0000000000053AD4                 B               .SMF_Resume
.text:0000000000053AD4 ; } // starts at 53AD0
.text:0000000000053AD4 ; End of function sub_53AD0
.text:0000000000053AD8 ; ---------------------------------------------------------------------------
.text:0000000000053AD8 ; __unwind {
.text:0000000000053AD8                 LDR             X1, [X1,#0x10]
.text:0000000000053ADC                 B               .SMF_SetData
.text:0000000000053ADC ; } // starts at 53AD8
.text:0000000000053AE0 ; ---------------------------------------------------------------------------
.text:0000000000053AE0 ; __unwind {
.text:0000000000053AE0                 STP             X20, X19, [SP,#-0x20]!
.text:0000000000053AE4                 STP             X29, X30, [SP,#0x10]
.text:0000000000053AE8                 ADD             X29, SP, #0x10
.text:0000000000053AEC                 LDR             X1, [X1,#0x10]
.text:0000000000053AF0                 MOV             X19, X3
.text:0000000000053AF4                 MOV             X20, X2
.text:0000000000053AF8                 BL              .SMF_GetData
.text:0000000000053AFC                 ORR             X8, X0, X20
.text:0000000000053B00                 CBNZ            X8, loc_53B28
.text:0000000000053B04                 LDR             X8, [X19]
.text:0000000000053B08                 CMP             X8, #2
.text:0000000000053B0C                 B.EQ            loc_53B20
.text:0000000000053B10                 CMP             X8, #1
.text:0000000000053B14                 B.NE            loc_53B28
.text:0000000000053B18                 MOV             W8, #0xC
.text:0000000000053B1C                 B               loc_53B24
.text:0000000000053B20 ; ---------------------------------------------------------------------------
.text:0000000000053B20 loc_53B20                               ; CODE XREF: .text:0000000000053B0C↑j
.text:0000000000053B20                 MOV             W8, #0xD
.text:0000000000053B24 loc_53B24                               ; CODE XREF: .text:0000000000053B1C↑j
.text:0000000000053B24                 STR             X8, [X19]
.text:0000000000053B28 loc_53B28                               ; CODE XREF: .text:0000000000053B00↑j
.text:0000000000053B28                                         ; .text:0000000000053B14↑j
.text:0000000000053B28                 LDP             X29, X30, [SP,#0x10]
.text:0000000000053B2C                 LDP             X20, X19, [SP],#0x20
.text:0000000000053B30                 RET
.text:0000000000053B30 ; } // starts at 53AE0
.text:0000000000053B30 ; ---------------------------------------------------------------------------
.text:0000000000053B34                 ALIGN 8
.text:0000000000053B38 ; =============== S U B R O U T I N E =======================================
.text:0000000000053B38 ; Attributes: bp-based frame
.text:0000000000053B38 sub_53B38                               ; CODE XREF: sub_53728+258↑p
.text:0000000000053B38                                         ; sub_53B38+29C↓p
.text:0000000000053B38 var_70          = -0x70
.text:0000000000053B38 var_68          = -0x68
.text:0000000000053B38 var_60          = -0x60
.text:0000000000053B38 var_58          = -0x58
.text:0000000000053B38 var_50          = -0x50
.text:0000000000053B38 var_40          = -0x40
.text:0000000000053B38 var_30          = -0x30
.text:0000000000053B38 var_20          = -0x20
.text:0000000000053B38 var_10          = -0x10
.text:0000000000053B38 var_s0          =  0
.text:0000000000053B38 ; __unwind {
.text:0000000000053B38                 SUB             SP, SP, #0x80
.text:0000000000053B3C                 STP             X28, X27, [SP,#0x70+var_50]
.text:0000000000053B40                 STP             X26, X25, [SP,#0x70+var_40]
.text:0000000000053B44                 STP             X24, X23, [SP,#0x70+var_30]
.text:0000000000053B48                 STP             X22, X21, [SP,#0x70+var_20]
.text:0000000000053B4C                 STP             X20, X19, [SP,#0x70+var_10]
.text:0000000000053B50                 STP             X29, X30, [SP,#0x70+var_s0]
.text:0000000000053B54                 ADD             X29, SP, #0x70
.text:0000000000053B58                 MRS             X25, #3, c13, c0, #2
.text:0000000000053B5C                 CMP             X4, #0x64 ; 'd'
.text:0000000000053B60                 LDR             X8, [X25,#0x28]
.text:0000000000053B64                 STR             X8, [SP,#0x70+var_58]
.text:0000000000053B68                 B.LE            loc_53B74
.text:0000000000053B6C loc_53B6C                               ; CODE XREF: sub_53B38+2E0↓j
.text:0000000000053B6C                 MOV             X0, #0xFFFFFFFFFFFFFFEF
.text:0000000000053B70                 B               loc_53D78
.text:0000000000053B74 ; ---------------------------------------------------------------------------
.text:0000000000053B74 loc_53B74                               ; CODE XREF: sub_53B38+30↑j
.text:0000000000053B74                 MOV             X19, X1
.text:0000000000053B78                 LDR             X1, [X1]
.text:0000000000053B7C                 MOV             X22, X4
.text:0000000000053B80                 MOV             X23, X3
.text:0000000000053B84                 MOV             X21, X2
.text:0000000000053B88                 MOV             X20, X0
.text:0000000000053B8C                 BL              .EAS_HWFileSeek
.text:0000000000053B90                 CBNZ            X0, loc_53D78
.text:0000000000053B94                 LDR             X24, [X19]
.text:0000000000053B98                 STR             XZR, [X23]
.text:0000000000053B9C                 B               loc_53BAC
.text:0000000000053BA0 ; ---------------------------------------------------------------------------
.text:0000000000053BA0 loc_53BA0                               ; CODE XREF: sub_53B38+98↓j
.text:0000000000053BA0                 AND             X9, X9, #0x7F
.text:0000000000053BA4                 ORR             X8, X8, X9
.text:0000000000053BA8                 STR             X8, [X23]
.text:0000000000053BAC loc_53BAC                               ; CODE XREF: sub_53B38+64↑j
.text:0000000000053BAC                 ADD             X2, SP, #0x70+var_60
.text:0000000000053BB0                 MOV             X0, X20
.text:0000000000053BB4                 MOV             X1, X24
.text:0000000000053BB8                 BL              .EAS_HWGetByte
.text:0000000000053BBC                 CBNZ            X0, loc_53D78
.text:0000000000053BC0                 LDRSB           W10, [SP,#0x70+var_60]
.text:0000000000053BC4                 LDR             X8, [X23]
.text:0000000000053BC8                 AND             X9, X10, #0xFF
.text:0000000000053BCC                 LSL             X8, X8, #7
.text:0000000000053BD0                 TBNZ            W10, #0x1F, loc_53BA0
.text:0000000000053BD4                 ORR             X8, X8, X9
.text:0000000000053BD8                 ADD             X2, SP, #0x70+var_60
.text:0000000000053BDC                 MOV             X0, X20
.text:0000000000053BE0                 STR             X8, [X23]
.text:0000000000053BE4                 LDR             X23, [X19]
.text:0000000000053BE8                 MOV             X1, X23
.text:0000000000053BEC                 BL              .EAS_HWGetByte
.text:0000000000053BF0                 CBNZ            X0, loc_53D78
.text:0000000000053BF4                 MOV             X26, XZR
.text:0000000000053BF8 loc_53BF8                               ; CODE XREF: sub_53B38+E8↓j
.text:0000000000053BF8                 LDRSB           W8, [SP,#0x70+var_60]
.text:0000000000053BFC                 LSL             X27, X26, #7
.text:0000000000053C00                 AND             X24, X8, #0xFF
.text:0000000000053C04                 TBZ             W8, #0x1F, loc_53C28
.text:0000000000053C08                 ADD             X2, SP, #0x70+var_60
.text:0000000000053C0C                 MOV             X0, X20
.text:0000000000053C10                 MOV             X1, X23
.text:0000000000053C14                 AND             X8, X24, #0x7F
.text:0000000000053C18                 ORR             X26, X27, X8
.text:0000000000053C1C                 BL              .EAS_HWGetByte
.text:0000000000053C20                 CBZ             X0, loc_53BF8
.text:0000000000053C24                 B               loc_53D78
.text:0000000000053C28 ; ---------------------------------------------------------------------------
.text:0000000000053C28 loc_53C28                               ; CODE XREF: sub_53B38+CC↑j
.text:0000000000053C28                 LDR             X23, [X19]
.text:0000000000053C2C                 ADD             X2, SP, #0x70+var_60
.text:0000000000053C30                 MOV             X0, X20
.text:0000000000053C34                 MOV             X1, X23
.text:0000000000053C38                 BL              .EAS_HWGetByte
.text:0000000000053C3C                 CBNZ            X0, loc_53D78
.text:0000000000053C40                 MOV             X26, XZR
.text:0000000000053C44                 ORR             X24, X27, X24
.text:0000000000053C48 loc_53C48                               ; CODE XREF: sub_53B38+138↓j
.text:0000000000053C48                 LDRSB           W8, [SP,#0x70+var_60]
.text:0000000000053C4C                 LSL             X26, X26, #7
.text:0000000000053C50                 AND             X28, X8, #0xFF
.text:0000000000053C54                 TBZ             W8, #0x1F, loc_53C78
.text:0000000000053C58                 ADD             X2, SP, #0x70+var_60
.text:0000000000053C5C                 MOV             X0, X20
.text:0000000000053C60                 MOV             X1, X23
.text:0000000000053C64                 AND             X8, X28, #0x7F
.text:0000000000053C68                 ORR             X26, X26, X8
.text:0000000000053C6C                 BL              .EAS_HWGetByte
.text:0000000000053C70                 CBZ             X0, loc_53C48
.text:0000000000053C74                 B               loc_53D78
.text:0000000000053C78 ; ---------------------------------------------------------------------------
.text:0000000000053C78 loc_53C78                               ; CODE XREF: sub_53B38+11C↑j
.text:0000000000053C78                 LDR             X23, [X19]
.text:0000000000053C7C                 ADD             X2, SP, #0x70+var_60
.text:0000000000053C80                 MOV             X0, X20
.text:0000000000053C84                 STR             XZR, [SP,#0x70+var_68]
.text:0000000000053C88                 MOV             X1, X23
.text:0000000000053C8C                 BL              .EAS_HWGetByte
.text:0000000000053C90                 CBNZ            X0, loc_53D78
.text:0000000000053C94                 MOV             X27, XZR
.text:0000000000053C98                 ORR             X26, X26, X28
.text:0000000000053C9C loc_53C9C                               ; CODE XREF: sub_53B38+18C↓j
.text:0000000000053C9C                 LDRSB           W10, [SP,#0x70+var_60]
.text:0000000000053CA0                 LSL             X9, X27, #7
.text:0000000000053CA4                 AND             X8, X10, #0xFF
.text:0000000000053CA8                 TBZ             W10, #0x1F, loc_53CD0
.text:0000000000053CAC                 ADD             X2, SP, #0x70+var_60
.text:0000000000053CB0                 MOV             X0, X20
.text:0000000000053CB4                 MOV             X1, X23
.text:0000000000053CB8                 AND             X8, X8, #0x7F
.text:0000000000053CBC                 ORR             X27, X9, X8
.text:0000000000053CC0                 BL              .EAS_HWGetByte
.text:0000000000053CC4                 CBZ             X0, loc_53C9C
.text:0000000000053CC8                 STR             X27, [SP,#0x70+var_68]
.text:0000000000053CCC                 B               loc_53D78
.text:0000000000053CD0 ; ---------------------------------------------------------------------------
.text:0000000000053CD0 loc_53CD0                               ; CODE XREF: sub_53B38+170↑j
.text:0000000000053CD0                 LDR             X1, [X19]
.text:0000000000053CD4                 ORR             X8, X9, X8
.text:0000000000053CD8                 ADD             X2, SP, #0x70+var_60
.text:0000000000053CDC                 MOV             X0, X20
.text:0000000000053CE0                 STR             X8, [SP,#0x70+var_68]
.text:0000000000053CE4                 BL              .EAS_HWFilePos
.text:0000000000053CE8                 CBNZ            X0, loc_53D78
.text:0000000000053CEC                 LDR             X8, [SP,#0x70+var_60]
.text:0000000000053CF0                 SUB             X8, X8, X21
.text:0000000000053CF4                 CMP             X8, X26
.text:0000000000053CF8                 B.LE            loc_53D04
.text:0000000000053CFC                 MOV             X0, #0xFFFFFFFFFFFFFFFF
.text:0000000000053D00                 B               loc_53D78
.text:0000000000053D04 ; ---------------------------------------------------------------------------
.text:0000000000053D04 loc_53D04                               ; CODE XREF: sub_53B38+1C0↑j
.text:0000000000053D04                 LDR             X1, [X19]
.text:0000000000053D08                 ADD             X2, X26, X21
.text:0000000000053D0C                 MOV             X0, X20
.text:0000000000053D10                 BL              .EAS_HWFileSeek
.text:0000000000053D14                 CBNZ            X0, loc_53D78
.text:0000000000053D18                 LDR             X23, [X19]
.text:0000000000053D1C                 MOV             X2, SP
.text:0000000000053D20                 MOV             X0, X20
.text:0000000000053D24                 MOV             X1, X23
.text:0000000000053D28                 BL              .EAS_HWGetByte
.text:0000000000053D2C                 CBNZ            X0, loc_53D78
.text:0000000000053D30                 MOV             X27, XZR
.text:0000000000053D34 loc_53D34                               ; CODE XREF: sub_53B38+224↓j
.text:0000000000053D34                 LDRSB           W8, [SP,#0x70+var_70]
.text:0000000000053D38                 LSL             X27, X27, #7
.text:0000000000053D3C                 AND             X26, X8, #0xFF
.text:0000000000053D40                 TBZ             W8, #0x1F, loc_53D64
.text:0000000000053D44                 MOV             X2, SP
.text:0000000000053D48                 MOV             X0, X20
.text:0000000000053D4C                 MOV             X1, X23
.text:0000000000053D50                 AND             X8, X26, #0x7F
.text:0000000000053D54                 ORR             X27, X27, X8
.text:0000000000053D58                 BL              .EAS_HWGetByte
.text:0000000000053D5C                 CBZ             X0, loc_53D34
.text:0000000000053D60                 B               loc_53D78
.text:0000000000053D64 ; ---------------------------------------------------------------------------
.text:0000000000053D64 loc_53D64                               ; CODE XREF: sub_53B38+208↑j
.text:0000000000053D64                 LDR             X1, [X19]
.text:0000000000053D68                 ADD             X2, SP, #0x70+var_60
.text:0000000000053D6C                 MOV             X0, X20
.text:0000000000053D70                 BL              .EAS_HWFilePos
.text:0000000000053D74                 CBZ             X0, loc_53DA8
.text:0000000000053D78 loc_53D78                               ; CODE XREF: sub_53B38+38↑j
.text:0000000000053D78                                         ; sub_53B38+58↑j ...
.text:0000000000053D78                 LDR             X8, [X25,#0x28]
.text:0000000000053D7C                 LDR             X9, [SP,#0x70+var_58]
.text:0000000000053D80                 CMP             X8, X9
.text:0000000000053D84                 B.NE            loc_53F38
.text:0000000000053D88                 LDP             X29, X30, [SP,#0x70+var_s0]
.text:0000000000053D8C                 LDP             X20, X19, [SP,#0x70+var_10]
.text:0000000000053D90                 LDP             X22, X21, [SP,#0x70+var_20]
.text:0000000000053D94                 LDP             X24, X23, [SP,#0x70+var_30]
.text:0000000000053D98                 LDP             X26, X25, [SP,#0x70+var_40]
.text:0000000000053D9C                 LDP             X28, X27, [SP,#0x70+var_50]
.text:0000000000053DA0                 ADD             SP, SP, #0x80
.text:0000000000053DA4                 RET
.text:0000000000053DA8 ; ---------------------------------------------------------------------------
.text:0000000000053DA8 loc_53DA8                               ; CODE XREF: sub_53B38+23C↑j
.text:0000000000053DA8                 CBZ             X24, loc_53E08
.text:0000000000053DAC                 CMP             X24, #1
.text:0000000000053DB0                 B.LT            loc_53F04
.text:0000000000053DB4                 ADD             X22, X22, #1
.text:0000000000053DB8 loc_53DB8                               ; CODE XREF: sub_53B38+2C8↓j
.text:0000000000053DB8                 LDR             X2, [SP,#0x70+var_60]
.text:0000000000053DBC                 CMP             X2, X21
.text:0000000000053DC0                 B.LE            loc_53F0C
.text:0000000000053DC4                 ADD             X3, SP, #0x70+var_68
.text:0000000000053DC8                 MOV             X0, X20
.text:0000000000053DCC                 MOV             X1, X19
.text:0000000000053DD0                 MOV             X4, X22
.text:0000000000053DD4                 BL              sub_53B38
.text:0000000000053DD8                 CBNZ            X0, loc_53D78
.text:0000000000053DDC                 LDP             X8, X9, [SP,#0x70+var_68]
.text:0000000000053DE0                 LDR             X1, [X19]
.text:0000000000053DE4                 MOV             X0, X20
.text:0000000000053DE8                 ADD             X2, X9, X8
.text:0000000000053DEC                 STR             X2, [SP,#0x70+var_60]
.text:0000000000053DF0                 BL              .EAS_HWFileSeek
.text:0000000000053DF4                 CBNZ            X0, loc_53D78
.text:0000000000053DF8                 SUB             X24, X24, #1
.text:0000000000053DFC                 CMP             X24, #1
.text:0000000000053E00                 B.GE            loc_53DB8
.text:0000000000053E04                 B               loc_53D78
.text:0000000000053E08 ; ---------------------------------------------------------------------------
.text:0000000000053E08 loc_53E08                               ; CODE XREF: sub_53B38:loc_53DA8↑j
.text:0000000000053E08                 ORR             X8, X27, X26
.text:0000000000053E0C                 CMP             X8, #1
.text:0000000000053E10                 B.EQ            loc_53E78
.text:0000000000053E14                 CMP             X8, #2
.text:0000000000053E18                 B.NE            loc_53B6C
.text:0000000000053E1C                 LDR             X21, [X19]
.text:0000000000053E20                 STR             XZR, [SP,#0x70+var_60]
.text:0000000000053E24                 B               loc_53E34
.text:0000000000053E28 ; ---------------------------------------------------------------------------
.text:0000000000053E28 loc_53E28                               ; CODE XREF: sub_53B38+320↓j
.text:0000000000053E28                 AND             X9, X9, #0x7F
.text:0000000000053E2C                 ORR             X8, X8, X9
.text:0000000000053E30                 STR             X8, [SP,#0x70+var_60]
.text:0000000000053E34 loc_53E34                               ; CODE XREF: sub_53B38+2EC↑j
.text:0000000000053E34                 MOV             X2, SP
.text:0000000000053E38                 MOV             X0, X20
.text:0000000000053E3C                 MOV             X1, X21
.text:0000000000053E40                 BL              .EAS_HWGetByte
.text:0000000000053E44                 CBNZ            X0, loc_53D78
.text:0000000000053E48                 LDRSB           W10, [SP,#0x70+var_70]
.text:0000000000053E4C                 LDR             X8, [SP,#0x70+var_60]
.text:0000000000053E50                 AND             X9, X10, #0xFF
.text:0000000000053E54                 LSL             X8, X8, #7
.text:0000000000053E58                 TBNZ            W10, #0x1F, loc_53E28
.text:0000000000053E5C                 LDP             X1, X10, [X19]
.text:0000000000053E60                 ORR             X8, X8, X9
.text:0000000000053E64                 MOV             X0, X20
.text:0000000000053E68                 ADD             X2, X10, X8
.text:0000000000053E6C                 STR             X2, [SP,#0x70+var_60]
.text:0000000000053E70                 BL              .EAS_HWFileSeek
.text:0000000000053E74                 CBNZ            X0, loc_53D78
.text:0000000000053E78 loc_53E78                               ; CODE XREF: sub_53B38+2D8↑j
.text:0000000000053E78                 LDR             X1, [X19]
.text:0000000000053E7C                 MOV             X2, SP
.text:0000000000053E80                 MOV             X0, X20
.text:0000000000053E84                 MOV             W3, #1
.text:0000000000053E88                 BL              .EAS_HWGetDWord
.text:0000000000053E8C                 CBNZ            X0, loc_53D78
.text:0000000000053E90                 LDR             X8, [SP,#0x70+var_70]
.text:0000000000053E94                 MOV             W9, #0x4D546864
.text:0000000000053E9C                 CMP             X8, X9
.text:0000000000053EA0                 B.EQ            loc_53F28
.text:0000000000053EA4                 MOV             W9, #0x52494646
.text:0000000000053EAC                 CMP             X8, X9
.text:0000000000053EB0                 B.NE            loc_53F04
.text:0000000000053EB4                 LDR             X1, [X19]
.text:0000000000053EB8                 MOV             X0, X20
.text:0000000000053EBC                 MOV             W2, #8
.text:0000000000053EC0                 BL              .EAS_HWFileSeekOfs
.text:0000000000053EC4                 CBNZ            X0, loc_53D78
.text:0000000000053EC8                 LDR             X1, [X19]
.text:0000000000053ECC                 MOV             X2, SP
.text:0000000000053ED0                 MOV             X0, X20
.text:0000000000053ED4                 MOV             W3, #1
.text:0000000000053ED8                 BL              .EAS_HWGetDWord
.text:0000000000053EDC                 CBNZ            X0, loc_53D78
.text:0000000000053EE0                 LDR             X8, [SP,#0x70+var_70]
.text:0000000000053EE4                 MOV             W9, #0x444C5320
.text:0000000000053EEC                 CMP             X8, X9
.text:0000000000053EF0                 B.NE            loc_53F04
.text:0000000000053EF4                 LDR             X8, [SP,#0x70+var_60]
.text:0000000000053EF8                 MOV             X0, XZR
.text:0000000000053EFC                 STR             X8, [X19,#0x20]
.text:0000000000053F00                 B               loc_53D78
.text:0000000000053F04 ; ---------------------------------------------------------------------------
.text:0000000000053F04 loc_53F04                               ; CODE XREF: sub_53B38+278↑j
.text:0000000000053F04                                         ; sub_53B38+378↑j ...
.text:0000000000053F04                 MOV             X0, XZR
.text:0000000000053F08                 B               loc_53D78
.text:0000000000053F0C ; ---------------------------------------------------------------------------
.text:0000000000053F0C loc_53F0C                               ; CODE XREF: sub_53B38+288↑j
.text:0000000000053F0C                 ADRP            X2, #aB36725407Parse@PAGE ; "b/36725407: parser did not advance"
.text:0000000000053F10                 ADD             X2, X2, #aB36725407Parse@PAGEOFF ; "b/36725407: parser did not advance"
.text:0000000000053F14                 MOV             W0, #6
.text:0000000000053F18                 MOV             X1, XZR
.text:0000000000053F1C                 BL              .__android_log_print
.text:0000000000053F20                 MOV             X0, #0xFFFFFFFFFFFFFFEF
.text:0000000000053F24                 B               loc_53D78
.text:0000000000053F28 ; ---------------------------------------------------------------------------
.text:0000000000053F28 loc_53F28                               ; CODE XREF: sub_53B38+368↑j
.text:0000000000053F28                 LDR             X8, [SP,#0x70+var_60]
.text:0000000000053F2C                 MOV             X0, XZR
.text:0000000000053F30                 STR             X8, [X19,#0x18]
.text:0000000000053F34                 B               loc_53D78
.text:0000000000053F38 ; ---------------------------------------------------------------------------
.text:0000000000053F38 loc_53F38                               ; CODE XREF: sub_53B38+24C↑j
.text:0000000000053F38                 BL              .__stack_chk_fail
.text:0000000000053F38 ; } // starts at 53B38
.text:0000000000053F38 ; End of function sub_53B38
.text:0000000000053F38 ; ---------------------------------------------------------------------------
.text:0000000000053F3C                 ALIGN 0x20
.text:0000000000053F40 ; =============== S U B R O U T I N E =======================================
.text:0000000000053F40                 EXPORT JET_ParseEvent
.text:0000000000053F40 JET_ParseEvent                          ; DATA XREF: LOAD:0000000000001290↑o
.text:0000000000053F40 ; __unwind {
.text:0000000000053F40                 LSR             X8, X0, #0x18
.text:0000000000053F44                 UBFX            W9, W0, #0x12, #6
.text:0000000000053F48                 STRB            W8, [X1]
.text:0000000000053F4C                 AND             W8, W0, #0x7F
.text:0000000000053F50                 UBFX            W10, W0, #0xE, #4
.text:0000000000053F54                 STRB            W9, [X1,#2]
.text:0000000000053F58                 UBFX            W11, W0, #7, #7
.text:0000000000053F5C                 STRB            W10, [X1,#1]
.text:0000000000053F60                 STRB            W11, [X1,#3]
.text:0000000000053F64                 STRB            W8, [X1,#4]
.text:0000000000053F68                 RET
.text:0000000000053F68 ; } // starts at 53F40
.text:0000000000053F68 ; End of function JET_ParseEvent
.text:0000000000053F68 ; ---------------------------------------------------------------------------
.text:0000000000053F6C                 ALIGN 0x10
.text:0000000000053F70 ; =============== S U B R O U T I N E =======================================
.text:0000000000053F70 ; Attributes: bp-based frame
.text:0000000000053F70                 EXPORT JET_OpenFile
.text:0000000000053F70 JET_OpenFile                            ; DATA XREF: LOAD:stru_588↑o
.text:0000000000053F70 var_80          = -0x80
.text:0000000000053F70 var_78          = -0x78
.text:0000000000053F70 var_70          = -0x70
.text:0000000000053F70 var_68          = -0x68
.text:0000000000053F70 var_60          = -0x60
.text:0000000000053F70 var_58          = -0x58
.text:0000000000053F70 var_50          = -0x50
.text:0000000000053F70 var_40          = -0x40
.text:0000000000053F70 var_30          = -0x30
.text:0000000000053F70 var_20          = -0x20
.text:0000000000053F70 var_10          = -0x10
.text:0000000000053F70 var_s0          =  0
.text:0000000000053F70 ; __unwind {
.text:0000000000053F70                 SUB             SP, SP, #0x90
.text:0000000000053F74                 STP             X28, X27, [SP,#0x80+var_50]
.text:0000000000053F78                 STP             X26, X25, [SP,#0x80+var_40]
.text:0000000000053F7C                 STP             X24, X23, [SP,#0x80+var_30]
.text:0000000000053F80                 STP             X22, X21, [SP,#0x80+var_20]
.text:0000000000053F84                 STP             X20, X19, [SP,#0x80+var_10]
.text:0000000000053F88                 STP             X29, X30, [SP,#0x80+var_s0]
.text:0000000000053F8C                 ADD             X29, SP, #0x80
.text:0000000000053F90                 MRS             X22, #3, c13, c0, #2
.text:0000000000053F94                 LDR             X8, [X22,#0x28]
.text:0000000000053F98                 STR             X8, [SP,#0x80+var_58]
.text:0000000000053F9C                 LDR             X2, [X0,#0x178]
.text:0000000000053FA0                 STR             XZR, [SP,#0x80+var_80]
.text:0000000000053FA4                 LDR             X8, [X2]
.text:0000000000053FA8                 CBZ             X8, loc_53FB4
.text:0000000000053FAC                 MOV             X21, #0xFFFFFFFFFFFFFFDF
.text:0000000000053FB0                 B               loc_54048
.text:0000000000053FB4 ; ---------------------------------------------------------------------------
.text:0000000000053FB4 loc_53FB4                               ; CODE XREF: JET_OpenFile+38↑j
.text:0000000000053FB4                 MOV             X19, X0
.text:0000000000053FB8                 LDR             X0, [X0]
.text:0000000000053FBC                 MOV             W3, #1
.text:0000000000053FC0                 BL              .EAS_HWOpenFile
.text:0000000000053FC4                 MOV             X21, X0
.text:0000000000053FC8                 CBNZ            X0, loc_54048
.text:0000000000053FCC                 LDR             X8, [X19,#0x178]
.text:0000000000053FD0                 ADD             X2, SP, #0x80+var_70
.text:0000000000053FD4                 LDR             X0, [X19]
.text:0000000000053FD8                 MOV             W3, #1
.text:0000000000053FDC                 LDR             X1, [X8]
.text:0000000000053FE0                 BL              .EAS_HWGetDWord
.text:0000000000053FE4                 LDR             X8, [SP,#0x80+var_70]
.text:0000000000053FE8                 MOV             W9, #0x4A455420
.text:0000000000053FF0                 CMP             X8, X9
.text:0000000000053FF4                 CCMP            X0, #0, #0, NE
.text:0000000000053FF8                 MOV             X8, #0xFFFFFFFFFFFFFFF1
.text:0000000000053FFC                 CSEL            X21, X8, X0, EQ
.text:0000000000054000                 CBZ             X21, loc_54010
.text:0000000000054004                 MOV             W8, #8
.text:0000000000054008                 STR             X8, [SP,#0x80+var_78]
.text:000000000005400C                 B               loc_54038
.text:0000000000054010 ; ---------------------------------------------------------------------------
.text:0000000000054010 loc_54010                               ; CODE XREF: JET_OpenFile+90↑j
.text:0000000000054010                 LDR             X8, [X19,#0x178]
.text:0000000000054014                 MOV             X2, SP
.text:0000000000054018                 LDR             X0, [X19]
.text:000000000005401C                 MOV             W3, WZR
.text:0000000000054020                 LDR             X1, [X8]
.text:0000000000054024                 BL              .EAS_HWGetDWord
.text:0000000000054028                 MOV             X21, X0
.text:000000000005402C                 MOV             W8, #8
.text:0000000000054030                 STR             X8, [SP,#0x80+var_78]
.text:0000000000054034                 CBZ             X0, loc_5407C
.text:0000000000054038 loc_54038                               ; CODE XREF: JET_OpenFile+9C↑j
.text:0000000000054038                                         ; JET_OpenFile+18C↓j ...
.text:0000000000054038                 LDR             X8, [X19,#0x178]
.text:000000000005403C                 LDR             X0, [X19]
.text:0000000000054040                 LDR             X1, [X8]
.text:0000000000054044                 BL              .EAS_HWCloseFile
.text:0000000000054048 loc_54048                               ; CODE XREF: JET_OpenFile+40↑j
.text:0000000000054048                                         ; JET_OpenFile+58↑j ...
.text:0000000000054048                 LDR             X8, [X22,#0x28]
.text:000000000005404C                 LDR             X9, [SP,#0x80+var_58]
.text:0000000000054050                 CMP             X8, X9
.text:0000000000054054                 B.NE            loc_542D4
.text:0000000000054058                 MOV             X0, X21
.text:000000000005405C                 LDP             X29, X30, [SP,#0x80+var_s0]
.text:0000000000054060                 LDP             X20, X19, [SP,#0x80+var_10]
.text:0000000000054064                 LDP             X22, X21, [SP,#0x80+var_20]
.text:0000000000054068                 LDP             X24, X23, [SP,#0x80+var_30]
.text:000000000005406C                 LDP             X26, X25, [SP,#0x80+var_40]
.text:0000000000054070                 LDP             X28, X27, [SP,#0x80+var_50]
.text:0000000000054074                 ADD             SP, SP, #0x90
.text:0000000000054078                 RET
.text:000000000005407C ; ---------------------------------------------------------------------------
.text:000000000005407C loc_5407C                               ; CODE XREF: JET_OpenFile+C4↑j
.text:000000000005407C                 MOV             W24, #0x4E45
.text:0000000000054080                 MOV             W25, #0x5050
.text:0000000000054084                 MOV             W28, #0x4D46
.text:0000000000054088                 MOV             W27, WZR
.text:000000000005408C                 MOV             W23, WZR
.text:0000000000054090                 MOV             W20, #8
.text:0000000000054094                 MOVK            W24, #0x4A49,LSL#16
.text:0000000000054098                 MOVK            W25, #0x4A41,LSL#16
.text:000000000005409C                 MOVK            W28, #0x4A53,LSL#16
.text:00000000000540A0 loc_540A0                               ; CODE XREF: JET_OpenFile+33C↓j
.text:00000000000540A0                 LDR             X8, [SP,#0x80+var_80]
.text:00000000000540A4                 CMP             X20, X8
.text:00000000000540A8                 B.GE            loc_542CC
.text:00000000000540AC                 LDR             X8, [X19,#0x178]
.text:00000000000540B0                 MOV             X2, X20
.text:00000000000540B4                 LDR             X0, [X19]
.text:00000000000540B8                 LDR             X1, [X8]
.text:00000000000540BC                 BL              .EAS_HWFileSeek
.text:00000000000540C0                 CBNZ            X0, loc_542C4
.text:00000000000540C4                 LDR             X8, [X19,#0x178]
.text:00000000000540C8                 ADD             X2, SP, #0x80+var_70
.text:00000000000540CC                 LDR             X0, [X19]
.text:00000000000540D0                 MOV             W3, #1
.text:00000000000540D4                 LDR             X1, [X8]
.text:00000000000540D8                 BL              .EAS_HWGetDWord
.text:00000000000540DC                 CBNZ            X0, loc_542C4
.text:00000000000540E0                 LDR             X8, [X19,#0x178]
.text:00000000000540E4                 ADD             X2, SP, #0x80+var_78
.text:00000000000540E8                 LDR             X0, [X19]
.text:00000000000540EC                 MOV             W3, WZR
.text:00000000000540F0                 LDR             X1, [X8]
.text:00000000000540F4                 BL              .EAS_HWGetDWord
.text:00000000000540F8                 MOV             X21, X0
.text:00000000000540FC                 CBNZ            X0, loc_54038
.text:0000000000054100                 LDR             X8, [SP,#0x80+var_70]
.text:0000000000054104                 ADD             X20, X20, #8
.text:0000000000054108                 CMP             X8, X24
.text:000000000005410C                 B.GT            loc_54160
.text:0000000000054110                 CMP             X8, X25
.text:0000000000054114                 B.EQ            loc_5425C
.text:0000000000054118                 MOV             W9, #0x4A444C53
.text:0000000000054120                 CMP             X8, X9
.text:0000000000054124                 B.NE            loc_542A4
.text:0000000000054128                 LDR             X8, [X19,#0x178]
.text:000000000005412C                 LDRB            W9, [X8,#0x399]
.text:0000000000054130                 CMP             W27, W9
.text:0000000000054134                 B.GE            loc_542A0
.text:0000000000054138                 LDR             X0, [X19]
.text:000000000005413C                 MOV             X2, X20
.text:0000000000054140                 LDR             X1, [X8]
.text:0000000000054144                 ADD             X8, X8, W27,SXTW#3
.text:0000000000054148                 ADD             X3, X8, #0x160
.text:000000000005414C                 ADD             W26, W27, #1
.text:0000000000054150                 BL              .DLSParser
.text:0000000000054154                 MOV             X21, X0
.text:0000000000054158                 MOV             W27, W26
.text:000000000005415C                 B               loc_542A4
.text:0000000000054160 ; ---------------------------------------------------------------------------
.text:0000000000054160 loc_54160                               ; CODE XREF: JET_OpenFile+19C↑j
.text:0000000000054160                 CMP             X8, X28
.text:0000000000054164                 B.EQ            loc_54278
.text:0000000000054168                 MOV             W9, #0x4A494E46
.text:0000000000054170                 CMP             X8, X9
.text:0000000000054174                 B.NE            loc_542A4
.text:0000000000054178                 LDR             X8, [X19,#0x178]
.text:000000000005417C                 MOV             X2, X20
.text:0000000000054180                 LDR             X0, [X19]
.text:0000000000054184                 LDR             X26, [SP,#0x80+var_78]
.text:0000000000054188                 LDR             X1, [X8]
.text:000000000005418C                 BL              .EAS_HWFileSeek
.text:0000000000054190                 MOV             X21, X0
.text:0000000000054194                 CBNZ            X0, loc_542A4
.text:0000000000054198                 CMP             X26, #1
.text:000000000005419C                 B.LT            loc_542A0
.text:00000000000541A0 loc_541A0                               ; CODE XREF: JET_OpenFile+2E4↓j
.text:00000000000541A0                 LDR             X8, [X19,#0x178]
.text:00000000000541A4                 ADD             X2, SP, #0x80+var_60
.text:00000000000541A8                 LDR             X0, [X19]
.text:00000000000541AC                 MOV             W3, #1
.text:00000000000541B0                 LDR             X1, [X8]
.text:00000000000541B4                 BL              .EAS_HWGetDWord
.text:00000000000541B8                 CBNZ            X0, loc_542B4
.text:00000000000541BC                 LDR             X8, [X19,#0x178]
.text:00000000000541C0                 ADD             X2, SP, #0x80+var_68
.text:00000000000541C4                 LDR             X0, [X19]
.text:00000000000541C8                 MOV             W3, WZR
.text:00000000000541CC                 LDR             X1, [X8]
.text:00000000000541D0                 BL              .EAS_HWGetDWord
.text:00000000000541D4                 CBNZ            X0, loc_542B4
.text:00000000000541D8                 LDR             X8, [SP,#0x80+var_60]
.text:00000000000541DC                 MOV             W9, #0x444C5323
.text:00000000000541E4                 CMP             X8, X9
.text:00000000000541E8                 B.EQ            loc_54224
.text:00000000000541EC                 MOV             W9, #0x4A564552
.text:00000000000541F4                 CMP             X8, X9
.text:00000000000541F8                 B.EQ            loc_5423C
.text:00000000000541FC                 MOV             W9, #0x534D4623
.text:0000000000054204                 CMP             X8, X9
.text:0000000000054208                 B.NE            loc_5424C
.text:000000000005420C                 LDR             X8, [SP,#0x80+var_68]
.text:0000000000054210                 CMP             X8, #0x1F
.text:0000000000054214                 B.HI            loc_542BC
.text:0000000000054218                 LDR             X9, [X19,#0x178]
.text:000000000005421C                 STRB            W8, [X9,#0x398]
.text:0000000000054220                 B               loc_5424C
.text:0000000000054224 ; ---------------------------------------------------------------------------
.text:0000000000054224 loc_54224                               ; CODE XREF: JET_OpenFile+278↑j
.text:0000000000054224                 LDR             X8, [SP,#0x80+var_68]
.text:0000000000054228                 CMP             X8, #3
.text:000000000005422C                 B.HI            loc_542BC
.text:0000000000054230                 LDR             X9, [X19,#0x178]
.text:0000000000054234                 STRB            W8, [X9,#0x399]
.text:0000000000054238                 B               loc_5424C
.text:000000000005423C ; ---------------------------------------------------------------------------
.text:000000000005423C loc_5423C                               ; CODE XREF: JET_OpenFile+288↑j
.text:000000000005423C                 LDRB            W8, [SP,#0x80+var_68+3]
.text:0000000000054240                 MOV             W9, #0x1000000
.text:0000000000054244                 CMP             X9, X8,LSL#24
.text:0000000000054248                 B.NE            loc_542BC
.text:000000000005424C loc_5424C                               ; CODE XREF: JET_OpenFile+298↑j
.text:000000000005424C                                         ; JET_OpenFile+2B0↑j ...
.text:000000000005424C                 SUB             X26, X26, #8
.text:0000000000054250                 CMP             X26, #0
.text:0000000000054254                 B.GT            loc_541A0
.text:0000000000054258                 B               loc_542A0
.text:000000000005425C ; ---------------------------------------------------------------------------
.text:000000000005425C loc_5425C                               ; CODE XREF: JET_OpenFile+1A4↑j
.text:000000000005425C                 LDR             X8, [X19,#0x178]
.text:0000000000054260                 MOV             X21, XZR
.text:0000000000054264                 STR             X20, [X8,#0x150]
.text:0000000000054268                 LDR             X8, [SP,#0x80+var_78]
.text:000000000005426C                 LDR             X9, [X19,#0x178]
.text:0000000000054270                 STR             X8, [X9,#0x158]
.text:0000000000054274                 B               loc_542A4
.text:0000000000054278 ; ---------------------------------------------------------------------------
.text:0000000000054278 loc_54278                               ; CODE XREF: JET_OpenFile+1F4↑j
.text:0000000000054278                 LDR             X8, [X19,#0x178]
.text:000000000005427C                 LDRB            W9, [X8,#0x398]
.text:0000000000054280                 CMP             W23, W9
.text:0000000000054284                 B.GE            loc_542A0
.text:0000000000054288                 ADD             X8, X8, W23,SXTW#3
.text:000000000005428C                 ADD             W9, W23, #1
.text:0000000000054290                 MOV             X21, XZR
.text:0000000000054294                 MOV             W23, W9
.text:0000000000054298                 STR             X20, [X8,#0x50]
.text:000000000005429C                 B               loc_542A4
.text:00000000000542A0 ; ---------------------------------------------------------------------------
.text:00000000000542A0 loc_542A0                               ; CODE XREF: JET_OpenFile+1C4↑j
.text:00000000000542A0                                         ; JET_OpenFile+22C↑j ...
.text:00000000000542A0                 MOV             X21, XZR
.text:00000000000542A4 loc_542A4                               ; CODE XREF: JET_OpenFile+1B4↑j
.text:00000000000542A4                                         ; JET_OpenFile+1EC↑j ...
.text:00000000000542A4                 LDR             X8, [SP,#0x80+var_78]
.text:00000000000542A8                 ADD             X20, X8, X20
.text:00000000000542AC                 CBZ             X21, loc_540A0
.text:00000000000542B0                 B               loc_54038
.text:00000000000542B4 ; ---------------------------------------------------------------------------
.text:00000000000542B4 loc_542B4                               ; CODE XREF: JET_OpenFile+248↑j
.text:00000000000542B4                                         ; JET_OpenFile+264↑j
.text:00000000000542B4                 MOV             X21, X0
.text:00000000000542B8                 B               loc_542A4
.text:00000000000542BC ; ---------------------------------------------------------------------------
.text:00000000000542BC loc_542BC                               ; CODE XREF: JET_OpenFile+2A4↑j
.text:00000000000542BC                                         ; JET_OpenFile+2BC↑j ...
.text:00000000000542BC                 MOV             X21, #0xFFFFFFFFFFFFFFDD
.text:00000000000542C0                 B               loc_542A4
.text:00000000000542C4 ; ---------------------------------------------------------------------------
.text:00000000000542C4 loc_542C4                               ; CODE XREF: JET_OpenFile+150↑j
.text:00000000000542C4                                         ; JET_OpenFile+16C↑j
.text:00000000000542C4                 MOV             X21, X0
.text:00000000000542C8                 B               loc_54038
.text:00000000000542CC ; ---------------------------------------------------------------------------
.text:00000000000542CC loc_542CC                               ; CODE XREF: JET_OpenFile+138↑j
.text:00000000000542CC                 MOV             X21, XZR
.text:00000000000542D0                 B               loc_54048
.text:00000000000542D4 ; ---------------------------------------------------------------------------
.text:00000000000542D4 loc_542D4                               ; CODE XREF: JET_OpenFile+E4↑j
.text:00000000000542D4                 BL              .__stack_chk_fail
.text:00000000000542D4 ; } // starts at 53F70
.text:00000000000542D4 ; End of function JET_OpenFile
.text:00000000000542D8 ; =============== S U B R O U T I N E =======================================
.text:00000000000542D8                 EXPORT JET_GetAppData
.text:00000000000542D8 JET_GetAppData                          ; DATA XREF: LOAD:0000000000000CC0↑o
.text:00000000000542D8 ; __unwind {
.text:00000000000542D8                 LDR             X8, [X0,#0x178]
.text:00000000000542DC                 LDR             X9, [X8,#0x158]
.text:00000000000542E0                 CBZ             X9, loc_54300
.text:00000000000542E4                 LDR             X8, [X8,#0x150]
.text:00000000000542E8                 STR             X8, [X1]
.text:00000000000542EC                 LDR             X8, [X0,#0x178]
.text:00000000000542F0                 MOV             X0, XZR
.text:00000000000542F4                 LDR             X8, [X8,#0x158]
.text:00000000000542F8                 STR             X8, [X2]
.text:00000000000542FC                 RET
.text:0000000000054300 ; ---------------------------------------------------------------------------
.text:0000000000054300 loc_54300                               ; CODE XREF: JET_GetAppData+8↑j
.text:0000000000054300                 MOV             X0, #0xFFFFFFFFFFFFFFFF
.text:0000000000054304                 STR             XZR, [X2]
.text:0000000000054308                 STR             XZR, [X1]
.text:000000000005430C                 RET
.text:000000000005430C ; } // starts at 542D8
.text:000000000005430C ; End of function JET_GetAppData
.text:0000000000054310 ; =============== S U B R O U T I N E =======================================
.text:0000000000054310 ; Attributes: bp-based frame
.text:0000000000054310                 EXPORT JET_CloseFile
.text:0000000000054310 JET_CloseFile                           ; CODE XREF: .JET_CloseFile+C↓j
.text:0000000000054310                                         ; DATA XREF: LOAD:0000000000001A10↑o ...
.text:0000000000054310 var_10          = -0x10
.text:0000000000054310 var_s0          =  0
.text:0000000000054310 ; __unwind {
.text:0000000000054310                 STR             X19, [SP,#-0x10+var_10]!
.text:0000000000054314                 STP             X29, X30, [SP,#0x10+var_s0]
.text:0000000000054318                 ADD             X29, SP, #0x10
.text:000000000005431C                 LDR             X8, [X0,#0x178]
.text:0000000000054320                 MOV             X19, X0
.text:0000000000054324                 LDR             X1, [X8,#8]
.text:0000000000054328                 CBZ             X1, loc_54360
.text:000000000005432C                 MOV             X0, X19
.text:0000000000054330                 BL              .EAS_CloseFile
.text:0000000000054334                 CBZ             X0, loc_54340
.text:0000000000054338                 CBNZ            W0, loc_543BC
.text:000000000005433C                 B               loc_54360
.text:0000000000054340 ; ---------------------------------------------------------------------------
.text:0000000000054340 loc_54340                               ; CODE XREF: JET_CloseFile+24↑j
.text:0000000000054340                 LDR             X8, [X19,#0x178]
.text:0000000000054344                 STR             XZR, [X8,#8]
.text:0000000000054348                 LDR             X8, [X19,#0x178]
.text:000000000005434C                 STRB            WZR, [X8,#0x1D]
.text:0000000000054350                 LDR             X8, [X19,#0x178]
.text:0000000000054354                 LDRB            W9, [X8,#0x39D]
.text:0000000000054358                 SUB             W9, W9, #1
.text:000000000005435C                 STRB            W9, [X8,#0x39D]
.text:0000000000054360 loc_54360                               ; CODE XREF: JET_CloseFile+18↑j
.text:0000000000054360                                         ; JET_CloseFile+2C↑j
.text:0000000000054360                 LDR             X8, [X19,#0x178]
.text:0000000000054364                 LDR             X1, [X8,#0x20]
.text:0000000000054368                 CBZ             X1, loc_543A0
.text:000000000005436C                 MOV             X0, X19
.text:0000000000054370                 BL              .EAS_CloseFile
.text:0000000000054374                 CBZ             X0, loc_54380
.text:0000000000054378                 CBNZ            W0, loc_543BC
.text:000000000005437C                 B               loc_543A0
.text:0000000000054380 ; ---------------------------------------------------------------------------
.text:0000000000054380 loc_54380                               ; CODE XREF: JET_CloseFile+64↑j
.text:0000000000054380                 LDR             X8, [X19,#0x178]
.text:0000000000054384                 STR             XZR, [X8,#0x20]
.text:0000000000054388                 LDR             X8, [X19,#0x178]
.text:000000000005438C                 STRB            WZR, [X8,#0x35]
.text:0000000000054390                 LDR             X8, [X19,#0x178]
.text:0000000000054394                 LDRB            W9, [X8,#0x39D]
.text:0000000000054398                 SUB             W9, W9, #1
.text:000000000005439C                 STRB            W9, [X8,#0x39D]
.text:00000000000543A0 loc_543A0                               ; CODE XREF: JET_CloseFile+58↑j
.text:00000000000543A0                                         ; JET_CloseFile+6C↑j
.text:00000000000543A0                 LDR             X8, [X19,#0x178]
.text:00000000000543A4                 LDR             X1, [X8,#0x38]
.text:00000000000543A8                 CBZ             X1, loc_543EC
.text:00000000000543AC                 MOV             X0, X19
.text:00000000000543B0                 BL              .EAS_CloseFile
.text:00000000000543B4                 CBZ             X0, loc_543CC
.text:00000000000543B8                 CBZ             W0, loc_543EC
.text:00000000000543BC loc_543BC                               ; CODE XREF: JET_CloseFile+28↑j
.text:00000000000543BC                                         ; JET_CloseFile+68↑j
.text:00000000000543BC                 LSL             X8, X0, #0x20 ; ' '
.text:00000000000543C0                 CBZ             X8, loc_543EC
.text:00000000000543C4                 SXTW            X0, W0
.text:00000000000543C8                 B               loc_54414
.text:00000000000543CC ; ---------------------------------------------------------------------------
.text:00000000000543CC loc_543CC                               ; CODE XREF: JET_CloseFile+A4↑j
.text:00000000000543CC                 LDR             X8, [X19,#0x178]
.text:00000000000543D0                 STR             XZR, [X8,#0x38]
.text:00000000000543D4                 LDR             X8, [X19,#0x178]
.text:00000000000543D8                 STRB            WZR, [X8,#0x4D]
.text:00000000000543DC                 LDR             X8, [X19,#0x178]
.text:00000000000543E0                 LDRB            W9, [X8,#0x39D]
.text:00000000000543E4                 SUB             W9, W9, #1
.text:00000000000543E8                 STRB            W9, [X8,#0x39D]
.text:00000000000543EC loc_543EC                               ; CODE XREF: JET_CloseFile+98↑j
.text:00000000000543EC                                         ; JET_CloseFile+A8↑j ...
.text:00000000000543EC                 LDR             X8, [X19,#0x178]
.text:00000000000543F0                 LDR             X1, [X8]
.text:00000000000543F4                 CBZ             X1, loc_54410
.text:00000000000543F8                 LDR             X0, [X19]
.text:00000000000543FC                 BL              .EAS_HWCloseFile
.text:0000000000054400                 CBNZ            X0, loc_54414
.text:0000000000054404                 LDR             X8, [X19,#0x178]
.text:0000000000054408                 STR             XZR, [X8]
.text:000000000005440C                 B               loc_54414
.text:0000000000054410 ; ---------------------------------------------------------------------------
.text:0000000000054410 loc_54410                               ; CODE XREF: JET_CloseFile+E4↑j
.text:0000000000054410                 MOV             X0, XZR
.text:0000000000054414 loc_54414                               ; CODE XREF: JET_CloseFile+B8↑j
.text:0000000000054414                                         ; JET_CloseFile+F0↑j ...
.text:0000000000054414                 LDP             X29, X30, [SP,#0x10+var_s0]
.text:0000000000054418                 LDR             X19, [SP+0x10+var_10],#0x20
.text:000000000005441C                 RET
.text:000000000005441C ; } // starts at 54310
.text:000000000005441C ; End of function JET_CloseFile
.text:0000000000054420 ; =============== S U B R O U T I N E =======================================
.text:0000000000054420 ; Attributes: bp-based frame
.text:0000000000054420                 EXPORT JET_Init
.text:0000000000054420 JET_Init                                ; DATA XREF: LOAD:0000000000000E58↑o
.text:0000000000054420 var_20          = -0x20
.text:0000000000054420 var_10          = -0x10
.text:0000000000054420 var_s0          =  0
.text:0000000000054420 ; __unwind {
.text:0000000000054420                 STP             X22, X21, [SP,#-0x10+var_20]!
.text:0000000000054424                 STP             X20, X19, [SP,#0x20+var_10]
.text:0000000000054428                 STP             X29, X30, [SP,#0x20+var_s0]
.text:000000000005442C                 ADD             X29, SP, #0x20
.text:0000000000054430                 CBZ             X0, loc_54448
.text:0000000000054434                 LDR             X8, [X0,#0x178]
.text:0000000000054438                 MOV             X20, X0
.text:000000000005443C                 CBZ             X8, loc_54450
.text:0000000000054440                 MOV             X0, #0xFFFFFFFFFFFFFFDA
.text:0000000000054444                 B               loc_544B8
.text:0000000000054448 ; ---------------------------------------------------------------------------
.text:0000000000054448 loc_54448                               ; CODE XREF: JET_Init+10↑j
.text:0000000000054448                 MOV             X0, #0xFFFFFFFFFFFFFFE6
.text:000000000005444C                 B               loc_544B8
.text:0000000000054450 ; ---------------------------------------------------------------------------
.text:0000000000054450 loc_54450                               ; CODE XREF: JET_Init+1C↑j
.text:0000000000054450                 LDR             X0, [X20]
.text:0000000000054454                 MOV             X22, X1
.text:0000000000054458                 MOV             W1, #0x3A8
.text:000000000005445C                 MOV             W19, W2
.text:0000000000054460                 BL              .EAS_HWMalloc
.text:0000000000054464                 CBZ             X0, loc_544B4
.text:0000000000054468                 MOV             W2, #0x3A8
.text:000000000005446C                 MOV             W1, WZR
.text:0000000000054470                 ADRP            X8, #unk_3EA2D@PAGE
.text:0000000000054474                 ADD             X8, X8, #unk_3EA2D@PAGEOFF
.text:0000000000054478                 CMP             X22, #0
.text:000000000005447C                 MOV             X21, X0
.text:0000000000054480                 CSEL            X22, X8, X22, EQ
.text:0000000000054484                 BL              .EAS_HWMemSet
.text:0000000000054488                 CMP             W19, #2
.text:000000000005448C                 STR             X21, [X20,#0x178]
.text:0000000000054490                 MOV             W8, #2
.text:0000000000054494                 STRB            WZR, [X21,#0x39A]
.text:0000000000054498                 CSEL            W8, W19, W8, LT
.text:000000000005449C                 ADD             X0, X21, #0x380
.text:00000000000544A0                 MOV             X1, X22
.text:00000000000544A4                 SXTW            X2, W8
.text:00000000000544A8                 BL              .EAS_HWMemCpy
.text:00000000000544AC                 MOV             X0, XZR
.text:00000000000544B0                 B               loc_544B8
.text:00000000000544B4 ; ---------------------------------------------------------------------------
.text:00000000000544B4 loc_544B4                               ; CODE XREF: JET_Init+44↑j
.text:00000000000544B4                 MOV             X0, #0xFFFFFFFFFFFFFFFD
.text:00000000000544B8 loc_544B8                               ; CODE XREF: JET_Init+24↑j
.text:00000000000544B8                                         ; JET_Init+2C↑j ...
.text:00000000000544B8                 LDP             X29, X30, [SP,#0x20+var_s0]
.text:00000000000544BC                 LDP             X20, X19, [SP,#0x20+var_10]
.text:00000000000544C0                 LDP             X22, X21, [SP+0x20+var_20],#0x30
.text:00000000000544C4                 RET
.text:00000000000544C4 ; } // starts at 54420
.text:00000000000544C4 ; End of function JET_Init
.text:00000000000544C8 ; =============== S U B R O U T I N E =======================================
.text:00000000000544C8 ; Attributes: bp-based frame
.text:00000000000544C8                 EXPORT JET_Shutdown
.text:00000000000544C8 JET_Shutdown                            ; DATA XREF: LOAD:0000000000000E70↑o
.text:00000000000544C8 var_20          = -0x20
.text:00000000000544C8 var_10          = -0x10
.text:00000000000544C8 var_s0          =  0
.text:00000000000544C8 ; __unwind {
.text:00000000000544C8                 STR             X21, [SP,#-0x10+var_20]!
.text:00000000000544CC                 STP             X20, X19, [SP,#0x20+var_10]
.text:00000000000544D0                 STP             X29, X30, [SP,#0x20+var_s0]
.text:00000000000544D4                 ADD             X29, SP, #0x20
.text:00000000000544D8                 MOV             X19, X0
.text:00000000000544DC                 BL              .JET_CloseFile
.text:00000000000544E0                 LDR             X1, [X19,#0x178]
.text:00000000000544E4                 MOV             X20, X0
.text:00000000000544E8                 LDRB            W8, [X1,#0x399]
.text:00000000000544EC                 CBZ             W8, loc_5452C
.text:00000000000544F0                 MOV             W21, #0x2C ; ','
.text:00000000000544F4 loc_544F4                               ; CODE XREF: JET_Shutdown+60↓j
.text:00000000000544F4                 LDR             X8, [X1,X21,LSL#3]
.text:00000000000544F8                 CBZ             X8, loc_54514
.text:00000000000544FC                 LDR             X0, [X19]
.text:0000000000054500                 MOV             X1, X8
.text:0000000000054504                 BL              .EAS_HWFree
.text:0000000000054508                 LDR             X8, [X19,#0x178]
.text:000000000005450C                 STR             XZR, [X8,X21,LSL#3]
.text:0000000000054510                 LDR             X1, [X19,#0x178]
.text:0000000000054514 loc_54514                               ; CODE XREF: JET_Shutdown+30↑j
.text:0000000000054514                 LDRB            W8, [X1,#0x399]
.text:0000000000054518                 ADD             X9, X21, #1
.text:000000000005451C                 SUB             X10, X21, #0x2B ; '+'
.text:0000000000054520                 MOV             X21, X9
.text:0000000000054524                 CMP             X10, X8
.text:0000000000054528                 B.CC            loc_544F4
.text:000000000005452C loc_5452C                               ; CODE XREF: JET_Shutdown+24↑j
.text:000000000005452C                 LDR             X0, [X19]
.text:0000000000054530                 BL              .EAS_HWFree
.text:0000000000054534                 STR             XZR, [X19,#0x178]
.text:0000000000054538                 MOV             X0, X20
.text:000000000005453C                 LDP             X29, X30, [SP,#0x20+var_s0]
.text:0000000000054540                 LDP             X20, X19, [SP,#0x20+var_10]
.text:0000000000054544                 LDR             X21, [SP+0x20+var_20],#0x30
.text:0000000000054548                 RET
.text:0000000000054548 ; } // starts at 544C8
.text:0000000000054548 ; End of function JET_Shutdown
.text:0000000000054548 ; ---------------------------------------------------------------------------
.text:000000000005454C                 ALIGN 0x10
.text:0000000000054550 ; =============== S U B R O U T I N E =======================================
.text:0000000000054550 ; Attributes: bp-based frame
.text:0000000000054550                 EXPORT JET_Status
.text:0000000000054550 JET_Status                              ; DATA XREF: LOAD:0000000000001AA0↑o
.text:0000000000054550 var_20          = -0x20
.text:0000000000054550 var_18          = -0x18
.text:0000000000054550 var_10          = -0x10
.text:0000000000054550 var_s0          =  0
.text:0000000000054550 ; __unwind {
.text:0000000000054550                 SUB             SP, SP, #0x30
.text:0000000000054554                 STP             X20, X19, [SP,#0x20+var_10]
.text:0000000000054558                 STP             X29, X30, [SP,#0x20+var_s0]
.text:000000000005455C                 ADD             X29, SP, #0x20
.text:0000000000054560                 MRS             X20, #3, c13, c0, #2
.text:0000000000054564                 MOV             X19, X1
.text:0000000000054568                 LDR             X8, [X20,#0x28]
.text:000000000005456C                 STR             X8, [SP,#0x20+var_18]
.text:0000000000054570                 MOV             W8, #0x18
.text:0000000000054574                 LDR             X9, [X0,#0x178]
.text:0000000000054578                 LDRB            W10, [X9,#0x39B]
.text:000000000005457C                 NOP
.text:0000000000054580                 MADD            X8, X10, X8, X9
.text:0000000000054584                 LDR             X11, [X8,#8]!
.text:0000000000054588                 CBZ             X11, loc_545A4
.text:000000000005458C                 MOV             W11, #0x18
.text:0000000000054590                 MADD            X9, X10, X11, X9
.text:0000000000054594                 LDRB            W10, [X9,#0x1A]
.text:0000000000054598                 STR             W10, [X19]
.text:000000000005459C                 LDRSH           W9, [X9,#0x18]
.text:00000000000545A0                 B               loc_545B0
.text:00000000000545A4 ; ---------------------------------------------------------------------------
.text:00000000000545A4 loc_545A4                               ; CODE XREF: JET_Status+38↑j
.text:00000000000545A4                 MOV             W10, #0xFFFFFFFF
.text:00000000000545A8                 MOV             W9, WZR
.text:00000000000545AC                 STR             W10, [X19]
.text:00000000000545B0 loc_545B0                               ; CODE XREF: JET_Status+50↑j
.text:00000000000545B0                 STR             W9, [X19,#4]
.text:00000000000545B4                 LDR             X9, [X0,#0x178]
.text:00000000000545B8                 LDRB            W9, [X9,#0x39A]
.text:00000000000545BC                 MVN             W9, W9
.text:00000000000545C0                 AND             W9, W9, #1
.text:00000000000545C4                 STR             W9, [X19,#0xC]
.text:00000000000545C8                 LDR             X9, [X0,#0x178]
.text:00000000000545CC                 LDRB            W9, [X9,#0x39D]
.text:00000000000545D0                 STR             W9, [X19,#8]
.text:00000000000545D4                 LDR             X9, [X0,#0x178]
.text:00000000000545D8                 LDRB            W9, [X9,#0x39B]
.text:00000000000545DC                 STRB            W9, [X19,#0x18]
.text:00000000000545E0                 LDR             X9, [X0,#0x178]
.text:00000000000545E4                 LDRB            W9, [X9,#0x39C]
.text:00000000000545E8                 STRB            W9, [X19,#0x19]
.text:00000000000545EC                 LDR             X1, [X8]
.text:00000000000545F0                 CBZ             X1, loc_5460C
.text:00000000000545F4                 MOV             X2, SP
.text:00000000000545F8                 BL              .EAS_GetLocation
.text:00000000000545FC                 CBNZ            X0, loc_5460C
.text:0000000000054600                 LDR             X8, [SP,#0x20+var_20]
.text:0000000000054604                 CBZ             X8, loc_5460C
.text:0000000000054608                 STR             X8, [X19,#0x10]
.text:000000000005460C loc_5460C                               ; CODE XREF: JET_Status+A0↑j
.text:000000000005460C                                         ; JET_Status+AC↑j ...
.text:000000000005460C                 LDR             X8, [X20,#0x28]
.text:0000000000054610                 LDR             X9, [SP,#0x20+var_18]
.text:0000000000054614                 CMP             X8, X9
.text:0000000000054618                 B.NE            loc_54630
.text:000000000005461C                 LDP             X29, X30, [SP,#0x20+var_s0]
.text:0000000000054620                 LDP             X20, X19, [SP,#0x20+var_10]
.text:0000000000054624                 MOV             X0, XZR
.text:0000000000054628                 ADD             SP, SP, #0x30 ; '0'
.text:000000000005462C                 RET
.text:0000000000054630 ; ---------------------------------------------------------------------------
.text:0000000000054630 loc_54630                               ; CODE XREF: JET_Status+C8↑j
.text:0000000000054630                 BL              .__stack_chk_fail
.text:0000000000054630 ; } // starts at 54550
.text:0000000000054630 ; End of function JET_Status
.text:0000000000054630 ; ---------------------------------------------------------------------------
.text:0000000000054634                 ALIGN 8
.text:0000000000054638 ; =============== S U B R O U T I N E =======================================
.text:0000000000054638                 EXPORT JET_GetEvent
.text:0000000000054638 JET_GetEvent                            ; DATA XREF: LOAD:00000000000018A8↑o
.text:0000000000054638 ; __unwind {
.text:0000000000054638                 LDR             X9, [X0,#0x178]
.text:000000000005463C                 LDRB            W8, [X9,#0x3A1]
.text:0000000000054640                 LDRB            W10, [X9,#0x3A0]
.text:0000000000054644                 CMP             W10, W8
.text:0000000000054648                 B.NE            loc_54654
.text:000000000005464C                 MOV             W0, WZR
.text:0000000000054650                 RET
.text:0000000000054654 ; ---------------------------------------------------------------------------
.text:0000000000054654 loc_54654                               ; CODE XREF: JET_GetEvent+10↑j
.text:0000000000054654                 ADD             X8, X9, X10,LSL#3
.text:0000000000054658                 ADD             W11, W10, #1
.text:000000000005465C                 AND             W11, W11, #0xFF
.text:0000000000054660                 CMP             W11, #0x20 ; ' '
.text:0000000000054664                 LDR             X8, [X8,#0x280]
.text:0000000000054668                 CSINC           W10, WZR, W10, EQ
.text:000000000005466C                 STRB            W10, [X9,#0x3A0]
.text:0000000000054670                 CBZ             X1, loc_54678
.text:0000000000054674                 STR             X8, [X1]
.text:0000000000054678 loc_54678                               ; CODE XREF: JET_GetEvent+38↑j
.text:0000000000054678                 CBZ             X2, loc_546AC
.text:000000000005467C                 LSR             X9, X8, #0x18
.text:0000000000054680                 UBFX            W10, W8, #0x12, #6
.text:0000000000054684                 UBFX            W11, W8, #0xE, #4
.text:0000000000054688                 STRB            W9, [X2]
.text:000000000005468C                 UBFX            W12, W8, #7, #7
.text:0000000000054690                 STRB            W10, [X2,#2]
.text:0000000000054694                 AND             W8, W8, #0x7F
.text:0000000000054698                 STRB            W11, [X2,#1]
.text:000000000005469C                 MOV             W0, #1
.text:00000000000546A0                 STRB            W12, [X2,#3]
.text:00000000000546A4                 STRB            W8, [X2,#4]
.text:00000000000546A8                 RET
.text:00000000000546AC ; ---------------------------------------------------------------------------
.text:00000000000546AC loc_546AC                               ; CODE XREF: JET_GetEvent:loc_54678↑j
.text:00000000000546AC                 MOV             W0, #1
.text:00000000000546B0                 RET
.text:00000000000546B0 ; } // starts at 54638
.text:00000000000546B0 ; End of function JET_GetEvent
.text:00000000000546B0 ; ---------------------------------------------------------------------------
.text:00000000000546B4                 ALIGN 8
.text:00000000000546B8 ; =============== S U B R O U T I N E =======================================
.text:00000000000546B8 ; Attributes: bp-based frame
.text:00000000000546B8                 EXPORT JET_QueueSegment
.text:00000000000546B8 JET_QueueSegment                        ; DATA XREF: LOAD:0000000000000678↑o
.text:00000000000546B8 var_30          = -0x30
.text:00000000000546B8 var_28          = -0x28
.text:00000000000546B8 var_20          = -0x20
.text:00000000000546B8 var_10          = -0x10
.text:00000000000546B8 var_s0          =  0
.text:00000000000546B8 ; __unwind {
.text:00000000000546B8                 SUB             SP, SP, #0x40
.text:00000000000546BC                 STR             X21, [SP,#0x30+var_20]
.text:00000000000546C0                 STP             X20, X19, [SP,#0x30+var_10]
.text:00000000000546C4                 STP             X29, X30, [SP,#0x30+var_s0]
.text:00000000000546C8                 ADD             X29, SP, #0x30
.text:00000000000546CC                 MRS             X20, #3, c13, c0, #2
.text:00000000000546D0                 LDR             X8, [X20,#0x28]
.text:00000000000546D4                 STR             X8, [SP,#0x30+var_28]
.text:00000000000546D8                 LDR             X9, [X0,#0x178]
.text:00000000000546DC                 LDRB            W8, [X9,#0x398]
.text:00000000000546E0                 CMP             W8, W1
.text:00000000000546E4                 B.LE            loc_54710
.text:00000000000546E8                 LDRB            W8, [X9,#0x399]
.text:00000000000546EC                 CMP             W8, W2
.text:00000000000546F0                 B.LE            loc_54710
.text:00000000000546F4                 LDRB            W10, [X9,#0x39C]
.text:00000000000546F8                 MOV             W8, #0x18
.text:00000000000546FC                 MADD            X8, X10, X8, X9
.text:0000000000054700                 LDR             X11, [X8,#8]!
.text:0000000000054704                 CBZ             X11, loc_54738
.text:0000000000054708                 MOV             X0, #0xFFFFFFFFFFFFFFDC
.text:000000000005470C                 B               loc_54714
.text:0000000000054710 ; ---------------------------------------------------------------------------
.text:0000000000054710 loc_54710                               ; CODE XREF: JET_QueueSegment+2C↑j
.text:0000000000054710                                         ; JET_QueueSegment+38↑j
.text:0000000000054710                 MOV             X0, #0xFFFFFFFFFFFFFFF3
.text:0000000000054714 loc_54714                               ; CODE XREF: JET_QueueSegment+54↑j
.text:0000000000054714                                         ; JET_QueueSegment+BC↓j ...
.text:0000000000054714                 LDR             X8, [X20,#0x28]
.text:0000000000054718                 LDR             X9, [SP,#0x30+var_28]
.text:000000000005471C                 CMP             X8, X9
.text:0000000000054720                 B.NE            loc_547F0
.text:0000000000054724                 LDP             X29, X30, [SP,#0x30+var_s0]
.text:0000000000054728                 LDP             X20, X19, [SP,#0x30+var_10]
.text:000000000005472C                 LDR             X21, [SP,#0x30+var_20]
.text:0000000000054730                 ADD             SP, SP, #0x40 ; '@'
.text:0000000000054734                 RET
.text:0000000000054738 ; ---------------------------------------------------------------------------
.text:0000000000054738 loc_54738                               ; CODE XREF: JET_QueueSegment+4C↑j
.text:0000000000054738                 MOV             W11, #0x18
.text:000000000005473C                 MOV             X19, X0
.text:0000000000054740                 MADD            X21, X10, X11, X9
.text:0000000000054744                 STRB            WZR, [X21,#0x1D]!
.text:0000000000054748                 STURB           W6, [X21,#-3]
.text:000000000005474C                 STURH           W3, [X21,#-5]
.text:0000000000054750                 MOV             X3, X8
.text:0000000000054754                 STURB           W4, [X21,#-2]
.text:0000000000054758                 STURB           W2, [X21,#-1]
.text:000000000005475C                 STUR            X5, [X21,#-0xD]
.text:0000000000054760                 LDR             X9, [X0,#0x178]
.text:0000000000054764                 ADD             X10, X9, W1,SXTW#3
.text:0000000000054768                 LDR             X1, [X9]
.text:000000000005476C                 LDR             X2, [X10,#0x50]
.text:0000000000054770                 BL              .EAS_OpenJETStream
.text:0000000000054774                 CBNZ            X0, loc_54714
.text:0000000000054778                 MOV             W8, #1
.text:000000000005477C                 STRB            W8, [X21]
.text:0000000000054780                 LDR             X8, [X19,#0x178]
.text:0000000000054784                 LDRB            W9, [X8,#0x39D]
.text:0000000000054788                 ADD             W9, W9, #1
.text:000000000005478C                 AND             W10, W9, #0xFF
.text:0000000000054790                 CMP             W10, #2
.text:0000000000054794                 STRB            W9, [X8,#0x39D]
.text:0000000000054798                 B.HI            loc_547B0
.text:000000000005479C                 LDR             X8, [X19,#0x178]
.text:00000000000547A0                 MOV             X0, X19
.text:00000000000547A4                 LDRB            W1, [X8,#0x39C]
.text:00000000000547A8                 BL              sub_547F8
.text:00000000000547AC                 CBNZ            X0, loc_54714
.text:00000000000547B0 loc_547B0                               ; CODE XREF: JET_QueueSegment+E0↑j
.text:00000000000547B0                 LDR             X8, [X19,#0x178]
.text:00000000000547B4                 MOV             X2, SP
.text:00000000000547B8                 LDR             X0, [X19]
.text:00000000000547BC                 LDR             X1, [X8]
.text:00000000000547C0                 BL              .EAS_HWDupHandle
.text:00000000000547C4                 CBNZ            X0, loc_54714
.text:00000000000547C8                 LDR             X8, [SP,#0x30+var_30]
.text:00000000000547CC                 LDR             X9, [X19,#0x178]
.text:00000000000547D0                 STR             X8, [X9]
.text:00000000000547D4                 LDR             X8, [X19,#0x178]
.text:00000000000547D8                 LDRB            W9, [X8,#0x39C]
.text:00000000000547DC                 ADD             W10, W9, #1
.text:00000000000547E0                 CMP             W10, #3
.text:00000000000547E4                 CSINC           W9, WZR, W9, EQ
.text:00000000000547E8                 STRB            W9, [X8,#0x39C]
.text:00000000000547EC                 B               loc_54714
.text:00000000000547F0 ; ---------------------------------------------------------------------------
.text:00000000000547F0 loc_547F0                               ; CODE XREF: JET_QueueSegment+68↑j
.text:00000000000547F0                 BL              .__stack_chk_fail
.text:00000000000547F0 ; } // starts at 546B8
.text:00000000000547F0 ; End of function JET_QueueSegment
.text:00000000000547F0 ; ---------------------------------------------------------------------------
.text:00000000000547F4                 ALIGN 8
.text:00000000000547F8 ; =============== S U B R O U T I N E =======================================
.text:00000000000547F8 ; Attributes: bp-based frame
.text:00000000000547F8 sub_547F8                               ; CODE XREF: JET_QueueSegment+F0↑p
.text:00000000000547F8                                         ; JET_Process+124↓p
.text:00000000000547F8 var_20          = -0x20
.text:00000000000547F8 var_10          = -0x10
.text:00000000000547F8 var_s0          =  0
.text:00000000000547F8 ; __unwind {
.text:00000000000547F8                 STP             X22, X21, [SP,#-0x10+var_20]!
.text:00000000000547FC                 STP             X20, X19, [SP,#0x20+var_10]
.text:0000000000054800                 STP             X29, X30, [SP,#0x20+var_s0]
.text:0000000000054804                 ADD             X29, SP, #0x20
.text:0000000000054808                 LDR             X22, [X0,#0x178]
.text:000000000005480C                 MOV             W8, #0x18
.text:0000000000054810                 MOV             X20, X1
.text:0000000000054814                 MOV             X19, X0
.text:0000000000054818                 MADD            X21, X1, X8, X22
.text:000000000005481C                 LDR             X1, [X21,#8]!
.text:0000000000054820                 BL              .EAS_Prepare
.text:0000000000054824                 CBNZ            X0, loc_54860
.text:0000000000054828                 LDR             X1, [X21]
.text:000000000005482C                 MOV             X0, X19
.text:0000000000054830                 BL              .EAS_Pause
.text:0000000000054834                 CBNZ            X0, loc_54860
.text:0000000000054838                 MOV             W8, #0x18
.text:000000000005483C                 LDR             X1, [X21]
.text:0000000000054840                 MOV             W9, #2
.text:0000000000054844                 MADD            X8, X20, X8, X22
.text:0000000000054848                 MOV             X0, X19
.text:000000000005484C                 MOV             W2, #0xC
.text:0000000000054850                 MOV             X3, X20
.text:0000000000054854                 STRB            W9, [X8,#0x1D]
.text:0000000000054858                 BL              .EAS_IntSetStrmParam
.text:000000000005485C                 CBZ             X0, loc_54870
.text:0000000000054860 loc_54860                               ; CODE XREF: sub_547F8+2C↑j
.text:0000000000054860                                         ; sub_547F8+3C↑j ...
.text:0000000000054860                 LDP             X29, X30, [SP,#0x20+var_s0]
.text:0000000000054864                 LDP             X20, X19, [SP,#0x20+var_10]
.text:0000000000054868                 LDP             X22, X21, [SP+0x20+var_20],#0x30
.text:000000000005486C                 RET
.text:0000000000054870 ; ---------------------------------------------------------------------------
.text:0000000000054870 loc_54870                               ; CODE XREF: sub_547F8+64↑j
.text:0000000000054870                 MOV             W8, #0x18
.text:0000000000054874                 MADD            X8, X20, X8, X22
.text:0000000000054878                 LDRSB           X8, [X8,#0x1C]
.text:000000000005487C                 TBNZ            X8, #0x3F, loc_548A0 ; '?'
.text:0000000000054880                 LDR             X9, [X19,#0x178]
.text:0000000000054884                 MOV             X0, X19
.text:0000000000054888                 LDR             X1, [X21]
.text:000000000005488C                 MOV             W2, #6
.text:0000000000054890                 ADD             X8, X9, X8,LSL#3
.text:0000000000054894                 LDR             X3, [X8,#0x160]
.text:0000000000054898                 BL              .EAS_IntSetStrmParam
.text:000000000005489C                 CBNZ            X0, loc_54860
.text:00000000000548A0 loc_548A0                               ; CODE XREF: sub_547F8+84↑j
.text:00000000000548A0                 MOV             W8, #0x18
.text:00000000000548A4                 MADD            X8, X20, X8, X22
.text:00000000000548A8                 LDRSB           X2, [X8,#0x1B]
.text:00000000000548AC                 CBZ             X2, loc_548C0
.text:00000000000548B0                 LDR             X1, [X21]
.text:00000000000548B4                 MOV             X0, X19
.text:00000000000548B8                 BL              .EAS_SetTransposition
.text:00000000000548BC                 CBNZ            X0, loc_54860
.text:00000000000548C0 loc_548C0                               ; CODE XREF: sub_547F8+B4↑j
.text:00000000000548C0                 MOV             X0, XZR
.text:00000000000548C4                 B               loc_54860
.text:00000000000548C4 ; } // starts at 547F8
.text:00000000000548C4 ; End of function sub_547F8
.text:00000000000548C8 ; =============== S U B R O U T I N E =======================================
.text:00000000000548C8 ; Attributes: bp-based frame
.text:00000000000548C8                 EXPORT JET_Play
.text:00000000000548C8 JET_Play                                ; DATA XREF: LOAD:stru_4E0↑o
.text:00000000000548C8 var_10          = -0x10
.text:00000000000548C8 var_s0          =  0
.text:00000000000548C8 ; __unwind {
.text:00000000000548C8                 STP             X20, X19, [SP,#-0x10+var_10]!
.text:00000000000548CC                 STP             X29, X30, [SP,#0x10+var_s0]
.text:00000000000548D0                 ADD             X29, SP, #0x10
.text:00000000000548D4                 LDR             X20, [X0,#0x178]
.text:00000000000548D8                 LDRB            W8, [X20,#0x39A]
.text:00000000000548DC                 TBNZ            W8, #0, loc_54914
.text:00000000000548E0                 LDRB            W8, [X20,#0x39B]
.text:00000000000548E4                 MOV             X19, X0
.text:00000000000548E8                 LDRB            W9, [X20,#0x1D]
.text:00000000000548EC                 CMP             W8, #0
.text:00000000000548F0                 CSET            W10, EQ
.text:00000000000548F4                 CMP             W9, #2
.text:00000000000548F8                 CSET            W11, EQ
.text:00000000000548FC                 AND             W10, W10, W11
.text:0000000000054900                 TBNZ            W10, #0, loc_5491C
.text:0000000000054904                 CMP             W9, #4
.text:0000000000054908                 B.EQ            loc_5491C
.text:000000000005490C                 MOV             W9, WZR
.text:0000000000054910                 B               loc_54964
.text:0000000000054914 ; ---------------------------------------------------------------------------
.text:0000000000054914 loc_54914                               ; CODE XREF: JET_Play+14↑j
.text:0000000000054914                 MOV             X0, #0xFFFFFFFFFFFFFFE1
.text:0000000000054918                 B               loc_54A50
.text:000000000005491C ; ---------------------------------------------------------------------------
.text:000000000005491C loc_5491C                               ; CODE XREF: JET_Play+38↑j
.text:000000000005491C                                         ; JET_Play+40↑j
.text:000000000005491C                 LDR             X1, [X20,#8]
.text:0000000000054920                 CBZ             X1, loc_54958
.text:0000000000054924                 MOV             X0, X19
.text:0000000000054928                 BL              .EAS_Resume
.text:000000000005492C                 LDR             X8, [X19,#0x178]
.text:0000000000054930                 MOV             W9, #3
.text:0000000000054934                 STRB            W9, [X8,#0x1D]
.text:0000000000054938                 CBNZ            X0, loc_54A50
.text:000000000005493C                 LDR             X3, [X20,#0x10]
.text:0000000000054940                 CBZ             X3, loc_54958
.text:0000000000054944                 LDR             X1, [X20,#8]
.text:0000000000054948                 MOV             W2, #0xD
.text:000000000005494C                 MOV             X0, X19
.text:0000000000054950                 BL              .EAS_IntSetStrmParam
.text:0000000000054954                 CBNZ            X0, loc_54A50
.text:0000000000054958 loc_54958                               ; CODE XREF: JET_Play+58↑j
.text:0000000000054958                                         ; JET_Play+78↑j
.text:0000000000054958                 LDR             X20, [X19,#0x178]
.text:000000000005495C                 MOV             W9, #1
.text:0000000000054960                 LDRB            W8, [X20,#0x39B]
.text:0000000000054964 loc_54964                               ; CODE XREF: JET_Play+48↑j
.text:0000000000054964                 LDRB            W10, [X20,#0x35]
.text:0000000000054968                 CMP             W8, #1
.text:000000000005496C                 CSET            W11, EQ
.text:0000000000054970                 CMP             W10, #2
.text:0000000000054974                 CSET            W12, EQ
.text:0000000000054978                 AND             W11, W11, W12
.text:000000000005497C                 TBNZ            W11, #0, loc_54988
.text:0000000000054980                 CMP             W10, #4
.text:0000000000054984                 B.NE            loc_549D0
.text:0000000000054988 loc_54988                               ; CODE XREF: JET_Play+B4↑j
.text:0000000000054988                 LDR             X1, [X20,#0x20]
.text:000000000005498C                 CBZ             X1, loc_549C4
.text:0000000000054990                 MOV             X0, X19
.text:0000000000054994                 BL              .EAS_Resume
.text:0000000000054998                 LDR             X8, [X19,#0x178]
.text:000000000005499C                 MOV             W9, #3
.text:00000000000549A0                 STRB            W9, [X8,#0x35]
.text:00000000000549A4                 CBNZ            X0, loc_54A50
.text:00000000000549A8                 LDR             X3, [X20,#0x28]
.text:00000000000549AC                 CBZ             X3, loc_549C4
.text:00000000000549B0                 LDR             X1, [X20,#0x20]
.text:00000000000549B4                 MOV             W2, #0xD
.text:00000000000549B8                 MOV             X0, X19
.text:00000000000549BC                 BL              .EAS_IntSetStrmParam
.text:00000000000549C0                 CBNZ            X0, loc_54A50
.text:00000000000549C4 loc_549C4                               ; CODE XREF: JET_Play+C4↑j
.text:00000000000549C4                                         ; JET_Play+E4↑j
.text:00000000000549C4                 LDR             X20, [X19,#0x178]
.text:00000000000549C8                 MOV             W9, #1
.text:00000000000549CC                 LDRB            W8, [X20,#0x39B]
.text:00000000000549D0 loc_549D0                               ; CODE XREF: JET_Play+BC↑j
.text:00000000000549D0                 LDRB            W10, [X20,#0x4D]
.text:00000000000549D4                 CMP             W8, #2
.text:00000000000549D8                 CSET            W8, EQ
.text:00000000000549DC                 CMP             W10, #2
.text:00000000000549E0                 CSET            W11, EQ
.text:00000000000549E4                 AND             W8, W8, W11
.text:00000000000549E8                 TBNZ            W8, #0, loc_54A00
.text:00000000000549EC                 CMP             W10, #4
.text:00000000000549F0                 B.EQ            loc_54A00
.text:00000000000549F4                 CBNZ            W9, loc_54A3C
.text:00000000000549F8                 MOV             X0, #0xFFFFFFFFFFFFFFDB
.text:00000000000549FC                 B               loc_54A50
.text:0000000000054A00 ; ---------------------------------------------------------------------------
.text:0000000000054A00 loc_54A00                               ; CODE XREF: JET_Play+120↑j
.text:0000000000054A00                                         ; JET_Play+128↑j
.text:0000000000054A00                 LDR             X1, [X20,#0x38]
.text:0000000000054A04                 CBZ             X1, loc_54A3C
.text:0000000000054A08                 MOV             X0, X19
.text:0000000000054A0C                 BL              .EAS_Resume
.text:0000000000054A10                 LDR             X8, [X19,#0x178]
.text:0000000000054A14                 MOV             W9, #3
.text:0000000000054A18                 STRB            W9, [X8,#0x4D]
.text:0000000000054A1C                 CBNZ            X0, loc_54A50
.text:0000000000054A20                 LDR             X3, [X20,#0x40]
.text:0000000000054A24                 CBZ             X3, loc_54A3C
.text:0000000000054A28                 LDR             X1, [X20,#0x38]
.text:0000000000054A2C                 MOV             W2, #0xD
.text:0000000000054A30                 MOV             X0, X19
.text:0000000000054A34                 BL              .EAS_IntSetStrmParam
.text:0000000000054A38                 CBNZ            X0, loc_54A50
.text:0000000000054A3C loc_54A3C                               ; CODE XREF: JET_Play+12C↑j
.text:0000000000054A3C                                         ; JET_Play+13C↑j ...
.text:0000000000054A3C                 LDR             X8, [X19,#0x178]
.text:0000000000054A40                 MOV             X0, XZR
.text:0000000000054A44                 LDRB            W9, [X8,#0x39A]
.text:0000000000054A48                 ORR             W9, W9, #1
.text:0000000000054A4C                 STRB            W9, [X8,#0x39A]
.text:0000000000054A50 loc_54A50                               ; CODE XREF: JET_Play+50↑j
.text:0000000000054A50                                         ; JET_Play+70↑j ...
.text:0000000000054A50                 LDP             X29, X30, [SP,#0x10+var_s0]
.text:0000000000054A54                 LDP             X20, X19, [SP+0x10+var_10],#0x20
.text:0000000000054A58                 RET
.text:0000000000054A58 ; } // starts at 548C8
.text:0000000000054A58 ; End of function JET_Play
.text:0000000000054A58 ; ---------------------------------------------------------------------------
.text:0000000000054A5C                 ALIGN 0x20
.text:0000000000054A60 ; =============== S U B R O U T I N E =======================================
.text:0000000000054A60 ; Attributes: bp-based frame
.text:0000000000054A60                 EXPORT JET_Pause
.text:0000000000054A60 JET_Pause                               ; DATA XREF: LOAD:0000000000001B48↑o
.text:0000000000054A60 var_10          = -0x10
.text:0000000000054A60 var_s0          =  0
.text:0000000000054A60 ; __unwind {
.text:0000000000054A60                 STR             X19, [SP,#-0x10+var_10]!
.text:0000000000054A64                 STP             X29, X30, [SP,#0x10+var_s0]
.text:0000000000054A68                 ADD             X29, SP, #0x10
.text:0000000000054A6C                 LDR             X8, [X0,#0x178]
.text:0000000000054A70                 LDRB            W9, [X8,#0x39A]
.text:0000000000054A74                 TBNZ            W9, #0, loc_54A80
.text:0000000000054A78                 MOV             X0, #0xFFFFFFFFFFFFFFE1
.text:0000000000054A7C                 B               loc_54B8C
.text:0000000000054A80 ; ---------------------------------------------------------------------------
.text:0000000000054A80 loc_54A80                               ; CODE XREF: JET_Pause+14↑j
.text:0000000000054A80                 LDRB            W9, [X8,#0x1D]
.text:0000000000054A84                 MOV             X19, X0
.text:0000000000054A88                 CMP             W9, #3
.text:0000000000054A8C                 B.NE            loc_54AD4
.text:0000000000054A90                 LDRB            W9, [X8,#0x39B]
.text:0000000000054A94                 MOV             W10, #0x18
.text:0000000000054A98                 MOV             X0, X19
.text:0000000000054A9C                 MADD            X8, X9, X10, X8
.text:0000000000054AA0                 LDR             X1, [X8,#8]
.text:0000000000054AA4                 BL              .EAS_Pause
.text:0000000000054AA8                 CBNZ            X0, loc_54B8C
.text:0000000000054AAC                 LDR             X8, [X19,#0x178]
.text:0000000000054AB0                 MOV             W10, #0x18
.text:0000000000054AB4                 LDRB            W9, [X8,#0x39B]
.text:0000000000054AB8                 NOP
.text:0000000000054ABC                 MADD            X8, X9, X10, X8
.text:0000000000054AC0                 MOV             W9, #4
.text:0000000000054AC4                 STRB            W9, [X8,#0x1D]
.text:0000000000054AC8                 MOV             W9, #1
.text:0000000000054ACC                 LDR             X8, [X19,#0x178]
.text:0000000000054AD0                 B               loc_54AD8
.text:0000000000054AD4 ; ---------------------------------------------------------------------------
.text:0000000000054AD4 loc_54AD4                               ; CODE XREF: JET_Pause+2C↑j
.text:0000000000054AD4                 MOV             W9, WZR
.text:0000000000054AD8 loc_54AD8                               ; CODE XREF: JET_Pause+70↑j
.text:0000000000054AD8                 LDRB            W10, [X8,#0x35]
.text:0000000000054ADC                 CMP             W10, #3
.text:0000000000054AE0                 B.NE            loc_54B24
.text:0000000000054AE4                 LDRB            W9, [X8,#0x39B]
.text:0000000000054AE8                 MOV             W10, #0x18
.text:0000000000054AEC                 MOV             X0, X19
.text:0000000000054AF0                 MADD            X8, X9, X10, X8
.text:0000000000054AF4                 LDR             X1, [X8,#8]
.text:0000000000054AF8                 BL              .EAS_Pause
.text:0000000000054AFC                 CBNZ            X0, loc_54B8C
.text:0000000000054B00                 LDR             X8, [X19,#0x178]
.text:0000000000054B04                 MOV             W10, #0x18
.text:0000000000054B08                 LDRB            W9, [X8,#0x39B]
.text:0000000000054B0C                 NOP
.text:0000000000054B10                 MADD            X8, X9, X10, X8
.text:0000000000054B14                 MOV             W9, #4
.text:0000000000054B18                 STRB            W9, [X8,#0x1D]
.text:0000000000054B1C                 MOV             W9, #1
.text:0000000000054B20                 LDR             X8, [X19,#0x178]
.text:0000000000054B24 loc_54B24                               ; CODE XREF: JET_Pause+80↑j
.text:0000000000054B24                 LDRB            W10, [X8,#0x4D]
.text:0000000000054B28                 CMP             W10, #3
.text:0000000000054B2C                 B.NE            loc_54B6C
.text:0000000000054B30                 LDRB            W9, [X8,#0x39B]
.text:0000000000054B34                 MOV             W10, #0x18
.text:0000000000054B38                 MOV             X0, X19
.text:0000000000054B3C                 MADD            X8, X9, X10, X8
.text:0000000000054B40                 LDR             X1, [X8,#8]
.text:0000000000054B44                 BL              .EAS_Pause
.text:0000000000054B48                 CBNZ            X0, loc_54B8C
.text:0000000000054B4C                 LDR             X8, [X19,#0x178]
.text:0000000000054B50                 MOV             W10, #0x18
.text:0000000000054B54                 LDRB            W9, [X8,#0x39B]
.text:0000000000054B58                 NOP
.text:0000000000054B5C                 MADD            X8, X9, X10, X8
.text:0000000000054B60                 MOV             W9, #4
.text:0000000000054B64                 STRB            W9, [X8,#0x1D]
.text:0000000000054B68                 B               loc_54B70
.text:0000000000054B6C ; ---------------------------------------------------------------------------
.text:0000000000054B6C loc_54B6C                               ; CODE XREF: JET_Pause+CC↑j
.text:0000000000054B6C                 CBZ             W9, loc_54B88
.text:0000000000054B70 loc_54B70                               ; CODE XREF: JET_Pause+108↑j
.text:0000000000054B70                 LDR             X8, [X19,#0x178]
.text:0000000000054B74                 MOV             X0, XZR
.text:0000000000054B78                 LDRB            W9, [X8,#0x39A]
.text:0000000000054B7C                 AND             W9, W9, #0xFE
.text:0000000000054B80                 STRB            W9, [X8,#0x39A]
.text:0000000000054B84                 B               loc_54B8C
.text:0000000000054B88 ; ---------------------------------------------------------------------------
.text:0000000000054B88 loc_54B88                               ; CODE XREF: JET_Pause:loc_54B6C↑j
.text:0000000000054B88                 MOV             X0, #0xFFFFFFFFFFFFFFDB
.text:0000000000054B8C loc_54B8C                               ; CODE XREF: JET_Pause+1C↑j
.text:0000000000054B8C                                         ; JET_Pause+48↑j ...
.text:0000000000054B8C                 LDP             X29, X30, [SP,#0x10+var_s0]
.text:0000000000054B90                 LDR             X19, [SP+0x10+var_10],#0x20
.text:0000000000054B94                 RET
.text:0000000000054B94 ; } // starts at 54A60
.text:0000000000054B94 ; End of function JET_Pause
.text:0000000000054B98 ; =============== S U B R O U T I N E =======================================
.text:0000000000054B98                 EXPORT JET_SetMuteFlags
.text:0000000000054B98 JET_SetMuteFlags                        ; DATA XREF: LOAD:0000000000001B60↑o
.text:0000000000054B98 ; __unwind {
.text:0000000000054B98                 LDR             X8, [X0,#0x178]
.text:0000000000054B9C                 MOV             W10, #0x18
.text:0000000000054BA0                 MOV             X3, X1
.text:0000000000054BA4                 LDRB            W9, [X8,#0x39B]
.text:0000000000054BA8                 NOP
.text:0000000000054BAC                 MADD            X10, X9, X10, X8
.text:0000000000054BB0                 CBZ             W2, loc_54BDC
.text:0000000000054BB4                 LDRB            W10, [X10,#0x1D]
.text:0000000000054BB8                 CBZ             W10, loc_54BF8
.text:0000000000054BBC                 MOV             W10, #0x18
.text:0000000000054BC0                 MOV             X0, XZR
.text:0000000000054BC4                 MADD            X8, X9, X10, X8
.text:0000000000054BC8                 LDRB            W9, [X8,#0x1E]
.text:0000000000054BCC                 STR             X3, [X8,#0x10]
.text:0000000000054BD0                 ORR             W9, W9, #1
.text:0000000000054BD4                 STRB            W9, [X8,#0x1E]
.text:0000000000054BD8                 RET
.text:0000000000054BDC ; ---------------------------------------------------------------------------
.text:0000000000054BDC loc_54BDC                               ; CODE XREF: JET_SetMuteFlags+18↑j
.text:0000000000054BDC                 LDR             X1, [X10,#8]
.text:0000000000054BE0                 CBZ             X1, loc_54C00
.text:0000000000054BE4                 MOV             W10, #0x18
.text:0000000000054BE8                 MOV             W2, #0xD
.text:0000000000054BEC                 MADD            X8, X9, X10, X8
.text:0000000000054BF0                 STR             X3, [X8,#0x10]
.text:0000000000054BF4                 B               .EAS_IntSetStrmParam
.text:0000000000054BF8 ; ---------------------------------------------------------------------------
.text:0000000000054BF8 loc_54BF8                               ; CODE XREF: JET_SetMuteFlags+20↑j
.text:0000000000054BF8                 MOV             X0, #0xFFFFFFFFFFFFFFDB
.text:0000000000054BFC                 RET
.text:0000000000054C00 ; ---------------------------------------------------------------------------
.text:0000000000054C00 loc_54C00                               ; CODE XREF: JET_SetMuteFlags+48↑j
.text:0000000000054C00                 MOV             X0, #0xFFFFFFFFFFFFFFDB
.text:0000000000054C04                 RET
.text:0000000000054C04 ; } // starts at 54B98
.text:0000000000054C04 ; End of function JET_SetMuteFlags
.text:0000000000054C08 ; =============== S U B R O U T I N E =======================================
.text:0000000000054C08                 EXPORT JET_SetMuteFlag
.text:0000000000054C08 JET_SetMuteFlag                         ; DATA XREF: LOAD:00000000000016F8↑o
.text:0000000000054C08 ; __unwind {
.text:0000000000054C08                 CMP             W1, #0x1F
.text:0000000000054C0C                 B.LS            loc_54C18
.text:0000000000054C10                 MOV             X0, #0xFFFFFFFFFFFFFFF3
.text:0000000000054C14                 RET
.text:0000000000054C18 ; ---------------------------------------------------------------------------
.text:0000000000054C18 loc_54C18                               ; CODE XREF: JET_SetMuteFlag+4↑j
.text:0000000000054C18                 LDR             X8, [X0,#0x178]
.text:0000000000054C1C                 MOV             W11, #0x18
.text:0000000000054C20                 MOV             W10, #1
.text:0000000000054C24                 LSL             W10, W10, W1
.text:0000000000054C28                 SXTW            X10, W10
.text:0000000000054C2C                 LDRB            W9, [X8,#0x39B]
.text:0000000000054C30                 NOP
.text:0000000000054C34                 MADD            X11, X9, X11, X8
.text:0000000000054C38                 CBZ             W3, loc_54C5C
.text:0000000000054C3C                 LDRB            W11, [X11,#0x1D]
.text:0000000000054C40                 CBZ             W11, loc_54C7C
.text:0000000000054C44                 MOV             W11, #0x18
.text:0000000000054C48                 MADD            X11, X9, X11, X8
.text:0000000000054C4C                 CBZ             W2, loc_54C84
.text:0000000000054C50                 LDR             X12, [X11,#0x10]
.text:0000000000054C54                 ORR             X10, X12, X10
.text:0000000000054C58                 B               loc_54C8C
.text:0000000000054C5C ; ---------------------------------------------------------------------------
.text:0000000000054C5C loc_54C5C                               ; CODE XREF: JET_SetMuteFlag+30↑j
.text:0000000000054C5C                 LDR             X1, [X11,#8]
.text:0000000000054C60                 CBZ             X1, loc_54CAC
.text:0000000000054C64                 MOV             W11, #0x18
.text:0000000000054C68                 MADD            X8, X9, X11, X8
.text:0000000000054C6C                 CBZ             W2, loc_54CB4
.text:0000000000054C70                 LDR             X9, [X8,#0x10]
.text:0000000000054C74                 ORR             X3, X9, X10
.text:0000000000054C78                 B               loc_54CBC
.text:0000000000054C7C ; ---------------------------------------------------------------------------
.text:0000000000054C7C loc_54C7C                               ; CODE XREF: JET_SetMuteFlag+38↑j
.text:0000000000054C7C                 MOV             X0, #0xFFFFFFFFFFFFFFDB
.text:0000000000054C80                 RET
.text:0000000000054C84 ; ---------------------------------------------------------------------------
.text:0000000000054C84 loc_54C84                               ; CODE XREF: JET_SetMuteFlag+44↑j
.text:0000000000054C84                 LDR             X12, [X11,#0x10]
.text:0000000000054C88                 BIC             X10, X12, X10
.text:0000000000054C8C loc_54C8C                               ; CODE XREF: JET_SetMuteFlag+50↑j
.text:0000000000054C8C                 STR             X10, [X11,#0x10]
.text:0000000000054C90                 MOV             W10, #0x18
.text:0000000000054C94                 MOV             X0, XZR
.text:0000000000054C98                 MADD            X8, X9, X10, X8
.text:0000000000054C9C                 LDRB            W9, [X8,#0x1E]
.text:0000000000054CA0                 ORR             W9, W9, #1
.text:0000000000054CA4                 STRB            W9, [X8,#0x1E]
.text:0000000000054CA8                 RET
.text:0000000000054CAC ; ---------------------------------------------------------------------------
.text:0000000000054CAC loc_54CAC                               ; CODE XREF: JET_SetMuteFlag+58↑j
.text:0000000000054CAC                 MOV             X0, #0xFFFFFFFFFFFFFFDB
.text:0000000000054CB0                 RET
.text:0000000000054CB4 ; ---------------------------------------------------------------------------
.text:0000000000054CB4 loc_54CB4                               ; CODE XREF: JET_SetMuteFlag+64↑j
.text:0000000000054CB4                 LDR             X9, [X8,#0x10]
.text:0000000000054CB8                 BIC             X3, X9, X10
.text:0000000000054CBC loc_54CBC                               ; CODE XREF: JET_SetMuteFlag+70↑j
.text:0000000000054CBC                 MOV             W2, #0xD
.text:0000000000054CC0                 STR             X3, [X8,#0x10]
.text:0000000000054CC4                 B               .EAS_IntSetStrmParam
.text:0000000000054CC4 ; } // starts at 54C08
.text:0000000000054CC4 ; End of function JET_SetMuteFlag
.text:0000000000054CC8 ; =============== S U B R O U T I N E =======================================
.text:0000000000054CC8                 EXPORT JET_TriggerClip
.text:0000000000054CC8 JET_TriggerClip                         ; DATA XREF: LOAD:0000000000001AB8↑o
.text:0000000000054CC8 ; __unwind {
.text:0000000000054CC8                 CMP             W1, #0x3F ; '?'
.text:0000000000054CCC                 B.LS            loc_54CD8
.text:0000000000054CD0                 MOV             X0, #0xFFFFFFFFFFFFFFF3
.text:0000000000054CD4                 RET
.text:0000000000054CD8 ; ---------------------------------------------------------------------------
.text:0000000000054CD8 loc_54CD8                               ; CODE XREF: JET_TriggerClip+4↑j
.text:0000000000054CD8                 LDR             X8, [X0,#0x178]
.text:0000000000054CDC                 ORR             W9, W1, #0x80
.text:0000000000054CE0                 LDRB            W11, [X8,#0x397]
.text:0000000000054CE4                 CMP             W9, W11
.text:0000000000054CE8                 B.NE            loc_54CF4
.text:0000000000054CEC                 MOV             W10, #7
.text:0000000000054CF0                 B               loc_54DD4
.text:0000000000054CF4 ; ---------------------------------------------------------------------------
.text:0000000000054CF4 loc_54CF4                               ; CODE XREF: JET_TriggerClip+20↑j
.text:0000000000054CF4                 LDRB            W12, [X8,#0x396]
.text:0000000000054CF8                 CMP             W9, W12
.text:0000000000054CFC                 B.NE            loc_54D08
.text:0000000000054D00                 MOV             W10, #6
.text:0000000000054D04                 B               loc_54DD4
.text:0000000000054D08 ; ---------------------------------------------------------------------------
.text:0000000000054D08 loc_54D08                               ; CODE XREF: JET_TriggerClip+34↑j
.text:0000000000054D08                 LDRB            W13, [X8,#0x395]
.text:0000000000054D0C                 MOV             W10, #5
.text:0000000000054D10                 CMP             W9, W13
.text:0000000000054D14                 B.EQ            loc_54DD4
.text:0000000000054D18                 LDRB            W14, [X8,#0x394]
.text:0000000000054D1C                 CMP             W9, W14
.text:0000000000054D20                 B.NE            loc_54D2C
.text:0000000000054D24                 MOV             W10, #4
.text:0000000000054D28                 B               loc_54DD4
.text:0000000000054D2C ; ---------------------------------------------------------------------------
.text:0000000000054D2C loc_54D2C                               ; CODE XREF: JET_TriggerClip+58↑j
.text:0000000000054D2C                 LDRB            W15, [X8,#0x393]
.text:0000000000054D30                 CMP             W9, W15
.text:0000000000054D34                 B.NE            loc_54D40
.text:0000000000054D38                 MOV             W10, #3
.text:0000000000054D3C                 B               loc_54DD4
.text:0000000000054D40 ; ---------------------------------------------------------------------------
.text:0000000000054D40 loc_54D40                               ; CODE XREF: JET_TriggerClip+6C↑j
.text:0000000000054D40                 LDRB            W16, [X8,#0x392]
.text:0000000000054D44                 CMP             W9, W16
.text:0000000000054D48                 B.NE            loc_54D54
.text:0000000000054D4C                 MOV             W10, #2
.text:0000000000054D50                 B               loc_54DD4
.text:0000000000054D54 ; ---------------------------------------------------------------------------
.text:0000000000054D54 loc_54D54                               ; CODE XREF: JET_TriggerClip+80↑j
.text:0000000000054D54                 LDRB            W17, [X8,#0x391]
.text:0000000000054D58                 CMP             W9, W17
.text:0000000000054D5C                 B.NE            loc_54D68
.text:0000000000054D60                 MOV             W10, #1
.text:0000000000054D64                 B               loc_54DD4
.text:0000000000054D68 ; ---------------------------------------------------------------------------
.text:0000000000054D68 loc_54D68                               ; CODE XREF: JET_TriggerClip+94↑j
.text:0000000000054D68                 LDRB            W0, [X8,#0x390]
.text:0000000000054D6C                 CMP             W9, W0
.text:0000000000054D70                 B.NE            loc_54D7C
.text:0000000000054D74                 MOV             W10, WZR
.text:0000000000054D78                 B               loc_54DD4
.text:0000000000054D7C ; ---------------------------------------------------------------------------
.text:0000000000054D7C loc_54D7C                               ; CODE XREF: JET_TriggerClip+A8↑j
.text:0000000000054D7C                 CMP             W11, #0
.text:0000000000054D80                 MOV             W11, #7
.text:0000000000054D84                 CSINV           W11, W11, WZR, EQ
.text:0000000000054D88                 CMP             W12, #0
.text:0000000000054D8C                 MOV             W12, #6
.text:0000000000054D90                 CSEL            W11, W12, W11, EQ
.text:0000000000054D94                 CMP             W13, #0
.text:0000000000054D98                 CSEL            W10, W10, W11, EQ
.text:0000000000054D9C                 CMP             W14, #0
.text:0000000000054DA0                 MOV             W11, #4
.text:0000000000054DA4                 CSEL            W10, W11, W10, EQ
.text:0000000000054DA8                 CMP             W15, #0
.text:0000000000054DAC                 MOV             W11, #3
.text:0000000000054DB0                 CSEL            W10, W11, W10, EQ
.text:0000000000054DB4                 CMP             W16, #0
.text:0000000000054DB8                 MOV             W11, #2
.text:0000000000054DBC                 CSEL            W10, W11, W10, EQ
.text:0000000000054DC0                 CMP             W17, #0
.text:0000000000054DC4                 CSINC           W10, W10, WZR, NE
.text:0000000000054DC8                 CMP             W0, #0
.text:0000000000054DCC                 CSEL            W10, WZR, W10, EQ
.text:0000000000054DD0                 TBNZ            W10, #0x1F, loc_54DE8
.text:0000000000054DD4 loc_54DD4                               ; CODE XREF: JET_TriggerClip+28↑j
.text:0000000000054DD4                                         ; JET_TriggerClip+3C↑j ...
.text:0000000000054DD4                 ORR             W9, W9, #0x40
.text:0000000000054DD8                 ADD             X8, X8, W10,SXTW
.text:0000000000054DDC                 MOV             X0, XZR
.text:0000000000054DE0                 STRB            W9, [X8,#0x390]
.text:0000000000054DE4                 RET
.text:0000000000054DE8 ; ---------------------------------------------------------------------------
.text:0000000000054DE8 loc_54DE8                               ; CODE XREF: JET_TriggerClip+108↑j
.text:0000000000054DE8                 MOV             X0, #0xFFFFFFFFFFFFFFDC
.text:0000000000054DEC                 RET
.text:0000000000054DEC ; } // starts at 54CC8
.text:0000000000054DEC ; End of function JET_TriggerClip
.text:0000000000054DF0 ; =============== S U B R O U T I N E =======================================
.text:0000000000054DF0 ; Attributes: bp-based frame
.text:0000000000054DF0                 EXPORT JET_Process
.text:0000000000054DF0 JET_Process                             ; CODE XREF: .JET_Process+C↓j
.text:0000000000054DF0                                         ; DATA XREF: LOAD:0000000000000528↑o ...
.text:0000000000054DF0 var_70          = -0x70
.text:0000000000054DF0 var_68          = -0x68
.text:0000000000054DF0 var_64          = -0x64
.text:0000000000054DF0 var_60          = -0x60
.text:0000000000054DF0 var_58          = -0x58
.text:0000000000054DF0 var_50          = -0x50
.text:0000000000054DF0 var_40          = -0x40
.text:0000000000054DF0 var_30          = -0x30
.text:0000000000054DF0 var_20          = -0x20
.text:0000000000054DF0 var_10          = -0x10
.text:0000000000054DF0 var_s0          =  0
.text:0000000000054DF0 arg_0           =  0x10
.text:0000000000054DF0 ; __unwind {
.text:0000000000054DF0                 SUB             SP, SP, #0x80
.text:0000000000054DF4                 STP             X28, X27, [SP,#0x70+var_50]
.text:0000000000054DF8                 STP             X26, X25, [SP,#0x70+var_40]
.text:0000000000054DFC                 STP             X24, X23, [SP,#0x70+var_30]
.text:0000000000054E00                 STP             X22, X21, [SP,#0x70+var_20]
.text:0000000000054E04                 STP             X20, X19, [SP,#0x70+var_10]
.text:0000000000054E08                 STP             X29, X30, [SP,#0x70+var_s0]
.text:0000000000054E0C                 ADD             X29, SP, #0x70
.text:0000000000054E10                 MRS             X8, #3, c13, c0, #2
.text:0000000000054E14                 MOV             X19, X0
.text:0000000000054E18                 STR             X8, [SP,#0x70+var_70]
.text:0000000000054E1C                 LDR             X8, [X8,#0x28]
.text:0000000000054E20                 STR             X8, [SP,#0x70+var_58]
.text:0000000000054E24                 LDR             X20, [X0,#0x178]
.text:0000000000054E28                 LDRB            W8, [X20,#0x39F]
.text:0000000000054E2C                 LDRB            W10, [X20,#0x39E]
.text:0000000000054E30                 CMP             W10, W8
.text:0000000000054E34                 B.NE            loc_54E40
.text:0000000000054E38                 MOV             W23, WZR
.text:0000000000054E3C                 B               loc_54EA0
.text:0000000000054E40 ; ---------------------------------------------------------------------------
.text:0000000000054E40 loc_54E40                               ; CODE XREF: JET_Process+44↑j
.text:0000000000054E40                 MOV             W23, WZR
.text:0000000000054E44                 MOV             W8, #0x3300
.text:0000000000054E48                 MOV             W9, #0x18
.text:0000000000054E4C loc_54E4C                               ; CODE XREF: JET_Process+AC↓j
.text:0000000000054E4C                 ADD             W12, W10, #1
.text:0000000000054E50                 AND             W12, W12, #0xFF
.text:0000000000054E54                 ADD             X11, X20, W10,UXTB#3
.text:0000000000054E58                 CMP             W12, #0x20 ; ' '
.text:0000000000054E5C                 CSINC           W10, WZR, W10, EQ
.text:0000000000054E60                 LDR             X11, [X11,#0x180]
.text:0000000000054E64                 STRB            W10, [X20,#0x39E]
.text:0000000000054E68                 LDR             X20, [X19,#0x178]
.text:0000000000054E6C                 AND             X10, X11, #0x3FFF
.text:0000000000054E70                 CMP             X10, X8
.text:0000000000054E74                 B.NE            loc_54E90
.text:0000000000054E78                 LDRB            W10, [X20,#0x39B]
.text:0000000000054E7C                 NOP
.text:0000000000054E80                 MADD            X10, X10, X9, X20
.text:0000000000054E84                 LDR             X10, [X10,#8]
.text:0000000000054E88                 CMP             X10, #0
.text:0000000000054E8C                 CSINC           W23, W23, WZR, EQ
.text:0000000000054E90 loc_54E90                               ; CODE XREF: JET_Process+84↑j
.text:0000000000054E90                 LDRB            W11, [X20,#0x39F]
.text:0000000000054E94                 LDRB            W10, [X20,#0x39E]
.text:0000000000054E98                 CMP             W10, W11
.text:0000000000054E9C                 B.NE            loc_54E4C
.text:0000000000054EA0 loc_54EA0                               ; CODE XREF: JET_Process+4C↑j
.text:0000000000054EA0                 LDRB            W24, [X20,#0x39B]
.text:0000000000054EA4                 ADRP            X26, #unk_3EA28@PAGE
.text:0000000000054EA8                 MOV             W27, WZR
.text:0000000000054EAC                 STR             WZR, [SP,#0x70+var_64]
.text:0000000000054EB0                 MOV             W25, #0x18
.text:0000000000054EB4                 ADD             X26, X26, #unk_3EA28@PAGEOFF
.text:0000000000054EB8                 MOV             W8, W24
.text:0000000000054EBC loc_54EBC                               ; CODE XREF: JET_Process+2CC↓j
.text:0000000000054EBC                 SMADDL          X28, W8, W25, X20
.text:0000000000054EC0                 SXTW            X21, W8
.text:0000000000054EC4                 LDRB            W8, [X28,#0x1D]!
.text:0000000000054EC8                 CBZ             W8, loc_550A8
.text:0000000000054ECC                 MADD            X22, X21, X25, X20
.text:0000000000054ED0                 ADD             X2, SP, #0x70+var_60
.text:0000000000054ED4                 MOV             X0, X19
.text:0000000000054ED8                 LDR             X1, [X22,#8]!
.text:0000000000054EDC                 BL              .EAS_State
.text:0000000000054EE0                 CBNZ            X0, loc_550D4
.text:0000000000054EE4                 LDRB            W8, [X28]
.text:0000000000054EE8                 SUB             W8, W8, #1
.text:0000000000054EEC                 CMP             W8, #4
.text:0000000000054EF0                 B.HI            loc_550A8
.text:0000000000054EF4                 ADR             X9, loc_54F04
.text:0000000000054EF8                 LDRB            W10, [X26,X8]
.text:0000000000054EFC                 ADD             X9, X9, X10,LSL#2
.text:0000000000054F00                 BR              X9
.text:0000000000054F04 ; ---------------------------------------------------------------------------
.text:0000000000054F04 loc_54F04                               ; DATA XREF: JET_Process+104↑o
.text:0000000000054F04                 LDR             W8, [SP,#0x70+var_64]
.text:0000000000054F08                 CBZ             W8, loc_54F1C
.text:0000000000054F0C                 MOV             X0, X19
.text:0000000000054F10                 MOV             X1, X21
.text:0000000000054F14                 BL              sub_547F8
.text:0000000000054F18                 CBNZ            X0, loc_550D4
.text:0000000000054F1C loc_54F1C                               ; CODE XREF: JET_Process+118↑j
.text:0000000000054F1C                 STR             WZR, [SP,#0x70+var_64]
.text:0000000000054F20                 B               loc_550A8
.text:0000000000054F24 ; ---------------------------------------------------------------------------
.text:0000000000054F24                 CBZ             W23, loc_55038
.text:0000000000054F28 loc_54F28                               ; CODE XREF: JET_Process+250↓j
.text:0000000000054F28                                         ; JET_Process+258↓j
.text:0000000000054F28                 STR             W27, [SP,#0x70+var_68]
.text:0000000000054F2C                 MOV             X27, X26
.text:0000000000054F30                 MADD            X26, X21, X25, X20
.text:0000000000054F34                 LDRH            W8, [X26,#0x18]!
.text:0000000000054F38                 CBZ             W8, loc_55050
.text:0000000000054F3C                 LDR             X1, [X22]
.text:0000000000054F40                 MOV             X0, X19
.text:0000000000054F44                 MOV             X2, XZR
.text:0000000000054F48                 MOV             W3, WZR
.text:0000000000054F4C                 BL              .EAS_Locate
.text:0000000000054F50                 CBNZ            X0, loc_550D4
.text:0000000000054F54                 LDRSH           W8, [X26]
.text:0000000000054F58                 SUBS            W8, W8, #1
.text:0000000000054F5C                 B.LT            loc_54F68
.text:0000000000054F60                 STRH            W8, [X26]
.text:0000000000054F64                 NOP
.text:0000000000054F68 loc_54F68                               ; CODE XREF: JET_Process+16C↑j
.text:0000000000054F68                 MADD            X26, X21, X25, X20
.text:0000000000054F6C                 LDRB            W8, [X26,#0x1E]!
.text:0000000000054F70                 TBZ             W8, #0, loc_54F9C
.text:0000000000054F74                 MADD            X8, X21, X25, X20
.text:0000000000054F78                 LDR             X1, [X22]
.text:0000000000054F7C                 MOV             X0, X19
.text:0000000000054F80                 MOV             W2, #0xD
.text:0000000000054F84                 LDR             X3, [X8,#0x10]
.text:0000000000054F88                 BL              .EAS_IntSetStrmParam
.text:0000000000054F8C                 CBNZ            X0, loc_550D4
.text:0000000000054F90                 LDRB            W8, [X26]
.text:0000000000054F94                 AND             W8, W8, #0xFE
.text:0000000000054F98                 STRB            W8, [X26]
.text:0000000000054F9C loc_54F9C                               ; CODE XREF: JET_Process+180↑j
.text:0000000000054F9C                 MOV             X26, X27
.text:0000000000054FA0                 LDR             W27, [SP,#0x70+var_68]
.text:0000000000054FA4                 B               loc_550A8
.text:0000000000054FA8 ; ---------------------------------------------------------------------------
.text:0000000000054FA8                 CBZ             W27, loc_550A8
.text:0000000000054FAC                 LDR             X22, [X19,#0x178]
.text:0000000000054FB0                 NOP
.text:0000000000054FB4                 MADD            X20, X21, X25, X22
.text:0000000000054FB8                 LDR             X1, [X20,#8]!
.text:0000000000054FBC                 CBZ             X1, loc_54FFC
.text:0000000000054FC0                 MOV             X0, X19
.text:0000000000054FC4                 BL              .EAS_Resume
.text:0000000000054FC8                 LDR             X8, [X19,#0x178]
.text:0000000000054FCC                 MOV             W9, #3
.text:0000000000054FD0                 MADD            X8, X21, X25, X8
.text:0000000000054FD4                 STRB            W9, [X8,#0x1D]
.text:0000000000054FD8                 CBNZ            X0, loc_550D4
.text:0000000000054FDC                 MADD            X8, X21, X25, X22
.text:0000000000054FE0                 LDR             X3, [X8,#0x10]
.text:0000000000054FE4                 CBZ             X3, loc_54FFC
.text:0000000000054FE8                 LDR             X1, [X20]
.text:0000000000054FEC                 MOV             X0, X19
.text:0000000000054FF0                 MOV             W2, #0xD
.text:0000000000054FF4                 BL              .EAS_IntSetStrmParam
.text:0000000000054FF8                 CBNZ            X0, loc_550D4
.text:0000000000054FFC loc_54FFC                               ; CODE XREF: JET_Process+1CC↑j
.text:0000000000054FFC                                         ; JET_Process+1F4↑j
.text:0000000000054FFC                 MOV             W8, #1
.text:0000000000055000                 MOV             W27, WZR
.text:0000000000055004                 STR             W8, [SP,#0x70+var_64]
.text:0000000000055008                 B               loc_550A8
.text:000000000005500C ; ---------------------------------------------------------------------------
.text:000000000005500C                 LDR             X8, [SP,#0x70+var_60]
.text:0000000000055010                 CMP             X8, #4
.text:0000000000055014                 B.NE            loc_550A8
.text:0000000000055018                 LDR             X8, [X19,#0x178]
.text:000000000005501C                 MOV             X0, X19
.text:0000000000055020                 MADD            X8, X21, X25, X8
.text:0000000000055024                 LDR             X1, [X8,#8]
.text:0000000000055028                 BL              .EAS_CloseFile
.text:000000000005502C                 CBZ             X0, loc_55078
.text:0000000000055030                 CBZ             W0, loc_550A8
.text:0000000000055034                 B               loc_5511C
.text:0000000000055038 ; ---------------------------------------------------------------------------
.text:0000000000055038 loc_55038                               ; CODE XREF: JET_Process+134↑j
.text:0000000000055038                 LDR             X8, [SP,#0x70+var_60]
.text:000000000005503C                 CMP             X8, #4
.text:0000000000055040                 B.EQ            loc_54F28
.text:0000000000055044                 CMP             X8, #2
.text:0000000000055048                 B.EQ            loc_54F28
.text:000000000005504C                 B               loc_550A8
.text:0000000000055050 ; ---------------------------------------------------------------------------
.text:0000000000055050 loc_55050                               ; CODE XREF: JET_Process+148↑j
.text:0000000000055050                 MOV             W8, #5
.text:0000000000055054                 MOV             X26, X27
.text:0000000000055058                 MOV             W27, #1
.text:000000000005505C                 STRB            W8, [X28]
.text:0000000000055060                 ADD             W8, W21, #1
.text:0000000000055064                 CMP             W8, #3
.text:0000000000055068                 LDR             X8, [X19,#0x178]
.text:000000000005506C                 CSINC           W9, WZR, W21, EQ
.text:0000000000055070                 STRB            W9, [X8,#0x39B]
.text:0000000000055074                 B               loc_550A8
.text:0000000000055078 ; ---------------------------------------------------------------------------
.text:0000000000055078 loc_55078                               ; CODE XREF: JET_Process+23C↑j
.text:0000000000055078                 LDR             X8, [X19,#0x178]
.text:000000000005507C                 ADD             X9, X21, X21,LSL#1
.text:0000000000055080                 LSL             X9, X9, #3
.text:0000000000055084                 ADD             X8, X8, X9
.text:0000000000055088                 STR             XZR, [X8,#8]
.text:000000000005508C                 LDR             X8, [X19,#0x178]
.text:0000000000055090                 ADD             X8, X8, X9
.text:0000000000055094                 STRB            WZR, [X8,#0x1D]
.text:0000000000055098                 LDR             X8, [X19,#0x178]
.text:000000000005509C                 LDRB            W9, [X8,#0x39D]
.text:00000000000550A0                 SUB             W9, W9, #1
.text:00000000000550A4                 STRB            W9, [X8,#0x39D]
.text:00000000000550A8 loc_550A8                               ; CODE XREF: JET_Process+D8↑j
.text:00000000000550A8                                         ; JET_Process+100↑j ...
.text:00000000000550A8                 ADD             W8, W21, #1
.text:00000000000550AC                 LDR             X20, [X19,#0x178]
.text:00000000000550B0                 CMP             W8, #3
.text:00000000000550B4                 CSINC           W8, WZR, W21, EQ
.text:00000000000550B8                 CMP             W8, W24
.text:00000000000550BC                 B.NE            loc_54EBC
.text:00000000000550C0                 LDRB            W8, [X20,#0x39D]
.text:00000000000550C4                 LDR             X9, [SP,#0x70+var_70]
.text:00000000000550C8                 CBZ             W8, loc_550DC
.text:00000000000550CC                 MOV             X0, XZR
.text:00000000000550D0                 B               loc_550EC
.text:00000000000550D4 ; ---------------------------------------------------------------------------
.text:00000000000550D4 loc_550D4                               ; CODE XREF: JET_Process+F0↑j
.text:00000000000550D4                                         ; JET_Process+128↑j ...
.text:00000000000550D4                 LDR             X9, [SP,#0x70+var_70]
.text:00000000000550D8                 B               loc_550EC
.text:00000000000550DC ; ---------------------------------------------------------------------------
.text:00000000000550DC loc_550DC                               ; CODE XREF: JET_Process+2D8↑j
.text:00000000000550DC                 LDRB            W8, [X20,#0x39A]
.text:00000000000550E0                 MOV             X0, XZR
.text:00000000000550E4                 AND             W8, W8, #0xFE
.text:00000000000550E8                 STRB            W8, [X20,#0x39A]
.text:00000000000550EC loc_550EC                               ; CODE XREF: JET_Process+2E0↑j
.text:00000000000550EC                                         ; JET_Process+2E8↑j ...
.text:00000000000550EC                 LDR             X8, [X9,#0x28]
.text:00000000000550F0                 LDR             X9, [SP,#0x70+var_58]
.text:00000000000550F4                 CMP             X8, X9
.text:00000000000550F8                 B.NE            loc_55128
.text:00000000000550FC                 LDP             X29, X30, [SP,#0x70+var_s0]
.text:0000000000055100                 LDP             X20, X19, [SP,#0x70+var_10]
.text:0000000000055104                 LDP             X22, X21, [SP,#0x70+var_20]
.text:0000000000055108                 LDP             X24, X23, [SP,#0x70+var_30]
.text:000000000005510C                 LDP             X26, X25, [SP,#0x70+var_40]
.text:0000000000055110                 LDP             X28, X27, [SP,#0x70+var_50]
.text:0000000000055114                 ADD             SP, SP, #0x80
.text:0000000000055118                 RET
.text:000000000005511C ; ---------------------------------------------------------------------------
.text:000000000005511C loc_5511C                               ; CODE XREF: JET_Process+244↑j
.text:000000000005511C                 LDR             X9, [SP,#-0x10+arg_0]
.text:0000000000055120                 SXTW            X0, W0
.text:0000000000055124                 B               loc_550EC
.text:0000000000055128 ; ---------------------------------------------------------------------------
.text:0000000000055128 loc_55128                               ; CODE XREF: JET_Process+308↑j
.text:0000000000055128                 BL              .__stack_chk_fail
.text:0000000000055128 ; } // starts at 54DF0
.text:0000000000055128 ; End of function JET_Process
.text:0000000000055128 ; ---------------------------------------------------------------------------
.text:000000000005512C                 ALIGN 0x10
.text:0000000000055130 ; =============== S U B R O U T I N E =======================================
.text:0000000000055130                 EXPORT JET_Event
.text:0000000000055130 JET_Event                               ; CODE XREF: .JET_Event+C↓j
.text:0000000000055130                                         ; DATA XREF: LOAD:00000000000014A0↑o ...
.text:0000000000055130 ; __unwind {
.text:0000000000055130                 LDR             X8, [X0,#0x178]
.text:0000000000055134                 CBZ             X8, locret_55268
.text:0000000000055138                 AND             W9, W3, #0xFF
.text:000000000005513C                 CMP             W9, #0x67 ; 'g'
.text:0000000000055140                 B.NE            loc_551CC
.text:0000000000055144                 LDRB            W9, [X8,#0x390]
.text:0000000000055148                 EOR             W10, W9, W4
.text:000000000005514C                 TST             W10, #0x3F
.text:0000000000055150                 B.EQ            loc_55240
.text:0000000000055154                 LDRB            W9, [X8,#0x391]
.text:0000000000055158                 EOR             W10, W9, W4
.text:000000000005515C                 TST             W10, #0x3F
.text:0000000000055160                 B.EQ            loc_5526C
.text:0000000000055164                 LDRB            W9, [X8,#0x392]
.text:0000000000055168                 EOR             W10, W9, W4
.text:000000000005516C                 TST             W10, #0x3F
.text:0000000000055170                 B.EQ            loc_55274
.text:0000000000055174                 LDRB            W9, [X8,#0x393]
.text:0000000000055178                 EOR             W10, W9, W4
.text:000000000005517C                 TST             W10, #0x3F
.text:0000000000055180                 B.EQ            loc_552A8
.text:0000000000055184                 LDRB            W9, [X8,#0x394]
.text:0000000000055188                 EOR             W10, W9, W4
.text:000000000005518C                 TST             W10, #0x3F
.text:0000000000055190                 B.EQ            loc_552B0
.text:0000000000055194                 LDRB            W9, [X8,#0x395]
.text:0000000000055198                 EOR             W10, W9, W4
.text:000000000005519C                 TST             W10, #0x3F
.text:00000000000551A0                 B.EQ            loc_552B8
.text:00000000000551A4                 LDRB            W9, [X8,#0x396]
.text:00000000000551A8                 EOR             W10, W9, W4
.text:00000000000551AC                 TST             W10, #0x3F
.text:00000000000551B0                 B.EQ            loc_552C0
.text:00000000000551B4                 LDRB            W9, [X8,#0x397]
.text:00000000000551B8                 EOR             W10, W9, W4
.text:00000000000551BC                 TST             W10, #0x3F
.text:00000000000551C0                 B.NE            locret_55268
.text:00000000000551C4                 MOV             W10, #7
.text:00000000000551C8                 B               loc_552C4
.text:00000000000551CC ; ---------------------------------------------------------------------------
.text:00000000000551CC loc_551CC                               ; CODE XREF: JET_Event+10↑j
.text:00000000000551CC                 AND             X9, X3, #0xFF
.text:00000000000551D0                 LDRB            W11, [X8,#0x380]
.text:00000000000551D4                 AND             X10, X2, #0xFF
.text:00000000000551D8                 LSL             X9, X9, #7
.text:00000000000551DC                 ORR             X9, X9, X10,LSL#14
.text:00000000000551E0                 AND             X10, X4, #0xFF
.text:00000000000551E4                 ORR             X9, X9, X10
.text:00000000000551E8                 CMP             W11, W3,UXTB
.text:00000000000551EC                 B.HI            loc_551FC
.text:00000000000551F0                 LDRB            W10, [X8,#0x381]
.text:00000000000551F4                 CMP             W10, W3,UXTB
.text:00000000000551F8                 B.CS            loc_55248
.text:00000000000551FC loc_551FC                               ; CODE XREF: JET_Event+BC↑j
.text:00000000000551FC                 SUB             W10, W3, #0x66 ; 'f'
.text:0000000000055200                 AND             W10, W10, #0xFF
.text:0000000000055204                 CMP             W10, #0x11
.text:0000000000055208                 B.HI            locret_55268
.text:000000000005520C                 LDRB            W10, [X8,#0x39F]
.text:0000000000055210                 LDRB            W12, [X8,#0x39E]
.text:0000000000055214                 ADD             W11, W10, #1
.text:0000000000055218                 AND             W11, W11, #0xFF
.text:000000000005521C                 CMP             W11, #0x20 ; ' '
.text:0000000000055220                 CSINC           W11, WZR, W10, EQ
.text:0000000000055224                 CMP             W12, W11,UXTB
.text:0000000000055228                 B.EQ            locret_55268
.text:000000000005522C                 ORR             X9, X9, X1
.text:0000000000055230                 ADD             X10, X8, X10,LSL#3
.text:0000000000055234                 STR             X9, [X10,#0x180]
.text:0000000000055238                 STRB            W11, [X8,#0x39F]
.text:000000000005523C                 RET
.text:0000000000055240 ; ---------------------------------------------------------------------------
.text:0000000000055240 loc_55240                               ; CODE XREF: JET_Event+20↑j
.text:0000000000055240                 MOV             X10, XZR
.text:0000000000055244                 B               loc_552C4
.text:0000000000055248 ; ---------------------------------------------------------------------------
.text:0000000000055248 loc_55248                               ; CODE XREF: JET_Event+C8↑j
.text:0000000000055248                 LDRB            W10, [X8,#0x3A1]
.text:000000000005524C                 LDRB            W12, [X8,#0x3A0]
.text:0000000000055250                 ADD             W11, W10, #1
.text:0000000000055254                 AND             W11, W11, #0xFF
.text:0000000000055258                 CMP             W11, #0x20 ; ' '
.text:000000000005525C                 CSINC           W11, WZR, W10, EQ
.text:0000000000055260                 CMP             W12, W11,UXTB
.text:0000000000055264                 B.NE            loc_5527C
.text:0000000000055268 locret_55268                            ; CODE XREF: JET_Event+4↑j
.text:0000000000055268                                         ; JET_Event+90↑j ...
.text:0000000000055268                 RET
.text:000000000005526C ; ---------------------------------------------------------------------------
.text:000000000005526C loc_5526C                               ; CODE XREF: JET_Event+30↑j
.text:000000000005526C                 MOV             W10, #1
.text:0000000000055270                 B               loc_552C4
.text:0000000000055274 ; ---------------------------------------------------------------------------
.text:0000000000055274 loc_55274                               ; CODE XREF: JET_Event+40↑j
.text:0000000000055274                 MOV             W10, #2
.text:0000000000055278                 B               loc_552C4
.text:000000000005527C ; ---------------------------------------------------------------------------
.text:000000000005527C loc_5527C                               ; CODE XREF: JET_Event+134↑j
.text:000000000005527C                 MOV             W12, #0x18
.text:0000000000055280                 UBFX            X13, X1, #0x18, #8
.text:0000000000055284                 MADD            X12, X13, X12, X8
.text:0000000000055288                 ADD             X10, X8, X10,LSL#3
.text:000000000005528C                 LDRB            W12, [X12,#0x1A]
.text:0000000000055290                 LSL             W12, W12, #0x18
.text:0000000000055294                 SXTW            X12, W12
.text:0000000000055298                 ORR             X9, X9, X12
.text:000000000005529C                 STR             X9, [X10,#0x280]
.text:00000000000552A0                 STRB            W11, [X8,#0x3A1]
.text:00000000000552A4                 RET
.text:00000000000552A8 ; ---------------------------------------------------------------------------
.text:00000000000552A8 loc_552A8                               ; CODE XREF: JET_Event+50↑j
.text:00000000000552A8                 MOV             W10, #3
.text:00000000000552AC                 B               loc_552C4
.text:00000000000552B0 ; ---------------------------------------------------------------------------
.text:00000000000552B0 loc_552B0                               ; CODE XREF: JET_Event+60↑j
.text:00000000000552B0                 MOV             W10, #4
.text:00000000000552B4                 B               loc_552C4
.text:00000000000552B8 ; ---------------------------------------------------------------------------
.text:00000000000552B8 loc_552B8                               ; CODE XREF: JET_Event+70↑j
.text:00000000000552B8                 MOV             W10, #5
.text:00000000000552BC                 B               loc_552C4
.text:00000000000552C0 ; ---------------------------------------------------------------------------
.text:00000000000552C0 loc_552C0                               ; CODE XREF: JET_Event+80↑j
.text:00000000000552C0                 MOV             W10, #6
.text:00000000000552C4 loc_552C4                               ; CODE XREF: JET_Event+98↑j
.text:00000000000552C4                                         ; JET_Event+114↑j ...
.text:00000000000552C4                 UBFX            X12, X1, #0x12, #0xE
.text:00000000000552C8                 MOV             W13, #1
.text:00000000000552CC                 AND             W14, W4, W9
.text:00000000000552D0                 LSL             W9, W13, W12
.text:00000000000552D4                 MOV             W12, #0x18
.text:00000000000552D8                 LSR             X11, X1, #0x18
.text:00000000000552DC                 MADD            X12, X11, X12, X8
.text:00000000000552E0                 SXTW            X9, W9
.text:00000000000552E4                 TBZ             W14, #6, loc_5530C
.text:00000000000552E8                 LDR             X13, [X12,#0x10]
.text:00000000000552EC                 BIC             X9, X13, X9
.text:00000000000552F0                 STR             X9, [X12,#0x10]
.text:00000000000552F4                 LDR             X9, [X0,#0x178]
.text:00000000000552F8                 ADD             X9, X9, X10
.text:00000000000552FC                 LDRB            W10, [X9,#0x390]
.text:0000000000055300                 AND             W10, W10, #0xFFFFFFBF
.text:0000000000055304                 STRB            W10, [X9,#0x390]
.text:0000000000055308                 B               loc_5532C
.text:000000000005530C ; ---------------------------------------------------------------------------
.text:000000000005530C loc_5530C                               ; CODE XREF: JET_Event+1B4↑j
.text:000000000005530C                 LDR             X13, [X12,#0x10]
.text:0000000000055310                 ORR             X9, X13, X9
.text:0000000000055314                 CMP             X13, X9
.text:0000000000055318                 STR             X9, [X12,#0x10]
.text:000000000005531C                 B.EQ            loc_5532C
.text:0000000000055320                 LDR             X9, [X0,#0x178]
.text:0000000000055324                 ADD             X9, X9, X10
.text:0000000000055328                 STRB            WZR, [X9,#0x390]
.text:000000000005532C loc_5532C                               ; CODE XREF: JET_Event+1D8↑j
.text:000000000005532C                                         ; JET_Event+1EC↑j
.text:000000000005532C                 MOV             W9, #0x18
.text:0000000000055330                 MOV             W2, #0xD
.text:0000000000055334                 MADD            X8, X11, X9, X8
.text:0000000000055338                 LDP             X1, X3, [X8,#8]
.text:000000000005533C                 B               .EAS_IntSetStrmParam
.text:000000000005533C ; } // starts at 55130
.text:000000000005533C ; End of function JET_Event
.text:0000000000055340 ; =============== S U B R O U T I N E =======================================
.text:0000000000055340 ; Attributes: bp-based frame
.text:0000000000055340                 EXPORT JET_Clear_Queue
.text:0000000000055340 JET_Clear_Queue                         ; DATA XREF: LOAD:0000000000001098↑o
.text:0000000000055340 var_10          = -0x10
.text:0000000000055340 var_s0          =  0
.text:0000000000055340 ; __unwind {
.text:0000000000055340                 STP             X20, X19, [SP,#-0x10+var_10]!
.text:0000000000055344                 STP             X29, X30, [SP,#0x10+var_s0]
.text:0000000000055348                 ADD             X29, SP, #0x10
.text:000000000005534C                 LDR             X8, [X0,#0x178]
.text:0000000000055350                 MOV             X19, X0
.text:0000000000055354                 ADD             X20, X0, #0x178
.text:0000000000055358                 LDRB            W9, [X8,#0x1D]
.text:000000000005535C                 CMP             W9, #3
.text:0000000000055360                 B.NE            loc_55384
.text:0000000000055364                 LDR             X1, [X8,#8]
.text:0000000000055368                 MOV             X0, X19
.text:000000000005536C                 BL              .EAS_Pause
.text:0000000000055370                 CBNZ            X0, loc_55500
.text:0000000000055374                 LDR             X8, [X20]
.text:0000000000055378                 MOV             W9, #4
.text:000000000005537C                 STRB            W9, [X8,#0x1D]
.text:0000000000055380                 LDR             X8, [X20]
.text:0000000000055384 loc_55384                               ; CODE XREF: JET_Clear_Queue+20↑j
.text:0000000000055384                 LDRB            W9, [X8,#0x35]
.text:0000000000055388                 CMP             W9, #3
.text:000000000005538C                 B.NE            loc_553B0
.text:0000000000055390                 LDR             X1, [X8,#0x20]
.text:0000000000055394                 MOV             X0, X19
.text:0000000000055398                 BL              .EAS_Pause
.text:000000000005539C                 CBNZ            X0, loc_55500
.text:00000000000553A0                 LDR             X8, [X20]
.text:00000000000553A4                 MOV             W9, #4
.text:00000000000553A8                 STRB            W9, [X8,#0x35]
.text:00000000000553AC                 LDR             X8, [X20]
.text:00000000000553B0 loc_553B0                               ; CODE XREF: JET_Clear_Queue+4C↑j
.text:00000000000553B0                 LDRB            W9, [X8,#0x4D]
.text:00000000000553B4                 CMP             W9, #3
.text:00000000000553B8                 B.NE            loc_553DC
.text:00000000000553BC                 LDR             X1, [X8,#0x38]
.text:00000000000553C0                 MOV             X0, X19
.text:00000000000553C4                 BL              .EAS_Pause
.text:00000000000553C8                 CBNZ            X0, loc_55500
.text:00000000000553CC                 LDR             X8, [X20]
.text:00000000000553D0                 MOV             W9, #4
.text:00000000000553D4                 STRB            W9, [X8,#0x4D]
.text:00000000000553D8                 LDR             X8, [X20]
.text:00000000000553DC loc_553DC                               ; CODE XREF: JET_Clear_Queue+78↑j
.text:00000000000553DC                 LDR             X1, [X8,#8]
.text:00000000000553E0                 CBZ             X1, loc_55418
.text:00000000000553E4                 MOV             X0, X19
.text:00000000000553E8                 BL              .EAS_CloseFile
.text:00000000000553EC                 CBZ             X0, loc_553F8
.text:00000000000553F0                 CBNZ            W0, loc_55474
.text:00000000000553F4                 B               loc_55418
.text:00000000000553F8 ; ---------------------------------------------------------------------------
.text:00000000000553F8 loc_553F8                               ; CODE XREF: JET_Clear_Queue+AC↑j
.text:00000000000553F8                 LDR             X8, [X20]
.text:00000000000553FC                 STR             XZR, [X8,#8]
.text:0000000000055400                 LDR             X8, [X20]
.text:0000000000055404                 STRB            WZR, [X8,#0x1D]
.text:0000000000055408                 LDR             X8, [X20]
.text:000000000005540C                 LDRB            W9, [X8,#0x39D]
.text:0000000000055410                 SUB             W9, W9, #1
.text:0000000000055414                 STRB            W9, [X8,#0x39D]
.text:0000000000055418 loc_55418                               ; CODE XREF: JET_Clear_Queue+A0↑j
.text:0000000000055418                                         ; JET_Clear_Queue+B4↑j
.text:0000000000055418                 LDR             X8, [X20]
.text:000000000005541C                 LDR             X1, [X8,#0x20]
.text:0000000000055420                 CBZ             X1, loc_55458
.text:0000000000055424                 MOV             X0, X19
.text:0000000000055428                 BL              .EAS_CloseFile
.text:000000000005542C                 CBZ             X0, loc_55438
.text:0000000000055430                 CBNZ            W0, loc_55474
.text:0000000000055434                 B               loc_55458
.text:0000000000055438 ; ---------------------------------------------------------------------------
.text:0000000000055438 loc_55438                               ; CODE XREF: JET_Clear_Queue+EC↑j
.text:0000000000055438                 LDR             X8, [X20]
.text:000000000005543C                 STR             XZR, [X8,#0x20]
.text:0000000000055440                 LDR             X8, [X20]
.text:0000000000055444                 STRB            WZR, [X8,#0x35]
.text:0000000000055448                 LDR             X8, [X20]
.text:000000000005544C                 LDRB            W9, [X8,#0x39D]
.text:0000000000055450                 SUB             W9, W9, #1
.text:0000000000055454                 STRB            W9, [X8,#0x39D]
.text:0000000000055458 loc_55458                               ; CODE XREF: JET_Clear_Queue+E0↑j
.text:0000000000055458                                         ; JET_Clear_Queue+F4↑j
.text:0000000000055458                 LDR             X8, [X20]
.text:000000000005545C                 LDR             X1, [X8,#0x38]
.text:0000000000055460                 CBZ             X1, loc_5549C
.text:0000000000055464                 MOV             X0, X19
.text:0000000000055468                 BL              .EAS_CloseFile
.text:000000000005546C                 CBZ             X0, loc_5547C
.text:0000000000055470                 CBZ             W0, loc_5549C
.text:0000000000055474 loc_55474                               ; CODE XREF: JET_Clear_Queue+B0↑j
.text:0000000000055474                                         ; JET_Clear_Queue+F0↑j
.text:0000000000055474                 SXTW            X0, W0
.text:0000000000055478                 B               loc_55500
.text:000000000005547C ; ---------------------------------------------------------------------------
.text:000000000005547C loc_5547C                               ; CODE XREF: JET_Clear_Queue+12C↑j
.text:000000000005547C                 LDR             X8, [X20]
.text:0000000000055480                 STR             XZR, [X8,#0x38]
.text:0000000000055484                 LDR             X8, [X20]
.text:0000000000055488                 STRB            WZR, [X8,#0x4D]
.text:000000000005548C                 LDR             X8, [X20]
.text:0000000000055490                 LDRB            W9, [X8,#0x39D]
.text:0000000000055494                 SUB             W9, W9, #1
.text:0000000000055498                 STRB            W9, [X8,#0x39D]
.text:000000000005549C loc_5549C                               ; CODE XREF: JET_Clear_Queue+120↑j
.text:000000000005549C                                         ; JET_Clear_Queue+130↑j
.text:000000000005549C                 LDR             X8, [X20]
.text:00000000000554A0                 MOV             X0, XZR
.text:00000000000554A4                 STRB            WZR, [X8,#0x390]
.text:00000000000554A8                 LDR             X8, [X20]
.text:00000000000554AC                 STRB            WZR, [X8,#0x391]
.text:00000000000554B0                 LDR             X8, [X20]
.text:00000000000554B4                 STRB            WZR, [X8,#0x392]
.text:00000000000554B8                 LDR             X8, [X20]
.text:00000000000554BC                 STRB            WZR, [X8,#0x393]
.text:00000000000554C0                 LDR             X8, [X20]
.text:00000000000554C4                 STRB            WZR, [X8,#0x394]
.text:00000000000554C8                 LDR             X8, [X20]
.text:00000000000554CC                 STRB            WZR, [X8,#0x395]
.text:00000000000554D0                 LDR             X8, [X20]
.text:00000000000554D4                 STRB            WZR, [X8,#0x396]
.text:00000000000554D8                 LDR             X8, [X20]
.text:00000000000554DC                 STRB            WZR, [X8,#0x397]
.text:00000000000554E0                 LDR             X8, [X20]
.text:00000000000554E4                 LDRB            W9, [X8,#0x39A]
.text:00000000000554E8                 AND             W9, W9, #0xFE
.text:00000000000554EC                 STRB            W9, [X8,#0x39A]
.text:00000000000554F0                 LDR             X8, [X20]
.text:00000000000554F4                 STRB            WZR, [X8,#0x39C]
.text:00000000000554F8                 LDR             X8, [X20]
.text:00000000000554FC                 STRB            WZR, [X8,#0x39B]
.text:0000000000055500 loc_55500                               ; CODE XREF: JET_Clear_Queue+30↑j
.text:0000000000055500                                         ; JET_Clear_Queue+5C↑j ...
.text:0000000000055500                 LDP             X29, X30, [SP,#0x10+var_s0]
.text:0000000000055504                 LDP             X20, X19, [SP+0x10+var_10],#0x20
.text:0000000000055508                 RET
.text:0000000000055508 ; } // starts at 55340
.text:0000000000055508 ; End of function JET_Clear_Queue
.text:0000000000055508 ; ---------------------------------------------------------------------------
.text:000000000005550C                 ALIGN 0x10
.text:0000000000055510 ; =============== S U B R O U T I N E =======================================
.text:0000000000055510                 EXPORT EAS_CMStaticMemoryModel
.text:0000000000055510 EAS_CMStaticMemoryModel                 ; CODE XREF: .EAS_CMStaticMemoryModel+C↓j
.text:0000000000055510                                         ; DATA XREF: LOAD:00000000000010E0↑o ...
.text:0000000000055510 ; __unwind {
.text:0000000000055510                 MOV             W0, WZR
.text:0000000000055514                 RET
.text:0000000000055514 ; } // starts at 55510
.text:0000000000055514 ; End of function EAS_CMStaticMemoryModel
.text:0000000000055518 ; =============== S U B R O U T I N E =======================================
.text:0000000000055518                 EXPORT EAS_CMEnumModules
.text:0000000000055518 EAS_CMEnumModules                       ; CODE XREF: .EAS_CMEnumModules+C↓j
.text:0000000000055518                                         ; DATA XREF: LOAD:0000000000000CF0↑o ...
.text:0000000000055518 ; __unwind {
.text:0000000000055518                 CMP             W0, #4
.text:000000000005551C                 B.LE            loc_55528
.text:0000000000055520                 MOV             X0, XZR
.text:0000000000055524                 RET
.text:0000000000055528 ; ---------------------------------------------------------------------------
.text:0000000000055528 loc_55528                               ; CODE XREF: EAS_CMEnumModules+4↑j
.text:0000000000055528                 ADRP            X8, #parserModules_ptr@PAGE
.text:000000000005552C                 LDR             X8, [X8,#parserModules_ptr@PAGEOFF]
.text:0000000000055530                 LDR             X0, [X8,W0,SXTW#3]
.text:0000000000055534                 RET
.text:0000000000055534 ; } // starts at 55518
.text:0000000000055534 ; End of function EAS_CMEnumModules
.text:0000000000055538 ; =============== S U B R O U T I N E =======================================
.text:0000000000055538                 EXPORT EAS_CMEnumData
.text:0000000000055538 EAS_CMEnumData                          ; CODE XREF: .EAS_CMEnumData+C↓j
.text:0000000000055538                                         ; DATA XREF: LOAD:0000000000000D08↑o ...
.text:0000000000055538 ; __unwind {
.text:0000000000055538                 MOV             X0, XZR
.text:000000000005553C                 RET
.text:000000000005553C ; } // starts at 55538
.text:000000000005553C ; End of function EAS_CMEnumData
.text:0000000000055540 ; =============== S U B R O U T I N E =======================================
.text:0000000000055540                 EXPORT EAS_CMEnumFXModules
.text:0000000000055540 EAS_CMEnumFXModules                     ; CODE XREF: .EAS_CMEnumFXModules+C↓j
.text:0000000000055540                                         ; DATA XREF: LOAD:00000000000017E8↑o ...
.text:0000000000055540 ; __unwind {
.text:0000000000055540                 CMP             W0, #8
.text:0000000000055544                 B.LE            loc_55550
.text:0000000000055548                 MOV             X0, XZR
.text:000000000005554C                 RET
.text:0000000000055550 ; ---------------------------------------------------------------------------
.text:0000000000055550 loc_55550                               ; CODE XREF: EAS_CMEnumFXModules+4↑j
.text:0000000000055550                 ADRP            X8, #effectsModules_ptr@PAGE
.text:0000000000055554                 LDR             X8, [X8,#effectsModules_ptr@PAGEOFF]
.text:0000000000055558                 LDR             X0, [X8,W0,SXTW#3]
.text:000000000005555C                 RET
.text:000000000005555C ; } // starts at 55540
.text:000000000005555C ; End of function EAS_CMEnumFXModules
.text:0000000000055560 ; =============== S U B R O U T I N E =======================================
.text:0000000000055560                 EXPORT EAS_CMEnumFXData
.text:0000000000055560 EAS_CMEnumFXData                        ; CODE XREF: .EAS_CMEnumFXData+C↓j
.text:0000000000055560                                         ; DATA XREF: LOAD:0000000000000E88↑o ...
.text:0000000000055560 ; __unwind {
.text:0000000000055560                 CMP             W0, #8
.text:0000000000055564                 B.LE            loc_55570
.text:0000000000055568                 MOV             X0, XZR
.text:000000000005556C                 RET
.text:0000000000055570 ; ---------------------------------------------------------------------------
.text:0000000000055570 loc_55570                               ; CODE XREF: EAS_CMEnumFXData+4↑j
.text:0000000000055570                 ADRP            X8, #effectsData_ptr@PAGE
.text:0000000000055574                 LDR             X8, [X8,#effectsData_ptr@PAGEOFF]
.text:0000000000055578                 LDR             X0, [X8,W0,SXTW#3]
.text:000000000005557C                 RET
.text:000000000005557C ; } // starts at 55560
.text:000000000005557C ; End of function EAS_CMEnumFXData
.text:0000000000055580 ; =============== S U B R O U T I N E =======================================
.text:0000000000055580                 EXPORT EAS_CMEnumOptModules
.text:0000000000055580 EAS_CMEnumOptModules                    ; DATA XREF: LOAD:00000000000008E8↑o
.text:0000000000055580 ; __unwind {
.text:0000000000055580                 CMP             W0, #1
.text:0000000000055584                 B.LE            loc_55590
.text:0000000000055588                 MOV             X0, XZR
.text:000000000005558C                 RET
.text:0000000000055590 ; ---------------------------------------------------------------------------
.text:0000000000055590 loc_55590                               ; CODE XREF: EAS_CMEnumOptModules+4↑j
.text:0000000000055590                 ADRP            X8, #optionalModules_ptr@PAGE
.text:0000000000055594                 LDR             X8, [X8,#optionalModules_ptr@PAGEOFF]
.text:0000000000055598                 LDR             X0, [X8,W0,SXTW#3]
.text:000000000005559C                 RET
.text:000000000005559C ; } // starts at 55580
.text:000000000005559C ; End of function EAS_CMEnumOptModules
.text:00000000000555A0 ; =============== S U B R O U T I N E =======================================
.text:00000000000555A0                 EXPORT EAS_CMEnumOptData
.text:00000000000555A0 EAS_CMEnumOptData                       ; DATA XREF: LOAD:0000000000000690↑o
.text:00000000000555A0 ; __unwind {
.text:00000000000555A0                 CMP             W0, #1
.text:00000000000555A4                 B.LE            loc_555B0
.text:00000000000555A8                 MOV             X0, XZR
.text:00000000000555AC                 RET
.text:00000000000555B0 ; ---------------------------------------------------------------------------
.text:00000000000555B0 loc_555B0                               ; CODE XREF: EAS_CMEnumOptData+4↑j
.text:00000000000555B0                 ADRP            X8, #optionalData_ptr@PAGE
.text:00000000000555B4                 LDR             X8, [X8,#optionalData_ptr@PAGEOFF]
.text:00000000000555B8                 LDR             X0, [X8,W0,SXTW#3]
.text:00000000000555BC                 RET
.text:00000000000555BC ; } // starts at 555A0
.text:00000000000555BC ; End of function EAS_CMEnumOptData
.text:00000000000555C0 ; =============== S U B R O U T I N E =======================================
.text:00000000000555C0 ; Attributes: bp-based frame
.text:00000000000555C0                 EXPORT EAS_HWInit
.text:00000000000555C0 EAS_HWInit                              ; CODE XREF: .EAS_HWInit+C↓j
.text:00000000000555C0                                         ; DATA XREF: LOAD:0000000000000F18↑o ...
.text:00000000000555C0 var_10          = -0x10
.text:00000000000555C0 var_s0          =  0
.text:00000000000555C0 ; __unwind {
.text:00000000000555C0                 STP             X20, X19, [SP,#-0x10+var_10]!
.text:00000000000555C4                 STP             X29, X30, [SP,#0x10+var_s0]
.text:00000000000555C8                 ADD             X29, SP, #0x10
.text:00000000000555CC                 MOV             X20, X0
.text:00000000000555D0                 MOV             W0, #0xC80 ; size
.text:00000000000555D4                 BL              .malloc
.text:00000000000555D8                 STR             X0, [X20]
.text:00000000000555DC                 CBZ             X0, loc_5560C
.text:00000000000555E0                 MOV             W2, #0xC80 ; n
.text:00000000000555E4                 MOV             W1, WZR ; c
.text:00000000000555E8                 MOV             X19, X0
.text:00000000000555EC                 BL              .memset
.text:00000000000555F0                 MOV             W8, #0x18
.text:00000000000555F4 loc_555F4                               ; CODE XREF: EAS_HWInit+40↓j
.text:00000000000555F4                 STR             XZR, [X19,X8]
.text:00000000000555F8                 ADD             X8, X8, #0x20 ; ' '
.text:00000000000555FC                 CMP             W8, #0xC98
.text:0000000000055600                 B.NE            loc_555F4
.text:0000000000055604                 MOV             X0, XZR
.text:0000000000055608                 B               loc_55610
.text:000000000005560C ; ---------------------------------------------------------------------------
.text:000000000005560C loc_5560C                               ; CODE XREF: EAS_HWInit+1C↑j
.text:000000000005560C                 MOV             X0, #0xFFFFFFFFFFFFFFFD
.text:0000000000055610 loc_55610                               ; CODE XREF: EAS_HWInit+48↑j
.text:0000000000055610                 LDP             X29, X30, [SP,#0x10+var_s0]
.text:0000000000055614                 LDP             X20, X19, [SP+0x10+var_10],#0x20
.text:0000000000055618                 RET
.text:0000000000055618 ; } // starts at 555C0
.text:0000000000055618 ; End of function EAS_HWInit
.text:0000000000055618 ; ---------------------------------------------------------------------------
.text:000000000005561C                 ALIGN 0x20
.text:0000000000055620 ; =============== S U B R O U T I N E =======================================
.text:0000000000055620 ; Attributes: bp-based frame
.text:0000000000055620                 EXPORT EAS_HWMemSet
.text:0000000000055620 EAS_HWMemSet                            ; CODE XREF: .EAS_HWMemSet+C↓j
.text:0000000000055620                                         ; DATA XREF: LOAD:00000000000015A8↑o ...
.text:0000000000055620 var_10          = -0x10
.text:0000000000055620 var_s0          =  0
.text:0000000000055620 ; __unwind {
.text:0000000000055620                 STR             X19, [SP,#-0x10+var_10]!
.text:0000000000055624                 STP             X29, X30, [SP,#0x10+var_s0]
.text:0000000000055628                 ADD             X29, SP, #0x10
.text:000000000005562C                 MOV             X3, X2
.text:0000000000055630                 TBNZ            X2, #0x3F, loc_55650 ; '?'
.text:0000000000055634                 MOV             X2, X3  ; n
.text:0000000000055638                 MOV             X19, X0
.text:000000000005563C                 BL              .memset
.text:0000000000055640                 LDP             X29, X30, [SP,#0x10+var_s0]
.text:0000000000055644                 MOV             X0, X19
.text:0000000000055648                 LDR             X19, [SP+0x10+var_10],#0x20
.text:000000000005564C                 RET
.text:0000000000055650 ; ---------------------------------------------------------------------------
.text:0000000000055650 loc_55650                               ; CODE XREF: EAS_HWMemSet+10↑j
.text:0000000000055650                 MOV             W1, #0x1A54B6E8
.text:0000000000055658                 MOV             W2, #5
.text:000000000005565C                 MOV             W0, WZR
.text:0000000000055660                 BL              .EAS_ReportEx
.text:0000000000055664                 MOV             W0, #0xFF ; status
.text:0000000000055668                 BL              .exit
.text:0000000000055668 ; } // starts at 55620
.text:0000000000055668 ; End of function EAS_HWMemSet
.text:0000000000055668 ; ---------------------------------------------------------------------------
.text:000000000005566C                 ALIGN 0x10
.text:0000000000055670 ; =============== S U B R O U T I N E =======================================
.text:0000000000055670 ; Attributes: bp-based frame
.text:0000000000055670                 EXPORT EAS_HWShutdown
.text:0000000000055670 EAS_HWShutdown                          ; CODE XREF: .EAS_HWShutdown+C↓j
.text:0000000000055670                                         ; DATA XREF: LOAD:0000000000001698↑o ...
.text:0000000000055670 var_s0          =  0
.text:0000000000055670 ; __unwind {
.text:0000000000055670                 STP             X29, X30, [SP,#-0x10+var_s0]!
.text:0000000000055674                 MOV             X29, SP
.text:0000000000055678                 BL              .free
.text:000000000005567C                 MOV             X0, XZR
.text:0000000000055680                 LDP             X29, X30, [SP+var_s0],#0x10
.text:0000000000055684                 RET
.text:0000000000055684 ; } // starts at 55670
.text:0000000000055684 ; End of function EAS_HWShutdown
.text:0000000000055688 ; =============== S U B R O U T I N E =======================================
.text:0000000000055688                 EXPORT EAS_HWMalloc
.text:0000000000055688 EAS_HWMalloc                            ; CODE XREF: .EAS_HWMalloc+C↓j
.text:0000000000055688                                         ; DATA XREF: LOAD:0000000000000DE0↑o ...
.text:0000000000055688 ; __unwind {
.text:0000000000055688                 CMP             X1, #1
.text:000000000005568C                 B.LT            loc_55698
.text:0000000000055690                 MOV             X0, X1  ; size
.text:0000000000055694                 B               .malloc
.text:0000000000055698 ; ---------------------------------------------------------------------------
.text:0000000000055698 loc_55698                               ; CODE XREF: EAS_HWMalloc+4↑j
.text:0000000000055698                 MOV             X0, XZR
.text:000000000005569C                 RET
.text:000000000005569C ; } // starts at 55688
.text:000000000005569C ; End of function EAS_HWMalloc
.text:00000000000556A0 ; =============== S U B R O U T I N E =======================================
.text:00000000000556A0                 EXPORT EAS_HWFree
.text:00000000000556A0 EAS_HWFree                              ; CODE XREF: .EAS_HWFree+C↓j
.text:00000000000556A0                                         ; DATA XREF: LOAD:stru_1680↑o ...
.text:00000000000556A0 ; __unwind {
.text:00000000000556A0                 MOV             X0, X1  ; ptr
.text:00000000000556A4                 B               .free
.text:00000000000556A4 ; } // starts at 556A0
.text:00000000000556A4 ; End of function EAS_HWFree
.text:00000000000556A8 ; =============== S U B R O U T I N E =======================================
.text:00000000000556A8 ; Attributes: bp-based frame
.text:00000000000556A8                 EXPORT EAS_HWMemCpy
.text:00000000000556A8 EAS_HWMemCpy                            ; CODE XREF: .EAS_HWMemCpy+C↓j
.text:00000000000556A8                                         ; DATA XREF: LOAD:0000000000000A68↑o ...
.text:00000000000556A8 var_10          = -0x10
.text:00000000000556A8 var_s0          =  0
.text:00000000000556A8 ; __unwind {
.text:00000000000556A8                 STR             X19, [SP,#-0x10+var_10]!
.text:00000000000556AC                 STP             X29, X30, [SP,#0x10+var_s0]
.text:00000000000556B0                 ADD             X29, SP, #0x10
.text:00000000000556B4                 MOV             X3, X2
.text:00000000000556B8                 TBNZ            X2, #0x3F, loc_556D8 ; '?'
.text:00000000000556BC                 MOV             X2, X3  ; n
.text:00000000000556C0                 MOV             X19, X0
.text:00000000000556C4                 BL              .memcpy
.text:00000000000556C8                 LDP             X29, X30, [SP,#0x10+var_s0]
.text:00000000000556CC                 MOV             X0, X19
.text:00000000000556D0                 LDR             X19, [SP+0x10+var_10],#0x20
.text:00000000000556D4                 RET
.text:00000000000556D8 ; ---------------------------------------------------------------------------
.text:00000000000556D8 loc_556D8                               ; CODE XREF: EAS_HWMemCpy+10↑j
.text:00000000000556D8                 MOV             W1, #0x1A54B6E8
.text:00000000000556E0                 MOV             W0, WZR
.text:00000000000556E4                 MOV             W2, #4
.text:00000000000556E8                 BL              .EAS_ReportEx
.text:00000000000556EC                 MOV             W0, #0xFF ; status
.text:00000000000556F0                 BL              .exit
.text:00000000000556F0 ; } // starts at 556A8
.text:00000000000556F0 ; End of function EAS_HWMemCpy
.text:00000000000556F0 ; ---------------------------------------------------------------------------
.text:00000000000556F4                 ALIGN 8
.text:00000000000556F8 ; =============== S U B R O U T I N E =======================================
.text:00000000000556F8 ; Attributes: bp-based frame
.text:00000000000556F8                 EXPORT EAS_HWMemCmp
.text:00000000000556F8 EAS_HWMemCmp                            ; CODE XREF: .EAS_HWMemCmp+C↓j
.text:00000000000556F8                                         ; DATA XREF: LOAD:0000000000001380↑o ...
.text:00000000000556F8 var_s0          =  0
.text:00000000000556F8 ; __unwind {
.text:00000000000556F8                 STP             X29, X30, [SP,#-0x10+var_s0]!
.text:00000000000556FC                 MOV             X29, SP
.text:0000000000055700                 MOV             X3, X2
.text:0000000000055704                 TBNZ            X2, #0x3F, loc_5571C ; '?'
.text:0000000000055708                 MOV             X2, X3  ; n
.text:000000000005570C                 BL              .memcmp
.text:0000000000055710                 SXTW            X0, W0
.text:0000000000055714                 LDP             X29, X30, [SP+var_s0],#0x10
.text:0000000000055718                 RET
.text:000000000005571C ; ---------------------------------------------------------------------------
.text:000000000005571C loc_5571C                               ; CODE XREF: EAS_HWMemCmp+C↑j
.text:000000000005571C                 MOV             W1, #0x1A54B6E8
.text:0000000000055724                 MOV             W0, WZR
.text:0000000000055728                 MOV             W2, #6
.text:000000000005572C                 BL              .EAS_ReportEx
.text:0000000000055730                 MOV             W0, #0xFF ; status
.text:0000000000055734                 BL              .exit
.text:0000000000055734 ; } // starts at 556F8
.text:0000000000055734 ; End of function EAS_HWMemCmp
.text:0000000000055738 ; =============== S U B R O U T I N E =======================================
.text:0000000000055738                 EXPORT EAS_HWOpenFile
.text:0000000000055738 EAS_HWOpenFile                          ; CODE XREF: .EAS_HWOpenFile+C↓j
.text:0000000000055738                                         ; DATA XREF: LOAD:0000000000000DC8↑o ...
.text:0000000000055738 ; __unwind {
.text:0000000000055738                 CMP             X3, #1
.text:000000000005573C                 STR             XZR, [X2]
.text:0000000000055740                 B.NE            loc_5576C
.text:0000000000055744                 MOV             X8, X0
.text:0000000000055748                 MOV             W9, WZR
.text:000000000005574C                 MOV             X0, #0xFFFFFFFFFFFFFFF2
.text:0000000000055750 loc_55750                               ; CODE XREF: EAS_HWOpenFile+2C↓j
.text:0000000000055750                 LDR             X10, [X8,#0x18]
.text:0000000000055754                 CBZ             X10, loc_55774
.text:0000000000055758                 ADD             X8, X8, #0x20 ; ' '
.text:000000000005575C                 ADD             W9, W9, #1
.text:0000000000055760                 CMP             W9, #0x64 ; 'd'
.text:0000000000055764                 B.CC            loc_55750
.text:0000000000055768                 RET
.text:000000000005576C ; ---------------------------------------------------------------------------
.text:000000000005576C loc_5576C                               ; CODE XREF: EAS_HWOpenFile+8↑j
.text:000000000005576C                 MOV             X0, #0xFFFFFFFFFFFFFFFB
.text:0000000000055770                 RET
.text:0000000000055774 ; ---------------------------------------------------------------------------
.text:0000000000055774 loc_55774                               ; CODE XREF: EAS_HWOpenFile+1C↑j
.text:0000000000055774                 LDR             X9, [X1]
.text:0000000000055778                 MOV             X0, XZR
.text:000000000005577C                 STR             X9, [X8,#0x18]
.text:0000000000055780                 LDR             X9, [X1,#8]
.text:0000000000055784                 STR             X9, [X8]
.text:0000000000055788                 LDR             X9, [X1,#0x10]
.text:000000000005578C                 STR             WZR, [X8,#0x10]
.text:0000000000055790                 STR             X9, [X8,#8]
.text:0000000000055794                 STR             X8, [X2]
.text:0000000000055798                 RET
.text:0000000000055798 ; } // starts at 55738
.text:0000000000055798 ; End of function EAS_HWOpenFile
.text:0000000000055798 ; ---------------------------------------------------------------------------
.text:000000000005579C                 ALIGN 0x20
.text:00000000000557A0 ; =============== S U B R O U T I N E =======================================
.text:00000000000557A0 ; Attributes: bp-based frame
.text:00000000000557A0                 EXPORT EAS_HWReadFile
.text:00000000000557A0 EAS_HWReadFile                          ; CODE XREF: .EAS_HWReadFile+C↓j
.text:00000000000557A0                                         ; DATA XREF: LOAD:0000000000001758↑o ...
.text:00000000000557A0 var_20          = -0x20
.text:00000000000557A0 var_10          = -0x10
.text:00000000000557A0 var_s0          =  0
.text:00000000000557A0 ; __unwind {
.text:00000000000557A0                 STP             X22, X21, [SP,#-0x10+var_20]!
.text:00000000000557A4                 STP             X20, X19, [SP,#0x20+var_10]
.text:00000000000557A8                 STP             X29, X30, [SP,#0x20+var_s0]
.text:00000000000557AC                 ADD             X29, SP, #0x20
.text:00000000000557B0                 LDR             X0, [X1,#0x18]
.text:00000000000557B4                 CBZ             X0, loc_5580C
.text:00000000000557B8                 MOV             X21, X3
.text:00000000000557BC                 TBNZ            X3, #0x3F, loc_55814 ; '?'
.text:00000000000557C0                 LDR             X8, [X1,#8]
.text:00000000000557C4                 MOV             X19, X4
.text:00000000000557C8                 MOV             X20, X1
.text:00000000000557CC                 MOV             X22, X2
.text:00000000000557D0                 BLR             X8
.text:00000000000557D4                 LDR             W2, [X20,#0x10]
.text:00000000000557D8                 SUB             W8, W0, W2
.text:00000000000557DC                 SXTW            X8, W8
.text:00000000000557E0                 CMP             X8, X21
.text:00000000000557E4                 CSEL            X3, X21, X8, GT
.text:00000000000557E8                 TBNZ            X3, #0x3F, loc_55814 ; '?'
.text:00000000000557EC                 CBZ             X3, loc_5581C
.text:00000000000557F0                 LDR             X8, [X20]
.text:00000000000557F4                 MOV             X1, X22
.text:00000000000557F8                 LDR             X0, [X20,#0x18]
.text:00000000000557FC                 BLR             X8
.text:0000000000055800                 LDR             W2, [X20,#0x10]
.text:0000000000055804                 SXTW            X8, W0
.text:0000000000055808                 B               loc_55820
.text:000000000005580C ; ---------------------------------------------------------------------------
.text:000000000005580C loc_5580C                               ; CODE XREF: EAS_HWReadFile+14↑j
.text:000000000005580C                 MOV             X0, #0xFFFFFFFFFFFFFFF5
.text:0000000000055810                 B               loc_55838
.text:0000000000055814 ; ---------------------------------------------------------------------------
.text:0000000000055814 loc_55814                               ; CODE XREF: EAS_HWReadFile+1C↑j
.text:0000000000055814                                         ; EAS_HWReadFile+48↑j
.text:0000000000055814                 MOV             W0, #3
.text:0000000000055818                 B               loc_55838
.text:000000000005581C ; ---------------------------------------------------------------------------
.text:000000000005581C loc_5581C                               ; CODE XREF: EAS_HWReadFile+4C↑j
.text:000000000005581C                 MOV             X8, XZR
.text:0000000000055820 loc_55820                               ; CODE XREF: EAS_HWReadFile+68↑j
.text:0000000000055820                 CMP             X8, X21
.text:0000000000055824                 MOV             W10, #3
.text:0000000000055828                 ADD             W9, W2, W8
.text:000000000005582C                 CSEL            X0, XZR, X10, EQ
.text:0000000000055830                 STR             W9, [X20,#0x10]
.text:0000000000055834                 STR             X8, [X19]
.text:0000000000055838 loc_55838                               ; CODE XREF: EAS_HWReadFile+70↑j
.text:0000000000055838                                         ; EAS_HWReadFile+78↑j
.text:0000000000055838                 LDP             X29, X30, [SP,#0x20+var_s0]
.text:000000000005583C                 LDP             X20, X19, [SP,#0x20+var_10]
.text:0000000000055840                 LDP             X22, X21, [SP+0x20+var_20],#0x30
.text:0000000000055844                 RET
.text:0000000000055844 ; } // starts at 557A0
.text:0000000000055844 ; End of function EAS_HWReadFile
.text:0000000000055848 ; =============== S U B R O U T I N E =======================================
.text:0000000000055848 ; Attributes: bp-based frame
.text:0000000000055848                 EXPORT EAS_HWGetByte
.text:0000000000055848 EAS_HWGetByte                           ; CODE XREF: .EAS_HWGetByte+C↓j
.text:0000000000055848                                         ; DATA XREF: LOAD:0000000000001338↑o ...
.text:0000000000055848 var_10          = -0x10
.text:0000000000055848 var_s0          =  0
.text:0000000000055848 ; __unwind {
.text:0000000000055848                 STP             X20, X19, [SP,#-0x10+var_10]!
.text:000000000005584C                 STP             X29, X30, [SP,#0x10+var_s0]
.text:0000000000055850                 ADD             X29, SP, #0x10
.text:0000000000055854                 LDR             X0, [X1,#0x18]
.text:0000000000055858                 CBZ             X0, loc_558AC
.text:000000000005585C                 LDR             X8, [X1,#8]
.text:0000000000055860                 MOV             X19, X1
.text:0000000000055864                 MOV             X20, X2
.text:0000000000055868                 BLR             X8
.text:000000000005586C                 LDR             W2, [X19,#0x10]
.text:0000000000055870                 CMP             W0, W2
.text:0000000000055874                 B.LE            loc_558B4
.text:0000000000055878                 LDR             X8, [X19]
.text:000000000005587C                 MOV             X1, X20
.text:0000000000055880                 LDR             X0, [X19,#0x18]
.text:0000000000055884                 MOV             W3, #1
.text:0000000000055888                 BLR             X8
.text:000000000005588C                 LDR             W9, [X19,#0x10]
.text:0000000000055890                 CMP             W0, #1
.text:0000000000055894                 MOV             W8, #3
.text:0000000000055898                 CSEL            X8, XZR, X8, EQ
.text:000000000005589C                 ADD             W9, W9, W0
.text:00000000000558A0                 MOV             X0, X8
.text:00000000000558A4                 STR             W9, [X19,#0x10]
.text:00000000000558A8                 B               loc_558B8
.text:00000000000558AC ; ---------------------------------------------------------------------------
.text:00000000000558AC loc_558AC                               ; CODE XREF: EAS_HWGetByte+10↑j
.text:00000000000558AC                 MOV             X0, #0xFFFFFFFFFFFFFFF5
.text:00000000000558B0                 B               loc_558B8
.text:00000000000558B4 ; ---------------------------------------------------------------------------
.text:00000000000558B4 loc_558B4                               ; CODE XREF: EAS_HWGetByte+2C↑j
.text:00000000000558B4                 MOV             W0, #3
.text:00000000000558B8 loc_558B8                               ; CODE XREF: EAS_HWGetByte+60↑j
.text:00000000000558B8                                         ; EAS_HWGetByte+68↑j
.text:00000000000558B8                 LDP             X29, X30, [SP,#0x10+var_s0]
.text:00000000000558BC                 LDP             X20, X19, [SP+0x10+var_10],#0x20
.text:00000000000558C0                 RET
.text:00000000000558C0 ; } // starts at 55848
.text:00000000000558C0 ; End of function EAS_HWGetByte
.text:00000000000558C0 ; ---------------------------------------------------------------------------
.text:00000000000558C4                 ALIGN 8
.text:00000000000558C8 ; =============== S U B R O U T I N E =======================================
.text:00000000000558C8 ; Attributes: bp-based frame
.text:00000000000558C8                 EXPORT EAS_HWGetWord
.text:00000000000558C8 EAS_HWGetWord                           ; CODE XREF: .EAS_HWGetWord+C↓j
.text:00000000000558C8                                         ; DATA XREF: LOAD:00000000000006A8↑o ...
.text:00000000000558C8 var_30          = -0x30
.text:00000000000558C8 var_2C          = -0x2C
.text:00000000000558C8 var_28          = -0x28
.text:00000000000558C8 var_20          = -0x20
.text:00000000000558C8 var_10          = -0x10
.text:00000000000558C8 var_s0          =  0
.text:00000000000558C8 ; __unwind {
.text:00000000000558C8                 SUB             SP, SP, #0x40
.text:00000000000558CC                 STP             X22, X21, [SP,#0x30+var_20]
.text:00000000000558D0                 STP             X20, X19, [SP,#0x30+var_10]
.text:00000000000558D4                 STP             X29, X30, [SP,#0x30+var_s0]
.text:00000000000558D8                 ADD             X29, SP, #0x30
.text:00000000000558DC                 MRS             X22, #3, c13, c0, #2
.text:00000000000558E0                 LDR             X8, [X22,#0x28]
.text:00000000000558E4                 STR             X8, [SP,#0x30+var_28]
.text:00000000000558E8                 LDR             X0, [X1,#0x18]
.text:00000000000558EC                 CBZ             X0, loc_55998
.text:00000000000558F0                 LDR             X8, [X1,#8]
.text:00000000000558F4                 MOV             W20, W3
.text:00000000000558F8                 MOV             X21, X1
.text:00000000000558FC                 MOV             X19, X2
.text:0000000000055900                 BLR             X8
.text:0000000000055904                 LDR             W2, [X21,#0x10]
.text:0000000000055908                 CMP             W0, W2
.text:000000000005590C                 B.LE            loc_55990
.text:0000000000055910                 LDR             X8, [X21]
.text:0000000000055914                 ADD             X1, SP, #0x30+var_2C
.text:0000000000055918                 LDR             X0, [X21,#0x18]
.text:000000000005591C                 MOV             W3, #1
.text:0000000000055920                 BLR             X8
.text:0000000000055924                 LDR             W8, [X21,#0x10]
.text:0000000000055928                 CMP             W0, #1
.text:000000000005592C                 ADD             W8, W8, W0
.text:0000000000055930                 STR             W8, [X21,#0x10]
.text:0000000000055934                 B.NE            loc_55990
.text:0000000000055938                 LDR             X0, [X21,#0x18]
.text:000000000005593C                 CBZ             X0, loc_55998
.text:0000000000055940                 LDR             X8, [X21,#8]
.text:0000000000055944                 BLR             X8
.text:0000000000055948                 LDR             W2, [X21,#0x10]
.text:000000000005594C                 CMP             W0, W2
.text:0000000000055950                 B.LE            loc_55990
.text:0000000000055954                 LDR             X8, [X21]
.text:0000000000055958                 MOV             X1, SP
.text:000000000005595C                 LDR             X0, [X21,#0x18]
.text:0000000000055960                 MOV             W3, #1
.text:0000000000055964                 BLR             X8
.text:0000000000055968                 LDR             W8, [X21,#0x10]
.text:000000000005596C                 CMP             W0, #1
.text:0000000000055970                 ADD             W8, W8, W0
.text:0000000000055974                 STR             W8, [X21,#0x10]
.text:0000000000055978                 B.NE            loc_55990
.text:000000000005597C                 MOV             X0, XZR
.text:0000000000055980                 CBZ             W20, loc_559C0
.text:0000000000055984                 LDRB            W8, [SP,#0x30+var_2C]
.text:0000000000055988                 LDRB            W9, [SP,#0x30+var_30]
.text:000000000005598C                 B               loc_559C8
.text:0000000000055990 ; ---------------------------------------------------------------------------
.text:0000000000055990 loc_55990                               ; CODE XREF: EAS_HWGetWord+44↑j
.text:0000000000055990                                         ; EAS_HWGetWord+6C↑j ...
.text:0000000000055990                 MOV             W0, #3
.text:0000000000055994                 B               loc_5599C
.text:0000000000055998 ; ---------------------------------------------------------------------------
.text:0000000000055998 loc_55998                               ; CODE XREF: EAS_HWGetWord+24↑j
.text:0000000000055998                                         ; EAS_HWGetWord+74↑j
.text:0000000000055998                 MOV             X0, #0xFFFFFFFFFFFFFFF5
.text:000000000005599C loc_5599C                               ; CODE XREF: EAS_HWGetWord+CC↑j
.text:000000000005599C                                         ; EAS_HWGetWord+108↓j
.text:000000000005599C                 LDR             X8, [X22,#0x28]
.text:00000000000559A0                 LDR             X9, [SP,#0x30+var_28]
.text:00000000000559A4                 CMP             X8, X9
.text:00000000000559A8                 B.NE            loc_559D4
.text:00000000000559AC                 LDP             X29, X30, [SP,#0x30+var_s0]
.text:00000000000559B0                 LDP             X20, X19, [SP,#0x30+var_10]
.text:00000000000559B4                 LDP             X22, X21, [SP,#0x30+var_20]
.text:00000000000559B8                 ADD             SP, SP, #0x40 ; '@'
.text:00000000000559BC                 RET
.text:00000000000559C0 ; ---------------------------------------------------------------------------
.text:00000000000559C0 loc_559C0                               ; CODE XREF: EAS_HWGetWord+B8↑j
.text:00000000000559C0                 LDRB            W8, [SP,#0x30+var_30]
.text:00000000000559C4                 LDRB            W9, [SP,#0x30+var_2C]
.text:00000000000559C8 loc_559C8                               ; CODE XREF: EAS_HWGetWord+C4↑j
.text:00000000000559C8                 BFI             W9, W8, #8, #0x18
.text:00000000000559CC                 STRH            W9, [X19]
.text:00000000000559D0                 B               loc_5599C
.text:00000000000559D4 ; ---------------------------------------------------------------------------
.text:00000000000559D4 loc_559D4                               ; CODE XREF: EAS_HWGetWord+E0↑j
.text:00000000000559D4                 BL              .__stack_chk_fail
.text:00000000000559D4 ; } // starts at 558C8
.text:00000000000559D4 ; End of function EAS_HWGetWord
.text:00000000000559D8 ; =============== S U B R O U T I N E =======================================
.text:00000000000559D8 ; Attributes: bp-based frame
.text:00000000000559D8                 EXPORT EAS_HWGetDWord
.text:00000000000559D8 EAS_HWGetDWord                          ; CODE XREF: .EAS_HWGetDWord+C↓j
.text:00000000000559D8                                         ; DATA XREF: LOAD:0000000000001950↑o ...
.text:00000000000559D8 var_38          = -0x38
.text:00000000000559D8 var_34          = -0x34
.text:00000000000559D8 var_30          = -0x30
.text:00000000000559D8 var_2C          = -0x2C
.text:00000000000559D8 var_28          = -0x28
.text:00000000000559D8 var_20          = -0x20
.text:00000000000559D8 var_10          = -0x10
.text:00000000000559D8 var_s0          =  0
.text:00000000000559D8 ; __unwind {
.text:00000000000559D8                 SUB             SP, SP, #0x50
.text:00000000000559DC                 STP             X22, X21, [SP,#0x40+var_20]
.text:00000000000559E0                 STP             X20, X19, [SP,#0x40+var_10]
.text:00000000000559E4                 STP             X29, X30, [SP,#0x40+var_s0]
.text:00000000000559E8                 ADD             X29, SP, #0x40
.text:00000000000559EC                 MRS             X22, #3, c13, c0, #2
.text:00000000000559F0                 LDR             X8, [X22,#0x28]
.text:00000000000559F4                 STR             X8, [SP,#0x40+var_28]
.text:00000000000559F8                 LDR             X0, [X1,#0x18]
.text:00000000000559FC                 CBZ             X0, loc_55B34
.text:0000000000055A00                 LDR             X8, [X1,#8]
.text:0000000000055A04                 MOV             W20, W3
.text:0000000000055A08                 MOV             X21, X1
.text:0000000000055A0C                 MOV             X19, X2
.text:0000000000055A10                 BLR             X8
.text:0000000000055A14                 LDR             W2, [X21,#0x10]
.text:0000000000055A18                 CMP             W0, W2
.text:0000000000055A1C                 B.LE            loc_55B2C
.text:0000000000055A20                 LDR             X8, [X21]
.text:0000000000055A24                 ADD             X1, SP, #0x40+var_2C
.text:0000000000055A28                 LDR             X0, [X21,#0x18]
.text:0000000000055A2C                 MOV             W3, #1
.text:0000000000055A30                 BLR             X8
.text:0000000000055A34                 LDR             W8, [X21,#0x10]
.text:0000000000055A38                 CMP             W0, #1
.text:0000000000055A3C                 ADD             W8, W8, W0
.text:0000000000055A40                 STR             W8, [X21,#0x10]
.text:0000000000055A44                 B.NE            loc_55B2C
.text:0000000000055A48                 LDR             X0, [X21,#0x18]
.text:0000000000055A4C                 CBZ             X0, loc_55B34
.text:0000000000055A50                 LDR             X8, [X21,#8]
.text:0000000000055A54                 BLR             X8
.text:0000000000055A58                 LDR             W2, [X21,#0x10]
.text:0000000000055A5C                 CMP             W0, W2
.text:0000000000055A60                 B.LE            loc_55B2C
.text:0000000000055A64                 LDR             X8, [X21]
.text:0000000000055A68                 ADD             X1, SP, #0x40+var_30
.text:0000000000055A6C                 LDR             X0, [X21,#0x18]
.text:0000000000055A70                 MOV             W3, #1
.text:0000000000055A74                 BLR             X8
.text:0000000000055A78                 LDR             W8, [X21,#0x10]
.text:0000000000055A7C                 CMP             W0, #1
.text:0000000000055A80                 ADD             W8, W8, W0
.text:0000000000055A84                 STR             W8, [X21,#0x10]
.text:0000000000055A88                 B.NE            loc_55B2C
.text:0000000000055A8C                 LDR             X0, [X21,#0x18]
.text:0000000000055A90                 CBZ             X0, loc_55B34
.text:0000000000055A94                 LDR             X8, [X21,#8]
.text:0000000000055A98                 BLR             X8
.text:0000000000055A9C                 LDR             W2, [X21,#0x10]
.text:0000000000055AA0                 CMP             W0, W2
.text:0000000000055AA4                 B.LE            loc_55B2C
.text:0000000000055AA8                 LDR             X8, [X21]
.text:0000000000055AAC                 ADD             X1, SP, #0x40+var_34
.text:0000000000055AB0                 LDR             X0, [X21,#0x18]
.text:0000000000055AB4                 MOV             W3, #1
.text:0000000000055AB8                 BLR             X8
.text:0000000000055ABC                 LDR             W8, [X21,#0x10]
.text:0000000000055AC0                 CMP             W0, #1
.text:0000000000055AC4                 ADD             W8, W8, W0
.text:0000000000055AC8                 STR             W8, [X21,#0x10]
.text:0000000000055ACC                 B.NE            loc_55B2C
.text:0000000000055AD0                 LDR             X0, [X21,#0x18]
.text:0000000000055AD4                 CBZ             X0, loc_55B34
.text:0000000000055AD8                 LDR             X8, [X21,#8]
.text:0000000000055ADC                 BLR             X8
.text:0000000000055AE0                 LDR             W2, [X21,#0x10]
.text:0000000000055AE4                 CMP             W0, W2
.text:0000000000055AE8                 B.LE            loc_55B2C
.text:0000000000055AEC                 LDR             X8, [X21]
.text:0000000000055AF0                 ADD             X1, SP, #0x40+var_38
.text:0000000000055AF4                 LDR             X0, [X21,#0x18]
.text:0000000000055AF8                 MOV             W3, #1
.text:0000000000055AFC                 BLR             X8
.text:0000000000055B00                 LDR             W8, [X21,#0x10]
.text:0000000000055B04                 CMP             W0, #1
.text:0000000000055B08                 ADD             W8, W8, W0
.text:0000000000055B0C                 STR             W8, [X21,#0x10]
.text:0000000000055B10                 B.NE            loc_55B2C
.text:0000000000055B14                 CBZ             W20, loc_55B5C
.text:0000000000055B18                 LDRB            W8, [SP,#0x40+var_2C]
.text:0000000000055B1C                 LDRB            W9, [SP,#0x40+var_30]
.text:0000000000055B20                 LDRB            W10, [SP,#0x40+var_34]
.text:0000000000055B24                 LDRB            W11, [SP,#0x40+var_38]
.text:0000000000055B28                 B               loc_55B6C
.text:0000000000055B2C ; ---------------------------------------------------------------------------
.text:0000000000055B2C loc_55B2C                               ; CODE XREF: EAS_HWGetDWord+44↑j
.text:0000000000055B2C                                         ; EAS_HWGetDWord+6C↑j ...
.text:0000000000055B2C                 MOV             W0, #3
.text:0000000000055B30                 B               loc_55B38
.text:0000000000055B34 ; ---------------------------------------------------------------------------
.text:0000000000055B34 loc_55B34                               ; CODE XREF: EAS_HWGetDWord+24↑j
.text:0000000000055B34                                         ; EAS_HWGetDWord+74↑j ...
.text:0000000000055B34                 MOV             X0, #0xFFFFFFFFFFFFFFF5
.text:0000000000055B38 loc_55B38                               ; CODE XREF: EAS_HWGetDWord+158↑j
.text:0000000000055B38                                         ; EAS_HWGetDWord+1AC↓j
.text:0000000000055B38                 LDR             X8, [X22,#0x28]
.text:0000000000055B3C                 LDR             X9, [SP,#0x40+var_28]
.text:0000000000055B40                 CMP             X8, X9
.text:0000000000055B44                 B.NE            loc_55B88
.text:0000000000055B48                 LDP             X29, X30, [SP,#0x40+var_s0]
.text:0000000000055B4C                 LDP             X20, X19, [SP,#0x40+var_10]
.text:0000000000055B50                 LDP             X22, X21, [SP,#0x40+var_20]
.text:0000000000055B54                 ADD             SP, SP, #0x50 ; 'P'
.text:0000000000055B58                 RET
.text:0000000000055B5C ; ---------------------------------------------------------------------------
.text:0000000000055B5C loc_55B5C                               ; CODE XREF: EAS_HWGetDWord+13C↑j
.text:0000000000055B5C                 LDRB            W8, [SP,#0x40+var_38]
.text:0000000000055B60                 LDRB            W9, [SP,#0x40+var_34]
.text:0000000000055B64                 LDRB            W10, [SP,#0x40+var_30]
.text:0000000000055B68                 LDRB            W11, [SP,#0x40+var_2C]
.text:0000000000055B6C loc_55B6C                               ; CODE XREF: EAS_HWGetDWord+150↑j
.text:0000000000055B6C                 LSL             X8, X8, #0x18
.text:0000000000055B70                 BFI             X8, X9, #0x10, #8
.text:0000000000055B74                 BFI             X8, X10, #8, #8
.text:0000000000055B78                 ORR             X8, X8, X11
.text:0000000000055B7C                 MOV             X0, XZR
.text:0000000000055B80                 STR             X8, [X19]
.text:0000000000055B84                 B               loc_55B38
.text:0000000000055B88 ; ---------------------------------------------------------------------------
.text:0000000000055B88 loc_55B88                               ; CODE XREF: EAS_HWGetDWord+16C↑j
.text:0000000000055B88                 BL              .__stack_chk_fail
.text:0000000000055B88 ; } // starts at 559D8
.text:0000000000055B88 ; End of function EAS_HWGetDWord
.text:0000000000055B88 ; ---------------------------------------------------------------------------
.text:0000000000055B8C                 ALIGN 0x10
.text:0000000000055B90 ; =============== S U B R O U T I N E =======================================
.text:0000000000055B90                 EXPORT EAS_HWFilePos
.text:0000000000055B90 EAS_HWFilePos                           ; CODE XREF: .EAS_HWFilePos+C↓j
.text:0000000000055B90                                         ; DATA XREF: LOAD:00000000000018F0↑o ...
.text:0000000000055B90 ; __unwind {
.text:0000000000055B90                 LDR             X8, [X1,#0x18]
.text:0000000000055B94                 CBZ             X8, loc_55BA8
.text:0000000000055B98                 LDRSW           X8, [X1,#0x10]
.text:0000000000055B9C                 MOV             X0, XZR
.text:0000000000055BA0                 STR             X8, [X2]
.text:0000000000055BA4                 RET
.text:0000000000055BA8 ; ---------------------------------------------------------------------------
.text:0000000000055BA8 loc_55BA8                               ; CODE XREF: EAS_HWFilePos+4↑j
.text:0000000000055BA8                 MOV             X0, #0xFFFFFFFFFFFFFFF5
.text:0000000000055BAC                 RET
.text:0000000000055BAC ; } // starts at 55B90
.text:0000000000055BAC ; End of function EAS_HWFilePos
.text:0000000000055BB0 ; =============== S U B R O U T I N E =======================================
.text:0000000000055BB0 ; Attributes: bp-based frame
.text:0000000000055BB0                 EXPORT EAS_HWFileSeek
.text:0000000000055BB0 EAS_HWFileSeek                          ; CODE XREF: .EAS_HWFileSeek+C↓j
.text:0000000000055BB0                                         ; DATA XREF: LOAD:0000000000000438↑o ...
.text:0000000000055BB0 var_10          = -0x10
.text:0000000000055BB0 var_s0          =  0
.text:0000000000055BB0 ; __unwind {
.text:0000000000055BB0                 STP             X20, X19, [SP,#-0x10+var_10]!
.text:0000000000055BB4                 STP             X29, X30, [SP,#0x10+var_s0]
.text:0000000000055BB8                 ADD             X29, SP, #0x10
.text:0000000000055BBC                 LDR             X0, [X1,#0x18]
.text:0000000000055BC0                 CBZ             X0, loc_55BEC
.text:0000000000055BC4                 MOV             X20, X2
.text:0000000000055BC8                 TBNZ            X2, #0x3F, loc_55BE4 ; '?'
.text:0000000000055BCC                 LDR             X8, [X1,#8]
.text:0000000000055BD0                 MOV             X19, X1
.text:0000000000055BD4                 BLR             X8
.text:0000000000055BD8                 SXTW            X8, W0
.text:0000000000055BDC                 CMP             X8, X20
.text:0000000000055BE0                 B.GE            loc_55BF4
.text:0000000000055BE4 loc_55BE4                               ; CODE XREF: EAS_HWFileSeek+18↑j
.text:0000000000055BE4                 MOV             X0, #0xFFFFFFFFFFFFFFFA
.text:0000000000055BE8                 B               loc_55BFC
.text:0000000000055BEC ; ---------------------------------------------------------------------------
.text:0000000000055BEC loc_55BEC                               ; CODE XREF: EAS_HWFileSeek+10↑j
.text:0000000000055BEC                 MOV             X0, #0xFFFFFFFFFFFFFFF5
.text:0000000000055BF0                 B               loc_55BFC
.text:0000000000055BF4 ; ---------------------------------------------------------------------------
.text:0000000000055BF4 loc_55BF4                               ; CODE XREF: EAS_HWFileSeek+30↑j
.text:0000000000055BF4                 MOV             X0, XZR
.text:0000000000055BF8                 STR             W20, [X19,#0x10]
.text:0000000000055BFC loc_55BFC                               ; CODE XREF: EAS_HWFileSeek+38↑j
.text:0000000000055BFC                                         ; EAS_HWFileSeek+40↑j
.text:0000000000055BFC                 LDP             X29, X30, [SP,#0x10+var_s0]
.text:0000000000055C00                 LDP             X20, X19, [SP+0x10+var_10],#0x20
.text:0000000000055C04                 RET
.text:0000000000055C04 ; } // starts at 55BB0
.text:0000000000055C04 ; End of function EAS_HWFileSeek
.text:0000000000055C08 ; =============== S U B R O U T I N E =======================================
.text:0000000000055C08 ; Attributes: bp-based frame
.text:0000000000055C08                 EXPORT EAS_HWFileSeekOfs
.text:0000000000055C08 EAS_HWFileSeekOfs                       ; CODE XREF: .EAS_HWFileSeekOfs+C↓j
.text:0000000000055C08                                         ; DATA XREF: LOAD:0000000000000D20↑o ...
.text:0000000000055C08 var_10          = -0x10
.text:0000000000055C08 var_s0          =  0
.text:0000000000055C08 ; __unwind {
.text:0000000000055C08                 STP             X20, X19, [SP,#-0x10+var_10]!
.text:0000000000055C0C                 STP             X29, X30, [SP,#0x10+var_s0]
.text:0000000000055C10                 ADD             X29, SP, #0x10
.text:0000000000055C14                 LDR             X0, [X1,#0x18]
.text:0000000000055C18                 CBZ             X0, loc_55C44
.text:0000000000055C1C                 LDRSW           X8, [X1,#0x10]
.text:0000000000055C20                 MOV             X19, X1
.text:0000000000055C24                 ADDS            X20, X8, X2
.text:0000000000055C28                 B.MI            loc_55C3C
.text:0000000000055C2C                 LDR             X8, [X19,#8]
.text:0000000000055C30                 BLR             X8
.text:0000000000055C34                 CMP             X20, W0,SXTW
.text:0000000000055C38                 B.LE            loc_55C4C
.text:0000000000055C3C loc_55C3C                               ; CODE XREF: EAS_HWFileSeekOfs+20↑j
.text:0000000000055C3C                 MOV             X0, #0xFFFFFFFFFFFFFFFA
.text:0000000000055C40                 B               loc_55C54
.text:0000000000055C44 ; ---------------------------------------------------------------------------
.text:0000000000055C44 loc_55C44                               ; CODE XREF: EAS_HWFileSeekOfs+10↑j
.text:0000000000055C44                 MOV             X0, #0xFFFFFFFFFFFFFFF5
.text:0000000000055C48                 B               loc_55C54
.text:0000000000055C4C ; ---------------------------------------------------------------------------
.text:0000000000055C4C loc_55C4C                               ; CODE XREF: EAS_HWFileSeekOfs+30↑j
.text:0000000000055C4C                 MOV             X0, XZR
.text:0000000000055C50                 STR             W20, [X19,#0x10]
.text:0000000000055C54 loc_55C54                               ; CODE XREF: EAS_HWFileSeekOfs+38↑j
.text:0000000000055C54                                         ; EAS_HWFileSeekOfs+40↑j
.text:0000000000055C54                 LDP             X29, X30, [SP,#0x10+var_s0]
.text:0000000000055C58                 LDP             X20, X19, [SP+0x10+var_10],#0x20
.text:0000000000055C5C                 RET
.text:0000000000055C5C ; } // starts at 55C08
.text:0000000000055C5C ; End of function EAS_HWFileSeekOfs
.text:0000000000055C60 ; =============== S U B R O U T I N E =======================================
.text:0000000000055C60                 EXPORT EAS_HWDupHandle
.text:0000000000055C60 EAS_HWDupHandle                         ; CODE XREF: .EAS_HWDupHandle+C↓j
.text:0000000000055C60                                         ; DATA XREF: LOAD:0000000000000738↑o ...
.text:0000000000055C60 ; __unwind {
.text:0000000000055C60                 LDR             X9, [X1,#0x18]
.text:0000000000055C64                 CBZ             X9, loc_55C90
.text:0000000000055C68                 MOV             W10, WZR
.text:0000000000055C6C                 MOV             X8, #0xFFFFFFFFFFFFFFF2
.text:0000000000055C70 loc_55C70                               ; CODE XREF: EAS_HWDupHandle+24↓j
.text:0000000000055C70                 LDR             X11, [X0,#0x18]
.text:0000000000055C74                 CBZ             X11, loc_55C9C
.text:0000000000055C78                 ADD             X0, X0, #0x20 ; ' '
.text:0000000000055C7C                 ADD             W10, W10, #1
.text:0000000000055C80                 CMP             W10, #0x64 ; 'd'
.text:0000000000055C84                 B.CC            loc_55C70
.text:0000000000055C88                 MOV             X0, X8
.text:0000000000055C8C                 RET
.text:0000000000055C90 ; ---------------------------------------------------------------------------
.text:0000000000055C90 loc_55C90                               ; CODE XREF: EAS_HWDupHandle+4↑j
.text:0000000000055C90                 MOV             X8, #0xFFFFFFFFFFFFFFF5
.text:0000000000055C94                 MOV             X0, X8
.text:0000000000055C98                 RET
.text:0000000000055C9C ; ---------------------------------------------------------------------------
.text:0000000000055C9C loc_55C9C                               ; CODE XREF: EAS_HWDupHandle+14↑j
.text:0000000000055C9C                 STR             X9, [X0,#0x18]
.text:0000000000055CA0                 LDR             W8, [X1,#0x10]
.text:0000000000055CA4                 STR             W8, [X0,#0x10]
.text:0000000000055CA8                 LDR             X8, [X1]
.text:0000000000055CAC                 STR             X8, [X0]
.text:0000000000055CB0                 LDR             X9, [X1,#8]
.text:0000000000055CB4                 STR             X9, [X0,#8]
.text:0000000000055CB8                 STR             X0, [X2]
.text:0000000000055CBC                 MOV             X0, XZR
.text:0000000000055CC0                 RET
.text:0000000000055CC0 ; } // starts at 55C60
.text:0000000000055CC0 ; End of function EAS_HWDupHandle
.text:0000000000055CC0 ; ---------------------------------------------------------------------------
.text:0000000000055CC4                 ALIGN 8
.text:0000000000055CC8 ; =============== S U B R O U T I N E =======================================
.text:0000000000055CC8                 EXPORT EAS_HWCloseFile
.text:0000000000055CC8 EAS_HWCloseFile                         ; CODE XREF: .EAS_HWCloseFile+C↓j
.text:0000000000055CC8                                         ; DATA XREF: LOAD:00000000000018D8↑o ...
.text:0000000000055CC8 ; __unwind {
.text:0000000000055CC8                 LDR             X8, [X1,#0x18]
.text:0000000000055CCC                 CBZ             X8, loc_55CDC
.text:0000000000055CD0                 MOV             X0, XZR
.text:0000000000055CD4                 STR             XZR, [X1,#0x18]
.text:0000000000055CD8                 RET
.text:0000000000055CDC ; ---------------------------------------------------------------------------
.text:0000000000055CDC loc_55CDC                               ; CODE XREF: EAS_HWCloseFile+4↑j
.text:0000000000055CDC                 MOV             X0, #0xFFFFFFFFFFFFFFF5
.text:0000000000055CE0                 RET
.text:0000000000055CE0 ; } // starts at 55CC8
.text:0000000000055CE0 ; End of function EAS_HWCloseFile
.text:0000000000055CE0 ; ---------------------------------------------------------------------------
.text:0000000000055CE4                 ALIGN 8
.text:0000000000055CE8 ; =============== S U B R O U T I N E =======================================
.text:0000000000055CE8 ; Attributes: bp-based frame
.text:0000000000055CE8                 EXPORT EAS_HWVibrate
.text:0000000000055CE8 EAS_HWVibrate                           ; CODE XREF: .EAS_HWVibrate+C↓j
.text:0000000000055CE8                                         ; DATA XREF: LOAD:00000000000019B0↑o ...
.text:0000000000055CE8 var_s0          =  0
.text:0000000000055CE8 ; __unwind {
.text:0000000000055CE8                 STP             X29, X30, [SP,#-0x10+var_s0]!
.text:0000000000055CEC                 MOV             X29, SP
.text:0000000000055CF0                 MOV             W3, W1
.text:0000000000055CF4                 MOV             W1, #0x1A54B6E8
.text:0000000000055CFC                 MOV             W0, WZR
.text:0000000000055D00                 MOV             W2, #1
.text:0000000000055D04                 BL              .EAS_ReportEx
.text:0000000000055D08                 MOV             X0, XZR
.text:0000000000055D0C                 LDP             X29, X30, [SP+var_s0],#0x10
.text:0000000000055D10                 RET
.text:0000000000055D10 ; } // starts at 55CE8
.text:0000000000055D10 ; End of function EAS_HWVibrate
.text:0000000000055D10 ; ---------------------------------------------------------------------------
.text:0000000000055D14                 ALIGN 8
.text:0000000000055D18 ; =============== S U B R O U T I N E =======================================
.text:0000000000055D18 ; Attributes: bp-based frame
.text:0000000000055D18                 EXPORT EAS_HWLED
.text:0000000000055D18 EAS_HWLED                               ; CODE XREF: .EAS_HWLED+C↓j
.text:0000000000055D18                                         ; DATA XREF: LOAD:00000000000011B8↑o ...
.text:0000000000055D18 var_s0          =  0
.text:0000000000055D18 ; __unwind {
.text:0000000000055D18                 STP             X29, X30, [SP,#-0x10+var_s0]!
.text:0000000000055D1C                 MOV             X29, SP
.text:0000000000055D20                 MOV             W3, W1
.text:0000000000055D24                 MOV             W1, #0x1A54B6E8
.text:0000000000055D2C                 MOV             W0, WZR
.text:0000000000055D30                 MOV             W2, #2
.text:0000000000055D34                 BL              .EAS_ReportEx
.text:0000000000055D38                 MOV             X0, XZR
.text:0000000000055D3C                 LDP             X29, X30, [SP+var_s0],#0x10
.text:0000000000055D40                 RET
.text:0000000000055D40 ; } // starts at 55D18
.text:0000000000055D40 ; End of function EAS_HWLED
.text:0000000000055D40 ; ---------------------------------------------------------------------------
.text:0000000000055D44                 ALIGN 8
.text:0000000000055D48 ; =============== S U B R O U T I N E =======================================
.text:0000000000055D48 ; Attributes: bp-based frame
.text:0000000000055D48                 EXPORT EAS_HWBackLight
.text:0000000000055D48 EAS_HWBackLight                         ; CODE XREF: .EAS_HWBackLight+C↓j
.text:0000000000055D48                                         ; DATA XREF: LOAD:00000000000017D0↑o ...
.text:0000000000055D48 var_s0          =  0
.text:0000000000055D48 ; __unwind {
.text:0000000000055D48                 STP             X29, X30, [SP,#-0x10+var_s0]!
.text:0000000000055D4C                 MOV             X29, SP
.text:0000000000055D50                 MOV             W3, W1
.text:0000000000055D54                 MOV             W1, #0x1A54B6E8
.text:0000000000055D5C                 MOV             W0, WZR
.text:0000000000055D60                 MOV             W2, #3
.text:0000000000055D64                 BL              .EAS_ReportEx
.text:0000000000055D68                 MOV             X0, XZR
.text:0000000000055D6C                 LDP             X29, X30, [SP+var_s0],#0x10
.text:0000000000055D70                 RET
.text:0000000000055D70 ; } // starts at 55D48
.text:0000000000055D70 ; End of function EAS_HWBackLight
.text:0000000000055D70 ; ---------------------------------------------------------------------------
.text:0000000000055D74                 ALIGN 8
.text:0000000000055D78 ; =============== S U B R O U T I N E =======================================
.text:0000000000055D78                 EXPORT EAS_HWYield
.text:0000000000055D78 EAS_HWYield                             ; CODE XREF: .EAS_HWYield+C↓j
.text:0000000000055D78                                         ; DATA XREF: LOAD:0000000000001398↑o ...
.text:0000000000055D78 ; __unwind {
.text:0000000000055D78                 MOV             W0, WZR
.text:0000000000055D7C                 RET
.text:0000000000055D7C ; } // starts at 55D78
.text:0000000000055D7C ; End of function EAS_HWYield
.text:0000000000055D80 ; =============== S U B R O U T I N E =======================================
.text:0000000000055D80 ; Attributes: bp-based frame
.text:0000000000055D80                 EXPORT EAS_ReportEx
.text:0000000000055D80 EAS_ReportEx                            ; CODE XREF: .EAS_ReportEx+C↓j
.text:0000000000055D80                                         ; DATA XREF: LOAD:0000000000001BD8↑o ...
.text:0000000000055D80 var_148         = -0x148
.text:0000000000055D80 var_140         = -0x140
.text:0000000000055D80 var_120         = -0x120
.text:0000000000055D80 var_100         = -0x100
.text:0000000000055D80 var_E0          = -0xE0
.text:0000000000055D80 var_B8          = -0xB8
.text:0000000000055D80 var_B0          = -0xB0
.text:0000000000055D80 var_A0          = -0xA0
.text:0000000000055D80 var_90          = -0x90
.text:0000000000055D80 arg             = -0x70
.text:0000000000055D80 var_48          = -0x48
.text:0000000000055D80 var_38          = -0x38
.text:0000000000055D80 var_20          = -0x20
.text:0000000000055D80 var_10          = -0x10
.text:0000000000055D80 var_s0          =  0
.text:0000000000055D80 ; __unwind {
.text:0000000000055D80                 SUB             SP, SP, #0x160
.text:0000000000055D84                 STR             X28, [SP,#0x150+var_20]
.text:0000000000055D88                 STP             X20, X19, [SP,#0x150+var_10]
.text:0000000000055D8C                 STP             X29, X30, [SP,#0x150+var_s0]
.text:0000000000055D90                 ADD             X29, SP, #0x150
.text:0000000000055D94                 MRS             X19, #3, c13, c0, #2
.text:0000000000055D98                 STP             Q6, Q7, [SP,#0x150+var_E0]
.text:0000000000055D9C                 STP             Q4, Q5, [SP,#0x150+var_100]
.text:0000000000055DA0                 ADRP            X10, #dword_574C8@PAGE
.text:0000000000055DA4                 STP             Q2, Q3, [SP,#0x150+var_120]
.text:0000000000055DA8                 STP             Q0, Q1, [SP,#0x150+var_140]
.text:0000000000055DAC                 STP             X6, X7, [SP,#0x150+var_A0]
.text:0000000000055DB0                 STP             X4, X5, [SP,#0x150+var_B0]
.text:0000000000055DB4                 STR             X3, [SP,#0x150+var_B8]
.text:0000000000055DB8                 LDR             X9, [X19,#0x28]
.text:0000000000055DBC                 STR             X9, [SP,#0x150+var_148]
.text:0000000000055DC0                 LDR             W9, [X10,#dword_574C8@PAGEOFF]
.text:0000000000055DC4                 CMP             W9, W0
.text:0000000000055DC8                 B.LT            loc_55E28
.text:0000000000055DCC                 ADRP            X9, #debugMessages_ptr@PAGE
.text:0000000000055DD0                 MOV             W8, W2
.text:0000000000055DD4                 MOV             X2, X1
.text:0000000000055DD8                 LDR             X9, [X9,#debugMessages_ptr@PAGEOFF]
.text:0000000000055DDC                 MOV             W1, W0
.text:0000000000055DE0                 LDR             X9, [X9,#(off_57070 - 0x57060)] ; "eas_mdls.c[2561]: #Instruments: %u\n"
.text:0000000000055DE4                 CBZ             X9, loc_55E18
.text:0000000000055DE8                 ADRP            X10, #debugMessages_ptr@PAGE
.text:0000000000055DEC                 SUB             X9, X29, #-var_48
.text:0000000000055DF0                 LDR             X10, [X10,#debugMessages_ptr@PAGEOFF]
.text:0000000000055DF4 loc_55DF4                               ; CODE XREF: EAS_ReportEx+94↓j
.text:0000000000055DF4                 LDR             X11, [X10]
.text:0000000000055DF8                 CMP             X11, X2
.text:0000000000055DFC                 B.NE            loc_55E0C
.text:0000000000055E00                 LDR             W11, [X10,#8]
.text:0000000000055E04                 CMP             W11, W8
.text:0000000000055E08                 B.EQ            loc_55E4C
.text:0000000000055E0C loc_55E0C                               ; CODE XREF: EAS_ReportEx+7C↑j
.text:0000000000055E0C                 LDR             X11, [X10,#0x28] ; "eas_mdls.c[2562]: #Regions: %u\n"
.text:0000000000055E10                 ADD             X10, X10, #0x18
.text:0000000000055E14                 CBNZ            X11, loc_55DF4
.text:0000000000055E18 loc_55E18                               ; CODE XREF: EAS_ReportEx+64↑j
.text:0000000000055E18                 ADRP            X0, #aUnrecognizedEr@PAGE ; "Unrecognized error: Severity=%d; HashCo"...
.text:0000000000055E1C                 ADD             X0, X0, #aUnrecognizedEr@PAGEOFF ; "Unrecognized error: Severity=%d; HashCo"...
.text:0000000000055E20                 MOV             W3, W8
.text:0000000000055E24                 BL              .printf
.text:0000000000055E28 loc_55E28                               ; CODE XREF: EAS_ReportEx+48↑j
.text:0000000000055E28                                         ; EAS_ReportEx+120↓j ...
.text:0000000000055E28                 LDR             X8, [X19,#0x28]
.text:0000000000055E2C                 LDR             X9, [SP,#0x150+var_148]
.text:0000000000055E30                 CMP             X8, X9
.text:0000000000055E34                 B.NE            loc_55EC8
.text:0000000000055E38                 LDP             X29, X30, [SP,#0x150+var_s0]
.text:0000000000055E3C                 LDP             X20, X19, [SP,#0x150+var_10]
.text:0000000000055E40                 LDR             X28, [SP,#0x150+var_20]
.text:0000000000055E44                 ADD             SP, SP, #0x160
.text:0000000000055E48                 RET
.text:0000000000055E4C ; ---------------------------------------------------------------------------
.text:0000000000055E4C loc_55E4C                               ; CODE XREF: EAS_ReportEx+88↑j
.text:0000000000055E4C                 ADRP            X20, #qword_605E0@PAGE
.text:0000000000055E50                 ADD             X8, SP, #0x150+var_B8
.text:0000000000055E54                 MOV             X11, #0xFFFFFFFFFFFFFFD8
.text:0000000000055E58                 ADD             X12, X8, #0x28 ; '('
.text:0000000000055E5C                 LDR             X0, [X20,#qword_605E0@PAGEOFF] ; s
.text:0000000000055E60                 ADD             X14, SP, #0x150+var_140
.text:0000000000055E64                 LDR             X8, [X10,#0x10] ; "eas_mdls.c[2561]: #Instruments: %u\n"
.text:0000000000055E68                 MOVK            X11, #0xFF80,LSL#32
.text:0000000000055E6C                 ADD             X13, X29, #0x10
.text:0000000000055E70                 ADD             X10, X14, #0x80
.text:0000000000055E74                 STP             X13, X12, [X29,#var_48]
.text:0000000000055E78                 STP             X10, X11, [X29,#var_38]
.text:0000000000055E7C                 CBZ             X0, loc_55EB0
.text:0000000000055E80                 LDP             Q1, Q0, [X9]
.text:0000000000055E84                 SUB             X2, X29, #-arg ; arg
.text:0000000000055E88                 MOV             X1, X8  ; format
.text:0000000000055E8C                 STP             Q1, Q0, [X29,#arg]
.text:0000000000055E90                 BL              .vfprintf
.text:0000000000055E94                 ADRP            X8, #flush_ptr@PAGE
.text:0000000000055E98                 LDR             X8, [X8,#flush_ptr@PAGEOFF]
.text:0000000000055E9C                 LDR             W8, [X8]
.text:0000000000055EA0                 CBZ             W8, loc_55E28
.text:0000000000055EA4                 LDR             X0, [X20,#qword_605E0@PAGEOFF] ; stream
.text:0000000000055EA8                 BL              .fflush
.text:0000000000055EAC                 B               loc_55E28
.text:0000000000055EB0 ; ---------------------------------------------------------------------------
.text:0000000000055EB0 loc_55EB0                               ; CODE XREF: EAS_ReportEx+FC↑j
.text:0000000000055EB0                 LDP             Q1, Q0, [X9]
.text:0000000000055EB4                 SUB             X1, X29, #-var_90 ; arg
.text:0000000000055EB8                 MOV             X0, X8  ; format
.text:0000000000055EBC                 STP             Q1, Q0, [X29,#var_90]
.text:0000000000055EC0                 BL              .vprintf
.text:0000000000055EC4                 B               loc_55E28
.text:0000000000055EC8 ; ---------------------------------------------------------------------------
.text:0000000000055EC8 loc_55EC8                               ; CODE XREF: EAS_ReportEx+B4↑j
.text:0000000000055EC8                 BL              .__stack_chk_fail
.text:0000000000055EC8 ; } // starts at 55D80
.text:0000000000055EC8 ; End of function EAS_ReportEx
.text:0000000000055EC8 ; ---------------------------------------------------------------------------
.text:0000000000055ECC                 ALIGN 0x10
.text:0000000000055ED0 ; =============== S U B R O U T I N E =======================================
.text:0000000000055ED0                 EXPORT EAS_SetDebugLevel
.text:0000000000055ED0 EAS_SetDebugLevel                       ; DATA XREF: LOAD:0000000000000B88↑o
.text:0000000000055ED0 ; __unwind {
.text:0000000000055ED0                 ADRP            X8, #dword_574C8@PAGE
.text:0000000000055ED4                 STR             W0, [X8,#dword_574C8@PAGEOFF]
.text:0000000000055ED8                 RET
.text:0000000000055ED8 ; } // starts at 55ED0
.text:0000000000055ED8 ; End of function EAS_SetDebugLevel
.text:0000000000055ED8 ; ---------------------------------------------------------------------------
.text:0000000000055EDC                 ALIGN 0x20
.text:0000000000055EE0 ; =============== S U B R O U T I N E =======================================
.text:0000000000055EE0                 EXPORT EAS_SetDebugFile
.text:0000000000055EE0 EAS_SetDebugFile                        ; DATA XREF: LOAD:0000000000001350↑o
.text:0000000000055EE0 ; __unwind {
.text:0000000000055EE0                 ADRP            X9, #flush_ptr@PAGE
.text:0000000000055EE4                 ADRP            X8, #qword_605E0@PAGE
.text:0000000000055EE8                 LDR             X9, [X9,#flush_ptr@PAGEOFF]
.text:0000000000055EEC                 STR             X0, [X8,#qword_605E0@PAGEOFF]
.text:0000000000055EF0                 STR             W1, [X9]
.text:0000000000055EF4                 RET
.text:0000000000055EF4 ; } // starts at 55EE0
.text:0000000000055EF4 ; End of function EAS_SetDebugFile
.text:0000000000055EF4 ; .text         ends
