.rodata:00000000000072E3                                         ; DATA XREF: .text:000000000000ED00↓o
.rodata:00000000000072E3                                         ; .text:000000000000ED10↓o
.rodata:0000000000007371                                         ; DATA XREF: .text:loc_ED3C↓o
.rodata:0000000000007371                                         ; .text:000000000000ED4C↓o
.rodata:00000000000074ED aGridHeight     DCB "grid-height",0     ; DATA XREF: .text:000000000000E6F8↓o
.rodata:00000000000074ED                                         ; .text:000000000000E6FC↓o ...
.rodata:00000000000075C6                                         ; DATA XREF: .text:000000000000ED6C↓o
.rodata:00000000000075C6                                         ; .text:000000000000ED7C↓o
.rodata:0000000000007844                                         ; DATA XREF: .text:000000000000E5B8↓o
.rodata:0000000000007844                                         ; .text:000000000000E5C0↓o
.rodata:0000000000007858                                         ; DATA XREF: .text:loc_EC64↓o
.rodata:0000000000007858                                         ; .text:000000000000EC74↓o
.rodata:0000000000007894 aS              DCB "%s",0              ; DATA XREF: .text:000000000000EC6C↓o
.rodata:0000000000007894                                         ; .text:000000000000EC7C↓o ...
.rodata:0000000000007897                                         ; DATA XREF: .text:loc_ED84↓o
.rodata:0000000000007897                                         ; .text:000000000000ED94↓o
.rodata:0000000000007AA7                                         ; DATA XREF: .text:loc_ED60↓o
.rodata:0000000000007AA7                                         ; .text:000000000000ED70↓o
.rodata:0000000000007AE5                                         ; DATA XREF: .text:000000000000EB04↓o
.rodata:0000000000007AE5                                         ; .text:000000000000EB20↓o
.rodata:0000000000007BFB aHeight         DCB "height",0          ; DATA XREF: .text:000000000000E648↓o
.rodata:0000000000007BFB                                         ; .text:000000000000E64C↓o ...
.rodata:0000000000007C02                                         ; DATA XREF: .text:000000000000E6C0↓o
.rodata:0000000000007C02                                         ; .text:000000000000E6C4↓o ...
.rodata:0000000000007C97 aId             DCB "id",0              ; DATA XREF: .text:000000000000E618↓o
.rodata:0000000000007C97                                         ; .text:000000000000E620↓o ...
.rodata:0000000000007C9A                                         ; DATA XREF: .text:000000000000ED24↓o
.rodata:0000000000007C9A                                         ; .text:000000000000ED34↓o
.rodata:0000000000007D28                                         ; DATA XREF: .text:000000000000E850↓o
.rodata:0000000000007D28                                         ; .text:000000000000E858↓o ...
.rodata:0000000000007E2A aRole           DCB "role",0            ; DATA XREF: .text:000000000000EBD8↓o
.rodata:0000000000007E2A                                         ; .text:000000000000EBE0↓o ...
.rodata:0000000000007F93                                         ; DATA XREF: .text:000000000000EDB4↓o
.rodata:0000000000007F93                                         ; .text:000000000000EDC4↓o
.rodata:000000000000801D                                         ; DATA XREF: .text:000000000000E718↓o
.rodata:000000000000801D                                         ; .text:000000000000E720↓o
.rodata:000000000000812B                                         ; DATA XREF: .text:000000000000EC94↓o
.rodata:000000000000812B                                         ; .text:000000000000ECA4↓o
.rodata:00000000000081AC aGridEndId      DCB "grid_end_id",0     ; DATA XREF: .text:000000000000EB9C↓o
.rodata:00000000000081AC                                         ; .text:000000000000EBA4↓o ...
.rodata:0000000000008314                                         ; DATA XREF: .text:000000000000E8B0↓o
.rodata:0000000000008314                                         ; .text:000000000000E8B8↓o
.rodata:00000000000083CF                                         ; DATA XREF: .text:loc_ECF4↓o
.rodata:00000000000083CF                                         ; .text:000000000000ED04↓o
.rodata:0000000000008405                                         ; DATA XREF: .text:000000000000ED48↓o
.rodata:0000000000008405                                         ; .text:000000000000ED58↓o
.rodata:00000000000085AA aSliceHeight    DCB "slice-height",0    ; DATA XREF: .text:000000000000E678↓o
.rodata:00000000000085AA                                         ; .text:000000000000E67C↓o ...
.rodata:00000000000085B7 aGridWidth      DCB "grid-width",0      ; DATA XREF: .text:000000000000E6DC↓o
.rodata:00000000000085B7                                         ; .text:000000000000E6E0↓o ...
.rodata:000000000000868F aInputFd        DCB "input-fd",0        ; DATA XREF: .text:000000000000E568↓o
.rodata:000000000000868F                                         ; .text:000000000000E570↓o
.rodata:0000000000008698                                         ; DATA XREF: .text:loc_EDA8↓o
.rodata:0000000000008698                                         ; .text:000000000000EDB8↓o
.rodata:00000000000086CA aGridRows       DCB "grid-rows",0       ; DATA XREF: .text:000000000000EB40↓o
.rodata:00000000000086CA                                         ; .text:000000000000EB48↓o ...
.rodata:0000000000008A08                                         ; DATA XREF: .text:loc_EC88↓o
.rodata:0000000000008A08                                         ; .text:000000000000EC98↓o
.rodata:0000000000008A31                                         ; DATA XREF: .text:000000000000ED90↓o
.rodata:0000000000008A31                                         ; .text:000000000000EDA0↓o
.rodata:0000000000008B28 aSet            DCB "set",0             ; DATA XREF: .text:000000000000E588↓o
.rodata:0000000000008B28                                         ; .text:000000000000E594↓o ...
.rodata:0000000000008B2C                                         ; DATA XREF: .text:loc_ECAC↓o
.rodata:0000000000008B2C                                         ; .text:000000000000ECBC↓o
.rodata:0000000000008CDE                                         ; DATA XREF: .text:000000000000ECB8↓o
.rodata:0000000000008CDE                                         ; .text:000000000000ECC8↓o
.rodata:0000000000008E34                                         ; DATA XREF: .text:loc_E88C↓o
.rodata:0000000000008E34                                         ; .text:000000000000E894↓o
.rodata:0000000000008E50 aGridStartId    DCB "grid_start_id",0   ; DATA XREF: .text:000000000000EB8C↓o
.rodata:0000000000008E50                                         ; .text:000000000000EB90↓o ...
.rodata:00000000000090E7                                         ; DATA XREF: .text:loc_ECD0↓o
.rodata:00000000000090E7                                         ; .text:000000000000ECE0↓o
.rodata:0000000000009112 aGridColumns    DCB "grid-columns",0    ; DATA XREF: .text:000000000000EB54↓o
.rodata:0000000000009112                                         ; .text:000000000000EB5C↓o ...
.rodata:00000000000091E4                                         ; DATA XREF: .text:000000000000EC70↓o
.rodata:00000000000091E4                                         ; .text:000000000000EC80↓o
.rodata:000000000000925D aWidth          DCB "width",0           ; DATA XREF: .text:000000000000E630↓o
.rodata:000000000000925D                                         ; .text:000000000000E634↓o ...
.rodata:0000000000009263 aGridSize       DCB "grid-size",0       ; DATA XREF: .text:000000000000EB68↓o
.rodata:0000000000009263                                         ; .text:000000000000EB70↓o ...
.rodata:00000000000094F4 aHeifsource     DCB "HeifSource",0      ; DATA XREF: .text:000000000000E580↓o
.rodata:00000000000094F4                                         ; .text:000000000000E58C↓o ...
.rodata:00000000000094FF                                         ; DATA XREF: .text:000000000000ECDC↓o
.rodata:00000000000094FF                                         ; .text:000000000000ECEC↓o
.rodata:00000000000098AF aInputBuffer    DCB "input-buffer",0    ; DATA XREF: .text:000000000000E5CC↓o
.rodata:00000000000098AF                                         ; .text:000000000000E5D0↓o ...
.rodata:0000000000009AD9                                         ; DATA XREF: .text:loc_ED18↓o
.rodata:0000000000009AD9                                         ; .text:000000000000ED28↓o
.rodata:0000000000009B0F                                         ; DATA XREF: .text:000000000000EA40↓o
.rodata:0000000000009B0F                                         ; .text:000000000000EA48↓o
.rodata:0000000000009C0B aStride         DCB "stride",0          ; DATA XREF: .text:000000000000E660↓o
.rodata:0000000000009C0B                                         ; .text:000000000000E664↓o ...
.rodata:0000000000009CF0 qword_9CF0      DCQ 0xFFFFFFFF00000001  ; DATA XREF: .text:loc_E7AC↓o
.rodata:0000000000009CF0                                         ; .text:000000000000E7C0↓r
.rodata:0000000000009D20 unk_9D20        DCB    1                ; DATA XREF: .text:000000000000E974↓o
.rodata:0000000000009D20                                         ; .text:000000000000E978↓o
.rodata:0000000000009D28 unk_9D28        DCB    6                ; DATA XREF: .text:loc_E8C0↓o
.rodata:0000000000009D28                                         ; .text:000000000000E8C8↓o
.text:000000000000D000 ; ===========================================================================
.text:000000000000D000 ; Segment type: Pure code
.text:000000000000D000                 AREA .text, CODE, ALIGN=3
.text:000000000000D000                 ; ORG 0xD000
.text:000000000000D000                 CODE64
.text:000000000000D000 ; =============== S U B R O U T I N E =======================================
.text:000000000000D000                 EXPORT start
.text:000000000000D000 start                                   ; DATA XREF: LOAD:0000000000000018↑o
.text:000000000000D000                                         ; LOAD:00000000000000C0↑o ...
.text:000000000000D000 ; __unwind {
.text:000000000000D000                 ADRP            X0, #off_1C000@PAGE
.text:000000000000D004                 ADD             X0, X0, #off_1C000@PAGEOFF ; void *
.text:000000000000D008                 B               .__cxa_finalize
.text:000000000000D008 ; } // starts at D000
.text:000000000000D008 ; End of function start
.text:000000000000D008 ; ---------------------------------------------------------------------------
.text:000000000000D00C                 ALIGN 0x10
.text:000000000000D010 ; [00000004 BYTES: COLLAPSED FUNCTION nullsub_1. PRESS CTRL-NUMPAD+ TO EXPAND]
.text:000000000000D014                 ALIGN 8
.text:000000000000D018 ; [00000004 BYTES: COLLAPSED FUNCTION j_nullsub_1. PRESS CTRL-NUMPAD+ TO EXPAND]
.text:000000000000D01C                 ALIGN 0x20
.text:000000000000D020 ; =============== S U B R O U T I N E =======================================
.text:000000000000D020 ; Attributes: bp-based frame
.text:000000000000D020 ; __int64 __fastcall android::HeifCapture::HeifCapture(android::HeifCapture *__hidden this)
.text:000000000000D020                 EXPORT _ZN7android11HeifCaptureC2Ev
.text:000000000000D020 _ZN7android11HeifCaptureC2Ev            ; DATA XREF: LOAD:00000000000017E8↑o
.text:000000000000D020                                         ; LOAD:0000000000001DB8↑o
.text:000000000000D020 var_10          = -0x10
.text:000000000000D020 var_s0          =  0
.text:000000000000D020 ; __unwind {
.text:000000000000D020                 STP             X20, X19, [SP,#-0x10+var_10]!
.text:000000000000D024                 STP             X29, X30, [SP,#0x10+var_s0]
.text:000000000000D028                 ADD             X29, SP, #0x10
.text:000000000000D02C                 MOV             X19, X0
.text:000000000000D030                 BL              ._ZN7android7RefBaseC2Ev ; android::RefBase::RefBase(void)
.text:000000000000D034                 ADRP            X8, #_ZTVN7android11HeifCaptureE_ptr@PAGE
.text:000000000000D038                 ADD             X20, X19, #0x38 ; '8'
.text:000000000000D03C                 MOV             X0, X20 ; this
.text:000000000000D040                 LDR             X8, [X8,#_ZTVN7android11HeifCaptureE_ptr@PAGEOFF]
.text:000000000000D044                 MOV             W1, #8  ; unsigned __int64
.text:000000000000D048                 MOV             W2, WZR ; unsigned int
.text:000000000000D04C                 STP             XZR, XZR, [X19,#0x10]
.text:000000000000D050                 STRB            WZR, [X19,#0x20]
.text:000000000000D054                 STP             XZR, XZR, [X19,#0x28]
.text:000000000000D058                 ADD             X8, X8, #0x10
.text:000000000000D05C                 STR             X8, [X19]
.text:000000000000D060                 BL              ._ZN7android10VectorImplC2Emj ; android::VectorImpl::VectorImpl(ulong,uint)
.text:000000000000D064                 ADRP            X8, #_ZTVN7android6VectorINS_2spINS_11HeifEncoderEEEEE_ptr@PAGE
.text:000000000000D068                 MOV             X0, X20 ; this
.text:000000000000D06C                 LDR             X8, [X8,#_ZTVN7android6VectorINS_2spINS_11HeifEncoderEEEEE_ptr@PAGEOFF]
.text:000000000000D070                 ADD             X8, X8, #0x10
.text:000000000000D074                 STR             X8, [X19,#0x38]
.text:000000000000D078                 LDP             X29, X30, [SP,#0x10+var_s0]
.text:000000000000D07C                 LDP             X20, X19, [SP+0x10+var_10],#0x20
.text:000000000000D080                 B               ._ZN7android10VectorImpl5clearEv ; android::VectorImpl::clear(void)
.text:000000000000D080 ; } // starts at D020
.text:000000000000D080 ; End of function android::HeifCapture::HeifCapture(void)
.text:000000000000D080 ; ---------------------------------------------------------------------------
.text:000000000000D084                 ALIGN 8
.text:000000000000D088 ; =============== S U B R O U T I N E =======================================
.text:000000000000D088 ; Attributes: bp-based frame
.text:000000000000D088 ; void __fastcall android::HeifCapture::~HeifCapture(android::HeifCapture *__hidden this)
.text:000000000000D088                 EXPORT _ZN7android11HeifCaptureD2Ev
.text:000000000000D088 _ZN7android11HeifCaptureD2Ev            ; CODE XREF: android::HeifCapture::~HeifCapture()+C↓j
.text:000000000000D088                                         ; DATA XREF: LOAD:0000000000001080↑o ...
.text:000000000000D088 var_20          = -0x20
.text:000000000000D088 var_10          = -0x10
.text:000000000000D088 var_s0          =  0
.text:000000000000D088 ; __unwind {
.text:000000000000D088                 STP             X22, X21, [SP,#-0x10+var_20]!
.text:000000000000D08C                 STP             X20, X19, [SP,#0x20+var_10]
.text:000000000000D090                 STP             X29, X30, [SP,#0x20+var_s0]
.text:000000000000D094                 ADD             X29, SP, #0x20
.text:000000000000D098                 ADRP            X8, #_ZTVN7android11HeifCaptureE_ptr@PAGE
.text:000000000000D09C                 MOV             X19, X0
.text:000000000000D0A0                 LDR             X8, [X8,#_ZTVN7android11HeifCaptureE_ptr@PAGEOFF]
.text:000000000000D0A4                 ADD             X8, X8, #0x10
.text:000000000000D0A8                 STR             X8, [X0]
.text:000000000000D0AC                 BL              ._ZN7android11HeifCapture4stopEv ; android::HeifCapture::stop(void)
.text:000000000000D0B0                 MOV             X20, X19
.text:000000000000D0B4                 LDR             X21, [X20,#0x10]!
.text:000000000000D0B8                 CBZ             X21, loc_D0DC
.text:000000000000D0BC                 MOV             X0, X21 ; this
.text:000000000000D0C0                 MOV             X1, X20 ; void *
.text:000000000000D0C4                 BL              ._ZNK7android7RefBase9decStrongEPKv ; android::RefBase::decStrong(void const*)
.text:000000000000D0C8                 LDR             X8, [X20]
.text:000000000000D0CC                 CMP             X21, X8
.text:000000000000D0D0                 B.EQ            loc_D0D8
.text:000000000000D0D4                 BL              ._ZN7android14sp_report_raceEv ; android::sp_report_race(void)
.text:000000000000D0D8 loc_D0D8                                ; CODE XREF: android::HeifCapture::~HeifCapture()+48↑j
.text:000000000000D0D8                 STR             XZR, [X20]
.text:000000000000D0DC loc_D0DC                                ; CODE XREF: android::HeifCapture::~HeifCapture()+30↑j
.text:000000000000D0DC                 LDR             X21, [X20]
.text:000000000000D0E0                 CBZ             X21, loc_D0F0
.text:000000000000D0E4                 MOV             X0, X21 ; this
.text:000000000000D0E8                 MOV             X1, X20 ; void *
.text:000000000000D0EC                 BL              ._ZNK7android7RefBase9decStrongEPKv ; android::RefBase::decStrong(void const*)
.text:000000000000D0F0 loc_D0F0                                ; CODE XREF: android::HeifCapture::~HeifCapture()+58↑j
.text:000000000000D0F0                 LDR             X8, [X20]
.text:000000000000D0F4                 CMP             X21, X8
.text:000000000000D0F8                 B.EQ            loc_D100
.text:000000000000D0FC                 BL              ._ZN7android14sp_report_raceEv ; android::sp_report_race(void)
.text:000000000000D100 loc_D100                                ; CODE XREF: android::HeifCapture::~HeifCapture()+70↑j
.text:000000000000D100                 MOV             X21, X19
.text:000000000000D104                 LDR             X22, [X21,#0x28]!
.text:000000000000D108                 STUR            XZR, [X21,#-0x18]
.text:000000000000D10C                 CBZ             X22, loc_D130
.text:000000000000D110                 MOV             X0, X22 ; this
.text:000000000000D114                 MOV             X1, X21 ; void *
.text:000000000000D118                 BL              ._ZNK7android7RefBase9decStrongEPKv ; android::RefBase::decStrong(void const*)
.text:000000000000D11C                 LDR             X8, [X21]
.text:000000000000D120                 CMP             X22, X8
.text:000000000000D124                 B.EQ            loc_D12C
.text:000000000000D128                 BL              ._ZN7android14sp_report_raceEv ; android::sp_report_race(void)
.text:000000000000D12C loc_D12C                                ; CODE XREF: android::HeifCapture::~HeifCapture()+9C↑j
.text:000000000000D12C                 STR             XZR, [X21]
.text:000000000000D130 loc_D130                                ; CODE XREF: android::HeifCapture::~HeifCapture()+84↑j
.text:000000000000D130                 LDR             X22, [X21]
.text:000000000000D134                 CBZ             X22, loc_D144
.text:000000000000D138                 MOV             X0, X22 ; this
.text:000000000000D13C                 MOV             X1, X21 ; void *
.text:000000000000D140                 BL              ._ZNK7android7RefBase9decStrongEPKv ; android::RefBase::decStrong(void const*)
.text:000000000000D144 loc_D144                                ; CODE XREF: android::HeifCapture::~HeifCapture()+AC↑j
.text:000000000000D144                 LDR             X8, [X21]
.text:000000000000D148                 CMP             X22, X8
.text:000000000000D14C                 B.EQ            loc_D154
.text:000000000000D150                 BL              ._ZN7android14sp_report_raceEv ; android::sp_report_race(void)
.text:000000000000D154 loc_D154                                ; CODE XREF: android::HeifCapture::~HeifCapture()+C4↑j
.text:000000000000D154                 ADRP            X8, #_ZTVN7android6VectorINS_2spINS_11HeifEncoderEEEEE_ptr@PAGE
.text:000000000000D158                 MOV             X22, X19
.text:000000000000D15C                 LDR             X8, [X8,#_ZTVN7android6VectorINS_2spINS_11HeifEncoderEEEEE_ptr@PAGEOFF]
.text:000000000000D160                 ADD             X8, X8, #0x10
.text:000000000000D164                 STR             X8, [X22,#0x38]!
.text:000000000000D168                 MOV             X0, X22 ; this
.text:000000000000D16C                 STR             XZR, [X19,#0x28]
.text:000000000000D170                 BL              ._ZN7android10VectorImpl13finish_vectorEv ; android::VectorImpl::finish_vector(void)
.text:000000000000D174                 MOV             X0, X22 ; this
.text:000000000000D178                 BL              ._ZN7android10VectorImplD2Ev ; android::VectorImpl::~VectorImpl()
.text:000000000000D17C                 MOV             X1, X19
.text:000000000000D180                 LDR             X0, [X1,#0x30]! ; void *
.text:000000000000D184                 CBZ             X0, loc_D18C
.text:000000000000D188                 BL              ._ZNK7android7RefBase9decStrongEPKv ; android::RefBase::decStrong(void const*)
.text:000000000000D18C loc_D18C                                ; CODE XREF: android::HeifCapture::~HeifCapture()+FC↑j
.text:000000000000D18C                 LDR             X0, [X21] ; this
.text:000000000000D190                 CBZ             X0, loc_D19C
.text:000000000000D194                 MOV             X1, X21 ; void *
.text:000000000000D198                 BL              ._ZNK7android7RefBase9decStrongEPKv ; android::RefBase::decStrong(void const*)
.text:000000000000D19C loc_D19C                                ; CODE XREF: android::HeifCapture::~HeifCapture()+108↑j
.text:000000000000D19C                 LDR             X0, [X20] ; this
.text:000000000000D1A0                 CBZ             X0, loc_D1AC
.text:000000000000D1A4                 MOV             X1, X20 ; void *
.text:000000000000D1A8                 BL              ._ZNK7android7RefBase9decStrongEPKv ; android::RefBase::decStrong(void const*)
.text:000000000000D1AC loc_D1AC                                ; CODE XREF: android::HeifCapture::~HeifCapture()+118↑j
.text:000000000000D1AC                 MOV             X0, X19 ; this
.text:000000000000D1B0                 LDP             X29, X30, [SP,#0x20+var_s0]
.text:000000000000D1B4                 LDP             X20, X19, [SP,#0x20+var_10]
.text:000000000000D1B8                 LDP             X22, X21, [SP+0x20+var_20],#0x30
.text:000000000000D1BC                 B               ._ZN7android7RefBaseD2Ev ; android::RefBase::~RefBase()
.text:000000000000D1BC ; } // starts at D088
.text:000000000000D1BC ; End of function android::HeifCapture::~HeifCapture()
.text:000000000000D1C0 ; =============== S U B R O U T I N E =======================================
.text:000000000000D1C0 ; Attributes: bp-based frame
.text:000000000000D1C0 ; __int64 __fastcall android::HeifCapture::stop(android::HeifCapture *__hidden this)
.text:000000000000D1C0                 EXPORT _ZN7android11HeifCapture4stopEv
.text:000000000000D1C0 _ZN7android11HeifCapture4stopEv         ; CODE XREF: android::HeifCapture::stop(void)+C↓j
.text:000000000000D1C0                                         ; DATA XREF: LOAD:0000000000001908↑o ...
.text:000000000000D1C0 var_30          = -0x30
.text:000000000000D1C0 var_28          = -0x28
.text:000000000000D1C0 var_20          = -0x20
.text:000000000000D1C0 var_10          = -0x10
.text:000000000000D1C0 var_s0          =  0
.text:000000000000D1C0 ; __unwind {
.text:000000000000D1C0                 SUB             SP, SP, #0x40
.text:000000000000D1C4                 STP             X22, X21, [SP,#0x30+var_20]
.text:000000000000D1C8                 STP             X20, X19, [SP,#0x30+var_10]
.text:000000000000D1CC                 STP             X29, X30, [SP,#0x30+var_s0]
.text:000000000000D1D0                 ADD             X29, SP, #0x30
.text:000000000000D1D4                 MRS             X22, #3, c13, c0, #2
.text:000000000000D1D8                 MOV             X19, X0
.text:000000000000D1DC                 LDR             X8, [X22,#0x28]
.text:000000000000D1E0                 STR             X8, [SP,#0x30+var_28]
.text:000000000000D1E4                 LDR             X8, [X0,#0x48]
.text:000000000000D1E8                 CBZ             X8, loc_D290
.text:000000000000D1EC                 ADD             X20, X19, #0x38 ; '8'
.text:000000000000D1F0 loc_D1F0                                ; CODE XREF: android::HeifCapture::stop(void)+CC↓j
.text:000000000000D1F0                 MOV             X0, X20 ; this
.text:000000000000D1F4                 BL              ._ZN7android10VectorImpl13editArrayImplEv ; android::VectorImpl::editArrayImpl(void)
.text:000000000000D1F8                 LDR             X0, [X0] ; this
.text:000000000000D1FC                 STR             X0, [SP,#0x30+var_30]
.text:000000000000D200                 CBZ             X0, loc_D20C
.text:000000000000D204                 MOV             X1, SP  ; void *
.text:000000000000D208                 BL              ._ZNK7android7RefBase9incStrongEPKv ; android::RefBase::incStrong(void const*)
.text:000000000000D20C loc_D20C                                ; CODE XREF: android::HeifCapture::stop(void)+40↑j
.text:000000000000D20C                 MOV             X0, X20 ; this
.text:000000000000D210                 BL              ._ZN7android10VectorImpl13editArrayImplEv ; android::VectorImpl::editArrayImpl(void)
.text:000000000000D214                 LDR             X8, [X19,#0x40]
.text:000000000000D218                 MOV             W2, #1  ; unsigned __int64
.text:000000000000D21C                 SUB             X8, X0, X8
.text:000000000000D220                 MOV             X0, X20 ; this
.text:000000000000D224                 ASR             X1, X8, #3 ; unsigned __int64
.text:000000000000D228                 BL              ._ZN7android10VectorImpl13removeItemsAtEmm ; android::VectorImpl::removeItemsAt(ulong,ulong)
.text:000000000000D22C                 MOV             X0, X20 ; this
.text:000000000000D230                 BL              ._ZN7android10VectorImpl13editArrayImplEv ; android::VectorImpl::editArrayImpl(void)
.text:000000000000D234                 LDR             X0, [SP,#0x30+var_30] ; this
.text:000000000000D238                 BL              ._ZN7android11HeifEncoder4stopEv ; android::HeifEncoder::stop(void)
.text:000000000000D23C                 LDR             X21, [SP,#0x30+var_30]
.text:000000000000D240                 CBZ             X21, loc_D264
.text:000000000000D244                 MOV             X1, SP  ; void *
.text:000000000000D248                 MOV             X0, X21 ; this
.text:000000000000D24C                 BL              ._ZNK7android7RefBase9decStrongEPKv ; android::RefBase::decStrong(void const*)
.text:000000000000D250                 LDR             X8, [SP,#0x30+var_30]
.text:000000000000D254                 CMP             X21, X8
.text:000000000000D258                 B.EQ            loc_D260
.text:000000000000D25C                 BL              ._ZN7android14sp_report_raceEv ; android::sp_report_race(void)
.text:000000000000D260 loc_D260                                ; CODE XREF: android::HeifCapture::stop(void)+98↑j
.text:000000000000D260                 STR             XZR, [SP,#0x30+var_30]
.text:000000000000D264 loc_D264                                ; CODE XREF: android::HeifCapture::stop(void)+80↑j
.text:000000000000D264                 LDR             X21, [SP,#0x30+var_30]
.text:000000000000D268                 CBZ             X21, loc_D278
.text:000000000000D26C                 MOV             X1, SP  ; void *
.text:000000000000D270                 MOV             X0, X21 ; this
.text:000000000000D274                 BL              ._ZNK7android7RefBase9decStrongEPKv ; android::RefBase::decStrong(void const*)
.text:000000000000D278 loc_D278                                ; CODE XREF: android::HeifCapture::stop(void)+A8↑j
.text:000000000000D278                 LDR             X8, [SP,#0x30+var_30]
.text:000000000000D27C                 CMP             X21, X8
.text:000000000000D280                 B.EQ            loc_D288
.text:000000000000D284                 BL              ._ZN7android14sp_report_raceEv ; android::sp_report_race(void)
.text:000000000000D288 loc_D288                                ; CODE XREF: android::HeifCapture::stop(void)+C0↑j
.text:000000000000D288                 LDR             X8, [X19,#0x48]
.text:000000000000D28C                 CBNZ            X8, loc_D1F0
.text:000000000000D290 loc_D290                                ; CODE XREF: android::HeifCapture::stop(void)+28↑j
.text:000000000000D290                 LDR             X20, [X19,#0x10]!
.text:000000000000D294                 CBZ             X20, loc_D2B8
.text:000000000000D298                 MOV             X0, X20 ; this
.text:000000000000D29C                 MOV             X1, X19 ; void *
.text:000000000000D2A0                 BL              ._ZNK7android7RefBase9decStrongEPKv ; android::RefBase::decStrong(void const*)
.text:000000000000D2A4                 LDR             X8, [X19]
.text:000000000000D2A8                 CMP             X20, X8
.text:000000000000D2AC                 B.EQ            loc_D2B4
.text:000000000000D2B0                 BL              ._ZN7android14sp_report_raceEv ; android::sp_report_race(void)
.text:000000000000D2B4 loc_D2B4                                ; CODE XREF: android::HeifCapture::stop(void)+EC↑j
.text:000000000000D2B4                 STR             XZR, [X19]
.text:000000000000D2B8 loc_D2B8                                ; CODE XREF: android::HeifCapture::stop(void)+D4↑j
.text:000000000000D2B8                 LDR             X20, [X19]
.text:000000000000D2BC                 CBZ             X20, loc_D2CC
.text:000000000000D2C0                 MOV             X0, X20 ; this
.text:000000000000D2C4                 MOV             X1, X19 ; void *
.text:000000000000D2C8                 BL              ._ZNK7android7RefBase9decStrongEPKv ; android::RefBase::decStrong(void const*)
.text:000000000000D2CC loc_D2CC                                ; CODE XREF: android::HeifCapture::stop(void)+FC↑j
.text:000000000000D2CC                 LDR             X8, [X19]
.text:000000000000D2D0                 CMP             X20, X8
.text:000000000000D2D4                 B.EQ            loc_D2DC
.text:000000000000D2D8                 BL              ._ZN7android14sp_report_raceEv ; android::sp_report_race(void)
.text:000000000000D2DC loc_D2DC                                ; CODE XREF: android::HeifCapture::stop(void)+114↑j
.text:000000000000D2DC                 STR             XZR, [X19]
.text:000000000000D2E0                 LDR             X8, [X22,#0x28]
.text:000000000000D2E4                 LDR             X9, [SP,#0x30+var_28]
.text:000000000000D2E8                 CMP             X8, X9
.text:000000000000D2EC                 B.NE            loc_D308
.text:000000000000D2F0                 LDP             X29, X30, [SP,#0x30+var_s0]
.text:000000000000D2F4                 LDP             X20, X19, [SP,#0x30+var_10]
.text:000000000000D2F8                 LDP             X22, X21, [SP,#0x30+var_20]
.text:000000000000D2FC                 MOV             W0, WZR
.text:000000000000D300                 ADD             SP, SP, #0x40 ; '@'
.text:000000000000D304                 RET
.text:000000000000D308 ; ---------------------------------------------------------------------------
.text:000000000000D308 loc_D308                                ; CODE XREF: android::HeifCapture::stop(void)+12C↑j
.text:000000000000D308                 BL              .__stack_chk_fail
.text:000000000000D308 ; } // starts at D1C0
.text:000000000000D308 ; End of function android::HeifCapture::stop(void)
.text:000000000000D308 ; ---------------------------------------------------------------------------
.text:000000000000D30C                 ALIGN 0x10
.text:000000000000D310 ; __unwind {
.text:000000000000D310                 STR             X19, [SP,#-0x20]!
.text:000000000000D314                 STP             X29, X30, [SP,#0x10]
.text:000000000000D318                 ADD             X29, SP, #0x10
.text:000000000000D31C                 ADRP            X8, #_ZTVN7android6VectorINS_2spINS_11HeifEncoderEEEEE_ptr@PAGE
.text:000000000000D320                 MOV             X19, X0
.text:000000000000D324                 LDR             X8, [X8,#_ZTVN7android6VectorINS_2spINS_11HeifEncoderEEEEE_ptr@PAGEOFF]
.text:000000000000D328                 ADD             X8, X8, #0x10
.text:000000000000D32C                 STR             X8, [X0]
.text:000000000000D330                 BL              ._ZN7android10VectorImpl13finish_vectorEv ; android::VectorImpl::finish_vector(void)
.text:000000000000D334                 LDP             X29, X30, [SP,#0x10]
.text:000000000000D338                 MOV             X0, X19
.text:000000000000D33C                 LDR             X19, [SP],#0x20
.text:000000000000D340                 B               ._ZN7android10VectorImplD2Ev ; android::VectorImpl::~VectorImpl()
.text:000000000000D340 ; } // starts at D310
.text:000000000000D340 ; ---------------------------------------------------------------------------
.text:000000000000D344                 ALIGN 8
.text:000000000000D348 ; =============== S U B R O U T I N E =======================================
.text:000000000000D348 ; Attributes: bp-based frame
.text:000000000000D348 ; void __fastcall android::HeifCapture::~HeifCapture(android::HeifCapture *__hidden this)
.text:000000000000D348                 EXPORT _ZN7android11HeifCaptureD0Ev
.text:000000000000D348 _ZN7android11HeifCaptureD0Ev            ; DATA XREF: LOAD:0000000000001CB0↑o
.text:000000000000D348                                         ; .data.rel.ro:000000000001D028↓o
.text:000000000000D348 var_10          = -0x10
.text:000000000000D348 var_s0          =  0
.text:000000000000D348 ; __unwind {
.text:000000000000D348                 STR             X19, [SP,#-0x10+var_10]!
.text:000000000000D34C                 STP             X29, X30, [SP,#0x10+var_s0]
.text:000000000000D350                 ADD             X29, SP, #0x10
.text:000000000000D354                 MOV             X19, X0
.text:000000000000D358                 BL              ._ZN7android11HeifCaptureD2Ev ; android::HeifCapture::~HeifCapture()
.text:000000000000D35C                 LDP             X29, X30, [SP,#0x10+var_s0]
.text:000000000000D360                 MOV             X0, X19 ; void *
.text:000000000000D364                 LDR             X19, [SP+0x10+var_10],#0x20
.text:000000000000D368                 B               ._ZdlPv ; operator delete(void *)
.text:000000000000D368 ; } // starts at D348
.text:000000000000D368 ; End of function android::HeifCapture::~HeifCapture()
.text:000000000000D368 ; ---------------------------------------------------------------------------
.text:000000000000D36C                 ALIGN 0x10
.text:000000000000D370 ; =============== S U B R O U T I N E =======================================
.text:000000000000D370 ; Attributes: bp-based frame
.text:000000000000D370 ; __int64 __fastcall android::HeifCapture::start(void *)
.text:000000000000D370                 EXPORT _ZN7android11HeifCapture5startERKNS_2spINS_8AMessageEEE
.text:000000000000D370 _ZN7android11HeifCapture5startERKNS_2spINS_8AMessageEEE
.text:000000000000D370                                         ; DATA XREF: LOAD:0000000000001C08↑o
.text:000000000000D370 var_20          = -0x20
.text:000000000000D370 var_10          = -0x10
.text:000000000000D370 var_s0          =  0
.text:000000000000D370 ; __unwind {
.text:000000000000D370                 STR             X21, [SP,#-0x10+var_20]!
.text:000000000000D374                 STP             X20, X19, [SP,#0x20+var_10]
.text:000000000000D378                 STP             X29, X30, [SP,#0x20+var_s0]
.text:000000000000D37C                 ADD             X29, SP, #0x20
.text:000000000000D380                 MOV             X19, X0
.text:000000000000D384                 LDR             X21, [X19,#0x10]!
.text:000000000000D388                 LDR             X20, [X1]
.text:000000000000D38C                 CBZ             X20, loc_D39C
.text:000000000000D390                 MOV             X0, X20 ; this
.text:000000000000D394                 MOV             X1, X19 ; void *
.text:000000000000D398                 BL              ._ZNK7android7RefBase9incStrongEPKv ; android::RefBase::incStrong(void const*)
.text:000000000000D39C loc_D39C                                ; CODE XREF: android::HeifCapture::start(android::sp<android::AMessage> const&)+1C↑j
.text:000000000000D39C                 CBZ             X21, loc_D3AC
.text:000000000000D3A0                 MOV             X0, X21 ; this
.text:000000000000D3A4                 MOV             X1, X19 ; void *
.text:000000000000D3A8                 BL              ._ZNK7android7RefBase9decStrongEPKv ; android::RefBase::decStrong(void const*)
.text:000000000000D3AC loc_D3AC                                ; CODE XREF: android::HeifCapture::start(android::sp<android::AMessage> const&):loc_D39C↑j
.text:000000000000D3AC                 LDR             X8, [X19]
.text:000000000000D3B0                 CMP             X21, X8
.text:000000000000D3B4                 B.EQ            loc_D3BC
.text:000000000000D3B8                 BL              ._ZN7android14sp_report_raceEv ; android::sp_report_race(void)
.text:000000000000D3BC loc_D3BC                                ; CODE XREF: android::HeifCapture::start(android::sp<android::AMessage> const&)+44↑j
.text:000000000000D3BC                 STR             X20, [X19]
.text:000000000000D3C0                 MOV             W0, WZR
.text:000000000000D3C4                 LDP             X29, X30, [SP,#0x20+var_s0]
.text:000000000000D3C8                 LDP             X20, X19, [SP,#0x20+var_10]
.text:000000000000D3CC                 LDR             X21, [SP+0x20+var_20],#0x30
.text:000000000000D3D0                 RET
.text:000000000000D3D0 ; } // starts at D370
.text:000000000000D3D0 ; End of function android::HeifCapture::start(android::sp<android::AMessage> const&)
.text:000000000000D3D0 ; ---------------------------------------------------------------------------
.text:000000000000D3D4                 ALIGN 8
.text:000000000000D3D8 ; =============== S U B R O U T I N E =======================================
.text:000000000000D3D8 ; Attributes: bp-based frame
.text:000000000000D3D8 ; __int64 __fastcall android::HeifCapture::start(android::HeifCapture *__hidden this, int)
.text:000000000000D3D8                 EXPORT _ZN7android11HeifCapture5startEi
.text:000000000000D3D8 _ZN7android11HeifCapture5startEi        ; CODE XREF: android::HeifCapture::start(int)+C↓j
.text:000000000000D3D8                                         ; DATA XREF: LOAD:0000000000001920↑o ...
.text:000000000000D3D8 var_30          = -0x30
.text:000000000000D3D8 var_28          = -0x28
.text:000000000000D3D8 var_20          = -0x20
.text:000000000000D3D8 var_10          = -0x10
.text:000000000000D3D8 var_s0          =  0
.text:000000000000D3D8 ; __unwind {
.text:000000000000D3D8                 SUB             SP, SP, #0x40
.text:000000000000D3DC                 STP             X22, X21, [SP,#0x30+var_20]
.text:000000000000D3E0                 STP             X20, X19, [SP,#0x30+var_10]
.text:000000000000D3E4                 STP             X29, X30, [SP,#0x30+var_s0]
.text:000000000000D3E8                 ADD             X29, SP, #0x30
.text:000000000000D3EC                 MRS             X22, #3, c13, c0, #2
.text:000000000000D3F0                 MOV             X19, X0
.text:000000000000D3F4                 LDR             X8, [X22,#0x28]
.text:000000000000D3F8                 MOV             W0, #0xA40 ; unsigned __int64
.text:000000000000D3FC                 MOV             W20, W1
.text:000000000000D400                 STR             X8, [SP,#0x30+var_28]
.text:000000000000D404                 BL              ._Znwm  ; operator new(ulong)
.text:000000000000D408                 MOV             X21, X0
.text:000000000000D40C                 BL              ._ZN7android8AMessageC1Ev ; android::AMessage::AMessage(void)
.text:000000000000D410                 MOV             X1, SP  ; void *
.text:000000000000D414                 STR             X21, [SP,#0x30+var_30]
.text:000000000000D418                 MOV             X0, X21 ; this
.text:000000000000D41C                 BL              ._ZNK7android7RefBase9incStrongEPKv ; android::RefBase::incStrong(void const*)
.text:000000000000D420                 LDR             X0, [SP,#0x30+var_30] ; this
.text:000000000000D424                 ADRP            X1, #aColorFormat@PAGE ; "color-format"
.text:000000000000D428                 ADD             X1, X1, #aColorFormat@PAGEOFF ; "color-format"
.text:000000000000D42C                 MOV             W2, W20 ; int
.text:000000000000D430                 BL              ._ZN7android8AMessage8setInt32EPKci ; android::AMessage::setInt32(char const*,int)
.text:000000000000D434                 LDR             X21, [X19,#0x10]!
.text:000000000000D438                 LDR             X20, [SP,#0x30+var_30]
.text:000000000000D43C                 CBZ             X20, loc_D44C
.text:000000000000D440                 MOV             X0, X20 ; this
.text:000000000000D444                 MOV             X1, X19 ; void *
.text:000000000000D448                 BL              ._ZNK7android7RefBase9incStrongEPKv ; android::RefBase::incStrong(void const*)
.text:000000000000D44C loc_D44C                                ; CODE XREF: android::HeifCapture::start(int)+64↑j
.text:000000000000D44C                 CBZ             X21, loc_D45C
.text:000000000000D450                 MOV             X0, X21 ; this
.text:000000000000D454                 MOV             X1, X19 ; void *
.text:000000000000D458                 BL              ._ZNK7android7RefBase9decStrongEPKv ; android::RefBase::decStrong(void const*)
.text:000000000000D45C loc_D45C                                ; CODE XREF: android::HeifCapture::start(int):loc_D44C↑j
.text:000000000000D45C                 LDR             X8, [X19]
.text:000000000000D460                 CMP             X21, X8
.text:000000000000D464                 B.EQ            loc_D46C
.text:000000000000D468                 BL              ._ZN7android14sp_report_raceEv ; android::sp_report_race(void)
.text:000000000000D46C loc_D46C                                ; CODE XREF: android::HeifCapture::start(int)+8C↑j
.text:000000000000D46C                 LDR             X0, [SP,#0x30+var_30] ; this
.text:000000000000D470                 STR             X20, [X19]
.text:000000000000D474                 CBZ             X0, loc_D480
.text:000000000000D478                 MOV             X1, SP  ; void *
.text:000000000000D47C                 BL              ._ZNK7android7RefBase9decStrongEPKv ; android::RefBase::decStrong(void const*)
.text:000000000000D480 loc_D480                                ; CODE XREF: android::HeifCapture::start(int)+9C↑j
.text:000000000000D480                 LDR             X8, [X22,#0x28]
.text:000000000000D484                 LDR             X9, [SP,#0x30+var_28]
.text:000000000000D488                 CMP             X8, X9
.text:000000000000D48C                 B.NE            loc_D4A8
.text:000000000000D490                 LDP             X29, X30, [SP,#0x30+var_s0]
.text:000000000000D494                 LDP             X20, X19, [SP,#0x30+var_10]
.text:000000000000D498                 LDP             X22, X21, [SP,#0x30+var_20]
.text:000000000000D49C                 MOV             W0, WZR
.text:000000000000D4A0                 ADD             SP, SP, #0x40 ; '@'
.text:000000000000D4A4                 RET
.text:000000000000D4A8 ; ---------------------------------------------------------------------------
.text:000000000000D4A8 loc_D4A8                                ; CODE XREF: android::HeifCapture::start(int)+B4↑j
.text:000000000000D4A8                 BL              .__stack_chk_fail
.text:000000000000D4A8 ; } // starts at D3D8
.text:000000000000D4A8 ; End of function android::HeifCapture::start(int)
.text:000000000000D4A8 ; ---------------------------------------------------------------------------
.text:000000000000D4AC                 ALIGN 0x10
.text:000000000000D4B0 ; =============== S U B R O U T I N E =======================================
.text:000000000000D4B0 ; Attributes: bp-based frame
.text:000000000000D4B0 ; android::HeifCapture::store(android::sp<android::HeifCaptureImageBuilder> const&)
.text:000000000000D4B0                 EXPORT _ZN7android11HeifCapture5storeERKNS_2spINS_23HeifCaptureImageBuilderEEE
.text:000000000000D4B0 _ZN7android11HeifCapture5storeERKNS_2spINS_23HeifCaptureImageBuilderEEE
.text:000000000000D4B0                                         ; CODE XREF: android::HeifCapture::store(android::sp<android::HeifCaptureImageBuilder> const&)+C↓j
.text:000000000000D4B0                                         ; DATA XREF: LOAD:0000000000001C20↑o ...
.text:000000000000D4B0 var_24          = -0x24
.text:000000000000D4B0 var_20          = -0x20
.text:000000000000D4B0 var_18          = -0x18
.text:000000000000D4B0 var_10          = -0x10
.text:000000000000D4B0 var_s0          =  0
.text:000000000000D4B0 ; __unwind {
.text:000000000000D4B0                 SUB             SP, SP, #0x40
.text:000000000000D4B4                 STP             X20, X19, [SP,#0x30+var_10]
.text:000000000000D4B8                 STP             X29, X30, [SP,#0x30+var_s0]
.text:000000000000D4BC                 ADD             X29, SP, #0x30
.text:000000000000D4C0                 MRS             X20, #3, c13, c0, #2
.text:000000000000D4C4                 MOV             X19, X0
.text:000000000000D4C8                 LDR             X8, [X20,#0x28]
.text:000000000000D4CC                 STR             X8, [SP,#0x30+var_18]
.text:000000000000D4D0                 ADD             X8, SP, #0x30+var_20
.text:000000000000D4D4                 LDR             X9, [X1]
.text:000000000000D4D8                 MOV             X0, X9  ; this
.text:000000000000D4DC                 BL              ._ZN7android23HeifCaptureImageBuilder5buildEv ; android::HeifCaptureImageBuilder::build(void)
.text:000000000000D4E0                 ADD             X1, SP, #0x30+var_20
.text:000000000000D4E4                 MOV             X0, X19
.text:000000000000D4E8                 BL              ._ZN7android11HeifCapture5storeERKNS_2spINS_8AMessageEEE ; android::HeifCapture::store(android::sp<android::AMessage> const&)
.text:000000000000D4EC                 CBNZ            W0, loc_D534
.text:000000000000D4F0                 LDR             X0, [SP,#0x30+var_20] ; this
.text:000000000000D4F4                 ADRP            X1, #aOutputBufferSi@PAGE ; "output-buffer-size"
.text:000000000000D4F8                 ADD             X1, X1, #aOutputBufferSi@PAGEOFF ; "output-buffer-size"
.text:000000000000D4FC                 STR             WZR, [SP,#0x30+var_24]
.text:000000000000D500                 ADD             X2, SP, #0x30+var_24 ; int *
.text:000000000000D504                 BL              ._ZNK7android8AMessage9findInt32EPKcPi ; android::AMessage::findInt32(char const*,int *)
.text:000000000000D508                 TBZ             W0, #0, loc_D51C
.text:000000000000D50C                 LDR             W19, [SP,#0x30+var_24]
.text:000000000000D510                 LDR             X0, [SP,#0x30+var_20]
.text:000000000000D514                 CBNZ            X0, loc_D540
.text:000000000000D518                 B               loc_D548
.text:000000000000D51C ; ---------------------------------------------------------------------------
.text:000000000000D51C loc_D51C                                ; CODE XREF: android::HeifCapture::store(android::sp<android::HeifCaptureImageBuilder> const&)+58↑j
.text:000000000000D51C                 ADRP            X1, #aHeifcapture@PAGE ; "HeifCapture"
.text:000000000000D520                 ADRP            X2, #aDoNotExistOutp@PAGE ; "Do not exist output buffer size"
.text:000000000000D524                 ADD             X1, X1, #aHeifcapture@PAGEOFF ; "HeifCapture"
.text:000000000000D528                 ADD             X2, X2, #aDoNotExistOutp@PAGEOFF ; "Do not exist output buffer size"
.text:000000000000D52C                 MOV             W0, #6
.text:000000000000D530                 BL              .__android_log_print
.text:000000000000D534 loc_D534                                ; CODE XREF: android::HeifCapture::store(android::sp<android::HeifCaptureImageBuilder> const&)+3C↑j
.text:000000000000D534                 MOV             W19, #0xFFFFFFFF
.text:000000000000D538                 LDR             X0, [SP,#0x30+var_20] ; this
.text:000000000000D53C                 CBZ             X0, loc_D548
.text:000000000000D540 loc_D540                                ; CODE XREF: android::HeifCapture::store(android::sp<android::HeifCaptureImageBuilder> const&)+64↑j
.text:000000000000D540                 ADD             X1, SP, #0x30+var_20 ; void *
.text:000000000000D544                 BL              ._ZNK7android7RefBase9decStrongEPKv ; android::RefBase::decStrong(void const*)
.text:000000000000D548 loc_D548                                ; CODE XREF: android::HeifCapture::store(android::sp<android::HeifCaptureImageBuilder> const&)+68↑j
.text:000000000000D548                                         ; android::HeifCapture::store(android::sp<android::HeifCaptureImageBuilder> const&)+8C↑j
.text:000000000000D548                 LDR             X8, [X20,#0x28]
.text:000000000000D54C                 LDR             X9, [SP,#0x30+var_18]
.text:000000000000D550                 CMP             X8, X9
.text:000000000000D554                 B.NE            loc_D56C
.text:000000000000D558                 MOV             W0, W19
.text:000000000000D55C                 LDP             X29, X30, [SP,#0x30+var_s0]
.text:000000000000D560                 LDP             X20, X19, [SP,#0x30+var_10]
.text:000000000000D564                 ADD             SP, SP, #0x40 ; '@'
.text:000000000000D568                 RET
.text:000000000000D56C ; ---------------------------------------------------------------------------
.text:000000000000D56C loc_D56C                                ; CODE XREF: android::HeifCapture::store(android::sp<android::HeifCaptureImageBuilder> const&)+A4↑j
.text:000000000000D56C                 BL              .__stack_chk_fail
.text:000000000000D56C ; } // starts at D4B0
.text:000000000000D56C ; End of function android::HeifCapture::store(android::sp<android::HeifCaptureImageBuilder> const&)
.text:000000000000D570 ; =============== S U B R O U T I N E =======================================
.text:000000000000D570 ; Attributes: bp-based frame
.text:000000000000D570 ; android::HeifCapture::store(android::sp<android::AMessage> const&)
.text:000000000000D570                 EXPORT _ZN7android11HeifCapture5storeERKNS_2spINS_8AMessageEEE
.text:000000000000D570 _ZN7android11HeifCapture5storeERKNS_2spINS_8AMessageEEE
.text:000000000000D570                                         ; CODE XREF: android::HeifCapture::store(android::sp<android::AMessage> const&)+C↓j
.text:000000000000D570                                         ; DATA XREF: LOAD:00000000000014A0↑o ...
.text:000000000000D570 var_A0          = -0xA0
.text:000000000000D570 var_98          = -0x98
.text:000000000000D570 var_8C          = -0x8C
.text:000000000000D570 var_88          = -0x88
.text:000000000000D570 var_80          = -0x80
.text:000000000000D570 var_78          = -0x78
.text:000000000000D570 var_6C          = -0x6C
.text:000000000000D570 var_68          = -0x68
.text:000000000000D570 var_5C          = -0x5C
.text:000000000000D570 var_58          = -0x58
.text:000000000000D570 var_50          = -0x50
.text:000000000000D570 var_40          = -0x40
.text:000000000000D570 var_30          = -0x30
.text:000000000000D570 var_20          = -0x20
.text:000000000000D570 var_10          = -0x10
.text:000000000000D570 var_s0          =  0
.text:000000000000D570 ; __unwind {
.text:000000000000D570                 SUB             SP, SP, #0xB0
.text:000000000000D574                 STP             X28, X27, [SP,#0xA0+var_50]
.text:000000000000D578                 STP             X26, X25, [SP,#0xA0+var_40]
.text:000000000000D57C                 STP             X24, X23, [SP,#0xA0+var_30]
.text:000000000000D580                 STP             X22, X21, [SP,#0xA0+var_20]
.text:000000000000D584                 STP             X20, X19, [SP,#0xA0+var_10]
.text:000000000000D588                 STP             X29, X30, [SP,#0xA0+var_s0]
.text:000000000000D58C                 ADD             X29, SP, #0xA0
.text:000000000000D590                 MRS             X21, #3, c13, c0, #2
.text:000000000000D594                 MOV             X19, X1
.text:000000000000D598                 LDR             X8, [X21,#0x28]
.text:000000000000D59C                 MOV             X20, X0
.text:000000000000D5A0                 MOV             W9, #1
.text:000000000000D5A4                 ADD             X2, SP, #0xA0+var_5C ; int *
.text:000000000000D5A8                 STR             X8, [SP,#0xA0+var_58]
.text:000000000000D5AC                 LDR             X0, [X1] ; this
.text:000000000000D5B0                 ADRP            X1, #aCoverCount@PAGE ; "cover-count"
.text:000000000000D5B4                 ADD             X1, X1, #aCoverCount@PAGEOFF ; "cover-count"
.text:000000000000D5B8                 STR             WZR, [SP,#0xA0+var_5C]
.text:000000000000D5BC                 STR             XZR, [SP,#0xA0+var_68]
.text:000000000000D5C0                 STR             W9, [SP,#0xA0+var_6C]
.text:000000000000D5C4                 BL              ._ZNK7android8AMessage9findInt32EPKcPi ; android::AMessage::findInt32(char const*,int *)
.text:000000000000D5C8                 LDR             W8, [SP,#0xA0+var_5C]
.text:000000000000D5CC                 CBZ             W8, loc_D934
.text:000000000000D5D0                 ADRP            X22, #aStartId@PAGE ; "start-id"
.text:000000000000D5D4                 STR             X21, [SP,#0xA0+var_A0]
.text:000000000000D5D8                 ADRP            X23, #aQpIncreaseRati@PAGE ; "qp-increase-ratio"
.text:000000000000D5DC                 ADRP            X24, #aHeifcapture@PAGE ; "HeifCapture"
.text:000000000000D5E0                 MOV             W21, WZR
.text:000000000000D5E4                 ADD             X22, X22, #aStartId@PAGEOFF ; "start-id"
.text:000000000000D5E8                 ADD             X23, X23, #aQpIncreaseRati@PAGEOFF ; "qp-increase-ratio"
.text:000000000000D5EC                 ADD             X24, X24, #aHeifcapture@PAGEOFF ; "HeifCapture"
.text:000000000000D5F0                 MOV             W27, #0xFFFFFC19
.text:000000000000D5F4 loc_D5F4                                ; CODE XREF: android::HeifCapture::store(android::sp<android::AMessage> const&)+388↓j
.text:000000000000D5F4                 MOV             W8, #1
.text:000000000000D5F8                 MOV             X0, X20
.text:000000000000D5FC                 MOV             X1, X19
.text:000000000000D600                 STR             W8, [SP,#0xA0+var_6C]
.text:000000000000D604                 BL              ._ZN7android11HeifCapture9initMuxerERKNS_2spINS_8AMessageEEE ; android::HeifCapture::initMuxer(android::sp<android::AMessage> const&)
.text:000000000000D608                 CBNZ            W0, loc_D954
.text:000000000000D60C                 LDR             W8, [SP,#0xA0+var_5C]
.text:000000000000D610                 CMP             W8, #1
.text:000000000000D614                 B.LT            loc_D624
.text:000000000000D618                 MOV             W26, WZR
.text:000000000000D61C                 MOV             W28, WZR
.text:000000000000D620                 B               loc_D680
.text:000000000000D624 ; ---------------------------------------------------------------------------
.text:000000000000D624 loc_D624                                ; CODE XREF: android::HeifCapture::store(android::sp<android::AMessage> const&)+A4↑j
.text:000000000000D624                 MOV             W28, WZR
.text:000000000000D628                 B               loc_D8CC
.text:000000000000D62C ; ---------------------------------------------------------------------------
.text:000000000000D62C loc_D62C                                ; CODE XREF: android::HeifCapture::store(android::sp<android::AMessage> const&)+27C↓j
.text:000000000000D62C                 LDR             X0, [SP,#0xA0+var_88] ; this
.text:000000000000D630                 ADRP            X1, #aImageId@PAGE ; "image-id"
.text:000000000000D634                 ADD             X2, SP, #0xA0+var_6C ; int *
.text:000000000000D638                 ADD             X1, X1, #aImageId@PAGEOFF ; "image-id"
.text:000000000000D63C                 BL              ._ZNK7android8AMessage9findInt32EPKcPi ; android::AMessage::findInt32(char const*,int *)
.text:000000000000D640                 LDR             W8, [SP,#0xA0+var_6C]
.text:000000000000D644                 MOV             W25, WZR
.text:000000000000D648                 ADD             W8, W8, #1
.text:000000000000D64C                 STR             W8, [SP,#0xA0+var_6C]
.text:000000000000D650                 LDR             X0, [SP,#0xA0+var_98]
.text:000000000000D654                 CBNZ            X0, loc_D870
.text:000000000000D658                 B               loc_D878
.text:000000000000D65C ; ---------------------------------------------------------------------------
.text:000000000000D65C loc_D65C                                ; CODE XREF: android::HeifCapture::store(android::sp<android::AMessage> const&)+284↓j
.text:000000000000D65C                 ADRP            X2, #aCanNotSaveThum@PAGE ; "Can not save thumbnail image"
.text:000000000000D660                 MOV             W0, #6
.text:000000000000D664                 MOV             X1, X24
.text:000000000000D668                 ADD             X2, X2, #aCanNotSaveThum@PAGEOFF ; "Can not save thumbnail image"
.text:000000000000D66C                 MOV             W25, #6
.text:000000000000D670                 BL              .__android_log_print
.text:000000000000D674                 LDR             X0, [SP,#0xA0+var_98]
.text:000000000000D678                 CBNZ            X0, loc_D870
.text:000000000000D67C                 B               loc_D878
.text:000000000000D680 ; ---------------------------------------------------------------------------
.text:000000000000D680 loc_D680                                ; CODE XREF: android::HeifCapture::store(android::sp<android::AMessage> const&)+B0↑j
.text:000000000000D680                                         ; android::HeifCapture::store(android::sp<android::AMessage> const&)+358↓j
.text:000000000000D680                 ADD             W3, W26, #1
.text:000000000000D684                 ADD             X0, SP, #0xA0+var_68
.text:000000000000D688                 BL              sub_DB08
.text:000000000000D68C                 LDR             X0, [X19]
.text:000000000000D690                 ADD             X1, SP, #0xA0+var_68
.text:000000000000D694                 ADD             X2, SP, #0xA0+var_78
.text:000000000000D698                 STR             XZR, [SP,#0xA0+var_78]
.text:000000000000D69C                 BL              ._ZNK7android8AMessage11findMessageEPKcPNS_2spIS0_EE ; android::AMessage::findMessage(char const*,android::sp<android::AMessage> *)
.text:000000000000D6A0                 TBZ             W0, #0, loc_D8A4
.text:000000000000D6A4                 LDR             X0, [SP,#0xA0+var_78] ; this
.text:000000000000D6A8                 MOV             X1, X22 ; char *
.text:000000000000D6AC                 LDR             W2, [SP,#0xA0+var_6C] ; int
.text:000000000000D6B0                 BL              ._ZN7android8AMessage8setInt32EPKci ; android::AMessage::setInt32(char const*,int)
.text:000000000000D6B4                 LDR             X0, [SP,#0xA0+var_78] ; this
.text:000000000000D6B8                 MOV             X1, X23 ; char *
.text:000000000000D6BC                 MOV             W2, W21 ; int
.text:000000000000D6C0                 BL              ._ZN7android8AMessage8setInt32EPKci ; android::AMessage::setInt32(char const*,int)
.text:000000000000D6C4                 ADD             X8, SP, #0xA0+var_80
.text:000000000000D6C8                 ADD             X2, SP, #0xA0+var_78
.text:000000000000D6CC                 MOV             X0, X20
.text:000000000000D6D0                 MOV             W1, #1
.text:000000000000D6D4                 BL              ._ZN7android11HeifCapture10getEncoderENS_4RoleERKNS_2spINS_8AMessageEEE ; android::HeifCapture::getEncoder(android::Role,android::sp<android::AMessage> const&)
.text:000000000000D6D8                 LDR             X0, [SP,#0xA0+var_80] ; this
.text:000000000000D6DC                 CBZ             X0, loc_D71C
.text:000000000000D6E0                 BL              ._ZN7android11HeifEncoder5storeEv ; android::HeifEncoder::store(void)
.text:000000000000D6E4                 CBZ             W0, loc_D744
.text:000000000000D6E8                 MOV             W28, W0
.text:000000000000D6EC                 CMN             W0, #0x3E6
.text:000000000000D6F0                 B.NE            loc_D820
.text:000000000000D6F4                 ADRP            X2, #aRetryToEncodeF@PAGE ; "retry to encode for cover with another "...
.text:000000000000D6F8                 MOV             W0, #4
.text:000000000000D6FC                 MOV             X1, X24
.text:000000000000D700                 ADD             X2, X2, #aRetryToEncodeF@PAGEOFF ; "retry to encode for cover with another "...
.text:000000000000D704                 MOV             W3, W21
.text:000000000000D708                 BL              .__android_log_print
.text:000000000000D70C                 MOV             W25, #6
.text:000000000000D710                 LDR             X0, [SP,#0xA0+var_80]
.text:000000000000D714                 CBNZ            X0, loc_D898
.text:000000000000D718                 B               loc_D8A0
.text:000000000000D71C ; ---------------------------------------------------------------------------
.text:000000000000D71C loc_D71C                                ; CODE XREF: android::HeifCapture::store(android::sp<android::AMessage> const&)+16C↑j
.text:000000000000D71C                 ADRP            X2, #aCanNotCreateEn@PAGE ; "Can not create encoder for cover"
.text:000000000000D720                 MOV             W0, #6
.text:000000000000D724                 MOV             X1, X24
.text:000000000000D728                 ADD             X2, X2, #aCanNotCreateEn@PAGEOFF ; "Can not create encoder for cover"
.text:000000000000D72C                 MOV             W25, #6
.text:000000000000D730                 BL              .__android_log_print
.text:000000000000D734                 MOV             W28, W27
.text:000000000000D738                 LDR             X0, [SP,#0xA0+var_80]
.text:000000000000D73C                 CBNZ            X0, loc_D898
.text:000000000000D740                 B               loc_D8A0
.text:000000000000D744 ; ---------------------------------------------------------------------------
.text:000000000000D744 loc_D744                                ; CODE XREF: android::HeifCapture::store(android::sp<android::AMessage> const&)+174↑j
.text:000000000000D744                 ADRP            X25, #aImageId@PAGE ; "image-id"
.text:000000000000D748                 LDR             X0, [SP,#0xA0+var_78] ; this
.text:000000000000D74C                 ADD             X25, X25, #aImageId@PAGEOFF ; "image-id"
.text:000000000000D750                 ADD             X2, SP, #0xA0+var_6C ; int *
.text:000000000000D754                 MOV             X1, X25 ; char *
.text:000000000000D758                 BL              ._ZNK7android8AMessage9findInt32EPKcPi ; android::AMessage::findInt32(char const*,int *)
.text:000000000000D75C                 LDR             W8, [SP,#0xA0+var_6C]
.text:000000000000D760                 ADRP            X1, #aThumbnail@PAGE ; "thumbnail"
.text:000000000000D764                 LDR             X0, [SP,#0xA0+var_78]
.text:000000000000D768                 ADD             X2, SP, #0xA0+var_88
.text:000000000000D76C                 ADD             X1, X1, #aThumbnail@PAGEOFF ; "thumbnail"
.text:000000000000D770                 STR             XZR, [SP,#0xA0+var_88]
.text:000000000000D774                 ADD             W8, W8, #1
.text:000000000000D778                 STR             W8, [SP,#0xA0+var_6C]
.text:000000000000D77C                 BL              ._ZNK7android8AMessage11findMessageEPKcPNS_2spIS0_EE ; android::AMessage::findMessage(char const*,android::sp<android::AMessage> *)
.text:000000000000D780                 TBZ             W0, #0, loc_D844
.text:000000000000D784                 LDR             X0, [SP,#0xA0+var_78] ; this
.text:000000000000D788                 ADD             X2, SP, #0xA0+var_8C ; int *
.text:000000000000D78C                 MOV             X1, X25 ; char *
.text:000000000000D790                 BL              ._ZNK7android8AMessage9findInt32EPKcPi ; android::AMessage::findInt32(char const*,int *)
.text:000000000000D794                 LDR             X0, [SP,#0xA0+var_88] ; this
.text:000000000000D798                 ADRP            X1, #aCoverImageId@PAGE ; "cover-image-id"
.text:000000000000D79C                 LDR             W2, [SP,#0xA0+var_8C] ; int
.text:000000000000D7A0                 ADD             X1, X1, #aCoverImageId@PAGEOFF ; "cover-image-id"
.text:000000000000D7A4                 BL              ._ZN7android8AMessage8setInt32EPKci ; android::AMessage::setInt32(char const*,int)
.text:000000000000D7A8                 LDR             X0, [SP,#0xA0+var_88] ; this
.text:000000000000D7AC                 MOV             X1, X22 ; char *
.text:000000000000D7B0                 LDR             W2, [SP,#0xA0+var_6C] ; int
.text:000000000000D7B4                 BL              ._ZN7android8AMessage8setInt32EPKci ; android::AMessage::setInt32(char const*,int)
.text:000000000000D7B8                 LDR             X0, [SP,#0xA0+var_88] ; this
.text:000000000000D7BC                 MOV             X1, X23 ; char *
.text:000000000000D7C0                 MOV             W2, W21 ; int
.text:000000000000D7C4                 BL              ._ZN7android8AMessage8setInt32EPKci ; android::AMessage::setInt32(char const*,int)
.text:000000000000D7C8                 ADD             X8, SP, #0xA0+var_98
.text:000000000000D7CC                 ADD             X2, SP, #0xA0+var_88
.text:000000000000D7D0                 MOV             X0, X20
.text:000000000000D7D4                 MOV             W1, #2
.text:000000000000D7D8                 BL              ._ZN7android11HeifCapture10getEncoderENS_4RoleERKNS_2spINS_8AMessageEEE ; android::HeifCapture::getEncoder(android::Role,android::sp<android::AMessage> const&)
.text:000000000000D7DC                 LDR             X0, [SP,#0xA0+var_98] ; this
.text:000000000000D7E0                 CBZ             X0, loc_D84C
.text:000000000000D7E4                 BL              ._ZN7android11HeifEncoder5storeEv ; android::HeifEncoder::store(void)
.text:000000000000D7E8                 MOV             W28, W0
.text:000000000000D7EC                 CBZ             W0, loc_D62C
.text:000000000000D7F0                 CMN             W28, #0x3E6
.text:000000000000D7F4                 B.NE            loc_D65C
.text:000000000000D7F8                 ADRP            X2, #aRetryToEncodeF_0@PAGE ; "retry to encode for thumbnail with anot"...
.text:000000000000D7FC                 MOV             W0, #4
.text:000000000000D800                 MOV             X1, X24
.text:000000000000D804                 ADD             X2, X2, #aRetryToEncodeF_0@PAGEOFF ; "retry to encode for thumbnail with anot"...
.text:000000000000D808                 MOV             W3, W21
.text:000000000000D80C                 BL              .__android_log_print
.text:000000000000D810                 MOV             W25, #6
.text:000000000000D814                 LDR             X0, [SP,#0xA0+var_98]
.text:000000000000D818                 CBNZ            X0, loc_D870
.text:000000000000D81C                 B               loc_D878
.text:000000000000D820 ; ---------------------------------------------------------------------------
.text:000000000000D820 loc_D820                                ; CODE XREF: android::HeifCapture::store(android::sp<android::AMessage> const&)+180↑j
.text:000000000000D820                 ADRP            X2, #aCanNotSaveTheC@PAGE ; "Can not save the cover image"
.text:000000000000D824                 MOV             W0, #6
.text:000000000000D828                 MOV             X1, X24
.text:000000000000D82C                 ADD             X2, X2, #aCanNotSaveTheC@PAGEOFF ; "Can not save the cover image"
.text:000000000000D830                 MOV             W25, #6
.text:000000000000D834                 BL              .__android_log_print
.text:000000000000D838                 LDR             X0, [SP,#0xA0+var_80]
.text:000000000000D83C                 CBNZ            X0, loc_D898
.text:000000000000D840                 B               loc_D8A0
.text:000000000000D844 ; ---------------------------------------------------------------------------
.text:000000000000D844 loc_D844                                ; CODE XREF: android::HeifCapture::store(android::sp<android::AMessage> const&)+210↑j
.text:000000000000D844                 MOV             W28, WZR
.text:000000000000D848                 B               loc_D87C
.text:000000000000D84C ; ---------------------------------------------------------------------------
.text:000000000000D84C loc_D84C                                ; CODE XREF: android::HeifCapture::store(android::sp<android::AMessage> const&)+270↑j
.text:000000000000D84C                 ADRP            X2, #aCanNotCreateEn_0@PAGE ; "Can not create encoder for thumnnail"
.text:000000000000D850                 MOV             W0, #6
.text:000000000000D854                 MOV             X1, X24
.text:000000000000D858                 ADD             X2, X2, #aCanNotCreateEn_0@PAGEOFF ; "Can not create encoder for thumnnail"
.text:000000000000D85C                 MOV             W25, #6
.text:000000000000D860                 BL              .__android_log_print
.text:000000000000D864                 MOV             W28, W27
.text:000000000000D868                 LDR             X0, [SP,#0xA0+var_98] ; this
.text:000000000000D86C                 CBZ             X0, loc_D878
.text:000000000000D870 loc_D870                                ; CODE XREF: android::HeifCapture::store(android::sp<android::AMessage> const&)+E4↑j
.text:000000000000D870                                         ; android::HeifCapture::store(android::sp<android::AMessage> const&)+108↑j ...
.text:000000000000D870                 ADD             X1, SP, #0xA0+var_98 ; void *
.text:000000000000D874                 BL              ._ZNK7android7RefBase9decStrongEPKv ; android::RefBase::decStrong(void const*)
.text:000000000000D878 loc_D878                                ; CODE XREF: android::HeifCapture::store(android::sp<android::AMessage> const&)+E8↑j
.text:000000000000D878                                         ; android::HeifCapture::store(android::sp<android::AMessage> const&)+10C↑j ...
.text:000000000000D878                 CBNZ            W25, loc_D880
.text:000000000000D87C loc_D87C                                ; CODE XREF: android::HeifCapture::store(android::sp<android::AMessage> const&)+2D8↑j
.text:000000000000D87C                 MOV             W25, WZR
.text:000000000000D880 loc_D880                                ; CODE XREF: android::HeifCapture::store(android::sp<android::AMessage> const&):loc_D878↑j
.text:000000000000D880                 LDR             X0, [SP,#0xA0+var_88] ; this
.text:000000000000D884                 CBZ             X0, loc_D890
.text:000000000000D888                 ADD             X1, SP, #0xA0+var_88 ; void *
.text:000000000000D88C                 BL              ._ZNK7android7RefBase9decStrongEPKv ; android::RefBase::decStrong(void const*)
.text:000000000000D890 loc_D890                                ; CODE XREF: android::HeifCapture::store(android::sp<android::AMessage> const&)+314↑j
.text:000000000000D890                 LDR             X0, [SP,#0xA0+var_80] ; this
.text:000000000000D894                 CBZ             X0, loc_D8A0
.text:000000000000D898 loc_D898                                ; CODE XREF: android::HeifCapture::store(android::sp<android::AMessage> const&)+1A4↑j
.text:000000000000D898                                         ; android::HeifCapture::store(android::sp<android::AMessage> const&)+1CC↑j ...
.text:000000000000D898                 ADD             X1, SP, #0xA0+var_80 ; void *
.text:000000000000D89C                 BL              ._ZNK7android7RefBase9decStrongEPKv ; android::RefBase::decStrong(void const*)
.text:000000000000D8A0 loc_D8A0                                ; CODE XREF: android::HeifCapture::store(android::sp<android::AMessage> const&)+1A8↑j
.text:000000000000D8A0                                         ; android::HeifCapture::store(android::sp<android::AMessage> const&)+1D0↑j ...
.text:000000000000D8A0                 CBNZ            W25, loc_D8A8
.text:000000000000D8A4 loc_D8A4                                ; CODE XREF: android::HeifCapture::store(android::sp<android::AMessage> const&)+130↑j
.text:000000000000D8A4                 MOV             W25, WZR
.text:000000000000D8A8 loc_D8A8                                ; CODE XREF: android::HeifCapture::store(android::sp<android::AMessage> const&):loc_D8A0↑j
.text:000000000000D8A8                 LDR             X0, [SP,#0xA0+var_78] ; this
.text:000000000000D8AC                 CBZ             X0, loc_D8B8
.text:000000000000D8B0                 ADD             X1, SP, #0xA0+var_78 ; void *
.text:000000000000D8B4                 BL              ._ZNK7android7RefBase9decStrongEPKv ; android::RefBase::decStrong(void const*)
.text:000000000000D8B8 loc_D8B8                                ; CODE XREF: android::HeifCapture::store(android::sp<android::AMessage> const&)+33C↑j
.text:000000000000D8B8                 CBNZ            W25, loc_D8CC
.text:000000000000D8BC                 LDR             W8, [SP,#0xA0+var_5C]
.text:000000000000D8C0                 ADD             W26, W26, #1
.text:000000000000D8C4                 CMP             W26, W8
.text:000000000000D8C8                 B.LT            loc_D680
.text:000000000000D8CC loc_D8CC                                ; CODE XREF: android::HeifCapture::store(android::sp<android::AMessage> const&)+B8↑j
.text:000000000000D8CC                                         ; android::HeifCapture::store(android::sp<android::AMessage> const&):loc_D8B8↑j
.text:000000000000D8CC                 MOV             X0, X20 ; this
.text:000000000000D8D0                 BL              ._ZN7android11HeifCapture11deinitMuxerEv ; android::HeifCapture::deinitMuxer(void)
.text:000000000000D8D4                 CMN             W28, #0x3E6
.text:000000000000D8D8                 CSET            W8, NE
.text:000000000000D8DC                 CMN             W0, #0x3E5
.text:000000000000D8E0                 CSET            W9, NE
.text:000000000000D8E4                 AND             W8, W8, W9
.text:000000000000D8E8                 EOR             W9, W8, #1
.text:000000000000D8EC                 ADD             W21, W21, W9
.text:000000000000D8F0                 CMP             W21, #2
.text:000000000000D8F4                 B.HI            loc_D8FC
.text:000000000000D8F8                 CBZ             W8, loc_D5F4
.text:000000000000D8FC loc_D8FC                                ; CODE XREF: android::HeifCapture::store(android::sp<android::AMessage> const&)+384↑j
.text:000000000000D8FC                 ADRP            X1, #aHeifcapture@PAGE ; "HeifCapture"
.text:000000000000D900                 ADD             X1, X1, #aHeifcapture@PAGEOFF ; "HeifCapture"
.text:000000000000D904                 CBZ             W28, loc_D974
.text:000000000000D908                 ADRP            X2, #aCanNotStoreHei@PAGE ; "can not store heif buffer normally"
.text:000000000000D90C                 ADD             X2, X2, #aCanNotStoreHei@PAGEOFF ; "can not store heif buffer normally"
.text:000000000000D910                 MOV             W0, #6
.text:000000000000D914                 BL              .__android_log_print
.text:000000000000D918                 LDR             X0, [X19] ; this
.text:000000000000D91C                 ADRP            X1, #aOutputBufferSi@PAGE ; "output-buffer-size"
.text:000000000000D920                 ADD             X1, X1, #aOutputBufferSi@PAGEOFF ; "output-buffer-size"
.text:000000000000D924                 MOV             W2, WZR ; int
.text:000000000000D928                 BL              ._ZN7android8AMessage8setInt32EPKci ; android::AMessage::setInt32(char const*,int)
.text:000000000000D92C                 MOV             W0, #0xFFFFFFEA
.text:000000000000D930                 B               loc_D988
.text:000000000000D934 ; ---------------------------------------------------------------------------
.text:000000000000D934 loc_D934                                ; CODE XREF: android::HeifCapture::store(android::sp<android::AMessage> const&)+5C↑j
.text:000000000000D934                 ADRP            X1, #aHeifcapture@PAGE ; "HeifCapture"
.text:000000000000D938                 ADRP            X2, #aCanNotFindCove@PAGE ; "Can not find cover info"
.text:000000000000D93C                 ADD             X1, X1, #aHeifcapture@PAGEOFF ; "HeifCapture"
.text:000000000000D940                 ADD             X2, X2, #aCanNotFindCove@PAGEOFF ; "Can not find cover info"
.text:000000000000D944                 MOV             W0, #6
.text:000000000000D948                 BL              .__android_log_print
.text:000000000000D94C                 MOV             W0, #0xFFFFFFEA
.text:000000000000D950                 B               loc_D98C
.text:000000000000D954 ; ---------------------------------------------------------------------------
.text:000000000000D954 loc_D954                                ; CODE XREF: android::HeifCapture::store(android::sp<android::AMessage> const&)+98↑j
.text:000000000000D954                 ADRP            X1, #aHeifcapture@PAGE ; "HeifCapture"
.text:000000000000D958                 ADRP            X2, #aCanNotMakeOutp@PAGE ; "Can not make output file"
.text:000000000000D95C                 ADD             X1, X1, #aHeifcapture@PAGEOFF ; "HeifCapture"
.text:000000000000D960                 ADD             X2, X2, #aCanNotMakeOutp@PAGEOFF ; "Can not make output file"
.text:000000000000D964                 MOV             W0, #6
.text:000000000000D968                 BL              .__android_log_print
.text:000000000000D96C                 MOV             W0, #0xFFFFFFEA
.text:000000000000D970                 B               loc_D988
.text:000000000000D974 ; ---------------------------------------------------------------------------
.text:000000000000D974 loc_D974                                ; CODE XREF: android::HeifCapture::store(android::sp<android::AMessage> const&)+394↑j
.text:000000000000D974                 ADRP            X2, #aStoreHeifBuffe@PAGE ; "store heif buffer successly"
.text:000000000000D978                 ADD             X2, X2, #aStoreHeifBuffe@PAGEOFF ; "store heif buffer successly"
.text:000000000000D97C                 MOV             W0, #4
.text:000000000000D980                 BL              .__android_log_print
.text:000000000000D984                 MOV             W0, WZR
.text:000000000000D988 loc_D988                                ; CODE XREF: android::HeifCapture::store(android::sp<android::AMessage> const&)+3C0↑j
.text:000000000000D988                                         ; android::HeifCapture::store(android::sp<android::AMessage> const&)+400↑j
.text:000000000000D988                 LDR             X21, [SP,#0xA0+var_A0]
.text:000000000000D98C loc_D98C                                ; CODE XREF: android::HeifCapture::store(android::sp<android::AMessage> const&)+3E0↑j
.text:000000000000D98C                 LDR             X8, [X21,#0x28]
.text:000000000000D990                 LDR             X9, [SP,#0xA0+var_58]
.text:000000000000D994                 CMP             X8, X9
.text:000000000000D998                 B.NE            loc_D9BC
.text:000000000000D99C                 LDP             X29, X30, [SP,#0xA0+var_s0]
.text:000000000000D9A0                 LDP             X20, X19, [SP,#0xA0+var_10]
.text:000000000000D9A4                 LDP             X22, X21, [SP,#0xA0+var_20]
.text:000000000000D9A8                 LDP             X24, X23, [SP,#0xA0+var_30]
.text:000000000000D9AC                 LDP             X26, X25, [SP,#0xA0+var_40]
.text:000000000000D9B0                 LDP             X28, X27, [SP,#0xA0+var_50]
.text:000000000000D9B4                 ADD             SP, SP, #0xB0
.text:000000000000D9B8                 RET
.text:000000000000D9BC ; ---------------------------------------------------------------------------
.text:000000000000D9BC loc_D9BC                                ; CODE XREF: android::HeifCapture::store(android::sp<android::AMessage> const&)+428↑j
.text:000000000000D9BC                 BL              .__stack_chk_fail
.text:000000000000D9BC ; } // starts at D570
.text:000000000000D9BC ; End of function android::HeifCapture::store(android::sp<android::AMessage> const&)
.text:000000000000D9C0 ; =============== S U B R O U T I N E =======================================
.text:000000000000D9C0 ; Attributes: bp-based frame
.text:000000000000D9C0 ; android::HeifCapture::initMuxer(android::sp<android::AMessage> const&)
.text:000000000000D9C0                 EXPORT _ZN7android11HeifCapture9initMuxerERKNS_2spINS_8AMessageEEE
.text:000000000000D9C0 _ZN7android11HeifCapture9initMuxerERKNS_2spINS_8AMessageEEE
.text:000000000000D9C0                                         ; CODE XREF: android::HeifCapture::initMuxer(android::sp<android::AMessage> const&)+C↓j
.text:000000000000D9C0                                         ; DATA XREF: LOAD:0000000000001B78↑o ...
.text:000000000000D9C0 var_48          = -0x48
.text:000000000000D9C0 var_3C          = -0x3C
.text:000000000000D9C0 var_38          = -0x38
.text:000000000000D9C0 var_30          = -0x30
.text:000000000000D9C0 var_20          = -0x20
.text:000000000000D9C0 var_10          = -0x10
.text:000000000000D9C0 var_s0          =  0
.text:000000000000D9C0 ; __unwind {
.text:000000000000D9C0                 SUB             SP, SP, #0x60
.text:000000000000D9C4                 STP             X24, X23, [SP,#0x50+var_30]
.text:000000000000D9C8                 STP             X22, X21, [SP,#0x50+var_20]
.text:000000000000D9CC                 STP             X20, X19, [SP,#0x50+var_10]
.text:000000000000D9D0                 STP             X29, X30, [SP,#0x50+var_s0]
.text:000000000000D9D4                 ADD             X29, SP, #0x50
.text:000000000000D9D8                 MRS             X24, #3, c13, c0, #2
.text:000000000000D9DC                 MOV             X20, X1
.text:000000000000D9E0                 LDR             X8, [X24,#0x28]
.text:000000000000D9E4                 MOV             X19, X0
.text:000000000000D9E8                 ADD             X2, SP, #0x50+var_3C ; int *
.text:000000000000D9EC                 STR             X8, [SP,#0x50+var_38]
.text:000000000000D9F0                 LDR             X8, [X1]
.text:000000000000D9F4                 ADRP            X1, #aOutputFd@PAGE ; "output-fd"
.text:000000000000D9F8                 ADD             X1, X1, #aOutputFd@PAGEOFF ; "output-fd"
.text:000000000000D9FC                 MOV             X0, X8  ; this
.text:000000000000DA00                 BL              ._ZNK7android8AMessage9findInt32EPKcPi ; android::AMessage::findInt32(char const*,int *)
.text:000000000000DA04                 TBZ             W0, #0, loc_DA1C
.text:000000000000DA08                 ADRP            X1, #aHeifcapture@PAGE ; "HeifCapture"
.text:000000000000DA0C                 ADRP            X2, #aSFileDescripto@PAGE ; "%s : file descriptor mode"
.text:000000000000DA10                 ADD             X1, X1, #aHeifcapture@PAGEOFF ; "HeifCapture"
.text:000000000000DA14                 ADD             X2, X2, #aSFileDescripto@PAGEOFF ; "%s : file descriptor mode"
.text:000000000000DA18                 B               loc_DA44
.text:000000000000DA1C ; ---------------------------------------------------------------------------
.text:000000000000DA1C loc_DA1C                                ; CODE XREF: android::HeifCapture::initMuxer(android::sp<android::AMessage> const&)+44↑j
.text:000000000000DA1C                 LDR             X0, [X20] ; this
.text:000000000000DA20                 ADRP            X1, #aOutputBuffer@PAGE ; "output-buffer"
.text:000000000000DA24                 ADD             X1, X1, #aOutputBuffer@PAGEOFF ; "output-buffer"
.text:000000000000DA28                 ADD             X2, SP, #0x50+var_48 ; void **
.text:000000000000DA2C                 BL              ._ZNK7android8AMessage11findPointerEPKcPPv ; android::AMessage::findPointer(char const*,void **)
.text:000000000000DA30                 ADRP            X1, #aHeifcapture@PAGE ; "HeifCapture"
.text:000000000000DA34                 ADD             X1, X1, #aHeifcapture@PAGEOFF ; "HeifCapture"
.text:000000000000DA38                 TBZ             W0, #0, loc_DAC0
.text:000000000000DA3C                 ADRP            X2, #aSBufferPointer@PAGE ; "%s : buffer pointer mode"
.text:000000000000DA40                 ADD             X2, X2, #aSBufferPointer@PAGEOFF ; "%s : buffer pointer mode"
.text:000000000000DA44 loc_DA44                                ; CODE XREF: android::HeifCapture::initMuxer(android::sp<android::AMessage> const&)+58↑j
.text:000000000000DA44                 ADRP            X3, #aInitmuxer@PAGE ; "initMuxer"
.text:000000000000DA48                 ADD             X3, X3, #aInitmuxer@PAGEOFF ; "initMuxer"
.text:000000000000DA4C                 MOV             W0, #4
.text:000000000000DA50                 BL              .__android_log_print
.text:000000000000DA54                 MOV             W0, #1
.text:000000000000DA58                 BL              ._ZN7android13HeifMuxerBase6CreateENS0_9MuxerTypeE ; android::HeifMuxerBase::Create(android::HeifMuxerBase::MuxerType)
.text:000000000000DA5C                 MOV             X23, X19
.text:000000000000DA60                 MOV             X21, X0
.text:000000000000DA64                 LDR             X22, [X23,#0x28]!
.text:000000000000DA68                 CBZ             X0, loc_DA78
.text:000000000000DA6C                 MOV             X0, X21 ; this
.text:000000000000DA70                 MOV             X1, X23 ; void *
.text:000000000000DA74                 BL              ._ZNK7android7RefBase9incStrongEPKv ; android::RefBase::incStrong(void const*)
.text:000000000000DA78 loc_DA78                                ; CODE XREF: android::HeifCapture::initMuxer(android::sp<android::AMessage> const&)+A8↑j
.text:000000000000DA78                 CBZ             X22, loc_DA88
.text:000000000000DA7C                 MOV             X0, X22 ; this
.text:000000000000DA80                 MOV             X1, X23 ; void *
.text:000000000000DA84                 BL              ._ZNK7android7RefBase9decStrongEPKv ; android::RefBase::decStrong(void const*)
.text:000000000000DA88 loc_DA88                                ; CODE XREF: android::HeifCapture::initMuxer(android::sp<android::AMessage> const&):loc_DA78↑j
.text:000000000000DA88                 LDR             X8, [X23]
.text:000000000000DA8C                 CMP             X22, X8
.text:000000000000DA90                 B.EQ            loc_DA98
.text:000000000000DA94                 BL              ._ZN7android14sp_report_raceEv ; android::sp_report_race(void)
.text:000000000000DA98 loc_DA98                                ; CODE XREF: android::HeifCapture::initMuxer(android::sp<android::AMessage> const&)+D0↑j
.text:000000000000DA98                 STR             X21, [X19,#0x28]
.text:000000000000DA9C                 MOV             X0, X21
.text:000000000000DAA0                 LDR             X8, [X21]
.text:000000000000DAA4                 MOV             X1, X20
.text:000000000000DAA8                 LDR             X8, [X8,#0x30]
.text:000000000000DAAC                 BLR             X8
.text:000000000000DAB0                 MOV             W8, #1
.text:000000000000DAB4                 MOV             W0, WZR
.text:000000000000DAB8                 STRB            W8, [X19,#0x20]
.text:000000000000DABC                 B               loc_DADC
.text:000000000000DAC0 ; ---------------------------------------------------------------------------
.text:000000000000DAC0 loc_DAC0                                ; CODE XREF: android::HeifCapture::initMuxer(android::sp<android::AMessage> const&)+78↑j
.text:000000000000DAC0                 ADRP            X2, #aSCanNotFindOut@PAGE ; "%s: Can not find output info"
.text:000000000000DAC4                 ADRP            X3, #aInitmuxer@PAGE ; "initMuxer"
.text:000000000000DAC8                 ADD             X2, X2, #aSCanNotFindOut@PAGEOFF ; "%s: Can not find output info"
.text:000000000000DACC                 ADD             X3, X3, #aInitmuxer@PAGEOFF ; "initMuxer"
.text:000000000000DAD0                 MOV             W0, #6
.text:000000000000DAD4                 BL              .__android_log_print
.text:000000000000DAD8                 MOV             W0, #0xFFFFFFEA
.text:000000000000DADC loc_DADC                                ; CODE XREF: android::HeifCapture::initMuxer(android::sp<android::AMessage> const&)+FC↑j
.text:000000000000DADC                 LDR             X8, [X24,#0x28]
.text:000000000000DAE0                 LDR             X9, [SP,#0x50+var_38]
.text:000000000000DAE4                 CMP             X8, X9
.text:000000000000DAE8                 B.NE            loc_DB04
.text:000000000000DAEC                 LDP             X29, X30, [SP,#0x50+var_s0]
.text:000000000000DAF0                 LDP             X20, X19, [SP,#0x50+var_10]
.text:000000000000DAF4                 LDP             X22, X21, [SP,#0x50+var_20]
.text:000000000000DAF8                 LDP             X24, X23, [SP,#0x50+var_30]
.text:000000000000DAFC                 ADD             SP, SP, #0x60 ; '`'
.text:000000000000DB00                 RET
.text:000000000000DB04 ; ---------------------------------------------------------------------------
.text:000000000000DB04 loc_DB04                                ; CODE XREF: android::HeifCapture::initMuxer(android::sp<android::AMessage> const&)+128↑j
.text:000000000000DB04                 BL              .__stack_chk_fail
.text:000000000000DB04 ; } // starts at D9C0
.text:000000000000DB04 ; End of function android::HeifCapture::initMuxer(android::sp<android::AMessage> const&)
.text:000000000000DB08 ; =============== S U B R O U T I N E =======================================
.text:000000000000DB08 ; Attributes: bp-based frame
.text:000000000000DB08 sub_DB08                                ; CODE XREF: android::HeifCapture::store(android::sp<android::AMessage> const&)+118↑p
.text:000000000000DB08 var_118         = -0x118
.text:000000000000DB08 var_110         = -0x110
.text:000000000000DB08 var_F0          = -0xF0
.text:000000000000DB08 var_D0          = -0xD0
.text:000000000000DB08 var_B0          = -0xB0
.text:000000000000DB08 var_88          = -0x88
.text:000000000000DB08 var_80          = -0x80
.text:000000000000DB08 var_70          = -0x70
.text:000000000000DB08 var_60          = -0x60
.text:000000000000DB08 var_38          = -0x38
.text:000000000000DB08 var_28          = -0x28
.text:000000000000DB08 var_10          = -0x10
.text:000000000000DB08 var_s0          =  0
.text:000000000000DB08 ; __unwind {
.text:000000000000DB08                 SUB             SP, SP, #0x130
.text:000000000000DB0C                 STP             X28, X19, [SP,#0x120+var_10]
.text:000000000000DB10                 STP             X29, X30, [SP,#0x120+var_s0]
.text:000000000000DB14                 ADD             X29, SP, #0x120
.text:000000000000DB18                 MRS             X19, #3, c13, c0, #2
.text:000000000000DB1C                 STP             Q6, Q7, [SP,#0x120+var_B0]
.text:000000000000DB20                 STP             Q4, Q5, [SP,#0x120+var_D0]
.text:000000000000DB24                 MOV             X8, #0xFFFFFFFFFFFFFFD8
.text:000000000000DB28                 STP             Q2, Q3, [SP,#0x120+var_F0]
.text:000000000000DB2C                 ADD             X10, SP, #0x120+var_110
.text:000000000000DB30                 STP             Q0, Q1, [SP,#0x120+var_110]
.text:000000000000DB34                 MOVK            X8, #0xFF80,LSL#32
.text:000000000000DB38                 STP             X6, X7, [X29,#var_70]
.text:000000000000DB3C                 ADD             X10, X10, #0x80
.text:000000000000DB40                 STP             X4, X5, [X29,#var_80]
.text:000000000000DB44                 SUB             X11, X29, #-var_88
.text:000000000000DB48                 STUR            X3, [X29,#var_88]
.text:000000000000DB4C                 ADRP            X3, #aCover02d@PAGE ; "cover%02d"
.text:000000000000DB50                 LDR             X9, [X19,#0x28]
.text:000000000000DB54                 ADD             X3, X3, #aCover02d@PAGEOFF ; "cover%02d"
.text:000000000000DB58                 SUB             X4, X29, #-var_60
.text:000000000000DB5C                 MOV             W1, WZR
.text:000000000000DB60                 MOV             W2, #8
.text:000000000000DB64                 STR             X9, [SP,#0x120+var_118]
.text:000000000000DB68                 ADD             X9, X11, #0x28 ; '('
.text:000000000000DB6C                 ADD             X11, X29, #0x10
.text:000000000000DB70                 STP             X10, X8, [X29,#var_28]
.text:000000000000DB74                 SUB             X8, X29, #-var_38
.text:000000000000DB78                 STP             X11, X9, [X29,#var_38]
.text:000000000000DB7C                 LDP             Q1, Q0, [X8]
.text:000000000000DB80                 STP             Q1, Q0, [X29,#var_60]
.text:000000000000DB84                 BL              .__vsprintf_chk
.text:000000000000DB88                 LDR             X8, [X19,#0x28]
.text:000000000000DB8C                 LDR             X9, [SP,#0x120+var_118]
.text:000000000000DB90                 CMP             X8, X9
.text:000000000000DB94                 B.NE            loc_DBA8
.text:000000000000DB98                 LDP             X29, X30, [SP,#0x120+var_s0]
.text:000000000000DB9C                 LDP             X28, X19, [SP,#0x120+var_10]
.text:000000000000DBA0                 ADD             SP, SP, #0x130
.text:000000000000DBA4                 RET
.text:000000000000DBA8 ; ---------------------------------------------------------------------------
.text:000000000000DBA8 loc_DBA8                                ; CODE XREF: sub_DB08+8C↑j
.text:000000000000DBA8                 BL              .__stack_chk_fail
.text:000000000000DBA8 ; } // starts at DB08
.text:000000000000DBA8 ; End of function sub_DB08
.text:000000000000DBA8 ; ---------------------------------------------------------------------------
.text:000000000000DBAC                 ALIGN 0x10
.text:000000000000DBB0 ; =============== S U B R O U T I N E =======================================
.text:000000000000DBB0 ; Attributes: bp-based frame
.text:000000000000DBB0 ; android::HeifCapture::getEncoder(android::Role, android::sp<android::AMessage> const&)
.text:000000000000DBB0                 EXPORT _ZN7android11HeifCapture10getEncoderENS_4RoleERKNS_2spINS_8AMessageEEE
.text:000000000000DBB0 _ZN7android11HeifCapture10getEncoderENS_4RoleERKNS_2spINS_8AMessageEEE
.text:000000000000DBB0                                         ; CODE XREF: android::HeifCapture::getEncoder(android::Role,android::sp<android::AMessage> const&)+C↓j
.text:000000000000DBB0                                         ; DATA XREF: LOAD:00000000000016F8↑o ...
.text:000000000000DBB0 var_68          = -0x68
.text:000000000000DBB0 var_60          = -0x60
.text:000000000000DBB0 var_58          = -0x58
.text:000000000000DBB0 var_50          = -0x50
.text:000000000000DBB0 var_40          = -0x40
.text:000000000000DBB0 var_30          = -0x30
.text:000000000000DBB0 var_20          = -0x20
.text:000000000000DBB0 var_10          = -0x10
.text:000000000000DBB0 var_s0          =  0
.text:000000000000DBB0 ; __unwind {
.text:000000000000DBB0                 SUB             SP, SP, #0x80
.text:000000000000DBB4                 STR             X27, [SP,#0x70+var_50]
.text:000000000000DBB8                 STP             X26, X25, [SP,#0x70+var_40]
.text:000000000000DBBC                 STP             X24, X23, [SP,#0x70+var_30]
.text:000000000000DBC0                 STP             X22, X21, [SP,#0x70+var_20]
.text:000000000000DBC4                 STP             X20, X19, [SP,#0x70+var_10]
.text:000000000000DBC8                 STP             X29, X30, [SP,#0x70+var_s0]
.text:000000000000DBCC                 ADD             X29, SP, #0x70
.text:000000000000DBD0                 MRS             X27, #3, c13, c0, #2
.text:000000000000DBD4                 MOV             X19, X8
.text:000000000000DBD8                 LDR             X9, [X27,#0x28]
.text:000000000000DBDC                 MOV             X22, X2
.text:000000000000DBE0                 MOV             W20, W1
.text:000000000000DBE4                 MOV             X21, X0
.text:000000000000DBE8                 ADD             X23, X0, #0x38 ; '8'
.text:000000000000DBEC                 STR             X9, [SP,#0x70+var_58]
.text:000000000000DBF0                 LDR             X8, [X0,#0x48]
.text:000000000000DBF4                 STR             XZR, [SP,#0x70+var_60]
.text:000000000000DBF8                 CBZ             X8, loc_DC64
.text:000000000000DBFC                 MOV             X24, XZR
.text:000000000000DC00 loc_DC00                                ; CODE XREF: android::HeifCapture::getEncoder(android::Role,android::sp<android::AMessage> const&)+B0↓j
.text:000000000000DC00                 MOV             X0, X23 ; this
.text:000000000000DC04                 MOV             X1, X24 ; unsigned __int64
.text:000000000000DC08                 BL              ._ZN7android10VectorImpl16editItemLocationEm ; android::VectorImpl::editItemLocation(ulong)
.text:000000000000DC0C                 LDR             X26, [SP,#0x70+var_60]
.text:000000000000DC10                 LDR             X25, [X0]
.text:000000000000DC14                 CBZ             X25, loc_DC24
.text:000000000000DC18                 ADD             X1, SP, #0x70+var_60 ; void *
.text:000000000000DC1C                 MOV             X0, X25 ; this
.text:000000000000DC20                 BL              ._ZNK7android7RefBase9incStrongEPKv ; android::RefBase::incStrong(void const*)
.text:000000000000DC24 loc_DC24                                ; CODE XREF: android::HeifCapture::getEncoder(android::Role,android::sp<android::AMessage> const&)+64↑j
.text:000000000000DC24                 CBZ             X26, loc_DC34
.text:000000000000DC28                 ADD             X1, SP, #0x70+var_60 ; void *
.text:000000000000DC2C                 MOV             X0, X26 ; this
.text:000000000000DC30                 BL              ._ZNK7android7RefBase9decStrongEPKv ; android::RefBase::decStrong(void const*)
.text:000000000000DC34 loc_DC34                                ; CODE XREF: android::HeifCapture::getEncoder(android::Role,android::sp<android::AMessage> const&):loc_DC24↑j
.text:000000000000DC34                 LDR             X8, [SP,#0x70+var_60]
.text:000000000000DC38                 CMP             X26, X8
.text:000000000000DC3C                 B.EQ            loc_DC44
.text:000000000000DC40                 BL              ._ZN7android14sp_report_raceEv ; android::sp_report_race(void)
.text:000000000000DC44 loc_DC44                                ; CODE XREF: android::HeifCapture::getEncoder(android::Role,android::sp<android::AMessage> const&)+8C↑j
.text:000000000000DC44                 LDR             W8, [X25,#0x10]
.text:000000000000DC48                 STR             X25, [SP,#0x70+var_60]
.text:000000000000DC4C                 CMP             W8, W20
.text:000000000000DC50                 B.EQ            loc_DCD0
.text:000000000000DC54                 LDR             X8, [X21,#0x48]
.text:000000000000DC58                 ADD             X24, X24, #1
.text:000000000000DC5C                 CMP             X8, X24
.text:000000000000DC60                 B.HI            loc_DC00
.text:000000000000DC64 loc_DC64                                ; CODE XREF: android::HeifCapture::getEncoder(android::Role,android::sp<android::AMessage> const&)+48↑j
.text:000000000000DC64                 ADD             X8, SP, #0x70+var_68
.text:000000000000DC68                 MOV             W0, W20
.text:000000000000DC6C                 BL              ._ZN7android11HeifEncoder6createENS_4RoleE ; android::HeifEncoder::create(android::Role)
.text:000000000000DC70                 LDR             X24, [SP,#0x70+var_60]
.text:000000000000DC74                 CBZ             X24, loc_DC84
.text:000000000000DC78                 ADD             X1, SP, #0x70+var_60 ; void *
.text:000000000000DC7C                 MOV             X0, X24 ; this
.text:000000000000DC80                 BL              ._ZNK7android7RefBase9decStrongEPKv ; android::RefBase::decStrong(void const*)
.text:000000000000DC84 loc_DC84                                ; CODE XREF: android::HeifCapture::getEncoder(android::Role,android::sp<android::AMessage> const&)+C4↑j
.text:000000000000DC84                 LDR             X8, [SP,#0x70+var_60]
.text:000000000000DC88                 CMP             X24, X8
.text:000000000000DC8C                 B.EQ            loc_DC94
.text:000000000000DC90                 BL              ._ZN7android14sp_report_raceEv ; android::sp_report_race(void)
.text:000000000000DC94 loc_DC94                                ; CODE XREF: android::HeifCapture::getEncoder(android::Role,android::sp<android::AMessage> const&)+DC↑j
.text:000000000000DC94                 LDR             X0, [SP,#0x70+var_68]
.text:000000000000DC98                 ADD             X2, X21, #0x28 ; '('
.text:000000000000DC9C                 MOV             X1, X22
.text:000000000000DCA0                 STR             X0, [SP,#0x70+var_60]
.text:000000000000DCA4                 BL              ._ZN7android11HeifEncoder5startERKNS_2spINS_8AMessageEEERKNS1_INS_13HeifMuxerBaseEEE ; android::HeifEncoder::start(android::sp<android::AMessage> const&,android::sp<android::HeifMuxerBase> const&)
.text:000000000000DCA8                 CBZ             W0, loc_DD18
.text:000000000000DCAC                 ADRP            X1, #aHeifcapture@PAGE ; "HeifCapture"
.text:000000000000DCB0                 ADRP            X2, #aCanNotStartEnc@PAGE ; "can not start encoder(%d) for role(%d)"
.text:000000000000DCB4                 MOV             W3, W0
.text:000000000000DCB8                 ADD             X1, X1, #aHeifcapture@PAGEOFF ; "HeifCapture"
.text:000000000000DCBC                 ADD             X2, X2, #aCanNotStartEnc@PAGEOFF ; "can not start encoder(%d) for role(%d)"
.text:000000000000DCC0                 MOV             W0, #6
.text:000000000000DCC4                 MOV             W4, W20
.text:000000000000DCC8                 BL              .__android_log_print
.text:000000000000DCCC                 B               loc_DD00
.text:000000000000DCD0 ; ---------------------------------------------------------------------------
.text:000000000000DCD0 loc_DCD0                                ; CODE XREF: android::HeifCapture::getEncoder(android::Role,android::sp<android::AMessage> const&)+A0↑j
.text:000000000000DCD0                 ADD             X2, X21, #0x28 ; '('
.text:000000000000DCD4                 MOV             X0, X25
.text:000000000000DCD8                 MOV             X1, X22
.text:000000000000DCDC                 BL              ._ZN7android11HeifEncoder7restartERKNS_2spINS_8AMessageEEERKNS1_INS_13HeifMuxerBaseEEE ; android::HeifEncoder::restart(android::sp<android::AMessage> const&,android::sp<android::HeifMuxerBase> const&)
.text:000000000000DCE0                 CBZ             W0, loc_DD2C
.text:000000000000DCE4                 ADRP            X1, #aHeifcapture@PAGE ; "HeifCapture"
.text:000000000000DCE8                 ADRP            X2, #aCanNotRestartE@PAGE ; "can not restart encoder for reuse(%d)"
.text:000000000000DCEC                 MOV             W3, W0
.text:000000000000DCF0                 ADD             X1, X1, #aHeifcapture@PAGEOFF ; "HeifCapture"
.text:000000000000DCF4                 ADD             X2, X2, #aCanNotRestartE@PAGEOFF ; "can not restart encoder for reuse(%d)"
.text:000000000000DCF8                 MOV             W0, #6
.text:000000000000DCFC                 BL              .__android_log_print
.text:000000000000DD00 loc_DD00                                ; CODE XREF: android::HeifCapture::getEncoder(android::Role,android::sp<android::AMessage> const&)+11C↑j
.text:000000000000DD00                 LDR             X0, [SP,#0x70+var_60] ; this
.text:000000000000DD04                 STR             XZR, [X19]
.text:000000000000DD08                 CBZ             X0, loc_DD38
.text:000000000000DD0C                 ADD             X1, SP, #0x70+var_60 ; void *
.text:000000000000DD10                 BL              ._ZNK7android7RefBase9decStrongEPKv ; android::RefBase::decStrong(void const*)
.text:000000000000DD14                 B               loc_DD38
.text:000000000000DD18 ; ---------------------------------------------------------------------------
.text:000000000000DD18 loc_DD18                                ; CODE XREF: android::HeifCapture::getEncoder(android::Role,android::sp<android::AMessage> const&)+F8↑j
.text:000000000000DD18                 LDR             X2, [X21,#0x48] ; unsigned __int64
.text:000000000000DD1C                 ADD             X1, SP, #0x70+var_60 ; void *
.text:000000000000DD20                 MOV             X0, X23 ; this
.text:000000000000DD24                 MOV             W3, #1  ; unsigned __int64
.text:000000000000DD28                 BL              ._ZN7android10VectorImpl8insertAtEPKvmm ; android::VectorImpl::insertAt(void const*,ulong,ulong)
.text:000000000000DD2C loc_DD2C                                ; CODE XREF: android::HeifCapture::getEncoder(android::Role,android::sp<android::AMessage> const&)+130↑j
.text:000000000000DD2C                 LDR             X8, [SP,#0x70+var_60]
.text:000000000000DD30                 STR             XZR, [SP,#0x70+var_60]
.text:000000000000DD34                 STR             X8, [X19]
.text:000000000000DD38 loc_DD38                                ; CODE XREF: android::HeifCapture::getEncoder(android::Role,android::sp<android::AMessage> const&)+158↑j
.text:000000000000DD38                                         ; android::HeifCapture::getEncoder(android::Role,android::sp<android::AMessage> const&)+164↑j
.text:000000000000DD38                 LDR             X8, [X27,#0x28]
.text:000000000000DD3C                 LDR             X9, [SP,#0x70+var_58]
.text:000000000000DD40                 CMP             X8, X9
.text:000000000000DD44                 B.NE            loc_DD68
.text:000000000000DD48                 LDP             X29, X30, [SP,#0x70+var_s0]
.text:000000000000DD4C                 LDP             X20, X19, [SP,#0x70+var_10]
.text:000000000000DD50                 LDP             X22, X21, [SP,#0x70+var_20]
.text:000000000000DD54                 LDP             X24, X23, [SP,#0x70+var_30]
.text:000000000000DD58                 LDP             X26, X25, [SP,#0x70+var_40]
.text:000000000000DD5C                 LDR             X27, [SP,#0x70+var_50]
.text:000000000000DD60                 ADD             SP, SP, #0x80
.text:000000000000DD64                 RET
.text:000000000000DD68 ; ---------------------------------------------------------------------------
.text:000000000000DD68 loc_DD68                                ; CODE XREF: android::HeifCapture::getEncoder(android::Role,android::sp<android::AMessage> const&)+194↑j
.text:000000000000DD68                 BL              .__stack_chk_fail
.text:000000000000DD68 ; } // starts at DBB0
.text:000000000000DD68 ; End of function android::HeifCapture::getEncoder(android::Role,android::sp<android::AMessage> const&)
.text:000000000000DD68 ; ---------------------------------------------------------------------------
.text:000000000000DD6C                 ALIGN 0x10
.text:000000000000DD70 ; =============== S U B R O U T I N E =======================================
.text:000000000000DD70 ; Attributes: bp-based frame
.text:000000000000DD70 ; __int64 __fastcall android::HeifCapture::deinitMuxer(android::HeifCapture *__hidden this)
.text:000000000000DD70                 EXPORT _ZN7android11HeifCapture11deinitMuxerEv
.text:000000000000DD70 _ZN7android11HeifCapture11deinitMuxerEv ; CODE XREF: android::HeifCapture::deinitMuxer(void)+C↓j
.text:000000000000DD70                                         ; DATA XREF: LOAD:00000000000018C0↑o ...
.text:000000000000DD70 var_20          = -0x20
.text:000000000000DD70 var_10          = -0x10
.text:000000000000DD70 var_s0          =  0
.text:000000000000DD70 ; __unwind {
.text:000000000000DD70                 STP             X22, X21, [SP,#-0x10+var_20]!
.text:000000000000DD74                 STP             X20, X19, [SP,#0x20+var_10]
.text:000000000000DD78                 STP             X29, X30, [SP,#0x20+var_s0]
.text:000000000000DD7C                 ADD             X29, SP, #0x20
.text:000000000000DD80                 LDRB            W8, [X0,#0x20]
.text:000000000000DD84                 CBZ             W8, loc_DE5C
.text:000000000000DD88                 MOV             X20, X0
.text:000000000000DD8C                 MOV             X19, X0
.text:000000000000DD90                 LDR             X0, [X20,#0x30]! ; this
.text:000000000000DD94                 CBZ             X0, loc_DDEC
.text:000000000000DD98                 BL              ._ZN7android10MediaMuxer4stopEv ; android::MediaMuxer::stop(void)
.text:000000000000DD9C                 LDR             X21, [X20]
.text:000000000000DDA0                 CBZ             X21, loc_DDC4
.text:000000000000DDA4                 MOV             X0, X21 ; this
.text:000000000000DDA8                 MOV             X1, X20 ; void *
.text:000000000000DDAC                 BL              ._ZNK7android7RefBase9decStrongEPKv ; android::RefBase::decStrong(void const*)
.text:000000000000DDB0                 LDR             X8, [X20]
.text:000000000000DDB4                 CMP             X21, X8
.text:000000000000DDB8                 B.EQ            loc_DDC0
.text:000000000000DDBC                 BL              ._ZN7android14sp_report_raceEv ; android::sp_report_race(void)
.text:000000000000DDC0 loc_DDC0                                ; CODE XREF: android::HeifCapture::deinitMuxer(void)+48↑j
.text:000000000000DDC0                 STR             XZR, [X20]
.text:000000000000DDC4 loc_DDC4                                ; CODE XREF: android::HeifCapture::deinitMuxer(void)+30↑j
.text:000000000000DDC4                 LDR             X21, [X20]
.text:000000000000DDC8                 CBZ             X21, loc_DDD8
.text:000000000000DDCC                 MOV             X0, X21 ; this
.text:000000000000DDD0                 MOV             X1, X20 ; void *
.text:000000000000DDD4                 BL              ._ZNK7android7RefBase9decStrongEPKv ; android::RefBase::decStrong(void const*)
.text:000000000000DDD8 loc_DDD8                                ; CODE XREF: android::HeifCapture::deinitMuxer(void)+58↑j
.text:000000000000DDD8                 LDR             X8, [X20]
.text:000000000000DDDC                 CMP             X21, X8
.text:000000000000DDE0                 B.EQ            loc_DDE8
.text:000000000000DDE4                 BL              ._ZN7android14sp_report_raceEv ; android::sp_report_race(void)
.text:000000000000DDE8 loc_DDE8                                ; CODE XREF: android::HeifCapture::deinitMuxer(void)+70↑j
.text:000000000000DDE8                 STR             XZR, [X20]
.text:000000000000DDEC loc_DDEC                                ; CODE XREF: android::HeifCapture::deinitMuxer(void)+24↑j
.text:000000000000DDEC                 MOV             X21, X19
.text:000000000000DDF0                 LDR             X0, [X21,#0x28]!
.text:000000000000DDF4                 CBZ             X0, loc_DE64
.text:000000000000DDF8                 LDR             X8, [X0]
.text:000000000000DDFC                 LDR             X8, [X8,#0x40]
.text:000000000000DE00                 BLR             X8
.text:000000000000DE04                 LDR             X22, [X21]
.text:000000000000DE08                 MOV             W20, W0
.text:000000000000DE0C                 CBZ             X22, loc_DE30
.text:000000000000DE10                 MOV             X0, X22 ; this
.text:000000000000DE14                 MOV             X1, X21 ; void *
.text:000000000000DE18                 BL              ._ZNK7android7RefBase9decStrongEPKv ; android::RefBase::decStrong(void const*)
.text:000000000000DE1C                 LDR             X8, [X21]
.text:000000000000DE20                 CMP             X22, X8
.text:000000000000DE24                 B.EQ            loc_DE2C
.text:000000000000DE28                 BL              ._ZN7android14sp_report_raceEv ; android::sp_report_race(void)
.text:000000000000DE2C loc_DE2C                                ; CODE XREF: android::HeifCapture::deinitMuxer(void)+B4↑j
.text:000000000000DE2C                 STR             XZR, [X21]
.text:000000000000DE30 loc_DE30                                ; CODE XREF: android::HeifCapture::deinitMuxer(void)+9C↑j
.text:000000000000DE30                 LDR             X22, [X21]
.text:000000000000DE34                 CBZ             X22, loc_DE44
.text:000000000000DE38                 MOV             X0, X22 ; this
.text:000000000000DE3C                 MOV             X1, X21 ; void *
.text:000000000000DE40                 BL              ._ZNK7android7RefBase9decStrongEPKv ; android::RefBase::decStrong(void const*)
.text:000000000000DE44 loc_DE44                                ; CODE XREF: android::HeifCapture::deinitMuxer(void)+C4↑j
.text:000000000000DE44                 LDR             X8, [X21]
.text:000000000000DE48                 CMP             X22, X8
.text:000000000000DE4C                 B.EQ            loc_DE54
.text:000000000000DE50                 BL              ._ZN7android14sp_report_raceEv ; android::sp_report_race(void)
.text:000000000000DE54 loc_DE54                                ; CODE XREF: android::HeifCapture::deinitMuxer(void)+DC↑j
.text:000000000000DE54                 STR             XZR, [X21]
.text:000000000000DE58                 B               loc_DE68
.text:000000000000DE5C ; ---------------------------------------------------------------------------
.text:000000000000DE5C loc_DE5C                                ; CODE XREF: android::HeifCapture::deinitMuxer(void)+14↑j
.text:000000000000DE5C                 MOV             W20, WZR
.text:000000000000DE60                 B               loc_DE6C
.text:000000000000DE64 ; ---------------------------------------------------------------------------
.text:000000000000DE64 loc_DE64                                ; CODE XREF: android::HeifCapture::deinitMuxer(void)+84↑j
.text:000000000000DE64                 MOV             W20, WZR
.text:000000000000DE68 loc_DE68                                ; CODE XREF: android::HeifCapture::deinitMuxer(void)+E8↑j
.text:000000000000DE68                 STRB            WZR, [X19,#0x20]
.text:000000000000DE6C loc_DE6C                                ; CODE XREF: android::HeifCapture::deinitMuxer(void)+F0↑j
.text:000000000000DE6C                 MOV             W0, W20
.text:000000000000DE70                 LDP             X29, X30, [SP,#0x20+var_s0]
.text:000000000000DE74                 LDP             X20, X19, [SP,#0x20+var_10]
.text:000000000000DE78                 LDP             X22, X21, [SP+0x20+var_20],#0x30
.text:000000000000DE7C                 RET
.text:000000000000DE7C ; } // starts at DD70
.text:000000000000DE7C ; End of function android::HeifCapture::deinitMuxer(void)
.text:000000000000DE80 ; =============== S U B R O U T I N E =======================================
.text:000000000000DE80 ; Attributes: bp-based frame
.text:000000000000DE80                 EXPORT storeHeifCapture
.text:000000000000DE80 storeHeifCapture                        ; DATA XREF: LOAD:0000000000001E00↑o
.text:000000000000DE80 var_80          = -0x80
.text:000000000000DE80 var_78          = -0x78
.text:000000000000DE80 var_70          = -0x70
.text:000000000000DE80 var_68          = -0x68
.text:000000000000DE80 var_60          = -0x60
.text:000000000000DE80 var_58          = -0x58
.text:000000000000DE80 var_50          = -0x50
.text:000000000000DE80 var_48          = -0x48
.text:000000000000DE80 var_40          = -0x40
.text:000000000000DE80 var_30          = -0x30
.text:000000000000DE80 var_20          = -0x20
.text:000000000000DE80 var_10          = -0x10
.text:000000000000DE80 var_s0          =  0
.text:000000000000DE80 ; __unwind {
.text:000000000000DE80                 SUB             SP, SP, #0x90
.text:000000000000DE84                 STR             X25, [SP,#0x80+var_40]
.text:000000000000DE88                 STP             X24, X23, [SP,#0x80+var_30]
.text:000000000000DE8C                 STP             X22, X21, [SP,#0x80+var_20]
.text:000000000000DE90                 STP             X20, X19, [SP,#0x80+var_10]
.text:000000000000DE94                 STP             X29, X30, [SP,#0x80+var_s0]
.text:000000000000DE98                 ADD             X29, SP, #0x80
.text:000000000000DE9C                 MRS             X25, #3, c13, c0, #2
.text:000000000000DEA0                 MOV             W19, W0
.text:000000000000DEA4                 LDR             X8, [X25,#0x28]
.text:000000000000DEA8                 MOV             W0, #0x50 ; 'P' ; unsigned __int64
.text:000000000000DEAC                 MOV             W20, W4
.text:000000000000DEB0                 MOV             X21, X3
.text:000000000000DEB4                 MOV             X22, X2
.text:000000000000DEB8                 MOV             X23, X1
.text:000000000000DEBC                 STR             X8, [SP,#0x80+var_48]
.text:000000000000DEC0                 BL              ._Znwm  ; operator new(ulong)
.text:000000000000DEC4                 MOV             X24, X0
.text:000000000000DEC8                 BL              ._ZN7android23HeifCaptureImageBuilderC2Ev ; android::HeifCaptureImageBuilder::HeifCaptureImageBuilder(void)
.text:000000000000DECC                 ADD             X1, SP, #0x80+var_50 ; void *
.text:000000000000DED0                 STR             X24, [SP,#0x80+var_50]
.text:000000000000DED4                 MOV             X0, X24 ; this
.text:000000000000DED8                 BL              ._ZNK7android7RefBase9incStrongEPKv ; android::RefBase::incStrong(void const*)
.text:000000000000DEDC                 CBZ             X23, loc_E0A8
.text:000000000000DEE0                 MOV             W0, #0x50 ; 'P' ; unsigned __int64
.text:000000000000DEE4                 BL              ._Znwm  ; operator new(ulong)
.text:000000000000DEE8                 LDP             W2, W3, [X23]
.text:000000000000DEEC                 LDP             W4, W5, [X23,#8]
.text:000000000000DEF0                 LDP             W6, W7, [X23,#0x10]
.text:000000000000DEF4                 LDR             X8, [X23,#0x18]
.text:000000000000DEF8                 MOV             W1, #1
.text:000000000000DEFC                 LDR             W9, [X23,#0x20]
.text:000000000000DF00                 LDR             X10, [X23,#0x28]
.text:000000000000DF04                 LDR             W11, [X23,#0x30]
.text:000000000000DF08                 MOV             X23, X0
.text:000000000000DF0C                 STR             X8, [SP,#0x80+var_80]
.text:000000000000DF10                 STR             W9, [SP,#0x80+var_78]
.text:000000000000DF14                 STR             X10, [SP,#0x80+var_70]
.text:000000000000DF18                 STR             W11, [SP,#0x80+var_68]
.text:000000000000DF1C                 BL              ._ZN7android16HeifCaptureImageC2ENS_4RoleEiiiiiiPviS2_i ; android::HeifCaptureImage::HeifCaptureImage(android::Role,int,int,int,int,int,int,void *,int,void *,int)
.text:000000000000DF20                 ADD             X1, SP, #0x80+var_58 ; void *
.text:000000000000DF24                 STR             X23, [SP,#0x80+var_58]
.text:000000000000DF28                 MOV             X0, X23 ; this
.text:000000000000DF2C                 BL              ._ZNK7android7RefBase9incStrongEPKv ; android::RefBase::incStrong(void const*)
.text:000000000000DF30                 LDR             X0, [SP,#0x80+var_50]
.text:000000000000DF34                 ADD             X1, SP, #0x80+var_58
.text:000000000000DF38                 BL              ._ZN7android23HeifCaptureImageBuilder8addCoverERKNS_2spINS_16HeifCaptureImageEEE ; android::HeifCaptureImageBuilder::addCover(android::sp<android::HeifCaptureImage> const&)
.text:000000000000DF3C                 CBZ             X22, loc_DFA8
.text:000000000000DF40                 MOV             W0, #0x50 ; 'P' ; unsigned __int64
.text:000000000000DF44                 BL              ._Znwm  ; operator new(ulong)
.text:000000000000DF48                 LDP             W2, W3, [X22]
.text:000000000000DF4C                 LDP             W4, W5, [X22,#8]
.text:000000000000DF50                 LDP             W6, W7, [X22,#0x10]
.text:000000000000DF54                 LDR             X8, [X22,#0x18]
.text:000000000000DF58                 MOV             W1, #2
.text:000000000000DF5C                 LDR             W9, [X22,#0x20]
.text:000000000000DF60                 MOV             X22, X0
.text:000000000000DF64                 STR             WZR, [SP,#0x80+var_68]
.text:000000000000DF68                 STR             XZR, [SP,#0x80+var_70]
.text:000000000000DF6C                 STR             X8, [SP,#0x80+var_80]
.text:000000000000DF70                 STR             W9, [SP,#0x80+var_78]
.text:000000000000DF74                 BL              ._ZN7android16HeifCaptureImageC2ENS_4RoleEiiiiiiPviS2_i ; android::HeifCaptureImage::HeifCaptureImage(android::Role,int,int,int,int,int,int,void *,int,void *,int)
.text:000000000000DF78                 ADD             X1, SP, #0x80+var_60 ; void *
.text:000000000000DF7C                 STR             X22, [SP,#0x80+var_60]
.text:000000000000DF80                 MOV             X0, X22 ; this
.text:000000000000DF84                 BL              ._ZNK7android7RefBase9incStrongEPKv ; android::RefBase::incStrong(void const*)
.text:000000000000DF88                 LDP             X8, X0, [SP,#0x80+var_58]
.text:000000000000DF8C                 ADD             X2, SP, #0x80+var_60
.text:000000000000DF90                 LDR             W1, [X8,#0x10]
.text:000000000000DF94                 BL              ._ZN7android23HeifCaptureImageBuilder12addThumbnailEiRKNS_2spINS_16HeifCaptureImageEEE ; android::HeifCaptureImageBuilder::addThumbnail(int,android::sp<android::HeifCaptureImage> const&)
.text:000000000000DF98                 LDR             X0, [SP,#0x80+var_60] ; this
.text:000000000000DF9C                 CBZ             X0, loc_DFA8
.text:000000000000DFA0                 ADD             X1, SP, #0x80+var_60 ; void *
.text:000000000000DFA4                 BL              ._ZNK7android7RefBase9decStrongEPKv ; android::RefBase::decStrong(void const*)
.text:000000000000DFA8 loc_DFA8                                ; CODE XREF: storeHeifCapture+BC↑j
.text:000000000000DFA8                                         ; storeHeifCapture+11C↑j
.text:000000000000DFA8                 LDR             X0, [SP,#0x80+var_50] ; this
.text:000000000000DFAC                 MOV             X1, X21 ; void *
.text:000000000000DFB0                 MOV             W2, W20 ; int
.text:000000000000DFB4                 BL              ._ZN7android23HeifCaptureImageBuilder15setOutputBufferEPvi ; android::HeifCaptureImageBuilder::setOutputBuffer(void *,int)
.text:000000000000DFB8                 MOV             W0, #0x60 ; '`' ; unsigned __int64
.text:000000000000DFBC                 BL              ._Znwm  ; operator new(ulong)
.text:000000000000DFC0                 MOV             X20, X0
.text:000000000000DFC4                 BL              ._ZN7android7RefBaseC2Ev ; android::RefBase::RefBase(void)
.text:000000000000DFC8                 ADRP            X8, #_ZTVN7android11HeifCaptureE_ptr@PAGE
.text:000000000000DFCC                 ADD             X21, X20, #0x38 ; '8'
.text:000000000000DFD0                 MOV             X0, X21 ; this
.text:000000000000DFD4                 LDR             X8, [X8,#_ZTVN7android11HeifCaptureE_ptr@PAGEOFF]
.text:000000000000DFD8                 MOV             W1, #8  ; unsigned __int64
.text:000000000000DFDC                 MOV             W2, WZR ; unsigned int
.text:000000000000DFE0                 STP             XZR, XZR, [X20,#0x10]
.text:000000000000DFE4                 STRB            WZR, [X20,#0x20]
.text:000000000000DFE8                 STP             XZR, XZR, [X20,#0x28]
.text:000000000000DFEC                 ADD             X8, X8, #0x10
.text:000000000000DFF0                 STR             X8, [X20]
.text:000000000000DFF4                 BL              ._ZN7android10VectorImplC2Emj ; android::VectorImpl::VectorImpl(ulong,uint)
.text:000000000000DFF8                 ADRP            X8, #_ZTVN7android6VectorINS_2spINS_11HeifEncoderEEEEE_ptr@PAGE
.text:000000000000DFFC                 MOV             X0, X21 ; this
.text:000000000000E000                 LDR             X8, [X8,#_ZTVN7android6VectorINS_2spINS_11HeifEncoderEEEEE_ptr@PAGEOFF]
.text:000000000000E004                 ADD             X8, X8, #0x10
.text:000000000000E008                 STR             X8, [X20,#0x38]
.text:000000000000E00C                 BL              ._ZN7android10VectorImpl5clearEv ; android::VectorImpl::clear(void)
.text:000000000000E010                 ADD             X1, SP, #0x80+var_60 ; void *
.text:000000000000E014                 STR             X20, [SP,#0x80+var_60]
.text:000000000000E018                 MOV             X0, X20 ; this
.text:000000000000E01C                 BL              ._ZNK7android7RefBase9incStrongEPKv ; android::RefBase::incStrong(void const*)
.text:000000000000E020                 LDR             X0, [SP,#0x80+var_60] ; this
.text:000000000000E024                 MOV             W1, W19 ; int
.text:000000000000E028                 BL              ._ZN7android11HeifCapture5startEi ; android::HeifCapture::start(int)
.text:000000000000E02C                 LDR             X0, [SP,#0x80+var_60]
.text:000000000000E030                 ADD             X1, SP, #0x80+var_50
.text:000000000000E034                 BL              ._ZN7android11HeifCapture5storeERKNS_2spINS_23HeifCaptureImageBuilderEEE ; android::HeifCapture::store(android::sp<android::HeifCaptureImageBuilder> const&)
.text:000000000000E038                 LDR             X8, [SP,#0x80+var_60]
.text:000000000000E03C                 MOV             W19, W0
.text:000000000000E040                 MOV             X0, X8  ; this
.text:000000000000E044                 BL              ._ZN7android11HeifCapture4stopEv ; android::HeifCapture::stop(void)
.text:000000000000E048                 LDR             X0, [SP,#0x80+var_60] ; this
.text:000000000000E04C                 CBZ             X0, loc_E058
.text:000000000000E050                 ADD             X1, SP, #0x80+var_60 ; void *
.text:000000000000E054                 BL              ._ZNK7android7RefBase9decStrongEPKv ; android::RefBase::decStrong(void const*)
.text:000000000000E058 loc_E058                                ; CODE XREF: storeHeifCapture+1CC↑j
.text:000000000000E058                 LDR             X0, [SP,#0x80+var_58] ; this
.text:000000000000E05C                 CBZ             X0, loc_E068
.text:000000000000E060                 ADD             X1, SP, #0x80+var_58 ; void *
.text:000000000000E064                 BL              ._ZNK7android7RefBase9decStrongEPKv ; android::RefBase::decStrong(void const*)
.text:000000000000E068 loc_E068                                ; CODE XREF: storeHeifCapture+1DC↑j
.text:000000000000E068                 LDR             X0, [SP,#0x80+var_50] ; this
.text:000000000000E06C                 CBZ             X0, loc_E078
.text:000000000000E070 loc_E070                                ; CODE XREF: storeHeifCapture+230↓j
.text:000000000000E070                 ADD             X1, SP, #0x80+var_50 ; void *
.text:000000000000E074                 BL              ._ZNK7android7RefBase9decStrongEPKv ; android::RefBase::decStrong(void const*)
.text:000000000000E078 loc_E078                                ; CODE XREF: storeHeifCapture+1EC↑j
.text:000000000000E078                                         ; storeHeifCapture+234↓j
.text:000000000000E078                 LDR             X8, [X25,#0x28]
.text:000000000000E07C                 LDR             X9, [SP,#0x80+var_48]
.text:000000000000E080                 CMP             X8, X9
.text:000000000000E084                 B.NE            loc_E0B8
.text:000000000000E088                 MOV             W0, W19
.text:000000000000E08C                 LDR             X25, [SP,#0x80+var_40]
.text:000000000000E090                 LDP             X29, X30, [SP,#0x80+var_s0]
.text:000000000000E094                 LDP             X20, X19, [SP,#0x80+var_10]
.text:000000000000E098                 LDP             X22, X21, [SP,#0x80+var_20]
.text:000000000000E09C                 LDP             X24, X23, [SP,#0x80+var_30]
.text:000000000000E0A0                 ADD             SP, SP, #0x90
.text:000000000000E0A4                 RET
.text:000000000000E0A8 ; ---------------------------------------------------------------------------
.text:000000000000E0A8 loc_E0A8                                ; CODE XREF: storeHeifCapture+5C↑j
.text:000000000000E0A8                 MOV             W19, WZR
.text:000000000000E0AC                 LDR             X0, [SP,#0x80+var_50]
.text:000000000000E0B0                 CBNZ            X0, loc_E070
.text:000000000000E0B4                 B               loc_E078
.text:000000000000E0B8 ; ---------------------------------------------------------------------------
.text:000000000000E0B8 loc_E0B8                                ; CODE XREF: storeHeifCapture+204↑j
.text:000000000000E0B8                 BL              .__stack_chk_fail
.text:000000000000E0B8 ; } // starts at DE80
.text:000000000000E0B8 ; End of function storeHeifCapture
.text:000000000000E0B8 ; ---------------------------------------------------------------------------
.text:000000000000E0BC                 ALIGN 0x20
.text:000000000000E0C0 ; __unwind {
.text:000000000000E0C0                 STR             X19, [SP,#-0x20]!
.text:000000000000E0C4                 STP             X29, X30, [SP,#0x10]
.text:000000000000E0C8                 ADD             X29, SP, #0x10
.text:000000000000E0CC                 ADRP            X8, #_ZTVN7android6VectorINS_2spINS_11HeifEncoderEEEEE_ptr@PAGE
.text:000000000000E0D0                 MOV             X19, X0
.text:000000000000E0D4                 LDR             X8, [X8,#_ZTVN7android6VectorINS_2spINS_11HeifEncoderEEEEE_ptr@PAGEOFF]
.text:000000000000E0D8                 ADD             X8, X8, #0x10
.text:000000000000E0DC                 STR             X8, [X0]
.text:000000000000E0E0                 BL              ._ZN7android10VectorImpl13finish_vectorEv ; android::VectorImpl::finish_vector(void)
.text:000000000000E0E4                 MOV             X0, X19
.text:000000000000E0E8                 BL              ._ZN7android10VectorImplD2Ev ; android::VectorImpl::~VectorImpl()
.text:000000000000E0EC                 LDP             X29, X30, [SP,#0x10]
.text:000000000000E0F0                 MOV             X0, X19
.text:000000000000E0F4                 LDR             X19, [SP],#0x20
.text:000000000000E0F8                 B               ._ZdlPv ; operator delete(void *)
.text:000000000000E0F8 ; } // starts at E0C0
.text:000000000000E0F8 ; ---------------------------------------------------------------------------
.text:000000000000E0FC                 ALIGN 0x20
.text:000000000000E100 ; =============== S U B R O U T I N E =======================================
.text:000000000000E100 ; android::Vector<android::sp<android::HeifEncoder>>::do_construct(void *, unsigned long)const
.text:000000000000E100                 WEAK _ZNK7android6VectorINS_2spINS_11HeifEncoderEEEE12do_constructEPvm
.text:000000000000E100 _ZNK7android6VectorINS_2spINS_11HeifEncoderEEEE12do_constructEPvm
.text:000000000000E100                                         ; DATA XREF: LOAD:0000000000001098↑o
.text:000000000000E100                                         ; .data.rel.ro:000000000001D070↓o
.text:000000000000E100 ; __unwind {
.text:000000000000E100                 CBZ             X2, locret_E114
.text:000000000000E104                 MOV             X0, X1  ; s
.text:000000000000E108                 MOV             W1, WZR ; c
.text:000000000000E10C                 LSL             X2, X2, #3 ; n
.text:000000000000E110                 B               .memset
.text:000000000000E114 ; ---------------------------------------------------------------------------
.text:000000000000E114 locret_E114                             ; CODE XREF: android::Vector<android::sp<android::HeifEncoder>>::do_construct(void *,ulong)↑j
.text:000000000000E114                 RET
.text:000000000000E114 ; } // starts at E100
.text:000000000000E114 ; End of function android::Vector<android::sp<android::HeifEncoder>>::do_construct(void *,ulong)
.text:000000000000E118 ; =============== S U B R O U T I N E =======================================
.text:000000000000E118 ; Attributes: bp-based frame
.text:000000000000E118 ; android::Vector<android::sp<android::HeifEncoder>>::do_destroy(void *, unsigned long)const
.text:000000000000E118                 WEAK _ZNK7android6VectorINS_2spINS_11HeifEncoderEEEE10do_destroyEPvm
.text:000000000000E118 _ZNK7android6VectorINS_2spINS_11HeifEncoderEEEE10do_destroyEPvm
.text:000000000000E118                                         ; DATA XREF: LOAD:0000000000001B18↑o
.text:000000000000E118                                         ; .data.rel.ro:000000000001D078↓o
.text:000000000000E118 var_10          = -0x10
.text:000000000000E118 var_s0          =  0
.text:000000000000E118 ; __unwind {
.text:000000000000E118                 STP             X20, X19, [SP,#-0x10+var_10]!
.text:000000000000E11C                 STP             X29, X30, [SP,#0x10+var_s0]
.text:000000000000E120                 ADD             X29, SP, #0x10
.text:000000000000E124                 CBZ             X2, loc_E14C
.text:000000000000E128                 MOV             X19, X2
.text:000000000000E12C                 MOV             X20, X1
.text:000000000000E130 loc_E130                                ; CODE XREF: android::Vector<android::sp<android::HeifEncoder>>::do_destroy(void *,ulong)+30↓j
.text:000000000000E130                 LDR             X0, [X20] ; this
.text:000000000000E134                 SUB             X19, X19, #1
.text:000000000000E138                 CBZ             X0, loc_E144
.text:000000000000E13C                 MOV             X1, X20 ; void *
.text:000000000000E140                 BL              ._ZNK7android7RefBase9decStrongEPKv ; android::RefBase::decStrong(void const*)
.text:000000000000E144 loc_E144                                ; CODE XREF: android::Vector<android::sp<android::HeifEncoder>>::do_destroy(void *,ulong)+20↑j
.text:000000000000E144                 ADD             X20, X20, #8
.text:000000000000E148                 CBNZ            X19, loc_E130
.text:000000000000E14C loc_E14C                                ; CODE XREF: android::Vector<android::sp<android::HeifEncoder>>::do_destroy(void *,ulong)+C↑j
.text:000000000000E14C                 LDP             X29, X30, [SP,#0x10+var_s0]
.text:000000000000E150                 LDP             X20, X19, [SP+0x10+var_10],#0x20
.text:000000000000E154                 RET
.text:000000000000E154 ; } // starts at E118
.text:000000000000E154 ; End of function android::Vector<android::sp<android::HeifEncoder>>::do_destroy(void *,ulong)
.text:000000000000E158 ; =============== S U B R O U T I N E =======================================
.text:000000000000E158 ; Attributes: bp-based frame
.text:000000000000E158 ; android::Vector<android::sp<android::HeifEncoder>>::do_copy(void *, void const*, unsigned long)const
.text:000000000000E158                 WEAK _ZNK7android6VectorINS_2spINS_11HeifEncoderEEEE7do_copyEPvPKvm
.text:000000000000E158 _ZNK7android6VectorINS_2spINS_11HeifEncoderEEEE7do_copyEPvPKvm
.text:000000000000E158                                         ; DATA XREF: LOAD:0000000000000F90↑o
.text:000000000000E158                                         ; .data.rel.ro:000000000001D080↓o
.text:000000000000E158 var_20          = -0x20
.text:000000000000E158 var_10          = -0x10
.text:000000000000E158 var_s0          =  0
.text:000000000000E158 ; __unwind {
.text:000000000000E158                 STR             X21, [SP,#-0x10+var_20]!
.text:000000000000E15C                 STP             X20, X19, [SP,#0x20+var_10]
.text:000000000000E160                 STP             X29, X30, [SP,#0x20+var_s0]
.text:000000000000E164                 ADD             X29, SP, #0x20
.text:000000000000E168                 CBZ             X3, loc_E19C
.text:000000000000E16C                 MOV             X19, X3
.text:000000000000E170                 MOV             X20, X2
.text:000000000000E174                 MOV             X21, X1
.text:000000000000E178 loc_E178                                ; CODE XREF: android::Vector<android::sp<android::HeifEncoder>>::do_copy(void *,void const*,ulong)+40↓j
.text:000000000000E178                 LDR             X0, [X20] ; this
.text:000000000000E17C                 SUB             X19, X19, #1
.text:000000000000E180                 STR             X0, [X21]
.text:000000000000E184                 CBZ             X0, loc_E190
.text:000000000000E188                 MOV             X1, X21 ; void *
.text:000000000000E18C                 BL              ._ZNK7android7RefBase9incStrongEPKv ; android::RefBase::incStrong(void const*)
.text:000000000000E190 loc_E190                                ; CODE XREF: android::Vector<android::sp<android::HeifEncoder>>::do_copy(void *,void const*,ulong)+2C↑j
.text:000000000000E190                 ADD             X21, X21, #8
.text:000000000000E194                 ADD             X20, X20, #8
.text:000000000000E198                 CBNZ            X19, loc_E178
.text:000000000000E19C loc_E19C                                ; CODE XREF: android::Vector<android::sp<android::HeifEncoder>>::do_copy(void *,void const*,ulong)+10↑j
.text:000000000000E19C                 LDP             X29, X30, [SP,#0x20+var_s0]
.text:000000000000E1A0                 LDP             X20, X19, [SP,#0x20+var_10]
.text:000000000000E1A4                 LDR             X21, [SP+0x20+var_20],#0x30
.text:000000000000E1A8                 RET
.text:000000000000E1A8 ; } // starts at E158
.text:000000000000E1A8 ; End of function android::Vector<android::sp<android::HeifEncoder>>::do_copy(void *,void const*,ulong)
.text:000000000000E1A8 ; ---------------------------------------------------------------------------
.text:000000000000E1AC                 ALIGN 0x10
.text:000000000000E1B0 ; =============== S U B R O U T I N E =======================================
.text:000000000000E1B0 ; Attributes: bp-based frame
.text:000000000000E1B0 ; android::Vector<android::sp<android::HeifEncoder>>::do_splat(void *, void const*, unsigned long)const
.text:000000000000E1B0                 WEAK _ZNK7android6VectorINS_2spINS_11HeifEncoderEEEE8do_splatEPvPKvm
.text:000000000000E1B0 _ZNK7android6VectorINS_2spINS_11HeifEncoderEEEE8do_splatEPvPKvm
.text:000000000000E1B0                                         ; DATA XREF: LOAD:0000000000001998↑o
.text:000000000000E1B0                                         ; .data.rel.ro:000000000001D088↓o
.text:000000000000E1B0 var_20          = -0x20
.text:000000000000E1B0 var_10          = -0x10
.text:000000000000E1B0 var_s0          =  0
.text:000000000000E1B0 ; __unwind {
.text:000000000000E1B0                 STR             X21, [SP,#-0x10+var_20]!
.text:000000000000E1B4                 STP             X20, X19, [SP,#0x20+var_10]
.text:000000000000E1B8                 STP             X29, X30, [SP,#0x20+var_s0]
.text:000000000000E1BC                 ADD             X29, SP, #0x20
.text:000000000000E1C0                 CBZ             X3, loc_E1F0
.text:000000000000E1C4                 MOV             X19, X3
.text:000000000000E1C8                 MOV             X20, X2
.text:000000000000E1CC                 MOV             X21, X1
.text:000000000000E1D0 loc_E1D0                                ; CODE XREF: android::Vector<android::sp<android::HeifEncoder>>::do_splat(void *,void const*,ulong)+3C↓j
.text:000000000000E1D0                 LDR             X0, [X20] ; this
.text:000000000000E1D4                 SUB             X19, X19, #1
.text:000000000000E1D8                 STR             X0, [X21]
.text:000000000000E1DC                 CBZ             X0, loc_E1E8
.text:000000000000E1E0                 MOV             X1, X21 ; void *
.text:000000000000E1E4                 BL              ._ZNK7android7RefBase9incStrongEPKv ; android::RefBase::incStrong(void const*)
.text:000000000000E1E8 loc_E1E8                                ; CODE XREF: android::Vector<android::sp<android::HeifEncoder>>::do_splat(void *,void const*,ulong)+2C↑j
.text:000000000000E1E8                 ADD             X21, X21, #8
.text:000000000000E1EC                 CBNZ            X19, loc_E1D0
.text:000000000000E1F0 loc_E1F0                                ; CODE XREF: android::Vector<android::sp<android::HeifEncoder>>::do_splat(void *,void const*,ulong)+10↑j
.text:000000000000E1F0                 LDP             X29, X30, [SP,#0x20+var_s0]
.text:000000000000E1F4                 LDP             X20, X19, [SP,#0x20+var_10]
.text:000000000000E1F8                 LDR             X21, [SP+0x20+var_20],#0x30
.text:000000000000E1FC                 RET
.text:000000000000E1FC ; } // starts at E1B0
.text:000000000000E1FC ; End of function android::Vector<android::sp<android::HeifEncoder>>::do_splat(void *,void const*,ulong)
.text:000000000000E200 ; =============== S U B R O U T I N E =======================================
.text:000000000000E200 ; Attributes: bp-based frame
.text:000000000000E200 ; android::Vector<android::sp<android::HeifEncoder>>::do_move_forward(void *, void const*, unsigned long)const
.text:000000000000E200                 WEAK _ZNK7android6VectorINS_2spINS_11HeifEncoderEEEE15do_move_forwardEPvPKvm
.text:000000000000E200 _ZNK7android6VectorINS_2spINS_11HeifEncoderEEEE15do_move_forwardEPvPKvm
.text:000000000000E200                                         ; DATA XREF: LOAD:00000000000013E0↑o
.text:000000000000E200                                         ; .data.rel.ro:000000000001D090↓o
.text:000000000000E200 var_40          = -0x40
.text:000000000000E200 var_30          = -0x30
.text:000000000000E200 var_28          = -0x28
.text:000000000000E200 var_20          = -0x20
.text:000000000000E200 var_10          = -0x10
.text:000000000000E200 var_s0          =  0
.text:000000000000E200 ; __unwind {
.text:000000000000E200                 SUB             SP, SP, #0x50
.text:000000000000E204                 STP             X22, X21, [SP,#0x40+var_20]
.text:000000000000E208                 STP             X20, X19, [SP,#0x40+var_10]
.text:000000000000E20C                 STP             X29, X30, [SP,#0x40+var_s0]
.text:000000000000E210                 ADD             X29, SP, #0x40
.text:000000000000E214                 MRS             X22, #3, c13, c0, #2
.text:000000000000E218                 MOV             X20, X2
.text:000000000000E21C                 LDR             X8, [X22,#0x28]
.text:000000000000E220                 MOV             X21, X1
.text:000000000000E224                 MOV             X0, X1  ; dest
.text:000000000000E228                 MOV             X1, X20 ; src
.text:000000000000E22C                 LSL             X2, X3, #3 ; n
.text:000000000000E230                 MOV             X19, X3
.text:000000000000E234                 STR             X8, [SP,#0x40+var_28]
.text:000000000000E238                 BL              .memmove
.text:000000000000E23C                 ADRP            X8, #off_1D0B0@PAGE
.text:000000000000E240                 STR             X20, [SP,#0x40+var_30]
.text:000000000000E244                 ADD             X8, X8, #off_1D0B0@PAGEOFF
.text:000000000000E248                 MOV             X1, SP
.text:000000000000E24C                 MOV             X0, X19
.text:000000000000E250                 STP             X8, X21, [SP,#0x40+var_40]
.text:000000000000E254                 BL              ._ZN7android7RefBase10renameRefsEmRKNS_16ReferenceRenamerE ; android::RefBase::renameRefs(ulong,android::ReferenceRenamer const&)
.text:000000000000E258                 LDR             X8, [X22,#0x28]
.text:000000000000E25C                 LDR             X9, [SP,#0x40+var_28]
.text:000000000000E260                 CMP             X8, X9
.text:000000000000E264                 B.NE            loc_E27C
.text:000000000000E268                 LDP             X29, X30, [SP,#0x40+var_s0]
.text:000000000000E26C                 LDP             X20, X19, [SP,#0x40+var_10]
.text:000000000000E270                 LDP             X22, X21, [SP,#0x40+var_20]
.text:000000000000E274                 ADD             SP, SP, #0x50 ; 'P'
.text:000000000000E278                 RET
.text:000000000000E27C ; ---------------------------------------------------------------------------
.text:000000000000E27C loc_E27C                                ; CODE XREF: android::Vector<android::sp<android::HeifEncoder>>::do_move_forward(void *,void const*,ulong)+64↑j
.text:000000000000E27C                 BL              .__stack_chk_fail
.text:000000000000E27C ; } // starts at E200
.text:000000000000E27C ; End of function android::Vector<android::sp<android::HeifEncoder>>::do_move_forward(void *,void const*,ulong)
.text:000000000000E280 ; =============== S U B R O U T I N E =======================================
.text:000000000000E280 ; Attributes: bp-based frame
.text:000000000000E280 ; android::Vector<android::sp<android::HeifEncoder>>::do_move_backward(void *, void const*, unsigned long)const
.text:000000000000E280                 WEAK _ZNK7android6VectorINS_2spINS_11HeifEncoderEEEE16do_move_backwardEPvPKvm
.text:000000000000E280 _ZNK7android6VectorINS_2spINS_11HeifEncoderEEEE16do_move_backwardEPvPKvm
.text:000000000000E280                                         ; DATA XREF: LOAD:0000000000001728↑o
.text:000000000000E280                                         ; .data.rel.ro:000000000001D098↓o
.text:000000000000E280 var_40          = -0x40
.text:000000000000E280 var_30          = -0x30
.text:000000000000E280 var_28          = -0x28
.text:000000000000E280 var_20          = -0x20
.text:000000000000E280 var_10          = -0x10
.text:000000000000E280 var_s0          =  0
.text:000000000000E280 ; __unwind {
.text:000000000000E280                 SUB             SP, SP, #0x50
.text:000000000000E284                 STP             X22, X21, [SP,#0x40+var_20]
.text:000000000000E288                 STP             X20, X19, [SP,#0x40+var_10]
.text:000000000000E28C                 STP             X29, X30, [SP,#0x40+var_s0]
.text:000000000000E290                 ADD             X29, SP, #0x40
.text:000000000000E294                 MRS             X22, #3, c13, c0, #2
.text:000000000000E298                 MOV             X20, X2
.text:000000000000E29C                 LDR             X8, [X22,#0x28]
.text:000000000000E2A0                 MOV             X21, X1
.text:000000000000E2A4                 MOV             X0, X1  ; dest
.text:000000000000E2A8                 MOV             X1, X20 ; src
.text:000000000000E2AC                 LSL             X2, X3, #3 ; n
.text:000000000000E2B0                 MOV             X19, X3
.text:000000000000E2B4                 STR             X8, [SP,#0x40+var_28]
.text:000000000000E2B8                 BL              .memmove
.text:000000000000E2BC                 ADRP            X8, #off_1D0B0@PAGE
.text:000000000000E2C0                 STR             X20, [SP,#0x40+var_30]
.text:000000000000E2C4                 ADD             X8, X8, #off_1D0B0@PAGEOFF
.text:000000000000E2C8                 MOV             X1, SP
.text:000000000000E2CC                 MOV             X0, X19
.text:000000000000E2D0                 STP             X8, X21, [SP,#0x40+var_40]
.text:000000000000E2D4                 BL              ._ZN7android7RefBase10renameRefsEmRKNS_16ReferenceRenamerE ; android::RefBase::renameRefs(ulong,android::ReferenceRenamer const&)
.text:000000000000E2D8                 LDR             X8, [X22,#0x28]
.text:000000000000E2DC                 LDR             X9, [SP,#0x40+var_28]
.text:000000000000E2E0                 CMP             X8, X9
.text:000000000000E2E4                 B.NE            loc_E2FC
.text:000000000000E2E8                 LDP             X29, X30, [SP,#0x40+var_s0]
.text:000000000000E2EC                 LDP             X20, X19, [SP,#0x40+var_10]
.text:000000000000E2F0                 LDP             X22, X21, [SP,#0x40+var_20]
.text:000000000000E2F4                 ADD             SP, SP, #0x50 ; 'P'
.text:000000000000E2F8                 RET
.text:000000000000E2FC ; ---------------------------------------------------------------------------
.text:000000000000E2FC loc_E2FC                                ; CODE XREF: android::Vector<android::sp<android::HeifEncoder>>::do_move_backward(void *,void const*,ulong)+64↑j
.text:000000000000E2FC                 BL              .__stack_chk_fail
.text:000000000000E2FC ; } // starts at E280
.text:000000000000E2FC ; End of function android::Vector<android::sp<android::HeifEncoder>>::do_move_backward(void *,void const*,ulong)
.text:000000000000E300 ; [00000004 BYTES: COLLAPSED FUNCTION nullsub_2. PRESS CTRL-NUMPAD+ TO EXPAND]
.text:000000000000E304                 ALIGN 8
.text:000000000000E308 ; =============== S U B R O U T I N E =======================================
.text:000000000000E308 sub_E308                                ; DATA XREF: .data.rel.ro:off_1D0B0↓o
.text:000000000000E308 ; __unwind {
.text:000000000000E308                 LDP             X9, X10, [X0,#8]
.text:000000000000E30C                 LSL             X8, X1, #3
.text:000000000000E310                 ADD             X2, X9, X8 ; void *
.text:000000000000E314                 ADD             X1, X10, X8 ; android::RefBase *
.text:000000000000E318                 LDR             X0, [X2] ; this
.text:000000000000E31C                 B               ._ZN7android7RefBase11renameRefIdEPS0_PKvS3_ ; android::RefBase::renameRefId(android::RefBase*,void const*,void const*)
.text:000000000000E31C ; } // starts at E308
.text:000000000000E31C ; End of function sub_E308
.text:000000000000E320 ; [00000004 BYTES: COLLAPSED FUNCTION operator delete(void *). PRESS CTRL-NUMPAD+ TO EXPAND]
.text:000000000000E324                 ALIGN 8
.text:000000000000E328 ; =============== S U B R O U T I N E =======================================
.text:000000000000E328 ; Attributes: bp-based frame
.text:000000000000E328 ; __int64 __fastcall android::HeifSource::HeifSource(android::HeifSource *__hidden this)
.text:000000000000E328                 EXPORT _ZN7android10HeifSourceC2Ev
.text:000000000000E328 _ZN7android10HeifSourceC2Ev             ; CODE XREF: android::HeifSource::HeifSource(void)+C↓j
.text:000000000000E328                                         ; DATA XREF: LOAD:0000000000001500↑o ...
.text:000000000000E328 var_20          = -0x20
.text:000000000000E328 var_10          = -0x10
.text:000000000000E328 var_s0          =  0
.text:000000000000E328 ; __unwind {
.text:000000000000E328                 STP             X22, X21, [SP,#-0x10+var_20]!
.text:000000000000E32C                 STP             X20, X19, [SP,#0x20+var_10]
.text:000000000000E330                 STP             X29, X30, [SP,#0x20+var_s0]
.text:000000000000E334                 ADD             X29, SP, #0x20
.text:000000000000E338                 MOV             X19, X0
.text:000000000000E33C                 BL              ._ZN7android7RefBaseC2Ev ; android::RefBase::RefBase(void)
.text:000000000000E340                 ADRP            X8, #_ZTVN7android10HeifSourceE_ptr@PAGE
.text:000000000000E344                 MOV             X21, X19
.text:000000000000E348                 MOV             X20, X19
.text:000000000000E34C                 LDR             X8, [X8,#_ZTVN7android10HeifSourceE_ptr@PAGEOFF]
.text:000000000000E350                 STR             XZR, [X19,#0x10]
.text:000000000000E354                 STR             XZR, [X19,#0x20]
.text:000000000000E358                 ADD             X8, X8, #0x10
.text:000000000000E35C                 STR             X8, [X19]
.text:000000000000E360                 MOV             W8, #0xFFFFFFFF
.text:000000000000E364                 STR             XZR, [X21,#0x30]!
.text:000000000000E368                 STR             XZR, [X20,#0x50]!
.text:000000000000E36C                 STR             W8, [X19,#0x18]
.text:000000000000E370                 STR             W8, [X19,#0x28]
.text:000000000000E374                 STRB            WZR, [X19,#0x2C]
.text:000000000000E378                 LDR             X22, [X21]
.text:000000000000E37C                 CBZ             X22, loc_E394
.text:000000000000E380                 LDR             X8, [X22]
.text:000000000000E384                 MOV             X1, X21 ; void *
.text:000000000000E388                 LDUR            X8, [X8,#-0x18]
.text:000000000000E38C                 ADD             X0, X22, X8 ; this
.text:000000000000E390                 BL              ._ZNK7android7RefBase9decStrongEPKv ; android::RefBase::decStrong(void const*)
.text:000000000000E394 loc_E394                                ; CODE XREF: android::HeifSource::HeifSource(void)+54↑j
.text:000000000000E394                 LDR             X8, [X21]
.text:000000000000E398                 CMP             X22, X8
.text:000000000000E39C                 B.EQ            loc_E3A4
.text:000000000000E3A0                 BL              ._ZN7android14sp_report_raceEv ; android::sp_report_race(void)
.text:000000000000E3A4 loc_E3A4                                ; CODE XREF: android::HeifSource::HeifSource(void)+74↑j
.text:000000000000E3A4                 MOVI            V0.2D, #0
.text:000000000000E3A8                 STP             Q0, Q0, [X21]
.text:000000000000E3AC                 LDR             X21, [X20]
.text:000000000000E3B0                 CBZ             X21, loc_E3C0
.text:000000000000E3B4                 MOV             X0, X21 ; this
.text:000000000000E3B8                 MOV             X1, X20 ; void *
.text:000000000000E3BC                 BL              ._ZNK7android7RefBase9decStrongEPKv ; android::RefBase::decStrong(void const*)
.text:000000000000E3C0 loc_E3C0                                ; CODE XREF: android::HeifSource::HeifSource(void)+88↑j
.text:000000000000E3C0                 LDR             X8, [X20]
.text:000000000000E3C4                 CMP             X21, X8
.text:000000000000E3C8                 B.EQ            loc_E3D0
.text:000000000000E3CC                 BL              ._ZN7android14sp_report_raceEv ; android::sp_report_race(void)
.text:000000000000E3D0 loc_E3D0                                ; CODE XREF: android::HeifSource::HeifSource(void)+A0↑j
.text:000000000000E3D0                 MOVI            V0.2D, #0
.text:000000000000E3D4                 STR             XZR, [X19,#0x50]
.text:000000000000E3D8                 STRB            WZR, [X19,#0x58]
.text:000000000000E3DC                 STP             Q0, Q0, [X19,#0x100]
.text:000000000000E3E0                 STP             Q0, Q0, [X19,#0xE0]
.text:000000000000E3E4                 STP             Q0, Q0, [X19,#0xC0]
.text:000000000000E3E8                 STP             Q0, Q0, [X19,#0xA0]
.text:000000000000E3EC                 STP             Q0, Q0, [X19,#0x80]
.text:000000000000E3F0                 STP             Q0, Q0, [X19,#0x60]
.text:000000000000E3F4                 STP             Q0, Q0, [X19,#0x1E0]
.text:000000000000E3F8                 STP             Q0, Q0, [X19,#0x1C0]
.text:000000000000E3FC                 STP             Q0, Q0, [X19,#0x1A0]
.text:000000000000E400                 STP             Q0, Q0, [X19,#0x180]
.text:000000000000E404                 STP             Q0, Q0, [X19,#0x160]
.text:000000000000E408                 STP             Q0, Q0, [X19,#0x140]
.text:000000000000E40C                 STP             Q0, Q0, [X19,#0x120]
.text:000000000000E410                 STP             Q0, Q0, [X19,#0x2B0]
.text:000000000000E414                 STP             Q0, Q0, [X19,#0x290]
.text:000000000000E418                 STP             Q0, Q0, [X19,#0x270]
.text:000000000000E41C                 STP             Q0, Q0, [X19,#0x250]
.text:000000000000E420                 STP             Q0, Q0, [X19,#0x230]
.text:000000000000E424                 STP             Q0, Q0, [X19,#0x210]
.text:000000000000E428                 STR             Q0, [X19,#0x200]
.text:000000000000E42C                 LDP             X29, X30, [SP,#0x20+var_s0]
.text:000000000000E430                 LDP             X20, X19, [SP,#0x20+var_10]
.text:000000000000E434                 LDP             X22, X21, [SP+0x20+var_20],#0x30
.text:000000000000E438                 RET
.text:000000000000E438 ; } // starts at E328
.text:000000000000E438 ; End of function android::HeifSource::HeifSource(void)
.text:000000000000E438 ; ---------------------------------------------------------------------------
.text:000000000000E43C                 ALIGN 0x20
.text:000000000000E440 ; =============== S U B R O U T I N E =======================================
.text:000000000000E440 ; Attributes: bp-based frame
.text:000000000000E440 ; void __fastcall android::HeifSource::~HeifSource(android::HeifSource *__hidden this)
.text:000000000000E440                 EXPORT _ZN7android10HeifSourceD2Ev
.text:000000000000E440 _ZN7android10HeifSourceD2Ev             ; CODE XREF: android::HeifSource::~HeifSource()+C↓j
.text:000000000000E440                                         ; DATA XREF: LOAD:0000000000000D50↑o ...
.text:000000000000E440 var_20          = -0x20
.text:000000000000E440 var_10          = -0x10
.text:000000000000E440 var_s0          =  0
.text:000000000000E440 ; __unwind {
.text:000000000000E440                 STR             X21, [SP,#-0x10+var_20]!
.text:000000000000E444                 STP             X20, X19, [SP,#0x20+var_10]
.text:000000000000E448                 STP             X29, X30, [SP,#0x20+var_s0]
.text:000000000000E44C                 ADD             X29, SP, #0x20
.text:000000000000E450                 ADRP            X8, #_ZTVN7android10HeifSourceE_ptr@PAGE
.text:000000000000E454                 MOV             X20, X0
.text:000000000000E458                 MOV             X19, X0
.text:000000000000E45C                 LDR             X8, [X8,#_ZTVN7android10HeifSourceE_ptr@PAGEOFF]
.text:000000000000E460                 ADD             X8, X8, #0x10
.text:000000000000E464                 STR             X8, [X0]
.text:000000000000E468                 LDR             X8, [X20,#0x30]!
.text:000000000000E46C                 CBZ             X8, loc_E4D0
.text:000000000000E470                 LDR             X21, [X20]
.text:000000000000E474                 CBZ             X21, loc_E4A0
.text:000000000000E478                 LDR             X8, [X21]
.text:000000000000E47C                 MOV             X1, X20 ; void *
.text:000000000000E480                 LDUR            X8, [X8,#-0x18]
.text:000000000000E484                 ADD             X0, X21, X8 ; this
.text:000000000000E488                 BL              ._ZNK7android7RefBase9decStrongEPKv ; android::RefBase::decStrong(void const*)
.text:000000000000E48C                 LDR             X8, [X20]
.text:000000000000E490                 CMP             X21, X8
.text:000000000000E494                 B.EQ            loc_E49C
.text:000000000000E498                 BL              ._ZN7android14sp_report_raceEv ; android::sp_report_race(void)
.text:000000000000E49C loc_E49C                                ; CODE XREF: android::HeifSource::~HeifSource()+54↑j
.text:000000000000E49C                 STR             XZR, [X20]
.text:000000000000E4A0 loc_E4A0                                ; CODE XREF: android::HeifSource::~HeifSource()+34↑j
.text:000000000000E4A0                 LDR             X21, [X20]
.text:000000000000E4A4                 CBZ             X21, loc_E4BC
.text:000000000000E4A8                 LDR             X8, [X21]
.text:000000000000E4AC                 MOV             X1, X20 ; void *
.text:000000000000E4B0                 LDUR            X8, [X8,#-0x18]
.text:000000000000E4B4                 ADD             X0, X21, X8 ; this
.text:000000000000E4B8                 BL              ._ZNK7android7RefBase9decStrongEPKv ; android::RefBase::decStrong(void const*)
.text:000000000000E4BC loc_E4BC                                ; CODE XREF: android::HeifSource::~HeifSource()+64↑j
.text:000000000000E4BC                 LDR             X8, [X20]
.text:000000000000E4C0                 CMP             X21, X8
.text:000000000000E4C4                 B.EQ            loc_E4CC
.text:000000000000E4C8                 BL              ._ZN7android14sp_report_raceEv ; android::sp_report_race(void)
.text:000000000000E4CC loc_E4CC                                ; CODE XREF: android::HeifSource::~HeifSource()+84↑j
.text:000000000000E4CC                 STR             XZR, [X20]
.text:000000000000E4D0 loc_E4D0                                ; CODE XREF: android::HeifSource::~HeifSource()+2C↑j
.text:000000000000E4D0                 MOV             X1, X19
.text:000000000000E4D4                 LDR             X0, [X1,#0x50]! ; void *
.text:000000000000E4D8                 CBZ             X0, loc_E4FC
.text:000000000000E4DC                 BL              ._ZNK7android7RefBase9decStrongEPKv ; android::RefBase::decStrong(void const*)
.text:000000000000E4E0                 LDR             X8, [X20]
.text:000000000000E4E4                 CBZ             X8, loc_E4FC
.text:000000000000E4E8                 LDR             X9, [X8]
.text:000000000000E4EC                 MOV             X1, X20 ; void *
.text:000000000000E4F0                 LDUR            X9, [X9,#-0x18]
.text:000000000000E4F4                 ADD             X0, X8, X9 ; this
.text:000000000000E4F8                 BL              ._ZNK7android7RefBase9decStrongEPKv ; android::RefBase::decStrong(void const*)
.text:000000000000E4FC loc_E4FC                                ; CODE XREF: android::HeifSource::~HeifSource()+98↑j
.text:000000000000E4FC                                         ; android::HeifSource::~HeifSource()+A4↑j
.text:000000000000E4FC                 MOV             X0, X19 ; this
.text:000000000000E500                 LDP             X29, X30, [SP,#0x20+var_s0]
.text:000000000000E504                 LDP             X20, X19, [SP,#0x20+var_10]
.text:000000000000E508                 LDR             X21, [SP+0x20+var_20],#0x30
.text:000000000000E50C                 B               ._ZN7android7RefBaseD2Ev ; android::RefBase::~RefBase()
.text:000000000000E50C ; } // starts at E440
.text:000000000000E50C ; End of function android::HeifSource::~HeifSource()
.text:000000000000E510 ; =============== S U B R O U T I N E =======================================
.text:000000000000E510 ; Attributes: bp-based frame
.text:000000000000E510 ; void __fastcall android::HeifSource::~HeifSource(android::HeifSource *__hidden this)
.text:000000000000E510                 EXPORT _ZN7android10HeifSourceD0Ev
.text:000000000000E510 _ZN7android10HeifSourceD0Ev             ; DATA XREF: LOAD:0000000000001A88↑o
.text:000000000000E510                                         ; .data.rel.ro:000000000001D0E0↓o
.text:000000000000E510 var_10          = -0x10
.text:000000000000E510 var_s0          =  0
.text:000000000000E510 ; __unwind {
.text:000000000000E510                 STR             X19, [SP,#-0x10+var_10]!
.text:000000000000E514                 STP             X29, X30, [SP,#0x10+var_s0]
.text:000000000000E518                 ADD             X29, SP, #0x10
.text:000000000000E51C                 MOV             X19, X0
.text:000000000000E520                 BL              ._ZN7android10HeifSourceD2Ev ; android::HeifSource::~HeifSource()
.text:000000000000E524                 LDP             X29, X30, [SP,#0x10+var_s0]
.text:000000000000E528                 MOV             X0, X19 ; void *
.text:000000000000E52C                 LDR             X19, [SP+0x10+var_10],#0x20
.text:000000000000E530                 B               ._ZdlPv ; operator delete(void *)
.text:000000000000E530 ; } // starts at E510
.text:000000000000E530 ; End of function android::HeifSource::~HeifSource()
.text:000000000000E530 ; ---------------------------------------------------------------------------
.text:000000000000E534                 ALIGN 8
.text:000000000000E538 ; android::HeifSource::set(android::Role, android::sp<android::AMessage> const&)
.text:000000000000E538                 EXPORT _ZN7android10HeifSource3setENS_4RoleERKNS_2spINS_8AMessageEEE
.text:000000000000E538 _ZN7android10HeifSource3setENS_4RoleERKNS_2spINS_8AMessageEEE
.text:000000000000E538                                         ; CODE XREF: android::HeifSource::set(android::Role,android::sp<android::AMessage> const&)+C↓j
.text:000000000000E538                                         ; DATA XREF: LOAD:0000000000001950↑o ...
.text:000000000000E538 ; __unwind {
.text:000000000000E538                 SUB             SP, SP, #0xB0
.text:000000000000E53C                 STP             X24, X23, [SP,#0x70]
.text:000000000000E540                 STP             X22, X21, [SP,#0x80]
.text:000000000000E544                 STP             X20, X19, [SP,#0x90]
.text:000000000000E548                 STP             X29, X30, [SP,#0xA0]
.text:000000000000E54C                 ADD             X29, SP, #0xA0
.text:000000000000E550                 MRS             X24, #3, c13, c0, #2
.text:000000000000E554                 MOV             X19, X0
.text:000000000000E558                 LDR             X8, [X24,#0x28]
.text:000000000000E55C                 MOV             X20, X2
.text:000000000000E560                 STUR            X8, [X29,#-0x38]
.text:000000000000E564                 STR             W1, [X0,#0x14]
.text:000000000000E568                 ADRP            X1, #aInputFd@PAGE ; "input-fd"
.text:000000000000E56C                 LDR             X0, [X2]
.text:000000000000E570                 ADD             X1, X1, #aInputFd@PAGEOFF ; "input-fd"
.text:000000000000E574                 ADD             X2, SP, #0x3C ; '<'
.text:000000000000E578                 BL              ._ZNK7android8AMessage9findInt32EPKcPi ; android::AMessage::findInt32(char const*,int *)
.text:000000000000E57C                 TBZ             W0, #0, loc_E5C8
.text:000000000000E580                 ADRP            X1, #aHeifsource@PAGE ; "HeifSource"
.text:000000000000E584                 ADRP            X2, #aSFileDescripto@PAGE ; "%s : file descriptor mode"
.text:000000000000E588                 ADRP            X3, #aSet@PAGE ; "set"
.text:000000000000E58C                 ADD             X1, X1, #aHeifsource@PAGEOFF ; "HeifSource"
.text:000000000000E590                 ADD             X2, X2, #aSFileDescripto@PAGEOFF ; "%s : file descriptor mode"
.text:000000000000E594                 ADD             X3, X3, #aSet@PAGEOFF ; "set"
.text:000000000000E598                 MOV             W0, #4
.text:000000000000E59C                 BL              .__android_log_print
.text:000000000000E5A0                 LDR             W9, [SP,#0x3C]
.text:000000000000E5A4                 MOV             W8, #1
.text:000000000000E5A8                 STR             W8, [X19,#0x10]
.text:000000000000E5AC                 STR             W9, [X19,#0x28]
.text:000000000000E5B0                 TBZ             W9, #0x1F, loc_E614
.text:000000000000E5B4                 ADRP            X1, #aHeifsource@PAGE ; "HeifSource"
.text:000000000000E5B8                 ADRP            X2, #aInputFdIsInval@PAGE ; "input fd is invalid"
.text:000000000000E5BC                 ADD             X1, X1, #aHeifsource@PAGEOFF ; "HeifSource"
.text:000000000000E5C0                 ADD             X2, X2, #aInputFdIsInval@PAGEOFF ; "input fd is invalid"
.text:000000000000E5C4                 B               loc_EA4C
.text:000000000000E5C8 ; ---------------------------------------------------------------------------
.text:000000000000E5C8 loc_E5C8                                ; CODE XREF: .text:000000000000E57C↑j
.text:000000000000E5C8                 LDR             X0, [X20]
.text:000000000000E5CC                 ADRP            X1, #aInputBuffer@PAGE ; "input-buffer"
.text:000000000000E5D0                 ADD             X1, X1, #aInputBuffer@PAGEOFF ; "input-buffer"
.text:000000000000E5D4                 ADD             X2, SP, #0x30 ; '0'
.text:000000000000E5D8                 BL              ._ZNK7android8AMessage11findPointerEPKcPPv ; android::AMessage::findPointer(char const*,void **)
.text:000000000000E5DC                 ADRP            X1, #aHeifsource@PAGE ; "HeifSource"
.text:000000000000E5E0                 ADD             X1, X1, #aHeifsource@PAGEOFF ; "HeifSource"
.text:000000000000E5E4                 TBZ             W0, #0, loc_E88C
.text:000000000000E5E8                 ADRP            X2, #aSBufferPointer@PAGE ; "%s : buffer pointer mode"
.text:000000000000E5EC                 ADRP            X3, #aSet@PAGE ; "set"
.text:000000000000E5F0                 ADD             X2, X2, #aSBufferPointer@PAGEOFF ; "%s : buffer pointer mode"
.text:000000000000E5F4                 ADD             X3, X3, #aSet@PAGEOFF ; "set"
.text:000000000000E5F8                 MOV             W0, #4
.text:000000000000E5FC                 BL              .__android_log_print
.text:000000000000E600                 LDR             X9, [SP,#0x30]
.text:000000000000E604                 MOV             W8, #2
.text:000000000000E608                 STR             W8, [X19,#0x10]
.text:000000000000E60C                 STR             X9, [X19,#0x20]
.text:000000000000E610                 CBZ             X9, loc_E8AC
.text:000000000000E614 loc_E614                                ; CODE XREF: .text:000000000000E5B0↑j
.text:000000000000E614                 LDR             X0, [X20]
.text:000000000000E618                 ADRP            X1, #aId@PAGE ; "id"
.text:000000000000E61C                 ADD             X2, X19, #0x18
.text:000000000000E620                 ADD             X1, X1, #aId@PAGEOFF ; "id"
.text:000000000000E624                 BL              ._ZNK7android8AMessage9findInt32EPKcPi ; android::AMessage::findInt32(char const*,int *)
.text:000000000000E628                 TBZ             W0, #0, loc_EC64
.text:000000000000E62C                 LDR             X0, [X20]
.text:000000000000E630                 ADRP            X1, #aWidth@PAGE ; "width"
.text:000000000000E634                 ADD             X1, X1, #aWidth@PAGEOFF ; "width"
.text:000000000000E638                 ADD             X2, SP, #0x2C ; ','
.text:000000000000E63C                 BL              ._ZNK7android8AMessage9findInt32EPKcPi ; android::AMessage::findInt32(char const*,int *)
.text:000000000000E640                 TBZ             W0, #0, loc_EC88
.text:000000000000E644                 LDR             X0, [X20]
.text:000000000000E648                 ADRP            X1, #aHeight@PAGE ; "height"
.text:000000000000E64C                 ADD             X1, X1, #aHeight@PAGEOFF ; "height"
.text:000000000000E650                 ADD             X2, SP, #0x28 ; '('
.text:000000000000E654                 BL              ._ZNK7android8AMessage9findInt32EPKcPi ; android::AMessage::findInt32(char const*,int *)
.text:000000000000E658                 TBZ             W0, #0, loc_ECAC
.text:000000000000E65C                 LDR             X0, [X20]
.text:000000000000E660                 ADRP            X1, #aStride@PAGE ; "stride"
.text:000000000000E664                 ADD             X1, X1, #aStride@PAGEOFF ; "stride"
.text:000000000000E668                 ADD             X2, SP, #0x24 ; '$'
.text:000000000000E66C                 BL              ._ZNK7android8AMessage9findInt32EPKcPi ; android::AMessage::findInt32(char const*,int *)
.text:000000000000E670                 TBZ             W0, #0, loc_ECD0
.text:000000000000E674                 LDR             X0, [X20]
.text:000000000000E678                 ADRP            X1, #aSliceHeight@PAGE ; "slice-height"
.text:000000000000E67C                 ADD             X1, X1, #aSliceHeight@PAGEOFF ; "slice-height"
.text:000000000000E680                 ADD             X2, SP, #0x20 ; ' '
.text:000000000000E684                 BL              ._ZNK7android8AMessage9findInt32EPKcPi ; android::AMessage::findInt32(char const*,int *)
.text:000000000000E688                 TBZ             W0, #0, loc_ECF4
.text:000000000000E68C                 LDR             X0, [X20]
.text:000000000000E690                 ADRP            X1, #aColorFormat@PAGE ; "color-format"
.text:000000000000E694                 ADD             X1, X1, #aColorFormat@PAGEOFF ; "color-format"
.text:000000000000E698                 ADD             X2, SP, #0x1C
.text:000000000000E69C                 BL              ._ZNK7android8AMessage9findInt32EPKcPi ; android::AMessage::findInt32(char const*,int *)
.text:000000000000E6A0                 TBZ             W0, #0, loc_ED18
.text:000000000000E6A4                 LDR             X0, [X20]
.text:000000000000E6A8                 ADRP            X1, #aStartId@PAGE ; "start-id"
.text:000000000000E6AC                 ADD             X1, X1, #aStartId@PAGEOFF ; "start-id"
.text:000000000000E6B0                 ADD             X2, SP, #0x18
.text:000000000000E6B4                 BL              ._ZNK7android8AMessage9findInt32EPKcPi ; android::AMessage::findInt32(char const*,int *)
.text:000000000000E6B8                 TBZ             W0, #0, loc_ED3C
.text:000000000000E6BC                 LDR             X0, [X20]
.text:000000000000E6C0                 ADRP            X1, #aEncoderColorFo@PAGE ; "encoder-color-format"
.text:000000000000E6C4                 ADD             X1, X1, #aEncoderColorFo@PAGEOFF ; "encoder-color-format"
.text:000000000000E6C8                 ADD             X2, SP, #0x14
.text:000000000000E6CC                 BL              ._ZNK7android8AMessage9findInt32EPKcPi ; android::AMessage::findInt32(char const*,int *)
.text:000000000000E6D0                 TBZ             W0, #0, loc_ED60
.text:000000000000E6D4                 LDR             X0, [X20]
.text:000000000000E6D8                 ADD             X22, X19, #0x44 ; 'D'
.text:000000000000E6DC                 ADRP            X1, #aGridWidth@PAGE ; "grid-width"
.text:000000000000E6E0                 ADD             X1, X1, #aGridWidth@PAGEOFF ; "grid-width"
.text:000000000000E6E4                 MOV             X2, X22
.text:000000000000E6E8                 BL              ._ZNK7android8AMessage9findInt32EPKcPi ; android::AMessage::findInt32(char const*,int *)
.text:000000000000E6EC                 TBZ             W0, #0, loc_ED84
.text:000000000000E6F0                 LDR             X0, [X20]
.text:000000000000E6F4                 ADD             X23, X19, #0x48 ; 'H'
.text:000000000000E6F8                 ADRP            X1, #aGridHeight@PAGE ; "grid-height"
.text:000000000000E6FC                 ADD             X1, X1, #aGridHeight@PAGEOFF ; "grid-height"
.text:000000000000E700                 MOV             X2, X23
.text:000000000000E704                 BL              ._ZNK7android8AMessage9findInt32EPKcPi ; android::AMessage::findInt32(char const*,int *)
.text:000000000000E708                 TBZ             W0, #0, loc_EDA8
.text:000000000000E70C                 LDR             W21, [SP,#0x1C]
.text:000000000000E710                 ADRP            X1, #aHeifsource@PAGE ; "HeifSource"
.text:000000000000E714                 LDR             W8, [SP,#0x14]
.text:000000000000E718                 ADRP            X2, #aCscIsNeededD@PAGE ; "Csc is needed (%d)"
.text:000000000000E71C                 ADD             X1, X1, #aHeifsource@PAGEOFF ; "HeifSource"
.text:000000000000E720                 ADD             X2, X2, #aCscIsNeededD@PAGEOFF ; "Csc is needed (%d)"
.text:000000000000E724                 MOV             W0, #4
.text:000000000000E728                 CMP             W21, W8
.text:000000000000E72C                 CSET            W3, NE
.text:000000000000E730                 STRB            W3, [X19,#0x58]
.text:000000000000E734                 BL              .__android_log_print
.text:000000000000E738                 LDRB            W8, [X19,#0x58]
.text:000000000000E73C                 CBZ             W8, loc_E960
.text:000000000000E740                 MOV             W0, #0x38 ; '8'
.text:000000000000E744                 BL              ._Znwm  ; operator new(ulong)
.text:000000000000E748                 LDR             W1, [X22]
.text:000000000000E74C                 MOV             W3, W21
.text:000000000000E750                 LDR             W2, [X23]
.text:000000000000E754                 MOV             W4, #2
.text:000000000000E758                 MOV             X22, X0
.text:000000000000E75C                 BL              ._ZN7android11FrameFormatC1EiiNS_15ApexColorFormatEj ; android::FrameFormat::FrameFormat(int,int,android::ApexColorFormat,uint)
.text:000000000000E760                 ADD             X1, SP, #8
.text:000000000000E764                 STR             X22, [SP,#8]
.text:000000000000E768                 MOV             X0, X22
.text:000000000000E76C                 BL              ._ZNK7android7RefBase9incStrongEPKv ; android::RefBase::incStrong(void const*)
.text:000000000000E770                 STR             XZR, [SP,#0x40]
.text:000000000000E774                 LDR             X23, [SP,#0x40]
.text:000000000000E778                 LDR             X22, [SP,#8]
.text:000000000000E77C                 CBZ             X22, loc_E78C
.text:000000000000E780                 ADD             X1, SP, #0x40 ; '@'
.text:000000000000E784                 MOV             X0, X22
.text:000000000000E788                 BL              ._ZNK7android7RefBase9incStrongEPKv ; android::RefBase::incStrong(void const*)
.text:000000000000E78C loc_E78C                                ; CODE XREF: .text:000000000000E77C↑j
.text:000000000000E78C                 CBZ             X23, loc_E79C
.text:000000000000E790                 ADD             X1, SP, #0x40 ; '@'
.text:000000000000E794                 MOV             X0, X23
.text:000000000000E798                 BL              ._ZNK7android7RefBase9decStrongEPKv ; android::RefBase::decStrong(void const*)
.text:000000000000E79C loc_E79C                                ; CODE XREF: .text:loc_E78C↑j
.text:000000000000E79C                 LDR             X8, [SP,#0x40]
.text:000000000000E7A0                 CMP             X23, X8
.text:000000000000E7A4                 B.EQ            loc_E7AC
.text:000000000000E7A8                 BL              ._ZN7android14sp_report_raceEv ; android::sp_report_race(void)
.text:000000000000E7AC loc_E7AC                                ; CODE XREF: .text:000000000000E7A4↑j
.text:000000000000E7AC                 ADRP            X8, #qword_9CF0@PAGE
.text:000000000000E7B0                 STR             X22, [SP,#0x40]
.text:000000000000E7B4                 ADD             X0, SP, #0x40 ; '@'
.text:000000000000E7B8                 STRB            WZR, [SP,#0x61]
.text:000000000000E7BC                 STP             XZR, XZR, [SP,#0x50]
.text:000000000000E7C0                 LDR             D0, [X8,#qword_9CF0@PAGEOFF]
.text:000000000000E7C4                 MOV             X8, SP
.text:000000000000E7C8                 STR             D0, [SP,#0x48]
.text:000000000000E7CC                 BL              sub_EDD0
.text:000000000000E7D0                 MOV             X22, X19
.text:000000000000E7D4                 LDR             X23, [X22,#0x30]!
.text:000000000000E7D8                 CBZ             X23, loc_E7F0
.text:000000000000E7DC                 LDR             X8, [X23]
.text:000000000000E7E0                 MOV             X1, X22
.text:000000000000E7E4                 LDUR            X8, [X8,#-0x18]
.text:000000000000E7E8                 ADD             X0, X23, X8
.text:000000000000E7EC                 BL              ._ZNK7android7RefBase9decStrongEPKv ; android::RefBase::decStrong(void const*)
.text:000000000000E7F0 loc_E7F0                                ; CODE XREF: .text:000000000000E7D8↑j
.text:000000000000E7F0                 LDR             X8, [X22]
.text:000000000000E7F4                 CMP             X23, X8
.text:000000000000E7F8                 B.EQ            loc_E800
.text:000000000000E7FC                 BL              ._ZN7android14sp_report_raceEv ; android::sp_report_race(void)
.text:000000000000E800 loc_E800                                ; CODE XREF: .text:000000000000E7F8↑j
.text:000000000000E800                 LDR             X8, [SP]
.text:000000000000E804                 LDR             X0, [SP,#0x40]
.text:000000000000E808                 STR             X8, [X22]
.text:000000000000E80C                 STR             XZR, [SP]
.text:000000000000E810                 CBZ             X0, loc_E820
.text:000000000000E814                 ADD             X1, SP, #0x40 ; '@'
.text:000000000000E818                 BL              ._ZNK7android7RefBase9decStrongEPKv ; android::RefBase::decStrong(void const*)
.text:000000000000E81C                 LDR             X8, [X22]
.text:000000000000E820 loc_E820                                ; CODE XREF: .text:000000000000E810↑j
.text:000000000000E820                 LDR             X0, [X8,#0x60]
.text:000000000000E824                 STR             X0, [SP,#0x40]
.text:000000000000E828                 CBZ             X0, loc_E834
.text:000000000000E82C                 ADD             X1, SP, #0x40 ; '@'
.text:000000000000E830                 BL              ._ZNK7android7RefBase9incStrongEPKv ; android::RefBase::incStrong(void const*)
.text:000000000000E834 loc_E834                                ; CODE XREF: .text:000000000000E828↑j
.text:000000000000E834                 SUB             W8, W21, #1
.text:000000000000E838                 CMP             W8, #7
.text:000000000000E83C                 B.CS            loc_E84C
.text:000000000000E840                 MOV             W9, #0x57 ; 'W'
.text:000000000000E844                 LSR             W9, W9, W8
.text:000000000000E848                 TBNZ            W9, #0, loc_E8C0
.text:000000000000E84C loc_E84C                                ; CODE XREF: .text:000000000000E83C↑j
.text:000000000000E84C                 ADRP            X1, #aHeifsource@PAGE ; "HeifSource"
.text:000000000000E850                 ADRP            X2, #aCanNotSupportC@PAGE ; "Can not support csc color format"
.text:000000000000E854                 ADD             X1, X1, #aHeifsource@PAGEOFF ; "HeifSource"
.text:000000000000E858                 ADD             X2, X2, #aCanNotSupportC@PAGEOFF ; "Can not support csc color format"
.text:000000000000E85C                 MOV             W0, #6
.text:000000000000E860                 BL              .__android_log_print
.text:000000000000E864                 LDR             X0, [SP,#0x40]
.text:000000000000E868                 CBZ             X0, loc_E874
.text:000000000000E86C                 ADD             X1, SP, #0x40 ; '@'
.text:000000000000E870                 BL              ._ZNK7android7RefBase9decStrongEPKv ; android::RefBase::decStrong(void const*)
.text:000000000000E874 loc_E874                                ; CODE XREF: .text:000000000000E868↑j
.text:000000000000E874                 LDR             X0, [SP,#8]
.text:000000000000E878                 CBZ             X0, loc_E884
.text:000000000000E87C                 ADD             X1, SP, #8
.text:000000000000E880                 BL              ._ZNK7android7RefBase9decStrongEPKv ; android::RefBase::decStrong(void const*)
.text:000000000000E884 loc_E884                                ; CODE XREF: .text:000000000000E878↑j
.text:000000000000E884                 MOV             W0, #0xFFFFFFEA
.text:000000000000E888                 B               loc_EC38
.text:000000000000E88C ; ---------------------------------------------------------------------------
.text:000000000000E88C loc_E88C                                ; CODE XREF: .text:000000000000E5E4↑j
.text:000000000000E88C                 ADRP            X2, #aSCanNotFindInp@PAGE ; "%s: Can not find input info"
.text:000000000000E890                 ADRP            X3, #aSet@PAGE ; "set"
.text:000000000000E894                 ADD             X2, X2, #aSCanNotFindInp@PAGEOFF ; "%s: Can not find input info"
.text:000000000000E898                 ADD             X3, X3, #aSet@PAGEOFF ; "set"
.text:000000000000E89C                 MOV             W0, #6
.text:000000000000E8A0                 BL              .__android_log_print
.text:000000000000E8A4                 MOV             W0, #0xFFFFFFEA
.text:000000000000E8A8                 B               loc_EC38
.text:000000000000E8AC ; ---------------------------------------------------------------------------
.text:000000000000E8AC loc_E8AC                                ; CODE XREF: .text:000000000000E610↑j
.text:000000000000E8AC                 ADRP            X1, #aHeifsource@PAGE ; "HeifSource"
.text:000000000000E8B0                 ADRP            X2, #aInputBufferIsN@PAGE ; "input buffer is null"
.text:000000000000E8B4                 ADD             X1, X1, #aHeifsource@PAGEOFF ; "HeifSource"
.text:000000000000E8B8                 ADD             X2, X2, #aInputBufferIsN@PAGEOFF ; "input buffer is null"
.text:000000000000E8BC                 B               loc_EA4C
.text:000000000000E8C0 ; ---------------------------------------------------------------------------
.text:000000000000E8C0 loc_E8C0                                ; CODE XREF: .text:000000000000E848↑j
.text:000000000000E8C0                 ADRP            X9, #unk_9D28@PAGE
.text:000000000000E8C4                 LDR             X0, [SP,#0x40]
.text:000000000000E8C8                 ADD             X9, X9, #unk_9D28@PAGEOFF
.text:000000000000E8CC                 LDR             W8, [X9,W8,SXTW#2]
.text:000000000000E8D0                 STR             W8, [X19,#0xE0]
.text:000000000000E8D4                 LDR             W8, [X0,#0x10]
.text:000000000000E8D8                 CMP             W8, #1
.text:000000000000E8DC                 B.LT            loc_E93C
.text:000000000000E8E0                 MOV             X8, XZR
.text:000000000000E8E4                 ADD             X9, X19, #0xA0
.text:000000000000E8E8                 ADD             X10, X0, #0x70 ; 'p'
.text:000000000000E8EC                 ADD             X11, X19, #0x90
.text:000000000000E8F0                 ADD             X12, X0, #0x60 ; '`'
.text:000000000000E8F4 loc_E8F4                                ; CODE XREF: .text:000000000000E92C↓j
.text:000000000000E8F4                 LDUR            W13, [X12,#-0x30]
.text:000000000000E8F8                 LSL             X14, X8, #3
.text:000000000000E8FC                 ADD             X8, X8, #1
.text:000000000000E900                 STUR            W13, [X11,#-0x30]
.text:000000000000E904                 LDUR            W13, [X12,#-0x20]
.text:000000000000E908                 STUR            W13, [X11,#-0x20]
.text:000000000000E90C                 LDUR            W13, [X12,#-0x10]
.text:000000000000E910                 STUR            W13, [X11,#-0x10]
.text:000000000000E914                 LDR             W13, [X12],#4
.text:000000000000E918                 STR             W13, [X11],#4
.text:000000000000E91C                 LDR             X13, [X10,X14]
.text:000000000000E920                 STR             X13, [X9,X14]
.text:000000000000E924                 LDRSW           X13, [X0,#0x10]
.text:000000000000E928                 CMP             X8, X13
.text:000000000000E92C                 B.LT            loc_E8F4
.text:000000000000E930                 MOV             W8, #1
.text:000000000000E934                 STR             W8, [X19,#0xF0]
.text:000000000000E938                 B               loc_E948
.text:000000000000E93C ; ---------------------------------------------------------------------------
.text:000000000000E93C loc_E93C                                ; CODE XREF: .text:000000000000E8DC↑j
.text:000000000000E93C                 MOV             W8, #1
.text:000000000000E940                 STR             W8, [X19,#0xF0]
.text:000000000000E944                 CBZ             X0, loc_E950
.text:000000000000E948 loc_E948                                ; CODE XREF: .text:000000000000E938↑j
.text:000000000000E948                 ADD             X1, SP, #0x40 ; '@'
.text:000000000000E94C                 BL              ._ZNK7android7RefBase9decStrongEPKv ; android::RefBase::decStrong(void const*)
.text:000000000000E950 loc_E950                                ; CODE XREF: .text:000000000000E944↑j
.text:000000000000E950                 LDR             X0, [SP,#8]
.text:000000000000E954                 CBZ             X0, loc_E960
.text:000000000000E958                 ADD             X1, SP, #8
.text:000000000000E95C                 BL              ._ZNK7android7RefBase9decStrongEPKv ; android::RefBase::decStrong(void const*)
.text:000000000000E960 loc_E960                                ; CODE XREF: .text:000000000000E73C↑j
.text:000000000000E960                                         ; .text:000000000000E954↑j
.text:000000000000E960                 MOV             W9, #1
.text:000000000000E964                 SUB             W8, W21, #1
.text:000000000000E968                 CMP             W8, #6
.text:000000000000E96C                 STR             W9, [X19,#0x290]
.text:000000000000E970                 B.HI            loc_EA3C
.text:000000000000E974                 ADRP            X10, #unk_9D20@PAGE
.text:000000000000E978                 ADD             X10, X10, #unk_9D20@PAGEOFF
.text:000000000000E97C                 MOV             W9, #6
.text:000000000000E980                 ADR             X11, loc_E990
.text:000000000000E984                 LDRB            W12, [X10,X8]
.text:000000000000E988                 ADD             X11, X11, X12,LSL#2
.text:000000000000E98C                 BR              X11
.text:000000000000E990 ; ---------------------------------------------------------------------------
.text:000000000000E990 loc_E990                                ; DATA XREF: .text:000000000000E980↑o
.text:000000000000E990                 MOV             W9, #7
.text:000000000000E994                 LDR             W8, [SP,#0x2C]
.text:000000000000E998                 STR             W9, [X19,#0x280]
.text:000000000000E99C                 LDP             W10, W9, [SP,#0x24]
.text:000000000000E9A0                 LDR             W11, [SP,#0x20]
.text:000000000000E9A4                 B               loc_EAA4
.text:000000000000E9A8 ; ---------------------------------------------------------------------------
.text:000000000000E9A8                 MOV             W11, #1
.text:000000000000E9AC                 LDR             W10, [SP,#0x24]
.text:000000000000E9B0                 LDP             W9, W8, [SP,#0x28]
.text:000000000000E9B4                 LDR             W14, [X19,#0x10]
.text:000000000000E9B8                 STR             W11, [X19,#0x280]
.text:000000000000E9BC                 LDR             W11, [SP,#0x20]
.text:000000000000E9C0                 ADD             W12, W8, #1
.text:000000000000E9C4                 ADD             W13, W9, #1
.text:000000000000E9C8                 STR             W8, [X19,#0x200]
.text:000000000000E9CC                 ASR             W12, W12, #1
.text:000000000000E9D0                 STR             W9, [X19,#0x210]
.text:000000000000E9D4                 ASR             W13, W13, #1
.text:000000000000E9D8                 STR             W10, [X19,#0x220]
.text:000000000000E9DC                 STR             W12, [X19,#0x208]
.text:000000000000E9E0                 CMP             W14, #2
.text:000000000000E9E4                 STR             W12, [X19,#0x204]
.text:000000000000E9E8                 ADD             W12, W10, #1
.text:000000000000E9EC                 STR             W13, [X19,#0x218]
.text:000000000000E9F0                 ASR             W12, W12, #1
.text:000000000000E9F4                 STR             W13, [X19,#0x214]
.text:000000000000E9F8                 ADD             W13, W11, #1
.text:000000000000E9FC                 ASR             W13, W13, #1
.text:000000000000EA00                 STR             W11, [X19,#0x230]
.text:000000000000EA04                 STR             W12, [X19,#0x228]
.text:000000000000EA08                 STR             W12, [X19,#0x224]
.text:000000000000EA0C                 STR             W13, [X19,#0x238]
.text:000000000000EA10                 STR             W13, [X19,#0x234]
.text:000000000000EA14                 B.NE            loc_EAFC
.text:000000000000EA18                 LDR             X14, [X19,#0x20]
.text:000000000000EA1C                 MUL             W10, W11, W10
.text:000000000000EA20                 MUL             W11, W13, W12
.text:000000000000EA24                 ADD             X10, X14, W10,SXTW
.text:000000000000EA28                 STR             X14, [X19,#0x240]
.text:000000000000EA2C                 ADD             X11, X10, W11,SXTW
.text:000000000000EA30                 STR             X10, [X19,#0x248]
.text:000000000000EA34                 STR             X11, [X19,#0x250]
.text:000000000000EA38                 B               loc_EAFC
.text:000000000000EA3C ; ---------------------------------------------------------------------------
.text:000000000000EA3C loc_EA3C                                ; CODE XREF: .text:000000000000E970↑j
.text:000000000000EA3C                 ADRP            X1, #aHeifsource@PAGE ; "HeifSource"
.text:000000000000EA40                 ADRP            X2, #aCanNotSupportS@PAGE ; "Can not support source color format"
.text:000000000000EA44                 ADD             X1, X1, #aHeifsource@PAGEOFF ; "HeifSource"
.text:000000000000EA48                 ADD             X2, X2, #aCanNotSupportS@PAGEOFF ; "Can not support source color format"
.text:000000000000EA4C loc_EA4C                                ; CODE XREF: .text:000000000000E5C4↑j
.text:000000000000EA4C                                         ; .text:000000000000E8BC↑j
.text:000000000000EA4C                 MOV             W0, #6
.text:000000000000EA50                 BL              .__android_log_print
.text:000000000000EA54                 MOV             W0, #0xFFFFFFEA
.text:000000000000EA58                 B               loc_EC38
.text:000000000000EA5C ; ---------------------------------------------------------------------------
.text:000000000000EA5C                 MOV             W10, #0x1F4
.text:000000000000EA60                 LDP             W9, W8, [SP,#0x28]
.text:000000000000EA64                 LDP             W12, W11, [SP,#0x20]
.text:000000000000EA68                 STR             W10, [X19,#0x280]
.text:000000000000EA6C                 LDR             W10, [X19,#0x10]
.text:000000000000EA70                 STR             W8, [X19,#0x200]
.text:000000000000EA74                 STR             W9, [X19,#0x210]
.text:000000000000EA78                 STR             W11, [X19,#0x220]
.text:000000000000EA7C                 CMP             W10, #2
.text:000000000000EA80                 STR             W12, [X19,#0x230]
.text:000000000000EA84                 B.NE            loc_EAFC
.text:000000000000EA88                 LDR             X10, [X19,#0x20]
.text:000000000000EA8C                 STR             X10, [X19,#0x240]
.text:000000000000EA90                 B               loc_EAFC
.text:000000000000EA94 ; ---------------------------------------------------------------------------
.text:000000000000EA94                 LDP             W9, W8, [SP,#0x28]
.text:000000000000EA98                 LDP             W11, W10, [SP,#0x20]
.text:000000000000EA9C                 MOV             W12, #0x259
.text:000000000000EAA0                 STR             W12, [X19,#0x280]
.text:000000000000EAA4 loc_EAA4                                ; CODE XREF: .text:000000000000E9A4↑j
.text:000000000000EAA4                 ADD             W12, W8, #1
.text:000000000000EAA8                 STR             W8, [X19,#0x200]
.text:000000000000EAAC                 ASR             W12, W12, #1
.text:000000000000EAB0                 STR             W9, [X19,#0x210]
.text:000000000000EAB4                 ADD             W13, W9, #1
.text:000000000000EAB8                 STR             W10, [X19,#0x220]
.text:000000000000EABC                 STR             W12, [X19,#0x204]
.text:000000000000EAC0                 ASR             W12, W13, #1
.text:000000000000EAC4                 LDR             W13, [X19,#0x10]
.text:000000000000EAC8                 STR             W12, [X19,#0x214]
.text:000000000000EACC                 ADD             W12, W11, #1
.text:000000000000EAD0                 ASR             W12, W12, #1
.text:000000000000EAD4                 STR             W11, [X19,#0x230]
.text:000000000000EAD8                 STR             W10, [X19,#0x224]
.text:000000000000EADC                 CMP             W13, #2
.text:000000000000EAE0                 STR             W12, [X19,#0x234]
.text:000000000000EAE4                 B.NE            loc_EAFC
.text:000000000000EAE8                 LDR             X12, [X19,#0x20]
.text:000000000000EAEC                 MUL             W10, W11, W10
.text:000000000000EAF0                 ADD             X10, X12, W10,SXTW
.text:000000000000EAF4                 STR             X12, [X19,#0x240]
.text:000000000000EAF8                 STR             X10, [X19,#0x248]
.text:000000000000EAFC loc_EAFC                                ; CODE XREF: .text:000000000000EA14↑j
.text:000000000000EAFC                                         ; .text:000000000000EA38↑j ...
.text:000000000000EAFC                 LDP             W10, W11, [X19,#0x44]
.text:000000000000EB00                 ADRP            X1, #aHeifsource@PAGE ; "HeifSource"
.text:000000000000EB04                 ADRP            X2, #aSuccessToInitD@PAGE ; "success to init(%dx%d=%d)"
.text:000000000000EB08                 ADD             X1, X1, #aHeifsource@PAGEOFF ; "HeifSource"
.text:000000000000EB0C                 ADD             W8, W8, W10
.text:000000000000EB10                 ADD             W9, W9, W11
.text:000000000000EB14                 SUB             W8, W8, #1
.text:000000000000EB18                 SUB             W9, W9, #1
.text:000000000000EB1C                 SDIV            W3, W8, W10
.text:000000000000EB20                 ADD             X2, X2, #aSuccessToInitD@PAGEOFF ; "success to init(%dx%d=%d)"
.text:000000000000EB24                 SDIV            W4, W9, W11
.text:000000000000EB28                 MOV             W0, #4
.text:000000000000EB2C                 MUL             W5, W4, W3
.text:000000000000EB30                 STP             W3, W4, [X19,#0x38]
.text:000000000000EB34                 STR             W5, [X19,#0x40]
.text:000000000000EB38                 BL              .__android_log_print
.text:000000000000EB3C                 LDR             X0, [X20]
.text:000000000000EB40                 ADRP            X1, #aGridRows@PAGE ; "grid-rows"
.text:000000000000EB44                 LDR             W2, [X19,#0x3C]
.text:000000000000EB48                 ADD             X1, X1, #aGridRows@PAGEOFF ; "grid-rows"
.text:000000000000EB4C                 BL              ._ZN7android8AMessage8setInt32EPKci ; android::AMessage::setInt32(char const*,int)
.text:000000000000EB50                 LDR             X0, [X20]
.text:000000000000EB54                 ADRP            X1, #aGridColumns@PAGE ; "grid-columns"
.text:000000000000EB58                 LDR             W2, [X19,#0x38]
.text:000000000000EB5C                 ADD             X1, X1, #aGridColumns@PAGEOFF ; "grid-columns"
.text:000000000000EB60                 BL              ._ZN7android8AMessage8setInt32EPKci ; android::AMessage::setInt32(char const*,int)
.text:000000000000EB64                 LDR             X0, [X20]
.text:000000000000EB68                 ADRP            X1, #aGridSize@PAGE ; "grid-size"
.text:000000000000EB6C                 LDR             W2, [X19,#0x40]
.text:000000000000EB70                 ADD             X1, X1, #aGridSize@PAGEOFF ; "grid-size"
.text:000000000000EB74                 BL              ._ZN7android8AMessage8setInt32EPKci ; android::AMessage::setInt32(char const*,int)
.text:000000000000EB78                 LDR             W8, [X19,#0x40]
.text:000000000000EB7C                 LDR             X0, [X20]
.text:000000000000EB80                 LDR             W2, [SP,#0x18]
.text:000000000000EB84                 CMP             W8, #2
.text:000000000000EB88                 B.LT            loc_EBC8
.text:000000000000EB8C                 ADRP            X1, #aGridStartId@PAGE ; "grid_start_id"
.text:000000000000EB90                 ADD             X1, X1, #aGridStartId@PAGEOFF ; "grid_start_id"
.text:000000000000EB94                 BL              ._ZN7android8AMessage8setInt32EPKci ; android::AMessage::setInt32(char const*,int)
.text:000000000000EB98                 LDR             W8, [SP,#0x18]
.text:000000000000EB9C                 ADRP            X1, #aGridEndId@PAGE ; "grid_end_id"
.text:000000000000EBA0                 LDR             W9, [X19,#0x40]
.text:000000000000EBA4                 ADD             X1, X1, #aGridEndId@PAGEOFF ; "grid_end_id"
.text:000000000000EBA8                 LDR             X0, [X20]
.text:000000000000EBAC                 ADD             W8, W8, W9
.text:000000000000EBB0                 SUB             W2, W8, #1
.text:000000000000EBB4                 BL              ._ZN7android8AMessage8setInt32EPKci ; android::AMessage::setInt32(char const*,int)
.text:000000000000EBB8                 LDR             W8, [SP,#0x18]
.text:000000000000EBBC                 LDR             W9, [X19,#0x40]
.text:000000000000EBC0                 LDR             X0, [X20]
.text:000000000000EBC4                 ADD             W2, W9, W8
.text:000000000000EBC8 loc_EBC8                                ; CODE XREF: .text:000000000000EB88↑j
.text:000000000000EBC8                 ADRP            X1, #aImageId@PAGE ; "image-id"
.text:000000000000EBCC                 ADD             X1, X1, #aImageId@PAGEOFF ; "image-id"
.text:000000000000EBD0                 BL              ._ZN7android8AMessage8setInt32EPKci ; android::AMessage::setInt32(char const*,int)
.text:000000000000EBD4                 LDR             X0, [X20]
.text:000000000000EBD8                 ADRP            X1, #aRole@PAGE ; "role"
.text:000000000000EBDC                 LDR             W2, [X19,#0x14]
.text:000000000000EBE0                 ADD             X1, X1, #aRole@PAGEOFF ; "role"
.text:000000000000EBE4                 BL              ._ZN7android8AMessage8setInt32EPKci ; android::AMessage::setInt32(char const*,int)
.text:000000000000EBE8                 MOV             X22, X19
.text:000000000000EBEC                 MOV             W8, #1
.text:000000000000EBF0                 LDR             X21, [X22,#0x50]!
.text:000000000000EBF4                 STURB           W8, [X22,#-0x24]
.text:000000000000EBF8                 LDR             X20, [X20]
.text:000000000000EBFC                 CBZ             X20, loc_EC0C
.text:000000000000EC00                 MOV             X0, X20
.text:000000000000EC04                 MOV             X1, X22
.text:000000000000EC08                 BL              ._ZNK7android7RefBase9incStrongEPKv ; android::RefBase::incStrong(void const*)
.text:000000000000EC0C loc_EC0C                                ; CODE XREF: .text:000000000000EBFC↑j
.text:000000000000EC0C                 CBZ             X21, loc_EC1C
.text:000000000000EC10                 MOV             X0, X21
.text:000000000000EC14                 MOV             X1, X22
.text:000000000000EC18                 BL              ._ZNK7android7RefBase9decStrongEPKv ; android::RefBase::decStrong(void const*)
.text:000000000000EC1C loc_EC1C                                ; CODE XREF: .text:loc_EC0C↑j
.text:000000000000EC1C                 LDR             X8, [X22]
.text:000000000000EC20                 CMP             X21, X8
.text:000000000000EC24                 B.EQ            loc_EC2C
.text:000000000000EC28                 BL              ._ZN7android14sp_report_raceEv ; android::sp_report_race(void)
.text:000000000000EC2C loc_EC2C                                ; CODE XREF: .text:000000000000EC24↑j
.text:000000000000EC2C                 MOV             W0, WZR
.text:000000000000EC30                 STR             X20, [X19,#0x50]
.text:000000000000EC34                 STR             WZR, [X19,#0x4C]
.text:000000000000EC38 loc_EC38                                ; CODE XREF: .text:000000000000E888↑j
.text:000000000000EC38                                         ; .text:000000000000E8A8↑j ...
.text:000000000000EC38                 LDR             X8, [X24,#0x28]
.text:000000000000EC3C                 LDUR            X9, [X29,#-0x38]
.text:000000000000EC40                 CMP             X8, X9
.text:000000000000EC44                 B.NE            loc_EC60
.text:000000000000EC48                 LDP             X29, X30, [SP,#0xA0]
.text:000000000000EC4C                 LDP             X20, X19, [SP,#0x90]
.text:000000000000EC50                 LDP             X22, X21, [SP,#0x80]
.text:000000000000EC54                 LDP             X24, X23, [SP,#0x70]
.text:000000000000EC58                 ADD             SP, SP, #0xB0
.text:000000000000EC5C                 RET
.text:000000000000EC60 ; ---------------------------------------------------------------------------
.text:000000000000EC60 loc_EC60                                ; CODE XREF: .text:000000000000EC44↑j
.text:000000000000EC60                 BL              .__stack_chk_fail
.text:000000000000EC64 ; ---------------------------------------------------------------------------
.text:000000000000EC64 loc_EC64                                ; CODE XREF: .text:000000000000E628↑j
.text:000000000000EC64                 ADRP            X0, #aFormatFindint3@PAGE ; "!(format->findInt32(\"id\", &mId))"
.text:000000000000EC68                 ADRP            X1, #aHeifsource@PAGE ; "HeifSource"
.text:000000000000EC6C                 ADRP            X2, #aS@PAGE ; "%s"
.text:000000000000EC70                 ADRP            X3, #aVendorSamsungF@PAGE ; "vendor/samsung/frameworks/av/media/libh"...
.text:000000000000EC74                 ADD             X0, X0, #aFormatFindint3@PAGEOFF ; "!(format->findInt32(\"id\", &mId))"
.text:000000000000EC78                 ADD             X1, X1, #aHeifsource@PAGEOFF ; "HeifSource"
.text:000000000000EC7C                 ADD             X2, X2, #aS@PAGEOFF ; "%s"
.text:000000000000EC80                 ADD             X3, X3, #aVendorSamsungF@PAGEOFF ; "vendor/samsung/frameworks/av/media/libh"...
.text:000000000000EC84                 BL              .__android_log_assert
.text:000000000000EC88 loc_EC88                                ; CODE XREF: .text:000000000000E640↑j
.text:000000000000EC88                 ADRP            X0, #aFormatFindint3_0@PAGE ; "!(format->findInt32(\"width\", &srcWidt"...
.text:000000000000EC8C                 ADRP            X1, #aHeifsource@PAGE ; "HeifSource"
.text:000000000000EC90                 ADRP            X2, #aS@PAGE ; "%s"
.text:000000000000EC94                 ADRP            X3, #aVendorSamsungF_0@PAGE ; "vendor/samsung/frameworks/av/media/libh"...
.text:000000000000EC98                 ADD             X0, X0, #aFormatFindint3_0@PAGEOFF ; "!(format->findInt32(\"width\", &srcWidt"...
.text:000000000000EC9C                 ADD             X1, X1, #aHeifsource@PAGEOFF ; "HeifSource"
.text:000000000000ECA0                 ADD             X2, X2, #aS@PAGEOFF ; "%s"
.text:000000000000ECA4                 ADD             X3, X3, #aVendorSamsungF_0@PAGEOFF ; "vendor/samsung/frameworks/av/media/libh"...
.text:000000000000ECA8                 BL              .__android_log_assert
.text:000000000000ECAC loc_ECAC                                ; CODE XREF: .text:000000000000E658↑j
.text:000000000000ECAC                 ADRP            X0, #aFormatFindint3_1@PAGE ; "!(format->findInt32(\"height\", &srcHei"...
.text:000000000000ECB0                 ADRP            X1, #aHeifsource@PAGE ; "HeifSource"
.text:000000000000ECB4                 ADRP            X2, #aS@PAGE ; "%s"
.text:000000000000ECB8                 ADRP            X3, #aVendorSamsungF_1@PAGE ; "vendor/samsung/frameworks/av/media/libh"...
.text:000000000000ECBC                 ADD             X0, X0, #aFormatFindint3_1@PAGEOFF ; "!(format->findInt32(\"height\", &srcHei"...
.text:000000000000ECC0                 ADD             X1, X1, #aHeifsource@PAGEOFF ; "HeifSource"
.text:000000000000ECC4                 ADD             X2, X2, #aS@PAGEOFF ; "%s"
.text:000000000000ECC8                 ADD             X3, X3, #aVendorSamsungF_1@PAGEOFF ; "vendor/samsung/frameworks/av/media/libh"...
.text:000000000000ECCC                 BL              .__android_log_assert
.text:000000000000ECD0 loc_ECD0                                ; CODE XREF: .text:000000000000E670↑j
.text:000000000000ECD0                 ADRP            X0, #aFormatFindint3_2@PAGE ; "!(format->findInt32(\"stride\", &srcStr"...
.text:000000000000ECD4                 ADRP            X1, #aHeifsource@PAGE ; "HeifSource"
.text:000000000000ECD8                 ADRP            X2, #aS@PAGE ; "%s"
.text:000000000000ECDC                 ADRP            X3, #aVendorSamsungF_2@PAGE ; "vendor/samsung/frameworks/av/media/libh"...
.text:000000000000ECE0                 ADD             X0, X0, #aFormatFindint3_2@PAGEOFF ; "!(format->findInt32(\"stride\", &srcStr"...
.text:000000000000ECE4                 ADD             X1, X1, #aHeifsource@PAGEOFF ; "HeifSource"
.text:000000000000ECE8                 ADD             X2, X2, #aS@PAGEOFF ; "%s"
.text:000000000000ECEC                 ADD             X3, X3, #aVendorSamsungF_2@PAGEOFF ; "vendor/samsung/frameworks/av/media/libh"...
.text:000000000000ECF0                 BL              .__android_log_assert
.text:000000000000ECF4 loc_ECF4                                ; CODE XREF: .text:000000000000E688↑j
.text:000000000000ECF4                 ADRP            X0, #aFormatFindint3_3@PAGE ; "!(format->findInt32(\"slice-height\", &"...
.text:000000000000ECF8                 ADRP            X1, #aHeifsource@PAGE ; "HeifSource"
.text:000000000000ECFC                 ADRP            X2, #aS@PAGE ; "%s"
.text:000000000000ED00                 ADRP            X3, #aVendorSamsungF_3@PAGE ; "vendor/samsung/frameworks/av/media/libh"...
.text:000000000000ED04                 ADD             X0, X0, #aFormatFindint3_3@PAGEOFF ; "!(format->findInt32(\"slice-height\", &"...
.text:000000000000ED08                 ADD             X1, X1, #aHeifsource@PAGEOFF ; "HeifSource"
.text:000000000000ED0C                 ADD             X2, X2, #aS@PAGEOFF ; "%s"
.text:000000000000ED10                 ADD             X3, X3, #aVendorSamsungF_3@PAGEOFF ; "vendor/samsung/frameworks/av/media/libh"...
.text:000000000000ED14                 BL              .__android_log_assert
.text:000000000000ED18 loc_ED18                                ; CODE XREF: .text:000000000000E6A0↑j
.text:000000000000ED18                 ADRP            X0, #aFormatFindint3_4@PAGE ; "!(format->findInt32(\"color-format\", &"...
.text:000000000000ED1C                 ADRP            X1, #aHeifsource@PAGE ; "HeifSource"
.text:000000000000ED20                 ADRP            X2, #aS@PAGE ; "%s"
.text:000000000000ED24                 ADRP            X3, #aVendorSamsungF_4@PAGE ; "vendor/samsung/frameworks/av/media/libh"...
.text:000000000000ED28                 ADD             X0, X0, #aFormatFindint3_4@PAGEOFF ; "!(format->findInt32(\"color-format\", &"...
.text:000000000000ED2C                 ADD             X1, X1, #aHeifsource@PAGEOFF ; "HeifSource"
.text:000000000000ED30                 ADD             X2, X2, #aS@PAGEOFF ; "%s"
.text:000000000000ED34                 ADD             X3, X3, #aVendorSamsungF_4@PAGEOFF ; "vendor/samsung/frameworks/av/media/libh"...
.text:000000000000ED38                 BL              .__android_log_assert
.text:000000000000ED3C loc_ED3C                                ; CODE XREF: .text:000000000000E6B8↑j
.text:000000000000ED3C                 ADRP            X0, #aFormatFindint3_5@PAGE ; "!(format->findInt32(\"start-id\", &srcS"...
.text:000000000000ED40                 ADRP            X1, #aHeifsource@PAGE ; "HeifSource"
.text:000000000000ED44                 ADRP            X2, #aS@PAGE ; "%s"
.text:000000000000ED48                 ADRP            X3, #aVendorSamsungF_5@PAGE ; "vendor/samsung/frameworks/av/media/libh"...
.text:000000000000ED4C                 ADD             X0, X0, #aFormatFindint3_5@PAGEOFF ; "!(format->findInt32(\"start-id\", &srcS"...
.text:000000000000ED50                 ADD             X1, X1, #aHeifsource@PAGEOFF ; "HeifSource"
.text:000000000000ED54                 ADD             X2, X2, #aS@PAGEOFF ; "%s"
.text:000000000000ED58                 ADD             X3, X3, #aVendorSamsungF_5@PAGEOFF ; "vendor/samsung/frameworks/av/media/libh"...
.text:000000000000ED5C                 BL              .__android_log_assert
.text:000000000000ED60 loc_ED60                                ; CODE XREF: .text:000000000000E6D0↑j
.text:000000000000ED60                 ADRP            X0, #aFormatFindint3_6@PAGE ; "!(format->findInt32(\"encoder-color-for"...
.text:000000000000ED64                 ADRP            X1, #aHeifsource@PAGE ; "HeifSource"
.text:000000000000ED68                 ADRP            X2, #aS@PAGE ; "%s"
.text:000000000000ED6C                 ADRP            X3, #aVendorSamsungF_6@PAGE ; "vendor/samsung/frameworks/av/media/libh"...
.text:000000000000ED70                 ADD             X0, X0, #aFormatFindint3_6@PAGEOFF ; "!(format->findInt32(\"encoder-color-for"...
.text:000000000000ED74                 ADD             X1, X1, #aHeifsource@PAGEOFF ; "HeifSource"
.text:000000000000ED78                 ADD             X2, X2, #aS@PAGEOFF ; "%s"
.text:000000000000ED7C                 ADD             X3, X3, #aVendorSamsungF_6@PAGEOFF ; "vendor/samsung/frameworks/av/media/libh"...
.text:000000000000ED80                 BL              .__android_log_assert
.text:000000000000ED84 loc_ED84                                ; CODE XREF: .text:000000000000E6EC↑j
.text:000000000000ED84                 ADRP            X0, #aFormatFindint3_7@PAGE ; "!(format->findInt32(\"grid-width\", &mG"...
.text:000000000000ED88                 ADRP            X1, #aHeifsource@PAGE ; "HeifSource"
.text:000000000000ED8C                 ADRP            X2, #aS@PAGE ; "%s"
.text:000000000000ED90                 ADRP            X3, #aVendorSamsungF_7@PAGE ; "vendor/samsung/frameworks/av/media/libh"...
.text:000000000000ED94                 ADD             X0, X0, #aFormatFindint3_7@PAGEOFF ; "!(format->findInt32(\"grid-width\", &mG"...
.text:000000000000ED98                 ADD             X1, X1, #aHeifsource@PAGEOFF ; "HeifSource"
.text:000000000000ED9C                 ADD             X2, X2, #aS@PAGEOFF ; "%s"
.text:000000000000EDA0                 ADD             X3, X3, #aVendorSamsungF_7@PAGEOFF ; "vendor/samsung/frameworks/av/media/libh"...
.text:000000000000EDA4                 BL              .__android_log_assert
.text:000000000000EDA8 loc_EDA8                                ; CODE XREF: .text:000000000000E708↑j
.text:000000000000EDA8                 ADRP            X0, #aFormatFindint3_8@PAGE ; "!(format->findInt32(\"grid-height\", &m"...
.text:000000000000EDAC                 ADRP            X1, #aHeifsource@PAGE ; "HeifSource"
.text:000000000000EDB0                 ADRP            X2, #aS@PAGE ; "%s"
.text:000000000000EDB4                 ADRP            X3, #aVendorSamsungF_8@PAGE ; "vendor/samsung/frameworks/av/media/libh"...
.text:000000000000EDB8                 ADD             X0, X0, #aFormatFindint3_8@PAGEOFF ; "!(format->findInt32(\"grid-height\", &m"...
.text:000000000000EDBC                 ADD             X1, X1, #aHeifsource@PAGEOFF ; "HeifSource"
.text:000000000000EDC0                 ADD             X2, X2, #aS@PAGEOFF ; "%s"
.text:000000000000EDC4                 ADD             X3, X3, #aVendorSamsungF_8@PAGEOFF ; "vendor/samsung/frameworks/av/media/libh"...
.text:000000000000EDC8                 BL              .__android_log_assert
.text:000000000000EDC8 ; } // starts at E538
.text:000000000000EDC8 ; ---------------------------------------------------------------------------
.text:000000000000EDCC                 DCD 0
.text:000000000000EDD0 ; =============== S U B R O U T I N E =======================================
.text:000000000000EDD0 ; Attributes: bp-based frame
.text:000000000000EDD0 sub_EDD0                                ; CODE XREF: .text:000000000000E7CC↑p
.text:000000000000EDD0                                         ; android::HeifEncoder::initEncoder(android::sp<android::AMessage> const&)+6FC↓p
.text:000000000000EDD0 var_38          = -0x38
.text:000000000000EDD0 var_30          = -0x30
.text:000000000000EDD0 var_28          = -0x28
.text:000000000000EDD0 var_20          = -0x20
.text:000000000000EDD0 var_10          = -0x10
.text:000000000000EDD0 var_s0          =  0
.text:000000000000EDD0 ; __unwind {
.text:000000000000EDD0                 SUB             SP, SP, #0x50
.text:000000000000EDD4                 STP             X22, X21, [SP,#0x40+var_20]
.text:000000000000EDD8                 STP             X20, X19, [SP,#0x40+var_10]
.text:000000000000EDDC                 STP             X29, X30, [SP,#0x40+var_s0]
.text:000000000000EDE0                 ADD             X29, SP, #0x40
.text:000000000000EDE4                 MRS             X22, #3, c13, c0, #2
.text:000000000000EDE8                 MOV             X20, X0
.text:000000000000EDEC                 LDR             X9, [X22,#0x28]
.text:000000000000EDF0                 MOV             W0, #0x98 ; unsigned __int64
.text:000000000000EDF4                 MOV             X19, X8
.text:000000000000EDF8                 STR             X9, [SP,#0x40+var_28]
.text:000000000000EDFC                 BL              ._Znwm  ; operator new(ulong)
.text:000000000000EE00                 MOV             X21, X0
.text:000000000000EE04                 ADD             X0, X0, #0x88 ; this
.text:000000000000EE08                 BL              ._ZN7android7RefBaseC2Ev ; android::RefBase::RefBase(void)
.text:000000000000EE0C                 ADRP            X8, #_ZTTN7android15ApexMediaBufferE_ptr@PAGE
.text:000000000000EE10                 ADD             X0, X21, #8 ; mutex
.text:000000000000EE14                 MOV             X1, XZR ; mutexattr
.text:000000000000EE18                 LDR             X8, [X8,#_ZTTN7android15ApexMediaBufferE_ptr@PAGEOFF]
.text:000000000000EE1C                 LDP             X9, X10, [X8,#0x10]
.text:000000000000EE20                 LDR             X11, [X8,#8] ; `vtable for'android::ApexMediaBuffer
.text:000000000000EE24                 LDR             X8, [X8,#0x20]
.text:000000000000EE28                 STR             X9, [X21]
.text:000000000000EE2C                 LDUR            X9, [X9,#-0x18]
.text:000000000000EE30                 STR             X10, [X21,X9]
.text:000000000000EE34                 STR             X11, [X21]
.text:000000000000EE38                 LDUR            X9, [X11,#-0x18]
.text:000000000000EE3C                 STR             X8, [X21,X9]
.text:000000000000EE40                 BL              .pthread_mutex_init
.text:000000000000EE44                 MOVI            V0.2D, #0
.text:000000000000EE48                 ADRP            X8, #_ZTVN7android15ApexMediaBufferE_ptr@PAGE
.text:000000000000EE4C                 STR             WZR, [X21,#0x30]
.text:000000000000EE50                 ADD             X1, SP, #0x40+var_30 ; void *
.text:000000000000EE54                 STP             XZR, XZR, [X21,#0x78]
.text:000000000000EE58                 LDR             X8, [X8,#_ZTVN7android15ApexMediaBufferE_ptr@PAGEOFF]
.text:000000000000EE5C                 STUR            Q0, [X21,#0x61]
.text:000000000000EE60                 STUR            Q0, [X21,#0x58]
.text:000000000000EE64                 ADD             X9, X8, #0x88
.text:000000000000EE68                 STUR            Q0, [X21,#0x48]
.text:000000000000EE6C                 STUR            Q0, [X21,#0x38]
.text:000000000000EE70                 LDR             X10, [X8],#0x18 ; `vtable for'android::ApexMediaBuffer
.text:000000000000EE74                 ADD             X0, X21, X10 ; this
.text:000000000000EE78                 STR             X9, [X21,#0x88]
.text:000000000000EE7C                 STR             X21, [SP,#0x40+var_30]
.text:000000000000EE80                 STR             X8, [X21]
.text:000000000000EE84                 BL              ._ZNK7android7RefBase9incStrongEPKv ; android::RefBase::incStrong(void const*)
.text:000000000000EE88                 LDR             X8, [SP,#0x40+var_30]
.text:000000000000EE8C                 STR             X8, [SP,#0x40+var_38]
.text:000000000000EE90                 CBZ             X8, loc_EEA8
.text:000000000000EE94                 LDR             X9, [X8]
.text:000000000000EE98                 ADD             X1, SP, #0x40+var_38 ; void *
.text:000000000000EE9C                 LDUR            X9, [X9,#-0x18]
.text:000000000000EEA0                 ADD             X0, X8, X9 ; this
.text:000000000000EEA4                 BL              ._ZNK7android7RefBase9incStrongEPKv ; android::RefBase::incStrong(void const*)
.text:000000000000EEA8 loc_EEA8                                ; CODE XREF: sub_EDD0+C0↑j
.text:000000000000EEA8                 ADD             X1, SP, #0x40+var_38
.text:000000000000EEAC                 MOV             X0, X20
.text:000000000000EEB0                 BL              ._ZN7android19ApexMediaBufferBase5allocERKNS0_11AllocHandleERKNS_2spIS0_EE ; android::ApexMediaBufferBase::alloc(android::ApexMediaBufferBase::AllocHandle const&,android::sp<android::ApexMediaBufferBase> const&)
.text:000000000000EEB4                 CBZ             W0, loc_EEC8
.text:000000000000EEB8                 STR             XZR, [X19]
.text:000000000000EEBC                 LDR             X8, [SP,#0x40+var_38]
.text:000000000000EEC0                 CBNZ            X8, loc_EEF0
.text:000000000000EEC4                 B               loc_EF04
.text:000000000000EEC8 ; ---------------------------------------------------------------------------
.text:000000000000EEC8 loc_EEC8                                ; CODE XREF: sub_EDD0+E4↑j
.text:000000000000EEC8                 LDR             X8, [SP,#0x40+var_30]
.text:000000000000EECC                 STR             X8, [X19]
.text:000000000000EED0                 CBZ             X8, loc_EEE8
.text:000000000000EED4                 LDR             X9, [X8]
.text:000000000000EED8                 MOV             X1, X19 ; void *
.text:000000000000EEDC                 LDUR            X9, [X9,#-0x18]
.text:000000000000EEE0                 ADD             X0, X8, X9 ; this
.text:000000000000EEE4                 BL              ._ZNK7android7RefBase9incStrongEPKv ; android::RefBase::incStrong(void const*)
.text:000000000000EEE8 loc_EEE8                                ; CODE XREF: sub_EDD0+100↑j
.text:000000000000EEE8                 LDR             X8, [SP,#0x40+var_38]
.text:000000000000EEEC                 CBZ             X8, loc_EF04
.text:000000000000EEF0 loc_EEF0                                ; CODE XREF: sub_EDD0+F0↑j
.text:000000000000EEF0                 LDR             X9, [X8]
.text:000000000000EEF4                 ADD             X1, SP, #0x40+var_38 ; void *
.text:000000000000EEF8                 LDUR            X9, [X9,#-0x18]
.text:000000000000EEFC                 ADD             X0, X8, X9 ; this
.text:000000000000EF00                 BL              ._ZNK7android7RefBase9decStrongEPKv ; android::RefBase::decStrong(void const*)
.text:000000000000EF04 loc_EF04                                ; CODE XREF: sub_EDD0+F4↑j
.text:000000000000EF04                                         ; sub_EDD0+11C↑j
.text:000000000000EF04                 LDR             X8, [SP,#0x40+var_30]
.text:000000000000EF08                 CBZ             X8, loc_EF20
.text:000000000000EF0C                 LDR             X9, [X8]
.text:000000000000EF10                 ADD             X1, SP, #0x40+var_30 ; void *
.text:000000000000EF14                 LDUR            X9, [X9,#-0x18]
.text:000000000000EF18                 ADD             X0, X8, X9 ; this
.text:000000000000EF1C                 BL              ._ZNK7android7RefBase9decStrongEPKv ; android::RefBase::decStrong(void const*)
.text:000000000000EF20 loc_EF20                                ; CODE XREF: sub_EDD0+138↑j
.text:000000000000EF20                 LDR             X8, [X22,#0x28]
.text:000000000000EF24                 LDR             X9, [SP,#0x40+var_28]
.text:000000000000EF28                 CMP             X8, X9
.text:000000000000EF2C                 B.NE            loc_EF44
.text:000000000000EF30                 LDP             X29, X30, [SP,#0x40+var_s0]
.text:000000000000EF34                 LDP             X20, X19, [SP,#0x40+var_10]
.text:000000000000EF38                 LDP             X22, X21, [SP,#0x40+var_20]
.text:000000000000EF3C                 ADD             SP, SP, #0x50 ; 'P'
.text:000000000000EF40                 RET
.text:000000000000EF44 ; ---------------------------------------------------------------------------
.text:000000000000EF44 loc_EF44                                ; CODE XREF: sub_EDD0+15C↑j
.text:000000000000EF44                 BL              .__stack_chk_fail
.text:000000000000EF44 ; } // starts at EDD0
.text:000000000000EF44 ; End of function sub_EDD0
.text:000000000000EF48 ; =============== S U B R O U T I N E =======================================
.text:000000000000EF48 ; Attributes: bp-based frame
.text:000000000000EF48 ; android::HeifSource::getGrid(android::sp<android::MediaCodecBuffer> const&, android::sp<android::ApexMediaBuffer> const&, bool &)
.text:000000000000EF48                 EXPORT _ZN7android10HeifSource7getGridERKNS_2spINS_16MediaCodecBufferEEERKNS1_INS_15ApexMediaBufferEEERb
.text:000000000000EF48 _ZN7android10HeifSource7getGridERKNS_2spINS_16MediaCodecBufferEEERKNS1_INS_15ApexMediaBufferEEERb
.text:000000000000EF48                                         ; CODE XREF: android::HeifSource::getGrid(android::sp<android::MediaCodecBuffer> const&,android::sp<android::ApexMediaBuffer> const&,bool &)+C↓j
.text:000000000000EF48                                         ; DATA XREF: LOAD:0000000000001B90↑o ...
.text:000000000000EF48 var_D8          = -0xD8
.text:000000000000EF48 var_D0          = -0xD0
.text:000000000000EF48 var_C8          = -0xC8
.text:000000000000EF48 var_BC          = -0xBC
.text:000000000000EF48 var_B8          = -0xB8
.text:000000000000EF48 var_B0          = -0xB0
.text:000000000000EF48 var_A8          = -0xA8
.text:000000000000EF48 var_A0          = -0xA0
.text:000000000000EF48 var_94          = -0x94
.text:000000000000EF48 var_90          = -0x90
.text:000000000000EF48 var_88          = -0x88
.text:000000000000EF48 var_80          = -0x80
.text:000000000000EF48 var_78          = -0x78
.text:000000000000EF48 var_70          = -0x70
.text:000000000000EF48 var_68          = -0x68
.text:000000000000EF48 var_60          = -0x60
.text:000000000000EF48 var_5C          = -0x5C
.text:000000000000EF48 var_58          = -0x58
.text:000000000000EF48 var_50          = -0x50
.text:000000000000EF48 var_40          = -0x40
.text:000000000000EF48 var_30          = -0x30
.text:000000000000EF48 var_20          = -0x20
.text:000000000000EF48 var_10          = -0x10
.text:000000000000EF48 var_s0          =  0
.text:000000000000EF48 ; __unwind {
.text:000000000000EF48                 SUB             SP, SP, #0xF0
.text:000000000000EF4C                 STP             X28, X27, [SP,#0xE0+var_50]
.text:000000000000EF50                 STP             X26, X25, [SP,#0xE0+var_40]
.text:000000000000EF54                 STP             X24, X23, [SP,#0xE0+var_30]
.text:000000000000EF58                 STP             X22, X21, [SP,#0xE0+var_20]
.text:000000000000EF5C                 STP             X20, X19, [SP,#0xE0+var_10]
.text:000000000000EF60                 STP             X29, X30, [SP,#0xE0+var_s0]
.text:000000000000EF64                 ADD             X29, SP, #0xE0
.text:000000000000EF68                 MRS             X26, #3, c13, c0, #2
.text:000000000000EF6C                 MOV             X19, X0
.text:000000000000EF70                 LDR             X8, [X26,#0x28]
.text:000000000000EF74                 MOV             X27, X1
.text:000000000000EF78                 ADRP            X1, #aColorFormat@PAGE ; "color-format"
.text:000000000000EF7C                 MOV             X22, X2
.text:000000000000EF80                 ADD             X1, X1, #aColorFormat@PAGEOFF ; "color-format"
.text:000000000000EF84                 STUR            X8, [X29,#var_58]
.text:000000000000EF88                 SUB             X2, X29, #-var_5C ; int *
.text:000000000000EF8C                 LDR             X0, [X0,#0x50] ; this
.text:000000000000EF90                 MOV             X20, X3
.text:000000000000EF94                 BL              ._ZNK7android8AMessage9findInt32EPKcPi ; android::AMessage::findInt32(char const*,int *)
.text:000000000000EF98                 TBZ             W0, #0, loc_FD3C
.text:000000000000EF9C                 LDR             X0, [X19,#0x50] ; this
.text:000000000000EFA0                 ADRP            X1, #aEncoderColorFo@PAGE ; "encoder-color-format"
.text:000000000000EFA4                 ADD             X1, X1, #aEncoderColorFo@PAGEOFF ; "encoder-color-format"
.text:000000000000EFA8                 SUB             X2, X29, #-var_60 ; int *
.text:000000000000EFAC                 BL              ._ZNK7android8AMessage9findInt32EPKcPi ; android::AMessage::findInt32(char const*,int *)
.text:000000000000EFB0                 TBZ             W0, #0, loc_FD60
.text:000000000000EFB4                 LDP             W28, W23, [X29,#var_60]
.text:000000000000EFB8                 LDRB            W8, [X19,#0x58]
.text:000000000000EFBC                 STUR            XZR, [X29,#var_68]
.text:000000000000EFC0                 STR             XZR, [SP,#0xE0+var_70]
.text:000000000000EFC4                 CBZ             W8, loc_F094
.text:000000000000EFC8                 LDR             X8, [X19,#0x30]
.text:000000000000EFCC                 LDR             X0, [X8,#0x60] ; this
.text:000000000000EFD0                 STR             X0, [SP,#0xE0+var_78]
.text:000000000000EFD4                 CBZ             X0, loc_F49C
.text:000000000000EFD8                 ADD             X1, SP, #0xE0+var_78 ; void *
.text:000000000000EFDC                 BL              ._ZNK7android7RefBase9incStrongEPKv ; android::RefBase::incStrong(void const*)
.text:000000000000EFE0                 LDR             X24, [SP,#0xE0+var_78]
.text:000000000000EFE4                 LDUR            X25, [X29,#var_68]
.text:000000000000EFE8                 CBZ             X24, loc_EFF8
.text:000000000000EFEC                 SUB             X1, X29, #-var_68 ; void *
.text:000000000000EFF0                 MOV             X0, X24 ; this
.text:000000000000EFF4                 BL              ._ZNK7android7RefBase9incStrongEPKv ; android::RefBase::incStrong(void const*)
.text:000000000000EFF8 loc_EFF8                                ; CODE XREF: android::HeifSource::getGrid(android::sp<android::MediaCodecBuffer> const&,android::sp<android::ApexMediaBuffer> const&,bool &)+A0↑j
.text:000000000000EFF8                 CBZ             X25, loc_F008
.text:000000000000EFFC loc_EFFC                                ; CODE XREF: android::HeifSource::getGrid(android::sp<android::MediaCodecBuffer> const&,android::sp<android::ApexMediaBuffer> const&,bool &)+55C↓j
.text:000000000000EFFC                 SUB             X1, X29, #-var_68 ; void *
.text:000000000000F000                 MOV             X0, X25 ; this
.text:000000000000F004                 BL              ._ZNK7android7RefBase9decStrongEPKv ; android::RefBase::decStrong(void const*)
.text:000000000000F008 loc_F008                                ; CODE XREF: android::HeifSource::getGrid(android::sp<android::MediaCodecBuffer> const&,android::sp<android::ApexMediaBuffer> const&,bool &):loc_EFF8↑j
.text:000000000000F008                                         ; android::HeifSource::getGrid(android::sp<android::MediaCodecBuffer> const&,android::sp<android::ApexMediaBuffer> const&,bool &)+560↓j
.text:000000000000F008                 LDUR            X8, [X29,#var_68]
.text:000000000000F00C                 CMP             X25, X8
.text:000000000000F010                 B.EQ            loc_F018
.text:000000000000F014                 BL              ._ZN7android14sp_report_raceEv ; android::sp_report_race(void)
.text:000000000000F018 loc_F018                                ; CODE XREF: android::HeifSource::getGrid(android::sp<android::MediaCodecBuffer> const&,android::sp<android::ApexMediaBuffer> const&,bool &)+C8↑j
.text:000000000000F018                 LDR             X0, [SP,#0xE0+var_78] ; this
.text:000000000000F01C                 STUR            X24, [X29,#var_68]
.text:000000000000F020                 CBZ             X0, loc_F02C
.text:000000000000F024                 ADD             X1, SP, #0xE0+var_78 ; void *
.text:000000000000F028                 BL              ._ZNK7android7RefBase9decStrongEPKv ; android::RefBase::decStrong(void const*)
.text:000000000000F02C loc_F02C                                ; CODE XREF: android::HeifSource::getGrid(android::sp<android::MediaCodecBuffer> const&,android::sp<android::ApexMediaBuffer> const&,bool &)+D8↑j
.text:000000000000F02C                 LDR             X8, [X22]
.text:000000000000F030                 LDR             X0, [X8,#0x60] ; this
.text:000000000000F034                 STR             X0, [SP,#0xE0+var_78]
.text:000000000000F038                 CBZ             X0, loc_F4AC
.text:000000000000F03C                 ADD             X1, SP, #0xE0+var_78 ; void *
.text:000000000000F040                 BL              ._ZNK7android7RefBase9incStrongEPKv ; android::RefBase::incStrong(void const*)
.text:000000000000F044                 LDR             X24, [SP,#0xE0+var_78]
.text:000000000000F048                 LDR             X25, [SP,#0xE0+var_70]
.text:000000000000F04C                 CBZ             X24, loc_F05C
.text:000000000000F050                 ADD             X1, SP, #0xE0+var_70 ; void *
.text:000000000000F054                 MOV             X0, X24 ; this
.text:000000000000F058                 BL              ._ZNK7android7RefBase9incStrongEPKv ; android::RefBase::incStrong(void const*)
.text:000000000000F05C loc_F05C                                ; CODE XREF: android::HeifSource::getGrid(android::sp<android::MediaCodecBuffer> const&,android::sp<android::ApexMediaBuffer> const&,bool &)+104↑j
.text:000000000000F05C                 CBZ             X25, loc_F06C
.text:000000000000F060 loc_F060                                ; CODE XREF: android::HeifSource::getGrid(android::sp<android::MediaCodecBuffer> const&,android::sp<android::ApexMediaBuffer> const&,bool &)+56C↓j
.text:000000000000F060                 ADD             X1, SP, #0xE0+var_70 ; void *
.text:000000000000F064                 MOV             X0, X25 ; this
.text:000000000000F068                 BL              ._ZNK7android7RefBase9decStrongEPKv ; android::RefBase::decStrong(void const*)
.text:000000000000F06C loc_F06C                                ; CODE XREF: android::HeifSource::getGrid(android::sp<android::MediaCodecBuffer> const&,android::sp<android::ApexMediaBuffer> const&,bool &):loc_F05C↑j
.text:000000000000F06C                                         ; android::HeifSource::getGrid(android::sp<android::MediaCodecBuffer> const&,android::sp<android::ApexMediaBuffer> const&,bool &)+570↓j
.text:000000000000F06C                 LDR             X8, [SP,#0xE0+var_70]
.text:000000000000F070                 CMP             X25, X8
.text:000000000000F074                 B.EQ            loc_F07C
.text:000000000000F078                 BL              ._ZN7android14sp_report_raceEv ; android::sp_report_race(void)
.text:000000000000F07C loc_F07C                                ; CODE XREF: android::HeifSource::getGrid(android::sp<android::MediaCodecBuffer> const&,android::sp<android::ApexMediaBuffer> const&,bool &)+12C↑j
.text:000000000000F07C                 LDR             X0, [SP,#0xE0+var_78] ; this
.text:000000000000F080                 STR             X24, [SP,#0xE0+var_70]
.text:000000000000F084                 CBZ             X0, loc_F134
.text:000000000000F088                 ADD             X1, SP, #0xE0+var_78 ; void *
.text:000000000000F08C                 BL              ._ZNK7android7RefBase9decStrongEPKv ; android::RefBase::decStrong(void const*)
.text:000000000000F090                 B               loc_F134
.text:000000000000F094 ; ---------------------------------------------------------------------------
.text:000000000000F094 loc_F094                                ; CODE XREF: android::HeifSource::getGrid(android::sp<android::MediaCodecBuffer> const&,android::sp<android::ApexMediaBuffer> const&,bool &)+7C↑j
.text:000000000000F094                 LDR             X8, [X22]
.text:000000000000F098                 LDR             X0, [X8,#0x60] ; this
.text:000000000000F09C                 STR             X0, [SP,#0xE0+var_78]
.text:000000000000F0A0                 CBZ             X0, loc_F4BC
.text:000000000000F0A4                 ADD             X1, SP, #0xE0+var_78 ; void *
.text:000000000000F0A8                 BL              ._ZNK7android7RefBase9incStrongEPKv ; android::RefBase::incStrong(void const*)
.text:000000000000F0AC                 LDR             X24, [SP,#0xE0+var_78]
.text:000000000000F0B0                 LDUR            X25, [X29,#var_68]
.text:000000000000F0B4                 CBZ             X24, loc_F0C4
.text:000000000000F0B8                 SUB             X1, X29, #-var_68 ; void *
.text:000000000000F0BC                 MOV             X0, X24 ; this
.text:000000000000F0C0                 BL              ._ZNK7android7RefBase9incStrongEPKv ; android::RefBase::incStrong(void const*)
.text:000000000000F0C4 loc_F0C4                                ; CODE XREF: android::HeifSource::getGrid(android::sp<android::MediaCodecBuffer> const&,android::sp<android::ApexMediaBuffer> const&,bool &)+16C↑j
.text:000000000000F0C4                 CBZ             X25, loc_F0D4
.text:000000000000F0C8 loc_F0C8                                ; CODE XREF: android::HeifSource::getGrid(android::sp<android::MediaCodecBuffer> const&,android::sp<android::ApexMediaBuffer> const&,bool &)+57C↓j
.text:000000000000F0C8                 SUB             X1, X29, #-var_68 ; void *
.text:000000000000F0CC                 MOV             X0, X25 ; this
.text:000000000000F0D0                 BL              ._ZNK7android7RefBase9decStrongEPKv ; android::RefBase::decStrong(void const*)
.text:000000000000F0D4 loc_F0D4                                ; CODE XREF: android::HeifSource::getGrid(android::sp<android::MediaCodecBuffer> const&,android::sp<android::ApexMediaBuffer> const&,bool &):loc_F0C4↑j
.text:000000000000F0D4                                         ; android::HeifSource::getGrid(android::sp<android::MediaCodecBuffer> const&,android::sp<android::ApexMediaBuffer> const&,bool &)+580↓j
.text:000000000000F0D4                 LDUR            X8, [X29,#var_68]
.text:000000000000F0D8                 CMP             X25, X8
.text:000000000000F0DC                 B.EQ            loc_F0E4
.text:000000000000F0E0                 BL              ._ZN7android14sp_report_raceEv ; android::sp_report_race(void)
.text:000000000000F0E4 loc_F0E4                                ; CODE XREF: android::HeifSource::getGrid(android::sp<android::MediaCodecBuffer> const&,android::sp<android::ApexMediaBuffer> const&,bool &)+194↑j
.text:000000000000F0E4                 LDR             X0, [SP,#0xE0+var_78] ; this
.text:000000000000F0E8                 STUR            X24, [X29,#var_68]
.text:000000000000F0EC                 CBZ             X0, loc_F0FC
.text:000000000000F0F0                 ADD             X1, SP, #0xE0+var_78 ; void *
.text:000000000000F0F4                 BL              ._ZNK7android7RefBase9decStrongEPKv ; android::RefBase::decStrong(void const*)
.text:000000000000F0F8                 LDUR            X24, [X29,#var_68]
.text:000000000000F0FC loc_F0FC                                ; CODE XREF: android::HeifSource::getGrid(android::sp<android::MediaCodecBuffer> const&,android::sp<android::ApexMediaBuffer> const&,bool &)+1A4↑j
.text:000000000000F0FC                 LDR             X25, [SP,#0xE0+var_70]
.text:000000000000F100                 CBZ             X24, loc_F110
.text:000000000000F104                 ADD             X1, SP, #0xE0+var_70 ; void *
.text:000000000000F108                 MOV             X0, X24 ; this
.text:000000000000F10C                 BL              ._ZNK7android7RefBase9incStrongEPKv ; android::RefBase::incStrong(void const*)
.text:000000000000F110 loc_F110                                ; CODE XREF: android::HeifSource::getGrid(android::sp<android::MediaCodecBuffer> const&,android::sp<android::ApexMediaBuffer> const&,bool &)+1B8↑j
.text:000000000000F110                 CBZ             X25, loc_F120
.text:000000000000F114                 ADD             X1, SP, #0xE0+var_70 ; void *
.text:000000000000F118                 MOV             X0, X25 ; this
.text:000000000000F11C                 BL              ._ZNK7android7RefBase9decStrongEPKv ; android::RefBase::decStrong(void const*)
.text:000000000000F120 loc_F120                                ; CODE XREF: android::HeifSource::getGrid(android::sp<android::MediaCodecBuffer> const&,android::sp<android::ApexMediaBuffer> const&,bool &):loc_F110↑j
.text:000000000000F120                 LDR             X8, [SP,#0xE0+var_70]
.text:000000000000F124                 CMP             X25, X8
.text:000000000000F128                 B.EQ            loc_F130
.text:000000000000F12C                 BL              ._ZN7android14sp_report_raceEv ; android::sp_report_race(void)
.text:000000000000F130 loc_F130                                ; CODE XREF: android::HeifSource::getGrid(android::sp<android::MediaCodecBuffer> const&,android::sp<android::ApexMediaBuffer> const&,bool &)+1E0↑j
.text:000000000000F130                 STR             X24, [SP,#0xE0+var_70]
.text:000000000000F134 loc_F134                                ; CODE XREF: android::HeifSource::getGrid(android::sp<android::MediaCodecBuffer> const&,android::sp<android::ApexMediaBuffer> const&,bool &)+13C↑j
.text:000000000000F134                                         ; android::HeifSource::getGrid(android::sp<android::MediaCodecBuffer> const&,android::sp<android::ApexMediaBuffer> const&,bool &)+148↑j
.text:000000000000F134                 SUB             W8, W23, #1
.text:000000000000F138                 CMP             W8, #1
.text:000000000000F13C                 B.HI            loc_F1A0
.text:000000000000F140                 STP             X22, X27, [SP,#0xE0+var_90]
.text:000000000000F144                 STP             X26, X20, [SP,#0xE0+var_A8]
.text:000000000000F148                 LDR             W9, [X19,#0x4C]
.text:000000000000F14C                 LDR             W10, [X19,#0x38]
.text:000000000000F150                 STR             W28, [SP,#0xE0+var_94]
.text:000000000000F154                 LDUR            X8, [X29,#var_68]
.text:000000000000F158                 LDR             W22, [X19,#0x44]
.text:000000000000F15C                 SDIV            W28, W9, W10
.text:000000000000F160                 LDR             X25, [X19,#0x240]
.text:000000000000F164                 LDR             X11, [X19,#0x248]
.text:000000000000F168                 LDP             X24, X23, [X8,#0x70]
.text:000000000000F16C                 MSUB            W9, W28, W10, W9
.text:000000000000F170                 SUB             W10, W10, #1
.text:000000000000F174                 CMP             W9, W10
.text:000000000000F178                 STR             X11, [SP,#0xE0+var_B0]
.text:000000000000F17C                 MUL             W27, W22, W9
.text:000000000000F180                 B.NE            loc_F234
.text:000000000000F184                 LDR             W9, [X19,#0x200]
.text:000000000000F188                 LDR             W10, [X19,#0x204]
.text:000000000000F18C                 SUB             W26, W9, W27
.text:000000000000F190                 LSL             W9, W10, #1
.text:000000000000F194                 SUB             W22, W9, W27
.text:000000000000F198                 MOV             W10, #1
.text:000000000000F19C                 B               loc_F23C
.text:000000000000F1A0 ; ---------------------------------------------------------------------------
.text:000000000000F1A0 loc_F1A0                                ; CODE XREF: android::HeifSource::getGrid(android::sp<android::MediaCodecBuffer> const&,android::sp<android::ApexMediaBuffer> const&,bool &)+1F4↑j
.text:000000000000F1A0                 CMP             W23, #7
.text:000000000000F1A4                 B.EQ            loc_F51C
.text:000000000000F1A8                 CMP             W23, #5
.text:000000000000F1AC                 B.EQ            loc_F4CC
.text:000000000000F1B0                 CMP             W23, #3
.text:000000000000F1B4                 B.NE            loc_F584
.text:000000000000F1B8                 STP             X26, X20, [SP,#0xE0+var_A8]
.text:000000000000F1BC                 LDR             W9, [X19,#0x4C]
.text:000000000000F1C0                 LDR             W10, [X19,#0x38]
.text:000000000000F1C4                 LDR             X8, [X19,#0x240]
.text:000000000000F1C8                 STR             X27, [SP,#0xE0+var_88]
.text:000000000000F1CC                 LDR             W27, [X19,#0x44]
.text:000000000000F1D0                 SDIV            W14, W9, W10
.text:000000000000F1D4                 STR             W28, [SP,#0xE0+var_94]
.text:000000000000F1D8                 STR             X8, [SP,#0xE0+var_D8]
.text:000000000000F1DC                 LDUR            X8, [X29,#var_68]
.text:000000000000F1E0                 MSUB            W9, W14, W10, W9
.text:000000000000F1E4                 ADD             W11, W27, #1
.text:000000000000F1E8                 ASR             W20, W11, #1
.text:000000000000F1EC                 LDR             X13, [X19,#0x248]
.text:000000000000F1F0                 LDR             X12, [X19,#0x250]
.text:000000000000F1F4                 SUB             W10, W10, #1
.text:000000000000F1F8                 LDP             X25, X24, [X8,#0x70]
.text:000000000000F1FC                 MUL             W26, W27, W9
.text:000000000000F200                 CMP             W9, W10
.text:000000000000F204                 LDR             X23, [X8,#0x80]
.text:000000000000F208                 MUL             W15, W20, W9
.text:000000000000F20C                 STR             X13, [SP,#0xE0+var_D0]
.text:000000000000F210                 B.NE            loc_F640
.text:000000000000F214                 LDR             W9, [X19,#0x200]
.text:000000000000F218                 LDR             W10, [X19,#0x204]
.text:000000000000F21C                 LDR             W11, [X19,#0x208]
.text:000000000000F220                 SUB             W27, W9, W26
.text:000000000000F224                 SUB             W20, W10, W15
.text:000000000000F228                 SUB             W28, W11, W15
.text:000000000000F22C                 MOV             W10, #1
.text:000000000000F230                 B               loc_F648
.text:000000000000F234 ; ---------------------------------------------------------------------------
.text:000000000000F234 loc_F234                                ; CODE XREF: android::HeifSource::getGrid(android::sp<android::MediaCodecBuffer> const&,android::sp<android::ApexMediaBuffer> const&,bool &)+238↑j
.text:000000000000F234                 MOV             W10, WZR
.text:000000000000F238                 MOV             W26, W22
.text:000000000000F23C loc_F23C                                ; CODE XREF: android::HeifSource::getGrid(android::sp<android::MediaCodecBuffer> const&,android::sp<android::ApexMediaBuffer> const&,bool &)+254↑j
.text:000000000000F23C                 LDR             W9, [X19,#0x48]
.text:000000000000F240                 LDR             W11, [X19,#0x3C]
.text:000000000000F244                 ASR             W20, W9, #1
.text:000000000000F248                 SUB             W11, W11, #1
.text:000000000000F24C                 CMP             W28, W11
.text:000000000000F250                 B.NE            loc_F268
.text:000000000000F254                 LDR             W10, [X19,#0x210]
.text:000000000000F258                 LDR             W11, [X19,#0x214]
.text:000000000000F25C                 MSUB            W9, W9, W28, W10
.text:000000000000F260                 MSUB            W20, W20, W28, W11
.text:000000000000F264                 B               loc_F270
.text:000000000000F268 ; ---------------------------------------------------------------------------
.text:000000000000F268 loc_F268                                ; CODE XREF: android::HeifSource::getGrid(android::sp<android::MediaCodecBuffer> const&,android::sp<android::ApexMediaBuffer> const&,bool &)+308↑j
.text:000000000000F268                 MOV             W21, W9
.text:000000000000F26C                 CBZ             W10, loc_F29C
.text:000000000000F270 loc_F270                                ; CODE XREF: android::HeifSource::getGrid(android::sp<android::MediaCodecBuffer> const&,android::sp<android::ApexMediaBuffer> const&,bool &)+31C↑j
.text:000000000000F270                 LDRSW           X2, [X8,#0x20] ; n
.text:000000000000F274                 MOV             X0, X24 ; s
.text:000000000000F278                 MOV             W1, WZR ; c
.text:000000000000F27C                 MOV             W21, W9
.text:000000000000F280                 BL              .memset
.text:000000000000F284                 LDUR            X8, [X29,#var_68]
.text:000000000000F288                 MOV             X0, X23 ; s
.text:000000000000F28C                 MOV             W1, #0x80 ; c
.text:000000000000F290                 LDRSW           X2, [X8,#0x24] ; n
.text:000000000000F294                 BL              .memset
.text:000000000000F298                 LDR             W9, [X19,#0x48]
.text:000000000000F29C loc_F29C                                ; CODE XREF: android::HeifSource::getGrid(android::sp<android::MediaCodecBuffer> const&,android::sp<android::ApexMediaBuffer> const&,bool &)+324↑j
.text:000000000000F29C                 LDRSW           X8, [X19,#0x220]
.text:000000000000F2A0                 MUL             W9, W9, W28
.text:000000000000F2A4                 LDR             W10, [X19,#0x10]
.text:000000000000F2A8                 SXTW            X11, W27
.text:000000000000F2AC                 SXTW            X9, W9
.text:000000000000F2B0                 STR             X11, [SP,#0xE0+var_80]
.text:000000000000F2B4                 NOP
.text:000000000000F2B8                 MADD            X8, X9, X8, X11
.text:000000000000F2BC                 CMP             W10, #2
.text:000000000000F2C0                 B.NE            loc_F304
.text:000000000000F2C4                 CMP             W21, #1
.text:000000000000F2C8                 B.LT            loc_F388
.text:000000000000F2CC                 ADD             X25, X25, X8
.text:000000000000F2D0                 SXTW            X26, W26
.text:000000000000F2D4 loc_F2D4                                ; CODE XREF: android::HeifSource::getGrid(android::sp<android::MediaCodecBuffer> const&,android::sp<android::ApexMediaBuffer> const&,bool &)+3B4↓j
.text:000000000000F2D4                 MOV             X0, X24 ; dest
.text:000000000000F2D8                 MOV             X1, X25 ; src
.text:000000000000F2DC                 MOV             X2, X26 ; n
.text:000000000000F2E0                 BL              .memcpy
.text:000000000000F2E4                 LDUR            X8, [X29,#var_68]
.text:000000000000F2E8                 SUBS            W21, W21, #1
.text:000000000000F2EC                 LDRSW           X9, [X19,#0x220]
.text:000000000000F2F0                 LDRSW           X8, [X8,#0x50]
.text:000000000000F2F4                 ADD             X25, X25, X9
.text:000000000000F2F8                 ADD             X24, X24, X8
.text:000000000000F2FC                 B.NE            loc_F2D4
.text:000000000000F300                 B               loc_F388
.text:000000000000F304 ; ---------------------------------------------------------------------------
.text:000000000000F304 loc_F304                                ; CODE XREF: android::HeifSource::getGrid(android::sp<android::MediaCodecBuffer> const&,android::sp<android::ApexMediaBuffer> const&,bool &)+378↑j
.text:000000000000F304                 LDR             W0, [X19,#0x28] ; fd
.text:000000000000F308                 MOV             W2, WZR ; whence
.text:000000000000F30C                 SXTW            X1, W8  ; offset
.text:000000000000F310                 BL              .lseek
.text:000000000000F314                 CMP             W21, #1
.text:000000000000F318                 B.LT            loc_F388
.text:000000000000F31C                 MOV             W25, WZR
.text:000000000000F320 loc_F320                                ; CODE XREF: android::HeifSource::getGrid(android::sp<android::MediaCodecBuffer> const&,android::sp<android::ApexMediaBuffer> const&,bool &)+43C↓j
.text:000000000000F320                 CMP             W26, #1
.text:000000000000F324                 B.LT            loc_F358
.text:000000000000F328                 MOV             W27, WZR
.text:000000000000F32C                 MOV             X0, XZR
.text:000000000000F330 loc_F330                                ; CODE XREF: android::HeifSource::getGrid(android::sp<android::MediaCodecBuffer> const&,android::sp<android::ApexMediaBuffer> const&,bool &)+40C↓j
.text:000000000000F330                 LDR             W8, [X19,#0x28]
.text:000000000000F334                 ADD             X1, X24, W0,SXTW ; buf
.text:000000000000F338                 SUB             W9, W26, W27
.text:000000000000F33C                 SXTW            X2, W9  ; nbytes
.text:000000000000F340                 MOV             W0, W8  ; fd
.text:000000000000F344                 BL              .read
.text:000000000000F348                 ADD             W27, W27, W0
.text:000000000000F34C                 CMN             W0, #1
.text:000000000000F350                 CCMP            W26, W27, #4, NE
.text:000000000000F354                 B.GT            loc_F330
.text:000000000000F358 loc_F358                                ; CODE XREF: android::HeifSource::getGrid(android::sp<android::MediaCodecBuffer> const&,android::sp<android::ApexMediaBuffer> const&,bool &)+3DC↑j
.text:000000000000F358                 LDUR            X8, [X29,#var_68]
.text:000000000000F35C                 MOV             W2, #1  ; whence
.text:000000000000F360                 LDRSW           X9, [X19,#0x220]
.text:000000000000F364                 LDRSW           X10, [X19,#0x200]
.text:000000000000F368                 LDR             W0, [X19,#0x28] ; fd
.text:000000000000F36C                 LDRSW           X8, [X8,#0x50]
.text:000000000000F370                 SUB             X1, X9, X10 ; offset
.text:000000000000F374                 ADD             X24, X24, X8
.text:000000000000F378                 BL              .lseek
.text:000000000000F37C                 ADD             W25, W25, #1
.text:000000000000F380                 CMP             W25, W21
.text:000000000000F384                 B.NE            loc_F320
.text:000000000000F388 loc_F388                                ; CODE XREF: android::HeifSource::getGrid(android::sp<android::MediaCodecBuffer> const&,android::sp<android::ApexMediaBuffer> const&,bool &)+380↑j
.text:000000000000F388                                         ; android::HeifSource::getGrid(android::sp<android::MediaCodecBuffer> const&,android::sp<android::ApexMediaBuffer> const&,bool &)+3B8↑j ...
.text:000000000000F388                 LDR             W8, [X19,#0x48]
.text:000000000000F38C                 LDRSW           X9, [X19,#0x224]
.text:000000000000F390                 LDR             X11, [SP,#0xE0+var_80]
.text:000000000000F394                 LDR             W10, [X19,#0x10]
.text:000000000000F398                 ASR             W8, W8, #1
.text:000000000000F39C                 MUL             W8, W8, W28
.text:000000000000F3A0                 SXTW            X8, W8
.text:000000000000F3A4                 MADD            X8, X8, X9, X11
.text:000000000000F3A8                 CMP             W10, #2
.text:000000000000F3AC                 B.NE            loc_F3FC
.text:000000000000F3B0                 LDR             X26, [SP,#0xE0+var_A8]
.text:000000000000F3B4                 CMP             W20, #1
.text:000000000000F3B8                 LDR             X27, [SP,#0xE0+var_88]
.text:000000000000F3BC                 B.LT            loc_FB20
.text:000000000000F3C0                 LDR             X9, [SP,#0xE0+var_B0]
.text:000000000000F3C4                 SXTW            X25, W22
.text:000000000000F3C8                 ADD             X24, X9, X8
.text:000000000000F3CC loc_F3CC                                ; CODE XREF: android::HeifSource::getGrid(android::sp<android::MediaCodecBuffer> const&,android::sp<android::ApexMediaBuffer> const&,bool &)+4AC↓j
.text:000000000000F3CC                 MOV             X0, X23 ; dest
.text:000000000000F3D0                 MOV             X1, X24 ; src
.text:000000000000F3D4                 MOV             X2, X25 ; n
.text:000000000000F3D8                 BL              .memcpy
.text:000000000000F3DC                 LDUR            X8, [X29,#var_68]
.text:000000000000F3E0                 SUBS            W20, W20, #1
.text:000000000000F3E4                 LDRSW           X9, [X19,#0x224]
.text:000000000000F3E8                 LDRSW           X8, [X8,#0x54]
.text:000000000000F3EC                 ADD             X24, X24, X9
.text:000000000000F3F0                 ADD             X23, X23, X8
.text:000000000000F3F4                 B.NE            loc_F3CC
.text:000000000000F3F8                 B               loc_FB20
.text:000000000000F3FC ; ---------------------------------------------------------------------------
.text:000000000000F3FC loc_F3FC                                ; CODE XREF: android::HeifSource::getGrid(android::sp<android::MediaCodecBuffer> const&,android::sp<android::ApexMediaBuffer> const&,bool &)+464↑j
.text:000000000000F3FC                 LDR             W9, [X19,#0x220]
.text:000000000000F400                 MOV             W2, WZR ; whence
.text:000000000000F404                 LDR             W10, [X19,#0x230]
.text:000000000000F408                 LDR             W0, [X19,#0x28] ; fd
.text:000000000000F40C                 MADD            W8, W10, W9, W8
.text:000000000000F410                 SXTW            X1, W8  ; offset
.text:000000000000F414                 BL              .lseek
.text:000000000000F418                 LDR             X26, [SP,#0xE0+var_A8]
.text:000000000000F41C                 CMP             W20, #1
.text:000000000000F420                 LDR             X27, [SP,#0xE0+var_88]
.text:000000000000F424                 B.LT            loc_FB20
.text:000000000000F428                 MOV             W21, WZR
.text:000000000000F42C loc_F42C                                ; CODE XREF: android::HeifSource::getGrid(android::sp<android::MediaCodecBuffer> const&,android::sp<android::ApexMediaBuffer> const&,bool &)+54C↓j
.text:000000000000F42C                 CMP             W22, #1
.text:000000000000F430                 B.LT            loc_F464
.text:000000000000F434                 MOV             X0, XZR
.text:000000000000F438                 MOV             W24, WZR
.text:000000000000F43C loc_F43C                                ; CODE XREF: android::HeifSource::getGrid(android::sp<android::MediaCodecBuffer> const&,android::sp<android::ApexMediaBuffer> const&,bool &)+518↓j
.text:000000000000F43C                 LDR             W8, [X19,#0x28]
.text:000000000000F440                 ADD             X1, X23, W0,SXTW ; buf
.text:000000000000F444                 SUB             W9, W22, W24
.text:000000000000F448                 SXTW            X2, W9  ; nbytes
.text:000000000000F44C                 MOV             W0, W8  ; fd
.text:000000000000F450                 BL              .read
.text:000000000000F454                 ADD             W24, W24, W0
.text:000000000000F458                 CMP             W22, W24
.text:000000000000F45C                 CCMN            W0, #1, #4, GT
.text:000000000000F460                 B.NE            loc_F43C
.text:000000000000F464 loc_F464                                ; CODE XREF: android::HeifSource::getGrid(android::sp<android::MediaCodecBuffer> const&,android::sp<android::ApexMediaBuffer> const&,bool &)+4E8↑j
.text:000000000000F464                 LDUR            X8, [X29,#var_68]
.text:000000000000F468                 MOV             W2, #1  ; whence
.text:000000000000F46C                 LDR             W9, [X19,#0x204]
.text:000000000000F470                 LDRSW           X10, [X19,#0x224]
.text:000000000000F474                 LDR             W0, [X19,#0x28] ; fd
.text:000000000000F478                 LDRSW           X8, [X8,#0x54]
.text:000000000000F47C                 LSL             W9, W9, #1
.text:000000000000F480                 SUB             X1, X10, W9,SXTW ; offset
.text:000000000000F484                 ADD             X23, X23, X8
.text:000000000000F488                 BL              .lseek
.text:000000000000F48C                 ADD             W21, W21, #1
.text:000000000000F490                 CMP             W21, W20
.text:000000000000F494                 B.NE            loc_F42C
.text:000000000000F498                 B               loc_FB20
.text:000000000000F49C ; ---------------------------------------------------------------------------
.text:000000000000F49C loc_F49C                                ; CODE XREF: android::HeifSource::getGrid(android::sp<android::MediaCodecBuffer> const&,android::sp<android::ApexMediaBuffer> const&,bool &)+8C↑j
.text:000000000000F49C                 LDUR            X25, [X29,#var_68]
.text:000000000000F4A0                 MOV             X24, XZR
.text:000000000000F4A4                 CBNZ            X25, loc_EFFC
.text:000000000000F4A8                 B               loc_F008
.text:000000000000F4AC ; ---------------------------------------------------------------------------
.text:000000000000F4AC loc_F4AC                                ; CODE XREF: android::HeifSource::getGrid(android::sp<android::MediaCodecBuffer> const&,android::sp<android::ApexMediaBuffer> const&,bool &)+F0↑j
.text:000000000000F4AC                 LDR             X25, [SP,#0xE0+var_70]
.text:000000000000F4B0                 MOV             X24, XZR
.text:000000000000F4B4                 CBNZ            X25, loc_F060
.text:000000000000F4B8                 B               loc_F06C
.text:000000000000F4BC ; ---------------------------------------------------------------------------
.text:000000000000F4BC loc_F4BC                                ; CODE XREF: android::HeifSource::getGrid(android::sp<android::MediaCodecBuffer> const&,android::sp<android::ApexMediaBuffer> const&,bool &)+158↑j
.text:000000000000F4BC                 LDUR            X25, [X29,#var_68]
.text:000000000000F4C0                 MOV             X24, XZR
.text:000000000000F4C4                 CBNZ            X25, loc_F0C8
.text:000000000000F4C8                 B               loc_F0D4
.text:000000000000F4CC ; ---------------------------------------------------------------------------
.text:000000000000F4CC loc_F4CC                                ; CODE XREF: android::HeifSource::getGrid(android::sp<android::MediaCodecBuffer> const&,android::sp<android::ApexMediaBuffer> const&,bool &)+264↑j
.text:000000000000F4CC                 LDR             W9, [X19,#0x4C]
.text:000000000000F4D0                 LDR             W11, [X19,#0x38]
.text:000000000000F4D4                 LDR             W10, [X19,#0x44]
.text:000000000000F4D8                 LDUR            X8, [X29,#var_68]
.text:000000000000F4DC                 STR             X22, [SP,#0xE0+var_90]
.text:000000000000F4E0                 SDIV            W21, W9, W11
.text:000000000000F4E4                 LDR             X22, [X19,#0x240]
.text:000000000000F4E8                 STR             X20, [SP,#0xE0+var_A0]
.text:000000000000F4EC                 LDR             X23, [X8,#0x70]
.text:000000000000F4F0                 MSUB            W9, W21, W11, W9
.text:000000000000F4F4                 SUB             W11, W11, #1
.text:000000000000F4F8                 CMP             W9, W11
.text:000000000000F4FC                 MUL             W12, W9, W10
.text:000000000000F500                 LSL             W24, W12, #2
.text:000000000000F504                 B.NE            loc_F5B0
.text:000000000000F508                 LDR             W9, [X19,#0x200]
.text:000000000000F50C                 LSL             W9, W9, #2
.text:000000000000F510                 SUB             W25, W9, W24
.text:000000000000F514                 MOV             W9, #1
.text:000000000000F518                 B               loc_F5B8
.text:000000000000F51C ; ---------------------------------------------------------------------------
.text:000000000000F51C loc_F51C                                ; CODE XREF: android::HeifSource::getGrid(android::sp<android::MediaCodecBuffer> const&,android::sp<android::ApexMediaBuffer> const&,bool &)+25C↑j
.text:000000000000F51C                 STP             X22, X27, [SP,#0xE0+var_90]
.text:000000000000F520                 MOV             X27, X26
.text:000000000000F524                 LDR             W9, [X19,#0x4C]
.text:000000000000F528                 LDR             W10, [X19,#0x38]
.text:000000000000F52C                 LDR             X11, [X19,#0x248]
.text:000000000000F530                 LDUR            X8, [X29,#var_68]
.text:000000000000F534                 LDR             W26, [X19,#0x44]
.text:000000000000F538                 SDIV            W21, W9, W10
.text:000000000000F53C                 STR             X20, [SP,#0xE0+var_A0]
.text:000000000000F540                 STR             X11, [SP,#0xE0+var_80]
.text:000000000000F544                 LDR             X25, [X19,#0x240]
.text:000000000000F548                 MSUB            W9, W21, W10, W9
.text:000000000000F54C                 SUB             W10, W10, #1
.text:000000000000F550                 LDP             X24, X23, [X8,#0x70]
.text:000000000000F554                 CMP             W9, W10
.text:000000000000F558                 MUL             W20, W26, W9
.text:000000000000F55C                 STR             W28, [SP,#0xE0+var_94]
.text:000000000000F560                 B.NE            loc_F694
.text:000000000000F564                 LDR             W9, [X19,#0x200]
.text:000000000000F568                 LDR             W10, [X19,#0x204]
.text:000000000000F56C                 SUB             W26, W9, W20
.text:000000000000F570                 LSL             W9, W10, #1
.text:000000000000F574                 SUB             W9, W9, W20
.text:000000000000F578                 STR             W9, [SP,#0xE0+var_A8]
.text:000000000000F57C                 MOV             W9, #1
.text:000000000000F580                 B               loc_F69C
.text:000000000000F584 ; ---------------------------------------------------------------------------
.text:000000000000F584 loc_F584                                ; CODE XREF: android::HeifSource::getGrid(android::sp<android::MediaCodecBuffer> const&,android::sp<android::ApexMediaBuffer> const&,bool &)+26C↑j
.text:000000000000F584                 ADRP            X1, #aHeifsource@PAGE ; "HeifSource"
.text:000000000000F588                 ADRP            X2, #aCanNotSupportC_0@PAGE ; "Can not support color format (%d)"
.text:000000000000F58C                 ADD             X1, X1, #aHeifsource@PAGEOFF ; "HeifSource"
.text:000000000000F590                 ADD             X2, X2, #aCanNotSupportC_0@PAGEOFF ; "Can not support color format (%d)"
.text:000000000000F594                 MOV             W0, #6
.text:000000000000F598                 MOV             W3, W23
.text:000000000000F59C                 BL              .__android_log_print
.text:000000000000F5A0                 MOV             W22, #0xFFFFFFEA
.text:000000000000F5A4                 LDR             X0, [SP,#0xE0+var_70]
.text:000000000000F5A8                 CBNZ            X0, loc_FC28
.text:000000000000F5AC                 B               loc_FC30
.text:000000000000F5B0 ; ---------------------------------------------------------------------------
.text:000000000000F5B0 loc_F5B0                                ; CODE XREF: android::HeifSource::getGrid(android::sp<android::MediaCodecBuffer> const&,android::sp<android::ApexMediaBuffer> const&,bool &)+5BC↑j
.text:000000000000F5B0                 MOV             W9, WZR
.text:000000000000F5B4                 LSL             W25, W10, #2
.text:000000000000F5B8 loc_F5B8                                ; CODE XREF: android::HeifSource::getGrid(android::sp<android::MediaCodecBuffer> const&,android::sp<android::ApexMediaBuffer> const&,bool &)+5D0↑j
.text:000000000000F5B8                 LDR             W10, [X19,#0x3C]
.text:000000000000F5BC                 LDR             W20, [X19,#0x48]
.text:000000000000F5C0                 STR             W28, [SP,#0xE0+var_94]
.text:000000000000F5C4                 SUB             W10, W10, #1
.text:000000000000F5C8                 CMP             W21, W10
.text:000000000000F5CC                 B.NE            loc_F5DC
.text:000000000000F5D0                 LDR             W9, [X19,#0x210]
.text:000000000000F5D4                 MSUB            W20, W20, W21, W9
.text:000000000000F5D8                 B               loc_F5E0
.text:000000000000F5DC ; ---------------------------------------------------------------------------
.text:000000000000F5DC loc_F5DC                                ; CODE XREF: android::HeifSource::getGrid(android::sp<android::MediaCodecBuffer> const&,android::sp<android::ApexMediaBuffer> const&,bool &)+684↑j
.text:000000000000F5DC                 CBZ             W9, loc_F5F0
.text:000000000000F5E0 loc_F5E0                                ; CODE XREF: android::HeifSource::getGrid(android::sp<android::MediaCodecBuffer> const&,android::sp<android::ApexMediaBuffer> const&,bool &)+690↑j
.text:000000000000F5E0                 LDRSW           X2, [X8,#0x20] ; n
.text:000000000000F5E4                 MOV             X0, X23 ; s
.text:000000000000F5E8                 MOV             W1, WZR ; c
.text:000000000000F5EC                 BL              .memset
.text:000000000000F5F0 loc_F5F0                                ; CODE XREF: android::HeifSource::getGrid(android::sp<android::MediaCodecBuffer> const&,android::sp<android::ApexMediaBuffer> const&,bool &):loc_F5DC↑j
.text:000000000000F5F0                 CMP             W20, #1
.text:000000000000F5F4                 B.LT            loc_FB20
.text:000000000000F5F8                 LDR             W8, [X19,#0x48]
.text:000000000000F5FC                 SXTW            X25, W25
.text:000000000000F600                 LDR             W9, [X19,#0x220]
.text:000000000000F604                 MUL             W8, W8, W21
.text:000000000000F608                 MADD            W8, W8, W9, W24
.text:000000000000F60C                 ADD             X24, X22, W8,SXTW
.text:000000000000F610 loc_F610                                ; CODE XREF: android::HeifSource::getGrid(android::sp<android::MediaCodecBuffer> const&,android::sp<android::ApexMediaBuffer> const&,bool &)+6F0↓j
.text:000000000000F610                 MOV             X0, X23 ; dest
.text:000000000000F614                 MOV             X1, X24 ; src
.text:000000000000F618                 MOV             X2, X25 ; n
.text:000000000000F61C                 BL              .memcpy
.text:000000000000F620                 LDUR            X8, [X29,#var_68]
.text:000000000000F624                 SUBS            W20, W20, #1
.text:000000000000F628                 LDRSW           X9, [X19,#0x220]
.text:000000000000F62C                 LDRSW           X8, [X8,#0x50]
.text:000000000000F630                 ADD             X24, X24, X9
.text:000000000000F634                 ADD             X23, X23, X8
.text:000000000000F638                 B.NE            loc_F610
.text:000000000000F63C                 B               loc_FB20
.text:000000000000F640 ; ---------------------------------------------------------------------------
.text:000000000000F640 loc_F640                                ; CODE XREF: android::HeifSource::getGrid(android::sp<android::MediaCodecBuffer> const&,android::sp<android::ApexMediaBuffer> const&,bool &)+2C8↑j
.text:000000000000F640                 MOV             W10, WZR
.text:000000000000F644                 MOV             W28, W20
.text:000000000000F648 loc_F648                                ; CODE XREF: android::HeifSource::getGrid(android::sp<android::MediaCodecBuffer> const&,android::sp<android::ApexMediaBuffer> const&,bool &)+2E8↑j
.text:000000000000F648                 LDR             W9, [X19,#0x48]
.text:000000000000F64C                 LDR             W11, [X19,#0x3C]
.text:000000000000F650                 STR             X12, [SP,#0xE0+var_C8]
.text:000000000000F654                 STR             W14, [SP,#0xE0+var_B0]
.text:000000000000F658                 ASR             W13, W9, #1
.text:000000000000F65C                 STR             X15, [SP,#0xE0+var_B8]
.text:000000000000F660                 SUB             W11, W11, #1
.text:000000000000F664                 CMP             W14, W11
.text:000000000000F668                 B.NE            loc_F6C8
.text:000000000000F66C                 LDR             W10, [X19,#0x210]
.text:000000000000F670                 MUL             W13, W13, W14
.text:000000000000F674                 LDR             W11, [X19,#0x214]
.text:000000000000F678                 LDR             W12, [X19,#0x218]
.text:000000000000F67C                 MSUB            W9, W9, W14, W10
.text:000000000000F680                 SUB             W10, W11, W13
.text:000000000000F684                 STR             W10, [SP,#0xE0+var_80]
.text:000000000000F688                 SUB             W10, W12, W13
.text:000000000000F68C                 STR             W10, [SP,#0xE0+var_BC]
.text:000000000000F690                 B               loc_F6D8
.text:000000000000F694 ; ---------------------------------------------------------------------------
.text:000000000000F694 loc_F694                                ; CODE XREF: android::HeifSource::getGrid(android::sp<android::MediaCodecBuffer> const&,android::sp<android::ApexMediaBuffer> const&,bool &)+618↑j
.text:000000000000F694                 MOV             W9, WZR
.text:000000000000F698                 STR             W26, [SP,#0xE0+var_A8]
.text:000000000000F69C loc_F69C                                ; CODE XREF: android::HeifSource::getGrid(android::sp<android::MediaCodecBuffer> const&,android::sp<android::ApexMediaBuffer> const&,bool &)+638↑j
.text:000000000000F69C                 LDR             W28, [X19,#0x48]
.text:000000000000F6A0                 LDR             W10, [X19,#0x3C]
.text:000000000000F6A4                 ASR             W22, W28, #1
.text:000000000000F6A8                 SUB             W10, W10, #1
.text:000000000000F6AC                 CMP             W21, W10
.text:000000000000F6B0                 B.NE            loc_F77C
.text:000000000000F6B4                 LDR             W9, [X19,#0x210]
.text:000000000000F6B8                 LDR             W10, [X19,#0x214]
.text:000000000000F6BC                 MSUB            W28, W28, W21, W9
.text:000000000000F6C0                 MSUB            W22, W22, W21, W10
.text:000000000000F6C4                 B               loc_F780
.text:000000000000F6C8 ; ---------------------------------------------------------------------------
.text:000000000000F6C8 loc_F6C8                                ; CODE XREF: android::HeifSource::getGrid(android::sp<android::MediaCodecBuffer> const&,android::sp<android::ApexMediaBuffer> const&,bool &)+720↑j
.text:000000000000F6C8                 MOV             W21, W9
.text:000000000000F6CC                 STR             W13, [SP,#0xE0+var_BC]
.text:000000000000F6D0                 STR             W13, [SP,#0xE0+var_80]
.text:000000000000F6D4                 CBZ             W10, loc_F71C
.text:000000000000F6D8 loc_F6D8                                ; CODE XREF: android::HeifSource::getGrid(android::sp<android::MediaCodecBuffer> const&,android::sp<android::ApexMediaBuffer> const&,bool &)+748↑j
.text:000000000000F6D8                 LDRSW           X2, [X8,#0x20] ; n
.text:000000000000F6DC                 MOV             X0, X25 ; s
.text:000000000000F6E0                 MOV             W1, WZR ; c
.text:000000000000F6E4                 MOV             W21, W9
.text:000000000000F6E8                 BL              .memset
.text:000000000000F6EC                 LDUR            X8, [X29,#var_68]
.text:000000000000F6F0                 MOV             X0, X24 ; s
.text:000000000000F6F4                 MOV             W1, #0x80 ; c
.text:000000000000F6F8                 LDRSW           X2, [X8,#0x24] ; n
.text:000000000000F6FC                 BL              .memset
.text:000000000000F700                 LDUR            X8, [X29,#var_68]
.text:000000000000F704                 MOV             X0, X23 ; s
.text:000000000000F708                 MOV             W1, #0x80 ; c
.text:000000000000F70C                 LDRSW           X2, [X8,#0x28] ; n
.text:000000000000F710                 BL              .memset
.text:000000000000F714                 LDR             W14, [SP,#0xE0+var_B0]
.text:000000000000F718                 LDR             W9, [X19,#0x48]
.text:000000000000F71C loc_F71C                                ; CODE XREF: android::HeifSource::getGrid(android::sp<android::MediaCodecBuffer> const&,android::sp<android::ApexMediaBuffer> const&,bool &)+78C↑j
.text:000000000000F71C                 LDR             W8, [X19,#0x220]
.text:000000000000F720                 MUL             W9, W9, W14
.text:000000000000F724                 LDR             W10, [X19,#0x10]
.text:000000000000F728                 STR             X22, [SP,#0xE0+var_90]
.text:000000000000F72C                 MADD            W8, W9, W8, W26
.text:000000000000F730                 CMP             W10, #2
.text:000000000000F734                 B.NE            loc_F86C
.text:000000000000F738                 CMP             W21, #1
.text:000000000000F73C                 B.LT            loc_F8F0
.text:000000000000F740                 LDR             X9, [SP,#0xE0+var_D8]
.text:000000000000F744                 SXTW            X27, W27
.text:000000000000F748                 ADD             X26, X9, W8,SXTW
.text:000000000000F74C loc_F74C                                ; CODE XREF: android::HeifSource::getGrid(android::sp<android::MediaCodecBuffer> const&,android::sp<android::ApexMediaBuffer> const&,bool &)+82C↓j
.text:000000000000F74C                 MOV             X0, X25 ; dest
.text:000000000000F750                 MOV             X1, X26 ; src
.text:000000000000F754                 MOV             X2, X27 ; n
.text:000000000000F758                 BL              .memcpy
.text:000000000000F75C                 LDUR            X8, [X29,#var_68]
.text:000000000000F760                 SUBS            W21, W21, #1
.text:000000000000F764                 LDRSW           X9, [X19,#0x220]
.text:000000000000F768                 LDRSW           X8, [X8,#0x50]
.text:000000000000F76C                 ADD             X26, X26, X9
.text:000000000000F770                 ADD             X25, X25, X8
.text:000000000000F774                 B.NE            loc_F74C
.text:000000000000F778                 B               loc_F8F0
.text:000000000000F77C ; ---------------------------------------------------------------------------
.text:000000000000F77C loc_F77C                                ; CODE XREF: android::HeifSource::getGrid(android::sp<android::MediaCodecBuffer> const&,android::sp<android::ApexMediaBuffer> const&,bool &)+768↑j
.text:000000000000F77C                 CBZ             W9, loc_F7A4
.text:000000000000F780 loc_F780                                ; CODE XREF: android::HeifSource::getGrid(android::sp<android::MediaCodecBuffer> const&,android::sp<android::ApexMediaBuffer> const&,bool &)+77C↑j
.text:000000000000F780                 LDRSW           X2, [X8,#0x20] ; n
.text:000000000000F784                 MOV             X0, X24 ; s
.text:000000000000F788                 MOV             W1, WZR ; c
.text:000000000000F78C                 BL              .memset
.text:000000000000F790                 LDUR            X8, [X29,#var_68]
.text:000000000000F794                 MOV             X0, X23 ; s
.text:000000000000F798                 MOV             W1, #0x80 ; c
.text:000000000000F79C                 LDRSW           X2, [X8,#0x24] ; n
.text:000000000000F7A0                 BL              .memset
.text:000000000000F7A4 loc_F7A4                                ; CODE XREF: android::HeifSource::getGrid(android::sp<android::MediaCodecBuffer> const&,android::sp<android::ApexMediaBuffer> const&,bool &):loc_F77C↑j
.text:000000000000F7A4                 SBFIZ           X20, X20, #1, #0x20 ; ' '
.text:000000000000F7A8                 CMP             W28, #1
.text:000000000000F7AC                 B.LT            loc_F800
.text:000000000000F7B0                 LDRSW           X8, [X19,#0x48]
.text:000000000000F7B4                 SXTW            X9, W21
.text:000000000000F7B8                 LDRSW           X10, [X19,#0x220]
.text:000000000000F7BC                 MUL             X8, X8, X9
.text:000000000000F7C0                 MUL             X8, X8, X10
.text:000000000000F7C4                 ADD             X8, X8, W20,SXTW
.text:000000000000F7C8                 ADD             X25, X25, X8
.text:000000000000F7CC                 LSL             W8, W26, #1
.text:000000000000F7D0                 SXTW            X26, W8
.text:000000000000F7D4 loc_F7D4                                ; CODE XREF: android::HeifSource::getGrid(android::sp<android::MediaCodecBuffer> const&,android::sp<android::ApexMediaBuffer> const&,bool &)+8B4↓j
.text:000000000000F7D4                 MOV             X0, X24 ; dest
.text:000000000000F7D8                 MOV             X1, X25 ; src
.text:000000000000F7DC                 MOV             X2, X26 ; n
.text:000000000000F7E0                 BL              .memcpy
.text:000000000000F7E4                 LDUR            X8, [X29,#var_68]
.text:000000000000F7E8                 SUBS            W28, W28, #1
.text:000000000000F7EC                 LDRSW           X9, [X19,#0x220]
.text:000000000000F7F0                 LDRSW           X8, [X8,#0x50]
.text:000000000000F7F4                 ADD             X25, X25, X9
.text:000000000000F7F8                 ADD             X24, X24, X8
.text:000000000000F7FC                 B.NE            loc_F7D4
.text:000000000000F800 loc_F800                                ; CODE XREF: android::HeifSource::getGrid(android::sp<android::MediaCodecBuffer> const&,android::sp<android::ApexMediaBuffer> const&,bool &)+864↑j
.text:000000000000F800                 MOV             X26, X27
.text:000000000000F804                 LDR             X27, [SP,#0xE0+var_88]
.text:000000000000F808                 CMP             W22, #1
.text:000000000000F80C                 B.LT            loc_FB20
.text:000000000000F810                 LDR             W8, [X19,#0x48]
.text:000000000000F814                 LDRSW           X9, [X19,#0x224]
.text:000000000000F818                 LDR             X10, [SP,#0xE0+var_80]
.text:000000000000F81C                 ASR             W8, W8, #1
.text:000000000000F820                 MUL             W8, W8, W21
.text:000000000000F824                 SXTW            X8, W8
.text:000000000000F828                 MADD            X8, X8, X9, X20
.text:000000000000F82C                 LDR             W9, [SP,#0xE0+var_A8]
.text:000000000000F830                 ADD             X24, X10, X8
.text:000000000000F834                 LSL             W9, W9, #1
.text:000000000000F838                 SXTW            X25, W9
.text:000000000000F83C loc_F83C                                ; CODE XREF: android::HeifSource::getGrid(android::sp<android::MediaCodecBuffer> const&,android::sp<android::ApexMediaBuffer> const&,bool &)+91C↓j
.text:000000000000F83C                 MOV             X0, X23 ; dest
.text:000000000000F840                 MOV             X1, X24 ; src
.text:000000000000F844                 MOV             X2, X25 ; n
.text:000000000000F848                 BL              .memcpy
.text:000000000000F84C                 LDUR            X8, [X29,#var_68]
.text:000000000000F850                 SUBS            W22, W22, #1
.text:000000000000F854                 LDRSW           X9, [X19,#0x224]
.text:000000000000F858                 LDRSW           X8, [X8,#0x54]
.text:000000000000F85C                 ADD             X24, X24, X9
.text:000000000000F860                 ADD             X23, X23, X8
.text:000000000000F864                 B.NE            loc_F83C
.text:000000000000F868                 B               loc_FB20
.text:000000000000F86C ; ---------------------------------------------------------------------------
.text:000000000000F86C loc_F86C                                ; CODE XREF: android::HeifSource::getGrid(android::sp<android::MediaCodecBuffer> const&,android::sp<android::ApexMediaBuffer> const&,bool &)+7EC↑j
.text:000000000000F86C                 LDR             W0, [X19,#0x28] ; fd
.text:000000000000F870                 MOV             W2, WZR ; whence
.text:000000000000F874                 SXTW            X1, W8  ; offset
.text:000000000000F878                 BL              .lseek
.text:000000000000F87C                 CMP             W21, #1
.text:000000000000F880                 B.LT            loc_F8F0
.text:000000000000F884                 MOV             W26, WZR
.text:000000000000F888 loc_F888                                ; CODE XREF: android::HeifSource::getGrid(android::sp<android::MediaCodecBuffer> const&,android::sp<android::ApexMediaBuffer> const&,bool &)+9A4↓j
.text:000000000000F888                 CMP             W27, #1
.text:000000000000F88C                 B.LT            loc_F8C0
.text:000000000000F890                 MOV             X0, XZR
.text:000000000000F894                 MOV             W22, WZR
.text:000000000000F898 loc_F898                                ; CODE XREF: android::HeifSource::getGrid(android::sp<android::MediaCodecBuffer> const&,android::sp<android::ApexMediaBuffer> const&,bool &)+974↓j
.text:000000000000F898                 LDR             W8, [X19,#0x28]
.text:000000000000F89C                 ADD             X1, X25, W0,SXTW ; buf
.text:000000000000F8A0                 SUB             W9, W27, W22
.text:000000000000F8A4                 SXTW            X2, W9  ; nbytes
.text:000000000000F8A8                 MOV             W0, W8  ; fd
.text:000000000000F8AC                 BL              .read
.text:000000000000F8B0                 ADD             W22, W22, W0
.text:000000000000F8B4                 CMP             W27, W22
.text:000000000000F8B8                 CCMN            W0, #1, #4, GT
.text:000000000000F8BC                 B.NE            loc_F898
.text:000000000000F8C0 loc_F8C0                                ; CODE XREF: android::HeifSource::getGrid(android::sp<android::MediaCodecBuffer> const&,android::sp<android::ApexMediaBuffer> const&,bool &)+944↑j
.text:000000000000F8C0                 LDUR            X8, [X29,#var_68]
.text:000000000000F8C4                 MOV             W2, #1  ; whence
.text:000000000000F8C8                 LDRSW           X9, [X19,#0x220]
.text:000000000000F8CC                 LDRSW           X10, [X19,#0x200]
.text:000000000000F8D0                 LDR             W0, [X19,#0x28] ; fd
.text:000000000000F8D4                 LDRSW           X8, [X8,#0x50]
.text:000000000000F8D8                 SUB             X1, X9, X10 ; offset
.text:000000000000F8DC                 ADD             X25, X25, X8
.text:000000000000F8E0                 BL              .lseek
.text:000000000000F8E4                 ADD             W26, W26, #1
.text:000000000000F8E8                 CMP             W26, W21
.text:000000000000F8EC                 B.NE            loc_F888
.text:000000000000F8F0 loc_F8F0                                ; CODE XREF: android::HeifSource::getGrid(android::sp<android::MediaCodecBuffer> const&,android::sp<android::ApexMediaBuffer> const&,bool &)+7F4↑j
.text:000000000000F8F0                                         ; android::HeifSource::getGrid(android::sp<android::MediaCodecBuffer> const&,android::sp<android::ApexMediaBuffer> const&,bool &)+830↑j ...
.text:000000000000F8F0                 LDR             W8, [X19,#0x48]
.text:000000000000F8F4                 LDR             W10, [SP,#0xE0+var_B0]
.text:000000000000F8F8                 LDRSW           X9, [X19,#0x224]
.text:000000000000F8FC                 LDR             X11, [SP,#0xE0+var_B8]
.text:000000000000F900                 ASR             W8, W8, #1
.text:000000000000F904                 MUL             W8, W8, W10
.text:000000000000F908                 LDR             W10, [X19,#0x10]
.text:000000000000F90C                 SXTW            X8, W8
.text:000000000000F910                 SXTW            X21, W11
.text:000000000000F914                 MADD            X8, X8, X9, X21
.text:000000000000F918                 CMP             W10, #2
.text:000000000000F91C                 B.NE            loc_F970
.text:000000000000F920                 LDR             W9, [SP,#0xE0+var_80]
.text:000000000000F924                 LDR             X27, [SP,#0xE0+var_88]
.text:000000000000F928                 CMP             W9, #1
.text:000000000000F92C                 B.LT            loc_FA10
.text:000000000000F930                 LDR             X9, [SP,#0xE0+var_D0]
.text:000000000000F934                 SXTW            X26, W20
.text:000000000000F938                 LDR             W22, [SP,#0xE0+var_80]
.text:000000000000F93C                 ADD             X25, X9, X8
.text:000000000000F940 loc_F940                                ; CODE XREF: android::HeifSource::getGrid(android::sp<android::MediaCodecBuffer> const&,android::sp<android::ApexMediaBuffer> const&,bool &)+A20↓j
.text:000000000000F940                 MOV             X0, X24 ; dest
.text:000000000000F944                 MOV             X1, X25 ; src
.text:000000000000F948                 MOV             X2, X26 ; n
.text:000000000000F94C                 BL              .memcpy
.text:000000000000F950                 LDUR            X8, [X29,#var_68]
.text:000000000000F954                 SUBS            W22, W22, #1
.text:000000000000F958                 LDRSW           X9, [X19,#0x224]
.text:000000000000F95C                 LDRSW           X8, [X8,#0x54]
.text:000000000000F960                 ADD             X25, X25, X9
.text:000000000000F964                 ADD             X24, X24, X8
.text:000000000000F968                 B.NE            loc_F940
.text:000000000000F96C                 B               loc_FA10
.text:000000000000F970 ; ---------------------------------------------------------------------------
.text:000000000000F970 loc_F970                                ; CODE XREF: android::HeifSource::getGrid(android::sp<android::MediaCodecBuffer> const&,android::sp<android::ApexMediaBuffer> const&,bool &)+9D4↑j
.text:000000000000F970                 LDR             W9, [X19,#0x220]
.text:000000000000F974                 MOV             W2, WZR ; whence
.text:000000000000F978                 LDR             W10, [X19,#0x230]
.text:000000000000F97C                 LDR             W0, [X19,#0x28] ; fd
.text:000000000000F980                 MADD            W8, W10, W9, W8
.text:000000000000F984                 SXTW            X1, W8  ; offset
.text:000000000000F988                 BL              .lseek
.text:000000000000F98C                 LDR             W8, [SP,#0xE0+var_80]
.text:000000000000F990                 LDR             X27, [SP,#0xE0+var_88]
.text:000000000000F994                 CMP             W8, #1
.text:000000000000F998                 B.LT            loc_FA10
.text:000000000000F99C                 MOV             W25, WZR
.text:000000000000F9A0 loc_F9A0                                ; CODE XREF: android::HeifSource::getGrid(android::sp<android::MediaCodecBuffer> const&,android::sp<android::ApexMediaBuffer> const&,bool &)+AC4↓j
.text:000000000000F9A0                 CMP             W20, #1
.text:000000000000F9A4                 B.LT            loc_F9D8
.text:000000000000F9A8                 MOV             X0, XZR
.text:000000000000F9AC                 MOV             W22, WZR
.text:000000000000F9B0 loc_F9B0                                ; CODE XREF: android::HeifSource::getGrid(android::sp<android::MediaCodecBuffer> const&,android::sp<android::ApexMediaBuffer> const&,bool &)+A8C↓j
.text:000000000000F9B0                 LDR             W8, [X19,#0x28]
.text:000000000000F9B4                 ADD             X1, X24, W0,SXTW ; buf
.text:000000000000F9B8                 SUB             W9, W20, W22
.text:000000000000F9BC                 SXTW            X2, W9  ; nbytes
.text:000000000000F9C0                 MOV             W0, W8  ; fd
.text:000000000000F9C4                 BL              .read
.text:000000000000F9C8                 ADD             W22, W22, W0
.text:000000000000F9CC                 CMP             W20, W22
.text:000000000000F9D0                 CCMN            W0, #1, #4, GT
.text:000000000000F9D4                 B.NE            loc_F9B0
.text:000000000000F9D8 loc_F9D8                                ; CODE XREF: android::HeifSource::getGrid(android::sp<android::MediaCodecBuffer> const&,android::sp<android::ApexMediaBuffer> const&,bool &)+A5C↑j
.text:000000000000F9D8                 LDUR            X8, [X29,#var_68]
.text:000000000000F9DC                 MOV             W2, #1  ; whence
.text:000000000000F9E0                 LDR             W9, [X19,#0x204]
.text:000000000000F9E4                 LDRSW           X10, [X19,#0x224]
.text:000000000000F9E8                 LDR             W0, [X19,#0x28] ; fd
.text:000000000000F9EC                 LDRSW           X8, [X8,#0x54]
.text:000000000000F9F0                 LSL             W9, W9, #1
.text:000000000000F9F4                 SUB             X1, X10, W9,SXTW ; offset
.text:000000000000F9F8                 ADD             X24, X24, X8
.text:000000000000F9FC                 BL              .lseek
.text:000000000000FA00                 LDR             W8, [SP,#0xE0+var_80]
.text:000000000000FA04                 ADD             W25, W25, #1
.text:000000000000FA08                 CMP             W25, W8
.text:000000000000FA0C                 B.NE            loc_F9A0
.text:000000000000FA10 loc_FA10                                ; CODE XREF: android::HeifSource::getGrid(android::sp<android::MediaCodecBuffer> const&,android::sp<android::ApexMediaBuffer> const&,bool &)+9E4↑j
.text:000000000000FA10                                         ; android::HeifSource::getGrid(android::sp<android::MediaCodecBuffer> const&,android::sp<android::ApexMediaBuffer> const&,bool &)+A24↑j ...
.text:000000000000FA10                 LDR             W8, [X19,#0x48]
.text:000000000000FA14                 LDR             W10, [SP,#0xE0+var_B0]
.text:000000000000FA18                 LDRSW           X9, [X19,#0x228]
.text:000000000000FA1C                 ASR             W8, W8, #1
.text:000000000000FA20                 MUL             W8, W8, W10
.text:000000000000FA24                 LDR             W10, [X19,#0x10]
.text:000000000000FA28                 SXTW            X8, W8
.text:000000000000FA2C                 MADD            X8, X8, X9, X21
.text:000000000000FA30                 CMP             W10, #2
.text:000000000000FA34                 B.NE            loc_FA84
.text:000000000000FA38                 LDR             W20, [SP,#0xE0+var_80]
.text:000000000000FA3C                 LDR             X26, [SP,#0xE0+var_A8]
.text:000000000000FA40                 CMP             W20, #1
.text:000000000000FA44                 B.LT            loc_FB20
.text:000000000000FA48                 LDR             X9, [SP,#0xE0+var_C8]
.text:000000000000FA4C                 SXTW            X25, W28
.text:000000000000FA50                 ADD             X24, X9, X8
.text:000000000000FA54 loc_FA54                                ; CODE XREF: android::HeifSource::getGrid(android::sp<android::MediaCodecBuffer> const&,android::sp<android::ApexMediaBuffer> const&,bool &)+B34↓j
.text:000000000000FA54                 MOV             X0, X23 ; dest
.text:000000000000FA58                 MOV             X1, X24 ; src
.text:000000000000FA5C                 MOV             X2, X25 ; n
.text:000000000000FA60                 BL              .memcpy
.text:000000000000FA64                 LDUR            X8, [X29,#var_68]
.text:000000000000FA68                 SUBS            W20, W20, #1
.text:000000000000FA6C                 LDRSW           X9, [X19,#0x228]
.text:000000000000FA70                 LDRSW           X8, [X8,#0x58]
.text:000000000000FA74                 ADD             X24, X24, X9
.text:000000000000FA78                 ADD             X23, X23, X8
.text:000000000000FA7C                 B.NE            loc_FA54
.text:000000000000FA80                 B               loc_FB20
.text:000000000000FA84 ; ---------------------------------------------------------------------------
.text:000000000000FA84 loc_FA84                                ; CODE XREF: android::HeifSource::getGrid(android::sp<android::MediaCodecBuffer> const&,android::sp<android::ApexMediaBuffer> const&,bool &)+AEC↑j
.text:000000000000FA84                 LDR             W9, [X19,#0x224]
.text:000000000000FA88                 MOV             W2, WZR ; whence
.text:000000000000FA8C                 LDR             W10, [X19,#0x234]
.text:000000000000FA90                 LDR             W0, [X19,#0x28] ; fd
.text:000000000000FA94                 MADD            W8, W10, W9, W8
.text:000000000000FA98                 SXTW            X1, W8  ; offset
.text:000000000000FA9C                 BL              .lseek
.text:000000000000FAA0                 LDR             W22, [SP,#0xE0+var_BC]
.text:000000000000FAA4                 LDR             X26, [SP,#0xE0+var_A8]
.text:000000000000FAA8                 CMP             W22, #1
.text:000000000000FAAC                 B.LT            loc_FB20
.text:000000000000FAB0                 MOV             W20, WZR
.text:000000000000FAB4 loc_FAB4                                ; CODE XREF: android::HeifSource::getGrid(android::sp<android::MediaCodecBuffer> const&,android::sp<android::ApexMediaBuffer> const&,bool &)+BD4↓j
.text:000000000000FAB4                 CMP             W28, #1
.text:000000000000FAB8                 B.LT            loc_FAEC
.text:000000000000FABC                 MOV             X0, XZR
.text:000000000000FAC0                 MOV             W21, WZR
.text:000000000000FAC4 loc_FAC4                                ; CODE XREF: android::HeifSource::getGrid(android::sp<android::MediaCodecBuffer> const&,android::sp<android::ApexMediaBuffer> const&,bool &)+BA0↓j
.text:000000000000FAC4                 LDR             W8, [X19,#0x28]
.text:000000000000FAC8                 ADD             X1, X23, W0,SXTW ; buf
.text:000000000000FACC                 SUB             W9, W28, W21
.text:000000000000FAD0                 SXTW            X2, W9  ; nbytes
.text:000000000000FAD4                 MOV             W0, W8  ; fd
.text:000000000000FAD8                 BL              .read
.text:000000000000FADC                 ADD             W21, W21, W0
.text:000000000000FAE0                 CMP             W28, W21
.text:000000000000FAE4                 CCMN            W0, #1, #4, GT
.text:000000000000FAE8                 B.NE            loc_FAC4
.text:000000000000FAEC loc_FAEC                                ; CODE XREF: android::HeifSource::getGrid(android::sp<android::MediaCodecBuffer> const&,android::sp<android::ApexMediaBuffer> const&,bool &)+B70↑j
.text:000000000000FAEC                 LDUR            X8, [X29,#var_68]
.text:000000000000FAF0                 MOV             W2, #1  ; whence
.text:000000000000FAF4                 LDR             W9, [X19,#0x208]
.text:000000000000FAF8                 LDRSW           X10, [X19,#0x228]
.text:000000000000FAFC                 LDR             W0, [X19,#0x28] ; fd
.text:000000000000FB00                 LDRSW           X8, [X8,#0x58]
.text:000000000000FB04                 LSL             W9, W9, #1
.text:000000000000FB08                 SUB             X1, X10, W9,SXTW ; offset
.text:000000000000FB0C                 ADD             X23, X23, X8
.text:000000000000FB10                 BL              .lseek
.text:000000000000FB14                 ADD             W20, W20, #1
.text:000000000000FB18                 CMP             W20, W22
.text:000000000000FB1C                 B.NE            loc_FAB4
.text:000000000000FB20 loc_FB20                                ; CODE XREF: android::HeifSource::getGrid(android::sp<android::MediaCodecBuffer> const&,android::sp<android::ApexMediaBuffer> const&,bool &)+474↑j
.text:000000000000FB20                                         ; android::HeifSource::getGrid(android::sp<android::MediaCodecBuffer> const&,android::sp<android::ApexMediaBuffer> const&,bool &)+4B0↑j ...
.text:000000000000FB20                 LDRB            W8, [X19,#0x58]
.text:000000000000FB24                 CBZ             W8, loc_FB94
.text:000000000000FB28                 LDR             X8, [SP,#0xE0+var_90]
.text:000000000000FB2C                 LDR             X8, [X8]
.text:000000000000FB30                 LDR             X0, [X8,#0x60] ; this
.text:000000000000FB34                 STR             X0, [SP,#0xE0+var_78]
.text:000000000000FB38                 CBZ             X0, loc_FB44
.text:000000000000FB3C                 ADD             X1, SP, #0xE0+var_78 ; void *
.text:000000000000FB40                 BL              ._ZNK7android7RefBase9incStrongEPKv ; android::RefBase::incStrong(void const*)
.text:000000000000FB44 loc_FB44                                ; CODE XREF: android::HeifSource::getGrid(android::sp<android::MediaCodecBuffer> const&,android::sp<android::ApexMediaBuffer> const&,bool &)+BF0↑j
.text:000000000000FB44                 LDR             W8, [SP,#0xE0+var_94]
.text:000000000000FB48                 SUB             W8, W8, #1
.text:000000000000FB4C                 CMP             W8, #9
.text:000000000000FB50                 B.CS            loc_FB60
.text:000000000000FB54                 MOV             W9, #0x113
.text:000000000000FB58                 LSR             W9, W9, W8
.text:000000000000FB5C                 TBNZ            W9, #0, loc_FC74
.text:000000000000FB60 loc_FB60                                ; CODE XREF: android::HeifSource::getGrid(android::sp<android::MediaCodecBuffer> const&,android::sp<android::ApexMediaBuffer> const&,bool &)+C08↑j
.text:000000000000FB60                 ADRP            X1, #aHeifsource@PAGE ; "HeifSource"
.text:000000000000FB64                 ADRP            X2, #aCanNotSupportC@PAGE ; "Can not support csc color format"
.text:000000000000FB68                 ADD             X1, X1, #aHeifsource@PAGEOFF ; "HeifSource"
.text:000000000000FB6C                 ADD             X2, X2, #aCanNotSupportC@PAGEOFF ; "Can not support csc color format"
.text:000000000000FB70                 MOV             W0, #6
.text:000000000000FB74                 BL              .__android_log_print
.text:000000000000FB78                 MOV             W22, #0xFFFFFFEA
.text:000000000000FB7C loc_FB7C                                ; CODE XREF: android::HeifSource::getGrid(android::sp<android::MediaCodecBuffer> const&,android::sp<android::ApexMediaBuffer> const&,bool &)+DDC↓j
.text:000000000000FB7C                 MOV             W20, #1
.text:000000000000FB80                 LDR             X0, [SP,#0xE0+var_78] ; this
.text:000000000000FB84                 CBZ             X0, loc_FB90
.text:000000000000FB88 loc_FB88                                ; CODE XREF: android::HeifSource::getGrid(android::sp<android::MediaCodecBuffer> const&,android::sp<android::ApexMediaBuffer> const&,bool &)+DEC↓j
.text:000000000000FB88                 ADD             X1, SP, #0xE0+var_78 ; void *
.text:000000000000FB8C                 BL              ._ZNK7android7RefBase9decStrongEPKv ; android::RefBase::decStrong(void const*)
.text:000000000000FB90 loc_FB90                                ; CODE XREF: android::HeifSource::getGrid(android::sp<android::MediaCodecBuffer> const&,android::sp<android::ApexMediaBuffer> const&,bool &)+C3C↑j
.text:000000000000FB90                                         ; android::HeifSource::getGrid(android::sp<android::MediaCodecBuffer> const&,android::sp<android::ApexMediaBuffer> const&,bool &)+DF0↓j
.text:000000000000FB90                 CBNZ            W20, loc_FC20
.text:000000000000FB94 loc_FB94                                ; CODE XREF: android::HeifSource::getGrid(android::sp<android::MediaCodecBuffer> const&,android::sp<android::ApexMediaBuffer> const&,bool &)+BDC↑j
.text:000000000000FB94                 LDR             X8, [SP,#0xE0+var_70]
.text:000000000000FB98                 LDR             W9, [X8,#0x10]
.text:000000000000FB9C                 CMP             W9, #1
.text:000000000000FBA0                 B.LT            loc_FBF4
.text:000000000000FBA4                 MOV             X20, XZR
.text:000000000000FBA8                 MOV             W21, WZR
.text:000000000000FBAC loc_FBAC                                ; CODE XREF: android::HeifSource::getGrid(android::sp<android::MediaCodecBuffer> const&,android::sp<android::ApexMediaBuffer> const&,bool &)+CA8↓j
.text:000000000000FBAC                 ADD             X8, X8, X20,LSL#2
.text:000000000000FBB0                 LDR             X0, [X27] ; this
.text:000000000000FBB4                 LDRSW           X9, [X8,#0x50]
.text:000000000000FBB8                 LDRSW           X8, [X8,#0x40]
.text:000000000000FBBC                 MUL             X22, X8, X9
.text:000000000000FBC0                 BL              ._ZN7android16MediaCodecBuffer4dataEv ; android::MediaCodecBuffer::data(void)
.text:000000000000FBC4                 LDR             X8, [SP,#0xE0+var_70]
.text:000000000000FBC8                 ADD             X0, X0, W21,SXTW ; dest
.text:000000000000FBCC                 MOV             X2, X22 ; n
.text:000000000000FBD0                 ADD             X8, X8, X20,LSL#3
.text:000000000000FBD4                 LDR             X1, [X8,#0x70] ; src
.text:000000000000FBD8                 BL              .memcpy
.text:000000000000FBDC                 LDR             X8, [SP,#0xE0+var_70]
.text:000000000000FBE0                 ADD             W21, W22, W21
.text:000000000000FBE4                 ADD             X20, X20, #1
.text:000000000000FBE8                 LDRSW           X9, [X8,#0x10]
.text:000000000000FBEC                 CMP             X20, X9
.text:000000000000FBF0                 B.LT            loc_FBAC
.text:000000000000FBF4 loc_FBF4                                ; CODE XREF: android::HeifSource::getGrid(android::sp<android::MediaCodecBuffer> const&,android::sp<android::ApexMediaBuffer> const&,bool &)+C58↑j
.text:000000000000FBF4                 LDR             W8, [X19,#0x40]
.text:000000000000FBF8                 MOV             W22, WZR
.text:000000000000FBFC                 LDR             W9, [X19,#0x4C]
.text:000000000000FC00                 SUB             W8, W8, #1
.text:000000000000FC04                 CMP             W9, W8
.text:000000000000FC08                 LDR             X9, [SP,#0xE0+var_A0]
.text:000000000000FC0C                 CSET            W8, EQ
.text:000000000000FC10                 STRB            W8, [X9]
.text:000000000000FC14                 LDR             W8, [X19,#0x4C]
.text:000000000000FC18                 ADD             W8, W8, #1
.text:000000000000FC1C                 STR             W8, [X19,#0x4C]
.text:000000000000FC20 loc_FC20                                ; CODE XREF: android::HeifSource::getGrid(android::sp<android::MediaCodecBuffer> const&,android::sp<android::ApexMediaBuffer> const&,bool &):loc_FB90↑j
.text:000000000000FC20                 LDR             X0, [SP,#0xE0+var_70] ; this
.text:000000000000FC24                 CBZ             X0, loc_FC30
.text:000000000000FC28 loc_FC28                                ; CODE XREF: android::HeifSource::getGrid(android::sp<android::MediaCodecBuffer> const&,android::sp<android::ApexMediaBuffer> const&,bool &)+660↑j
.text:000000000000FC28                 ADD             X1, SP, #0xE0+var_70 ; void *
.text:000000000000FC2C                 BL              ._ZNK7android7RefBase9decStrongEPKv ; android::RefBase::decStrong(void const*)
.text:000000000000FC30 loc_FC30                                ; CODE XREF: android::HeifSource::getGrid(android::sp<android::MediaCodecBuffer> const&,android::sp<android::ApexMediaBuffer> const&,bool &)+664↑j
.text:000000000000FC30                                         ; android::HeifSource::getGrid(android::sp<android::MediaCodecBuffer> const&,android::sp<android::ApexMediaBuffer> const&,bool &)+CDC↑j
.text:000000000000FC30                 LDUR            X0, [X29,#var_68] ; this
.text:000000000000FC34                 CBZ             X0, loc_FC40
.text:000000000000FC38                 SUB             X1, X29, #-var_68 ; void *
.text:000000000000FC3C                 BL              ._ZNK7android7RefBase9decStrongEPKv ; android::RefBase::decStrong(void const*)
.text:000000000000FC40 loc_FC40                                ; CODE XREF: android::HeifSource::getGrid(android::sp<android::MediaCodecBuffer> const&,android::sp<android::ApexMediaBuffer> const&,bool &)+CEC↑j
.text:000000000000FC40                 LDR             X8, [X26,#0x28]
.text:000000000000FC44                 LDUR            X9, [X29,#var_58]
.text:000000000000FC48                 CMP             X8, X9
.text:000000000000FC4C                 B.NE            loc_FD84
.text:000000000000FC50                 MOV             W0, W22
.text:000000000000FC54                 LDP             X29, X30, [SP,#0xE0+var_s0]
.text:000000000000FC58                 LDP             X20, X19, [SP,#0xE0+var_10]
.text:000000000000FC5C                 LDP             X22, X21, [SP,#0xE0+var_20]
.text:000000000000FC60                 LDP             X24, X23, [SP,#0xE0+var_30]
.text:000000000000FC64                 LDP             X26, X25, [SP,#0xE0+var_40]
.text:000000000000FC68                 LDP             X28, X27, [SP,#0xE0+var_50]
.text:000000000000FC6C                 ADD             SP, SP, #0xF0
.text:000000000000FC70                 RET
.text:000000000000FC74 ; ---------------------------------------------------------------------------
.text:000000000000FC74 loc_FC74                                ; CODE XREF: android::HeifSource::getGrid(android::sp<android::MediaCodecBuffer> const&,android::sp<android::ApexMediaBuffer> const&,bool &)+C14↑j
.text:000000000000FC74                 ADRP            X9, #unk_9D44@PAGE
.text:000000000000FC78                 ADD             X9, X9, #unk_9D44@PAGEOFF
.text:000000000000FC7C                 LDR             W9, [X9,W8,SXTW#2]
.text:000000000000FC80                 LDR             X8, [SP,#0xE0+var_78]
.text:000000000000FC84                 STR             W9, [X19,#0x1B0]
.text:000000000000FC88                 LDR             W9, [X8,#0x10]
.text:000000000000FC8C                 CMP             W9, #1
.text:000000000000FC90                 B.LT            loc_FCF0
.text:000000000000FC94                 MOV             X9, XZR
.text:000000000000FC98                 MOV             X10, XZR
.text:000000000000FC9C                 ADD             X11, X19, #0x170
.text:000000000000FCA0                 ADD             X12, X8, #0x40 ; '@'
.text:000000000000FCA4 loc_FCA4                                ; CODE XREF: android::HeifSource::getGrid(android::sp<android::MediaCodecBuffer> const&,android::sp<android::ApexMediaBuffer> const&,bool &)+DA4↓j
.text:000000000000FCA4                 ADD             X13, X12, X9
.text:000000000000FCA8                 ADD             X15, X11, X9
.text:000000000000FCAC                 ADD             X9, X9, #4
.text:000000000000FCB0                 LDUR            W14, [X13,#-0x10]
.text:000000000000FCB4                 STUR            W14, [X15,#-0x40]
.text:000000000000FCB8                 LDR             W14, [X13]
.text:000000000000FCBC                 STUR            W14, [X15,#-0x30]
.text:000000000000FCC0                 LDR             W14, [X13,#0x10]
.text:000000000000FCC4                 STUR            W14, [X15,#-0x20]
.text:000000000000FCC8                 LSL             X14, X10, #3
.text:000000000000FCCC                 LDR             W13, [X13,#0x20]
.text:000000000000FCD0                 ADD             X16, X12, X14
.text:000000000000FCD4                 ADD             X10, X10, #1
.text:000000000000FCD8                 STUR            W13, [X15,#-0x10]
.text:000000000000FCDC                 LDR             X13, [X16,#0x30]
.text:000000000000FCE0                 STR             X13, [X11,X14]
.text:000000000000FCE4                 LDRSW           X13, [X8,#0x10]
.text:000000000000FCE8                 CMP             X10, X13
.text:000000000000FCEC                 B.LT            loc_FCA4
.text:000000000000FCF0 loc_FCF0                                ; CODE XREF: android::HeifSource::getGrid(android::sp<android::MediaCodecBuffer> const&,android::sp<android::ApexMediaBuffer> const&,bool &)+D48↑j
.text:000000000000FCF0                 ADD             X1, X19, #0x130
.text:000000000000FCF4                 MOV             W8, #1
.text:000000000000FCF8                 ADD             X0, X19, #0x60 ; '`'
.text:000000000000FCFC                 STR             W8, [X19,#0x1C0]
.text:000000000000FD00                 BL              .simgp_csc
.text:000000000000FD04                 CBZ             W0, loc_FD28
.text:000000000000FD08                 ADRP            X1, #aHeifsource@PAGE ; "HeifSource"
.text:000000000000FD0C                 ADRP            X2, #aCanNotConvertC@PAGE ; "Can not convert color format"
.text:000000000000FD10                 ADD             X1, X1, #aHeifsource@PAGEOFF ; "HeifSource"
.text:000000000000FD14                 ADD             X2, X2, #aCanNotConvertC@PAGEOFF ; "Can not convert color format"
.text:000000000000FD18                 MOV             W0, #6
.text:000000000000FD1C                 BL              .__android_log_print
.text:000000000000FD20                 MOV             W22, WZR
.text:000000000000FD24                 B               loc_FB7C
.text:000000000000FD28 ; ---------------------------------------------------------------------------
.text:000000000000FD28 loc_FD28                                ; CODE XREF: android::HeifSource::getGrid(android::sp<android::MediaCodecBuffer> const&,android::sp<android::ApexMediaBuffer> const&,bool &)+DBC↑j
.text:000000000000FD28                 MOV             W20, WZR
.text:000000000000FD2C                 MOV             W22, WZR
.text:000000000000FD30                 LDR             X0, [SP,#0xE0+var_78]
.text:000000000000FD34                 CBNZ            X0, loc_FB88
.text:000000000000FD38                 B               loc_FB90
.text:000000000000FD3C ; ---------------------------------------------------------------------------
.text:000000000000FD3C loc_FD3C                                ; CODE XREF: android::HeifSource::getGrid(android::sp<android::MediaCodecBuffer> const&,android::sp<android::ApexMediaBuffer> const&,bool &)+50↑j
.text:000000000000FD3C                 ADRP            X0, #aMformatFindint@PAGE ; "!(mFormat->findInt32(\"color-format\", "...
.text:000000000000FD40                 ADRP            X1, #aHeifsource@PAGE ; "HeifSource"
.text:000000000000FD44                 ADRP            X2, #aS@PAGE ; "%s"
.text:000000000000FD48                 ADRP            X3, #aVendorSamsungF_9@PAGE ; "vendor/samsung/frameworks/av/media/libh"...
.text:000000000000FD4C                 ADD             X0, X0, #aMformatFindint@PAGEOFF ; "!(mFormat->findInt32(\"color-format\", "...
.text:000000000000FD50                 ADD             X1, X1, #aHeifsource@PAGEOFF ; "HeifSource"
.text:000000000000FD54                 ADD             X2, X2, #aS@PAGEOFF ; "%s"
.text:000000000000FD58                 ADD             X3, X3, #aVendorSamsungF_9@PAGEOFF ; "vendor/samsung/frameworks/av/media/libh"...
.text:000000000000FD5C                 BL              .__android_log_assert
.text:000000000000FD60 loc_FD60                                ; CODE XREF: android::HeifSource::getGrid(android::sp<android::MediaCodecBuffer> const&,android::sp<android::ApexMediaBuffer> const&,bool &)+68↑j
.text:000000000000FD60                 ADRP            X0, #aMformatFindint_0@PAGE ; "!(mFormat->findInt32(\"encoder-color-fo"...
.text:000000000000FD64                 ADRP            X1, #aHeifsource@PAGE ; "HeifSource"
.text:000000000000FD68                 ADRP            X2, #aS@PAGE ; "%s"
.text:000000000000FD6C                 ADRP            X3, #aVendorSamsungF_10@PAGE ; "vendor/samsung/frameworks/av/media/libh"...
.text:000000000000FD70                 ADD             X0, X0, #aMformatFindint_0@PAGEOFF ; "!(mFormat->findInt32(\"encoder-color-fo"...
.text:000000000000FD74                 ADD             X1, X1, #aHeifsource@PAGEOFF ; "HeifSource"
.text:000000000000FD78                 ADD             X2, X2, #aS@PAGEOFF ; "%s"
.text:000000000000FD7C                 ADD             X3, X3, #aVendorSamsungF_10@PAGEOFF ; "vendor/samsung/frameworks/av/media/libh"...
.text:000000000000FD80                 BL              .__android_log_assert
.text:000000000000FD84 loc_FD84                                ; CODE XREF: android::HeifSource::getGrid(android::sp<android::MediaCodecBuffer> const&,android::sp<android::ApexMediaBuffer> const&,bool &)+D04↑j
.text:000000000000FD84                 BL              .__stack_chk_fail
.text:000000000000FD84 ; } // starts at EF48
.text:000000000000FD84 ; End of function android::HeifSource::getGrid(android::sp<android::MediaCodecBuffer> const&,android::sp<android::ApexMediaBuffer> const&,bool &)
.text:000000000000FD88 ; =============== S U B R O U T I N E =======================================
.text:000000000000FD88 ; Attributes: bp-based frame
.text:000000000000FD88 ; __int64 __fastcall android::HeifSource::getStatus(android::HeifSource *__hidden this)
.text:000000000000FD88                 EXPORT _ZN7android10HeifSource9getStatusEv
.text:000000000000FD88 _ZN7android10HeifSource9getStatusEv     ; CODE XREF: android::HeifSource::getStatus(void)+C↓j
.text:000000000000FD88                                         ; DATA XREF: LOAD:0000000000001F08↑o ...
.text:000000000000FD88 var_40          = -0x40
.text:000000000000FD88 var_38          = -0x38
.text:000000000000FD88 var_30          = -0x30
.text:000000000000FD88 var_20          = -0x20
.text:000000000000FD88 var_10          = -0x10
.text:000000000000FD88 var_s0          =  0
.text:000000000000FD88 ; __unwind {
.text:000000000000FD88                 SUB             SP, SP, #0x50
.text:000000000000FD8C                 STP             X24, X23, [SP,#0x40+var_30]
.text:000000000000FD90                 STP             X22, X21, [SP,#0x40+var_20]
.text:000000000000FD94                 STP             X20, X19, [SP,#0x40+var_10]
.text:000000000000FD98                 STP             X29, X30, [SP,#0x40+var_s0]
.text:000000000000FD9C                 ADD             X29, SP, #0x40
.text:000000000000FDA0                 MRS             X24, #3, c13, c0, #2
.text:000000000000FDA4                 MOV             X19, X0
.text:000000000000FDA8                 LDR             X9, [X24,#0x28]
.text:000000000000FDAC                 MOV             W0, #0x20 ; ' ' ; unsigned __int64
.text:000000000000FDB0                 MOV             X20, X8
.text:000000000000FDB4                 STR             X9, [SP,#0x40+var_38]
.text:000000000000FDB8                 BL              ._Znwm  ; operator new(ulong)
.text:000000000000FDBC                 MOV             X21, X0
.text:000000000000FDC0                 BL              ._ZN7android7RefBaseC2Ev ; android::RefBase::RefBase(void)
.text:000000000000FDC4                 ADRP            X8, #_ZTVN7android16HeifSourceStatusE_ptr@PAGE
.text:000000000000FDC8                 MOV             X22, X21
.text:000000000000FDCC                 LDR             X8, [X8,#_ZTVN7android16HeifSourceStatusE_ptr@PAGEOFF]
.text:000000000000FDD0                 STR             XZR, [X22,#0x18]!
.text:000000000000FDD4                 STR             XZR, [X21,#0x10]
.text:000000000000FDD8                 ADD             X8, X8, #0x10
.text:000000000000FDDC                 STR             X8, [X21]
.text:000000000000FDE0                 LDR             X23, [X22]
.text:000000000000FDE4                 CBZ             X23, loc_FDF4
.text:000000000000FDE8                 MOV             X0, X23 ; this
.text:000000000000FDEC                 MOV             X1, X22 ; void *
.text:000000000000FDF0                 BL              ._ZNK7android7RefBase9decStrongEPKv ; android::RefBase::decStrong(void const*)
.text:000000000000FDF4 loc_FDF4                                ; CODE XREF: android::HeifSource::getStatus(void)+5C↑j
.text:000000000000FDF4                 LDR             X8, [X22]
.text:000000000000FDF8                 CMP             X23, X8
.text:000000000000FDFC                 B.EQ            loc_FE04
.text:000000000000FE00                 BL              ._ZN7android14sp_report_raceEv ; android::sp_report_race(void)
.text:000000000000FE04 loc_FE04                                ; CODE XREF: android::HeifSource::getStatus(void)+74↑j
.text:000000000000FE04                 MOV             X0, X21 ; this
.text:000000000000FE08                 STR             XZR, [X21,#0x18]
.text:000000000000FE0C                 MOV             X1, X20 ; void *
.text:000000000000FE10                 STR             X21, [X20]
.text:000000000000FE14                 BL              ._ZNK7android7RefBase9incStrongEPKv ; android::RefBase::incStrong(void const*)
.text:000000000000FE18                 LDR             X20, [X20]
.text:000000000000FE1C                 LDR             W8, [X19,#0x40]
.text:000000000000FE20                 STR             W8, [X20,#0x10]
.text:000000000000FE24                 MOV             X8, SP
.text:000000000000FE28                 LDR             X0, [X19,#0x50] ; this
.text:000000000000FE2C                 BL              ._ZNK7android8AMessage3dupEv ; android::AMessage::dup(void)
.text:000000000000FE30                 LDR             X19, [X20,#0x18]!
.text:000000000000FE34                 CBZ             X19, loc_FE44
.text:000000000000FE38                 MOV             X0, X19 ; this
.text:000000000000FE3C                 MOV             X1, X20 ; void *
.text:000000000000FE40                 BL              ._ZNK7android7RefBase9decStrongEPKv ; android::RefBase::decStrong(void const*)
.text:000000000000FE44 loc_FE44                                ; CODE XREF: android::HeifSource::getStatus(void)+AC↑j
.text:000000000000FE44                 LDR             X8, [X20]
.text:000000000000FE48                 CMP             X19, X8
.text:000000000000FE4C                 B.EQ            loc_FE54
.text:000000000000FE50                 BL              ._ZN7android14sp_report_raceEv ; android::sp_report_race(void)
.text:000000000000FE54 loc_FE54                                ; CODE XREF: android::HeifSource::getStatus(void)+C4↑j
.text:000000000000FE54                 LDR             X8, [SP,#0x40+var_40]
.text:000000000000FE58                 STR             X8, [X20]
.text:000000000000FE5C                 LDR             X8, [X24,#0x28]
.text:000000000000FE60                 LDR             X9, [SP,#0x40+var_38]
.text:000000000000FE64                 CMP             X8, X9
.text:000000000000FE68                 B.NE            loc_FE84
.text:000000000000FE6C                 LDP             X29, X30, [SP,#0x40+var_s0]
.text:000000000000FE70                 LDP             X20, X19, [SP,#0x40+var_10]
.text:000000000000FE74                 LDP             X22, X21, [SP,#0x40+var_20]
.text:000000000000FE78                 LDP             X24, X23, [SP,#0x40+var_30]
.text:000000000000FE7C                 ADD             SP, SP, #0x50 ; 'P'
.text:000000000000FE80                 RET
.text:000000000000FE84 ; ---------------------------------------------------------------------------
.text:000000000000FE84 loc_FE84                                ; CODE XREF: android::HeifSource::getStatus(void)+E0↑j
.text:000000000000FE84                 BL              .__stack_chk_fail
.text:000000000000FE84 ; } // starts at FD88
.text:000000000000FE84 ; End of function android::HeifSource::getStatus(void)
.text:000000000000FE88 ; =============== S U B R O U T I N E =======================================
.text:000000000000FE88 ; __int64 __fastcall android::HeifSource::empty(android::HeifSource *__hidden this)
.text:000000000000FE88                 EXPORT _ZN7android10HeifSource5emptyEv
.text:000000000000FE88 _ZN7android10HeifSource5emptyEv         ; DATA XREF: LOAD:0000000000001308↑o
.text:000000000000FE88 ; __unwind {
.text:000000000000FE88                 MOV             W0, #1
.text:000000000000FE8C                 RET
.text:000000000000FE8C ; } // starts at FE88
.text:000000000000FE8C ; End of function android::HeifSource::empty(void)
.text:000000000000FE90 ; =============== S U B R O U T I N E =======================================
.text:000000000000FE90 ; __int64 __fastcall android::HeifSource::dump(android::HeifSource *__hidden this)
.text:000000000000FE90                 EXPORT _ZN7android10HeifSource4dumpEv
.text:000000000000FE90 _ZN7android10HeifSource4dumpEv          ; DATA XREF: LOAD:0000000000001EF0↑o
.text:000000000000FE90 ; __unwind {
.text:000000000000FE90                 MOV             W0, WZR
.text:000000000000FE94                 RET
.text:000000000000FE94 ; } // starts at FE90
.text:000000000000FE94 ; End of function android::HeifSource::dump(void)
.text:000000000000FE98 ; =============== S U B R O U T I N E =======================================
.text:000000000000FE98 ; __int64 __fastcall android::HeifSource::isOnlyOneFrame(android::HeifSource *__hidden this)
.text:000000000000FE98                 EXPORT _ZN7android10HeifSource14isOnlyOneFrameEv
.text:000000000000FE98 _ZN7android10HeifSource14isOnlyOneFrameEv
.text:000000000000FE98                                         ; CODE XREF: android::HeifSource::isOnlyOneFrame(void)+C↓j
.text:000000000000FE98                                         ; DATA XREF: LOAD:0000000000000E40↑o ...
.text:000000000000FE98 ; __unwind {
.text:000000000000FE98                 LDR             W8, [X0,#0x40]
.text:000000000000FE9C                 CMP             W8, #1
.text:000000000000FEA0                 CSET            W0, EQ
.text:000000000000FEA4                 RET
.text:000000000000FEA4 ; } // starts at FE98
.text:000000000000FEA4 ; End of function android::HeifSource::isOnlyOneFrame(void)
.text:000000000000FEA8 ; ---------------------------------------------------------------------------
.text:000000000000FEA8 ; __unwind {
.text:000000000000FEA8                 STR             X21, [SP,#-0x30]!
.text:000000000000FEAC                 STP             X20, X19, [SP,#0x10]
.text:000000000000FEB0                 STP             X29, X30, [SP,#0x20]
.text:000000000000FEB4                 ADD             X29, SP, #0x20 ; ' '
.text:000000000000FEB8                 ADRP            X8, #_ZTVN7android16HeifSourceStatusE_ptr@PAGE
.text:000000000000FEBC                 MOV             X20, X0
.text:000000000000FEC0                 MOV             X19, X0
.text:000000000000FEC4                 LDR             X8, [X8,#_ZTVN7android16HeifSourceStatusE_ptr@PAGEOFF]
.text:000000000000FEC8                 ADD             X8, X8, #0x10
.text:000000000000FECC                 STR             X8, [X0]
.text:000000000000FED0                 LDR             X21, [X20,#0x18]!
.text:000000000000FED4                 CBZ             X21, loc_FEF8
.text:000000000000FED8                 MOV             X0, X21
.text:000000000000FEDC                 MOV             X1, X20
.text:000000000000FEE0                 BL              ._ZNK7android7RefBase9decStrongEPKv ; android::RefBase::decStrong(void const*)
.text:000000000000FEE4                 LDR             X8, [X20]
.text:000000000000FEE8                 CMP             X21, X8
.text:000000000000FEEC                 B.EQ            loc_FEF4
.text:000000000000FEF0                 BL              ._ZN7android14sp_report_raceEv ; android::sp_report_race(void)
.text:000000000000FEF4 loc_FEF4                                ; CODE XREF: .text:000000000000FEEC↑j
.text:000000000000FEF4                 STR             XZR, [X20]
.text:000000000000FEF8 loc_FEF8                                ; CODE XREF: .text:000000000000FED4↑j
.text:000000000000FEF8                 LDR             X21, [X20]
.text:000000000000FEFC                 CBZ             X21, loc_FF0C
.text:000000000000FF00                 MOV             X0, X21
.text:000000000000FF04                 MOV             X1, X20
.text:000000000000FF08                 BL              ._ZNK7android7RefBase9decStrongEPKv ; android::RefBase::decStrong(void const*)
.text:000000000000FF0C loc_FF0C                                ; CODE XREF: .text:000000000000FEFC↑j
.text:000000000000FF0C                 LDR             X8, [X20]
.text:000000000000FF10                 CMP             X21, X8
.text:000000000000FF14                 B.EQ            loc_FF1C
.text:000000000000FF18                 BL              ._ZN7android14sp_report_raceEv ; android::sp_report_race(void)
.text:000000000000FF1C loc_FF1C                                ; CODE XREF: .text:000000000000FF14↑j
.text:000000000000FF1C                 STR             XZR, [X19,#0x18]
.text:000000000000FF20                 MOV             X0, X19
.text:000000000000FF24                 LDP             X29, X30, [SP,#0x20]
.text:000000000000FF28                 LDP             X20, X19, [SP,#0x10]
.text:000000000000FF2C                 LDR             X21, [SP],#0x30
.text:000000000000FF30                 B               ._ZN7android7RefBaseD2Ev ; android::RefBase::~RefBase()
.text:000000000000FF30 ; } // starts at FEA8
.text:000000000000FF30 ; ---------------------------------------------------------------------------
.text:000000000000FF34                 ALIGN 8
.text:000000000000FF38 ; __unwind {
.text:000000000000FF38                 STR             X21, [SP,#-0x30]!
.text:000000000000FF3C                 STP             X20, X19, [SP,#0x10]
.text:000000000000FF40                 STP             X29, X30, [SP,#0x20]
.text:000000000000FF44                 ADD             X29, SP, #0x20 ; ' '
.text:000000000000FF48                 ADRP            X8, #_ZTVN7android16HeifSourceStatusE_ptr@PAGE
.text:000000000000FF4C                 MOV             X20, X0
.text:000000000000FF50                 MOV             X19, X0
.text:000000000000FF54                 LDR             X8, [X8,#_ZTVN7android16HeifSourceStatusE_ptr@PAGEOFF]
.text:000000000000FF58                 ADD             X8, X8, #0x10
.text:000000000000FF5C                 STR             X8, [X0]
.text:000000000000FF60                 LDR             X21, [X20,#0x18]!
.text:000000000000FF64                 CBZ             X21, loc_FF88
.text:000000000000FF68                 MOV             X0, X21
.text:000000000000FF6C                 MOV             X1, X20
.text:000000000000FF70                 BL              ._ZNK7android7RefBase9decStrongEPKv ; android::RefBase::decStrong(void const*)
.text:000000000000FF74                 LDR             X8, [X20]
.text:000000000000FF78                 CMP             X21, X8
.text:000000000000FF7C                 B.EQ            loc_FF84
.text:000000000000FF80                 BL              ._ZN7android14sp_report_raceEv ; android::sp_report_race(void)
.text:000000000000FF84 loc_FF84                                ; CODE XREF: .text:000000000000FF7C↑j
.text:000000000000FF84                 STR             XZR, [X20]
.text:000000000000FF88 loc_FF88                                ; CODE XREF: .text:000000000000FF64↑j
.text:000000000000FF88                 LDR             X21, [X20]
.text:000000000000FF8C                 CBZ             X21, loc_FF9C
.text:000000000000FF90                 MOV             X0, X21
.text:000000000000FF94                 MOV             X1, X20
.text:000000000000FF98                 BL              ._ZNK7android7RefBase9decStrongEPKv ; android::RefBase::decStrong(void const*)
.text:000000000000FF9C loc_FF9C                                ; CODE XREF: .text:000000000000FF8C↑j
.text:000000000000FF9C                 LDR             X8, [X20]
.text:000000000000FFA0                 CMP             X21, X8
.text:000000000000FFA4                 B.EQ            loc_FFAC
.text:000000000000FFA8                 BL              ._ZN7android14sp_report_raceEv ; android::sp_report_race(void)
.text:000000000000FFAC loc_FFAC                                ; CODE XREF: .text:000000000000FFA4↑j
.text:000000000000FFAC                 MOV             X0, X19
.text:000000000000FFB0                 STR             XZR, [X19,#0x18]
.text:000000000000FFB4                 BL              ._ZN7android7RefBaseD2Ev ; android::RefBase::~RefBase()
.text:000000000000FFB8                 MOV             X0, X19
.text:000000000000FFBC                 LDP             X29, X30, [SP,#0x20]
.text:000000000000FFC0                 LDP             X20, X19, [SP,#0x10]
.text:000000000000FFC4                 LDR             X21, [SP],#0x30
.text:000000000000FFC8                 B               ._ZdlPv ; operator delete(void *)
.text:000000000000FFC8 ; } // starts at FF38
.text:000000000000FFC8 ; ---------------------------------------------------------------------------
.text:000000000000FFCC                 ALIGN 0x10
.text:000000000000FFD0 ; =============== S U B R O U T I N E =======================================
.text:000000000000FFD0 ; Attributes: bp-based frame
.text:000000000000FFD0 ; android::HeifMuxerBase::Create(android::HeifMuxerBase::MuxerType)
.text:000000000000FFD0                 EXPORT _ZN7android13HeifMuxerBase6CreateENS0_9MuxerTypeE
.text:000000000000FFD0 _ZN7android13HeifMuxerBase6CreateENS0_9MuxerTypeE
.text:000000000000FFD0                                         ; CODE XREF: android::HeifMuxerBase::Create(android::HeifMuxerBase::MuxerType)+C↓j
.text:000000000000FFD0                                         ; DATA XREF: LOAD:0000000000001668↑o ...
.text:000000000000FFD0 var_10          = -0x10
.text:000000000000FFD0 var_s0          =  0
.text:000000000000FFD0 ; __unwind {
.text:000000000000FFD0                 STR             X19, [SP,#-0x10+var_10]!
.text:000000000000FFD4                 STP             X29, X30, [SP,#0x10+var_s0]
.text:000000000000FFD8                 ADD             X29, SP, #0x10
.text:000000000000FFDC                 CMP             W0, #1
.text:000000000000FFE0                 B.EQ            loc_10000
.text:000000000000FFE4                 MOV             W3, W0
.text:000000000000FFE8                 CBNZ            W0, loc_10014
.text:000000000000FFEC                 MOV             W0, #0x18 ; unsigned __int64
.text:000000000000FFF0                 BL              ._Znwm  ; operator new(ulong)
.text:000000000000FFF4                 MOV             X19, X0
.text:000000000000FFF8                 BL              ._ZN7android16HeifMuxerAndroidC2Ev ; android::HeifMuxerAndroid::HeifMuxerAndroid(void)
.text:000000000000FFFC                 B               loc_10030
.text:0000000000010000 ; ---------------------------------------------------------------------------
.text:0000000000010000 loc_10000                               ; CODE XREF: android::HeifMuxerBase::Create(android::HeifMuxerBase::MuxerType)+10↑j
.text:0000000000010000                 MOV             W0, #0x2F8 ; unsigned __int64
.text:0000000000010004                 BL              ._Znwm  ; operator new(ulong)
.text:0000000000010008                 MOV             X19, X0
.text:000000000001000C                 BL              ._ZN7android12HeifMuxerSecC2Ev ; android::HeifMuxerSec::HeifMuxerSec(void)
.text:0000000000010010                 B               loc_10030
.text:0000000000010014 ; ---------------------------------------------------------------------------
.text:0000000000010014 loc_10014                               ; CODE XREF: android::HeifMuxerBase::Create(android::HeifMuxerBase::MuxerType)+18↑j
.text:0000000000010014                 ADRP            X1, #aHeifmuxerbase@PAGE ; "HeifMuxerBase"
.text:0000000000010018                 ADRP            X2, #aUnsupportMuxer@PAGE ; "Unsupport muxer type(%d)"
.text:000000000001001C                 ADD             X1, X1, #aHeifmuxerbase@PAGEOFF ; "HeifMuxerBase"
.text:0000000000010020                 ADD             X2, X2, #aUnsupportMuxer@PAGEOFF ; "Unsupport muxer type(%d)"
.text:0000000000010024                 MOV             W0, #6
.text:0000000000010028                 BL              .__android_log_print
.text:000000000001002C                 MOV             X19, XZR
.text:0000000000010030 loc_10030                               ; CODE XREF: android::HeifMuxerBase::Create(android::HeifMuxerBase::MuxerType)+2C↑j
.text:0000000000010030                                         ; android::HeifMuxerBase::Create(android::HeifMuxerBase::MuxerType)+40↑j
.text:0000000000010030                 LDP             X29, X30, [SP,#0x10+var_s0]
.text:0000000000010034                 MOV             X0, X19
.text:0000000000010038                 LDR             X19, [SP+0x10+var_10],#0x20
.text:000000000001003C                 RET
.text:000000000001003C ; } // starts at FFD0
.text:000000000001003C ; End of function android::HeifMuxerBase::Create(android::HeifMuxerBase::MuxerType)
.text:0000000000010040 ; =============== S U B R O U T I N E =======================================
.text:0000000000010040 ; Attributes: bp-based frame
.text:0000000000010040 ; __int64 __fastcall android::HeifMuxerBase::HeifMuxerBase(android::HeifMuxerBase *__hidden this)
.text:0000000000010040                 EXPORT _ZN7android13HeifMuxerBaseC2Ev
.text:0000000000010040 _ZN7android13HeifMuxerBaseC2Ev          ; CODE XREF: android::HeifMuxerBase::HeifMuxerBase(void)+C↓j
.text:0000000000010040                                         ; DATA XREF: LOAD:0000000000001818↑o ...
.text:0000000000010040 var_10          = -0x10
.text:0000000000010040 var_s0          =  0
.text:0000000000010040 ; __unwind {
.text:0000000000010040                 STP             X20, X19, [SP,#-0x10+var_10]!
.text:0000000000010044                 STP             X29, X30, [SP,#0x10+var_s0]
.text:0000000000010048                 ADD             X29, SP, #0x10
.text:000000000001004C                 MOV             X19, X0
.text:0000000000010050                 BL              ._ZN7android7RefBaseC2Ev ; android::RefBase::RefBase(void)
.text:0000000000010054                 ADRP            X8, #_ZTVN7android13HeifMuxerBaseE_ptr@PAGE
.text:0000000000010058                 LDR             X8, [X8,#_ZTVN7android13HeifMuxerBaseE_ptr@PAGEOFF]
.text:000000000001005C                 ADD             X8, X8, #0x10
.text:0000000000010060                 STR             X8, [X19],#0x10
.text:0000000000010064                 STR             XZR, [X19]
.text:0000000000010068                 LDR             X20, [X19]
.text:000000000001006C                 CBZ             X20, loc_1007C
.text:0000000000010070                 MOV             X0, X20 ; this
.text:0000000000010074                 MOV             X1, X19 ; void *
.text:0000000000010078                 BL              ._ZNK7android7RefBase9decStrongEPKv ; android::RefBase::decStrong(void const*)
.text:000000000001007C loc_1007C                               ; CODE XREF: android::HeifMuxerBase::HeifMuxerBase(void)+2C↑j
.text:000000000001007C                 LDR             X8, [X19]
.text:0000000000010080                 CMP             X20, X8
.text:0000000000010084                 B.EQ            loc_1008C
.text:0000000000010088                 BL              ._ZN7android14sp_report_raceEv ; android::sp_report_race(void)
.text:000000000001008C loc_1008C                               ; CODE XREF: android::HeifMuxerBase::HeifMuxerBase(void)+44↑j
.text:000000000001008C                 STR             XZR, [X19]
.text:0000000000010090                 LDP             X29, X30, [SP,#0x10+var_s0]
.text:0000000000010094                 LDP             X20, X19, [SP+0x10+var_10],#0x20
.text:0000000000010098                 RET
.text:0000000000010098 ; } // starts at 10040
.text:0000000000010098 ; End of function android::HeifMuxerBase::HeifMuxerBase(void)
.text:0000000000010098 ; ---------------------------------------------------------------------------
.text:000000000001009C                 ALIGN 0x20
.text:00000000000100A0 ; =============== S U B R O U T I N E =======================================
.text:00000000000100A0 ; Attributes: bp-based frame
.text:00000000000100A0 ; void __fastcall android::HeifMuxerBase::~HeifMuxerBase(android::HeifMuxerBase *__hidden this)
.text:00000000000100A0                 EXPORT _ZN7android13HeifMuxerBaseD2Ev
.text:00000000000100A0 _ZN7android13HeifMuxerBaseD2Ev          ; CODE XREF: android::HeifMuxerBase::~HeifMuxerBase()+C↓j
.text:00000000000100A0                                         ; DATA XREF: LOAD:00000000000010B0↑o ...
.text:00000000000100A0 var_10          = -0x10
.text:00000000000100A0 var_s0          =  0
.text:00000000000100A0 ; __unwind {
.text:00000000000100A0                 STR             X19, [SP,#-0x10+var_10]! ; Alternative name is 'android::HeifMuxerBase::~HeifMuxerBase()'
.text:00000000000100A4                 STP             X29, X30, [SP,#0x10+var_s0]
.text:00000000000100A8                 ADD             X29, SP, #0x10
.text:00000000000100AC                 ADRP            X8, #_ZTVN7android13HeifMuxerBaseE_ptr@PAGE
.text:00000000000100B0                 MOV             X1, X0
.text:00000000000100B4                 MOV             X19, X0
.text:00000000000100B8                 LDR             X8, [X8,#_ZTVN7android13HeifMuxerBaseE_ptr@PAGEOFF]
.text:00000000000100BC                 ADD             X8, X8, #0x10
.text:00000000000100C0                 STR             X8, [X0]
.text:00000000000100C4                 LDR             X0, [X1,#0x10]! ; void *
.text:00000000000100C8                 CBZ             X0, loc_100D0
.text:00000000000100CC                 BL              ._ZNK7android7RefBase9decStrongEPKv ; android::RefBase::decStrong(void const*)
.text:00000000000100D0 loc_100D0                               ; CODE XREF: android::HeifMuxerBase::~HeifMuxerBase()+28↑j
.text:00000000000100D0                 LDP             X29, X30, [SP,#0x10+var_s0]
.text:00000000000100D4                 MOV             X0, X19 ; this
.text:00000000000100D8                 LDR             X19, [SP+0x10+var_10],#0x20
.text:00000000000100DC                 B               ._ZN7android7RefBaseD2Ev ; android::RefBase::~RefBase()
.text:00000000000100DC ; } // starts at 100A0
.text:00000000000100DC ; End of function android::HeifMuxerBase::~HeifMuxerBase()
.text:00000000000100E0 ; ---------------------------------------------------------------------------
.text:00000000000100E0 ; android::HeifMuxerBase::~HeifMuxerBase()
.text:00000000000100E0                 EXPORT _ZN7android13HeifMuxerBaseD0Ev
.text:00000000000100E0 _ZN7android13HeifMuxerBaseD0Ev          ; DATA XREF: LOAD:0000000000001680↑o
.text:00000000000100E0                                         ; .data.rel.ro:000000000001D160↓o
.text:00000000000100E0 ; __unwind {
.text:00000000000100E0                 BRK             #1
.text:00000000000100E0 ; } // starts at 100E0
.text:00000000000100E0 ; ---------------------------------------------------------------------------
.text:00000000000100E4                 DCD 0
.text:00000000000100E8 ; =============== S U B R O U T I N E =======================================
.text:00000000000100E8 ; Attributes: bp-based frame
.text:00000000000100E8 ; __int64 __fastcall android::HeifMuxerSec::HeifMuxerSec(android::HeifMuxerSec *__hidden this)
.text:00000000000100E8                 EXPORT _ZN7android12HeifMuxerSecC2Ev
.text:00000000000100E8 _ZN7android12HeifMuxerSecC2Ev           ; CODE XREF: android::HeifMuxerSec::HeifMuxerSec(void)+C↓j
.text:00000000000100E8                                         ; DATA XREF: LOAD:0000000000001590↑o ...
.text:00000000000100E8 var_20          = -0x20
.text:00000000000100E8 var_10          = -0x10
.text:00000000000100E8 var_s0          =  0
.text:00000000000100E8 ; __unwind {
.text:00000000000100E8                 STR             X21, [SP,#-0x10+var_20]!
.text:00000000000100EC                 STP             X20, X19, [SP,#0x20+var_10]
.text:00000000000100F0                 STP             X29, X30, [SP,#0x20+var_s0]
.text:00000000000100F4                 ADD             X29, SP, #0x20
.text:00000000000100F8                 MOV             X19, X0
.text:00000000000100FC                 BL              ._ZN7android13HeifMuxerBaseC2Ev ; android::HeifMuxerBase::HeifMuxerBase(void)
.text:0000000000010100                 ADRP            X8, #_ZTVN7android12HeifMuxerSecE_ptr@PAGE
.text:0000000000010104                 MOVI            V0.2D, #0
.text:0000000000010108                 ADD             X9, X19, #0x1A8
.text:000000000001010C                 ADD             X10, X19, #0x198
.text:0000000000010110                 LDR             X8, [X8,#_ZTVN7android12HeifMuxerSecE_ptr@PAGEOFF]
.text:0000000000010114                 ADD             X21, X19, #0x2E8
.text:0000000000010118                 STR             XZR, [X19,#0x2E8]
.text:000000000001011C                 STR             XZR, [X19,#0x18]
.text:0000000000010120                 STR             XZR, [X19,#0x90]
.text:0000000000010124                 ADD             X8, X8, #0x10
.text:0000000000010128                 STP             Q0, Q0, [X19,#0x70]
.text:000000000001012C                 STP             Q0, Q0, [X19,#0x50]
.text:0000000000010130                 STP             Q0, Q0, [X19,#0x30]
.text:0000000000010134                 STR             X8, [X19]
.text:0000000000010138                 ADD             X8, X19, #0x1B8
.text:000000000001013C                 STR             Q0, [X19,#0x20]
.text:0000000000010140                 STUR            Q0, [X19,#0xB8]
.text:0000000000010144                 STUR            Q0, [X19,#0xA8]
.text:0000000000010148                 STUR            Q0, [X19,#0x98]
.text:000000000001014C                 STR             Q0, [X8]
.text:0000000000010150                 ADD             X8, X19, #0x188
.text:0000000000010154                 STR             Q0, [X9]
.text:0000000000010158                 ADD             X9, X19, #0x178
.text:000000000001015C                 STR             Q0, [X10]
.text:0000000000010160                 ADD             X10, X19, #0x168
.text:0000000000010164                 STR             Q0, [X8]
.text:0000000000010168                 ADD             X8, X19, #0x158
.text:000000000001016C                 STR             Q0, [X9]
.text:0000000000010170                 ADD             X9, X19, #0x148
.text:0000000000010174                 STR             Q0, [X10]
.text:0000000000010178                 ADD             X10, X19, #0x138
.text:000000000001017C                 STR             Q0, [X8]
.text:0000000000010180                 ADD             X8, X19, #0x128
.text:0000000000010184                 STR             Q0, [X9]
.text:0000000000010188                 ADD             X9, X19, #0x118
.text:000000000001018C                 STR             Q0, [X10]
.text:0000000000010190                 ADD             X10, X19, #0x108
.text:0000000000010194                 STR             Q0, [X8]
.text:0000000000010198                 ADD             X8, X19, #0x2B8
.text:000000000001019C                 STR             Q0, [X9]
.text:00000000000101A0                 ADD             X9, X19, #0x2A8
.text:00000000000101A4                 STR             Q0, [X10]
.text:00000000000101A8                 ADD             X10, X19, #0x298
.text:00000000000101AC                 STUR            Q0, [X19,#0xF8]
.text:00000000000101B0                 STUR            Q0, [X19,#0xE8]
.text:00000000000101B4                 STUR            Q0, [X19,#0xD8]
.text:00000000000101B8                 STUR            Q0, [X19,#0xC8]
.text:00000000000101BC                 STR             Q0, [X8]
.text:00000000000101C0                 ADD             X8, X19, #0x288
.text:00000000000101C4                 STR             Q0, [X9]
.text:00000000000101C8                 ADD             X9, X19, #0x278
.text:00000000000101CC                 STR             Q0, [X10]
.text:00000000000101D0                 ADD             X10, X19, #0x268
.text:00000000000101D4                 STR             Q0, [X8]
.text:00000000000101D8                 ADD             X8, X19, #0x258
.text:00000000000101DC                 STR             Q0, [X9]
.text:00000000000101E0                 ADD             X9, X19, #0x248
.text:00000000000101E4                 STR             Q0, [X10]
.text:00000000000101E8                 ADD             X10, X19, #0x238
.text:00000000000101EC                 STR             Q0, [X8]
.text:00000000000101F0                 ADD             X8, X19, #0x228
.text:00000000000101F4                 STR             Q0, [X9]
.text:00000000000101F8                 ADD             X9, X19, #0x218
.text:00000000000101FC                 STR             Q0, [X10]
.text:0000000000010200                 ADD             X10, X19, #0x208
.text:0000000000010204                 STR             Q0, [X8]
.text:0000000000010208                 ADD             X8, X19, #0x1F8
.text:000000000001020C                 STR             Q0, [X9]
.text:0000000000010210                 ADD             X9, X19, #0x1E8
.text:0000000000010214                 STR             Q0, [X10]
.text:0000000000010218                 ADD             X10, X19, #0x1D8
.text:000000000001021C                 STR             Q0, [X8]
.text:0000000000010220                 ADD             X8, X19, #0x1C8
.text:0000000000010224                 STR             Q0, [X9]
.text:0000000000010228                 ADD             X9, X19, #0x2D8
.text:000000000001022C                 STR             Q0, [X10]
.text:0000000000010230                 ADD             X10, X19, #0x2C8
.text:0000000000010234                 STR             Q0, [X8]
.text:0000000000010238                 STR             Q0, [X9]
.text:000000000001023C                 STR             Q0, [X10]
.text:0000000000010240                 LDR             X20, [X19,#0x2E8]
.text:0000000000010244                 CBZ             X20, loc_10254
.text:0000000000010248                 MOV             X0, X20 ; this
.text:000000000001024C                 MOV             X1, X21 ; void *
.text:0000000000010250                 BL              ._ZNK7android7RefBase9decStrongEPKv ; android::RefBase::decStrong(void const*)
.text:0000000000010254 loc_10254                               ; CODE XREF: android::HeifMuxerSec::HeifMuxerSec(void)+15C↑j
.text:0000000000010254                 LDR             X8, [X21]
.text:0000000000010258                 CMP             X20, X8
.text:000000000001025C                 B.EQ            loc_10264
.text:0000000000010260                 BL              ._ZN7android14sp_report_raceEv ; android::sp_report_race(void)
.text:0000000000010264 loc_10264                               ; CODE XREF: android::HeifMuxerSec::HeifMuxerSec(void)+174↑j
.text:0000000000010264                 ADRP            X8, #qword_9D10@PAGE
.text:0000000000010268                 LDR             X20, [X19,#0x10]!
.text:000000000001026C                 LDR             D0, [X8,#qword_9D10@PAGEOFF]
.text:0000000000010270                 STR             XZR, [X19,#0x2D8]
.text:0000000000010274                 STR             D0, [X19,#0x2E0]
.text:0000000000010278                 CBZ             X20, loc_10288
.text:000000000001027C                 MOV             X0, X20 ; this
.text:0000000000010280                 MOV             X1, X19 ; void *
.text:0000000000010284                 BL              ._ZNK7android7RefBase9decStrongEPKv ; android::RefBase::decStrong(void const*)
.text:0000000000010288 loc_10288                               ; CODE XREF: android::HeifMuxerSec::HeifMuxerSec(void)+190↑j
.text:0000000000010288                 LDR             X8, [X19]
.text:000000000001028C                 CMP             X20, X8
.text:0000000000010290                 B.EQ            loc_10298
.text:0000000000010294                 BL              ._ZN7android14sp_report_raceEv ; android::sp_report_race(void)
.text:0000000000010298 loc_10298                               ; CODE XREF: android::HeifMuxerSec::HeifMuxerSec(void)+1A8↑j
.text:0000000000010298                 STR             XZR, [X19]
.text:000000000001029C                 LDP             X29, X30, [SP,#0x20+var_s0]
.text:00000000000102A0                 LDP             X20, X19, [SP,#0x20+var_10]
.text:00000000000102A4                 LDR             X21, [SP+0x20+var_20],#0x30
.text:00000000000102A8                 RET
.text:00000000000102A8 ; } // starts at 100E8
.text:00000000000102A8 ; End of function android::HeifMuxerSec::HeifMuxerSec(void)
.text:00000000000102A8 ; ---------------------------------------------------------------------------
.text:00000000000102AC                 ALIGN 0x10
.text:00000000000102B0 ; =============== S U B R O U T I N E =======================================
.text:00000000000102B0 ; Attributes: bp-based frame
.text:00000000000102B0 ; void __fastcall android::HeifMuxerSec::~HeifMuxerSec(android::HeifMuxerSec *__hidden this)
.text:00000000000102B0                 EXPORT _ZN7android12HeifMuxerSecD2Ev
.text:00000000000102B0 _ZN7android12HeifMuxerSecD2Ev           ; CODE XREF: android::HeifMuxerSec::~HeifMuxerSec()+C↓j
.text:00000000000102B0                                         ; DATA XREF: LOAD:0000000000000D98↑o ...
.text:00000000000102B0 var_20          = -0x20
.text:00000000000102B0 var_10          = -0x10
.text:00000000000102B0 var_s0          =  0
.text:00000000000102B0 ; __unwind {
.text:00000000000102B0                 STP             X22, X21, [SP,#-0x10+var_20]!
.text:00000000000102B4                 STP             X20, X19, [SP,#0x20+var_10]
.text:00000000000102B8                 STP             X29, X30, [SP,#0x20+var_s0]
.text:00000000000102BC                 ADD             X29, SP, #0x20
.text:00000000000102C0                 ADRP            X8, #_ZTVN7android12HeifMuxerSecE_ptr@PAGE
.text:00000000000102C4                 MOV             X19, X0
.text:00000000000102C8                 ADD             X20, X0, #0x2E8
.text:00000000000102CC                 LDR             X8, [X8,#_ZTVN7android12HeifMuxerSecE_ptr@PAGEOFF]
.text:00000000000102D0                 ADD             X8, X8, #0x10
.text:00000000000102D4                 STR             X8, [X0]
.text:00000000000102D8                 LDR             X21, [X0,#0x2E8]
.text:00000000000102DC                 CBZ             X21, loc_10300
.text:00000000000102E0                 MOV             X0, X21 ; this
.text:00000000000102E4                 MOV             X1, X20 ; void *
.text:00000000000102E8                 BL              ._ZNK7android7RefBase9decStrongEPKv ; android::RefBase::decStrong(void const*)
.text:00000000000102EC                 LDR             X8, [X20]
.text:00000000000102F0                 CMP             X21, X8
.text:00000000000102F4                 B.EQ            loc_102FC
.text:00000000000102F8                 BL              ._ZN7android14sp_report_raceEv ; android::sp_report_race(void)
.text:00000000000102FC loc_102FC                               ; CODE XREF: android::HeifMuxerSec::~HeifMuxerSec()+44↑j
.text:00000000000102FC                 STR             XZR, [X20]
.text:0000000000010300 loc_10300                               ; CODE XREF: android::HeifMuxerSec::~HeifMuxerSec()+2C↑j
.text:0000000000010300                 LDR             X21, [X20]
.text:0000000000010304                 CBZ             X21, loc_10314
.text:0000000000010308                 MOV             X0, X21 ; this
.text:000000000001030C                 MOV             X1, X20 ; void *
.text:0000000000010310                 BL              ._ZNK7android7RefBase9decStrongEPKv ; android::RefBase::decStrong(void const*)
.text:0000000000010314 loc_10314                               ; CODE XREF: android::HeifMuxerSec::~HeifMuxerSec()+54↑j
.text:0000000000010314                 LDR             X8, [X20]
.text:0000000000010318                 CMP             X21, X8
.text:000000000001031C                 B.EQ            loc_10324
.text:0000000000010320                 BL              ._ZN7android14sp_report_raceEv ; android::sp_report_race(void)
.text:0000000000010324 loc_10324                               ; CODE XREF: android::HeifMuxerSec::~HeifMuxerSec()+6C↑j
.text:0000000000010324                 MOV             X21, X19
.text:0000000000010328                 LDR             X22, [X21,#0x10]!
.text:000000000001032C                 STR             XZR, [X21,#0x2D8]
.text:0000000000010330                 CBZ             X22, loc_10340
.text:0000000000010334                 MOV             X0, X22 ; this
.text:0000000000010338                 MOV             X1, X21 ; void *
.text:000000000001033C                 BL              ._ZNK7android7RefBase9decStrongEPKv ; android::RefBase::decStrong(void const*)
.text:0000000000010340 loc_10340                               ; CODE XREF: android::HeifMuxerSec::~HeifMuxerSec()+80↑j
.text:0000000000010340                 LDR             X8, [X21]
.text:0000000000010344                 CMP             X22, X8
.text:0000000000010348                 B.EQ            loc_10350
.text:000000000001034C                 BL              ._ZN7android14sp_report_raceEv ; android::sp_report_race(void)
.text:0000000000010350 loc_10350                               ; CODE XREF: android::HeifMuxerSec::~HeifMuxerSec()+98↑j
.text:0000000000010350                 LDR             X0, [X20] ; this
.text:0000000000010354                 STR             XZR, [X21]
.text:0000000000010358                 CBZ             X0, loc_10364
.text:000000000001035C                 MOV             X1, X20 ; void *
.text:0000000000010360                 BL              ._ZNK7android7RefBase9decStrongEPKv ; android::RefBase::decStrong(void const*)
.text:0000000000010364 loc_10364                               ; CODE XREF: android::HeifMuxerSec::~HeifMuxerSec()+A8↑j
.text:0000000000010364                 MOV             X0, X19 ; this
.text:0000000000010368                 LDP             X29, X30, [SP,#0x20+var_s0]
.text:000000000001036C                 LDP             X20, X19, [SP,#0x20+var_10]
.text:0000000000010370                 LDP             X22, X21, [SP+0x20+var_20],#0x30
.text:0000000000010374                 B               ._ZN7android13HeifMuxerBaseD2Ev ; android::HeifMuxerBase::~HeifMuxerBase()
.text:0000000000010374 ; } // starts at 102B0
.text:0000000000010374 ; End of function android::HeifMuxerSec::~HeifMuxerSec()
.text:0000000000010378 ; =============== S U B R O U T I N E =======================================
.text:0000000000010378 ; Attributes: bp-based frame
.text:0000000000010378 ; void __fastcall android::HeifMuxerSec::~HeifMuxerSec(android::HeifMuxerSec *__hidden this)
.text:0000000000010378                 EXPORT _ZN7android12HeifMuxerSecD0Ev
.text:0000000000010378 _ZN7android12HeifMuxerSecD0Ev           ; DATA XREF: LOAD:0000000000001B00↑o
.text:0000000000010378                                         ; .data.rel.ro:000000000001D1C8↓o
.text:0000000000010378 var_10          = -0x10
.text:0000000000010378 var_s0          =  0
.text:0000000000010378 ; __unwind {
.text:0000000000010378                 STR             X19, [SP,#-0x10+var_10]!
.text:000000000001037C                 STP             X29, X30, [SP,#0x10+var_s0]
.text:0000000000010380                 ADD             X29, SP, #0x10
.text:0000000000010384                 MOV             X19, X0
.text:0000000000010388                 BL              ._ZN7android12HeifMuxerSecD2Ev ; android::HeifMuxerSec::~HeifMuxerSec()
.text:000000000001038C                 LDP             X29, X30, [SP,#0x10+var_s0]
.text:0000000000010390                 MOV             X0, X19 ; void *
.text:0000000000010394                 LDR             X19, [SP+0x10+var_10],#0x20
.text:0000000000010398                 B               ._ZdlPv ; operator delete(void *)
.text:0000000000010398 ; } // starts at 10378
.text:0000000000010398 ; End of function android::HeifMuxerSec::~HeifMuxerSec()
.text:0000000000010398 ; ---------------------------------------------------------------------------
.text:000000000001039C                 ALIGN 0x20
.text:00000000000103A0 ; =============== S U B R O U T I N E =======================================
.text:00000000000103A0 ; Attributes: bp-based frame
.text:00000000000103A0 ; android::HeifMuxerSec::start(android::sp<android::AMessage> const&)
.text:00000000000103A0                 EXPORT _ZN7android12HeifMuxerSec5startERKNS_2spINS_8AMessageEEE
.text:00000000000103A0 _ZN7android12HeifMuxerSec5startERKNS_2spINS_8AMessageEEE
.text:00000000000103A0                                         ; DATA XREF: LOAD:0000000000001A10↑o
.text:00000000000103A0                                         ; .data.rel.ro:000000000001D1F0↓o
.text:00000000000103A0 var_2C          = -0x2C
.text:00000000000103A0 var_28          = -0x28
.text:00000000000103A0 var_20          = -0x20
.text:00000000000103A0 var_10          = -0x10
.text:00000000000103A0 var_s0          =  0
.text:00000000000103A0 ; __unwind {
.text:00000000000103A0                 SUB             SP, SP, #0x40
.text:00000000000103A4                 STP             X22, X21, [SP,#0x30+var_20]
.text:00000000000103A8                 STP             X20, X19, [SP,#0x30+var_10]
.text:00000000000103AC                 STP             X29, X30, [SP,#0x30+var_s0]
.text:00000000000103B0                 ADD             X29, SP, #0x30
.text:00000000000103B4                 MRS             X22, #3, c13, c0, #2
.text:00000000000103B8                 MOV             X10, #1
.text:00000000000103BC                 LDR             X8, [X22,#0x28]
.text:00000000000103C0                 ADRP            X9, #qword_9D08@PAGE
.text:00000000000103C4                 MOVK            X10, #0x6568,LSL#32
.text:00000000000103C8                 MOVK            X10, #0x6369,LSL#48
.text:00000000000103CC                 MOV             X21, X0
.text:00000000000103D0                 LDR             D0, [X9,#qword_9D08@PAGEOFF]
.text:00000000000103D4                 MOV             X20, X1
.text:00000000000103D8                 STR             X8, [SP,#0x30+var_28]
.text:00000000000103DC                 MOV             X19, X0
.text:00000000000103E0                 STR             X10, [X21,#0x98]!
.text:00000000000103E4                 MOV             W8, #2
.text:00000000000103E8                 STR             WZR, [SP,#0x30+var_2C]
.text:00000000000103EC                 ADD             X1, SP, #0x30+var_2C
.text:00000000000103F0                 STR             WZR, [X21,#8]
.text:00000000000103F4                 MOV             X0, X21
.text:00000000000103F8                 STUR            D0, [X21,#0xC]
.text:00000000000103FC                 STR             W8, [X21,#0x2C]
.text:0000000000010400                 BL              .sheifm_create
.text:0000000000010404                 STUR            X0, [X21,#-0x80]
.text:0000000000010408                 CBZ             X0, loc_10450
.text:000000000001040C                 LDR             X21, [X19,#0x10]!
.text:0000000000010410                 LDR             X20, [X20]
.text:0000000000010414                 CBZ             X20, loc_10424
.text:0000000000010418                 MOV             X0, X20 ; this
.text:000000000001041C                 MOV             X1, X19 ; void *
.text:0000000000010420                 BL              ._ZNK7android7RefBase9incStrongEPKv ; android::RefBase::incStrong(void const*)
.text:0000000000010424 loc_10424                               ; CODE XREF: android::HeifMuxerSec::start(android::sp<android::AMessage> const&)+74↑j
.text:0000000000010424                 CBZ             X21, loc_10434
.text:0000000000010428                 MOV             X0, X21 ; this
.text:000000000001042C                 MOV             X1, X19 ; void *
.text:0000000000010430                 BL              ._ZNK7android7RefBase9decStrongEPKv ; android::RefBase::decStrong(void const*)
.text:0000000000010434 loc_10434                               ; CODE XREF: android::HeifMuxerSec::start(android::sp<android::AMessage> const&):loc_10424↑j
.text:0000000000010434                 LDR             X8, [X19]
.text:0000000000010438                 CMP             X21, X8
.text:000000000001043C                 B.EQ            loc_10444
.text:0000000000010440                 BL              ._ZN7android14sp_report_raceEv ; android::sp_report_race(void)
.text:0000000000010444 loc_10444                               ; CODE XREF: android::HeifMuxerSec::start(android::sp<android::AMessage> const&)+9C↑j
.text:0000000000010444                 MOV             W0, WZR
.text:0000000000010448                 STR             X20, [X19]
.text:000000000001044C                 B               loc_10470
.text:0000000000010450 ; ---------------------------------------------------------------------------
.text:0000000000010450 loc_10450                               ; CODE XREF: android::HeifMuxerSec::start(android::sp<android::AMessage> const&)+68↑j
.text:0000000000010450                 LDR             W3, [SP,#0x30+var_2C]
.text:0000000000010454                 ADRP            X1, #aHeifmuxersec@PAGE ; "HeifMuxerSec"
.text:0000000000010458                 ADRP            X2, #aCanNotCreateIn@PAGE ; "Can not create instance(%d)"
.text:000000000001045C                 ADD             X1, X1, #aHeifmuxersec@PAGEOFF ; "HeifMuxerSec"
.text:0000000000010460                 ADD             X2, X2, #aCanNotCreateIn@PAGEOFF ; "Can not create instance(%d)"
.text:0000000000010464                 MOV             W0, #6
.text:0000000000010468                 BL              .__android_log_print
.text:000000000001046C                 MOV             W0, #0xFFFFFFEA
.text:0000000000010470 loc_10470                               ; CODE XREF: android::HeifMuxerSec::start(android::sp<android::AMessage> const&)+AC↑j
.text:0000000000010470                 LDR             X8, [X22,#0x28]
.text:0000000000010474                 LDR             X9, [SP,#0x30+var_28]
.text:0000000000010478                 CMP             X8, X9
.text:000000000001047C                 B.NE            loc_10494
.text:0000000000010480                 LDP             X29, X30, [SP,#0x30+var_s0]
.text:0000000000010484                 LDP             X20, X19, [SP,#0x30+var_10]
.text:0000000000010488                 LDP             X22, X21, [SP,#0x30+var_20]
.text:000000000001048C                 ADD             SP, SP, #0x40 ; '@'
.text:0000000000010490                 RET
.text:0000000000010494 ; ---------------------------------------------------------------------------
.text:0000000000010494 loc_10494                               ; CODE XREF: android::HeifMuxerSec::start(android::sp<android::AMessage> const&)+DC↑j
.text:0000000000010494                 BL              .__stack_chk_fail
.text:0000000000010494 ; } // starts at 103A0
.text:0000000000010494 ; End of function android::HeifMuxerSec::start(android::sp<android::AMessage> const&)
.text:0000000000010498 ; =============== S U B R O U T I N E =======================================
.text:0000000000010498 ; android::HeifMuxerSec::setExtraInfo(android::sp<android::AMessage> const&)
.text:0000000000010498                 EXPORT _ZN7android12HeifMuxerSec12setExtraInfoERKNS_2spINS_8AMessageEEE
.text:0000000000010498 _ZN7android12HeifMuxerSec12setExtraInfoERKNS_2spINS_8AMessageEEE
.text:0000000000010498                                         ; DATA XREF: LOAD:0000000000001F20↑o
.text:0000000000010498                                         ; .data.rel.ro:000000000001D1F8↓o
.text:0000000000010498 ; __unwind {
.text:0000000000010498                 MOV             W0, WZR
.text:000000000001049C                 RET
.text:000000000001049C ; } // starts at 10498
.text:000000000001049C ; End of function android::HeifMuxerSec::setExtraInfo(android::sp<android::AMessage> const&)
.text:00000000000104A0 ; =============== S U B R O U T I N E =======================================
.text:00000000000104A0 ; Attributes: bp-based frame
.text:00000000000104A0 ; __int64 __fastcall android::HeifMuxerSec::stop(android::HeifMuxerSec *__hidden this)
.text:00000000000104A0                 EXPORT _ZN7android12HeifMuxerSec4stopEv
.text:00000000000104A0 _ZN7android12HeifMuxerSec4stopEv        ; DATA XREF: LOAD:0000000000001BA8↑o
.text:00000000000104A0                                         ; .data.rel.ro:000000000001D200↓o
.text:00000000000104A0 buf             = -0x38
.text:00000000000104A0 fd              = -0x2C
.text:00000000000104A0 var_28          = -0x28
.text:00000000000104A0 var_20          = -0x20
.text:00000000000104A0 var_10          = -0x10
.text:00000000000104A0 var_s0          =  0
.text:00000000000104A0 ; __unwind {
.text:00000000000104A0                 SUB             SP, SP, #0x50
.text:00000000000104A4                 STP             X22, X21, [SP,#0x40+var_20]
.text:00000000000104A8                 STP             X20, X19, [SP,#0x40+var_10]
.text:00000000000104AC                 STP             X29, X30, [SP,#0x40+var_s0]
.text:00000000000104B0                 ADD             X29, SP, #0x40
.text:00000000000104B4                 MRS             X22, #3, c13, c0, #2
.text:00000000000104B8                 MOV             X19, X0
.text:00000000000104BC                 LDR             X8, [X22,#0x28]
.text:00000000000104C0                 STR             X8, [SP,#0x40+var_28]
.text:00000000000104C4                 LDR             X0, [X0,#0x18]
.text:00000000000104C8                 CBZ             X0, loc_10540
.text:00000000000104CC                 BL              .sheifm_stop_muxing
.text:00000000000104D0                 LDR             X0, [X19,#0x18]
.text:00000000000104D4                 BL              .sheifm_get_outputbuffer_size
.text:00000000000104D8                 LDR             X8, [X19,#0x10]
.text:00000000000104DC                 ADRP            X1, #aOutputBuffer@PAGE ; "output-buffer"
.text:00000000000104E0                 MOV             W20, W0
.text:00000000000104E4                 ADD             X1, X1, #aOutputBuffer@PAGEOFF ; "output-buffer"
.text:00000000000104E8                 ADD             X2, SP, #0x40+buf ; void **
.text:00000000000104EC                 MOV             X0, X8  ; this
.text:00000000000104F0                 BL              ._ZNK7android8AMessage11findPointerEPKcPPv ; android::AMessage::findPointer(char const*,void **)
.text:00000000000104F4                 TBZ             W0, #0, loc_10548
.text:00000000000104F8                 LDR             X0, [X19,#0x10] ; this
.text:00000000000104FC                 ADRP            X1, #aOutputBufferCa@PAGE ; "output-buffer-capacity"
.text:0000000000010500                 ADD             X1, X1, #aOutputBufferCa@PAGEOFF ; "output-buffer-capacity"
.text:0000000000010504                 ADD             X2, SP, #0x40+fd ; int *
.text:0000000000010508                 BL              ._ZNK7android8AMessage9findInt32EPKcPi ; android::AMessage::findInt32(char const*,int *)
.text:000000000001050C                 TBZ             W0, #0, loc_105B8
.text:0000000000010510                 LDR             W4, [SP,#0x40+fd]
.text:0000000000010514                 CMP             W4, W20
.text:0000000000010518                 B.GE            loc_105E0
.text:000000000001051C                 ADRP            X1, #aHeifmuxersec@PAGE ; "HeifMuxerSec"
.text:0000000000010520                 ADRP            X2, #aSizeDOfEncoded@PAGE ; "size(%d) of encoded bitstream is larger"...
.text:0000000000010524                 ADD             X1, X1, #aHeifmuxersec@PAGEOFF ; "HeifMuxerSec"
.text:0000000000010528                 ADD             X2, X2, #aSizeDOfEncoded@PAGEOFF ; "size(%d) of encoded bitstream is larger"...
.text:000000000001052C                 MOV             W0, #5
.text:0000000000010530                 MOV             W3, W20
.text:0000000000010534                 BL              .__android_log_print
.text:0000000000010538                 MOV             W20, #0xFFFFFC1B
.text:000000000001053C                 B               loc_10640
.text:0000000000010540 ; ---------------------------------------------------------------------------
.text:0000000000010540 loc_10540                               ; CODE XREF: android::HeifMuxerSec::stop(void)+28↑j
.text:0000000000010540                 MOV             W20, #0xFFFFFFEA
.text:0000000000010544                 B               loc_1064C
.text:0000000000010548 ; ---------------------------------------------------------------------------
.text:0000000000010548 loc_10548                               ; CODE XREF: android::HeifMuxerSec::stop(void)+54↑j
.text:0000000000010548                 LDR             X0, [X19,#0x10] ; this
.text:000000000001054C                 ADRP            X1, #aOutputFd@PAGE ; "output-fd"
.text:0000000000010550                 ADD             X1, X1, #aOutputFd@PAGEOFF ; "output-fd"
.text:0000000000010554                 ADD             X2, SP, #0x40+fd ; int *
.text:0000000000010558                 BL              ._ZNK7android8AMessage9findInt32EPKcPi ; android::AMessage::findInt32(char const*,int *)
.text:000000000001055C                 TBZ             W0, #0, loc_105CC
.text:0000000000010560                 CMP             W20, #1
.text:0000000000010564                 B.LT            loc_10624
.text:0000000000010568                 SXTW            X21, W20
.text:000000000001056C                 MOV             X0, X21 ; size
.text:0000000000010570                 BL              .malloc
.text:0000000000010574                 MOV             X1, X0
.text:0000000000010578                 LDR             X0, [X19,#0x18]
.text:000000000001057C                 STR             X1, [SP,#0x40+buf]
.text:0000000000010580                 BL              .sheifm_dump_image_to_outputbuffer
.text:0000000000010584                 LDR             W0, [SP,#0x40+fd] ; fd
.text:0000000000010588                 MOV             X2, X21 ; n
.text:000000000001058C                 LDR             X1, [SP,#0x40+buf] ; buf
.text:0000000000010590                 BL              .write
.text:0000000000010594                 LDR             X0, [SP,#0x40+buf] ; ptr
.text:0000000000010598                 BL              .free
.text:000000000001059C                 LDR             X0, [X19,#0x10] ; this
.text:00000000000105A0                 ADRP            X1, #aOutputBufferSi@PAGE ; "output-buffer-size"
.text:00000000000105A4                 ADD             X1, X1, #aOutputBufferSi@PAGEOFF ; "output-buffer-size"
.text:00000000000105A8                 MOV             W2, W20 ; int
.text:00000000000105AC                 BL              ._ZN7android8AMessage8setInt32EPKci ; android::AMessage::setInt32(char const*,int)
.text:00000000000105B0                 MOV             W20, WZR
.text:00000000000105B4                 B               loc_10640
.text:00000000000105B8 ; ---------------------------------------------------------------------------
.text:00000000000105B8 loc_105B8                               ; CODE XREF: android::HeifMuxerSec::stop(void)+6C↑j
.text:00000000000105B8                 ADRP            X1, #aHeifmuxersec@PAGE ; "HeifMuxerSec"
.text:00000000000105BC                 ADRP            X2, #aDoNotExistCapa@PAGE ; "do not exist capacity"
.text:00000000000105C0                 ADD             X1, X1, #aHeifmuxersec@PAGEOFF ; "HeifMuxerSec"
.text:00000000000105C4                 ADD             X2, X2, #aDoNotExistCapa@PAGEOFF ; "do not exist capacity"
.text:00000000000105C8                 B               loc_10634
.text:00000000000105CC ; ---------------------------------------------------------------------------
.text:00000000000105CC loc_105CC                               ; CODE XREF: android::HeifMuxerSec::stop(void)+BC↑j
.text:00000000000105CC                 ADRP            X1, #aHeifmuxersec@PAGE ; "HeifMuxerSec"
.text:00000000000105D0                 ADRP            X2, #aCanNotFindOutp@PAGE ; "Can not find output buffer pointer/fd"
.text:00000000000105D4                 ADD             X1, X1, #aHeifmuxersec@PAGEOFF ; "HeifMuxerSec"
.text:00000000000105D8                 ADD             X2, X2, #aCanNotFindOutp@PAGEOFF ; "Can not find output buffer pointer/fd"
.text:00000000000105DC                 B               loc_10634
.text:00000000000105E0 ; ---------------------------------------------------------------------------
.text:00000000000105E0 loc_105E0                               ; CODE XREF: android::HeifMuxerSec::stop(void)+78↑j
.text:00000000000105E0                 LDR             X0, [X19,#0x18]
.text:00000000000105E4                 LDR             X1, [SP,#0x40+buf]
.text:00000000000105E8                 BL              .sheifm_dump_image_to_outputbuffer
.text:00000000000105EC                 LDR             X0, [X19,#0x10] ; this
.text:00000000000105F0                 ADRP            X1, #aOutputBufferSi@PAGE ; "output-buffer-size"
.text:00000000000105F4                 ADD             X1, X1, #aOutputBufferSi@PAGEOFF ; "output-buffer-size"
.text:00000000000105F8                 MOV             W2, W20 ; int
.text:00000000000105FC                 BL              ._ZN7android8AMessage8setInt32EPKci ; android::AMessage::setInt32(char const*,int)
.text:0000000000010600                 ADRP            X1, #aHeifmuxersec@PAGE ; "HeifMuxerSec"
.text:0000000000010604                 ADRP            X2, #aSizeDOfEncoded_0@PAGE ; "size(%d) of encoded bitstream"
.text:0000000000010608                 ADD             X1, X1, #aHeifmuxersec@PAGEOFF ; "HeifMuxerSec"
.text:000000000001060C                 ADD             X2, X2, #aSizeDOfEncoded_0@PAGEOFF ; "size(%d) of encoded bitstream"
.text:0000000000010610                 MOV             W0, #4
.text:0000000000010614                 MOV             W3, W20
.text:0000000000010618                 BL              .__android_log_print
.text:000000000001061C                 MOV             W20, WZR
.text:0000000000010620                 B               loc_10640
.text:0000000000010624 ; ---------------------------------------------------------------------------
.text:0000000000010624 loc_10624                               ; CODE XREF: android::HeifMuxerSec::stop(void)+C4↑j
.text:0000000000010624                 ADRP            X1, #aHeifmuxersec@PAGE ; "HeifMuxerSec"
.text:0000000000010628                 ADRP            X2, #aCanNotSaveBuff@PAGE ; "Can not save buffer to fd"
.text:000000000001062C                 ADD             X1, X1, #aHeifmuxersec@PAGEOFF ; "HeifMuxerSec"
.text:0000000000010630                 ADD             X2, X2, #aCanNotSaveBuff@PAGEOFF ; "Can not save buffer to fd"
.text:0000000000010634 loc_10634                               ; CODE XREF: android::HeifMuxerSec::stop(void)+128↑j
.text:0000000000010634                                         ; android::HeifMuxerSec::stop(void)+13C↑j
.text:0000000000010634                 MOV             W0, #6
.text:0000000000010638                 BL              .__android_log_print
.text:000000000001063C                 MOV             W20, #0xFFFFFFEA
.text:0000000000010640 loc_10640                               ; CODE XREF: android::HeifMuxerSec::stop(void)+9C↑j
.text:0000000000010640                                         ; android::HeifMuxerSec::stop(void)+114↑j ...
.text:0000000000010640                 LDR             X0, [X19,#0x18]
.text:0000000000010644                 BL              .sheifm_delete
.text:0000000000010648                 STR             XZR, [X19,#0x18]
.text:000000000001064C loc_1064C                               ; CODE XREF: android::HeifMuxerSec::stop(void)+A4↑j
.text:000000000001064C                 LDR             X8, [X22,#0x28]
.text:0000000000010650                 LDR             X9, [SP,#0x40+var_28]
.text:0000000000010654                 CMP             X8, X9
.text:0000000000010658                 B.NE            loc_10674
.text:000000000001065C                 MOV             W0, W20
.text:0000000000010660                 LDP             X29, X30, [SP,#0x40+var_s0]
.text:0000000000010664                 LDP             X20, X19, [SP,#0x40+var_10]
.text:0000000000010668                 LDP             X22, X21, [SP,#0x40+var_20]
.text:000000000001066C                 ADD             SP, SP, #0x50 ; 'P'
.text:0000000000010670                 RET
.text:0000000000010674 ; ---------------------------------------------------------------------------
.text:0000000000010674 loc_10674                               ; CODE XREF: android::HeifMuxerSec::stop(void)+1B8↑j
.text:0000000000010674                 BL              .__stack_chk_fail
.text:0000000000010674 ; } // starts at 104A0
.text:0000000000010674 ; End of function android::HeifMuxerSec::stop(void)
.text:0000000000010678 ; =============== S U B R O U T I N E =======================================
.text:0000000000010678 ; Attributes: bp-based frame
.text:0000000000010678 ; android::HeifMuxerSec::writeSampleData(android::sp<android::ABuffer> const&, long, unsigned int)
.text:0000000000010678                 EXPORT _ZN7android12HeifMuxerSec15writeSampleDataERKNS_2spINS_7ABufferEEElj
.text:0000000000010678 _ZN7android12HeifMuxerSec15writeSampleDataERKNS_2spINS_7ABufferEEElj
.text:0000000000010678                                         ; DATA XREF: LOAD:0000000000000F18↑o
.text:0000000000010678                                         ; .data.rel.ro:000000000001D208↓o
.text:0000000000010678 var_30          = -0x30
.text:0000000000010678 var_28          = -0x28
.text:0000000000010678 var_20          = -0x20
.text:0000000000010678 var_10          = -0x10
.text:0000000000010678 var_s0          =  0
.text:0000000000010678 ; __unwind {
.text:0000000000010678                 SUB             SP, SP, #0x40
.text:000000000001067C                 STP             X22, X21, [SP,#0x30+var_20]
.text:0000000000010680                 STP             X20, X19, [SP,#0x30+var_10]
.text:0000000000010684                 STP             X29, X30, [SP,#0x30+var_s0]
.text:0000000000010688                 ADD             X29, SP, #0x30
.text:000000000001068C                 MRS             X22, #3, c13, c0, #2
.text:0000000000010690                 MOV             X19, X0
.text:0000000000010694                 LDR             X8, [X22,#0x28]
.text:0000000000010698                 STR             X8, [SP,#0x30+var_28]
.text:000000000001069C                 TBNZ            W3, #1, loc_106CC
.text:00000000000106A0                 MOV             W4, W3
.text:00000000000106A4                 TBNZ            W3, #0, loc_1074C
.text:00000000000106A8                 ADRP            X1, #aHeifmuxersec@PAGE ; "HeifMuxerSec"
.text:00000000000106AC                 ADRP            X2, #aSUnexpectedFla@PAGE ; "%s: unexpected flags(%d)"
.text:00000000000106B0                 ADRP            X3, #aWritesampledat@PAGE ; "writeSampleData"
.text:00000000000106B4                 ADD             X1, X1, #aHeifmuxersec@PAGEOFF ; "HeifMuxerSec"
.text:00000000000106B8                 ADD             X2, X2, #aSUnexpectedFla@PAGEOFF ; "%s: unexpected flags(%d)"
.text:00000000000106BC                 ADD             X3, X3, #aWritesampledat@PAGEOFF ; "writeSampleData"
.text:00000000000106C0                 MOV             W0, #6
.text:00000000000106C4                 BL              .__android_log_print
.text:00000000000106C8                 B               loc_10778
.text:00000000000106CC ; ---------------------------------------------------------------------------
.text:00000000000106CC loc_106CC                               ; CODE XREF: android::HeifMuxerSec::writeSampleData(android::sp<android::ABuffer> const&,long,uint)+24↑j
.text:00000000000106CC                 LDR             X8, [X1]
.text:00000000000106D0                 LDR             X9, [X8,#0x18]
.text:00000000000106D4                 LDP             X10, X1, [X8,#0x28] ; void *
.text:00000000000106D8                 MOV             X8, SP
.text:00000000000106DC                 ADD             X0, X9, X10 ; this
.text:00000000000106E0                 BL              ._ZN7android7ABuffer12CreateAsCopyEPKvm ; android::ABuffer::CreateAsCopy(void const*,ulong)
.text:00000000000106E4                 LDR             X20, [X19,#0x2E8]
.text:00000000000106E8                 ADD             X21, X19, #0x2E8
.text:00000000000106EC                 CBZ             X20, loc_106FC
.text:00000000000106F0                 MOV             X0, X20 ; this
.text:00000000000106F4                 MOV             X1, X21 ; void *
.text:00000000000106F8                 BL              ._ZNK7android7RefBase9decStrongEPKv ; android::RefBase::decStrong(void const*)
.text:00000000000106FC loc_106FC                               ; CODE XREF: android::HeifMuxerSec::writeSampleData(android::sp<android::ABuffer> const&,long,uint)+74↑j
.text:00000000000106FC                 LDR             X8, [X21]
.text:0000000000010700                 CMP             X20, X8
.text:0000000000010704                 B.EQ            loc_1070C
.text:0000000000010708                 BL              ._ZN7android14sp_report_raceEv ; android::sp_report_race(void)
.text:000000000001070C loc_1070C                               ; CODE XREF: android::HeifMuxerSec::writeSampleData(android::sp<android::ABuffer> const&,long,uint)+8C↑j
.text:000000000001070C                 LDR             X8, [SP,#0x30+var_30]
.text:0000000000010710                 ADD             X2, X19, #0xF0
.text:0000000000010714                 ADD             X20, X19, #0xC8
.text:0000000000010718                 STR             X8, [X19,#0x2E8]
.text:000000000001071C                 LDR             X9, [X8,#0x18]
.text:0000000000010720                 LDR             X10, [X8,#0x28]
.text:0000000000010724                 LDR             W1, [X8,#0x30]
.text:0000000000010728                 ADD             X0, X9, X10
.text:000000000001072C                 BL              sub_107A8
.text:0000000000010730                 LDR             X0, [X19,#0x18]
.text:0000000000010734                 ADD             X4, X19, #0x2C8
.text:0000000000010738                 MOV             W1, WZR
.text:000000000001073C                 MOV             W2, WZR
.text:0000000000010740                 MOV             X3, X20
.text:0000000000010744                 BL              .sheifm_set_image_info
.text:0000000000010748                 B               loc_10778
.text:000000000001074C ; ---------------------------------------------------------------------------
.text:000000000001074C loc_1074C                               ; CODE XREF: android::HeifMuxerSec::writeSampleData(android::sp<android::ABuffer> const&,long,uint)+2C↑j
.text:000000000001074C                 LDR             W8, [X19,#0x2F0]
.text:0000000000010750                 LDR             X0, [X19,#0x18]
.text:0000000000010754                 ADD             W9, W8, #1
.text:0000000000010758                 STR             W9, [X19,#0x2F0]
.text:000000000001075C                 LDR             X9, [X1]
.text:0000000000010760                 MOV             W1, W8
.text:0000000000010764                 LDR             X10, [X9,#0x18]
.text:0000000000010768                 LDR             X11, [X9,#0x28]
.text:000000000001076C                 LDR             W3, [X9,#0x30]
.text:0000000000010770                 ADD             X2, X10, X11
.text:0000000000010774                 BL              .sheifm_put_frm
.text:0000000000010778 loc_10778                               ; CODE XREF: android::HeifMuxerSec::writeSampleData(android::sp<android::ABuffer> const&,long,uint)+50↑j
.text:0000000000010778                                         ; android::HeifMuxerSec::writeSampleData(android::sp<android::ABuffer> const&,long,uint)+D0↑j
.text:0000000000010778                 LDR             X8, [X22,#0x28]
.text:000000000001077C                 LDR             X9, [SP,#0x30+var_28]
.text:0000000000010780                 CMP             X8, X9
.text:0000000000010784                 B.NE            loc_107A0
.text:0000000000010788                 LDP             X29, X30, [SP,#0x30+var_s0]
.text:000000000001078C                 LDP             X20, X19, [SP,#0x30+var_10]
.text:0000000000010790                 LDP             X22, X21, [SP,#0x30+var_20]
.text:0000000000010794                 MOV             W0, WZR
.text:0000000000010798                 ADD             SP, SP, #0x40 ; '@'
.text:000000000001079C                 RET
.text:00000000000107A0 ; ---------------------------------------------------------------------------
.text:00000000000107A0 loc_107A0                               ; CODE XREF: android::HeifMuxerSec::writeSampleData(android::sp<android::ABuffer> const&,long,uint)+10C↑j
.text:00000000000107A0                 BL              .__stack_chk_fail
.text:00000000000107A0 ; } // starts at 10678
.text:00000000000107A0 ; End of function android::HeifMuxerSec::writeSampleData(android::sp<android::ABuffer> const&,long,uint)
.text:00000000000107A0 ; ---------------------------------------------------------------------------
.text:00000000000107A4                 ALIGN 8
.text:00000000000107A8 ; =============== S U B R O U T I N E =======================================
.text:00000000000107A8 ; Attributes: bp-based frame
.text:00000000000107A8 sub_107A8                               ; CODE XREF: android::HeifMuxerSec::writeSampleData(android::sp<android::ABuffer> const&,long,uint)+B4↑p
.text:00000000000107A8                                         ; android::HeifMuxerSec::writeSampleData(android::sp<android::ABuffer> const&,android::sp<android::AMessage> const&,long,uint)+370↓p ...
.text:00000000000107A8 var_50          = -0x50
.text:00000000000107A8 var_40          = -0x40
.text:00000000000107A8 var_30          = -0x30
.text:00000000000107A8 var_20          = -0x20
.text:00000000000107A8 var_10          = -0x10
.text:00000000000107A8 var_s0          =  0
.text:00000000000107A8 ; __unwind {
.text:00000000000107A8                 STP             X28, X27, [SP,#-0x10+var_50]!
.text:00000000000107AC                 STP             X26, X25, [SP,#0x50+var_40]
.text:00000000000107B0                 STP             X24, X23, [SP,#0x50+var_30]
.text:00000000000107B4                 STP             X22, X21, [SP,#0x50+var_20]
.text:00000000000107B8                 STP             X20, X19, [SP,#0x50+var_10]
.text:00000000000107BC                 STP             X29, X30, [SP,#0x50+var_s0]
.text:00000000000107C0                 ADD             X29, SP, #0x50
.text:00000000000107C4                 MOVI            V0.2D, #0
.text:00000000000107C8                 CMP             W1, #1
.text:00000000000107CC                 STR             XZR, [X2,#0xA0]
.text:00000000000107D0                 STP             Q0, Q0, [X2,#0x80]
.text:00000000000107D4                 STP             Q0, Q0, [X2,#0x60]
.text:00000000000107D8                 STP             Q0, Q0, [X2,#0x40]
.text:00000000000107DC                 STP             Q0, Q0, [X2,#0x20]
.text:00000000000107E0                 STP             Q0, Q0, [X2]
.text:00000000000107E4                 B.LT            loc_10938
.text:00000000000107E8                 MOV             X19, X2
.text:00000000000107EC                 MOV             W20, W1
.text:00000000000107F0                 MOV             X21, X0
.text:00000000000107F4                 ADD             X23, X0, W1,SXTW
.text:00000000000107F8                 ADD             X24, X2, #0x70 ; 'p'
.text:00000000000107FC                 ADD             X25, X2, #0x38 ; '8'
.text:0000000000010800                 MOV             W26, #0x1000000
.text:0000000000010804 loc_10804                               ; CODE XREF: sub_107A8+18C↓j
.text:0000000000010804                 SXTW            X8, W20
.text:0000000000010808                 ADD             X9, X21, #1
.text:000000000001080C                 MOV             X10, X8
.text:0000000000010810 loc_10810                               ; CODE XREF: sub_107A8+7C↓j
.text:0000000000010810                 LDR             W11, [X9]
.text:0000000000010814                 CMP             W11, W26
.text:0000000000010818                 B.EQ            loc_1082C
.text:000000000001081C                 ADD             X9, X9, #1
.text:0000000000010820                 SUBS            X10, X10, #1
.text:0000000000010824                 B.NE            loc_10810
.text:0000000000010828                 MOV             X9, XZR
.text:000000000001082C loc_1082C                               ; CODE XREF: sub_107A8+70↑j
.text:000000000001082C                 LDRB            W10, [X21,#4]!
.text:0000000000010830                 CMP             X9, #0
.text:0000000000010834                 CSEL            X27, X23, X9, EQ
.text:0000000000010838                 SUB             W8, W8, #4
.text:000000000001083C                 SUB             X28, X27, X21
.text:0000000000010840                 SUB             W20, W8, W28
.text:0000000000010844                 UBFX            W8, W10, #1, #6
.text:0000000000010848                 CMP             W8, #0x22 ; '"'
.text:000000000001084C                 B.EQ            loc_108E0
.text:0000000000010850                 CMP             W8, #0x21 ; '!'
.text:0000000000010854                 B.EQ            loc_108A0
.text:0000000000010858                 CMP             W8, #0x20 ; ' '
.text:000000000001085C                 B.NE            loc_1092C
.text:0000000000010860                 SXTW            X22, W28
.text:0000000000010864                 MOV             X0, X22 ; size
.text:0000000000010868                 BL              .malloc
.text:000000000001086C                 MOV             X8, X19
.text:0000000000010870                 MOV             X1, X21 ; src
.text:0000000000010874                 MOV             X2, X22 ; n
.text:0000000000010878                 LDRSW           X9, [X8],#0x18
.text:000000000001087C                 STR             X0, [X8,X9,LSL#3]
.text:0000000000010880                 LDRSW           X9, [X19]
.text:0000000000010884                 LDR             X0, [X8,X9,LSL#3] ; dest
.text:0000000000010888                 BL              .memcpy
.text:000000000001088C                 LDRSW           X8, [X19]
.text:0000000000010890                 MOV             X9, X19
.text:0000000000010894                 ADD             X8, X19, X8,LSL#2
.text:0000000000010898                 ADD             X8, X8, #4
.text:000000000001089C                 B               loc_1091C
.text:00000000000108A0 ; ---------------------------------------------------------------------------
.text:00000000000108A0 loc_108A0                               ; CODE XREF: sub_107A8+AC↑j
.text:00000000000108A0                 SXTW            X22, W28
.text:00000000000108A4                 MOV             X0, X22 ; size
.text:00000000000108A8                 BL              .malloc
.text:00000000000108AC                 LDRSW           X8, [X19,#0x38]
.text:00000000000108B0                 ADD             X9, X19, #0x50 ; 'P'
.text:00000000000108B4                 MOV             X1, X21 ; src
.text:00000000000108B8                 MOV             X2, X22 ; n
.text:00000000000108BC                 STR             X0, [X9,X8,LSL#3]
.text:00000000000108C0                 LDRSW           X8, [X19,#0x38]
.text:00000000000108C4                 LDR             X0, [X9,X8,LSL#3] ; dest
.text:00000000000108C8                 BL              .memcpy
.text:00000000000108CC                 LDRSW           X8, [X19,#0x38]
.text:00000000000108D0                 MOV             X9, X25
.text:00000000000108D4                 ADD             X8, X19, X8,LSL#2
.text:00000000000108D8                 ADD             X8, X8, #0x3C ; '<'
.text:00000000000108DC                 B               loc_1091C
.text:00000000000108E0 ; ---------------------------------------------------------------------------
.text:00000000000108E0 loc_108E0                               ; CODE XREF: sub_107A8+A4↑j
.text:00000000000108E0                 SXTW            X22, W28
.text:00000000000108E4                 MOV             X0, X22 ; size
.text:00000000000108E8                 BL              .malloc
.text:00000000000108EC                 LDRSW           X8, [X19,#0x70]
.text:00000000000108F0                 ADD             X9, X19, #0x88
.text:00000000000108F4                 MOV             X1, X21 ; src
.text:00000000000108F8                 MOV             X2, X22 ; n
.text:00000000000108FC                 STR             X0, [X9,X8,LSL#3]
.text:0000000000010900                 LDRSW           X8, [X19,#0x70]
.text:0000000000010904                 LDR             X0, [X9,X8,LSL#3] ; dest
.text:0000000000010908                 BL              .memcpy
.text:000000000001090C                 LDRSW           X8, [X19,#0x70]
.text:0000000000010910                 MOV             X9, X24
.text:0000000000010914                 ADD             X8, X19, X8,LSL#2
.text:0000000000010918                 ADD             X8, X8, #0x74 ; 't'
.text:000000000001091C loc_1091C                               ; CODE XREF: sub_107A8+F4↑j
.text:000000000001091C                                         ; sub_107A8+134↑j
.text:000000000001091C                 STR             W28, [X8]
.text:0000000000010920                 LDR             W8, [X9]
.text:0000000000010924                 ADD             W8, W8, #1
.text:0000000000010928                 STR             W8, [X9]
.text:000000000001092C loc_1092C                               ; CODE XREF: sub_107A8+B4↑j
.text:000000000001092C                 MOV             X21, X27
.text:0000000000010930                 CMP             W20, #0
.text:0000000000010934                 B.GT            loc_10804
.text:0000000000010938 loc_10938                               ; CODE XREF: sub_107A8+3C↑j
.text:0000000000010938                 LDP             X29, X30, [SP,#0x50+var_s0]
.text:000000000001093C                 LDP             X20, X19, [SP,#0x50+var_10]
.text:0000000000010940                 LDP             X22, X21, [SP,#0x50+var_20]
.text:0000000000010944                 LDP             X24, X23, [SP,#0x50+var_30]
.text:0000000000010948                 LDP             X26, X25, [SP,#0x50+var_40]
.text:000000000001094C                 LDP             X28, X27, [SP+0x50+var_50],#0x60
.text:0000000000010950                 RET
.text:0000000000010950 ; } // starts at 107A8
.text:0000000000010950 ; End of function sub_107A8
.text:0000000000010950 ; ---------------------------------------------------------------------------
.text:0000000000010954                 ALIGN 8
.text:0000000000010958 ; =============== S U B R O U T I N E =======================================
.text:0000000000010958 ; Attributes: bp-based frame
.text:0000000000010958 ; android::HeifMuxerSec::writeSampleData(android::sp<android::ABuffer> const&, android::sp<android::AMessage> const&, long, unsigned int)
.text:0000000000010958                 EXPORT _ZN7android12HeifMuxerSec15writeSampleDataERKNS_2spINS_7ABufferEEERKNS1_INS_8AMessageEEElj
.text:0000000000010958 _ZN7android12HeifMuxerSec15writeSampleDataERKNS_2spINS_7ABufferEEERKNS1_INS_8AMessageEEElj
.text:0000000000010958                                         ; DATA XREF: LOAD:0000000000000E58↑o
.text:0000000000010958                                         ; .data.rel.ro:000000000001D210↓o
.text:0000000000010958 var_74          = -0x74
.text:0000000000010958 var_70          = -0x70
.text:0000000000010958 var_68          = -0x68
.text:0000000000010958 var_60          = -0x60
.text:0000000000010958 var_5C          = -0x5C
.text:0000000000010958 var_58          = -0x58
.text:0000000000010958 var_54          = -0x54
.text:0000000000010958 var_50          = -0x50
.text:0000000000010958 var_4C          = -0x4C
.text:0000000000010958 var_48          = -0x48
.text:0000000000010958 var_44          = -0x44
.text:0000000000010958 var_40          = -0x40
.text:0000000000010958 var_3C          = -0x3C
.text:0000000000010958 var_38          = -0x38
.text:0000000000010958 var_30          = -0x30
.text:0000000000010958 var_20          = -0x20
.text:0000000000010958 var_10          = -0x10
.text:0000000000010958 var_s0          =  0
.text:0000000000010958 ; __unwind {
.text:0000000000010958                 SUB             SP, SP, #0x90
.text:000000000001095C                 STP             X24, X23, [SP,#0x80+var_30]
.text:0000000000010960                 STP             X22, X21, [SP,#0x80+var_20]
.text:0000000000010964                 STP             X20, X19, [SP,#0x80+var_10]
.text:0000000000010968                 STP             X29, X30, [SP,#0x80+var_s0]
.text:000000000001096C                 ADD             X29, SP, #0x80
.text:0000000000010970                 MRS             X24, #3, c13, c0, #2
.text:0000000000010974                 MOV             X20, X1
.text:0000000000010978                 LDR             X8, [X24,#0x28]
.text:000000000001097C                 ADRP            X1, #aRole@PAGE ; "role"
.text:0000000000010980                 MOV             X21, X2
.text:0000000000010984                 MOV             X19, X0
.text:0000000000010988                 ADD             X1, X1, #aRole@PAGEOFF ; "role"
.text:000000000001098C                 STUR            X8, [X29,#var_38]
.text:0000000000010990                 MOV             W22, W4
.text:0000000000010994                 LDR             X8, [X2]
.text:0000000000010998                 SUB             X2, X29, #-var_3C ; int *
.text:000000000001099C                 MOV             X0, X8  ; this
.text:00000000000109A0                 BL              ._ZNK7android8AMessage9findInt32EPKcPi ; android::AMessage::findInt32(char const*,int *)
.text:00000000000109A4                 TBZ             W0, #0, loc_10F5C
.text:00000000000109A8                 LDUR            W3, [X29,#var_3C]
.text:00000000000109AC                 CMP             W3, #1
.text:00000000000109B0                 B.EQ            loc_109D8
.text:00000000000109B4                 CMP             W3, #2
.text:00000000000109B8                 B.NE            loc_10A08
.text:00000000000109BC                 TBNZ            W22, #1, loc_10A1C
.text:00000000000109C0                 TBNZ            W22, #0, loc_10BA0
.text:00000000000109C4                 ADRP            X1, #aHeifmuxersec@PAGE ; "HeifMuxerSec"
.text:00000000000109C8                 ADRP            X2, #aSThumbUnexpect@PAGE ; "%s: THUMB: unexpected flags(%d)"
.text:00000000000109CC                 ADD             X1, X1, #aHeifmuxersec@PAGEOFF ; "HeifMuxerSec"
.text:00000000000109D0                 ADD             X2, X2, #aSThumbUnexpect@PAGEOFF ; "%s: THUMB: unexpected flags(%d)"
.text:00000000000109D4                 B               loc_109F0
.text:00000000000109D8 ; ---------------------------------------------------------------------------
.text:00000000000109D8 loc_109D8                               ; CODE XREF: android::HeifMuxerSec::writeSampleData(android::sp<android::ABuffer> const&,android::sp<android::AMessage> const&,long,uint)+58↑j
.text:00000000000109D8                 TBNZ            W22, #1, loc_10BF4
.text:00000000000109DC                 TBNZ            W22, #0, loc_10BA0
.text:00000000000109E0                 ADRP            X1, #aHeifmuxersec@PAGE ; "HeifMuxerSec"
.text:00000000000109E4                 ADRP            X2, #aSCoverUnexpect@PAGE ; "%s: COVER: unexpected flags(%d)"
.text:00000000000109E8                 ADD             X1, X1, #aHeifmuxersec@PAGEOFF ; "HeifMuxerSec"
.text:00000000000109EC                 ADD             X2, X2, #aSCoverUnexpect@PAGEOFF ; "%s: COVER: unexpected flags(%d)"
.text:00000000000109F0 loc_109F0                               ; CODE XREF: android::HeifMuxerSec::writeSampleData(android::sp<android::ABuffer> const&,android::sp<android::AMessage> const&,long,uint)+7C↑j
.text:00000000000109F0                 ADRP            X3, #aWritesampledat@PAGE ; "writeSampleData"
.text:00000000000109F4                 ADD             X3, X3, #aWritesampledat@PAGEOFF ; "writeSampleData"
.text:00000000000109F8                 MOV             W0, #6
.text:00000000000109FC                 MOV             W4, W22
.text:0000000000010A00                 BL              .__android_log_print
.text:0000000000010A04                 B               loc_10D18
.text:0000000000010A08 ; ---------------------------------------------------------------------------
.text:0000000000010A08 loc_10A08                               ; CODE XREF: android::HeifMuxerSec::writeSampleData(android::sp<android::ABuffer> const&,android::sp<android::AMessage> const&,long,uint)+60↑j
.text:0000000000010A08                 ADRP            X1, #aHeifmuxersec@PAGE ; "HeifMuxerSec"
.text:0000000000010A0C                 ADRP            X2, #aDoNotExitRoleD@PAGE ; "Do not exit role(%d)"
.text:0000000000010A10                 ADD             X1, X1, #aHeifmuxersec@PAGEOFF ; "HeifMuxerSec"
.text:0000000000010A14                 ADD             X2, X2, #aDoNotExitRoleD@PAGEOFF ; "Do not exit role(%d)"
.text:0000000000010A18                 B               loc_10C64
.text:0000000000010A1C ; ---------------------------------------------------------------------------
.text:0000000000010A1C loc_10A1C                               ; CODE XREF: android::HeifMuxerSec::writeSampleData(android::sp<android::ABuffer> const&,android::sp<android::AMessage> const&,long,uint)+64↑j
.text:0000000000010A1C                 MOVI            V0.2D, #0
.text:0000000000010A20                 ADD             X8, X19, #0x2B8
.text:0000000000010A24                 ADD             X9, X19, #0x2A8
.text:0000000000010A28                 ADD             X10, X19, #0x298
.text:0000000000010A2C                 ADD             X22, X19, #0x1C8
.text:0000000000010A30                 ADRP            X1, #aImageId@PAGE ; "image-id"
.text:0000000000010A34                 ADD             X1, X1, #aImageId@PAGEOFF ; "image-id"
.text:0000000000010A38                 STR             Q0, [X8]
.text:0000000000010A3C                 ADD             X8, X19, #0x288
.text:0000000000010A40                 STR             Q0, [X9]
.text:0000000000010A44                 ADD             X9, X19, #0x278
.text:0000000000010A48                 STR             Q0, [X10]
.text:0000000000010A4C                 ADD             X10, X19, #0x268
.text:0000000000010A50                 STR             Q0, [X8]
.text:0000000000010A54                 ADD             X8, X19, #0x258
.text:0000000000010A58                 STR             Q0, [X9]
.text:0000000000010A5C                 ADD             X9, X19, #0x248
.text:0000000000010A60                 STR             Q0, [X10]
.text:0000000000010A64                 ADD             X10, X19, #0x238
.text:0000000000010A68                 STR             Q0, [X8]
.text:0000000000010A6C                 ADD             X8, X19, #0x228
.text:0000000000010A70                 STR             Q0, [X9]
.text:0000000000010A74                 ADD             X9, X19, #0x218
.text:0000000000010A78                 STR             Q0, [X10]
.text:0000000000010A7C                 ADD             X10, X19, #0x208
.text:0000000000010A80                 STR             Q0, [X8]
.text:0000000000010A84                 ADD             X8, X19, #0x1F8
.text:0000000000010A88                 STR             Q0, [X9]
.text:0000000000010A8C                 ADD             X9, X19, #0x1E8
.text:0000000000010A90                 STR             Q0, [X10]
.text:0000000000010A94                 ADD             X10, X19, #0x1D8
.text:0000000000010A98                 STR             Q0, [X8]
.text:0000000000010A9C                 ADD             X2, SP, #0x80+var_68 ; int *
.text:0000000000010AA0                 STR             Q0, [X9]
.text:0000000000010AA4                 STR             Q0, [X10]
.text:0000000000010AA8                 STR             Q0, [X22]
.text:0000000000010AAC                 LDR             X0, [X21] ; this
.text:0000000000010AB0                 STR             WZR, [SP,#0x80+var_68]
.text:0000000000010AB4                 BL              ._ZNK7android8AMessage9findInt32EPKcPi ; android::AMessage::findInt32(char const*,int *)
.text:0000000000010AB8                 TBZ             W0, #0, loc_10F84
.text:0000000000010ABC                 LDR             X0, [X21] ; this
.text:0000000000010AC0                 ADRP            X1, #aWidth@PAGE ; "width"
.text:0000000000010AC4                 ADD             X1, X1, #aWidth@PAGEOFF ; "width"
.text:0000000000010AC8                 STR             WZR, [SP,#0x80+var_5C]
.text:0000000000010ACC                 ADD             X2, SP, #0x80+var_40 ; int *
.text:0000000000010AD0                 BL              ._ZNK7android8AMessage9findInt32EPKcPi ; android::AMessage::findInt32(char const*,int *)
.text:0000000000010AD4                 TBZ             W0, #0, loc_10FA8
.text:0000000000010AD8                 LDR             X0, [X21] ; this
.text:0000000000010ADC                 ADRP            X1, #aHeight@PAGE ; "height"
.text:0000000000010AE0                 ADD             X1, X1, #aHeight@PAGEOFF ; "height"
.text:0000000000010AE4                 ADD             X2, SP, #0x80+var_44 ; int *
.text:0000000000010AE8                 BL              ._ZNK7android8AMessage9findInt32EPKcPi ; android::AMessage::findInt32(char const*,int *)
.text:0000000000010AEC                 TBZ             W0, #0, loc_10FCC
.text:0000000000010AF0                 LDR             X0, [X21] ; this
.text:0000000000010AF4                 ADRP            X1, #aGridWidth@PAGE ; "grid-width"
.text:0000000000010AF8                 ADD             X1, X1, #aGridWidth@PAGEOFF ; "grid-width"
.text:0000000000010AFC                 ADD             X2, SP, #0x80+var_48 ; int *
.text:0000000000010B00                 BL              ._ZNK7android8AMessage9findInt32EPKcPi ; android::AMessage::findInt32(char const*,int *)
.text:0000000000010B04                 TBZ             W0, #0, loc_10FF0
.text:0000000000010B08                 LDR             X0, [X21] ; this
.text:0000000000010B0C                 ADRP            X1, #aGridHeight@PAGE ; "grid-height"
.text:0000000000010B10                 ADD             X1, X1, #aGridHeight@PAGEOFF ; "grid-height"
.text:0000000000010B14                 ADD             X2, SP, #0x80+var_4C ; int *
.text:0000000000010B18                 BL              ._ZNK7android8AMessage9findInt32EPKcPi ; android::AMessage::findInt32(char const*,int *)
.text:0000000000010B1C                 TBZ             W0, #0, loc_11014
.text:0000000000010B20                 LDR             X0, [X21] ; this
.text:0000000000010B24                 ADRP            X1, #aGridRows@PAGE ; "grid-rows"
.text:0000000000010B28                 ADD             X1, X1, #aGridRows@PAGEOFF ; "grid-rows"
.text:0000000000010B2C                 ADD             X2, SP, #0x80+var_54 ; int *
.text:0000000000010B30                 BL              ._ZNK7android8AMessage9findInt32EPKcPi ; android::AMessage::findInt32(char const*,int *)
.text:0000000000010B34                 TBZ             W0, #0, loc_11038
.text:0000000000010B38                 LDR             X0, [X21] ; this
.text:0000000000010B3C                 ADRP            X1, #aGridColumns@PAGE ; "grid-columns"
.text:0000000000010B40                 ADD             X1, X1, #aGridColumns@PAGEOFF ; "grid-columns"
.text:0000000000010B44                 ADD             X2, SP, #0x80+var_58 ; int *
.text:0000000000010B48                 BL              ._ZNK7android8AMessage9findInt32EPKcPi ; android::AMessage::findInt32(char const*,int *)
.text:0000000000010B4C                 TBZ             W0, #0, loc_1105C
.text:0000000000010B50                 LDR             X0, [X21] ; this
.text:0000000000010B54                 ADRP            X1, #aGridSize@PAGE ; "grid-size"
.text:0000000000010B58                 ADD             X1, X1, #aGridSize@PAGEOFF ; "grid-size"
.text:0000000000010B5C                 ADD             X2, SP, #0x80+var_50 ; int *
.text:0000000000010B60                 BL              ._ZNK7android8AMessage9findInt32EPKcPi ; android::AMessage::findInt32(char const*,int *)
.text:0000000000010B64                 TBZ             W0, #0, loc_11080
.text:0000000000010B68                 LDR             X0, [X21] ; this
.text:0000000000010B6C                 ADRP            X1, #aCoverImageId@PAGE ; "cover-image-id"
.text:0000000000010B70                 ADD             X1, X1, #aCoverImageId@PAGEOFF ; "cover-image-id"
.text:0000000000010B74                 ADD             X2, SP, #0x80+var_60 ; int *
.text:0000000000010B78                 BL              ._ZNK7android8AMessage9findInt32EPKcPi ; android::AMessage::findInt32(char const*,int *)
.text:0000000000010B7C                 TBZ             W0, #0, loc_110A4
.text:0000000000010B80                 LDR             X0, [X21] ; this
.text:0000000000010B84                 ADRP            X1, #aRotationDegree@PAGE ; "rotation-degrees"
.text:0000000000010B88                 ADD             X1, X1, #aRotationDegree@PAGEOFF ; "rotation-degrees"
.text:0000000000010B8C                 ADD             X2, SP, #0x80+var_5C ; int *
.text:0000000000010B90                 BL              ._ZNK7android8AMessage9findInt32EPKcPi ; android::AMessage::findInt32(char const*,int *)
.text:0000000000010B94                 TBZ             W0, #0, loc_10C74
.text:0000000000010B98                 LDR             W8, [SP,#0x80+var_5C]
.text:0000000000010B9C                 B               loc_10C7C
.text:0000000000010BA0 ; ---------------------------------------------------------------------------
.text:0000000000010BA0 loc_10BA0                               ; CODE XREF: android::HeifMuxerSec::writeSampleData(android::sp<android::ABuffer> const&,android::sp<android::AMessage> const&,long,uint)+68↑j
.text:0000000000010BA0                                         ; android::HeifMuxerSec::writeSampleData(android::sp<android::ABuffer> const&,android::sp<android::AMessage> const&,long,uint)+84↑j
.text:0000000000010BA0                 LDR             W1, [X19,#0x2F0]
.text:0000000000010BA4                 LDR             X0, [X19,#0x18]
.text:0000000000010BA8                 ADD             W8, W1, #1
.text:0000000000010BAC                 STR             W8, [X19,#0x2F0]
.text:0000000000010BB0                 LDR             X8, [X20]
.text:0000000000010BB4                 LDR             X9, [X8,#0x18]
.text:0000000000010BB8                 LDR             X10, [X8,#0x28]
.text:0000000000010BBC                 LDR             W3, [X8,#0x30]
.text:0000000000010BC0                 ADD             X2, X9, X10
.text:0000000000010BC4                 BL              .sheifm_put_frm
.text:0000000000010BC8                 CBZ             W0, loc_10D18
.text:0000000000010BCC                 LDR             W4, [X19,#0x2F0]
.text:0000000000010BD0                 ADRP            X1, #aHeifmuxersec@PAGE ; "HeifMuxerSec"
.text:0000000000010BD4                 LDR             W5, [X19,#0x2F4]
.text:0000000000010BD8                 ADRP            X2, #aCanNotPutCover@PAGE ; "Can not put cover image info(%d), [%d:%"...
.text:0000000000010BDC                 MOV             W3, W0
.text:0000000000010BE0                 ADD             X1, X1, #aHeifmuxersec@PAGEOFF ; "HeifMuxerSec"
.text:0000000000010BE4                 ADD             X2, X2, #aCanNotPutCover@PAGEOFF ; "Can not put cover image info(%d), [%d:%"...
.text:0000000000010BE8                 MOV             W0, #6
.text:0000000000010BEC                 BL              .__android_log_print
.text:0000000000010BF0                 B               loc_10C6C
.text:0000000000010BF4 ; ---------------------------------------------------------------------------
.text:0000000000010BF4 loc_10BF4                               ; CODE XREF: android::HeifMuxerSec::writeSampleData(android::sp<android::ABuffer> const&,android::sp<android::AMessage> const&,long,uint):loc_109D8↑j
.text:0000000000010BF4                 MOVI            V0.2D, #0
.text:0000000000010BF8                 MOV             X22, X19
.text:0000000000010BFC                 ADRP            X1, #aImageId@PAGE ; "image-id"
.text:0000000000010C00                 ADD             X1, X1, #aImageId@PAGEOFF ; "image-id"
.text:0000000000010C04                 ADD             X2, SP, #0x80+var_40 ; int *
.text:0000000000010C08                 STR             Q0, [X22,#0xC8]!
.text:0000000000010C0C                 STP             Q0, Q0, [X22,#0x200]
.text:0000000000010C10                 STP             Q0, Q0, [X22,#0xE0]
.text:0000000000010C14                 STP             Q0, Q0, [X22,#0xC0]
.text:0000000000010C18                 STP             Q0, Q0, [X22,#0xA0]
.text:0000000000010C1C                 STP             Q0, Q0, [X22,#0x80]
.text:0000000000010C20                 STP             Q0, Q0, [X22,#0x60]
.text:0000000000010C24                 STP             Q0, Q0, [X22,#0x40]
.text:0000000000010C28                 STP             Q0, Q0, [X22,#0x20]
.text:0000000000010C2C                 STR             Q0, [X22,#0x10]
.text:0000000000010C30                 LDR             X0, [X21] ; this
.text:0000000000010C34                 STR             WZR, [SP,#0x80+var_40]
.text:0000000000010C38                 BL              ._ZNK7android8AMessage9findInt32EPKcPi ; android::AMessage::findInt32(char const*,int *)
.text:0000000000010C3C                 TBZ             W0, #0, loc_110C8
.text:0000000000010C40                 LDR             X0, [X19,#0x18]
.text:0000000000010C44                 LDR             W1, [SP,#0x80+var_40]
.text:0000000000010C48                 BL              .sheifm_set_cover_image
.text:0000000000010C4C                 CBZ             W0, loc_10D44
.text:0000000000010C50                 ADRP            X1, #aHeifmuxersec@PAGE ; "HeifMuxerSec"
.text:0000000000010C54                 ADRP            X2, #aCanNotSetCover@PAGE ; "Can not set cover image(%d)"
.text:0000000000010C58                 MOV             W3, W0
.text:0000000000010C5C                 ADD             X1, X1, #aHeifmuxersec@PAGEOFF ; "HeifMuxerSec"
.text:0000000000010C60                 ADD             X2, X2, #aCanNotSetCover@PAGEOFF ; "Can not set cover image(%d)"
.text:0000000000010C64 loc_10C64                               ; CODE XREF: android::HeifMuxerSec::writeSampleData(android::sp<android::ABuffer> const&,android::sp<android::AMessage> const&,long,uint)+C0↑j
.text:0000000000010C64                 MOV             W0, #6
.text:0000000000010C68                 BL              .__android_log_print
.text:0000000000010C6C loc_10C6C                               ; CODE XREF: android::HeifMuxerSec::writeSampleData(android::sp<android::ABuffer> const&,android::sp<android::AMessage> const&,long,uint)+298↑j
.text:0000000000010C6C                                         ; android::HeifMuxerSec::writeSampleData(android::sp<android::ABuffer> const&,android::sp<android::AMessage> const&,long,uint):loc_10D14↓j ...
.text:0000000000010C6C                 MOV             W0, #0xFFFFFFEA
.text:0000000000010C70                 B               loc_10D1C
.text:0000000000010C74 ; ---------------------------------------------------------------------------
.text:0000000000010C74 loc_10C74                               ; CODE XREF: android::HeifMuxerSec::writeSampleData(android::sp<android::ABuffer> const&,android::sp<android::AMessage> const&,long,uint)+23C↑j
.text:0000000000010C74                 MOV             W8, WZR
.text:0000000000010C78                 STR             WZR, [SP,#0x80+var_5C]
.text:0000000000010C7C loc_10C7C                               ; CODE XREF: android::HeifMuxerSec::writeSampleData(android::sp<android::ABuffer> const&,android::sp<android::AMessage> const&,long,uint)+244↑j
.text:0000000000010C7C                 LDR             W9, [SP,#0x80+var_68]
.text:0000000000010C80                 MOV             W21, #1
.text:0000000000010C84                 LDR             W10, [SP,#0x80+var_50]
.text:0000000000010C88                 LDP             W12, W11, [SP,#0x80+var_44]
.text:0000000000010C8C                 STR             W8, [X19,#0x1D4]
.text:0000000000010C90                 ADD             W8, W9, W10
.text:0000000000010C94                 STR             W9, [X19,#0x2F0]
.text:0000000000010C98                 SUB             W8, W8, #1
.text:0000000000010C9C                 STR             W11, [X19,#0x1CC]
.text:0000000000010CA0                 STR             W12, [X19,#0x1D0]
.text:0000000000010CA4                 STR             W21, [X19,#0x1C8]
.text:0000000000010CA8                 STR             W8, [X19,#0x2F4]
.text:0000000000010CAC                 LDR             X8, [X20]
.text:0000000000010CB0                 ADD             X20, X19, #0x1F0
.text:0000000000010CB4                 MOV             X2, X20
.text:0000000000010CB8                 LDR             X9, [X8,#0x18]
.text:0000000000010CBC                 LDR             X10, [X8,#0x28]
.text:0000000000010CC0                 LDR             W1, [X8,#0x30]
.text:0000000000010CC4                 ADD             X0, X9, X10
.text:0000000000010CC8                 BL              sub_107A8
.text:0000000000010CCC                 LDR             X0, [X19,#0x18]
.text:0000000000010CD0                 MOV             X3, X22
.text:0000000000010CD4                 LDR             W1, [SP,#0x80+var_68]
.text:0000000000010CD8                 MOV             X4, XZR
.text:0000000000010CDC                 LDR             W2, [SP,#0x80+var_60]
.text:0000000000010CE0                 BL              .sheifm_set_image_info
.text:0000000000010CE4                 MOV             W19, W0
.text:0000000000010CE8                 MOV             X0, X20
.text:0000000000010CEC                 BL              sub_111E8
.text:0000000000010CF0                 CBZ             W19, loc_10D14
.text:0000000000010CF4                 ADRP            X1, #aHeifmuxersec@PAGE ; "HeifMuxerSec"
.text:0000000000010CF8                 ADRP            X2, #aCanNotSetThumb@PAGE ; "Can not set thumbnail image info(%d)"
.text:0000000000010CFC                 ADD             X1, X1, #aHeifmuxersec@PAGEOFF ; "HeifMuxerSec"
.text:0000000000010D00                 ADD             X2, X2, #aCanNotSetThumb@PAGEOFF ; "Can not set thumbnail image info(%d)"
.text:0000000000010D04                 MOV             W0, #6
.text:0000000000010D08                 MOV             W3, W19
.text:0000000000010D0C                 BL              .__android_log_print
.text:0000000000010D10                 MOV             W21, WZR
.text:0000000000010D14 loc_10D14                               ; CODE XREF: android::HeifMuxerSec::writeSampleData(android::sp<android::ABuffer> const&,android::sp<android::AMessage> const&,long,uint)+398↑j
.text:0000000000010D14                 TBZ             W21, #0, loc_10C6C
.text:0000000000010D18 loc_10D18                               ; CODE XREF: android::HeifMuxerSec::writeSampleData(android::sp<android::ABuffer> const&,android::sp<android::AMessage> const&,long,uint)+AC↑j
.text:0000000000010D18                                         ; android::HeifMuxerSec::writeSampleData(android::sp<android::ABuffer> const&,android::sp<android::AMessage> const&,long,uint)+270↑j ...
.text:0000000000010D18                 MOV             W0, WZR
.text:0000000000010D1C loc_10D1C                               ; CODE XREF: android::HeifMuxerSec::writeSampleData(android::sp<android::ABuffer> const&,android::sp<android::AMessage> const&,long,uint)+318↑j
.text:0000000000010D1C                 LDR             X8, [X24,#0x28]
.text:0000000000010D20                 LDUR            X9, [X29,#var_38]
.text:0000000000010D24                 CMP             X8, X9
.text:0000000000010D28                 B.NE            loc_10F80
.text:0000000000010D2C                 LDP             X29, X30, [SP,#0x80+var_s0]
.text:0000000000010D30                 LDP             X20, X19, [SP,#0x80+var_10]
.text:0000000000010D34                 LDP             X22, X21, [SP,#0x80+var_20]
.text:0000000000010D38                 LDP             X24, X23, [SP,#0x80+var_30]
.text:0000000000010D3C                 ADD             SP, SP, #0x90
.text:0000000000010D40                 RET
.text:0000000000010D44 ; ---------------------------------------------------------------------------
.text:0000000000010D44 loc_10D44                               ; CODE XREF: android::HeifMuxerSec::writeSampleData(android::sp<android::ABuffer> const&,android::sp<android::AMessage> const&,long,uint)+2F4↑j
.text:0000000000010D44                 STR             WZR, [SP,#0x80+var_60]
.text:0000000000010D48                 ADRP            X1, #aWidth@PAGE ; "width"
.text:0000000000010D4C                 LDR             X0, [X21] ; this
.text:0000000000010D50                 ADD             X1, X1, #aWidth@PAGEOFF ; "width"
.text:0000000000010D54                 ADD             X2, SP, #0x80+var_44 ; int *
.text:0000000000010D58                 STP             XZR, XZR, [SP,#0x80+var_70]
.text:0000000000010D5C                 STR             WZR, [SP,#0x80+var_74]
.text:0000000000010D60                 BL              ._ZNK7android8AMessage9findInt32EPKcPi ; android::AMessage::findInt32(char const*,int *)
.text:0000000000010D64                 TBZ             W0, #0, loc_110EC
.text:0000000000010D68                 LDR             X0, [X21] ; this
.text:0000000000010D6C                 ADRP            X1, #aHeight@PAGE ; "height"
.text:0000000000010D70                 ADD             X1, X1, #aHeight@PAGEOFF ; "height"
.text:0000000000010D74                 ADD             X2, SP, #0x80+var_48 ; int *
.text:0000000000010D78                 BL              ._ZNK7android8AMessage9findInt32EPKcPi ; android::AMessage::findInt32(char const*,int *)
.text:0000000000010D7C                 TBZ             W0, #0, loc_11110
.text:0000000000010D80                 LDR             X0, [X21] ; this
.text:0000000000010D84                 ADRP            X1, #aGridWidth@PAGE ; "grid-width"
.text:0000000000010D88                 ADD             X1, X1, #aGridWidth@PAGEOFF ; "grid-width"
.text:0000000000010D8C                 ADD             X2, SP, #0x80+var_4C ; int *
.text:0000000000010D90                 BL              ._ZNK7android8AMessage9findInt32EPKcPi ; android::AMessage::findInt32(char const*,int *)
.text:0000000000010D94                 TBZ             W0, #0, loc_11134
.text:0000000000010D98                 LDR             X0, [X21] ; this
.text:0000000000010D9C                 ADRP            X1, #aGridHeight@PAGE ; "grid-height"
.text:0000000000010DA0                 ADD             X1, X1, #aGridHeight@PAGEOFF ; "grid-height"
.text:0000000000010DA4                 ADD             X2, SP, #0x80+var_50 ; int *
.text:0000000000010DA8                 BL              ._ZNK7android8AMessage9findInt32EPKcPi ; android::AMessage::findInt32(char const*,int *)
.text:0000000000010DAC                 TBZ             W0, #0, loc_11158
.text:0000000000010DB0                 LDR             X0, [X21] ; this
.text:0000000000010DB4                 ADRP            X1, #aGridRows@PAGE ; "grid-rows"
.text:0000000000010DB8                 ADD             X1, X1, #aGridRows@PAGEOFF ; "grid-rows"
.text:0000000000010DBC                 ADD             X2, SP, #0x80+var_58 ; int *
.text:0000000000010DC0                 BL              ._ZNK7android8AMessage9findInt32EPKcPi ; android::AMessage::findInt32(char const*,int *)
.text:0000000000010DC4                 TBZ             W0, #0, loc_1117C
.text:0000000000010DC8                 LDR             X0, [X21] ; this
.text:0000000000010DCC                 ADRP            X1, #aGridColumns@PAGE ; "grid-columns"
.text:0000000000010DD0                 ADD             X1, X1, #aGridColumns@PAGEOFF ; "grid-columns"
.text:0000000000010DD4                 ADD             X2, SP, #0x80+var_5C ; int *
.text:0000000000010DD8                 BL              ._ZNK7android8AMessage9findInt32EPKcPi ; android::AMessage::findInt32(char const*,int *)
.text:0000000000010DDC                 TBZ             W0, #0, loc_111A0
.text:0000000000010DE0                 LDR             X0, [X21] ; this
.text:0000000000010DE4                 ADRP            X1, #aGridSize@PAGE ; "grid-size"
.text:0000000000010DE8                 ADD             X1, X1, #aGridSize@PAGEOFF ; "grid-size"
.text:0000000000010DEC                 ADD             X2, SP, #0x80+var_54 ; int *
.text:0000000000010DF0                 BL              ._ZNK7android8AMessage9findInt32EPKcPi ; android::AMessage::findInt32(char const*,int *)
.text:0000000000010DF4                 TBZ             W0, #0, loc_111C4
.text:0000000000010DF8                 LDR             X0, [X21] ; this
.text:0000000000010DFC                 ADRP            X1, #aRotationDegree@PAGE ; "rotation-degrees"
.text:0000000000010E00                 ADD             X1, X1, #aRotationDegree@PAGEOFF ; "rotation-degrees"
.text:0000000000010E04                 ADD             X2, SP, #0x80+var_60 ; int *
.text:0000000000010E08                 ADD             X23, X22, #0x200
.text:0000000000010E0C                 BL              ._ZNK7android8AMessage9findInt32EPKcPi ; android::AMessage::findInt32(char const*,int *)
.text:0000000000010E10                 TBNZ            W0, #0, loc_10E18
.text:0000000000010E14                 STR             WZR, [SP,#0x80+var_60]
.text:0000000000010E18 loc_10E18                               ; CODE XREF: android::HeifMuxerSec::writeSampleData(android::sp<android::ABuffer> const&,android::sp<android::AMessage> const&,long,uint)+4B8↑j
.text:0000000000010E18                 LDR             X0, [X21] ; this
.text:0000000000010E1C                 ADRP            X1, #aGridStartId@PAGE ; "grid_start_id"
.text:0000000000010E20                 ADD             X1, X1, #aGridStartId@PAGEOFF ; "grid_start_id"
.text:0000000000010E24                 ADD             X2, SP, #0x80+var_70 ; int *
.text:0000000000010E28                 BL              ._ZNK7android8AMessage9findInt32EPKcPi ; android::AMessage::findInt32(char const*,int *)
.text:0000000000010E2C                 LDR             X0, [X21] ; this
.text:0000000000010E30                 ADRP            X1, #aGridEndId@PAGE ; "grid_end_id"
.text:0000000000010E34                 ADD             X1, X1, #aGridEndId@PAGEOFF ; "grid_end_id"
.text:0000000000010E38                 ADD             X2, SP, #0x80+var_74 ; int *
.text:0000000000010E3C                 BL              ._ZNK7android8AMessage9findInt32EPKcPi ; android::AMessage::findInt32(char const*,int *)
.text:0000000000010E40                 LDR             X0, [X21] ; this
.text:0000000000010E44                 ADRP            X1, #aExifBuffer@PAGE ; "exif-buffer"
.text:0000000000010E48                 ADD             X1, X1, #aExifBuffer@PAGEOFF ; "exif-buffer"
.text:0000000000010E4C                 ADD             X2, SP, #0x80+var_68 ; void **
.text:0000000000010E50                 BL              ._ZNK7android8AMessage11findPointerEPKcPPv ; android::AMessage::findPointer(char const*,void **)
.text:0000000000010E54                 LDR             X0, [X21] ; this
.text:0000000000010E58                 ADRP            X1, #aExifBufferSize@PAGE ; "exif-buffer-size"
.text:0000000000010E5C                 ADD             X1, X1, #aExifBufferSize@PAGEOFF ; "exif-buffer-size"
.text:0000000000010E60                 ADD             X2, SP, #0x80+var_70+4 ; int *
.text:0000000000010E64                 BL              ._ZNK7android8AMessage9findInt32EPKcPi ; android::AMessage::findInt32(char const*,int *)
.text:0000000000010E68                 LDP             W9, W8, [SP,#0x80+var_48]
.text:0000000000010E6C                 LDR             W10, [SP,#0x80+var_58]
.text:0000000000010E70                 STR             W8, [X19,#0x2C8]
.text:0000000000010E74                 STR             W9, [X19,#0x2CC]
.text:0000000000010E78                 LDP             W11, W8, [SP,#0x80+var_60]
.text:0000000000010E7C                 LDR             W9, [SP,#0x80+var_70]
.text:0000000000010E80                 STR             W10, [X19,#0x2D0]
.text:0000000000010E84                 LDR             W10, [SP,#0x80+var_74]
.text:0000000000010E88                 STR             W8, [X19,#0x2D4]
.text:0000000000010E8C                 STR             W9, [X19,#0x2D8]
.text:0000000000010E90                 LDR             W8, [SP,#0x80+var_40]
.text:0000000000010E94                 STR             W10, [X19,#0x2DC]
.text:0000000000010E98                 LDR             X12, [SP,#0x80+var_68]
.text:0000000000010E9C                 STR             W8, [X19,#0x2E0]
.text:0000000000010EA0                 LDR             W8, [SP,#0x80+var_70+4]
.text:0000000000010EA4                 STR             W11, [X19,#0x2E4]
.text:0000000000010EA8                 CMP             X12, #0
.text:0000000000010EAC                 STR             W9, [X19,#0x2F0]
.text:0000000000010EB0                 CSET            W11, NE
.text:0000000000010EB4                 LDP             W13, W9, [SP,#0x80+var_50]
.text:0000000000010EB8                 CMP             W8, #0
.text:0000000000010EBC                 STR             W10, [X19,#0x2F4]
.text:0000000000010EC0                 CSET            W10, GT
.text:0000000000010EC4                 TST             W11, W10
.text:0000000000010EC8                 STP             WZR, W9, [X19,#0xC8]
.text:0000000000010ECC                 CSEL            X9, X12, XZR, NE
.text:0000000000010ED0                 CSEL            W8, W8, WZR, NE
.text:0000000000010ED4                 STP             W13, WZR, [X19,#0xD0]
.text:0000000000010ED8                 STR             X9, [X19,#0x1B8]
.text:0000000000010EDC                 STR             W8, [X19,#0x1C0]
.text:0000000000010EE0                 LDR             X8, [X20]
.text:0000000000010EE4                 ADD             X20, X19, #0xF0
.text:0000000000010EE8                 MOV             X2, X20
.text:0000000000010EEC                 LDR             X9, [X8,#0x18]
.text:0000000000010EF0                 LDR             X10, [X8,#0x28]
.text:0000000000010EF4                 LDR             W1, [X8,#0x30]
.text:0000000000010EF8                 ADD             X0, X9, X10
.text:0000000000010EFC                 BL              sub_107A8
.text:0000000000010F00                 LDR             X0, [X19,#0x18]
.text:0000000000010F04                 MOV             W2, WZR
.text:0000000000010F08                 LDR             W1, [SP,#0x80+var_40]
.text:0000000000010F0C                 MOV             X3, X22
.text:0000000000010F10                 MOV             X4, X23
.text:0000000000010F14                 BL              .sheifm_set_image_info
.text:0000000000010F18                 MOV             W19, W0
.text:0000000000010F1C                 MOV             X0, X20
.text:0000000000010F20                 BL              sub_111E8
.text:0000000000010F24                 CBZ             W19, loc_10F50
.text:0000000000010F28                 ADRP            X1, #aHeifmuxersec@PAGE ; "HeifMuxerSec"
.text:0000000000010F2C                 ADRP            X2, #aCanNotSetCover_0@PAGE ; "Can not set cover image info(%d)"
.text:0000000000010F30                 ADD             X1, X1, #aHeifmuxersec@PAGEOFF ; "HeifMuxerSec"
.text:0000000000010F34                 ADD             X2, X2, #aCanNotSetCover_0@PAGEOFF ; "Can not set cover image info(%d)"
.text:0000000000010F38                 MOV             W0, #6
.text:0000000000010F3C                 MOV             W3, W19
.text:0000000000010F40                 BL              .__android_log_print
.text:0000000000010F44                 MOV             W8, WZR
.text:0000000000010F48                 TBZ             W8, #0, loc_10C6C
.text:0000000000010F4C                 B               loc_10D18
.text:0000000000010F50 ; ---------------------------------------------------------------------------
.text:0000000000010F50 loc_10F50                               ; CODE XREF: android::HeifMuxerSec::writeSampleData(android::sp<android::ABuffer> const&,android::sp<android::AMessage> const&,long,uint)+5CC↑j
.text:0000000000010F50                 MOV             W8, #1
.text:0000000000010F54                 TBZ             W8, #0, loc_10C6C
.text:0000000000010F58                 B               loc_10D18
.text:0000000000010F5C ; ---------------------------------------------------------------------------
.text:0000000000010F5C loc_10F5C                               ; CODE XREF: android::HeifMuxerSec::writeSampleData(android::sp<android::ABuffer> const&,android::sp<android::AMessage> const&,long,uint)+4C↑j
.text:0000000000010F5C                 ADRP            X0, #aFormatFindint3_9@PAGE ; "!(format->findInt32(\"role\", &role))"
.text:0000000000010F60                 ADRP            X1, #aHeifmuxersec@PAGE ; "HeifMuxerSec"
.text:0000000000010F64                 ADRP            X2, #aS@PAGE ; "%s"
.text:0000000000010F68                 ADRP            X3, #aVendorSamsungF_11@PAGE ; "vendor/samsung/frameworks/av/media/libh"...
.text:0000000000010F6C                 ADD             X0, X0, #aFormatFindint3_9@PAGEOFF ; "!(format->findInt32(\"role\", &role))"
.text:0000000000010F70                 ADD             X1, X1, #aHeifmuxersec@PAGEOFF ; "HeifMuxerSec"
.text:0000000000010F74                 ADD             X2, X2, #aS@PAGEOFF ; "%s"
.text:0000000000010F78                 ADD             X3, X3, #aVendorSamsungF_11@PAGEOFF ; "vendor/samsung/frameworks/av/media/libh"...
.text:0000000000010F7C                 BL              .__android_log_assert
.text:0000000000010F80 loc_10F80                               ; CODE XREF: android::HeifMuxerSec::writeSampleData(android::sp<android::ABuffer> const&,android::sp<android::AMessage> const&,long,uint)+3D0↑j
.text:0000000000010F80                 BL              .__stack_chk_fail
.text:0000000000010F84 ; ---------------------------------------------------------------------------
.text:0000000000010F84 loc_10F84                               ; CODE XREF: android::HeifMuxerSec::writeSampleData(android::sp<android::ABuffer> const&,android::sp<android::AMessage> const&,long,uint)+160↑j
.text:0000000000010F84                 ADRP            X0, #aFormatFindint3_10@PAGE ; "!(format->findInt32(\"image-id\", &imag"...
.text:0000000000010F88                 ADRP            X1, #aHeifmuxersec@PAGE ; "HeifMuxerSec"
.text:0000000000010F8C                 ADRP            X2, #aS@PAGE ; "%s"
.text:0000000000010F90                 ADRP            X3, #aVendorSamsungF_12@PAGE ; "vendor/samsung/frameworks/av/media/libh"...
.text:0000000000010F94                 ADD             X0, X0, #aFormatFindint3_10@PAGEOFF ; "!(format->findInt32(\"image-id\", &imag"...
.text:0000000000010F98                 ADD             X1, X1, #aHeifmuxersec@PAGEOFF ; "HeifMuxerSec"
.text:0000000000010F9C                 ADD             X2, X2, #aS@PAGEOFF ; "%s"
.text:0000000000010FA0                 ADD             X3, X3, #aVendorSamsungF_12@PAGEOFF ; "vendor/samsung/frameworks/av/media/libh"...
.text:0000000000010FA4                 BL              .__android_log_assert
.text:0000000000010FA8 loc_10FA8                               ; CODE XREF: android::HeifMuxerSec::writeSampleData(android::sp<android::ABuffer> const&,android::sp<android::AMessage> const&,long,uint)+17C↑j
.text:0000000000010FA8                 ADRP            X0, #aFormatFindint3_11@PAGE ; "!(format->findInt32(\"width\", &outputW"...
.text:0000000000010FAC                 ADRP            X1, #aHeifmuxersec@PAGE ; "HeifMuxerSec"
.text:0000000000010FB0                 ADRP            X2, #aS@PAGE ; "%s"
.text:0000000000010FB4                 ADRP            X3, #aVendorSamsungF_13@PAGE ; "vendor/samsung/frameworks/av/media/libh"...
.text:0000000000010FB8                 ADD             X0, X0, #aFormatFindint3_11@PAGEOFF ; "!(format->findInt32(\"width\", &outputW"...
.text:0000000000010FBC                 ADD             X1, X1, #aHeifmuxersec@PAGEOFF ; "HeifMuxerSec"
.text:0000000000010FC0                 ADD             X2, X2, #aS@PAGEOFF ; "%s"
.text:0000000000010FC4                 ADD             X3, X3, #aVendorSamsungF_13@PAGEOFF ; "vendor/samsung/frameworks/av/media/libh"...
.text:0000000000010FC8                 BL              .__android_log_assert
.text:0000000000010FCC loc_10FCC                               ; CODE XREF: android::HeifMuxerSec::writeSampleData(android::sp<android::ABuffer> const&,android::sp<android::AMessage> const&,long,uint)+194↑j
.text:0000000000010FCC                 ADRP            X0, #aFormatFindint3_12@PAGE ; "!(format->findInt32(\"height\", &output"...
.text:0000000000010FD0                 ADRP            X1, #aHeifmuxersec@PAGE ; "HeifMuxerSec"
.text:0000000000010FD4                 ADRP            X2, #aS@PAGE ; "%s"
.text:0000000000010FD8                 ADRP            X3, #aVendorSamsungF_14@PAGE ; "vendor/samsung/frameworks/av/media/libh"...
.text:0000000000010FDC                 ADD             X0, X0, #aFormatFindint3_12@PAGEOFF ; "!(format->findInt32(\"height\", &output"...
.text:0000000000010FE0                 ADD             X1, X1, #aHeifmuxersec@PAGEOFF ; "HeifMuxerSec"
.text:0000000000010FE4                 ADD             X2, X2, #aS@PAGEOFF ; "%s"
.text:0000000000010FE8                 ADD             X3, X3, #aVendorSamsungF_14@PAGEOFF ; "vendor/samsung/frameworks/av/media/libh"...
.text:0000000000010FEC                 BL              .__android_log_assert
.text:0000000000010FF0 loc_10FF0                               ; CODE XREF: android::HeifMuxerSec::writeSampleData(android::sp<android::ABuffer> const&,android::sp<android::AMessage> const&,long,uint)+1AC↑j
.text:0000000000010FF0                 ADRP            X0, #aFormatFindint3_13@PAGE ; "!(format->findInt32(\"grid-width\", &gr"...
.text:0000000000010FF4                 ADRP            X1, #aHeifmuxersec@PAGE ; "HeifMuxerSec"
.text:0000000000010FF8                 ADRP            X2, #aS@PAGE ; "%s"
.text:0000000000010FFC                 ADRP            X3, #aVendorSamsungF_15@PAGE ; "vendor/samsung/frameworks/av/media/libh"...
.text:0000000000011000                 ADD             X0, X0, #aFormatFindint3_13@PAGEOFF ; "!(format->findInt32(\"grid-width\", &gr"...
.text:0000000000011004                 ADD             X1, X1, #aHeifmuxersec@PAGEOFF ; "HeifMuxerSec"
.text:0000000000011008                 ADD             X2, X2, #aS@PAGEOFF ; "%s"
.text:000000000001100C                 ADD             X3, X3, #aVendorSamsungF_15@PAGEOFF ; "vendor/samsung/frameworks/av/media/libh"...
.text:0000000000011010                 BL              .__android_log_assert
.text:0000000000011014 loc_11014                               ; CODE XREF: android::HeifMuxerSec::writeSampleData(android::sp<android::ABuffer> const&,android::sp<android::AMessage> const&,long,uint)+1C4↑j
.text:0000000000011014                 ADRP            X0, #aFormatFindint3_14@PAGE ; "!(format->findInt32(\"grid-height\", &g"...
.text:0000000000011018                 ADRP            X1, #aHeifmuxersec@PAGE ; "HeifMuxerSec"
.text:000000000001101C                 ADRP            X2, #aS@PAGE ; "%s"
.text:0000000000011020                 ADRP            X3, #aVendorSamsungF_16@PAGE ; "vendor/samsung/frameworks/av/media/libh"...
.text:0000000000011024                 ADD             X0, X0, #aFormatFindint3_14@PAGEOFF ; "!(format->findInt32(\"grid-height\", &g"...
.text:0000000000011028                 ADD             X1, X1, #aHeifmuxersec@PAGEOFF ; "HeifMuxerSec"
.text:000000000001102C                 ADD             X2, X2, #aS@PAGEOFF ; "%s"
.text:0000000000011030                 ADD             X3, X3, #aVendorSamsungF_16@PAGEOFF ; "vendor/samsung/frameworks/av/media/libh"...
.text:0000000000011034                 BL              .__android_log_assert
.text:0000000000011038 loc_11038                               ; CODE XREF: android::HeifMuxerSec::writeSampleData(android::sp<android::ABuffer> const&,android::sp<android::AMessage> const&,long,uint)+1DC↑j
.text:0000000000011038                 ADRP            X0, #aFormatFindint3_15@PAGE ; "!(format->findInt32(\"grid-rows\", &row"...
.text:000000000001103C                 ADRP            X1, #aHeifmuxersec@PAGE ; "HeifMuxerSec"
.text:0000000000011040                 ADRP            X2, #aS@PAGE ; "%s"
.text:0000000000011044                 ADRP            X3, #aVendorSamsungF_17@PAGE ; "vendor/samsung/frameworks/av/media/libh"...
.text:0000000000011048                 ADD             X0, X0, #aFormatFindint3_15@PAGEOFF ; "!(format->findInt32(\"grid-rows\", &row"...
.text:000000000001104C                 ADD             X1, X1, #aHeifmuxersec@PAGEOFF ; "HeifMuxerSec"
.text:0000000000011050                 ADD             X2, X2, #aS@PAGEOFF ; "%s"
.text:0000000000011054                 ADD             X3, X3, #aVendorSamsungF_17@PAGEOFF ; "vendor/samsung/frameworks/av/media/libh"...
.text:0000000000011058                 BL              .__android_log_assert
.text:000000000001105C loc_1105C                               ; CODE XREF: android::HeifMuxerSec::writeSampleData(android::sp<android::ABuffer> const&,android::sp<android::AMessage> const&,long,uint)+1F4↑j
.text:000000000001105C                 ADRP            X0, #aFormatFindint3_16@PAGE ; "!(format->findInt32(\"grid-columns\", &"...
.text:0000000000011060                 ADRP            X1, #aHeifmuxersec@PAGE ; "HeifMuxerSec"
.text:0000000000011064                 ADRP            X2, #aS@PAGE ; "%s"
.text:0000000000011068                 ADRP            X3, #aVendorSamsungF_18@PAGE ; "vendor/samsung/frameworks/av/media/libh"...
.text:000000000001106C                 ADD             X0, X0, #aFormatFindint3_16@PAGEOFF ; "!(format->findInt32(\"grid-columns\", &"...
.text:0000000000011070                 ADD             X1, X1, #aHeifmuxersec@PAGEOFF ; "HeifMuxerSec"
.text:0000000000011074                 ADD             X2, X2, #aS@PAGEOFF ; "%s"
.text:0000000000011078                 ADD             X3, X3, #aVendorSamsungF_18@PAGEOFF ; "vendor/samsung/frameworks/av/media/libh"...
.text:000000000001107C                 BL              .__android_log_assert
.text:0000000000011080 loc_11080                               ; CODE XREF: android::HeifMuxerSec::writeSampleData(android::sp<android::ABuffer> const&,android::sp<android::AMessage> const&,long,uint)+20C↑j
.text:0000000000011080                 ADRP            X0, #aFormatFindint3_17@PAGE ; "!(format->findInt32(\"grid-size\", &gri"...
.text:0000000000011084                 ADRP            X1, #aHeifmuxersec@PAGE ; "HeifMuxerSec"
.text:0000000000011088                 ADRP            X2, #aS@PAGE ; "%s"
.text:000000000001108C                 ADRP            X3, #aVendorSamsungF_19@PAGE ; "vendor/samsung/frameworks/av/media/libh"...
.text:0000000000011090                 ADD             X0, X0, #aFormatFindint3_17@PAGEOFF ; "!(format->findInt32(\"grid-size\", &gri"...
.text:0000000000011094                 ADD             X1, X1, #aHeifmuxersec@PAGEOFF ; "HeifMuxerSec"
.text:0000000000011098                 ADD             X2, X2, #aS@PAGEOFF ; "%s"
.text:000000000001109C                 ADD             X3, X3, #aVendorSamsungF_19@PAGEOFF ; "vendor/samsung/frameworks/av/media/libh"...
.text:00000000000110A0                 BL              .__android_log_assert
.text:00000000000110A4 loc_110A4                               ; CODE XREF: android::HeifMuxerSec::writeSampleData(android::sp<android::ABuffer> const&,android::sp<android::AMessage> const&,long,uint)+224↑j
.text:00000000000110A4                 ADRP            X0, #aFormatFindint3_18@PAGE ; "!(format->findInt32(\"cover-image-id\","...
.text:00000000000110A8                 ADRP            X1, #aHeifmuxersec@PAGE ; "HeifMuxerSec"
.text:00000000000110AC                 ADRP            X2, #aS@PAGE ; "%s"
.text:00000000000110B0                 ADRP            X3, #aVendorSamsungF_20@PAGE ; "vendor/samsung/frameworks/av/media/libh"...
.text:00000000000110B4                 ADD             X0, X0, #aFormatFindint3_18@PAGEOFF ; "!(format->findInt32(\"cover-image-id\","...
.text:00000000000110B8                 ADD             X1, X1, #aHeifmuxersec@PAGEOFF ; "HeifMuxerSec"
.text:00000000000110BC                 ADD             X2, X2, #aS@PAGEOFF ; "%s"
.text:00000000000110C0                 ADD             X3, X3, #aVendorSamsungF_20@PAGEOFF ; "vendor/samsung/frameworks/av/media/libh"...
.text:00000000000110C4                 BL              .__android_log_assert
.text:00000000000110C8 loc_110C8                               ; CODE XREF: android::HeifMuxerSec::writeSampleData(android::sp<android::ABuffer> const&,android::sp<android::AMessage> const&,long,uint)+2E4↑j
.text:00000000000110C8                 ADRP            X0, #aFormatFindint3_10@PAGE ; "!(format->findInt32(\"image-id\", &imag"...
.text:00000000000110CC                 ADRP            X1, #aHeifmuxersec@PAGE ; "HeifMuxerSec"
.text:00000000000110D0                 ADRP            X2, #aS@PAGE ; "%s"
.text:00000000000110D4                 ADRP            X3, #aVendorSamsungF_21@PAGE ; "vendor/samsung/frameworks/av/media/libh"...
.text:00000000000110D8                 ADD             X0, X0, #aFormatFindint3_10@PAGEOFF ; "!(format->findInt32(\"image-id\", &imag"...
.text:00000000000110DC                 ADD             X1, X1, #aHeifmuxersec@PAGEOFF ; "HeifMuxerSec"
.text:00000000000110E0                 ADD             X2, X2, #aS@PAGEOFF ; "%s"
.text:00000000000110E4                 ADD             X3, X3, #aVendorSamsungF_21@PAGEOFF ; "vendor/samsung/frameworks/av/media/libh"...
.text:00000000000110E8                 BL              .__android_log_assert
.text:00000000000110EC loc_110EC                               ; CODE XREF: android::HeifMuxerSec::writeSampleData(android::sp<android::ABuffer> const&,android::sp<android::AMessage> const&,long,uint)+40C↑j
.text:00000000000110EC                 ADRP            X0, #aFormatFindint3_11@PAGE ; "!(format->findInt32(\"width\", &outputW"...
.text:00000000000110F0                 ADRP            X1, #aHeifmuxersec@PAGE ; "HeifMuxerSec"
.text:00000000000110F4                 ADRP            X2, #aS@PAGE ; "%s"
.text:00000000000110F8                 ADRP            X3, #aVendorSamsungF_22@PAGE ; "vendor/samsung/frameworks/av/media/libh"...
.text:00000000000110FC                 ADD             X0, X0, #aFormatFindint3_11@PAGEOFF ; "!(format->findInt32(\"width\", &outputW"...
.text:0000000000011100                 ADD             X1, X1, #aHeifmuxersec@PAGEOFF ; "HeifMuxerSec"
.text:0000000000011104                 ADD             X2, X2, #aS@PAGEOFF ; "%s"
.text:0000000000011108                 ADD             X3, X3, #aVendorSamsungF_22@PAGEOFF ; "vendor/samsung/frameworks/av/media/libh"...
.text:000000000001110C                 BL              .__android_log_assert
.text:0000000000011110 loc_11110                               ; CODE XREF: android::HeifMuxerSec::writeSampleData(android::sp<android::ABuffer> const&,android::sp<android::AMessage> const&,long,uint)+424↑j
.text:0000000000011110                 ADRP            X0, #aFormatFindint3_12@PAGE ; "!(format->findInt32(\"height\", &output"...
.text:0000000000011114                 ADRP            X1, #aHeifmuxersec@PAGE ; "HeifMuxerSec"
.text:0000000000011118                 ADRP            X2, #aS@PAGE ; "%s"
.text:000000000001111C                 ADRP            X3, #aVendorSamsungF_23@PAGE ; "vendor/samsung/frameworks/av/media/libh"...
.text:0000000000011120                 ADD             X0, X0, #aFormatFindint3_12@PAGEOFF ; "!(format->findInt32(\"height\", &output"...
.text:0000000000011124                 ADD             X1, X1, #aHeifmuxersec@PAGEOFF ; "HeifMuxerSec"
.text:0000000000011128                 ADD             X2, X2, #aS@PAGEOFF ; "%s"
.text:000000000001112C                 ADD             X3, X3, #aVendorSamsungF_23@PAGEOFF ; "vendor/samsung/frameworks/av/media/libh"...
.text:0000000000011130                 BL              .__android_log_assert
.text:0000000000011134 loc_11134                               ; CODE XREF: android::HeifMuxerSec::writeSampleData(android::sp<android::ABuffer> const&,android::sp<android::AMessage> const&,long,uint)+43C↑j
.text:0000000000011134                 ADRP            X0, #aFormatFindint3_13@PAGE ; "!(format->findInt32(\"grid-width\", &gr"...
.text:0000000000011138                 ADRP            X1, #aHeifmuxersec@PAGE ; "HeifMuxerSec"
.text:000000000001113C                 ADRP            X2, #aS@PAGE ; "%s"
.text:0000000000011140                 ADRP            X3, #aVendorSamsungF_24@PAGE ; "vendor/samsung/frameworks/av/media/libh"...
.text:0000000000011144                 ADD             X0, X0, #aFormatFindint3_13@PAGEOFF ; "!(format->findInt32(\"grid-width\", &gr"...
.text:0000000000011148                 ADD             X1, X1, #aHeifmuxersec@PAGEOFF ; "HeifMuxerSec"
.text:000000000001114C                 ADD             X2, X2, #aS@PAGEOFF ; "%s"
.text:0000000000011150                 ADD             X3, X3, #aVendorSamsungF_24@PAGEOFF ; "vendor/samsung/frameworks/av/media/libh"...
.text:0000000000011154                 BL              .__android_log_assert
.text:0000000000011158 loc_11158                               ; CODE XREF: android::HeifMuxerSec::writeSampleData(android::sp<android::ABuffer> const&,android::sp<android::AMessage> const&,long,uint)+454↑j
.text:0000000000011158                 ADRP            X0, #aFormatFindint3_14@PAGE ; "!(format->findInt32(\"grid-height\", &g"...
.text:000000000001115C                 ADRP            X1, #aHeifmuxersec@PAGE ; "HeifMuxerSec"
.text:0000000000011160                 ADRP            X2, #aS@PAGE ; "%s"
.text:0000000000011164                 ADRP            X3, #aVendorSamsungF_25@PAGE ; "vendor/samsung/frameworks/av/media/libh"...
.text:0000000000011168                 ADD             X0, X0, #aFormatFindint3_14@PAGEOFF ; "!(format->findInt32(\"grid-height\", &g"...
.text:000000000001116C                 ADD             X1, X1, #aHeifmuxersec@PAGEOFF ; "HeifMuxerSec"
.text:0000000000011170                 ADD             X2, X2, #aS@PAGEOFF ; "%s"
.text:0000000000011174                 ADD             X3, X3, #aVendorSamsungF_25@PAGEOFF ; "vendor/samsung/frameworks/av/media/libh"...
.text:0000000000011178                 BL              .__android_log_assert
.text:000000000001117C loc_1117C                               ; CODE XREF: android::HeifMuxerSec::writeSampleData(android::sp<android::ABuffer> const&,android::sp<android::AMessage> const&,long,uint)+46C↑j
.text:000000000001117C                 ADRP            X0, #aFormatFindint3_15@PAGE ; "!(format->findInt32(\"grid-rows\", &row"...
.text:0000000000011180                 ADRP            X1, #aHeifmuxersec@PAGE ; "HeifMuxerSec"
.text:0000000000011184                 ADRP            X2, #aS@PAGE ; "%s"
.text:0000000000011188                 ADRP            X3, #aVendorSamsungF_26@PAGE ; "vendor/samsung/frameworks/av/media/libh"...
.text:000000000001118C                 ADD             X0, X0, #aFormatFindint3_15@PAGEOFF ; "!(format->findInt32(\"grid-rows\", &row"...
.text:0000000000011190                 ADD             X1, X1, #aHeifmuxersec@PAGEOFF ; "HeifMuxerSec"
.text:0000000000011194                 ADD             X2, X2, #aS@PAGEOFF ; "%s"
.text:0000000000011198                 ADD             X3, X3, #aVendorSamsungF_26@PAGEOFF ; "vendor/samsung/frameworks/av/media/libh"...
.text:000000000001119C                 BL              .__android_log_assert
.text:00000000000111A0 loc_111A0                               ; CODE XREF: android::HeifMuxerSec::writeSampleData(android::sp<android::ABuffer> const&,android::sp<android::AMessage> const&,long,uint)+484↑j
.text:00000000000111A0                 ADRP            X0, #aFormatFindint3_16@PAGE ; "!(format->findInt32(\"grid-columns\", &"...
.text:00000000000111A4                 ADRP            X1, #aHeifmuxersec@PAGE ; "HeifMuxerSec"
.text:00000000000111A8                 ADRP            X2, #aS@PAGE ; "%s"
.text:00000000000111AC                 ADRP            X3, #aVendorSamsungF_27@PAGE ; "vendor/samsung/frameworks/av/media/libh"...
.text:00000000000111B0                 ADD             X0, X0, #aFormatFindint3_16@PAGEOFF ; "!(format->findInt32(\"grid-columns\", &"...
.text:00000000000111B4                 ADD             X1, X1, #aHeifmuxersec@PAGEOFF ; "HeifMuxerSec"
.text:00000000000111B8                 ADD             X2, X2, #aS@PAGEOFF ; "%s"
.text:00000000000111BC                 ADD             X3, X3, #aVendorSamsungF_27@PAGEOFF ; "vendor/samsung/frameworks/av/media/libh"...
.text:00000000000111C0                 BL              .__android_log_assert
.text:00000000000111C4 loc_111C4                               ; CODE XREF: android::HeifMuxerSec::writeSampleData(android::sp<android::ABuffer> const&,android::sp<android::AMessage> const&,long,uint)+49C↑j
.text:00000000000111C4                 ADRP            X0, #aFormatFindint3_17@PAGE ; "!(format->findInt32(\"grid-size\", &gri"...
.text:00000000000111C8                 ADRP            X1, #aHeifmuxersec@PAGE ; "HeifMuxerSec"
.text:00000000000111CC                 ADRP            X2, #aS@PAGE ; "%s"
.text:00000000000111D0                 ADRP            X3, #aVendorSamsungF_28@PAGE ; "vendor/samsung/frameworks/av/media/libh"...
.text:00000000000111D4                 ADD             X0, X0, #aFormatFindint3_17@PAGEOFF ; "!(format->findInt32(\"grid-size\", &gri"...
.text:00000000000111D8                 ADD             X1, X1, #aHeifmuxersec@PAGEOFF ; "HeifMuxerSec"
.text:00000000000111DC                 ADD             X2, X2, #aS@PAGEOFF ; "%s"
.text:00000000000111E0                 ADD             X3, X3, #aVendorSamsungF_28@PAGEOFF ; "vendor/samsung/frameworks/av/media/libh"...
.text:00000000000111E4                 BL              .__android_log_assert
.text:00000000000111E4 ; } // starts at 10958
.text:00000000000111E4 ; End of function android::HeifMuxerSec::writeSampleData(android::sp<android::ABuffer> const&,android::sp<android::AMessage> const&,long,uint)
.text:00000000000111E8 ; =============== S U B R O U T I N E =======================================
.text:00000000000111E8 ; Attributes: bp-based frame
.text:00000000000111E8 sub_111E8                               ; CODE XREF: android::HeifMuxerSec::writeSampleData(android::sp<android::ABuffer> const&,android::sp<android::AMessage> const&,long,uint)+394↑p
.text:00000000000111E8                                         ; android::HeifMuxerSec::writeSampleData(android::sp<android::ABuffer> const&,android::sp<android::AMessage> const&,long,uint)+5C8↑p
.text:00000000000111E8 var_20          = -0x20
.text:00000000000111E8 var_10          = -0x10
.text:00000000000111E8 var_s0          =  0
.text:00000000000111E8 ; __unwind {
.text:00000000000111E8                 STR             X21, [SP,#-0x10+var_20]!
.text:00000000000111EC                 STP             X20, X19, [SP,#0x20+var_10]
.text:00000000000111F0                 STP             X29, X30, [SP,#0x20+var_s0]
.text:00000000000111F4                 ADD             X29, SP, #0x20
.text:00000000000111F8                 LDR             W8, [X0]
.text:00000000000111FC                 MOV             X19, X0
.text:0000000000011200                 CMP             W8, #1
.text:0000000000011204                 B.LT            loc_11228
.text:0000000000011208                 MOV             X20, XZR
.text:000000000001120C                 ADD             X21, X19, #0x18
.text:0000000000011210 loc_11210                               ; CODE XREF: sub_111E8+3C↓j
.text:0000000000011210                 LDR             X0, [X21,X20,LSL#3] ; ptr
.text:0000000000011214                 BL              .free
.text:0000000000011218                 LDRSW           X8, [X19]
.text:000000000001121C                 ADD             X20, X20, #1
.text:0000000000011220                 CMP             X20, X8
.text:0000000000011224                 B.LT            loc_11210
.text:0000000000011228 loc_11228                               ; CODE XREF: sub_111E8+1C↑j
.text:0000000000011228                 LDR             W8, [X19,#0x38]
.text:000000000001122C                 CMP             W8, #1
.text:0000000000011230                 B.LT            loc_11254
.text:0000000000011234                 MOV             X20, XZR
.text:0000000000011238                 ADD             X21, X19, #0x50 ; 'P'
.text:000000000001123C loc_1123C                               ; CODE XREF: sub_111E8+68↓j
.text:000000000001123C                 LDR             X0, [X21,X20,LSL#3] ; ptr
.text:0000000000011240                 BL              .free
.text:0000000000011244                 LDRSW           X8, [X19,#0x38]
.text:0000000000011248                 ADD             X20, X20, #1
.text:000000000001124C                 CMP             X20, X8
.text:0000000000011250                 B.LT            loc_1123C
.text:0000000000011254 loc_11254                               ; CODE XREF: sub_111E8+48↑j
.text:0000000000011254                 LDR             W8, [X19,#0x70]
.text:0000000000011258                 CMP             W8, #1
.text:000000000001125C                 B.LT            loc_11280
.text:0000000000011260                 MOV             X20, XZR
.text:0000000000011264                 ADD             X21, X19, #0x88
.text:0000000000011268 loc_11268                               ; CODE XREF: sub_111E8+94↓j
.text:0000000000011268                 LDR             X0, [X21,X20,LSL#3] ; ptr
.text:000000000001126C                 BL              .free
.text:0000000000011270                 LDRSW           X8, [X19,#0x70]
.text:0000000000011274                 ADD             X20, X20, #1
.text:0000000000011278                 CMP             X20, X8
.text:000000000001127C                 B.LT            loc_11268
.text:0000000000011280 loc_11280                               ; CODE XREF: sub_111E8+74↑j
.text:0000000000011280                 MOVI            V0.2D, #0
.text:0000000000011284                 STR             XZR, [X19,#0xA0]
.text:0000000000011288                 STP             Q0, Q0, [X19,#0x80]
.text:000000000001128C                 STP             Q0, Q0, [X19,#0x60]
.text:0000000000011290                 STP             Q0, Q0, [X19,#0x40]
.text:0000000000011294                 STP             Q0, Q0, [X19,#0x20]
.text:0000000000011298                 STP             Q0, Q0, [X19]
.text:000000000001129C                 LDP             X29, X30, [SP,#0x20+var_s0]
.text:00000000000112A0                 LDP             X20, X19, [SP,#0x20+var_10]
.text:00000000000112A4                 LDR             X21, [SP+0x20+var_20],#0x30
.text:00000000000112A8                 RET
.text:00000000000112A8 ; } // starts at 111E8
.text:00000000000112A8 ; End of function sub_111E8
.text:00000000000112A8 ; ---------------------------------------------------------------------------
.text:00000000000112AC                 ALIGN 0x10
.text:00000000000112B0 ; =============== S U B R O U T I N E =======================================
.text:00000000000112B0 ; Attributes: bp-based frame
.text:00000000000112B0 ; __int64 __fastcall android::HeifMuxerAndroid::HeifMuxerAndroid(android::HeifMuxerAndroid *__hidden this)
.text:00000000000112B0                 EXPORT _ZN7android16HeifMuxerAndroidC2Ev
.text:00000000000112B0 _ZN7android16HeifMuxerAndroidC2Ev       ; CODE XREF: android::HeifMuxerAndroid::HeifMuxerAndroid(void)+C↓j
.text:00000000000112B0                                         ; DATA XREF: LOAD:0000000000001860↑o ...
.text:00000000000112B0 var_10          = -0x10
.text:00000000000112B0 var_s0          =  0
.text:00000000000112B0 ; __unwind {
.text:00000000000112B0                 STR             X19, [SP,#-0x10+var_10]!
.text:00000000000112B4                 STP             X29, X30, [SP,#0x10+var_s0]
.text:00000000000112B8                 ADD             X29, SP, #0x10
.text:00000000000112BC                 MOV             X19, X0
.text:00000000000112C0                 BL              ._ZN7android13HeifMuxerBaseC2Ev ; android::HeifMuxerBase::HeifMuxerBase(void)
.text:00000000000112C4                 ADRP            X8, #_ZTVN7android16HeifMuxerAndroidE_ptr@PAGE
.text:00000000000112C8                 LDR             X8, [X8,#_ZTVN7android16HeifMuxerAndroidE_ptr@PAGEOFF]
.text:00000000000112CC                 ADD             X8, X8, #0x10
.text:00000000000112D0                 STR             X8, [X19]
.text:00000000000112D4                 LDP             X29, X30, [SP,#0x10+var_s0]
.text:00000000000112D8                 LDR             X19, [SP+0x10+var_10],#0x20
.text:00000000000112DC                 RET
.text:00000000000112DC ; } // starts at 112B0
.text:00000000000112DC ; End of function android::HeifMuxerAndroid::HeifMuxerAndroid(void)
.text:00000000000112E0 ; =============== S U B R O U T I N E =======================================
.text:00000000000112E0 ; void __fastcall android::HeifMuxerAndroid::~HeifMuxerAndroid(android::HeifMuxerAndroid *__hidden this)
.text:00000000000112E0                 EXPORT _ZN7android16HeifMuxerAndroidD2Ev
.text:00000000000112E0 _ZN7android16HeifMuxerAndroidD2Ev       ; DATA XREF: LOAD:00000000000010F8↑o
.text:00000000000112E0                                         ; LOAD:0000000000001878↑o ...
.text:00000000000112E0 ; __unwind {
.text:00000000000112E0                 B               ._ZN7android13HeifMuxerBaseD2Ev ; android::HeifMuxerBase::~HeifMuxerBase()
.text:00000000000112E0 ; } // starts at 112E0
.text:00000000000112E0 ; End of function android::HeifMuxerAndroid::~HeifMuxerAndroid()
.text:00000000000112E0 ; ---------------------------------------------------------------------------
.text:00000000000112E4                 ALIGN 8
.text:00000000000112E8 ; =============== S U B R O U T I N E =======================================
.text:00000000000112E8 ; Attributes: bp-based frame
.text:00000000000112E8 ; void __fastcall android::HeifMuxerAndroid::~HeifMuxerAndroid(android::HeifMuxerAndroid *__hidden this)
.text:00000000000112E8                 EXPORT _ZN7android16HeifMuxerAndroidD0Ev
.text:00000000000112E8 _ZN7android16HeifMuxerAndroidD0Ev       ; DATA XREF: LOAD:0000000000001D28↑o
.text:00000000000112E8                                         ; .data.rel.ro:000000000001D230↓o
.text:00000000000112E8 var_10          = -0x10
.text:00000000000112E8 var_s0          =  0
.text:00000000000112E8 ; __unwind {
.text:00000000000112E8                 STR             X19, [SP,#-0x10+var_10]!
.text:00000000000112EC                 STP             X29, X30, [SP,#0x10+var_s0]
.text:00000000000112F0                 ADD             X29, SP, #0x10
.text:00000000000112F4                 MOV             X19, X0
.text:00000000000112F8                 BL              ._ZN7android13HeifMuxerBaseD2Ev ; android::HeifMuxerBase::~HeifMuxerBase()
.text:00000000000112FC                 LDP             X29, X30, [SP,#0x10+var_s0]
.text:0000000000011300                 MOV             X0, X19 ; void *
.text:0000000000011304                 LDR             X19, [SP+0x10+var_10],#0x20
.text:0000000000011308                 B               ._ZdlPv ; operator delete(void *)
.text:0000000000011308 ; } // starts at 112E8
.text:0000000000011308 ; End of function android::HeifMuxerAndroid::~HeifMuxerAndroid()
.text:0000000000011308 ; ---------------------------------------------------------------------------
.text:000000000001130C                 ALIGN 0x10
.text:0000000000011310 ; =============== S U B R O U T I N E =======================================
.text:0000000000011310 ; android::HeifMuxerAndroid::start(android::sp<android::AMessage> const&)
.text:0000000000011310                 EXPORT _ZN7android16HeifMuxerAndroid5startERKNS_2spINS_8AMessageEEE
.text:0000000000011310 _ZN7android16HeifMuxerAndroid5startERKNS_2spINS_8AMessageEEE
.text:0000000000011310                                         ; DATA XREF: LOAD:00000000000011D0↑o
.text:0000000000011310                                         ; .data.rel.ro:000000000001D258↓o
.text:0000000000011310 ; __unwind {
.text:0000000000011310                 MOV             W0, WZR
.text:0000000000011314                 RET
.text:0000000000011314 ; } // starts at 11310
.text:0000000000011314 ; End of function android::HeifMuxerAndroid::start(android::sp<android::AMessage> const&)
.text:0000000000011318 ; =============== S U B R O U T I N E =======================================
.text:0000000000011318 ; android::HeifMuxerAndroid::setExtraInfo(android::sp<android::AMessage> const&)
.text:0000000000011318                 EXPORT _ZN7android16HeifMuxerAndroid12setExtraInfoERKNS_2spINS_8AMessageEEE
.text:0000000000011318 _ZN7android16HeifMuxerAndroid12setExtraInfoERKNS_2spINS_8AMessageEEE
.text:0000000000011318                                         ; DATA XREF: LOAD:00000000000017A0↑o
.text:0000000000011318                                         ; .data.rel.ro:000000000001D260↓o
.text:0000000000011318 ; __unwind {
.text:0000000000011318                 MOV             W0, WZR
.text:000000000001131C                 RET
.text:000000000001131C ; } // starts at 11318
.text:000000000001131C ; End of function android::HeifMuxerAndroid::setExtraInfo(android::sp<android::AMessage> const&)
.text:0000000000011320 ; =============== S U B R O U T I N E =======================================
.text:0000000000011320 ; __int64 __fastcall android::HeifMuxerAndroid::stop(android::HeifMuxerAndroid *__hidden this)
.text:0000000000011320                 EXPORT _ZN7android16HeifMuxerAndroid4stopEv
.text:0000000000011320 _ZN7android16HeifMuxerAndroid4stopEv    ; DATA XREF: LOAD:00000000000015C0↑o
.text:0000000000011320                                         ; .data.rel.ro:000000000001D268↓o
.text:0000000000011320 ; __unwind {
.text:0000000000011320                 MOV             W0, WZR
.text:0000000000011324                 RET
.text:0000000000011324 ; } // starts at 11320
.text:0000000000011324 ; End of function android::HeifMuxerAndroid::stop(void)
.text:0000000000011328 ; =============== S U B R O U T I N E =======================================
.text:0000000000011328 ; android::HeifMuxerAndroid::writeSampleData(android::sp<android::ABuffer> const&, long, unsigned int)
.text:0000000000011328                 EXPORT _ZN7android16HeifMuxerAndroid15writeSampleDataERKNS_2spINS_7ABufferEEElj
.text:0000000000011328 _ZN7android16HeifMuxerAndroid15writeSampleDataERKNS_2spINS_7ABufferEEElj
.text:0000000000011328                                         ; DATA XREF: LOAD:00000000000015F0↑o
.text:0000000000011328                                         ; .data.rel.ro:000000000001D270↓o
.text:0000000000011328 ; __unwind {
.text:0000000000011328                 MOV             W0, WZR
.text:000000000001132C                 RET
.text:000000000001132C ; } // starts at 11328
.text:000000000001132C ; End of function android::HeifMuxerAndroid::writeSampleData(android::sp<android::ABuffer> const&,long,uint)
.text:0000000000011330 ; =============== S U B R O U T I N E =======================================
.text:0000000000011330 ; android::HeifMuxerAndroid::writeSampleData(android::sp<android::ABuffer> const&, android::sp<android::AMessage> const&, long, unsigned int)
.text:0000000000011330                 EXPORT _ZN7android16HeifMuxerAndroid15writeSampleDataERKNS_2spINS_7ABufferEEERKNS1_INS_8AMessageEEElj
.text:0000000000011330 _ZN7android16HeifMuxerAndroid15writeSampleDataERKNS_2spINS_7ABufferEEERKNS1_INS_8AMessageEEElj
.text:0000000000011330                                         ; DATA XREF: LOAD:0000000000001320↑o
.text:0000000000011330                                         ; .data.rel.ro:000000000001D278↓o
.text:0000000000011330 ; __unwind {
.text:0000000000011330                 MOV             W0, WZR
.text:0000000000011334                 RET
.text:0000000000011334 ; } // starts at 11330
.text:0000000000011334 ; End of function android::HeifMuxerAndroid::writeSampleData(android::sp<android::ABuffer> const&,android::sp<android::AMessage> const&,long,uint)
.text:0000000000011338 ; =============== S U B R O U T I N E =======================================
.text:0000000000011338 ; Attributes: bp-based frame
.text:0000000000011338 ; android::HeifCaptureImage::HeifCaptureImage(android::Role, int, int, int, int, int, int, void *, int, void *, int)
.text:0000000000011338                 EXPORT _ZN7android16HeifCaptureImageC2ENS_4RoleEiiiiiiPviS2_i
.text:0000000000011338 _ZN7android16HeifCaptureImageC2ENS_4RoleEiiiiiiPviS2_i
.text:0000000000011338                                         ; CODE XREF: android::HeifCaptureImage::HeifCaptureImage(android::Role,int,int,int,int,int,int,void *,int,void *,int)+C↓j
.text:0000000000011338                                         ; DATA XREF: LOAD:0000000000001380↑o ...
.text:0000000000011338 var_60          = -0x60
.text:0000000000011338 var_54          = -0x54
.text:0000000000011338 var_50          = -0x50
.text:0000000000011338 var_40          = -0x40
.text:0000000000011338 var_30          = -0x30
.text:0000000000011338 var_20          = -0x20
.text:0000000000011338 var_10          = -0x10
.text:0000000000011338 var_s0          =  0
.text:0000000000011338 arg_0           =  0x10
.text:0000000000011338 arg_8           =  0x18
.text:0000000000011338 arg_10          =  0x20
.text:0000000000011338 arg_18          =  0x28
.text:0000000000011338 ; __unwind {
.text:0000000000011338                 SUB             SP, SP, #0x70
.text:000000000001133C                 STP             X28, X27, [SP,#0x60+var_50]
.text:0000000000011340                 STP             X26, X25, [SP,#0x60+var_40]
.text:0000000000011344                 STP             X24, X23, [SP,#0x60+var_30]
.text:0000000000011348                 STP             X22, X21, [SP,#0x60+var_20]
.text:000000000001134C                 STP             X20, X19, [SP,#0x60+var_10]
.text:0000000000011350                 STP             X29, X30, [SP,#0x60+var_s0]
.text:0000000000011354                 ADD             X29, SP, #0x60
.text:0000000000011358                 LDR             W8, [X29,#arg_18]
.text:000000000001135C                 MOV             W19, W7
.text:0000000000011360                 LDR             W27, [X29,#arg_8]
.text:0000000000011364                 MOV             W20, W6
.text:0000000000011368                 LDR             X28, [X29,#arg_0]
.text:000000000001136C                 MOV             W21, W5
.text:0000000000011370                 MOV             W22, W4
.text:0000000000011374                 STR             W8, [SP,#0x60+var_54]
.text:0000000000011378                 MOV             W23, W3
.text:000000000001137C                 LDR             X8, [X29,#arg_10]
.text:0000000000011380                 MOV             W24, W2
.text:0000000000011384                 MOV             W25, W1
.text:0000000000011388                 MOV             X26, X0
.text:000000000001138C                 STR             X8, [SP,#0x60+var_60]
.text:0000000000011390                 BL              ._ZN7android7RefBaseC2Ev ; android::RefBase::RefBase(void)
.text:0000000000011394                 ADRP            X8, #_ZTVN7android16HeifCaptureImageE_ptr@PAGE
.text:0000000000011398                 MOV             W9, #0xFFFFFFFF
.text:000000000001139C                 LDR             X8, [X8,#_ZTVN7android16HeifCaptureImageE_ptr@PAGEOFF]
.text:00000000000113A0                 STP             W24, W23, [X26,#0x18]
.text:00000000000113A4                 STP             W22, W21, [X26,#0x20]
.text:00000000000113A8                 STP             W9, W25, [X26,#0x10]
.text:00000000000113AC                 ADD             X8, X8, #0x10
.text:00000000000113B0                 STP             W20, W19, [X26,#0x28]
.text:00000000000113B4                 STR             X28, [X26,#0x30]
.text:00000000000113B8                 STR             W27, [X26,#0x38]
.text:00000000000113BC                 STR             X8, [X26]
.text:00000000000113C0                 LDR             X8, [SP,#0x60+var_60]
.text:00000000000113C4                 STR             X8, [X26,#0x40]
.text:00000000000113C8                 LDR             W8, [SP,#0x60+var_54]
.text:00000000000113CC                 STR             W8, [X26,#0x48]
.text:00000000000113D0                 LDP             X29, X30, [SP,#0x60+var_s0]
.text:00000000000113D4                 LDP             X20, X19, [SP,#0x60+var_10]
.text:00000000000113D8                 LDP             X22, X21, [SP,#0x60+var_20]
.text:00000000000113DC                 LDP             X24, X23, [SP,#0x60+var_30]
.text:00000000000113E0                 LDP             X26, X25, [SP,#0x60+var_40]
.text:00000000000113E4                 LDP             X28, X27, [SP,#0x60+var_50]
.text:00000000000113E8                 ADD             SP, SP, #0x70 ; 'p'
.text:00000000000113EC                 RET
.text:00000000000113EC ; } // starts at 11338
.text:00000000000113EC ; End of function android::HeifCaptureImage::HeifCaptureImage(android::Role,int,int,int,int,int,int,void *,int,void *,int)
.text:00000000000113F0 ; =============== S U B R O U T I N E =======================================
.text:00000000000113F0 ; void __fastcall android::HeifCaptureImage::~HeifCaptureImage(android::HeifCaptureImage *__hidden this)
.text:00000000000113F0                 EXPORT _ZN7android16HeifCaptureImageD2Ev
.text:00000000000113F0 _ZN7android16HeifCaptureImageD2Ev       ; DATA XREF: LOAD:00000000000018D8↑o
.text:00000000000113F0                                         ; LOAD:0000000000001E60↑o ...
.text:00000000000113F0 ; __unwind {
.text:00000000000113F0                 ADRP            X8, #_ZTVN7android16HeifCaptureImageE_ptr@PAGE
.text:00000000000113F4                 LDR             X8, [X8,#_ZTVN7android16HeifCaptureImageE_ptr@PAGEOFF]
.text:00000000000113F8                 ADD             X8, X8, #0x10
.text:00000000000113FC                 STR             X8, [X0]
.text:0000000000011400                 B               ._ZN7android7RefBaseD2Ev ; android::RefBase::~RefBase()
.text:0000000000011400 ; } // starts at 113F0
.text:0000000000011400 ; End of function android::HeifCaptureImage::~HeifCaptureImage()
.text:0000000000011400 ; ---------------------------------------------------------------------------
.text:0000000000011404                 ALIGN 8
.text:0000000000011408 ; =============== S U B R O U T I N E =======================================
.text:0000000000011408 ; Attributes: bp-based frame
.text:0000000000011408 ; void __fastcall android::HeifCaptureImage::~HeifCaptureImage(android::HeifCaptureImage *__hidden this)
.text:0000000000011408                 EXPORT _ZN7android16HeifCaptureImageD0Ev
.text:0000000000011408 _ZN7android16HeifCaptureImageD0Ev       ; DATA XREF: LOAD:0000000000001170↑o
.text:0000000000011408                                         ; .data.rel.ro:000000000001D298↓o
.text:0000000000011408 var_10          = -0x10
.text:0000000000011408 var_s0          =  0
.text:0000000000011408 ; __unwind {
.text:0000000000011408                 STR             X19, [SP,#-0x10+var_10]!
.text:000000000001140C                 STP             X29, X30, [SP,#0x10+var_s0]
.text:0000000000011410                 ADD             X29, SP, #0x10
.text:0000000000011414                 ADRP            X8, #_ZTVN7android16HeifCaptureImageE_ptr@PAGE
.text:0000000000011418                 MOV             X19, X0
.text:000000000001141C                 LDR             X8, [X8,#_ZTVN7android16HeifCaptureImageE_ptr@PAGEOFF]
.text:0000000000011420                 ADD             X8, X8, #0x10
.text:0000000000011424                 STR             X8, [X0]
.text:0000000000011428                 BL              ._ZN7android7RefBaseD2Ev ; android::RefBase::~RefBase()
.text:000000000001142C                 LDP             X29, X30, [SP,#0x10+var_s0]
.text:0000000000011430                 MOV             X0, X19 ; void *
.text:0000000000011434                 LDR             X19, [SP+0x10+var_10],#0x20
.text:0000000000011438                 B               ._ZdlPv ; operator delete(void *)
.text:0000000000011438 ; } // starts at 11408
.text:0000000000011438 ; End of function android::HeifCaptureImage::~HeifCaptureImage()
.text:0000000000011438 ; ---------------------------------------------------------------------------
.text:000000000001143C                 ALIGN 0x20
.text:0000000000011440 ; =============== S U B R O U T I N E =======================================
.text:0000000000011440 ; Attributes: bp-based frame
.text:0000000000011440 ; __int64 __fastcall android::HeifCaptureImageBuilder::HeifCaptureImageBuilder(android::HeifCaptureImageBuilder *__hidden this)
.text:0000000000011440                 EXPORT _ZN7android23HeifCaptureImageBuilderC2Ev
.text:0000000000011440 _ZN7android23HeifCaptureImageBuilderC2Ev
.text:0000000000011440                                         ; CODE XREF: android::HeifCaptureImageBuilder::HeifCaptureImageBuilder(void)+C↓j
.text:0000000000011440                                         ; DATA XREF: LOAD:00000000000019F8↑o ...
.text:0000000000011440 var_10          = -0x10
.text:0000000000011440 var_s0          =  0
.text:0000000000011440 ; __unwind {
.text:0000000000011440                 STP             X20, X19, [SP,#-0x10+var_10]!
.text:0000000000011444                 STP             X29, X30, [SP,#0x10+var_s0]
.text:0000000000011448                 ADD             X29, SP, #0x10
.text:000000000001144C                 MOV             X19, X0
.text:0000000000011450                 BL              ._ZN7android7RefBaseC2Ev ; android::RefBase::RefBase(void)
.text:0000000000011454                 ADRP            X8, #_ZTVN7android23HeifCaptureImageBuilderE_ptr@PAGE
.text:0000000000011458                 ADD             X20, X19, #0x28 ; '('
.text:000000000001145C                 MOV             X0, X20 ; this
.text:0000000000011460                 LDR             X8, [X8,#_ZTVN7android23HeifCaptureImageBuilderE_ptr@PAGEOFF]
.text:0000000000011464                 MOV             W1, #8  ; unsigned __int64
.text:0000000000011468                 MOV             W2, WZR ; unsigned int
.text:000000000001146C                 ADD             X8, X8, #0x10
.text:0000000000011470                 STR             X8, [X19]
.text:0000000000011474                 BL              ._ZN7android10VectorImplC2Emj ; android::VectorImpl::VectorImpl(ulong,uint)
.text:0000000000011478                 ADRP            X8, #_ZTVN7android6VectorINS_2spINS_16HeifCaptureImageEEEEE_ptr@PAGE
.text:000000000001147C                 MOV             W9, #1
.text:0000000000011480                 MOV             W10, #0xFFFFFFFF
.text:0000000000011484                 LDR             X8, [X8,#_ZTVN7android6VectorINS_2spINS_16HeifCaptureImageEEEEE_ptr@PAGEOFF]
.text:0000000000011488                 MOV             X0, X20 ; this
.text:000000000001148C                 STR             XZR, [X19,#0x18]
.text:0000000000011490                 STR             W9, [X19,#0x10]
.text:0000000000011494                 STR             W10, [X19,#0x20]
.text:0000000000011498                 ADD             X8, X8, #0x10
.text:000000000001149C                 STR             X8, [X19,#0x28]
.text:00000000000114A0                 LDP             X29, X30, [SP,#0x10+var_s0]
.text:00000000000114A4                 LDP             X20, X19, [SP+0x10+var_10],#0x20
.text:00000000000114A8                 B               ._ZN7android10VectorImpl5clearEv ; android::VectorImpl::clear(void)
.text:00000000000114A8 ; } // starts at 11440
.text:00000000000114A8 ; End of function android::HeifCaptureImageBuilder::HeifCaptureImageBuilder(void)
.text:00000000000114A8 ; ---------------------------------------------------------------------------
.text:00000000000114AC                 ALIGN 0x10
.text:00000000000114B0 ; =============== S U B R O U T I N E =======================================
.text:00000000000114B0 ; Attributes: bp-based frame
.text:00000000000114B0 ; void __fastcall android::HeifCaptureImageBuilder::~HeifCaptureImageBuilder(android::HeifCaptureImageBuilder *__hidden this)
.text:00000000000114B0                 EXPORT _ZN7android23HeifCaptureImageBuilderD2Ev
.text:00000000000114B0 _ZN7android23HeifCaptureImageBuilderD2Ev
.text:00000000000114B0                                         ; DATA XREF: LOAD:00000000000013B0↑o
.text:00000000000114B0                                         ; LOAD:0000000000001A28↑o ...
.text:00000000000114B0 var_10          = -0x10
.text:00000000000114B0 var_s0          =  0
.text:00000000000114B0 ; __unwind {
.text:00000000000114B0                 STP             X20, X19, [SP,#-0x10+var_10]!
.text:00000000000114B4                 STP             X29, X30, [SP,#0x10+var_s0]
.text:00000000000114B8                 ADD             X29, SP, #0x10
.text:00000000000114BC                 ADRP            X8, #_ZTVN7android23HeifCaptureImageBuilderE_ptr@PAGE
.text:00000000000114C0                 MOV             X20, X0
.text:00000000000114C4                 MOV             X19, X0
.text:00000000000114C8                 LDR             X8, [X8,#_ZTVN7android23HeifCaptureImageBuilderE_ptr@PAGEOFF]
.text:00000000000114CC                 ADD             X8, X8, #0x10
.text:00000000000114D0                 STR             X8, [X20],#0x28
.text:00000000000114D4                 MOV             X0, X20 ; this
.text:00000000000114D8                 BL              ._ZN7android10VectorImpl5clearEv ; android::VectorImpl::clear(void)
.text:00000000000114DC                 ADRP            X8, #_ZTVN7android6VectorINS_2spINS_16HeifCaptureImageEEEEE_ptr@PAGE
.text:00000000000114E0                 MOV             X0, X20 ; this
.text:00000000000114E4                 LDR             X8, [X8,#_ZTVN7android6VectorINS_2spINS_16HeifCaptureImageEEEEE_ptr@PAGEOFF]
.text:00000000000114E8                 ADD             X8, X8, #0x10
.text:00000000000114EC                 STR             X8, [X20]
.text:00000000000114F0                 BL              ._ZN7android10VectorImpl13finish_vectorEv ; android::VectorImpl::finish_vector(void)
.text:00000000000114F4                 MOV             X0, X20 ; this
.text:00000000000114F8                 BL              ._ZN7android10VectorImplD2Ev ; android::VectorImpl::~VectorImpl()
.text:00000000000114FC                 LDP             X29, X30, [SP,#0x10+var_s0]
.text:0000000000011500                 MOV             X0, X19 ; this
.text:0000000000011504                 LDP             X20, X19, [SP+0x10+var_10],#0x20
.text:0000000000011508                 B               ._ZN7android7RefBaseD2Ev ; android::RefBase::~RefBase()
.text:0000000000011508 ; } // starts at 114B0
.text:0000000000011508 ; End of function android::HeifCaptureImageBuilder::~HeifCaptureImageBuilder()
.text:0000000000011508 ; ---------------------------------------------------------------------------
.text:000000000001150C                 ALIGN 0x10
.text:0000000000011510 ; __unwind {
.text:0000000000011510                 STR             X19, [SP,#-0x20]!
.text:0000000000011514                 STP             X29, X30, [SP,#0x10]
.text:0000000000011518                 ADD             X29, SP, #0x10
.text:000000000001151C                 ADRP            X8, #_ZTVN7android6VectorINS_2spINS_16HeifCaptureImageEEEEE_ptr@PAGE
.text:0000000000011520                 MOV             X19, X0
.text:0000000000011524                 LDR             X8, [X8,#_ZTVN7android6VectorINS_2spINS_16HeifCaptureImageEEEEE_ptr@PAGEOFF]
.text:0000000000011528                 ADD             X8, X8, #0x10
.text:000000000001152C                 STR             X8, [X0]
.text:0000000000011530                 BL              ._ZN7android10VectorImpl13finish_vectorEv ; android::VectorImpl::finish_vector(void)
.text:0000000000011534                 LDP             X29, X30, [SP,#0x10]
.text:0000000000011538                 MOV             X0, X19
.text:000000000001153C                 LDR             X19, [SP],#0x20
.text:0000000000011540                 B               ._ZN7android10VectorImplD2Ev ; android::VectorImpl::~VectorImpl()
.text:0000000000011540 ; } // starts at 11510
.text:0000000000011540 ; ---------------------------------------------------------------------------
.text:0000000000011544                 ALIGN 8
.text:0000000000011548 ; =============== S U B R O U T I N E =======================================
.text:0000000000011548 ; Attributes: bp-based frame
.text:0000000000011548 ; void __fastcall android::HeifCaptureImageBuilder::~HeifCaptureImageBuilder(android::HeifCaptureImageBuilder *__hidden this)
.text:0000000000011548                 EXPORT _ZN7android23HeifCaptureImageBuilderD0Ev
.text:0000000000011548 _ZN7android23HeifCaptureImageBuilderD0Ev
.text:0000000000011548                                         ; DATA XREF: LOAD:0000000000001F38↑o
.text:0000000000011548                                         ; .data.rel.ro:000000000001D2D8↓o
.text:0000000000011548 var_10          = -0x10
.text:0000000000011548 var_s0          =  0
.text:0000000000011548 ; __unwind {
.text:0000000000011548                 STP             X20, X19, [SP,#-0x10+var_10]!
.text:000000000001154C                 STP             X29, X30, [SP,#0x10+var_s0]
.text:0000000000011550                 ADD             X29, SP, #0x10
.text:0000000000011554                 ADRP            X8, #_ZTVN7android23HeifCaptureImageBuilderE_ptr@PAGE
.text:0000000000011558                 MOV             X20, X0
.text:000000000001155C                 MOV             X19, X0
.text:0000000000011560                 LDR             X8, [X8,#_ZTVN7android23HeifCaptureImageBuilderE_ptr@PAGEOFF]
.text:0000000000011564                 ADD             X8, X8, #0x10
.text:0000000000011568                 STR             X8, [X20],#0x28
.text:000000000001156C                 MOV             X0, X20 ; this
.text:0000000000011570                 BL              ._ZN7android10VectorImpl5clearEv ; android::VectorImpl::clear(void)
.text:0000000000011574                 ADRP            X8, #_ZTVN7android6VectorINS_2spINS_16HeifCaptureImageEEEEE_ptr@PAGE
.text:0000000000011578                 MOV             X0, X20 ; this
.text:000000000001157C                 LDR             X8, [X8,#_ZTVN7android6VectorINS_2spINS_16HeifCaptureImageEEEEE_ptr@PAGEOFF]
.text:0000000000011580                 ADD             X8, X8, #0x10
.text:0000000000011584                 STR             X8, [X20]
.text:0000000000011588                 BL              ._ZN7android10VectorImpl13finish_vectorEv ; android::VectorImpl::finish_vector(void)
.text:000000000001158C                 MOV             X0, X20 ; this
.text:0000000000011590                 BL              ._ZN7android10VectorImplD2Ev ; android::VectorImpl::~VectorImpl()
.text:0000000000011594                 MOV             X0, X19 ; this
.text:0000000000011598                 BL              ._ZN7android7RefBaseD2Ev ; android::RefBase::~RefBase()
.text:000000000001159C                 LDP             X29, X30, [SP,#0x10+var_s0]
.text:00000000000115A0                 MOV             X0, X19 ; void *
.text:00000000000115A4                 LDP             X20, X19, [SP+0x10+var_10],#0x20
.text:00000000000115A8                 B               ._ZdlPv ; operator delete(void *)
.text:00000000000115A8 ; } // starts at 11548
.text:00000000000115A8 ; End of function android::HeifCaptureImageBuilder::~HeifCaptureImageBuilder()
.text:00000000000115A8 ; ---------------------------------------------------------------------------
.text:00000000000115AC                 ALIGN 0x10
.text:00000000000115B0 ; =============== S U B R O U T I N E =======================================
.text:00000000000115B0 ; Attributes: bp-based frame
.text:00000000000115B0 ; android::HeifCaptureImageBuilder::addCover(android::sp<android::HeifCaptureImage> const&)
.text:00000000000115B0                 EXPORT _ZN7android23HeifCaptureImageBuilder8addCoverERKNS_2spINS_16HeifCaptureImageEEE
.text:00000000000115B0 _ZN7android23HeifCaptureImageBuilder8addCoverERKNS_2spINS_16HeifCaptureImageEEE
.text:00000000000115B0                                         ; CODE XREF: android::HeifCaptureImageBuilder::addCover(android::sp<android::HeifCaptureImage> const&)+C↓j
.text:00000000000115B0                                         ; DATA XREF: LOAD:00000000000010E0↑o ...
.text:00000000000115B0 var_s0          =  0
.text:00000000000115B0 ; __unwind {
.text:00000000000115B0                 STP             X29, X30, [SP,#-0x10+var_s0]!
.text:00000000000115B4                 MOV             X29, SP
.text:00000000000115B8                 LDR             W9, [X0,#0x10]
.text:00000000000115BC                 MOV             W3, #1  ; unsigned __int64
.text:00000000000115C0                 LDR             X8, [X1]
.text:00000000000115C4                 ADD             W10, W9, #1
.text:00000000000115C8                 STR             W10, [X0,#0x10]
.text:00000000000115CC                 STR             W9, [X8,#0x10]
.text:00000000000115D0                 LDR             X2, [X0,#0x38] ; unsigned __int64
.text:00000000000115D4                 ADD             X0, X0, #0x28 ; '(' ; this
.text:00000000000115D8                 BL              ._ZN7android10VectorImpl8insertAtEPKvmm ; android::VectorImpl::insertAt(void const*,ulong,ulong)
.text:00000000000115DC                 MOV             W0, WZR
.text:00000000000115E0                 LDP             X29, X30, [SP+var_s0],#0x10
.text:00000000000115E4                 RET
.text:00000000000115E4 ; } // starts at 115B0
.text:00000000000115E4 ; End of function android::HeifCaptureImageBuilder::addCover(android::sp<android::HeifCaptureImage> const&)
.text:00000000000115E8 ; =============== S U B R O U T I N E =======================================
.text:00000000000115E8 ; Attributes: bp-based frame
.text:00000000000115E8 ; android::HeifCaptureImageBuilder::addThumbnail(int, android::sp<android::HeifCaptureImage> const&)
.text:00000000000115E8                 EXPORT _ZN7android23HeifCaptureImageBuilder12addThumbnailEiRKNS_2spINS_16HeifCaptureImageEEE
.text:00000000000115E8 _ZN7android23HeifCaptureImageBuilder12addThumbnailEiRKNS_2spINS_16HeifCaptureImageEEE
.text:00000000000115E8                                         ; CODE XREF: android::HeifCaptureImageBuilder::addThumbnail(int,android::sp<android::HeifCaptureImage> const&)+C↓j
.text:00000000000115E8                                         ; DATA XREF: LOAD:0000000000001020↑o ...
.text:00000000000115E8 var_50          = -0x50
.text:00000000000115E8 var_48          = -0x48
.text:00000000000115E8 var_40          = -0x40
.text:00000000000115E8 var_30          = -0x30
.text:00000000000115E8 var_20          = -0x20
.text:00000000000115E8 var_10          = -0x10
.text:00000000000115E8 var_s0          =  0
.text:00000000000115E8 ; __unwind {
.text:00000000000115E8                 SUB             SP, SP, #0x60
.text:00000000000115EC                 STP             X26, X25, [SP,#0x50+var_40]
.text:00000000000115F0                 STP             X24, X23, [SP,#0x50+var_30]
.text:00000000000115F4                 STP             X22, X21, [SP,#0x50+var_20]
.text:00000000000115F8                 STP             X20, X19, [SP,#0x50+var_10]
.text:00000000000115FC                 STP             X29, X30, [SP,#0x50+var_s0]
.text:0000000000011600                 ADD             X29, SP, #0x50
.text:0000000000011604                 MRS             X25, #3, c13, c0, #2
.text:0000000000011608                 LDR             X8, [X25,#0x28]
.text:000000000001160C                 STR             X8, [SP,#0x50+var_48]
.text:0000000000011610                 LDR             X8, [X0,#0x38]
.text:0000000000011614                 CBZ             X8, loc_116C8
.text:0000000000011618                 MOV             X20, X2
.text:000000000001161C                 MOV             X21, X0
.text:0000000000011620                 MOV             W22, W1
.text:0000000000011624                 MOV             X23, XZR
.text:0000000000011628                 ADD             X24, X0, #0x28 ; '('
.text:000000000001162C                 MOV             W19, #0xFFFFFFEA
.text:0000000000011630 loc_11630                               ; CODE XREF: android::HeifCaptureImageBuilder::addThumbnail(int,android::sp<android::HeifCaptureImage> const&)+D8↓j
.text:0000000000011630                 MOV             X0, X24 ; this
.text:0000000000011634                 MOV             X1, X23 ; unsigned __int64
.text:0000000000011638                 BL              ._ZN7android10VectorImpl16editItemLocationEm ; android::VectorImpl::editItemLocation(ulong)
.text:000000000001163C                 LDR             X0, [X0] ; this
.text:0000000000011640                 STR             X0, [SP,#0x50+var_50]
.text:0000000000011644                 CBZ             X0, loc_11654
.text:0000000000011648                 MOV             X1, SP  ; void *
.text:000000000001164C                 BL              ._ZNK7android7RefBase9incStrongEPKv ; android::RefBase::incStrong(void const*)
.text:0000000000011650                 LDR             X0, [SP,#0x50+var_50] ; this
.text:0000000000011654 loc_11654                               ; CODE XREF: android::HeifCaptureImageBuilder::addThumbnail(int,android::sp<android::HeifCaptureImage> const&)+5C↑j
.text:0000000000011654                 LDR             W8, [X0,#0x10]
.text:0000000000011658                 CMP             W8, W22
.text:000000000001165C                 B.NE            loc_11698
.text:0000000000011660                 LDR             W8, [X0,#0x14]
.text:0000000000011664                 CMP             W8, #1
.text:0000000000011668                 B.NE            loc_116A4
.text:000000000001166C                 LDR             X8, [X20]
.text:0000000000011670                 ADD             X2, X23, #1 ; unsigned __int64
.text:0000000000011674                 MOV             X0, X24 ; this
.text:0000000000011678                 MOV             X1, X20 ; void *
.text:000000000001167C                 MOV             W3, #1  ; unsigned __int64
.text:0000000000011680                 STR             W22, [X8,#0x10]
.text:0000000000011684                 MOV             W26, #1
.text:0000000000011688                 BL              ._ZN7android10VectorImpl8insertAtEPKvmm ; android::VectorImpl::insertAt(void const*,ulong,ulong)
.text:000000000001168C                 LDR             X0, [SP,#0x50+var_50]
.text:0000000000011690                 CBNZ            X0, loc_116A8
.text:0000000000011694                 B               loc_116B0
.text:0000000000011698 ; ---------------------------------------------------------------------------
.text:0000000000011698 loc_11698                               ; CODE XREF: android::HeifCaptureImageBuilder::addThumbnail(int,android::sp<android::HeifCaptureImage> const&)+74↑j
.text:0000000000011698                 MOV             W26, WZR
.text:000000000001169C                 CBNZ            X0, loc_116A8
.text:00000000000116A0                 B               loc_116B0
.text:00000000000116A4 ; ---------------------------------------------------------------------------
.text:00000000000116A4 loc_116A4                               ; CODE XREF: android::HeifCaptureImageBuilder::addThumbnail(int,android::sp<android::HeifCaptureImage> const&)+80↑j
.text:00000000000116A4                 MOV             W26, WZR
.text:00000000000116A8 loc_116A8                               ; CODE XREF: android::HeifCaptureImageBuilder::addThumbnail(int,android::sp<android::HeifCaptureImage> const&)+A8↑j
.text:00000000000116A8                                         ; android::HeifCaptureImageBuilder::addThumbnail(int,android::sp<android::HeifCaptureImage> const&)+B4↑j
.text:00000000000116A8                 MOV             X1, SP  ; void *
.text:00000000000116AC                 BL              ._ZNK7android7RefBase9decStrongEPKv ; android::RefBase::decStrong(void const*)
.text:00000000000116B0 loc_116B0                               ; CODE XREF: android::HeifCaptureImageBuilder::addThumbnail(int,android::sp<android::HeifCaptureImage> const&)+AC↑j
.text:00000000000116B0                                         ; android::HeifCaptureImageBuilder::addThumbnail(int,android::sp<android::HeifCaptureImage> const&)+B8↑j
.text:00000000000116B0                 CBNZ            W26, loc_116D0
.text:00000000000116B4                 LDR             X8, [X21,#0x38]
.text:00000000000116B8                 ADD             X23, X23, #1
.text:00000000000116BC                 CMP             X23, X8
.text:00000000000116C0                 B.CC            loc_11630
.text:00000000000116C4                 B               loc_116D4
.text:00000000000116C8 ; ---------------------------------------------------------------------------
.text:00000000000116C8 loc_116C8                               ; CODE XREF: android::HeifCaptureImageBuilder::addThumbnail(int,android::sp<android::HeifCaptureImage> const&)+2C↑j
.text:00000000000116C8                 MOV             W19, #0xFFFFFFEA
.text:00000000000116CC                 B               loc_116D4
.text:00000000000116D0 ; ---------------------------------------------------------------------------
.text:00000000000116D0 loc_116D0                               ; CODE XREF: android::HeifCaptureImageBuilder::addThumbnail(int,android::sp<android::HeifCaptureImage> const&):loc_116B0↑j
.text:00000000000116D0                 MOV             W19, WZR
.text:00000000000116D4 loc_116D4                               ; CODE XREF: android::HeifCaptureImageBuilder::addThumbnail(int,android::sp<android::HeifCaptureImage> const&)+DC↑j
.text:00000000000116D4                                         ; android::HeifCaptureImageBuilder::addThumbnail(int,android::sp<android::HeifCaptureImage> const&)+E4↑j
.text:00000000000116D4                 LDR             X8, [X25,#0x28]
.text:00000000000116D8                 LDR             X9, [SP,#0x50+var_48]
.text:00000000000116DC                 CMP             X8, X9
.text:00000000000116E0                 B.NE            loc_11704
.text:00000000000116E4                 MOV             W0, W19
.text:00000000000116E8                 LDP             X29, X30, [SP,#0x50+var_s0]
.text:00000000000116EC                 LDP             X20, X19, [SP,#0x50+var_10]
.text:00000000000116F0                 LDP             X22, X21, [SP,#0x50+var_20]
.text:00000000000116F4                 LDP             X24, X23, [SP,#0x50+var_30]
.text:00000000000116F8                 LDP             X26, X25, [SP,#0x50+var_40]
.text:00000000000116FC                 ADD             SP, SP, #0x60 ; '`'
.text:0000000000011700                 RET
.text:0000000000011704 ; ---------------------------------------------------------------------------
.text:0000000000011704 loc_11704                               ; CODE XREF: android::HeifCaptureImageBuilder::addThumbnail(int,android::sp<android::HeifCaptureImage> const&)+F8↑j
.text:0000000000011704                 BL              .__stack_chk_fail
.text:0000000000011704 ; } // starts at 115E8
.text:0000000000011704 ; End of function android::HeifCaptureImageBuilder::addThumbnail(int,android::sp<android::HeifCaptureImage> const&)
.text:0000000000011708 ; =============== S U B R O U T I N E =======================================
.text:0000000000011708 ; Attributes: bp-based frame
.text:0000000000011708 ; _QWORD __fastcall android::HeifCaptureImageBuilder::removeCover(android::HeifCaptureImageBuilder *__hidden this, int)
.text:0000000000011708                 EXPORT _ZN7android23HeifCaptureImageBuilder11removeCoverEi
.text:0000000000011708 _ZN7android23HeifCaptureImageBuilder11removeCoverEi
.text:0000000000011708                                         ; DATA XREF: LOAD:0000000000001038↑o
.text:0000000000011708 var_40          = -0x40
.text:0000000000011708 var_38          = -0x38
.text:0000000000011708 var_30          = -0x30
.text:0000000000011708 var_20          = -0x20
.text:0000000000011708 var_10          = -0x10
.text:0000000000011708 var_s0          =  0
.text:0000000000011708 ; __unwind {
.text:0000000000011708                 SUB             SP, SP, #0x50
.text:000000000001170C                 STR             X23, [SP,#0x40+var_30]
.text:0000000000011710                 STP             X22, X21, [SP,#0x40+var_20]
.text:0000000000011714                 STP             X20, X19, [SP,#0x40+var_10]
.text:0000000000011718                 STP             X29, X30, [SP,#0x40+var_s0]
.text:000000000001171C                 ADD             X29, SP, #0x40
.text:0000000000011720                 MRS             X23, #3, c13, c0, #2
.text:0000000000011724                 LDR             X8, [X23,#0x28]
.text:0000000000011728                 STR             X8, [SP,#0x40+var_38]
.text:000000000001172C                 LDR             X8, [X0,#0x38]
.text:0000000000011730                 CBZ             X8, loc_117A0
.text:0000000000011734                 MOV             X19, X0
.text:0000000000011738                 MOV             W20, W1
.text:000000000001173C                 MOV             X21, XZR
.text:0000000000011740                 ADD             X22, X0, #0x28 ; '('
.text:0000000000011744 loc_11744                               ; CODE XREF: android::HeifCaptureImageBuilder::removeCover(int)+94↓j
.text:0000000000011744                 MOV             X0, X22 ; this
.text:0000000000011748                 MOV             X1, X21 ; unsigned __int64
.text:000000000001174C                 BL              ._ZN7android10VectorImpl16editItemLocationEm ; android::VectorImpl::editItemLocation(ulong)
.text:0000000000011750                 LDR             X0, [X0] ; this
.text:0000000000011754                 MOV             X1, SP  ; void *
.text:0000000000011758                 STR             X0, [SP,#0x40+var_40]
.text:000000000001175C                 BL              ._ZNK7android7RefBase9incStrongEPKv ; android::RefBase::incStrong(void const*)
.text:0000000000011760                 LDR             X0, [SP,#0x40+var_40]
.text:0000000000011764                 LDR             W8, [X0,#0x10]
.text:0000000000011768                 CMP             W8, W20
.text:000000000001176C                 B.NE            loc_11784
.text:0000000000011770                 MOV             X0, X22 ; this
.text:0000000000011774                 MOV             X1, X21 ; unsigned __int64
.text:0000000000011778                 MOV             W2, #1  ; unsigned __int64
.text:000000000001177C                 BL              ._ZN7android10VectorImpl13removeItemsAtEmm ; android::VectorImpl::removeItemsAt(ulong,ulong)
.text:0000000000011780                 LDR             X0, [SP,#0x40+var_40] ; this
.text:0000000000011784 loc_11784                               ; CODE XREF: android::HeifCaptureImageBuilder::removeCover(int)+64↑j
.text:0000000000011784                 CBZ             X0, loc_11790
.text:0000000000011788                 MOV             X1, SP  ; void *
.text:000000000001178C                 BL              ._ZNK7android7RefBase9decStrongEPKv ; android::RefBase::decStrong(void const*)
.text:0000000000011790 loc_11790                               ; CODE XREF: android::HeifCaptureImageBuilder::removeCover(int):loc_11784↑j
.text:0000000000011790                 LDR             X8, [X19,#0x38]
.text:0000000000011794                 ADD             X21, X21, #1
.text:0000000000011798                 CMP             X21, X8
.text:000000000001179C                 B.CC            loc_11744
.text:00000000000117A0 loc_117A0                               ; CODE XREF: android::HeifCaptureImageBuilder::removeCover(int)+28↑j
.text:00000000000117A0                 LDR             X8, [X23,#0x28]
.text:00000000000117A4                 LDR             X9, [SP,#0x40+var_38]
.text:00000000000117A8                 CMP             X8, X9
.text:00000000000117AC                 B.NE            loc_117CC
.text:00000000000117B0                 LDP             X29, X30, [SP,#0x40+var_s0]
.text:00000000000117B4                 LDP             X20, X19, [SP,#0x40+var_10]
.text:00000000000117B8                 LDP             X22, X21, [SP,#0x40+var_20]
.text:00000000000117BC                 LDR             X23, [SP,#0x40+var_30]
.text:00000000000117C0                 MOV             W0, WZR
.text:00000000000117C4                 ADD             SP, SP, #0x50 ; 'P'
.text:00000000000117C8                 RET
.text:00000000000117CC ; ---------------------------------------------------------------------------
.text:00000000000117CC loc_117CC                               ; CODE XREF: android::HeifCaptureImageBuilder::removeCover(int)+A4↑j
.text:00000000000117CC                 BL              .__stack_chk_fail
.text:00000000000117CC ; } // starts at 11708
.text:00000000000117CC ; End of function android::HeifCaptureImageBuilder::removeCover(int)
.text:00000000000117D0 ; =============== S U B R O U T I N E =======================================
.text:00000000000117D0 ; Attributes: bp-based frame
.text:00000000000117D0 ; _QWORD __fastcall android::HeifCaptureImageBuilder::removeThumbnail(android::HeifCaptureImageBuilder *__hidden this, int)
.text:00000000000117D0                 EXPORT _ZN7android23HeifCaptureImageBuilder15removeThumbnailEi
.text:00000000000117D0 _ZN7android23HeifCaptureImageBuilder15removeThumbnailEi
.text:00000000000117D0                                         ; DATA XREF: LOAD:0000000000001CE0↑o
.text:00000000000117D0 var_40          = -0x40
.text:00000000000117D0 var_38          = -0x38
.text:00000000000117D0 var_30          = -0x30
.text:00000000000117D0 var_20          = -0x20
.text:00000000000117D0 var_10          = -0x10
.text:00000000000117D0 var_s0          =  0
.text:00000000000117D0 ; __unwind {
.text:00000000000117D0                 SUB             SP, SP, #0x50
.text:00000000000117D4                 STR             X23, [SP,#0x40+var_30]
.text:00000000000117D8                 STP             X22, X21, [SP,#0x40+var_20]
.text:00000000000117DC                 STP             X20, X19, [SP,#0x40+var_10]
.text:00000000000117E0                 STP             X29, X30, [SP,#0x40+var_s0]
.text:00000000000117E4                 ADD             X29, SP, #0x40
.text:00000000000117E8                 MRS             X23, #3, c13, c0, #2
.text:00000000000117EC                 LDR             X8, [X23,#0x28]
.text:00000000000117F0                 STR             X8, [SP,#0x40+var_38]
.text:00000000000117F4                 LDR             X8, [X0,#0x38]
.text:00000000000117F8                 CBZ             X8, loc_11878
.text:00000000000117FC                 MOV             X19, X0
.text:0000000000011800                 MOV             W20, W1
.text:0000000000011804                 MOV             X21, XZR
.text:0000000000011808                 ADD             X22, X0, #0x28 ; '('
.text:000000000001180C loc_1180C                               ; CODE XREF: android::HeifCaptureImageBuilder::removeThumbnail(int)+A4↓j
.text:000000000001180C                 MOV             X0, X22 ; this
.text:0000000000011810                 MOV             X1, X21 ; unsigned __int64
.text:0000000000011814                 BL              ._ZN7android10VectorImpl16editItemLocationEm ; android::VectorImpl::editItemLocation(ulong)
.text:0000000000011818                 LDR             X0, [X0] ; this
.text:000000000001181C                 STR             X0, [SP,#0x40+var_40]
.text:0000000000011820                 CBZ             X0, loc_11830
.text:0000000000011824                 MOV             X1, SP  ; void *
.text:0000000000011828                 BL              ._ZNK7android7RefBase9incStrongEPKv ; android::RefBase::incStrong(void const*)
.text:000000000001182C                 LDR             X0, [SP,#0x40+var_40]
.text:0000000000011830 loc_11830                               ; CODE XREF: android::HeifCaptureImageBuilder::removeThumbnail(int)+50↑j
.text:0000000000011830                 LDR             W8, [X0,#0x10]
.text:0000000000011834                 CMP             W8, W20
.text:0000000000011838                 B.NE            loc_1185C
.text:000000000001183C                 LDR             W8, [X0,#0x14]
.text:0000000000011840                 CMP             W8, #2
.text:0000000000011844                 B.NE            loc_11860
.text:0000000000011848                 MOV             X0, X22 ; this
.text:000000000001184C                 MOV             X1, X21 ; unsigned __int64
.text:0000000000011850                 MOV             W2, #1  ; unsigned __int64
.text:0000000000011854                 BL              ._ZN7android10VectorImpl13removeItemsAtEmm ; android::VectorImpl::removeItemsAt(ulong,ulong)
.text:0000000000011858                 LDR             X0, [SP,#0x40+var_40] ; this
.text:000000000001185C loc_1185C                               ; CODE XREF: android::HeifCaptureImageBuilder::removeThumbnail(int)+68↑j
.text:000000000001185C                 CBZ             X0, loc_11868
.text:0000000000011860 loc_11860                               ; CODE XREF: android::HeifCaptureImageBuilder::removeThumbnail(int)+74↑j
.text:0000000000011860                 MOV             X1, SP  ; void *
.text:0000000000011864                 BL              ._ZNK7android7RefBase9decStrongEPKv ; android::RefBase::decStrong(void const*)
.text:0000000000011868 loc_11868                               ; CODE XREF: android::HeifCaptureImageBuilder::removeThumbnail(int):loc_1185C↑j
.text:0000000000011868                 LDR             X8, [X19,#0x38]
.text:000000000001186C                 ADD             X21, X21, #1
.text:0000000000011870                 CMP             X21, X8
.text:0000000000011874                 B.CC            loc_1180C
.text:0000000000011878 loc_11878                               ; CODE XREF: android::HeifCaptureImageBuilder::removeThumbnail(int)+28↑j
.text:0000000000011878                 LDR             X8, [X23,#0x28]
.text:000000000001187C                 LDR             X9, [SP,#0x40+var_38]
.text:0000000000011880                 CMP             X8, X9
.text:0000000000011884                 B.NE            loc_118A4
.text:0000000000011888                 LDP             X29, X30, [SP,#0x40+var_s0]
.text:000000000001188C                 LDP             X20, X19, [SP,#0x40+var_10]
.text:0000000000011890                 LDP             X22, X21, [SP,#0x40+var_20]
.text:0000000000011894                 LDR             X23, [SP,#0x40+var_30]
.text:0000000000011898                 MOV             W0, WZR
.text:000000000001189C                 ADD             SP, SP, #0x50 ; 'P'
.text:00000000000118A0                 RET
.text:00000000000118A4 ; ---------------------------------------------------------------------------
.text:00000000000118A4 loc_118A4                               ; CODE XREF: android::HeifCaptureImageBuilder::removeThumbnail(int)+B4↑j
.text:00000000000118A4                 BL              .__stack_chk_fail
.text:00000000000118A4 ; } // starts at 117D0
.text:00000000000118A4 ; End of function android::HeifCaptureImageBuilder::removeThumbnail(int)
.text:00000000000118A8 ; =============== S U B R O U T I N E =======================================
.text:00000000000118A8 ; __int64 __fastcall android::HeifCaptureImageBuilder::setOutputBuffer(android::HeifCaptureImageBuilder *__hidden this, void *, int)
.text:00000000000118A8                 EXPORT _ZN7android23HeifCaptureImageBuilder15setOutputBufferEPvi
.text:00000000000118A8 _ZN7android23HeifCaptureImageBuilder15setOutputBufferEPvi
.text:00000000000118A8                                         ; CODE XREF: android::HeifCaptureImageBuilder::setOutputBuffer(void *,int)+C↓j
.text:00000000000118A8                                         ; DATA XREF: LOAD:0000000000000D20↑o ...
.text:00000000000118A8 ; __unwind {
.text:00000000000118A8                 STR             X1, [X0,#0x18]
.text:00000000000118AC                 STR             W2, [X0,#0x20]
.text:00000000000118B0                 RET
.text:00000000000118B0 ; } // starts at 118A8
.text:00000000000118B0 ; End of function android::HeifCaptureImageBuilder::setOutputBuffer(void *,int)
.text:00000000000118B0 ; ---------------------------------------------------------------------------
.text:00000000000118B4                 ALIGN 8
.text:00000000000118B8 ; =============== S U B R O U T I N E =======================================
.text:00000000000118B8 ; Attributes: bp-based frame
.text:00000000000118B8 ; __int64 __fastcall android::HeifCaptureImageBuilder::build(android::HeifCaptureImageBuilder *__hidden this)
.text:00000000000118B8                 EXPORT _ZN7android23HeifCaptureImageBuilder5buildEv
.text:00000000000118B8 _ZN7android23HeifCaptureImageBuilder5buildEv
.text:00000000000118B8                                         ; CODE XREF: android::HeifCaptureImageBuilder::build(void)+C↓j
.text:00000000000118B8                                         ; DATA XREF: LOAD:0000000000000D38↑o ...
.text:00000000000118B8 var_1A8         = -0x1A8
.text:00000000000118B8 var_1A0         = -0x1A0
.text:00000000000118B8 var_198         = -0x198
.text:00000000000118B8 var_190         = -0x190
.text:00000000000118B8 var_188         = -0x188
.text:00000000000118B8 var_180         = -0x180
.text:00000000000118B8 var_178         = -0x178
.text:00000000000118B8 var_170         = -0x170
.text:00000000000118B8 var_150         = -0x150
.text:00000000000118B8 var_130         = -0x130
.text:00000000000118B8 var_50          = -0x50
.text:00000000000118B8 var_40          = -0x40
.text:00000000000118B8 var_30          = -0x30
.text:00000000000118B8 var_20          = -0x20
.text:00000000000118B8 var_10          = -0x10
.text:00000000000118B8 var_s0          =  0
.text:00000000000118B8 ; __unwind {
.text:00000000000118B8                 SUB             SP, SP, #0x1C0
.text:00000000000118BC                 STP             X28, X27, [SP,#0x1B0+var_50]
.text:00000000000118C0                 STP             X26, X25, [SP,#0x1B0+var_40]
.text:00000000000118C4                 STP             X24, X23, [SP,#0x1B0+var_30]
.text:00000000000118C8                 STP             X22, X21, [SP,#0x1B0+var_20]
.text:00000000000118CC                 STP             X20, X19, [SP,#0x1B0+var_10]
.text:00000000000118D0                 STP             X29, X30, [SP,#0x1B0+var_s0]
.text:00000000000118D4                 ADD             X29, SP, #0x1B0
.text:00000000000118D8                 MRS             X28, #3, c13, c0, #2
.text:00000000000118DC                 MOV             X19, X8
.text:00000000000118E0                 LDR             X9, [X28,#0x28]
.text:00000000000118E4                 STR             X9, [SP,#0x1B0+var_1A0]
.text:00000000000118E8                 LDR             X9, [X0,#0x38]
.text:00000000000118EC                 CBZ             X9, loc_11D48
.text:00000000000118F0                 LDR             X8, [X0,#0x18]
.text:00000000000118F4                 MOV             X20, X0
.text:00000000000118F8                 CBZ             X8, loc_11D2C
.text:00000000000118FC                 LDR             W8, [X20,#0x20]
.text:0000000000011900                 CMP             W8, #0
.text:0000000000011904                 B.LE            loc_11D2C
.text:0000000000011908                 MOV             W0, #0xA40 ; unsigned __int64
.text:000000000001190C                 STR             X19, [SP,#0x1B0+var_1A8]
.text:0000000000011910                 BL              ._Znwm  ; operator new(ulong)
.text:0000000000011914                 MOV             X19, X0
.text:0000000000011918                 BL              ._ZN7android8AMessageC1Ev ; android::AMessage::AMessage(void)
.text:000000000001191C                 ADD             X1, SP, #0x1B0+var_178 ; void *
.text:0000000000011920                 STR             X19, [SP,#0x1B0+var_178]
.text:0000000000011924                 MOV             X0, X19 ; this
.text:0000000000011928                 BL              ._ZNK7android7RefBase9incStrongEPKv ; android::RefBase::incStrong(void const*)
.text:000000000001192C                 LDR             X8, [X20,#0x38]
.text:0000000000011930                 CBZ             X8, loc_11CF4
.text:0000000000011934                 ADRP            X23, #aInputBufferSiz@PAGE ; "input-buffer-size"
.text:0000000000011938                 ADRP            X24, #aExifBuffer@PAGE ; "exif-buffer"
.text:000000000001193C                 ADRP            X25, #aExifBufferSize@PAGE ; "exif-buffer-size"
.text:0000000000011940                 ADD             X22, SP, #0x1B0+var_170
.text:0000000000011944                 ADD             X21, X20, #0x28 ; '('
.text:0000000000011948                 MOV             W19, #1
.text:000000000001194C                 ADD             X23, X23, #aInputBufferSiz@PAGEOFF ; "input-buffer-size"
.text:0000000000011950                 ADD             X24, X24, #aExifBuffer@PAGEOFF ; "exif-buffer"
.text:0000000000011954                 ADD             X25, X25, #aExifBufferSize@PAGEOFF ; "exif-buffer-size"
.text:0000000000011958                 MOV             W26, #0xA40
.text:000000000001195C loc_1195C                               ; CODE XREF: android::HeifCaptureImageBuilder::build(void)+438↓j
.text:000000000001195C                 MOV             X0, X21 ; this
.text:0000000000011960                 BL              ._ZN7android10VectorImpl13editArrayImplEv ; android::VectorImpl::editArrayImpl(void)
.text:0000000000011964                 LDR             X0, [X0] ; this
.text:0000000000011968                 ADD             X1, SP, #0x1B0+var_180 ; void *
.text:000000000001196C                 STR             X0, [SP,#0x1B0+var_180]
.text:0000000000011970                 BL              ._ZNK7android7RefBase9incStrongEPKv ; android::RefBase::incStrong(void const*)
.text:0000000000011974                 LDR             X8, [SP,#0x1B0+var_180]
.text:0000000000011978                 LDR             W8, [X8,#0x14]
.text:000000000001197C                 CMP             W8, #1
.text:0000000000011980                 B.NE            loc_11C94
.text:0000000000011984                 MOV             X0, X21 ; this
.text:0000000000011988                 BL              ._ZN7android10VectorImpl13editArrayImplEv ; android::VectorImpl::editArrayImpl(void)
.text:000000000001198C                 LDR             X8, [X20,#0x30]
.text:0000000000011990                 MOV             W2, #1  ; unsigned __int64
.text:0000000000011994                 SUB             X8, X0, X8
.text:0000000000011998                 MOV             X0, X21 ; this
.text:000000000001199C                 ASR             X1, X8, #3 ; unsigned __int64
.text:00000000000119A0                 BL              ._ZN7android10VectorImpl13removeItemsAtEmm ; android::VectorImpl::removeItemsAt(ulong,ulong)
.text:00000000000119A4                 MOV             X0, X21 ; this
.text:00000000000119A8                 BL              ._ZN7android10VectorImpl13editArrayImplEv ; android::VectorImpl::editArrayImpl(void)
.text:00000000000119AC                 MOV             X0, X26 ; unsigned __int64
.text:00000000000119B0                 BL              ._Znwm  ; operator new(ulong)
.text:00000000000119B4                 MOV             X27, X0
.text:00000000000119B8                 BL              ._ZN7android8AMessageC1Ev ; android::AMessage::AMessage(void)
.text:00000000000119BC                 ADD             X1, SP, #0x1B0+var_188 ; void *
.text:00000000000119C0                 STR             X27, [SP,#0x1B0+var_188]
.text:00000000000119C4                 MOV             X0, X27 ; this
.text:00000000000119C8                 BL              ._ZNK7android7RefBase9incStrongEPKv ; android::RefBase::incStrong(void const*)
.text:00000000000119CC                 LDP             X0, X8, [SP,#0x1B0+var_188] ; this
.text:00000000000119D0                 ADRP            X1, #aId@PAGE ; "id"
.text:00000000000119D4                 ADD             X1, X1, #aId@PAGEOFF ; "id"
.text:00000000000119D8                 LDR             W2, [X8,#0x10] ; int
.text:00000000000119DC                 BL              ._ZN7android8AMessage8setInt32EPKci ; android::AMessage::setInt32(char const*,int)
.text:00000000000119E0                 LDP             X0, X8, [SP,#0x1B0+var_188] ; this
.text:00000000000119E4                 ADRP            X1, #aWidth@PAGE ; "width"
.text:00000000000119E8                 ADD             X1, X1, #aWidth@PAGEOFF ; "width"
.text:00000000000119EC                 LDR             W2, [X8,#0x18] ; int
.text:00000000000119F0                 BL              ._ZN7android8AMessage8setInt32EPKci ; android::AMessage::setInt32(char const*,int)
.text:00000000000119F4                 LDP             X0, X8, [SP,#0x1B0+var_188] ; this
.text:00000000000119F8                 ADRP            X1, #aHeight@PAGE ; "height"
.text:00000000000119FC                 ADD             X1, X1, #aHeight@PAGEOFF ; "height"
.text:0000000000011A00                 LDR             W2, [X8,#0x1C] ; int
.text:0000000000011A04                 BL              ._ZN7android8AMessage8setInt32EPKci ; android::AMessage::setInt32(char const*,int)
.text:0000000000011A08                 LDP             X0, X8, [SP,#0x1B0+var_188] ; this
.text:0000000000011A0C                 ADRP            X1, #aStride@PAGE ; "stride"
.text:0000000000011A10                 ADD             X1, X1, #aStride@PAGEOFF ; "stride"
.text:0000000000011A14                 LDR             W2, [X8,#0x20] ; int
.text:0000000000011A18                 BL              ._ZN7android8AMessage8setInt32EPKci ; android::AMessage::setInt32(char const*,int)
.text:0000000000011A1C                 LDP             X0, X8, [SP,#0x1B0+var_188] ; this
.text:0000000000011A20                 ADRP            X1, #aSliceHeight@PAGE ; "slice-height"
.text:0000000000011A24                 ADD             X1, X1, #aSliceHeight@PAGEOFF ; "slice-height"
.text:0000000000011A28                 LDR             W2, [X8,#0x24] ; int
.text:0000000000011A2C                 BL              ._ZN7android8AMessage8setInt32EPKci ; android::AMessage::setInt32(char const*,int)
.text:0000000000011A30                 LDP             X0, X8, [SP,#0x1B0+var_188] ; this
.text:0000000000011A34                 ADRP            X1, #aRotationDegree@PAGE ; "rotation-degrees"
.text:0000000000011A38                 ADD             X1, X1, #aRotationDegree@PAGEOFF ; "rotation-degrees"
.text:0000000000011A3C                 LDR             W2, [X8,#0x28] ; int
.text:0000000000011A40                 BL              ._ZN7android8AMessage8setInt32EPKci ; android::AMessage::setInt32(char const*,int)
.text:0000000000011A44                 LDP             X0, X8, [SP,#0x1B0+var_188] ; this
.text:0000000000011A48                 ADRP            X1, #aColorFormat@PAGE ; "color-format"
.text:0000000000011A4C                 ADD             X1, X1, #aColorFormat@PAGEOFF ; "color-format"
.text:0000000000011A50                 LDR             W2, [X8,#0x2C] ; int
.text:0000000000011A54                 BL              ._ZN7android8AMessage8setInt32EPKci ; android::AMessage::setInt32(char const*,int)
.text:0000000000011A58                 LDP             X0, X8, [SP,#0x1B0+var_188] ; this
.text:0000000000011A5C                 ADRP            X1, #aInputBuffer@PAGE ; "input-buffer"
.text:0000000000011A60                 ADD             X1, X1, #aInputBuffer@PAGEOFF ; "input-buffer"
.text:0000000000011A64                 LDR             X2, [X8,#0x30] ; void *
.text:0000000000011A68                 BL              ._ZN7android8AMessage10setPointerEPKcPv ; android::AMessage::setPointer(char const*,void *)
.text:0000000000011A6C                 LDP             X0, X8, [SP,#0x1B0+var_188] ; this
.text:0000000000011A70                 MOV             X1, X23 ; char *
.text:0000000000011A74                 LDR             W2, [X8,#0x38] ; int
.text:0000000000011A78                 BL              ._ZN7android8AMessage8setInt32EPKci ; android::AMessage::setInt32(char const*,int)
.text:0000000000011A7C                 LDP             X0, X8, [SP,#0x1B0+var_188] ; this
.text:0000000000011A80                 MOV             X1, X24 ; char *
.text:0000000000011A84                 LDR             X2, [X8,#0x40] ; void *
.text:0000000000011A88                 BL              ._ZN7android8AMessage10setPointerEPKcPv ; android::AMessage::setPointer(char const*,void *)
.text:0000000000011A8C                 LDP             X0, X8, [SP,#0x1B0+var_188] ; this
.text:0000000000011A90                 MOV             X1, X25 ; char *
.text:0000000000011A94                 LDR             W2, [X8,#0x48] ; int
.text:0000000000011A98                 BL              ._ZN7android8AMessage8setInt32EPKci ; android::AMessage::setInt32(char const*,int)
.text:0000000000011A9C                 LDR             X8, [X20,#0x38]
.text:0000000000011AA0                 CBZ             X8, loc_11C18
.text:0000000000011AA4                 MOV             X0, X21 ; this
.text:0000000000011AA8                 BL              ._ZN7android10VectorImpl13editArrayImplEv ; android::VectorImpl::editArrayImpl(void)
.text:0000000000011AAC                 LDR             X0, [X0] ; this
.text:0000000000011AB0                 ADD             X1, SP, #0x1B0+var_190 ; void *
.text:0000000000011AB4                 STR             X0, [SP,#0x1B0+var_190]
.text:0000000000011AB8                 BL              ._ZNK7android7RefBase9incStrongEPKv ; android::RefBase::incStrong(void const*)
.text:0000000000011ABC                 LDR             X0, [SP,#0x1B0+var_190]
.text:0000000000011AC0                 LDR             W8, [X0,#0x14]
.text:0000000000011AC4                 CMP             W8, #2
.text:0000000000011AC8                 B.NE            loc_11C0C
.text:0000000000011ACC                 MOV             X0, X21 ; this
.text:0000000000011AD0                 BL              ._ZN7android10VectorImpl13editArrayImplEv ; android::VectorImpl::editArrayImpl(void)
.text:0000000000011AD4                 LDR             X8, [X20,#0x30]
.text:0000000000011AD8                 MOV             W2, #1  ; unsigned __int64
.text:0000000000011ADC                 SUB             X8, X0, X8
.text:0000000000011AE0                 MOV             X0, X21 ; this
.text:0000000000011AE4                 ASR             X1, X8, #3 ; unsigned __int64
.text:0000000000011AE8                 BL              ._ZN7android10VectorImpl13removeItemsAtEmm ; android::VectorImpl::removeItemsAt(ulong,ulong)
.text:0000000000011AEC                 MOV             X0, X21 ; this
.text:0000000000011AF0                 BL              ._ZN7android10VectorImpl13editArrayImplEv ; android::VectorImpl::editArrayImpl(void)
.text:0000000000011AF4                 MOV             X0, X26 ; unsigned __int64
.text:0000000000011AF8                 BL              ._Znwm  ; operator new(ulong)
.text:0000000000011AFC                 MOV             X27, X0
.text:0000000000011B00                 BL              ._ZN7android8AMessageC1Ev ; android::AMessage::AMessage(void)
.text:0000000000011B04                 ADD             X1, SP, #0x1B0+var_198 ; void *
.text:0000000000011B08                 STR             X27, [SP,#0x1B0+var_198]
.text:0000000000011B0C                 MOV             X0, X27 ; this
.text:0000000000011B10                 BL              ._ZNK7android7RefBase9incStrongEPKv ; android::RefBase::incStrong(void const*)
.text:0000000000011B14                 LDP             X0, X8, [SP,#0x1B0+var_198] ; this
.text:0000000000011B18                 ADRP            X1, #aId@PAGE ; "id"
.text:0000000000011B1C                 ADD             X1, X1, #aId@PAGEOFF ; "id"
.text:0000000000011B20                 LDR             W2, [X8,#0x10] ; int
.text:0000000000011B24                 BL              ._ZN7android8AMessage8setInt32EPKci ; android::AMessage::setInt32(char const*,int)
.text:0000000000011B28                 LDP             X0, X8, [SP,#0x1B0+var_198] ; this
.text:0000000000011B2C                 ADRP            X1, #aWidth@PAGE ; "width"
.text:0000000000011B30                 ADD             X1, X1, #aWidth@PAGEOFF ; "width"
.text:0000000000011B34                 LDR             W2, [X8,#0x18] ; int
.text:0000000000011B38                 BL              ._ZN7android8AMessage8setInt32EPKci ; android::AMessage::setInt32(char const*,int)
.text:0000000000011B3C                 LDP             X0, X8, [SP,#0x1B0+var_198] ; this
.text:0000000000011B40                 ADRP            X1, #aHeight@PAGE ; "height"
.text:0000000000011B44                 ADD             X1, X1, #aHeight@PAGEOFF ; "height"
.text:0000000000011B48                 LDR             W2, [X8,#0x1C] ; int
.text:0000000000011B4C                 BL              ._ZN7android8AMessage8setInt32EPKci ; android::AMessage::setInt32(char const*,int)
.text:0000000000011B50                 LDP             X0, X8, [SP,#0x1B0+var_198] ; this
.text:0000000000011B54                 ADRP            X1, #aStride@PAGE ; "stride"
.text:0000000000011B58                 ADD             X1, X1, #aStride@PAGEOFF ; "stride"
.text:0000000000011B5C                 LDR             W2, [X8,#0x20] ; int
.text:0000000000011B60                 BL              ._ZN7android8AMessage8setInt32EPKci ; android::AMessage::setInt32(char const*,int)
.text:0000000000011B64                 LDP             X0, X8, [SP,#0x1B0+var_198] ; this
.text:0000000000011B68                 ADRP            X1, #aSliceHeight@PAGE ; "slice-height"
.text:0000000000011B6C                 ADD             X1, X1, #aSliceHeight@PAGEOFF ; "slice-height"
.text:0000000000011B70                 LDR             W2, [X8,#0x24] ; int
.text:0000000000011B74                 BL              ._ZN7android8AMessage8setInt32EPKci ; android::AMessage::setInt32(char const*,int)
.text:0000000000011B78                 LDP             X0, X8, [SP,#0x1B0+var_198] ; this
.text:0000000000011B7C                 ADRP            X1, #aRotationDegree@PAGE ; "rotation-degrees"
.text:0000000000011B80                 ADD             X1, X1, #aRotationDegree@PAGEOFF ; "rotation-degrees"
.text:0000000000011B84                 LDR             W2, [X8,#0x28] ; int
.text:0000000000011B88                 BL              ._ZN7android8AMessage8setInt32EPKci ; android::AMessage::setInt32(char const*,int)
.text:0000000000011B8C                 LDP             X0, X8, [SP,#0x1B0+var_198] ; this
.text:0000000000011B90                 ADRP            X1, #aColorFormat@PAGE ; "color-format"
.text:0000000000011B94                 ADD             X1, X1, #aColorFormat@PAGEOFF ; "color-format"
.text:0000000000011B98                 LDR             W2, [X8,#0x2C] ; int
.text:0000000000011B9C                 BL              ._ZN7android8AMessage8setInt32EPKci ; android::AMessage::setInt32(char const*,int)
.text:0000000000011BA0                 LDP             X0, X8, [SP,#0x1B0+var_198] ; this
.text:0000000000011BA4                 ADRP            X1, #aInputBuffer@PAGE ; "input-buffer"
.text:0000000000011BA8                 ADD             X1, X1, #aInputBuffer@PAGEOFF ; "input-buffer"
.text:0000000000011BAC                 LDR             X2, [X8,#0x30] ; void *
.text:0000000000011BB0                 BL              ._ZN7android8AMessage10setPointerEPKcPv ; android::AMessage::setPointer(char const*,void *)
.text:0000000000011BB4                 LDP             X0, X8, [SP,#0x1B0+var_198] ; this
.text:0000000000011BB8                 MOV             X1, X23 ; char *
.text:0000000000011BBC                 LDR             W2, [X8,#0x38] ; int
.text:0000000000011BC0                 BL              ._ZN7android8AMessage8setInt32EPKci ; android::AMessage::setInt32(char const*,int)
.text:0000000000011BC4                 LDP             X0, X8, [SP,#0x1B0+var_198] ; this
.text:0000000000011BC8                 MOV             X1, X24 ; char *
.text:0000000000011BCC                 LDR             X2, [X8,#0x40] ; void *
.text:0000000000011BD0                 BL              ._ZN7android8AMessage10setPointerEPKcPv ; android::AMessage::setPointer(char const*,void *)
.text:0000000000011BD4                 LDP             X0, X8, [SP,#0x1B0+var_198] ; this
.text:0000000000011BD8                 MOV             X1, X25 ; char *
.text:0000000000011BDC                 LDR             W2, [X8,#0x48] ; int
.text:0000000000011BE0                 BL              ._ZN7android8AMessage8setInt32EPKci ; android::AMessage::setInt32(char const*,int)
.text:0000000000011BE4                 LDR             X0, [SP,#0x1B0+var_188]
.text:0000000000011BE8                 ADRP            X1, #aThumbnail@PAGE ; "thumbnail"
.text:0000000000011BEC                 ADD             X2, SP, #0x1B0+var_198
.text:0000000000011BF0                 ADD             X1, X1, #aThumbnail@PAGEOFF ; "thumbnail"
.text:0000000000011BF4                 BL              ._ZN7android8AMessage10setMessageEPKcRKNS_2spIS0_EE ; android::AMessage::setMessage(char const*,android::sp<android::AMessage> const&)
.text:0000000000011BF8                 LDR             X0, [SP,#0x1B0+var_198] ; this
.text:0000000000011BFC                 CBZ             X0, loc_11C08
.text:0000000000011C00                 ADD             X1, SP, #0x1B0+var_198 ; void *
.text:0000000000011C04                 BL              ._ZNK7android7RefBase9decStrongEPKv ; android::RefBase::decStrong(void const*)
.text:0000000000011C08 loc_11C08                               ; CODE XREF: android::HeifCaptureImageBuilder::build(void)+344↑j
.text:0000000000011C08                 LDR             X0, [SP,#0x1B0+var_190] ; this
.text:0000000000011C0C loc_11C0C                               ; CODE XREF: android::HeifCaptureImageBuilder::build(void)+210↑j
.text:0000000000011C0C                 CBZ             X0, loc_11C18
.text:0000000000011C10                 ADD             X1, SP, #0x1B0+var_190 ; void *
.text:0000000000011C14                 BL              ._ZNK7android7RefBase9decStrongEPKv ; android::RefBase::decStrong(void const*)
.text:0000000000011C18 loc_11C18                               ; CODE XREF: android::HeifCaptureImageBuilder::build(void)+1E8↑j
.text:0000000000011C18                                         ; android::HeifCaptureImageBuilder::build(void):loc_11C0C↑j
.text:0000000000011C18                 LDR             X0, [SP,#0x1B0+var_178] ; this
.text:0000000000011C1C                 ADRP            X1, #aCoverCount@PAGE ; "cover-count"
.text:0000000000011C20                 ADD             X1, X1, #aCoverCount@PAGEOFF ; "cover-count"
.text:0000000000011C24                 MOV             W2, W19 ; int
.text:0000000000011C28                 ADD             W27, W19, #1
.text:0000000000011C2C                 BL              ._ZN7android8AMessage8setInt32EPKci ; android::AMessage::setInt32(char const*,int)
.text:0000000000011C30                 MOVI            V0.2D, #0
.text:0000000000011C34                 LDR             X8, [SP,#0x1B0+var_180]
.text:0000000000011C38                 ADD             X0, SP, #0x1B0+var_170
.text:0000000000011C3C                 STP             Q0, Q0, [X22,#0xE0]
.text:0000000000011C40                 STP             Q0, Q0, [X22,#0xC0]
.text:0000000000011C44                 STP             Q0, Q0, [X22,#0xA0]
.text:0000000000011C48                 STP             Q0, Q0, [X22,#0x80]
.text:0000000000011C4C                 STP             Q0, Q0, [X22,#0x60]
.text:0000000000011C50                 STP             Q0, Q0, [SP,#0x1B0+var_130]
.text:0000000000011C54                 STP             Q0, Q0, [SP,#0x1B0+var_150]
.text:0000000000011C58                 STP             Q0, Q0, [SP,#0x1B0+var_170]
.text:0000000000011C5C                 LDR             W3, [X8,#0x10]
.text:0000000000011C60                 BL              sub_11DA0
.text:0000000000011C64                 LDR             X0, [SP,#0x1B0+var_178]
.text:0000000000011C68                 ADD             X1, SP, #0x1B0+var_170
.text:0000000000011C6C                 ADD             X2, SP, #0x1B0+var_188
.text:0000000000011C70                 BL              ._ZN7android8AMessage10setMessageEPKcRKNS_2spIS0_EE ; android::AMessage::setMessage(char const*,android::sp<android::AMessage> const&)
.text:0000000000011C74                 LDR             X0, [SP,#0x1B0+var_188] ; this
.text:0000000000011C78                 CBZ             X0, loc_11C84
.text:0000000000011C7C                 ADD             X1, SP, #0x1B0+var_188 ; void *
.text:0000000000011C80                 BL              ._ZNK7android7RefBase9decStrongEPKv ; android::RefBase::decStrong(void const*)
.text:0000000000011C84 loc_11C84                               ; CODE XREF: android::HeifCaptureImageBuilder::build(void)+3C0↑j
.text:0000000000011C84                 MOV             W19, W27
.text:0000000000011C88                 LDR             X0, [SP,#0x1B0+var_180]
.text:0000000000011C8C                 CBNZ            X0, loc_11CE4
.text:0000000000011C90                 B               loc_11CEC
.text:0000000000011C94 ; ---------------------------------------------------------------------------
.text:0000000000011C94 loc_11C94                               ; CODE XREF: android::HeifCaptureImageBuilder::build(void)+C8↑j
.text:0000000000011C94                 ADRP            X1, #aHeifcaptureman@PAGE ; "HeifCaptureManager"
.text:0000000000011C98                 ADRP            X2, #aSDoNotExistCov@PAGE ; "%s: Do not exist cover image and remove"...
.text:0000000000011C9C                 ADRP            X3, #aBuild@PAGE ; "build"
.text:0000000000011CA0                 MOV             W0, #5
.text:0000000000011CA4                 ADD             X1, X1, #aHeifcaptureman@PAGEOFF ; "HeifCaptureManager"
.text:0000000000011CA8                 ADD             X2, X2, #aSDoNotExistCov@PAGEOFF ; "%s: Do not exist cover image and remove"...
.text:0000000000011CAC                 ADD             X3, X3, #aBuild@PAGEOFF ; "build"
.text:0000000000011CB0                 BL              .__android_log_print
.text:0000000000011CB4                 MOV             X0, X21 ; this
.text:0000000000011CB8                 BL              ._ZN7android10VectorImpl13editArrayImplEv ; android::VectorImpl::editArrayImpl(void)
.text:0000000000011CBC                 LDR             X8, [X20,#0x30]
.text:0000000000011CC0                 MOV             W2, #1  ; unsigned __int64
.text:0000000000011CC4                 SUB             X8, X0, X8
.text:0000000000011CC8                 MOV             X0, X21 ; this
.text:0000000000011CCC                 ASR             X1, X8, #3 ; unsigned __int64
.text:0000000000011CD0                 BL              ._ZN7android10VectorImpl13removeItemsAtEmm ; android::VectorImpl::removeItemsAt(ulong,ulong)
.text:0000000000011CD4                 MOV             X0, X21 ; this
.text:0000000000011CD8                 BL              ._ZN7android10VectorImpl13editArrayImplEv ; android::VectorImpl::editArrayImpl(void)
.text:0000000000011CDC                 LDR             X0, [SP,#0x1B0+var_180] ; this
.text:0000000000011CE0                 CBZ             X0, loc_11CEC
.text:0000000000011CE4 loc_11CE4                               ; CODE XREF: android::HeifCaptureImageBuilder::build(void)+3D4↑j
.text:0000000000011CE4                 ADD             X1, SP, #0x1B0+var_180 ; void *
.text:0000000000011CE8                 BL              ._ZNK7android7RefBase9decStrongEPKv ; android::RefBase::decStrong(void const*)
.text:0000000000011CEC loc_11CEC                               ; CODE XREF: android::HeifCaptureImageBuilder::build(void)+3D8↑j
.text:0000000000011CEC                                         ; android::HeifCaptureImageBuilder::build(void)+428↑j
.text:0000000000011CEC                 LDR             X8, [X20,#0x38]
.text:0000000000011CF0                 CBNZ            X8, loc_1195C
.text:0000000000011CF4 loc_11CF4                               ; CODE XREF: android::HeifCaptureImageBuilder::build(void)+78↑j
.text:0000000000011CF4                 LDR             X0, [SP,#0x1B0+var_178] ; this
.text:0000000000011CF8                 ADRP            X1, #aOutputBuffer@PAGE ; "output-buffer"
.text:0000000000011CFC                 LDR             X2, [X20,#0x18] ; void *
.text:0000000000011D00                 ADD             X1, X1, #aOutputBuffer@PAGEOFF ; "output-buffer"
.text:0000000000011D04                 BL              ._ZN7android8AMessage10setPointerEPKcPv ; android::AMessage::setPointer(char const*,void *)
.text:0000000000011D08                 LDR             X0, [SP,#0x1B0+var_178] ; this
.text:0000000000011D0C                 ADRP            X1, #aOutputBufferCa@PAGE ; "output-buffer-capacity"
.text:0000000000011D10                 LDR             W2, [X20,#0x20] ; int
.text:0000000000011D14                 ADD             X1, X1, #aOutputBufferCa@PAGEOFF ; "output-buffer-capacity"
.text:0000000000011D18                 BL              ._ZN7android8AMessage8setInt32EPKci ; android::AMessage::setInt32(char const*,int)
.text:0000000000011D1C                 LDR             X8, [SP,#0x1B0+var_178]
.text:0000000000011D20                 LDR             X9, [SP,#0x1B0+var_1A8]
.text:0000000000011D24                 STR             X8, [X9]
.text:0000000000011D28                 B               loc_11D6C
.text:0000000000011D2C ; ---------------------------------------------------------------------------
.text:0000000000011D2C loc_11D2C                               ; CODE XREF: android::HeifCaptureImageBuilder::build(void)+40↑j
.text:0000000000011D2C                                         ; android::HeifCaptureImageBuilder::build(void)+4C↑j
.text:0000000000011D2C                 ADRP            X1, #aHeifcaptureman@PAGE ; "HeifCaptureManager"
.text:0000000000011D30                 ADRP            X2, #aOutputBufferIs@PAGE ; "output buffer is invalid"
.text:0000000000011D34                 ADD             X1, X1, #aHeifcaptureman@PAGEOFF ; "HeifCaptureManager"
.text:0000000000011D38                 ADD             X2, X2, #aOutputBufferIs@PAGEOFF ; "output buffer is invalid"
.text:0000000000011D3C                 MOV             W0, #6
.text:0000000000011D40                 BL              .__android_log_print
.text:0000000000011D44                 B               loc_11D68
.text:0000000000011D48 ; ---------------------------------------------------------------------------
.text:0000000000011D48 loc_11D48                               ; CODE XREF: android::HeifCaptureImageBuilder::build(void)+34↑j
.text:0000000000011D48                 ADRP            X1, #aHeifcaptureman@PAGE ; "HeifCaptureManager"
.text:0000000000011D4C                 ADRP            X2, #aSCanNotBuildMe@PAGE ; "%s: Can not build message, there is no "...
.text:0000000000011D50                 ADRP            X3, #aBuild@PAGE ; "build"
.text:0000000000011D54                 ADD             X1, X1, #aHeifcaptureman@PAGEOFF ; "HeifCaptureManager"
.text:0000000000011D58                 ADD             X2, X2, #aSCanNotBuildMe@PAGEOFF ; "%s: Can not build message, there is no "...
.text:0000000000011D5C                 ADD             X3, X3, #aBuild@PAGEOFF ; "build"
.text:0000000000011D60                 MOV             W0, #6
.text:0000000000011D64                 BL              .__android_log_print
.text:0000000000011D68 loc_11D68                               ; CODE XREF: android::HeifCaptureImageBuilder::build(void)+48C↑j
.text:0000000000011D68                 STR             XZR, [X19]
.text:0000000000011D6C loc_11D6C                               ; CODE XREF: android::HeifCaptureImageBuilder::build(void)+470↑j
.text:0000000000011D6C                 LDR             X8, [X28,#0x28]
.text:0000000000011D70                 LDR             X9, [SP,#0x1B0+var_1A0]
.text:0000000000011D74                 CMP             X8, X9
.text:0000000000011D78                 B.NE            loc_11D9C
.text:0000000000011D7C                 LDP             X29, X30, [SP,#0x1B0+var_s0]
.text:0000000000011D80                 LDP             X20, X19, [SP,#0x1B0+var_10]
.text:0000000000011D84                 LDP             X22, X21, [SP,#0x1B0+var_20]
.text:0000000000011D88                 LDP             X24, X23, [SP,#0x1B0+var_30]
.text:0000000000011D8C                 LDP             X26, X25, [SP,#0x1B0+var_40]
.text:0000000000011D90                 LDP             X28, X27, [SP,#0x1B0+var_50]
.text:0000000000011D94                 ADD             SP, SP, #0x1C0
.text:0000000000011D98                 RET
.text:0000000000011D9C ; ---------------------------------------------------------------------------
.text:0000000000011D9C loc_11D9C                               ; CODE XREF: android::HeifCaptureImageBuilder::build(void)+4C0↑j
.text:0000000000011D9C                 BL              .__stack_chk_fail
.text:0000000000011D9C ; } // starts at 118B8
.text:0000000000011D9C ; End of function android::HeifCaptureImageBuilder::build(void)
.text:0000000000011DA0 ; =============== S U B R O U T I N E =======================================
.text:0000000000011DA0 ; Attributes: bp-based frame
.text:0000000000011DA0 sub_11DA0                               ; CODE XREF: android::HeifCaptureImageBuilder::build(void)+3A8↑p
.text:0000000000011DA0 var_118         = -0x118
.text:0000000000011DA0 var_110         = -0x110
.text:0000000000011DA0 var_F0          = -0xF0
.text:0000000000011DA0 var_D0          = -0xD0
.text:0000000000011DA0 var_B0          = -0xB0
.text:0000000000011DA0 var_88          = -0x88
.text:0000000000011DA0 var_80          = -0x80
.text:0000000000011DA0 var_70          = -0x70
.text:0000000000011DA0 var_60          = -0x60
.text:0000000000011DA0 var_38          = -0x38
.text:0000000000011DA0 var_28          = -0x28
.text:0000000000011DA0 var_10          = -0x10
.text:0000000000011DA0 var_s0          =  0
.text:0000000000011DA0 ; __unwind {
.text:0000000000011DA0                 SUB             SP, SP, #0x130
.text:0000000000011DA4                 STP             X28, X19, [SP,#0x120+var_10]
.text:0000000000011DA8                 STP             X29, X30, [SP,#0x120+var_s0]
.text:0000000000011DAC                 ADD             X29, SP, #0x120
.text:0000000000011DB0                 MRS             X19, #3, c13, c0, #2
.text:0000000000011DB4                 STP             Q6, Q7, [SP,#0x120+var_B0]
.text:0000000000011DB8                 STP             Q4, Q5, [SP,#0x120+var_D0]
.text:0000000000011DBC                 MOV             X8, #0xFFFFFFFFFFFFFFD8
.text:0000000000011DC0                 STP             Q2, Q3, [SP,#0x120+var_F0]
.text:0000000000011DC4                 ADD             X10, SP, #0x120+var_110
.text:0000000000011DC8                 STP             Q0, Q1, [SP,#0x120+var_110]
.text:0000000000011DCC                 MOVK            X8, #0xFF80,LSL#32
.text:0000000000011DD0                 STP             X6, X7, [X29,#var_70]
.text:0000000000011DD4                 ADD             X10, X10, #0x80
.text:0000000000011DD8                 STP             X4, X5, [X29,#var_80]
.text:0000000000011DDC                 SUB             X11, X29, #-var_88
.text:0000000000011DE0                 STUR            X3, [X29,#var_88]
.text:0000000000011DE4                 ADRP            X3, #aCover02d@PAGE ; "cover%02d"
.text:0000000000011DE8                 LDR             X9, [X19,#0x28]
.text:0000000000011DEC                 ADD             X3, X3, #aCover02d@PAGEOFF ; "cover%02d"
.text:0000000000011DF0                 SUB             X4, X29, #-var_60
.text:0000000000011DF4                 MOV             W1, WZR
.text:0000000000011DF8                 MOV             W2, #0x100
.text:0000000000011DFC                 STR             X9, [SP,#0x120+var_118]
.text:0000000000011E00                 ADD             X9, X11, #0x28 ; '('
.text:0000000000011E04                 ADD             X11, X29, #0x10
.text:0000000000011E08                 STP             X10, X8, [X29,#var_28]
.text:0000000000011E0C                 SUB             X8, X29, #-var_38
.text:0000000000011E10                 STP             X11, X9, [X29,#var_38]
.text:0000000000011E14                 LDP             Q1, Q0, [X8]
.text:0000000000011E18                 STP             Q1, Q0, [X29,#var_60]
.text:0000000000011E1C                 BL              .__vsprintf_chk
.text:0000000000011E20                 LDR             X8, [X19,#0x28]
.text:0000000000011E24                 LDR             X9, [SP,#0x120+var_118]
.text:0000000000011E28                 CMP             X8, X9
.text:0000000000011E2C                 B.NE            loc_11E40
.text:0000000000011E30                 LDP             X29, X30, [SP,#0x120+var_s0]
.text:0000000000011E34                 LDP             X28, X19, [SP,#0x120+var_10]
.text:0000000000011E38                 ADD             SP, SP, #0x130
.text:0000000000011E3C                 RET
.text:0000000000011E40 ; ---------------------------------------------------------------------------
.text:0000000000011E40 loc_11E40                               ; CODE XREF: sub_11DA0+8C↑j
.text:0000000000011E40                 BL              .__stack_chk_fail
.text:0000000000011E40 ; } // starts at 11DA0
.text:0000000000011E40 ; End of function sub_11DA0
.text:0000000000011E40 ; ---------------------------------------------------------------------------
.text:0000000000011E44                 ALIGN 8
.text:0000000000011E48 ; __unwind {
.text:0000000000011E48                 STR             X19, [SP,#-0x20]!
.text:0000000000011E4C                 STP             X29, X30, [SP,#0x10]
.text:0000000000011E50                 ADD             X29, SP, #0x10
.text:0000000000011E54                 ADRP            X8, #_ZTVN7android6VectorINS_2spINS_16HeifCaptureImageEEEEE_ptr@PAGE
.text:0000000000011E58                 MOV             X19, X0
.text:0000000000011E5C                 LDR             X8, [X8,#_ZTVN7android6VectorINS_2spINS_16HeifCaptureImageEEEEE_ptr@PAGEOFF]
.text:0000000000011E60                 ADD             X8, X8, #0x10
.text:0000000000011E64                 STR             X8, [X0]
.text:0000000000011E68                 BL              ._ZN7android10VectorImpl13finish_vectorEv ; android::VectorImpl::finish_vector(void)
.text:0000000000011E6C                 MOV             X0, X19
.text:0000000000011E70                 BL              ._ZN7android10VectorImplD2Ev ; android::VectorImpl::~VectorImpl()
.text:0000000000011E74                 LDP             X29, X30, [SP,#0x10]
.text:0000000000011E78                 MOV             X0, X19
.text:0000000000011E7C                 LDR             X19, [SP],#0x20
.text:0000000000011E80                 B               ._ZdlPv ; operator delete(void *)
.text:0000000000011E80 ; } // starts at 11E48
.text:0000000000011E80 ; ---------------------------------------------------------------------------
.text:0000000000011E84                 ALIGN 8
.text:0000000000011E88 ; =============== S U B R O U T I N E =======================================
.text:0000000000011E88 ; android::Vector<android::sp<android::HeifCaptureImage>>::do_construct(void *, unsigned long)const
.text:0000000000011E88                 WEAK _ZNK7android6VectorINS_2spINS_16HeifCaptureImageEEEE12do_constructEPvm
.text:0000000000011E88 _ZNK7android6VectorINS_2spINS_16HeifCaptureImageEEEE12do_constructEPvm
.text:0000000000011E88                                         ; DATA XREF: LOAD:0000000000000E70↑o
.text:0000000000011E88                                         ; .data.rel.ro:000000000001D320↓o
.text:0000000000011E88 ; __unwind {
.text:0000000000011E88                 CBZ             X2, locret_11E9C
.text:0000000000011E8C                 MOV             X0, X1  ; s
.text:0000000000011E90                 MOV             W1, WZR ; c
.text:0000000000011E94                 LSL             X2, X2, #3 ; n
.text:0000000000011E98                 B               .memset
.text:0000000000011E9C ; ---------------------------------------------------------------------------
.text:0000000000011E9C locret_11E9C                            ; CODE XREF: android::Vector<android::sp<android::HeifCaptureImage>>::do_construct(void *,ulong)↑j
.text:0000000000011E9C                 RET
.text:0000000000011E9C ; } // starts at 11E88
.text:0000000000011E9C ; End of function android::Vector<android::sp<android::HeifCaptureImage>>::do_construct(void *,ulong)
.text:0000000000011EA0 ; =============== S U B R O U T I N E =======================================
.text:0000000000011EA0 ; Attributes: bp-based frame
.text:0000000000011EA0 ; android::Vector<android::sp<android::HeifCaptureImage>>::do_destroy(void *, unsigned long)const
.text:0000000000011EA0                 WEAK _ZNK7android6VectorINS_2spINS_16HeifCaptureImageEEEE10do_destroyEPvm
.text:0000000000011EA0 _ZNK7android6VectorINS_2spINS_16HeifCaptureImageEEEE10do_destroyEPvm
.text:0000000000011EA0                                         ; DATA XREF: LOAD:0000000000001338↑o
.text:0000000000011EA0                                         ; .data.rel.ro:000000000001D328↓o
.text:0000000000011EA0 var_10          = -0x10
.text:0000000000011EA0 var_s0          =  0
.text:0000000000011EA0 ; __unwind {
.text:0000000000011EA0                 STP             X20, X19, [SP,#-0x10+var_10]!
.text:0000000000011EA4                 STP             X29, X30, [SP,#0x10+var_s0]
.text:0000000000011EA8                 ADD             X29, SP, #0x10
.text:0000000000011EAC                 CBZ             X2, loc_11ED4
.text:0000000000011EB0                 MOV             X19, X2
.text:0000000000011EB4                 MOV             X20, X1
.text:0000000000011EB8 loc_11EB8                               ; CODE XREF: android::Vector<android::sp<android::HeifCaptureImage>>::do_destroy(void *,ulong)+30↓j
.text:0000000000011EB8                 LDR             X0, [X20] ; this
.text:0000000000011EBC                 SUB             X19, X19, #1
.text:0000000000011EC0                 CBZ             X0, loc_11ECC
.text:0000000000011EC4                 MOV             X1, X20 ; void *
.text:0000000000011EC8                 BL              ._ZNK7android7RefBase9decStrongEPKv ; android::RefBase::decStrong(void const*)
.text:0000000000011ECC loc_11ECC                               ; CODE XREF: android::Vector<android::sp<android::HeifCaptureImage>>::do_destroy(void *,ulong)+20↑j
.text:0000000000011ECC                 ADD             X20, X20, #8
.text:0000000000011ED0                 CBNZ            X19, loc_11EB8
.text:0000000000011ED4 loc_11ED4                               ; CODE XREF: android::Vector<android::sp<android::HeifCaptureImage>>::do_destroy(void *,ulong)+C↑j
.text:0000000000011ED4                 LDP             X29, X30, [SP,#0x10+var_s0]
.text:0000000000011ED8                 LDP             X20, X19, [SP+0x10+var_10],#0x20
.text:0000000000011EDC                 RET
.text:0000000000011EDC ; } // starts at 11EA0
.text:0000000000011EDC ; End of function android::Vector<android::sp<android::HeifCaptureImage>>::do_destroy(void *,ulong)
.text:0000000000011EE0 ; =============== S U B R O U T I N E =======================================
.text:0000000000011EE0 ; Attributes: bp-based frame
.text:0000000000011EE0 ; android::Vector<android::sp<android::HeifCaptureImage>>::do_copy(void *, void const*, unsigned long)const
.text:0000000000011EE0                 WEAK _ZNK7android6VectorINS_2spINS_16HeifCaptureImageEEEE7do_copyEPvPKvm
.text:0000000000011EE0 _ZNK7android6VectorINS_2spINS_16HeifCaptureImageEEEE7do_copyEPvPKvm
.text:0000000000011EE0                                         ; DATA XREF: LOAD:0000000000000EA0↑o
.text:0000000000011EE0                                         ; .data.rel.ro:000000000001D330↓o
.text:0000000000011EE0 var_20          = -0x20
.text:0000000000011EE0 var_10          = -0x10
.text:0000000000011EE0 var_s0          =  0
.text:0000000000011EE0 ; __unwind {
.text:0000000000011EE0                 STR             X21, [SP,#-0x10+var_20]!
.text:0000000000011EE4                 STP             X20, X19, [SP,#0x20+var_10]
.text:0000000000011EE8                 STP             X29, X30, [SP,#0x20+var_s0]
.text:0000000000011EEC                 ADD             X29, SP, #0x20
.text:0000000000011EF0                 CBZ             X3, loc_11F24
.text:0000000000011EF4                 MOV             X19, X3
.text:0000000000011EF8                 MOV             X20, X2
.text:0000000000011EFC                 MOV             X21, X1
.text:0000000000011F00 loc_11F00                               ; CODE XREF: android::Vector<android::sp<android::HeifCaptureImage>>::do_copy(void *,void const*,ulong)+40↓j
.text:0000000000011F00                 LDR             X0, [X20] ; this
.text:0000000000011F04                 SUB             X19, X19, #1
.text:0000000000011F08                 STR             X0, [X21]
.text:0000000000011F0C                 CBZ             X0, loc_11F18
.text:0000000000011F10                 MOV             X1, X21 ; void *
.text:0000000000011F14                 BL              ._ZNK7android7RefBase9incStrongEPKv ; android::RefBase::incStrong(void const*)
.text:0000000000011F18 loc_11F18                               ; CODE XREF: android::Vector<android::sp<android::HeifCaptureImage>>::do_copy(void *,void const*,ulong)+2C↑j
.text:0000000000011F18                 ADD             X21, X21, #8
.text:0000000000011F1C                 ADD             X20, X20, #8
.text:0000000000011F20                 CBNZ            X19, loc_11F00
.text:0000000000011F24 loc_11F24                               ; CODE XREF: android::Vector<android::sp<android::HeifCaptureImage>>::do_copy(void *,void const*,ulong)+10↑j
.text:0000000000011F24                 LDP             X29, X30, [SP,#0x20+var_s0]
.text:0000000000011F28                 LDP             X20, X19, [SP,#0x20+var_10]
.text:0000000000011F2C                 LDR             X21, [SP+0x20+var_20],#0x30
.text:0000000000011F30                 RET
.text:0000000000011F30 ; } // starts at 11EE0
.text:0000000000011F30 ; End of function android::Vector<android::sp<android::HeifCaptureImage>>::do_copy(void *,void const*,ulong)
.text:0000000000011F30 ; ---------------------------------------------------------------------------
.text:0000000000011F34                 ALIGN 8
.text:0000000000011F38 ; =============== S U B R O U T I N E =======================================
.text:0000000000011F38 ; Attributes: bp-based frame
.text:0000000000011F38 ; android::Vector<android::sp<android::HeifCaptureImage>>::do_splat(void *, void const*, unsigned long)const
.text:0000000000011F38                 WEAK _ZNK7android6VectorINS_2spINS_16HeifCaptureImageEEEE8do_splatEPvPKvm
.text:0000000000011F38 _ZNK7android6VectorINS_2spINS_16HeifCaptureImageEEEE8do_splatEPvPKvm
.text:0000000000011F38                                         ; DATA XREF: LOAD:0000000000001110↑o
.text:0000000000011F38                                         ; .data.rel.ro:000000000001D338↓o
.text:0000000000011F38 var_20          = -0x20
.text:0000000000011F38 var_10          = -0x10
.text:0000000000011F38 var_s0          =  0
.text:0000000000011F38 ; __unwind {
.text:0000000000011F38                 STR             X21, [SP,#-0x10+var_20]!
.text:0000000000011F3C                 STP             X20, X19, [SP,#0x20+var_10]
.text:0000000000011F40                 STP             X29, X30, [SP,#0x20+var_s0]
.text:0000000000011F44                 ADD             X29, SP, #0x20
.text:0000000000011F48                 CBZ             X3, loc_11F78
.text:0000000000011F4C                 MOV             X19, X3
.text:0000000000011F50                 MOV             X20, X2
.text:0000000000011F54                 MOV             X21, X1
.text:0000000000011F58 loc_11F58                               ; CODE XREF: android::Vector<android::sp<android::HeifCaptureImage>>::do_splat(void *,void const*,ulong)+3C↓j
.text:0000000000011F58                 LDR             X0, [X20] ; this
.text:0000000000011F5C                 SUB             X19, X19, #1
.text:0000000000011F60                 STR             X0, [X21]
.text:0000000000011F64                 CBZ             X0, loc_11F70
.text:0000000000011F68                 MOV             X1, X21 ; void *
.text:0000000000011F6C                 BL              ._ZNK7android7RefBase9incStrongEPKv ; android::RefBase::incStrong(void const*)
.text:0000000000011F70 loc_11F70                               ; CODE XREF: android::Vector<android::sp<android::HeifCaptureImage>>::do_splat(void *,void const*,ulong)+2C↑j
.text:0000000000011F70                 ADD             X21, X21, #8
.text:0000000000011F74                 CBNZ            X19, loc_11F58
.text:0000000000011F78 loc_11F78                               ; CODE XREF: android::Vector<android::sp<android::HeifCaptureImage>>::do_splat(void *,void const*,ulong)+10↑j
.text:0000000000011F78                 LDP             X29, X30, [SP,#0x20+var_s0]
.text:0000000000011F7C                 LDP             X20, X19, [SP,#0x20+var_10]
.text:0000000000011F80                 LDR             X21, [SP+0x20+var_20],#0x30
.text:0000000000011F84                 RET
.text:0000000000011F84 ; } // starts at 11F38
.text:0000000000011F84 ; End of function android::Vector<android::sp<android::HeifCaptureImage>>::do_splat(void *,void const*,ulong)
.text:0000000000011F88 ; =============== S U B R O U T I N E =======================================
.text:0000000000011F88 ; Attributes: bp-based frame
.text:0000000000011F88 ; android::Vector<android::sp<android::HeifCaptureImage>>::do_move_forward(void *, void const*, unsigned long)const
.text:0000000000011F88                 WEAK _ZNK7android6VectorINS_2spINS_16HeifCaptureImageEEEE15do_move_forwardEPvPKvm
.text:0000000000011F88 _ZNK7android6VectorINS_2spINS_16HeifCaptureImageEEEE15do_move_forwardEPvPKvm
.text:0000000000011F88                                         ; DATA XREF: LOAD:0000000000001350↑o
.text:0000000000011F88                                         ; .data.rel.ro:000000000001D340↓o
.text:0000000000011F88 var_40          = -0x40
.text:0000000000011F88 var_30          = -0x30
.text:0000000000011F88 var_28          = -0x28
.text:0000000000011F88 var_20          = -0x20
.text:0000000000011F88 var_10          = -0x10
.text:0000000000011F88 var_s0          =  0
.text:0000000000011F88 ; __unwind {
.text:0000000000011F88                 SUB             SP, SP, #0x50
.text:0000000000011F8C                 STP             X22, X21, [SP,#0x40+var_20]
.text:0000000000011F90                 STP             X20, X19, [SP,#0x40+var_10]
.text:0000000000011F94                 STP             X29, X30, [SP,#0x40+var_s0]
.text:0000000000011F98                 ADD             X29, SP, #0x40
.text:0000000000011F9C                 MRS             X22, #3, c13, c0, #2
.text:0000000000011FA0                 MOV             X20, X2
.text:0000000000011FA4                 LDR             X8, [X22,#0x28]
.text:0000000000011FA8                 MOV             X21, X1
.text:0000000000011FAC                 MOV             X0, X1  ; dest
.text:0000000000011FB0                 MOV             X1, X20 ; src
.text:0000000000011FB4                 LSL             X2, X3, #3 ; n
.text:0000000000011FB8                 MOV             X19, X3
.text:0000000000011FBC                 STR             X8, [SP,#0x40+var_28]
.text:0000000000011FC0                 BL              .memmove
.text:0000000000011FC4                 ADRP            X8, #off_1D0B0@PAGE
.text:0000000000011FC8                 STR             X20, [SP,#0x40+var_30]
.text:0000000000011FCC                 ADD             X8, X8, #off_1D0B0@PAGEOFF
.text:0000000000011FD0                 MOV             X1, SP
.text:0000000000011FD4                 MOV             X0, X19
.text:0000000000011FD8                 STP             X8, X21, [SP,#0x40+var_40]
.text:0000000000011FDC                 BL              ._ZN7android7RefBase10renameRefsEmRKNS_16ReferenceRenamerE ; android::RefBase::renameRefs(ulong,android::ReferenceRenamer const&)
.text:0000000000011FE0                 LDR             X8, [X22,#0x28]
.text:0000000000011FE4                 LDR             X9, [SP,#0x40+var_28]
.text:0000000000011FE8                 CMP             X8, X9
.text:0000000000011FEC                 B.NE            loc_12004
.text:0000000000011FF0                 LDP             X29, X30, [SP,#0x40+var_s0]
.text:0000000000011FF4                 LDP             X20, X19, [SP,#0x40+var_10]
.text:0000000000011FF8                 LDP             X22, X21, [SP,#0x40+var_20]
.text:0000000000011FFC                 ADD             SP, SP, #0x50 ; 'P'
.text:0000000000012000                 RET
.text:0000000000012004 ; ---------------------------------------------------------------------------
.text:0000000000012004 loc_12004                               ; CODE XREF: android::Vector<android::sp<android::HeifCaptureImage>>::do_move_forward(void *,void const*,ulong)+64↑j
.text:0000000000012004                 BL              .__stack_chk_fail
.text:0000000000012004 ; } // starts at 11F88
.text:0000000000012004 ; End of function android::Vector<android::sp<android::HeifCaptureImage>>::do_move_forward(void *,void const*,ulong)
.text:0000000000012008 ; =============== S U B R O U T I N E =======================================
.text:0000000000012008 ; Attributes: bp-based frame
.text:0000000000012008 ; android::Vector<android::sp<android::HeifCaptureImage>>::do_move_backward(void *, void const*, unsigned long)const
.text:0000000000012008                 WEAK _ZNK7android6VectorINS_2spINS_16HeifCaptureImageEEEE16do_move_backwardEPvPKvm
.text:0000000000012008 _ZNK7android6VectorINS_2spINS_16HeifCaptureImageEEEE16do_move_backwardEPvPKvm
.text:0000000000012008                                         ; DATA XREF: LOAD:0000000000000E88↑o
.text:0000000000012008                                         ; .data.rel.ro:000000000001D348↓o
.text:0000000000012008 var_40          = -0x40
.text:0000000000012008 var_30          = -0x30
.text:0000000000012008 var_28          = -0x28
.text:0000000000012008 var_20          = -0x20
.text:0000000000012008 var_10          = -0x10
.text:0000000000012008 var_s0          =  0
.text:0000000000012008 ; __unwind {
.text:0000000000012008                 SUB             SP, SP, #0x50
.text:000000000001200C                 STP             X22, X21, [SP,#0x40+var_20]
.text:0000000000012010                 STP             X20, X19, [SP,#0x40+var_10]
.text:0000000000012014                 STP             X29, X30, [SP,#0x40+var_s0]
.text:0000000000012018                 ADD             X29, SP, #0x40
.text:000000000001201C                 MRS             X22, #3, c13, c0, #2
.text:0000000000012020                 MOV             X20, X2
.text:0000000000012024                 LDR             X8, [X22,#0x28]
.text:0000000000012028                 MOV             X21, X1
.text:000000000001202C                 MOV             X0, X1  ; dest
.text:0000000000012030                 MOV             X1, X20 ; src
.text:0000000000012034                 LSL             X2, X3, #3 ; n
.text:0000000000012038                 MOV             X19, X3
.text:000000000001203C                 STR             X8, [SP,#0x40+var_28]
.text:0000000000012040                 BL              .memmove
.text:0000000000012044                 ADRP            X8, #off_1D0B0@PAGE
.text:0000000000012048                 STR             X20, [SP,#0x40+var_30]
.text:000000000001204C                 ADD             X8, X8, #off_1D0B0@PAGEOFF
.text:0000000000012050                 MOV             X1, SP
.text:0000000000012054                 MOV             X0, X19
.text:0000000000012058                 STP             X8, X21, [SP,#0x40+var_40]
.text:000000000001205C                 BL              ._ZN7android7RefBase10renameRefsEmRKNS_16ReferenceRenamerE ; android::RefBase::renameRefs(ulong,android::ReferenceRenamer const&)
.text:0000000000012060                 LDR             X8, [X22,#0x28]
.text:0000000000012064                 LDR             X9, [SP,#0x40+var_28]
.text:0000000000012068                 CMP             X8, X9
.text:000000000001206C                 B.NE            loc_12084
.text:0000000000012070                 LDP             X29, X30, [SP,#0x40+var_s0]
.text:0000000000012074                 LDP             X20, X19, [SP,#0x40+var_10]
.text:0000000000012078                 LDP             X22, X21, [SP,#0x40+var_20]
.text:000000000001207C                 ADD             SP, SP, #0x50 ; 'P'
.text:0000000000012080                 RET
.text:0000000000012084 ; ---------------------------------------------------------------------------
.text:0000000000012084 loc_12084                               ; CODE XREF: android::Vector<android::sp<android::HeifCaptureImage>>::do_move_backward(void *,void const*,ulong)+64↑j
.text:0000000000012084                 BL              .__stack_chk_fail
.text:0000000000012084 ; } // starts at 12008
.text:0000000000012084 ; End of function android::Vector<android::sp<android::HeifCaptureImage>>::do_move_backward(void *,void const*,ulong)
.text:0000000000012088 ; =============== S U B R O U T I N E =======================================
.text:0000000000012088 ; Attributes: bp-based frame
.text:0000000000012088 ; android::HeifEncoder::create(android::Role)
.text:0000000000012088                 EXPORT _ZN7android11HeifEncoder6createENS_4RoleE
.text:0000000000012088 _ZN7android11HeifEncoder6createENS_4RoleE
.text:0000000000012088                                         ; CODE XREF: android::HeifEncoder::create(android::Role)+C↓j
.text:0000000000012088                                         ; DATA XREF: LOAD:0000000000000ED0↑o ...
.text:0000000000012088 var_20          = -0x20
.text:0000000000012088 var_10          = -0x10
.text:0000000000012088 var_s0          =  0
.text:0000000000012088 ; __unwind {
.text:0000000000012088                 STR             X21, [SP,#-0x10+var_20]!
.text:000000000001208C                 STP             X20, X19, [SP,#0x20+var_10]
.text:0000000000012090                 STP             X29, X30, [SP,#0x20+var_s0]
.text:0000000000012094                 ADD             X29, SP, #0x20
.text:0000000000012098                 MOV             X19, X8
.text:000000000001209C                 SUB             W8, W0, #1
.text:00000000000120A0                 CMP             W8, #1
.text:00000000000120A4                 STR             XZR, [X19]
.text:00000000000120A8                 B.HI            loc_120F8
.text:00000000000120AC                 MOV             W21, W0
.text:00000000000120B0                 MOV             W0, #0x180 ; unsigned __int64
.text:00000000000120B4                 BL              ._Znwm  ; operator new(ulong)
.text:00000000000120B8                 MOV             W1, W21
.text:00000000000120BC                 MOV             X20, X0
.text:00000000000120C0                 BL              ._ZN7android11HeifEncoderC2ENS_4RoleE ; android::HeifEncoder::HeifEncoder(android::Role)
.text:00000000000120C4                 LDR             X21, [X19]
.text:00000000000120C8                 MOV             X0, X20 ; this
.text:00000000000120CC                 MOV             X1, X19 ; void *
.text:00000000000120D0                 BL              ._ZNK7android7RefBase9incStrongEPKv ; android::RefBase::incStrong(void const*)
.text:00000000000120D4                 CBZ             X21, loc_120E4
.text:00000000000120D8                 MOV             X0, X21 ; this
.text:00000000000120DC                 MOV             X1, X19 ; void *
.text:00000000000120E0                 BL              ._ZNK7android7RefBase9decStrongEPKv ; android::RefBase::decStrong(void const*)
.text:00000000000120E4 loc_120E4                               ; CODE XREF: android::HeifEncoder::create(android::Role)+4C↑j
.text:00000000000120E4                 LDR             X8, [X19]
.text:00000000000120E8                 CMP             X21, X8
.text:00000000000120EC                 B.EQ            loc_120F4
.text:00000000000120F0                 BL              ._ZN7android14sp_report_raceEv ; android::sp_report_race(void)
.text:00000000000120F4 loc_120F4                               ; CODE XREF: android::HeifEncoder::create(android::Role)+64↑j
.text:00000000000120F4                 STR             X20, [X19]
.text:00000000000120F8 loc_120F8                               ; CODE XREF: android::HeifEncoder::create(android::Role)+20↑j
.text:00000000000120F8                 LDP             X29, X30, [SP,#0x20+var_s0]
.text:00000000000120FC                 LDP             X20, X19, [SP,#0x20+var_10]
.text:0000000000012100                 LDR             X21, [SP+0x20+var_20],#0x30
.text:0000000000012104                 RET
.text:0000000000012104 ; } // starts at 12088
.text:0000000000012104 ; End of function android::HeifEncoder::create(android::Role)
.text:0000000000012108 ; =============== S U B R O U T I N E =======================================
.text:0000000000012108 ; Attributes: bp-based frame
.text:0000000000012108 ; android::HeifEncoder::HeifEncoder(android::Role)
.text:0000000000012108                 EXPORT _ZN7android11HeifEncoderC2ENS_4RoleE
.text:0000000000012108 _ZN7android11HeifEncoderC2ENS_4RoleE    ; CODE XREF: android::HeifEncoder::HeifEncoder(android::Role)+C↓j
.text:0000000000012108                                         ; DATA XREF: LOAD:0000000000001548↑o ...
.text:0000000000012108 var_50          = -0x50
.text:0000000000012108 var_48          = -0x48
.text:0000000000012108 var_40          = -0x40
.text:0000000000012108 var_30          = -0x30
.text:0000000000012108 var_20          = -0x20
.text:0000000000012108 var_10          = -0x10
.text:0000000000012108 var_s0          =  0
.text:0000000000012108 ; __unwind {
.text:0000000000012108                 SUB             SP, SP, #0x60
.text:000000000001210C                 STR             X25, [SP,#0x50+var_40]
.text:0000000000012110                 STP             X24, X23, [SP,#0x50+var_30]
.text:0000000000012114                 STP             X22, X21, [SP,#0x50+var_20]
.text:0000000000012118                 STP             X20, X19, [SP,#0x50+var_10]
.text:000000000001211C                 STP             X29, X30, [SP,#0x50+var_s0]
.text:0000000000012120                 ADD             X29, SP, #0x50
.text:0000000000012124                 MRS             X25, #3, c13, c0, #2
.text:0000000000012128                 MOV             W19, W1
.text:000000000001212C                 LDR             X8, [X25,#0x28]
.text:0000000000012130                 MOV             X21, X0
.text:0000000000012134                 STR             X8, [SP,#0x50+var_48]
.text:0000000000012138                 BL              ._ZN7android7RefBaseC2Ev ; android::RefBase::RefBase(void)
.text:000000000001213C                 ADRP            X8, #_ZTVN7android11HeifEncoderE_ptr@PAGE
.text:0000000000012140                 MOVI            V0.2D, #0
.text:0000000000012144                 MOV             X20, X21
.text:0000000000012148                 MOV             W1, #8  ; unsigned __int64
.text:000000000001214C                 LDR             X8, [X8,#_ZTVN7android11HeifEncoderE_ptr@PAGEOFF]
.text:0000000000012150                 MOV             W2, #7  ; unsigned int
.text:0000000000012154                 STP             WZR, WZR, [X21,#0x14]
.text:0000000000012158                 STR             Q0, [X20,#0x20]!
.text:000000000001215C                 STR             W19, [X21,#0x10]
.text:0000000000012160                 ADD             X19, X21, #0x50 ; 'P'
.text:0000000000012164                 ADD             X8, X8, #0x10
.text:0000000000012168                 STUR            Q0, [X21,#0x39]
.text:000000000001216C                 MOV             X0, X19 ; this
.text:0000000000012170                 STR             Q0, [X21,#0x30]
.text:0000000000012174                 STR             X8, [X21]
.text:0000000000012178                 BL              ._ZN7android10VectorImplC2Emj ; android::VectorImpl::VectorImpl(ulong,uint)
.text:000000000001217C                 ADRP            X8, #_ZTVN7android6VectorImEE_ptr@PAGE
.text:0000000000012180                 ADD             X0, X21, #0x78 ; 'x' ; mutex
.text:0000000000012184                 MOV             X1, XZR ; mutexattr
.text:0000000000012188                 LDR             X8, [X8,#_ZTVN7android6VectorImEE_ptr@PAGEOFF]
.text:000000000001218C                 ADD             X8, X8, #0x10
.text:0000000000012190                 STR             X8, [X21,#0x50]
.text:0000000000012194                 BL              .pthread_mutex_init
.text:0000000000012198                 MOV             X0, SP  ; attr
.text:000000000001219C                 BL              .pthread_condattr_init
.text:00000000000121A0                 MOV             X0, SP  ; attr
.text:00000000000121A4                 MOV             W1, #1  ; clock_id
.text:00000000000121A8                 BL              .pthread_condattr_setclock
.text:00000000000121AC                 ADD             X0, X21, #0xA0 ; cond
.text:00000000000121B0                 MOV             X1, SP  ; cond_attr
.text:00000000000121B4                 BL              .pthread_cond_init
.text:00000000000121B8                 MOV             X0, SP  ; attr
.text:00000000000121BC                 BL              .pthread_condattr_destroy
.text:00000000000121C0                 ADD             X0, X21, #0xD0 ; this
.text:00000000000121C4                 MOV             W1, #8  ; unsigned __int64
.text:00000000000121C8                 MOV             W2, WZR ; unsigned int
.text:00000000000121CC                 BL              ._ZN7android10VectorImplC2Emj ; android::VectorImpl::VectorImpl(ulong,uint)
.text:00000000000121D0                 ADRP            X8, #_ZTVN7android6VectorINS_2spINS_15ApexMediaBufferEEEEE_ptr@PAGE
.text:00000000000121D4                 ADD             X9, X21, #0x10F
.text:00000000000121D8                 MOV             X0, SP  ; attr
.text:00000000000121DC                 LDR             X8, [X8,#_ZTVN7android6VectorINS_2spINS_15ApexMediaBufferEEEEE_ptr@PAGEOFF]
.text:00000000000121E0                 STP             XZR, XZR, [X21,#0x100]
.text:00000000000121E4                 STR             XZR, [X21,#0xF8]
.text:00000000000121E8                 ADD             X8, X8, #0x10
.text:00000000000121EC                 STR             X8, [X21,#0xD0]
.text:00000000000121F0                 STR             WZR, [X9]
.text:00000000000121F4                 BL              .pthread_condattr_init
.text:00000000000121F8                 MOV             X0, SP  ; attr
.text:00000000000121FC                 MOV             W1, #1  ; clock_id
.text:0000000000012200                 BL              .pthread_condattr_setclock
.text:0000000000012204                 ADD             X0, X21, #0x114 ; cond
.text:0000000000012208                 MOV             X1, SP  ; cond_attr
.text:000000000001220C                 BL              .pthread_cond_init
.text:0000000000012210                 MOV             X0, SP  ; attr
.text:0000000000012214                 BL              .pthread_condattr_destroy
.text:0000000000012218                 ADD             X0, X21, #0x144 ; mutex
.text:000000000001221C                 MOV             X1, XZR ; mutexattr
.text:0000000000012220                 BL              .pthread_mutex_init
.text:0000000000012224                 MOV             W0, #0xF8 ; unsigned __int64
.text:0000000000012228                 STR             XZR, [X21,#0x170]
.text:000000000001222C                 STR             WZR, [X21,#0x178]
.text:0000000000012230                 BL              ._Znwm  ; operator new(ulong)
.text:0000000000012234                 MOV             X23, X0
.text:0000000000012238                 BL              ._ZN7android7ALooperC1Ev ; android::ALooper::ALooper(void)
.text:000000000001223C                 LDR             X24, [X20]
.text:0000000000012240                 MOV             X0, X23 ; this
.text:0000000000012244                 MOV             X1, X20 ; void *
.text:0000000000012248                 BL              ._ZNK7android7RefBase9incStrongEPKv ; android::RefBase::incStrong(void const*)
.text:000000000001224C                 CBZ             X24, loc_1225C
.text:0000000000012250                 MOV             X0, X24 ; this
.text:0000000000012254                 MOV             X1, X20 ; void *
.text:0000000000012258                 BL              ._ZNK7android7RefBase9decStrongEPKv ; android::RefBase::decStrong(void const*)
.text:000000000001225C loc_1225C                               ; CODE XREF: android::HeifEncoder::HeifEncoder(android::Role)+144↑j
.text:000000000001225C                 LDR             X8, [X20]
.text:0000000000012260                 ADD             X22, X21, #0x28 ; '('
.text:0000000000012264                 CMP             X24, X8
.text:0000000000012268                 B.EQ            loc_12270
.text:000000000001226C                 BL              ._ZN7android14sp_report_raceEv ; android::sp_report_race(void)
.text:0000000000012270 loc_12270                               ; CODE XREF: android::HeifEncoder::HeifEncoder(android::Role)+160↑j
.text:0000000000012270                 ADRP            X1, #aHeifencoder@PAGE ; "HeifEncoder"
.text:0000000000012274                 STR             X23, [X21,#0x20]
.text:0000000000012278                 ADD             X1, X1, #aHeifencoder@PAGEOFF ; "HeifEncoder"
.text:000000000001227C                 MOV             X0, X23 ; this
.text:0000000000012280                 BL              ._ZN7android7ALooper7setNameEPKc ; android::ALooper::setName(char const*)
.text:0000000000012284                 LDR             X0, [X21,#0x20] ; this
.text:0000000000012288                 MOV             W1, WZR ; bool
.text:000000000001228C                 MOV             W2, WZR ; bool
.text:0000000000012290                 MOV             W3, WZR ; int
.text:0000000000012294                 BL              ._ZN7android7ALooper5startEbbi ; android::ALooper::start(bool,bool,int)
.text:0000000000012298                 MOV             W0, #0x68 ; 'h' ; unsigned __int64
.text:000000000001229C                 BL              ._Znwm  ; operator new(ulong)
.text:00000000000122A0                 MOV             X23, X0
.text:00000000000122A4                 BL              ._ZN7android7RefBaseC2Ev ; android::RefBase::RefBase(void)
.text:00000000000122A8                 ADRP            X8, #_ZTVN7android8AHandlerE_ptr@PAGE
.text:00000000000122AC                 ADD             X0, X23, #0x30 ; '0' ; this
.text:00000000000122B0                 MOV             W1, #8  ; unsigned __int64
.text:00000000000122B4                 LDR             X8, [X8,#_ZTVN7android8AHandlerE_ptr@PAGEOFF]
.text:00000000000122B8                 MOV             W2, #7  ; unsigned int
.text:00000000000122BC                 STR             WZR, [X23,#0x10]
.text:00000000000122C0                 STR             WZR, [X23,#0x2C]
.text:00000000000122C4                 STP             XZR, XZR, [X23,#0x18]
.text:00000000000122C8                 ADD             X8, X8, #0x10
.text:00000000000122CC                 STRB            WZR, [X23,#0x28]
.text:00000000000122D0                 STR             X8, [X23]
.text:00000000000122D4                 BL              ._ZN7android16SortedVectorImplC2Emj ; android::SortedVectorImpl::SortedVectorImpl(ulong,uint)
.text:00000000000122D8                 ADRP            X8, #_ZTVN7android12SortedVectorINS_16key_value_pair_tIjjEEEE_ptr@PAGE
.text:00000000000122DC                 ADRP            X9, #_ZTVN7android17AHandlerReflectorINS_11HeifEncoderEEE_ptr@PAGE
.text:00000000000122E0                 MOV             X1, X23
.text:00000000000122E4                 LDR             X8, [X8,#_ZTVN7android12SortedVectorINS_16key_value_pair_tIjjEEEE_ptr@PAGEOFF]
.text:00000000000122E8                 MOV             X0, X21 ; this
.text:00000000000122EC                 LDR             X9, [X9,#_ZTVN7android17AHandlerReflectorINS_11HeifEncoderEEE_ptr@PAGEOFF]
.text:00000000000122F0                 STR             X21, [X1,#0x58]! ; void *
.text:00000000000122F4                 ADD             X8, X8, #0x10
.text:00000000000122F8                 ADD             X9, X9, #0x10
.text:00000000000122FC                 STR             X8, [X23,#0x30]
.text:0000000000012300                 STR             X9, [X23]
.text:0000000000012304                 BL              ._ZNK7android7RefBase10createWeakEPKv ; android::RefBase::createWeak(void const*)
.text:0000000000012308                 STR             X0, [X23,#0x60]
.text:000000000001230C                 MOV             X0, X23 ; this
.text:0000000000012310                 LDR             X21, [X21,#0x28]
.text:0000000000012314                 MOV             X1, X22 ; void *
.text:0000000000012318                 BL              ._ZNK7android7RefBase9incStrongEPKv ; android::RefBase::incStrong(void const*)
.text:000000000001231C                 CBZ             X21, loc_1232C
.text:0000000000012320                 MOV             X0, X21 ; this
.text:0000000000012324                 MOV             X1, X22 ; void *
.text:0000000000012328                 BL              ._ZNK7android7RefBase9decStrongEPKv ; android::RefBase::decStrong(void const*)
.text:000000000001232C loc_1232C                               ; CODE XREF: android::HeifEncoder::HeifEncoder(android::Role)+214↑j
.text:000000000001232C                 LDR             X8, [X22]
.text:0000000000012330                 CMP             X21, X8
.text:0000000000012334                 B.EQ            loc_1233C
.text:0000000000012338                 BL              ._ZN7android14sp_report_raceEv ; android::sp_report_race(void)
.text:000000000001233C loc_1233C                               ; CODE XREF: android::HeifEncoder::HeifEncoder(android::Role)+22C↑j
.text:000000000001233C                 LDR             X20, [X20]
.text:0000000000012340                 MOV             X1, SP  ; void *
.text:0000000000012344                 MOV             X0, X23 ; this
.text:0000000000012348                 STR             X23, [X22]
.text:000000000001234C                 STR             X23, [SP,#0x50+var_50]
.text:0000000000012350                 BL              ._ZNK7android7RefBase9incStrongEPKv ; android::RefBase::incStrong(void const*)
.text:0000000000012354                 MOV             X1, SP
.text:0000000000012358                 MOV             X0, X20
.text:000000000001235C                 BL              ._ZN7android7ALooper15registerHandlerERKNS_2spINS_8AHandlerEEE ; android::ALooper::registerHandler(android::sp<android::AHandler> const&)
.text:0000000000012360                 LDR             X0, [SP,#0x50+var_50] ; this
.text:0000000000012364                 CBZ             X0, loc_12370
.text:0000000000012368                 MOV             X1, SP  ; void *
.text:000000000001236C                 BL              ._ZNK7android7RefBase9decStrongEPKv ; android::RefBase::decStrong(void const*)
.text:0000000000012370 loc_12370                               ; CODE XREF: android::HeifEncoder::HeifEncoder(android::Role)+25C↑j
.text:0000000000012370                 MOV             X0, X19 ; this
.text:0000000000012374                 BL              ._ZN7android10VectorImpl5clearEv ; android::VectorImpl::clear(void)
.text:0000000000012378                 LDR             X8, [X25,#0x28]
.text:000000000001237C                 LDR             X9, [SP,#0x50+var_48]
.text:0000000000012380                 CMP             X8, X9
.text:0000000000012384                 B.NE            loc_123A4
.text:0000000000012388                 LDP             X29, X30, [SP,#0x50+var_s0]
.text:000000000001238C                 LDP             X20, X19, [SP,#0x50+var_10]
.text:0000000000012390                 LDP             X22, X21, [SP,#0x50+var_20]
.text:0000000000012394                 LDP             X24, X23, [SP,#0x50+var_30]
.text:0000000000012398                 LDR             X25, [SP,#0x50+var_40]
.text:000000000001239C                 ADD             SP, SP, #0x60 ; '`'
.text:00000000000123A0                 RET
.text:00000000000123A4 ; ---------------------------------------------------------------------------
.text:00000000000123A4 loc_123A4                               ; CODE XREF: android::HeifEncoder::HeifEncoder(android::Role)+27C↑j
.text:00000000000123A4                 BL              .__stack_chk_fail
.text:00000000000123A4 ; } // starts at 12108
.text:00000000000123A4 ; End of function android::HeifEncoder::HeifEncoder(android::Role)
.text:00000000000123A8 ; =============== S U B R O U T I N E =======================================
.text:00000000000123A8 ; Attributes: bp-based frame
.text:00000000000123A8 ; void __fastcall android::HeifEncoder::~HeifEncoder(android::HeifEncoder *__hidden this)
.text:00000000000123A8                 EXPORT _ZN7android11HeifEncoderD2Ev
.text:00000000000123A8 _ZN7android11HeifEncoderD2Ev            ; CODE XREF: android::HeifEncoder::~HeifEncoder()+C↓j
.text:00000000000123A8                                         ; DATA XREF: LOAD:0000000000001620↑o ...
.text:00000000000123A8 var_40          = -0x40
.text:00000000000123A8 var_30          = -0x30
.text:00000000000123A8 var_20          = -0x20
.text:00000000000123A8 var_10          = -0x10
.text:00000000000123A8 var_s0          =  0
.text:00000000000123A8 ; __unwind {
.text:00000000000123A8                 STR             X25, [SP,#-0x10+var_40]!
.text:00000000000123AC                 STP             X24, X23, [SP,#0x40+var_30]
.text:00000000000123B0                 STP             X22, X21, [SP,#0x40+var_20]
.text:00000000000123B4                 STP             X20, X19, [SP,#0x40+var_10]
.text:00000000000123B8                 STP             X29, X30, [SP,#0x40+var_s0]
.text:00000000000123BC                 ADD             X29, SP, #0x40
.text:00000000000123C0                 ADRP            X8, #_ZTVN7android11HeifEncoderE_ptr@PAGE
.text:00000000000123C4                 MOV             X19, X0
.text:00000000000123C8                 LDR             X8, [X8,#_ZTVN7android11HeifEncoderE_ptr@PAGEOFF]
.text:00000000000123CC                 ADD             X8, X8, #0x10
.text:00000000000123D0                 STR             X8, [X0]
.text:00000000000123D4                 BL              ._ZN7android11HeifEncoder4stopEv ; android::HeifEncoder::stop(void)
.text:00000000000123D8                 MOV             X20, X19
.text:00000000000123DC                 LDR             X0, [X20,#0x20]! ; this
.text:00000000000123E0                 CBZ             X0, loc_12448
.text:00000000000123E4                 LDR             X8, [X19,#0x28]
.text:00000000000123E8                 LDR             W1, [X8,#0x10] ; int
.text:00000000000123EC                 BL              ._ZN7android7ALooper17unregisterHandlerEi ; android::ALooper::unregisterHandler(int)
.text:00000000000123F0                 LDR             X0, [X19,#0x20] ; this
.text:00000000000123F4                 BL              ._ZN7android7ALooper4stopEv ; android::ALooper::stop(void)
.text:00000000000123F8                 LDR             X21, [X19,#0x20]
.text:00000000000123FC                 CBZ             X21, loc_12420
.text:0000000000012400                 MOV             X0, X21 ; this
.text:0000000000012404                 MOV             X1, X20 ; void *
.text:0000000000012408                 BL              ._ZNK7android7RefBase9decStrongEPKv ; android::RefBase::decStrong(void const*)
.text:000000000001240C                 LDR             X8, [X20]
.text:0000000000012410                 CMP             X21, X8
.text:0000000000012414                 B.EQ            loc_1241C
.text:0000000000012418                 BL              ._ZN7android14sp_report_raceEv ; android::sp_report_race(void)
.text:000000000001241C loc_1241C                               ; CODE XREF: android::HeifEncoder::~HeifEncoder()+6C↑j
.text:000000000001241C                 STR             XZR, [X20]
.text:0000000000012420 loc_12420                               ; CODE XREF: android::HeifEncoder::~HeifEncoder()+54↑j
.text:0000000000012420                 LDR             X21, [X20]
.text:0000000000012424                 CBZ             X21, loc_12434
.text:0000000000012428                 MOV             X0, X21 ; this
.text:000000000001242C                 MOV             X1, X20 ; void *
.text:0000000000012430                 BL              ._ZNK7android7RefBase9decStrongEPKv ; android::RefBase::decStrong(void const*)
.text:0000000000012434 loc_12434                               ; CODE XREF: android::HeifEncoder::~HeifEncoder()+7C↑j
.text:0000000000012434                 LDR             X8, [X20]
.text:0000000000012438                 CMP             X21, X8
.text:000000000001243C                 B.EQ            loc_12444
.text:0000000000012440                 BL              ._ZN7android14sp_report_raceEv ; android::sp_report_race(void)
.text:0000000000012444 loc_12444                               ; CODE XREF: android::HeifEncoder::~HeifEncoder()+94↑j
.text:0000000000012444                 STR             XZR, [X20]
.text:0000000000012448 loc_12448                               ; CODE XREF: android::HeifEncoder::~HeifEncoder()+38↑j
.text:0000000000012448                 MOV             X21, X19
.text:000000000001244C                 LDR             X8, [X21,#0x28]!
.text:0000000000012450                 CBZ             X8, loc_124A4
.text:0000000000012454                 LDR             X22, [X21]
.text:0000000000012458                 CBZ             X22, loc_1247C
.text:000000000001245C                 MOV             X0, X22 ; this
.text:0000000000012460                 MOV             X1, X21 ; void *
.text:0000000000012464                 BL              ._ZNK7android7RefBase9decStrongEPKv ; android::RefBase::decStrong(void const*)
.text:0000000000012468                 LDR             X8, [X21]
.text:000000000001246C                 CMP             X22, X8
.text:0000000000012470                 B.EQ            loc_12478
.text:0000000000012474                 BL              ._ZN7android14sp_report_raceEv ; android::sp_report_race(void)
.text:0000000000012478 loc_12478                               ; CODE XREF: android::HeifEncoder::~HeifEncoder()+C8↑j
.text:0000000000012478                 STR             XZR, [X21]
.text:000000000001247C loc_1247C                               ; CODE XREF: android::HeifEncoder::~HeifEncoder()+B0↑j
.text:000000000001247C                 LDR             X22, [X21]
.text:0000000000012480                 CBZ             X22, loc_12490
.text:0000000000012484                 MOV             X0, X22 ; this
.text:0000000000012488                 MOV             X1, X21 ; void *
.text:000000000001248C                 BL              ._ZNK7android7RefBase9decStrongEPKv ; android::RefBase::decStrong(void const*)
.text:0000000000012490 loc_12490                               ; CODE XREF: android::HeifEncoder::~HeifEncoder()+D8↑j
.text:0000000000012490                 LDR             X8, [X21]
.text:0000000000012494                 CMP             X22, X8
.text:0000000000012498                 B.EQ            loc_124A0
.text:000000000001249C                 BL              ._ZN7android14sp_report_raceEv ; android::sp_report_race(void)
.text:00000000000124A0 loc_124A0                               ; CODE XREF: android::HeifEncoder::~HeifEncoder()+F0↑j
.text:00000000000124A0                 STR             XZR, [X21]
.text:00000000000124A4 loc_124A4                               ; CODE XREF: android::HeifEncoder::~HeifEncoder()+A8↑j
.text:00000000000124A4                 LDR             X8, [X19,#0x108]
.text:00000000000124A8                 ADD             X22, X19, #0x108
.text:00000000000124AC                 CBZ             X8, loc_124D8
.text:00000000000124B0                 LDR             X23, [X22]
.text:00000000000124B4                 CBZ             X23, loc_124C4
.text:00000000000124B8                 MOV             X0, X23 ; this
.text:00000000000124BC                 MOV             X1, X22 ; void *
.text:00000000000124C0                 BL              ._ZNK7android7RefBase9decStrongEPKv ; android::RefBase::decStrong(void const*)
.text:00000000000124C4 loc_124C4                               ; CODE XREF: android::HeifEncoder::~HeifEncoder()+10C↑j
.text:00000000000124C4                 LDR             X8, [X22]
.text:00000000000124C8                 CMP             X23, X8
.text:00000000000124CC                 B.EQ            loc_124D4
.text:00000000000124D0                 BL              ._ZN7android14sp_report_raceEv ; android::sp_report_race(void)
.text:00000000000124D4 loc_124D4                               ; CODE XREF: android::HeifEncoder::~HeifEncoder()+124↑j
.text:00000000000124D4                 STR             XZR, [X22]
.text:00000000000124D8 loc_124D8                               ; CODE XREF: android::HeifEncoder::~HeifEncoder()+104↑j
.text:00000000000124D8                 LDR             X8, [X19,#0x100]
.text:00000000000124DC                 ADD             X23, X19, #0x100
.text:00000000000124E0                 CBZ             X8, loc_12534
.text:00000000000124E4                 LDR             X24, [X23]
.text:00000000000124E8                 CBZ             X24, loc_1250C
.text:00000000000124EC                 MOV             X0, X24 ; this
.text:00000000000124F0                 MOV             X1, X23 ; void *
.text:00000000000124F4                 BL              ._ZNK7android7RefBase9decStrongEPKv ; android::RefBase::decStrong(void const*)
.text:00000000000124F8                 LDR             X8, [X23]
.text:00000000000124FC                 CMP             X24, X8
.text:0000000000012500                 B.EQ            loc_12508
.text:0000000000012504                 BL              ._ZN7android14sp_report_raceEv ; android::sp_report_race(void)
.text:0000000000012508 loc_12508                               ; CODE XREF: android::HeifEncoder::~HeifEncoder()+158↑j
.text:0000000000012508                 STR             XZR, [X23]
.text:000000000001250C loc_1250C                               ; CODE XREF: android::HeifEncoder::~HeifEncoder()+140↑j
.text:000000000001250C                 LDR             X24, [X23]
.text:0000000000012510                 CBZ             X24, loc_12520
.text:0000000000012514                 MOV             X0, X24 ; this
.text:0000000000012518                 MOV             X1, X23 ; void *
.text:000000000001251C                 BL              ._ZNK7android7RefBase9decStrongEPKv ; android::RefBase::decStrong(void const*)
.text:0000000000012520 loc_12520                               ; CODE XREF: android::HeifEncoder::~HeifEncoder()+168↑j
.text:0000000000012520                 LDR             X8, [X23]
.text:0000000000012524                 CMP             X24, X8
.text:0000000000012528                 B.EQ            loc_12530
.text:000000000001252C                 BL              ._ZN7android14sp_report_raceEv ; android::sp_report_race(void)
.text:0000000000012530 loc_12530                               ; CODE XREF: android::HeifEncoder::~HeifEncoder()+180↑j
.text:0000000000012530                 STR             XZR, [X23]
.text:0000000000012534 loc_12534                               ; CODE XREF: android::HeifEncoder::~HeifEncoder()+138↑j
.text:0000000000012534                 MOV             X24, X19
.text:0000000000012538                 LDR             X25, [X24,#0xF8]!
.text:000000000001253C                 CBZ             X25, loc_1254C
.text:0000000000012540                 MOV             X0, X25 ; this
.text:0000000000012544                 MOV             X1, X24 ; void *
.text:0000000000012548                 BL              ._ZNK7android7RefBase9decStrongEPKv ; android::RefBase::decStrong(void const*)
.text:000000000001254C loc_1254C                               ; CODE XREF: android::HeifEncoder::~HeifEncoder()+194↑j
.text:000000000001254C                 LDR             X8, [X24]
.text:0000000000012550                 CMP             X25, X8
.text:0000000000012554                 B.EQ            loc_1255C
.text:0000000000012558                 BL              ._ZN7android14sp_report_raceEv ; android::sp_report_race(void)
.text:000000000001255C loc_1255C                               ; CODE XREF: android::HeifEncoder::~HeifEncoder()+1AC↑j
.text:000000000001255C                 ADD             X25, X19, #0xD0
.text:0000000000012560                 STR             XZR, [X19,#0xF8]
.text:0000000000012564                 MOV             X0, X25 ; this
.text:0000000000012568                 BL              ._ZN7android10VectorImpl5clearEv ; android::VectorImpl::clear(void)
.text:000000000001256C                 LDR             X0, [X19,#0x170] ; this
.text:0000000000012570                 CBZ             X0, loc_1257C
.text:0000000000012574                 ADD             X1, X19, #0x170 ; void *
.text:0000000000012578                 BL              ._ZNK7android7RefBase9decStrongEPKv ; android::RefBase::decStrong(void const*)
.text:000000000001257C loc_1257C                               ; CODE XREF: android::HeifEncoder::~HeifEncoder()+1C8↑j
.text:000000000001257C                 ADD             X0, X19, #0x144 ; mutex
.text:0000000000012580                 BL              .pthread_mutex_destroy
.text:0000000000012584                 ADD             X0, X19, #0x114 ; cond
.text:0000000000012588                 BL              .pthread_cond_destroy
.text:000000000001258C                 LDR             X0, [X19,#0x108] ; this
.text:0000000000012590                 CBZ             X0, loc_1259C
.text:0000000000012594                 MOV             X1, X22 ; void *
.text:0000000000012598                 BL              ._ZNK7android7RefBase9decStrongEPKv ; android::RefBase::decStrong(void const*)
.text:000000000001259C loc_1259C                               ; CODE XREF: android::HeifEncoder::~HeifEncoder()+1E8↑j
.text:000000000001259C                 LDR             X0, [X23] ; this
.text:00000000000125A0                 CBZ             X0, loc_125AC
.text:00000000000125A4                 MOV             X1, X23 ; void *
.text:00000000000125A8                 BL              ._ZNK7android7RefBase9decStrongEPKv ; android::RefBase::decStrong(void const*)
.text:00000000000125AC loc_125AC                               ; CODE XREF: android::HeifEncoder::~HeifEncoder()+1F8↑j
.text:00000000000125AC                 LDR             X0, [X24] ; this
.text:00000000000125B0                 CBZ             X0, loc_125BC
.text:00000000000125B4                 MOV             X1, X24 ; void *
.text:00000000000125B8                 BL              ._ZNK7android7RefBase9decStrongEPKv ; android::RefBase::decStrong(void const*)
.text:00000000000125BC loc_125BC                               ; CODE XREF: android::HeifEncoder::~HeifEncoder()+208↑j
.text:00000000000125BC                 ADRP            X8, #_ZTVN7android6VectorINS_2spINS_15ApexMediaBufferEEEEE_ptr@PAGE
.text:00000000000125C0                 MOV             X0, X25 ; this
.text:00000000000125C4                 LDR             X8, [X8,#_ZTVN7android6VectorINS_2spINS_15ApexMediaBufferEEEEE_ptr@PAGEOFF]
.text:00000000000125C8                 ADD             X8, X8, #0x10
.text:00000000000125CC                 STR             X8, [X19,#0xD0]
.text:00000000000125D0                 BL              ._ZN7android10VectorImpl13finish_vectorEv ; android::VectorImpl::finish_vector(void)
.text:00000000000125D4                 MOV             X0, X25 ; this
.text:00000000000125D8                 BL              ._ZN7android10VectorImplD2Ev ; android::VectorImpl::~VectorImpl()
.text:00000000000125DC                 ADD             X0, X19, #0xA0 ; cond
.text:00000000000125E0                 BL              .pthread_cond_destroy
.text:00000000000125E4                 ADD             X0, X19, #0x78 ; 'x' ; mutex
.text:00000000000125E8                 BL              .pthread_mutex_destroy
.text:00000000000125EC                 ADRP            X8, #_ZTVN7android6VectorImEE_ptr@PAGE
.text:00000000000125F0                 MOV             X22, X19
.text:00000000000125F4                 LDR             X8, [X8,#_ZTVN7android6VectorImEE_ptr@PAGEOFF]
.text:00000000000125F8                 ADD             X8, X8, #0x10
.text:00000000000125FC                 STR             X8, [X22,#0x50]!
.text:0000000000012600                 MOV             X0, X22 ; this
.text:0000000000012604                 BL              ._ZN7android10VectorImpl13finish_vectorEv ; android::VectorImpl::finish_vector(void)
.text:0000000000012608                 MOV             X0, X22 ; this
.text:000000000001260C                 BL              ._ZN7android10VectorImplD2Ev ; android::VectorImpl::~VectorImpl()
.text:0000000000012610                 MOV             X1, X19
.text:0000000000012614                 LDR             X0, [X1,#0x40]! ; void *
.text:0000000000012618                 CBZ             X0, loc_12620
.text:000000000001261C                 BL              ._ZNK7android7RefBase9decStrongEPKv ; android::RefBase::decStrong(void const*)
.text:0000000000012620 loc_12620                               ; CODE XREF: android::HeifEncoder::~HeifEncoder()+270↑j
.text:0000000000012620                 MOV             X1, X19
.text:0000000000012624                 LDR             X0, [X1,#0x38]! ; void *
.text:0000000000012628                 CBZ             X0, loc_12630
.text:000000000001262C                 BL              ._ZNK7android7RefBase9decStrongEPKv ; android::RefBase::decStrong(void const*)
.text:0000000000012630 loc_12630                               ; CODE XREF: android::HeifEncoder::~HeifEncoder()+280↑j
.text:0000000000012630                 MOV             X1, X19
.text:0000000000012634                 LDR             X0, [X1,#0x30]! ; void *
.text:0000000000012638                 CBZ             X0, loc_12640
.text:000000000001263C                 BL              ._ZNK7android7RefBase9decStrongEPKv ; android::RefBase::decStrong(void const*)
.text:0000000000012640 loc_12640                               ; CODE XREF: android::HeifEncoder::~HeifEncoder()+290↑j
.text:0000000000012640                 LDR             X0, [X21] ; this
.text:0000000000012644                 CBZ             X0, loc_12650
.text:0000000000012648                 MOV             X1, X21 ; void *
.text:000000000001264C                 BL              ._ZNK7android7RefBase9decStrongEPKv ; android::RefBase::decStrong(void const*)
.text:0000000000012650 loc_12650                               ; CODE XREF: android::HeifEncoder::~HeifEncoder()+29C↑j
.text:0000000000012650                 LDR             X0, [X20] ; this
.text:0000000000012654                 CBZ             X0, loc_12660
.text:0000000000012658                 MOV             X1, X20 ; void *
.text:000000000001265C                 BL              ._ZNK7android7RefBase9decStrongEPKv ; android::RefBase::decStrong(void const*)
.text:0000000000012660 loc_12660                               ; CODE XREF: android::HeifEncoder::~HeifEncoder()+2AC↑j
.text:0000000000012660                 MOV             X0, X19 ; this
.text:0000000000012664                 LDP             X29, X30, [SP,#0x40+var_s0]
.text:0000000000012668                 LDP             X20, X19, [SP,#0x40+var_10]
.text:000000000001266C                 LDP             X22, X21, [SP,#0x40+var_20]
.text:0000000000012670                 LDP             X24, X23, [SP,#0x40+var_30]
.text:0000000000012674                 LDR             X25, [SP+0x40+var_40],#0x50
.text:0000000000012678                 B               ._ZN7android7RefBaseD2Ev ; android::RefBase::~RefBase()
.text:0000000000012678 ; } // starts at 123A8
.text:0000000000012678 ; End of function android::HeifEncoder::~HeifEncoder()
.text:0000000000012678 ; ---------------------------------------------------------------------------
.text:000000000001267C                 ALIGN 0x20
.text:0000000000012680 ; =============== S U B R O U T I N E =======================================
.text:0000000000012680 ; Attributes: bp-based frame
.text:0000000000012680 ; __int64 __fastcall android::HeifEncoder::stop(android::HeifEncoder *__hidden this)
.text:0000000000012680                 EXPORT _ZN7android11HeifEncoder4stopEv
.text:0000000000012680 _ZN7android11HeifEncoder4stopEv         ; CODE XREF: android::HeifEncoder::stop(void)+C↓j
.text:0000000000012680                                         ; DATA XREF: LOAD:0000000000001710↑o ...
.text:0000000000012680 var_30          = -0x30
.text:0000000000012680 var_24          = -0x24
.text:0000000000012680 var_20          = -0x20
.text:0000000000012680 var_18          = -0x18
.text:0000000000012680 var_10          = -0x10
.text:0000000000012680 var_s0          =  0
.text:0000000000012680 ; __unwind {
.text:0000000000012680                 SUB             SP, SP, #0x40
.text:0000000000012684                 STP             X20, X19, [SP,#0x30+var_10]
.text:0000000000012688                 STP             X29, X30, [SP,#0x30+var_s0]
.text:000000000001268C                 ADD             X29, SP, #0x30
.text:0000000000012690                 MRS             X20, #3, c13, c0, #2
.text:0000000000012694                 LDR             X8, [X20,#0x28]
.text:0000000000012698                 STR             X8, [SP,#0x30+var_18]
.text:000000000001269C                 LDRB            W8, [X0,#0x48]
.text:00000000000126A0                 CBZ             W8, loc_12758
.text:00000000000126A4                 MOV             X19, X0
.text:00000000000126A8                 MOV             W0, #0xA40 ; unsigned __int64
.text:00000000000126AC                 BL              ._Znwm  ; operator new(ulong)
.text:00000000000126B0                 LDR             X8, [X19,#0x28]
.text:00000000000126B4                 MOV             X19, X0
.text:00000000000126B8                 STR             X8, [SP,#0x30+var_20]
.text:00000000000126BC                 CBZ             X8, loc_126CC
.text:00000000000126C0                 ADD             X1, SP, #0x30+var_20 ; void *
.text:00000000000126C4                 MOV             X0, X8  ; this
.text:00000000000126C8                 BL              ._ZNK7android7RefBase9incStrongEPKv ; android::RefBase::incStrong(void const*)
.text:00000000000126CC loc_126CC                               ; CODE XREF: android::HeifEncoder::stop(void)+3C↑j
.text:00000000000126CC                 ADD             X2, SP, #0x30+var_20
.text:00000000000126D0                 MOV             X0, X19
.text:00000000000126D4                 MOV             W1, #1
.text:00000000000126D8                 BL              ._ZN7android8AMessageC1EjRKNS_2spIKNS_8AHandlerEEE ; android::AMessage::AMessage(uint,android::sp<android::AHandler const> const&)
.text:00000000000126DC                 MOV             X1, SP  ; void *
.text:00000000000126E0                 STR             X19, [SP,#0x30+var_30]
.text:00000000000126E4                 MOV             X0, X19 ; this
.text:00000000000126E8                 BL              ._ZNK7android7RefBase9incStrongEPKv ; android::RefBase::incStrong(void const*)
.text:00000000000126EC                 LDR             X0, [SP,#0x30+var_20] ; this
.text:00000000000126F0                 CBZ             X0, loc_126FC
.text:00000000000126F4                 ADD             X1, SP, #0x30+var_20 ; void *
.text:00000000000126F8                 BL              ._ZNK7android7RefBase9decStrongEPKv ; android::RefBase::decStrong(void const*)
.text:00000000000126FC loc_126FC                               ; CODE XREF: android::HeifEncoder::stop(void)+70↑j
.text:00000000000126FC                 LDR             X0, [SP,#0x30+var_30]
.text:0000000000012700                 ADD             X1, SP, #0x30+var_20
.text:0000000000012704                 STR             XZR, [SP,#0x30+var_20]
.text:0000000000012708                 BL              ._ZN7android8AMessage20postAndAwaitResponseEPNS_2spIS0_EE ; android::AMessage::postAndAwaitResponse(android::sp<android::AMessage> *)
.text:000000000001270C                 MOV             W19, W0
.text:0000000000012710                 STR             W0, [SP,#0x30+var_24]
.text:0000000000012714                 CBZ             W0, loc_12778
.text:0000000000012718                 LDR             X0, [SP,#0x30+var_20] ; this
.text:000000000001271C                 CBZ             X0, loc_12728
.text:0000000000012720 loc_12720                               ; CODE XREF: android::HeifEncoder::stop(void)+118↓j
.text:0000000000012720                                         ; android::HeifEncoder::stop(void)+12C↓j
.text:0000000000012720                 ADD             X1, SP, #0x30+var_20 ; void *
.text:0000000000012724                 BL              ._ZNK7android7RefBase9decStrongEPKv ; android::RefBase::decStrong(void const*)
.text:0000000000012728 loc_12728                               ; CODE XREF: android::HeifEncoder::stop(void)+9C↑j
.text:0000000000012728                                         ; android::HeifEncoder::stop(void)+11C↓j ...
.text:0000000000012728                 CBZ             W19, loc_12748
.text:000000000001272C                 ADRP            X1, #aHeifencoder@PAGE ; "HeifEncoder"
.text:0000000000012730                 ADRP            X2, #aMeetAnErrorDWh@PAGE ; "Meet an error(%d) when stopping..."
.text:0000000000012734                 ADD             X1, X1, #aHeifencoder@PAGEOFF ; "HeifEncoder"
.text:0000000000012738                 ADD             X2, X2, #aMeetAnErrorDWh@PAGEOFF ; "Meet an error(%d) when stopping..."
.text:000000000001273C                 MOV             W0, #5
.text:0000000000012740                 MOV             W3, W19
.text:0000000000012744                 BL              .__android_log_print
.text:0000000000012748 loc_12748                               ; CODE XREF: android::HeifEncoder::stop(void):loc_12728↑j
.text:0000000000012748                 LDR             X0, [SP,#0x30+var_30] ; this
.text:000000000001274C                 CBZ             X0, loc_12758
.text:0000000000012750                 MOV             X1, SP  ; void *
.text:0000000000012754                 BL              ._ZNK7android7RefBase9decStrongEPKv ; android::RefBase::decStrong(void const*)
.text:0000000000012758 loc_12758                               ; CODE XREF: android::HeifEncoder::stop(void)+20↑j
.text:0000000000012758                                         ; android::HeifEncoder::stop(void)+CC↑j
.text:0000000000012758                 LDR             X8, [X20,#0x28]
.text:000000000001275C                 LDR             X9, [SP,#0x30+var_18]
.text:0000000000012760                 CMP             X8, X9
.text:0000000000012764                 B.NE            loc_127B4
.text:0000000000012768                 LDP             X29, X30, [SP,#0x30+var_s0]
.text:000000000001276C                 LDP             X20, X19, [SP,#0x30+var_10]
.text:0000000000012770                 ADD             SP, SP, #0x40 ; '@'
.text:0000000000012774                 RET
.text:0000000000012778 ; ---------------------------------------------------------------------------
.text:0000000000012778 loc_12778                               ; CODE XREF: android::HeifEncoder::stop(void)+94↑j
.text:0000000000012778                 LDR             X0, [SP,#0x30+var_20] ; this
.text:000000000001277C                 ADRP            X1, #aErr@PAGE ; "err"
.text:0000000000012780                 ADD             X1, X1, #aErr@PAGEOFF ; "err"
.text:0000000000012784                 ADD             X2, SP, #0x30+var_24 ; int *
.text:0000000000012788                 BL              ._ZNK7android8AMessage9findInt32EPKcPi ; android::AMessage::findInt32(char const*,int *)
.text:000000000001278C                 TBZ             W0, #0, loc_127A0
.text:0000000000012790                 LDR             W19, [SP,#0x30+var_24]
.text:0000000000012794                 LDR             X0, [SP,#0x30+var_20]
.text:0000000000012798                 CBNZ            X0, loc_12720
.text:000000000001279C                 B               loc_12728
.text:00000000000127A0 ; ---------------------------------------------------------------------------
.text:00000000000127A0 loc_127A0                               ; CODE XREF: android::HeifEncoder::stop(void)+10C↑j
.text:00000000000127A0                 MOV             W19, WZR
.text:00000000000127A4                 STR             WZR, [SP,#0x30+var_24]
.text:00000000000127A8                 LDR             X0, [SP,#0x30+var_20]
.text:00000000000127AC                 CBNZ            X0, loc_12720
.text:00000000000127B0                 B               loc_12728
.text:00000000000127B4 ; ---------------------------------------------------------------------------
.text:00000000000127B4 loc_127B4                               ; CODE XREF: android::HeifEncoder::stop(void)+E4↑j
.text:00000000000127B4                 BL              .__stack_chk_fail
.text:00000000000127B4 ; } // starts at 12680
.text:00000000000127B4 ; End of function android::HeifEncoder::stop(void)
.text:00000000000127B8 ; ---------------------------------------------------------------------------
.text:00000000000127B8 ; __unwind {
.text:00000000000127B8                 STR             X19, [SP,#-0x20]!
.text:00000000000127BC                 STP             X29, X30, [SP,#0x10]
.text:00000000000127C0                 ADD             X29, SP, #0x10
.text:00000000000127C4                 ADRP            X8, #_ZTVN7android6VectorINS_2spINS_15ApexMediaBufferEEEEE_ptr@PAGE
.text:00000000000127C8                 MOV             X19, X0
.text:00000000000127CC                 LDR             X8, [X8,#_ZTVN7android6VectorINS_2spINS_15ApexMediaBufferEEEEE_ptr@PAGEOFF]
.text:00000000000127D0                 ADD             X8, X8, #0x10
.text:00000000000127D4                 STR             X8, [X0]
.text:00000000000127D8                 BL              ._ZN7android10VectorImpl13finish_vectorEv ; android::VectorImpl::finish_vector(void)
.text:00000000000127DC                 LDP             X29, X30, [SP,#0x10]
.text:00000000000127E0                 MOV             X0, X19
.text:00000000000127E4                 LDR             X19, [SP],#0x20
.text:00000000000127E8                 B               ._ZN7android10VectorImplD2Ev ; android::VectorImpl::~VectorImpl()
.text:00000000000127E8 ; } // starts at 127B8
.text:00000000000127E8 ; ---------------------------------------------------------------------------
.text:00000000000127EC                 ALIGN 0x10
.text:00000000000127F0 ; __unwind {
.text:00000000000127F0                 STR             X19, [SP,#-0x20]!
.text:00000000000127F4                 STP             X29, X30, [SP,#0x10]
.text:00000000000127F8                 ADD             X29, SP, #0x10
.text:00000000000127FC                 ADRP            X8, #_ZTVN7android6VectorImEE_ptr@PAGE
.text:0000000000012800                 MOV             X19, X0
.text:0000000000012804                 LDR             X8, [X8,#_ZTVN7android6VectorImEE_ptr@PAGEOFF]
.text:0000000000012808                 ADD             X8, X8, #0x10
.text:000000000001280C                 STR             X8, [X0]
.text:0000000000012810                 BL              ._ZN7android10VectorImpl13finish_vectorEv ; android::VectorImpl::finish_vector(void)
.text:0000000000012814                 LDP             X29, X30, [SP,#0x10]
.text:0000000000012818                 MOV             X0, X19
.text:000000000001281C                 LDR             X19, [SP],#0x20
.text:0000000000012820                 B               ._ZN7android10VectorImplD2Ev ; android::VectorImpl::~VectorImpl()
.text:0000000000012820 ; } // starts at 127F0
.text:0000000000012820 ; ---------------------------------------------------------------------------
.text:0000000000012824                 ALIGN 8
.text:0000000000012828 ; =============== S U B R O U T I N E =======================================
.text:0000000000012828 ; Attributes: bp-based frame
.text:0000000000012828 ; void __fastcall android::HeifEncoder::~HeifEncoder(android::HeifEncoder *__hidden this)
.text:0000000000012828                 EXPORT _ZN7android11HeifEncoderD0Ev
.text:0000000000012828 _ZN7android11HeifEncoderD0Ev            ; DATA XREF: LOAD:0000000000000F48↑o
.text:0000000000012828                                         ; .data.rel.ro:000000000001D368↓o
.text:0000000000012828 var_10          = -0x10
.text:0000000000012828 var_s0          =  0
.text:0000000000012828 ; __unwind {
.text:0000000000012828                 STR             X19, [SP,#-0x10+var_10]!
.text:000000000001282C                 STP             X29, X30, [SP,#0x10+var_s0]
.text:0000000000012830                 ADD             X29, SP, #0x10
.text:0000000000012834                 MOV             X19, X0
.text:0000000000012838                 BL              ._ZN7android11HeifEncoderD2Ev ; android::HeifEncoder::~HeifEncoder()
.text:000000000001283C                 LDP             X29, X30, [SP,#0x10+var_s0]
.text:0000000000012840                 MOV             X0, X19 ; void *
.text:0000000000012844                 LDR             X19, [SP+0x10+var_10],#0x20
.text:0000000000012848                 B               ._ZdlPv ; operator delete(void *)
.text:0000000000012848 ; } // starts at 12828
.text:0000000000012848 ; End of function android::HeifEncoder::~HeifEncoder()
.text:0000000000012848 ; ---------------------------------------------------------------------------
.text:000000000001284C                 ALIGN 0x10
.text:0000000000012850 ; =============== S U B R O U T I N E =======================================
.text:0000000000012850 ; Attributes: bp-based frame
.text:0000000000012850 ; android::HeifEncoder::start(android::sp<android::AMessage> const&, android::sp<android::HeifMuxerBase> const&)
.text:0000000000012850                 EXPORT _ZN7android11HeifEncoder5startERKNS_2spINS_8AMessageEEERKNS1_INS_13HeifMuxerBaseEEE
.text:0000000000012850 _ZN7android11HeifEncoder5startERKNS_2spINS_8AMessageEEERKNS1_INS_13HeifMuxerBaseEEE
.text:0000000000012850                                         ; CODE XREF: android::HeifEncoder::start(android::sp<android::AMessage> const&,android::sp<android::HeifMuxerBase> const&)+C↓j
.text:0000000000012850                                         ; DATA XREF: LOAD:0000000000001410↑o ...
.text:0000000000012850 var_50          = -0x50
.text:0000000000012850 var_44          = -0x44
.text:0000000000012850 var_40          = -0x40
.text:0000000000012850 var_38          = -0x38
.text:0000000000012850 var_30          = -0x30
.text:0000000000012850 var_20          = -0x20
.text:0000000000012850 var_10          = -0x10
.text:0000000000012850 var_s0          =  0
.text:0000000000012850 ; __unwind {
.text:0000000000012850                 SUB             SP, SP, #0x60
.text:0000000000012854                 STP             X24, X23, [SP,#0x50+var_30]
.text:0000000000012858                 STP             X22, X21, [SP,#0x50+var_20]
.text:000000000001285C                 STP             X20, X19, [SP,#0x50+var_10]
.text:0000000000012860                 STP             X29, X30, [SP,#0x50+var_s0]
.text:0000000000012864                 ADD             X29, SP, #0x50
.text:0000000000012868                 MRS             X24, #3, c13, c0, #2
.text:000000000001286C                 MOV             X19, X1
.text:0000000000012870                 LDR             X8, [X24,#0x28]
.text:0000000000012874                 MOV             X20, X0
.text:0000000000012878                 ADD             X23, X0, #0x108
.text:000000000001287C                 STR             X8, [SP,#0x50+var_38]
.text:0000000000012880                 LDR             X22, [X0,#0x108]
.text:0000000000012884                 LDR             X21, [X2]
.text:0000000000012888                 CBZ             X21, loc_12898
.text:000000000001288C                 MOV             X0, X21 ; this
.text:0000000000012890                 MOV             X1, X23 ; void *
.text:0000000000012894                 BL              ._ZNK7android7RefBase9incStrongEPKv ; android::RefBase::incStrong(void const*)
.text:0000000000012898 loc_12898                               ; CODE XREF: android::HeifEncoder::start(android::sp<android::AMessage> const&,android::sp<android::HeifMuxerBase> const&)+38↑j
.text:0000000000012898                 CBZ             X22, loc_128A8
.text:000000000001289C                 MOV             X0, X22 ; this
.text:00000000000128A0                 MOV             X1, X23 ; void *
.text:00000000000128A4                 BL              ._ZNK7android7RefBase9decStrongEPKv ; android::RefBase::decStrong(void const*)
.text:00000000000128A8 loc_128A8                               ; CODE XREF: android::HeifEncoder::start(android::sp<android::AMessage> const&,android::sp<android::HeifMuxerBase> const&):loc_12898↑j
.text:00000000000128A8                 LDR             X8, [X23]
.text:00000000000128AC                 CMP             X22, X8
.text:00000000000128B0                 B.EQ            loc_128B8
.text:00000000000128B4                 BL              ._ZN7android14sp_report_raceEv ; android::sp_report_race(void)
.text:00000000000128B8 loc_128B8                               ; CODE XREF: android::HeifEncoder::start(android::sp<android::AMessage> const&,android::sp<android::HeifMuxerBase> const&)+60↑j
.text:00000000000128B8                 MOV             W0, #0xA40 ; unsigned __int64
.text:00000000000128BC                 STR             X21, [X20,#0x108]
.text:00000000000128C0                 BL              ._Znwm  ; operator new(ulong)
.text:00000000000128C4                 LDR             X8, [X20,#0x28]
.text:00000000000128C8                 MOV             X20, X0
.text:00000000000128CC                 STR             X8, [SP,#0x50+var_40]
.text:00000000000128D0                 CBZ             X8, loc_128E0
.text:00000000000128D4                 ADD             X1, SP, #0x50+var_40 ; void *
.text:00000000000128D8                 MOV             X0, X8  ; this
.text:00000000000128DC                 BL              ._ZNK7android7RefBase9incStrongEPKv ; android::RefBase::incStrong(void const*)
.text:00000000000128E0 loc_128E0                               ; CODE XREF: android::HeifEncoder::start(android::sp<android::AMessage> const&,android::sp<android::HeifMuxerBase> const&)+80↑j
.text:00000000000128E0                 ADD             X2, SP, #0x50+var_40
.text:00000000000128E4                 MOV             X0, X20
.text:00000000000128E8                 MOV             W1, WZR
.text:00000000000128EC                 BL              ._ZN7android8AMessageC1EjRKNS_2spIKNS_8AHandlerEEE ; android::AMessage::AMessage(uint,android::sp<android::AHandler const> const&)
.text:00000000000128F0                 MOV             X1, SP  ; void *
.text:00000000000128F4                 STR             X20, [SP,#0x50+var_50]
.text:00000000000128F8                 MOV             X0, X20 ; this
.text:00000000000128FC                 BL              ._ZNK7android7RefBase9incStrongEPKv ; android::RefBase::incStrong(void const*)
.text:0000000000012900                 LDR             X0, [SP,#0x50+var_40] ; this
.text:0000000000012904                 CBZ             X0, loc_12910
.text:0000000000012908                 ADD             X1, SP, #0x50+var_40 ; void *
.text:000000000001290C                 BL              ._ZNK7android7RefBase9decStrongEPKv ; android::RefBase::decStrong(void const*)
.text:0000000000012910 loc_12910                               ; CODE XREF: android::HeifEncoder::start(android::sp<android::AMessage> const&,android::sp<android::HeifMuxerBase> const&)+B4↑j
.text:0000000000012910                 LDR             X0, [SP,#0x50+var_50]
.text:0000000000012914                 ADRP            X1, #aInputFormat@PAGE ; "input-format"
.text:0000000000012918                 ADD             X1, X1, #aInputFormat@PAGEOFF ; "input-format"
.text:000000000001291C                 MOV             X2, X19
.text:0000000000012920                 BL              ._ZN7android8AMessage10setMessageEPKcRKNS_2spIS0_EE ; android::AMessage::setMessage(char const*,android::sp<android::AMessage> const&)
.text:0000000000012924                 LDR             X0, [SP,#0x50+var_50]
.text:0000000000012928                 ADD             X1, SP, #0x50+var_40
.text:000000000001292C                 STR             XZR, [SP,#0x50+var_40]
.text:0000000000012930                 BL              ._ZN7android8AMessage20postAndAwaitResponseEPNS_2spIS0_EE ; android::AMessage::postAndAwaitResponse(android::sp<android::AMessage> *)
.text:0000000000012934                 MOV             W19, W0
.text:0000000000012938                 STR             W0, [SP,#0x50+var_44]
.text:000000000001293C                 CBZ             W0, loc_1298C
.text:0000000000012940                 LDR             X0, [SP,#0x50+var_40] ; this
.text:0000000000012944                 CBZ             X0, loc_12950
.text:0000000000012948 loc_12948                               ; CODE XREF: android::HeifEncoder::start(android::sp<android::AMessage> const&,android::sp<android::HeifMuxerBase> const&)+15C↓j
.text:0000000000012948                                         ; android::HeifEncoder::start(android::sp<android::AMessage> const&,android::sp<android::HeifMuxerBase> const&)+170↓j
.text:0000000000012948                 ADD             X1, SP, #0x50+var_40 ; void *
.text:000000000001294C                 BL              ._ZNK7android7RefBase9decStrongEPKv ; android::RefBase::decStrong(void const*)
.text:0000000000012950 loc_12950                               ; CODE XREF: android::HeifEncoder::start(android::sp<android::AMessage> const&,android::sp<android::HeifMuxerBase> const&)+F4↑j
.text:0000000000012950                                         ; android::HeifEncoder::start(android::sp<android::AMessage> const&,android::sp<android::HeifMuxerBase> const&)+160↓j ...
.text:0000000000012950                 LDR             X0, [SP,#0x50+var_50] ; this
.text:0000000000012954                 CBZ             X0, loc_12960
.text:0000000000012958                 MOV             X1, SP  ; void *
.text:000000000001295C                 BL              ._ZNK7android7RefBase9decStrongEPKv ; android::RefBase::decStrong(void const*)
.text:0000000000012960 loc_12960                               ; CODE XREF: android::HeifEncoder::start(android::sp<android::AMessage> const&,android::sp<android::HeifMuxerBase> const&)+104↑j
.text:0000000000012960                 LDR             X8, [X24,#0x28]
.text:0000000000012964                 LDR             X9, [SP,#0x50+var_38]
.text:0000000000012968                 CMP             X8, X9
.text:000000000001296C                 B.NE            loc_129C8
.text:0000000000012970                 MOV             W0, W19
.text:0000000000012974                 LDP             X29, X30, [SP,#0x50+var_s0]
.text:0000000000012978                 LDP             X20, X19, [SP,#0x50+var_10]
.text:000000000001297C                 LDP             X22, X21, [SP,#0x50+var_20]
.text:0000000000012980                 LDP             X24, X23, [SP,#0x50+var_30]
.text:0000000000012984                 ADD             SP, SP, #0x60 ; '`'
.text:0000000000012988                 RET
.text:000000000001298C ; ---------------------------------------------------------------------------
.text:000000000001298C loc_1298C                               ; CODE XREF: android::HeifEncoder::start(android::sp<android::AMessage> const&,android::sp<android::HeifMuxerBase> const&)+EC↑j
.text:000000000001298C                 LDR             X0, [SP,#0x50+var_40] ; this
.text:0000000000012990                 ADRP            X1, #aErr@PAGE ; "err"
.text:0000000000012994                 ADD             X1, X1, #aErr@PAGEOFF ; "err"
.text:0000000000012998                 ADD             X2, SP, #0x50+var_44 ; int *
.text:000000000001299C                 BL              ._ZNK7android8AMessage9findInt32EPKcPi ; android::AMessage::findInt32(char const*,int *)
.text:00000000000129A0                 TBZ             W0, #0, loc_129B4
.text:00000000000129A4                 LDR             W19, [SP,#0x50+var_44]
.text:00000000000129A8                 LDR             X0, [SP,#0x50+var_40]
.text:00000000000129AC                 CBNZ            X0, loc_12948
.text:00000000000129B0                 B               loc_12950
.text:00000000000129B4 ; ---------------------------------------------------------------------------
.text:00000000000129B4 loc_129B4                               ; CODE XREF: android::HeifEncoder::start(android::sp<android::AMessage> const&,android::sp<android::HeifMuxerBase> const&)+150↑j
.text:00000000000129B4                 MOV             W19, WZR
.text:00000000000129B8                 STR             WZR, [SP,#0x50+var_44]
.text:00000000000129BC                 LDR             X0, [SP,#0x50+var_40]
.text:00000000000129C0                 CBNZ            X0, loc_12948
.text:00000000000129C4                 B               loc_12950
.text:00000000000129C8 ; ---------------------------------------------------------------------------
.text:00000000000129C8 loc_129C8                               ; CODE XREF: android::HeifEncoder::start(android::sp<android::AMessage> const&,android::sp<android::HeifMuxerBase> const&)+11C↑j
.text:00000000000129C8                 BL              .__stack_chk_fail
.text:00000000000129C8 ; } // starts at 12850
.text:00000000000129C8 ; End of function android::HeifEncoder::start(android::sp<android::AMessage> const&,android::sp<android::HeifMuxerBase> const&)
.text:00000000000129C8 ; ---------------------------------------------------------------------------
.text:00000000000129CC                 ALIGN 0x10
.text:00000000000129D0 ; =============== S U B R O U T I N E =======================================
.text:00000000000129D0 ; Attributes: bp-based frame
.text:00000000000129D0 ; __int64 __fastcall android::HeifEncoder::getMessage(android::HeifEncoder *__hidden this, int)
.text:00000000000129D0                 EXPORT _ZN7android11HeifEncoder10getMessageEi
.text:00000000000129D0 _ZN7android11HeifEncoder10getMessageEi  ; DATA XREF: LOAD:0000000000001530↑o
.text:00000000000129D0 var_30          = -0x30
.text:00000000000129D0 var_28          = -0x28
.text:00000000000129D0 var_20          = -0x20
.text:00000000000129D0 var_10          = -0x10
.text:00000000000129D0 var_s0          =  0
.text:00000000000129D0 ; __unwind {
.text:00000000000129D0                 SUB             SP, SP, #0x40
.text:00000000000129D4                 STP             X22, X21, [SP,#0x30+var_20]
.text:00000000000129D8                 STP             X20, X19, [SP,#0x30+var_10]
.text:00000000000129DC                 STP             X29, X30, [SP,#0x30+var_s0]
.text:00000000000129E0                 ADD             X29, SP, #0x30
.text:00000000000129E4                 MRS             X22, #3, c13, c0, #2
.text:00000000000129E8                 MOV             X21, X0
.text:00000000000129EC                 LDR             X9, [X22,#0x28]
.text:00000000000129F0                 MOV             W0, #0xA40 ; unsigned __int64
.text:00000000000129F4                 MOV             W20, W1
.text:00000000000129F8                 MOV             X19, X8
.text:00000000000129FC                 STR             X9, [SP,#0x30+var_28]
.text:0000000000012A00                 BL              ._Znwm  ; operator new(ulong)
.text:0000000000012A04                 LDR             X8, [X21,#0x28]
.text:0000000000012A08                 MOV             X21, X0
.text:0000000000012A0C                 STR             X8, [SP,#0x30+var_30]
.text:0000000000012A10                 CBZ             X8, loc_12A20
.text:0000000000012A14                 MOV             X1, SP  ; void *
.text:0000000000012A18                 MOV             X0, X8  ; this
.text:0000000000012A1C                 BL              ._ZNK7android7RefBase9incStrongEPKv ; android::RefBase::incStrong(void const*)
.text:0000000000012A20 loc_12A20                               ; CODE XREF: android::HeifEncoder::getMessage(int)+40↑j
.text:0000000000012A20                 MOV             X2, SP
.text:0000000000012A24                 MOV             X0, X21
.text:0000000000012A28                 MOV             W1, W20
.text:0000000000012A2C                 BL              ._ZN7android8AMessageC1EjRKNS_2spIKNS_8AHandlerEEE ; android::AMessage::AMessage(uint,android::sp<android::AHandler const> const&)
.text:0000000000012A30                 MOV             X0, X21 ; this
.text:0000000000012A34                 STR             X21, [X19]
.text:0000000000012A38                 MOV             X1, X19 ; void *
.text:0000000000012A3C                 BL              ._ZNK7android7RefBase9incStrongEPKv ; android::RefBase::incStrong(void const*)
.text:0000000000012A40                 LDR             X0, [SP,#0x30+var_30] ; this
.text:0000000000012A44                 CBZ             X0, loc_12A50
.text:0000000000012A48                 MOV             X1, SP  ; void *
.text:0000000000012A4C                 BL              ._ZNK7android7RefBase9decStrongEPKv ; android::RefBase::decStrong(void const*)
.text:0000000000012A50 loc_12A50                               ; CODE XREF: android::HeifEncoder::getMessage(int)+74↑j
.text:0000000000012A50                 LDR             X8, [X22,#0x28]
.text:0000000000012A54                 LDR             X9, [SP,#0x30+var_28]
.text:0000000000012A58                 CMP             X8, X9
.text:0000000000012A5C                 B.NE            loc_12A74
.text:0000000000012A60                 LDP             X29, X30, [SP,#0x30+var_s0]
.text:0000000000012A64                 LDP             X20, X19, [SP,#0x30+var_10]
.text:0000000000012A68                 LDP             X22, X21, [SP,#0x30+var_20]
.text:0000000000012A6C                 ADD             SP, SP, #0x40 ; '@'
.text:0000000000012A70                 RET
.text:0000000000012A74 ; ---------------------------------------------------------------------------
.text:0000000000012A74 loc_12A74                               ; CODE XREF: android::HeifEncoder::getMessage(int)+8C↑j
.text:0000000000012A74                 BL              .__stack_chk_fail
.text:0000000000012A74 ; } // starts at 129D0
.text:0000000000012A74 ; End of function android::HeifEncoder::getMessage(int)
.text:0000000000012A78 ; =============== S U B R O U T I N E =======================================
.text:0000000000012A78 ; Attributes: bp-based frame
.text:0000000000012A78 ; android::HeifEncoder::postSynchronouslyAndReturnError(android::sp<android::AMessage> const&)
.text:0000000000012A78                 EXPORT _ZN7android11HeifEncoder31postSynchronouslyAndReturnErrorERKNS_2spINS_8AMessageEEE
.text:0000000000012A78 _ZN7android11HeifEncoder31postSynchronouslyAndReturnErrorERKNS_2spINS_8AMessageEEE
.text:0000000000012A78                                         ; DATA XREF: LOAD:0000000000002058↑o
.text:0000000000012A78 var_24          = -0x24
.text:0000000000012A78 var_20          = -0x20
.text:0000000000012A78 var_18          = -0x18
.text:0000000000012A78 var_10          = -0x10
.text:0000000000012A78 var_s0          =  0
.text:0000000000012A78 ; __unwind {
.text:0000000000012A78                 SUB             SP, SP, #0x40
.text:0000000000012A7C                 STP             X20, X19, [SP,#0x30+var_10]
.text:0000000000012A80                 STP             X29, X30, [SP,#0x30+var_s0]
.text:0000000000012A84                 ADD             X29, SP, #0x30
.text:0000000000012A88                 MRS             X20, #3, c13, c0, #2
.text:0000000000012A8C                 LDR             X8, [X20,#0x28]
.text:0000000000012A90                 STR             X8, [SP,#0x30+var_18]
.text:0000000000012A94                 LDR             X0, [X1]
.text:0000000000012A98                 ADD             X1, SP, #0x30+var_20
.text:0000000000012A9C                 STR             XZR, [SP,#0x30+var_20]
.text:0000000000012AA0                 BL              ._ZN7android8AMessage20postAndAwaitResponseEPNS_2spIS0_EE ; android::AMessage::postAndAwaitResponse(android::sp<android::AMessage> *)
.text:0000000000012AA4                 MOV             W19, W0
.text:0000000000012AA8                 STR             W0, [SP,#0x30+var_24]
.text:0000000000012AAC                 CBZ             W0, loc_12AE4
.text:0000000000012AB0                 LDR             X0, [SP,#0x30+var_20] ; this
.text:0000000000012AB4                 CBZ             X0, loc_12AC0
.text:0000000000012AB8 loc_12AB8                               ; CODE XREF: android::HeifEncoder::postSynchronouslyAndReturnError(android::sp<android::AMessage> const&)+8C↓j
.text:0000000000012AB8                                         ; android::HeifEncoder::postSynchronouslyAndReturnError(android::sp<android::AMessage> const&)+A0↓j
.text:0000000000012AB8                 ADD             X1, SP, #0x30+var_20 ; void *
.text:0000000000012ABC                 BL              ._ZNK7android7RefBase9decStrongEPKv ; android::RefBase::decStrong(void const*)
.text:0000000000012AC0 loc_12AC0                               ; CODE XREF: android::HeifEncoder::postSynchronouslyAndReturnError(android::sp<android::AMessage> const&)+3C↑j
.text:0000000000012AC0                                         ; android::HeifEncoder::postSynchronouslyAndReturnError(android::sp<android::AMessage> const&)+90↓j ...
.text:0000000000012AC0                 LDR             X8, [X20,#0x28]
.text:0000000000012AC4                 LDR             X9, [SP,#0x30+var_18]
.text:0000000000012AC8                 CMP             X8, X9
.text:0000000000012ACC                 B.NE            loc_12B20
.text:0000000000012AD0                 MOV             W0, W19
.text:0000000000012AD4                 LDP             X29, X30, [SP,#0x30+var_s0]
.text:0000000000012AD8                 LDP             X20, X19, [SP,#0x30+var_10]
.text:0000000000012ADC                 ADD             SP, SP, #0x40 ; '@'
.text:0000000000012AE0                 RET
.text:0000000000012AE4 ; ---------------------------------------------------------------------------
.text:0000000000012AE4 loc_12AE4                               ; CODE XREF: android::HeifEncoder::postSynchronouslyAndReturnError(android::sp<android::AMessage> const&)+34↑j
.text:0000000000012AE4                 LDR             X0, [SP,#0x30+var_20] ; this
.text:0000000000012AE8                 ADRP            X1, #aErr@PAGE ; "err"
.text:0000000000012AEC                 ADD             X1, X1, #aErr@PAGEOFF ; "err"
.text:0000000000012AF0                 ADD             X2, SP, #0x30+var_24 ; int *
.text:0000000000012AF4                 BL              ._ZNK7android8AMessage9findInt32EPKcPi ; android::AMessage::findInt32(char const*,int *)
.text:0000000000012AF8                 TBZ             W0, #0, loc_12B0C
.text:0000000000012AFC                 LDR             W19, [SP,#0x30+var_24]
.text:0000000000012B00                 LDR             X0, [SP,#0x30+var_20]
.text:0000000000012B04                 CBNZ            X0, loc_12AB8
.text:0000000000012B08                 B               loc_12AC0
.text:0000000000012B0C ; ---------------------------------------------------------------------------
.text:0000000000012B0C loc_12B0C                               ; CODE XREF: android::HeifEncoder::postSynchronouslyAndReturnError(android::sp<android::AMessage> const&)+80↑j
.text:0000000000012B0C                 MOV             W19, WZR
.text:0000000000012B10                 STR             WZR, [SP,#0x30+var_24]
.text:0000000000012B14                 LDR             X0, [SP,#0x30+var_20]
.text:0000000000012B18                 CBNZ            X0, loc_12AB8
.text:0000000000012B1C                 B               loc_12AC0
.text:0000000000012B20 ; ---------------------------------------------------------------------------
.text:0000000000012B20 loc_12B20                               ; CODE XREF: android::HeifEncoder::postSynchronouslyAndReturnError(android::sp<android::AMessage> const&)+54↑j
.text:0000000000012B20                 BL              .__stack_chk_fail
.text:0000000000012B20 ; } // starts at 12A78
.text:0000000000012B20 ; End of function android::HeifEncoder::postSynchronouslyAndReturnError(android::sp<android::AMessage> const&)
.text:0000000000012B20 ; ---------------------------------------------------------------------------
.text:0000000000012B24                 ALIGN 8
.text:0000000000012B28 ; =============== S U B R O U T I N E =======================================
.text:0000000000012B28 ; Attributes: bp-based frame
.text:0000000000012B28 ; android::HeifEncoder::start(int, android::sp<android::HeifMuxerBase> const&)
.text:0000000000012B28                 EXPORT _ZN7android11HeifEncoder5startEiRKNS_2spINS_13HeifMuxerBaseEEE
.text:0000000000012B28 _ZN7android11HeifEncoder5startEiRKNS_2spINS_13HeifMuxerBaseEEE
.text:0000000000012B28                                         ; DATA XREF: LOAD:0000000000001890↑o
.text:0000000000012B28 var_40          = -0x40
.text:0000000000012B28 var_38          = -0x38
.text:0000000000012B28 var_30          = -0x30
.text:0000000000012B28 var_20          = -0x20
.text:0000000000012B28 var_10          = -0x10
.text:0000000000012B28 var_s0          =  0
.text:0000000000012B28 ; __unwind {
.text:0000000000012B28                 SUB             SP, SP, #0x50
.text:0000000000012B2C                 STR             X23, [SP,#0x40+var_30]
.text:0000000000012B30                 STP             X22, X21, [SP,#0x40+var_20]
.text:0000000000012B34                 STP             X20, X19, [SP,#0x40+var_10]
.text:0000000000012B38                 STP             X29, X30, [SP,#0x40+var_s0]
.text:0000000000012B3C                 ADD             X29, SP, #0x40
.text:0000000000012B40                 MRS             X23, #3, c13, c0, #2
.text:0000000000012B44                 MOV             X21, X0
.text:0000000000012B48                 LDR             X8, [X23,#0x28]
.text:0000000000012B4C                 MOV             W0, #0xA40 ; unsigned __int64
.text:0000000000012B50                 MOV             X19, X2
.text:0000000000012B54                 MOV             W20, W1
.text:0000000000012B58                 STR             X8, [SP,#0x40+var_38]
.text:0000000000012B5C                 BL              ._Znwm  ; operator new(ulong)
.text:0000000000012B60                 MOV             X22, X0
.text:0000000000012B64                 BL              ._ZN7android8AMessageC1Ev ; android::AMessage::AMessage(void)
.text:0000000000012B68                 MOV             X1, SP  ; void *
.text:0000000000012B6C                 STR             X22, [SP,#0x40+var_40]
.text:0000000000012B70                 MOV             X0, X22 ; this
.text:0000000000012B74                 BL              ._ZNK7android7RefBase9incStrongEPKv ; android::RefBase::incStrong(void const*)
.text:0000000000012B78                 LDR             X0, [SP,#0x40+var_40] ; this
.text:0000000000012B7C                 ADRP            X1, #aColorFormat@PAGE ; "color-format"
.text:0000000000012B80                 ADD             X1, X1, #aColorFormat@PAGEOFF ; "color-format"
.text:0000000000012B84                 MOV             W2, W20 ; int
.text:0000000000012B88                 BL              ._ZN7android8AMessage8setInt32EPKci ; android::AMessage::setInt32(char const*,int)
.text:0000000000012B8C                 MOV             X1, SP
.text:0000000000012B90                 MOV             X0, X21
.text:0000000000012B94                 MOV             X2, X19
.text:0000000000012B98                 BL              ._ZN7android11HeifEncoder5startERKNS_2spINS_8AMessageEEERKNS1_INS_13HeifMuxerBaseEEE ; android::HeifEncoder::start(android::sp<android::AMessage> const&,android::sp<android::HeifMuxerBase> const&)
.text:0000000000012B9C                 LDR             X8, [SP,#0x40+var_40]
.text:0000000000012BA0                 MOV             W19, W0
.text:0000000000012BA4                 CBZ             X8, loc_12BB4
.text:0000000000012BA8                 MOV             X1, SP  ; void *
.text:0000000000012BAC                 MOV             X0, X8  ; this
.text:0000000000012BB0                 BL              ._ZNK7android7RefBase9decStrongEPKv ; android::RefBase::decStrong(void const*)
.text:0000000000012BB4 loc_12BB4                               ; CODE XREF: android::HeifEncoder::start(int,android::sp<android::HeifMuxerBase> const&)+7C↑j
.text:0000000000012BB4                 LDR             X8, [X23,#0x28]
.text:0000000000012BB8                 LDR             X9, [SP,#0x40+var_38]
.text:0000000000012BBC                 CMP             X8, X9
.text:0000000000012BC0                 B.NE            loc_12BE0
.text:0000000000012BC4                 MOV             W0, W19
.text:0000000000012BC8                 LDR             X23, [SP,#0x40+var_30]
.text:0000000000012BCC                 LDP             X29, X30, [SP,#0x40+var_s0]
.text:0000000000012BD0                 LDP             X20, X19, [SP,#0x40+var_10]
.text:0000000000012BD4                 LDP             X22, X21, [SP,#0x40+var_20]
.text:0000000000012BD8                 ADD             SP, SP, #0x50 ; 'P'
.text:0000000000012BDC                 RET
.text:0000000000012BE0 ; ---------------------------------------------------------------------------
.text:0000000000012BE0 loc_12BE0                               ; CODE XREF: android::HeifEncoder::start(int,android::sp<android::HeifMuxerBase> const&)+98↑j
.text:0000000000012BE0                 BL              .__stack_chk_fail
.text:0000000000012BE0 ; } // starts at 12B28
.text:0000000000012BE0 ; End of function android::HeifEncoder::start(int,android::sp<android::HeifMuxerBase> const&)
.text:0000000000012BE0 ; ---------------------------------------------------------------------------
.text:0000000000012BE4                 ALIGN 8
.text:0000000000012BE8 ; =============== S U B R O U T I N E =======================================
.text:0000000000012BE8 ; Attributes: bp-based frame
.text:0000000000012BE8 ; __int64 __fastcall android::HeifEncoder::store(android::HeifEncoder *__hidden this)
.text:0000000000012BE8                 EXPORT _ZN7android11HeifEncoder5storeEv
.text:0000000000012BE8 _ZN7android11HeifEncoder5storeEv        ; CODE XREF: android::HeifEncoder::store(void)+C↓j
.text:0000000000012BE8                                         ; DATA XREF: LOAD:0000000000000F78↑o ...
.text:0000000000012BE8 var_8C          = -0x8C
.text:0000000000012BE8 var_88          = -0x88
.text:0000000000012BE8 var_7C          = -0x7C
.text:0000000000012BE8 var_78          = -0x78
.text:0000000000012BE8 var_70          = -0x70
.text:0000000000012BE8 tp              = -0x68
.text:0000000000012BE8 var_58          = -0x58
.text:0000000000012BE8 var_50          = -0x50
.text:0000000000012BE8 var_40          = -0x40
.text:0000000000012BE8 var_30          = -0x30
.text:0000000000012BE8 var_20          = -0x20
.text:0000000000012BE8 var_10          = -0x10
.text:0000000000012BE8 var_s0          =  0
.text:0000000000012BE8 ; __unwind {
.text:0000000000012BE8                 SUB             SP, SP, #0xA0
.text:0000000000012BEC                 STP             X28, X27, [SP,#0x90+var_50]
.text:0000000000012BF0                 STP             X26, X25, [SP,#0x90+var_40]
.text:0000000000012BF4                 STP             X24, X23, [SP,#0x90+var_30]
.text:0000000000012BF8                 STP             X22, X21, [SP,#0x90+var_20]
.text:0000000000012BFC                 STP             X20, X19, [SP,#0x90+var_10]
.text:0000000000012C00                 STP             X29, X30, [SP,#0x90+var_s0]
.text:0000000000012C04                 ADD             X29, SP, #0x90
.text:0000000000012C08                 MRS             X22, #3, c13, c0, #2
.text:0000000000012C0C                 MOV             X19, X0
.text:0000000000012C10                 LDR             X8, [X22,#0x28]
.text:0000000000012C14                 MOV             W0, #0xA40 ; unsigned __int64
.text:0000000000012C18                 STR             X8, [SP,#0x90+var_58]
.text:0000000000012C1C                 BL              ._Znwm  ; operator new(ulong)
.text:0000000000012C20                 LDR             X8, [X19,#0x28]
.text:0000000000012C24                 MOV             X20, X0
.text:0000000000012C28                 STR             X8, [SP,#0x90+tp]
.text:0000000000012C2C                 CBZ             X8, loc_12C3C
.text:0000000000012C30                 ADD             X1, SP, #0x90+tp ; void *
.text:0000000000012C34                 MOV             X0, X8  ; this
.text:0000000000012C38                 BL              ._ZNK7android7RefBase9incStrongEPKv ; android::RefBase::incStrong(void const*)
.text:0000000000012C3C loc_12C3C                               ; CODE XREF: android::HeifEncoder::store(void)+44↑j
.text:0000000000012C3C                 ADD             X2, SP, #0x90+tp
.text:0000000000012C40                 MOV             X0, X20
.text:0000000000012C44                 MOV             W1, #2
.text:0000000000012C48                 BL              ._ZN7android8AMessageC1EjRKNS_2spIKNS_8AHandlerEEE ; android::AMessage::AMessage(uint,android::sp<android::AHandler const> const&)
.text:0000000000012C4C                 ADD             X1, SP, #0x90+var_70 ; void *
.text:0000000000012C50                 STR             X20, [SP,#0x90+var_70]
.text:0000000000012C54                 MOV             X0, X20 ; this
.text:0000000000012C58                 BL              ._ZNK7android7RefBase9incStrongEPKv ; android::RefBase::incStrong(void const*)
.text:0000000000012C5C                 LDR             X0, [SP,#0x90+tp] ; this
.text:0000000000012C60                 CBZ             X0, loc_12C6C
.text:0000000000012C64                 ADD             X1, SP, #0x90+tp ; void *
.text:0000000000012C68                 BL              ._ZNK7android7RefBase9decStrongEPKv ; android::RefBase::decStrong(void const*)
.text:0000000000012C6C loc_12C6C                               ; CODE XREF: android::HeifEncoder::store(void)+78↑j
.text:0000000000012C6C                 LDR             X0, [X19,#0x100] ; this
.text:0000000000012C70                 ADD             X8, SP, #0x90+var_78
.text:0000000000012C74                 LDR             X20, [SP,#0x90+var_70]
.text:0000000000012C78                 BL              ._ZN7android10HeifSource9getStatusEv ; android::HeifSource::getStatus(void)
.text:0000000000012C7C                 LDR             X8, [SP,#0x90+var_78]
.text:0000000000012C80                 ADRP            X1, #aSourceStatus@PAGE ; "source-status"
.text:0000000000012C84                 ADD             X1, X1, #aSourceStatus@PAGEOFF ; "source-status"
.text:0000000000012C88                 STR             XZR, [SP,#0x90+var_78]
.text:0000000000012C8C                 ADD             X2, SP, #0x90+tp
.text:0000000000012C90                 MOV             X0, X20
.text:0000000000012C94                 STR             X8, [SP,#0x90+tp]
.text:0000000000012C98                 BL              ._ZN7android8AMessage9setObjectEPKcRKNS_2spINS_7RefBaseEEE ; android::AMessage::setObject(char const*,android::sp<android::RefBase> const&)
.text:0000000000012C9C                 LDR             X0, [SP,#0x90+tp] ; this
.text:0000000000012CA0                 CBZ             X0, loc_12CAC
.text:0000000000012CA4                 ADD             X1, SP, #0x90+tp ; void *
.text:0000000000012CA8                 BL              ._ZNK7android7RefBase9decStrongEPKv ; android::RefBase::decStrong(void const*)
.text:0000000000012CAC loc_12CAC                               ; CODE XREF: android::HeifEncoder::store(void)+B8↑j
.text:0000000000012CAC                 LDR             X0, [SP,#0x90+var_78] ; this
.text:0000000000012CB0                 CBZ             X0, loc_12CBC
.text:0000000000012CB4                 ADD             X1, SP, #0x90+var_78 ; void *
.text:0000000000012CB8                 BL              ._ZNK7android7RefBase9decStrongEPKv ; android::RefBase::decStrong(void const*)
.text:0000000000012CBC loc_12CBC                               ; CODE XREF: android::HeifEncoder::store(void)+C8↑j
.text:0000000000012CBC                 LDR             X0, [SP,#0x90+var_70]
.text:0000000000012CC0                 ADD             X1, SP, #0x90+tp
.text:0000000000012CC4                 STR             XZR, [SP,#0x90+tp]
.text:0000000000012CC8                 BL              ._ZN7android8AMessage20postAndAwaitResponseEPNS_2spIS0_EE ; android::AMessage::postAndAwaitResponse(android::sp<android::AMessage> *)
.text:0000000000012CCC                 MOV             W27, W0
.text:0000000000012CD0                 STR             W0, [SP,#0x90+var_78]
.text:0000000000012CD4                 CBZ             W0, loc_12D14
.text:0000000000012CD8                 LDR             X0, [SP,#0x90+tp] ; this
.text:0000000000012CDC                 CBZ             X0, loc_12CE8
.text:0000000000012CE0 loc_12CE0                               ; CODE XREF: android::HeifEncoder::store(void)+14C↓j
.text:0000000000012CE0                                         ; android::HeifEncoder::store(void)+410↓j
.text:0000000000012CE0                 ADD             X1, SP, #0x90+tp ; void *
.text:0000000000012CE4                 BL              ._ZNK7android7RefBase9decStrongEPKv ; android::RefBase::decStrong(void const*)
.text:0000000000012CE8 loc_12CE8                               ; CODE XREF: android::HeifEncoder::store(void)+F4↑j
.text:0000000000012CE8                                         ; android::HeifEncoder::store(void)+150↓j ...
.text:0000000000012CE8                 CBZ             W27, loc_12D3C
.text:0000000000012CEC                 ADRP            X1, #aHeifencoder@PAGE ; "HeifEncoder"
.text:0000000000012CF0                 ADRP            X2, #aFailedToStoreM@PAGE ; "failed to store message(%d)"
.text:0000000000012CF4                 ADD             X1, X1, #aHeifencoder@PAGEOFF ; "HeifEncoder"
.text:0000000000012CF8                 ADD             X2, X2, #aFailedToStoreM@PAGEOFF ; "failed to store message(%d)"
.text:0000000000012CFC                 MOV             W0, #6
.text:0000000000012D00                 MOV             W3, W27
.text:0000000000012D04                 BL              .__android_log_print
.text:0000000000012D08                 LDR             X0, [SP,#0x90+var_70]
.text:0000000000012D0C                 CBNZ            X0, loc_13138
.text:0000000000012D10                 B               loc_13140
.text:0000000000012D14 ; ---------------------------------------------------------------------------
.text:0000000000012D14 loc_12D14                               ; CODE XREF: android::HeifEncoder::store(void)+EC↑j
.text:0000000000012D14                 LDR             X0, [SP,#0x90+tp] ; this
.text:0000000000012D18                 ADRP            X1, #aErr@PAGE ; "err"
.text:0000000000012D1C                 ADD             X1, X1, #aErr@PAGEOFF ; "err"
.text:0000000000012D20                 ADD             X2, SP, #0x90+var_78 ; int *
.text:0000000000012D24                 BL              ._ZNK7android8AMessage9findInt32EPKcPi ; android::AMessage::findInt32(char const*,int *)
.text:0000000000012D28                 TBZ             W0, #0, loc_12FEC
.text:0000000000012D2C                 LDR             W27, [SP,#0x90+var_78]
.text:0000000000012D30                 LDR             X0, [SP,#0x90+tp]
.text:0000000000012D34                 CBNZ            X0, loc_12CE0
.text:0000000000012D38                 B               loc_12CE8
.text:0000000000012D3C ; ---------------------------------------------------------------------------
.text:0000000000012D3C loc_12D3C                               ; CODE XREF: android::HeifEncoder::store(void):loc_12CE8↑j
.text:0000000000012D3C                 LDR             X0, [X19,#0x100] ; this
.text:0000000000012D40                 STRB            WZR, [SP,#0x90+var_7C]
.text:0000000000012D44                 BL              ._ZN7android10HeifSource14isOnlyOneFrameEv ; android::HeifSource::isOnlyOneFrame(void)
.text:0000000000012D48                 ADRP            X23, #aHeifencoder@PAGE ; "HeifEncoder"
.text:0000000000012D4C                 STR             W0, [SP,#0x90+var_8C]
.text:0000000000012D50                 ADRP            X25, #aCanNotGetInput@PAGE ; "can not get input buffer(%d)"
.text:0000000000012D54                 STR             XZR, [SP,#0x90+var_88]
.text:0000000000012D58                 ADD             X20, X19, #0xD0
.text:0000000000012D5C                 MOV             W21, #0xFFFFFC19
.text:0000000000012D60                 ADD             X23, X23, #aHeifencoder@PAGEOFF ; "HeifEncoder"
.text:0000000000012D64                 ADD             X25, X25, #aCanNotGetInput@PAGEOFF ; "can not get input buffer(%d)"
.text:0000000000012D68 loc_12D68                               ; CODE XREF: android::HeifEncoder::store(void):loc_12DC8↓j
.text:0000000000012D68                 MOV             X0, X19 ; this
.text:0000000000012D6C                 BL              ._ZN7android11HeifEncoder19dequeuedInputBufferEv ; android::HeifEncoder::dequeuedInputBuffer(void)
.text:0000000000012D70                 CMN             W0, #1
.text:0000000000012D74                 B.EQ            loc_12FDC
.text:0000000000012D78                 MOV             W27, W0
.text:0000000000012D7C                 LDR             X0, [X19,#0x38]
.text:0000000000012D80                 SXTW            X28, W27
.text:0000000000012D84                 STR             XZR, [SP,#0x90+tp]
.text:0000000000012D88                 ADD             X2, SP, #0x90+tp
.text:0000000000012D8C                 MOV             X1, X28
.text:0000000000012D90                 BL              ._ZN7android10MediaCodec14getInputBufferEmPNS_2spINS_16MediaCodecBufferEEE ; android::MediaCodec::getInputBuffer(ulong,android::sp<android::MediaCodecBuffer> *)
.text:0000000000012D94                 MOV             W26, W0
.text:0000000000012D98                 CBZ             W0, loc_12DD0
.text:0000000000012D9C loc_12D9C                               ; CODE XREF: android::HeifEncoder::store(void)+1EC↓j
.text:0000000000012D9C                                         ; android::HeifEncoder::store(void)+1F4↓j
.text:0000000000012D9C                 MOV             W0, #6
.text:0000000000012DA0                 MOV             X1, X23
.text:0000000000012DA4                 MOV             X2, X25
.text:0000000000012DA8                 MOV             W3, W26
.text:0000000000012DAC                 BL              .__android_log_print
.text:0000000000012DB0                 MOV             W24, #4
.text:0000000000012DB4                 MOV             W27, W21
.text:0000000000012DB8 loc_12DB8                               ; CODE XREF: android::HeifEncoder::store(void)+318↓j
.text:0000000000012DB8                                         ; android::HeifEncoder::store(void)+3F0↓j
.text:0000000000012DB8                 LDR             X0, [SP,#0x90+tp] ; this
.text:0000000000012DBC                 CBZ             X0, loc_12DC8
.text:0000000000012DC0 loc_12DC0                               ; CODE XREF: android::HeifEncoder::store(void)+334↓j
.text:0000000000012DC0                 ADD             X1, SP, #0x90+tp ; void *
.text:0000000000012DC4                 BL              ._ZNK7android7RefBase9decStrongEPKv ; android::RefBase::decStrong(void const*)
.text:0000000000012DC8 loc_12DC8                               ; CODE XREF: android::HeifEncoder::store(void)+1D4↑j
.text:0000000000012DC8                                         ; android::HeifEncoder::store(void)+338↓j
.text:0000000000012DC8                 CBZ             W24, loc_12D68
.text:0000000000012DCC                 B               loc_13000
.text:0000000000012DD0 ; ---------------------------------------------------------------------------
.text:0000000000012DD0 loc_12DD0                               ; CODE XREF: android::HeifEncoder::store(void)+1B0↑j
.text:0000000000012DD0                 LDR             X0, [SP,#0x90+tp] ; this
.text:0000000000012DD4                 CBZ             X0, loc_12D9C
.text:0000000000012DD8                 BL              ._ZN7android16MediaCodecBuffer4dataEv ; android::MediaCodecBuffer::data(void)
.text:0000000000012DDC                 CBZ             X0, loc_12D9C
.text:0000000000012DE0                 MOV             W8, #0x66666667
.text:0000000000012DE8                 MOV             X0, X20 ; this
.text:0000000000012DEC                 SMULL           X8, W27, W8
.text:0000000000012DF0                 LSR             X9, X8, #0x3F ; '?'
.text:0000000000012DF4                 ASR             X8, X8, #0x22 ; '"'
.text:0000000000012DF8                 ADD             W8, W8, W9
.text:0000000000012DFC                 MOV             W9, #0xA
.text:0000000000012E00                 MSUB            W8, W8, W9, W27
.text:0000000000012E04                 SXTW            X26, W8
.text:0000000000012E08                 MOV             X1, X26 ; unsigned __int64
.text:0000000000012E0C                 BL              ._ZN7android10VectorImpl16editItemLocationEm ; android::VectorImpl::editItemLocation(ulong)
.text:0000000000012E10                 LDR             X8, [X0]
.text:0000000000012E14                 STR             X8, [SP,#0x90+var_78]
.text:0000000000012E18                 CBZ             X8, loc_12E6C
.text:0000000000012E1C                 LDR             X9, [X8]
.text:0000000000012E20                 ADD             X1, SP, #0x90+var_78 ; void *
.text:0000000000012E24                 LDUR            X9, [X9,#-0x18]
.text:0000000000012E28                 ADD             X0, X8, X9 ; this
.text:0000000000012E2C                 BL              ._ZNK7android7RefBase9incStrongEPKv ; android::RefBase::incStrong(void const*)
.text:0000000000012E30                 LDR             X8, [SP,#0x90+var_78]
.text:0000000000012E34                 CBZ             X8, loc_12E6C
.text:0000000000012E38                 LDR             X0, [X19,#0x100]
.text:0000000000012E3C                 ADD             X1, SP, #0x90+tp
.text:0000000000012E40                 ADD             X2, SP, #0x90+var_78
.text:0000000000012E44                 ADD             X3, SP, #0x90+var_7C
.text:0000000000012E48                 BL              ._ZN7android10HeifSource7getGridERKNS_2spINS_16MediaCodecBufferEEERKNS1_INS_15ApexMediaBufferEEERb ; android::HeifSource::getGrid(android::sp<android::MediaCodecBuffer> const&,android::sp<android::ApexMediaBuffer> const&,bool &)
.text:0000000000012E4C                 LDRB            W8, [SP,#0x90+var_7C]
.text:0000000000012E50                 LDR             W9, [SP,#0x90+var_8C]
.text:0000000000012E54                 CMP             W8, #0
.text:0000000000012E58                 CSET            W8, EQ
.text:0000000000012E5C                 ORR             W8, W9, W8
.text:0000000000012E60                 TBZ             W8, #0, loc_12E88
.text:0000000000012E64                 MOV             W26, #1
.text:0000000000012E68                 B               loc_12EA0
.text:0000000000012E6C ; ---------------------------------------------------------------------------
.text:0000000000012E6C loc_12E6C                               ; CODE XREF: android::HeifEncoder::store(void)+230↑j
.text:0000000000012E6C                                         ; android::HeifEncoder::store(void)+24C↑j
.text:0000000000012E6C                 ADRP            X2, #aCanNotGetCoreB@PAGE ; "can not get core buffer(%zu)"
.text:0000000000012E70                 MOV             W0, #6
.text:0000000000012E74                 MOV             X1, X23
.text:0000000000012E78                 ADD             X2, X2, #aCanNotGetCoreB@PAGEOFF ; "can not get core buffer(%zu)"
.text:0000000000012E7C                 MOV             X3, X26
.text:0000000000012E80                 BL              .__android_log_print
.text:0000000000012E84                 B               loc_12EF4
.text:0000000000012E88 ; ---------------------------------------------------------------------------
.text:0000000000012E88 loc_12E88                               ; CODE XREF: android::HeifEncoder::store(void)+278↑j
.text:0000000000012E88                 ADRP            X2, #aReachEosOfInpu@PAGE ; "reach EOS of input buffer"
.text:0000000000012E8C                 MOV             W0, #4
.text:0000000000012E90                 MOV             X1, X23
.text:0000000000012E94                 ADD             X2, X2, #aReachEosOfInpu@PAGEOFF ; "reach EOS of input buffer"
.text:0000000000012E98                 BL              .__android_log_print
.text:0000000000012E9C                 MOV             W26, #5
.text:0000000000012EA0 loc_12EA0                               ; CODE XREF: android::HeifEncoder::store(void)+280↑j
.text:0000000000012EA0                 LDR             X0, [SP,#0x90+tp] ; this
.text:0000000000012EA4                 LDR             X24, [X19,#0x38]
.text:0000000000012EA8                 BL              ._ZNK7android16MediaCodecBuffer4sizeEv ; android::MediaCodecBuffer::size(void)
.text:0000000000012EAC                 MOV             X3, X0  ; unsigned __int64
.text:0000000000012EB0                 MOV             X0, X24 ; this
.text:0000000000012EB4                 LDR             X24, [SP,#0x90+var_88]
.text:0000000000012EB8                 MOV             X1, X28 ; unsigned __int64
.text:0000000000012EBC                 MOV             X2, XZR ; unsigned __int64
.text:0000000000012EC0                 MOV             W5, W26 ; unsigned int
.text:0000000000012EC4                 MOV             X4, X24 ; __int64
.text:0000000000012EC8                 MOV             X6, XZR ; android::AString *
.text:0000000000012ECC                 BL              ._ZN7android10MediaCodec16queueInputBufferEmmmljPNS_7AStringE ; android::MediaCodec::queueInputBuffer(ulong,ulong,ulong,long,uint,android::AString *)
.text:0000000000012ED0                 CBZ             W0, loc_12F24
.text:0000000000012ED4                 ADRP            X2, #aFailedToQueueI@PAGE ; "failed to queue input buffer(%d), [%zu,"...
.text:0000000000012ED8                 MOV             W3, W0
.text:0000000000012EDC                 MOV             W0, #6
.text:0000000000012EE0                 MOV             X1, X23
.text:0000000000012EE4                 ADD             X2, X2, #aFailedToQueueI@PAGEOFF ; "failed to queue input buffer(%d), [%zu,"...
.text:0000000000012EE8                 MOV             W4, W27
.text:0000000000012EEC                 MOV             X5, X24
.text:0000000000012EF0                 BL              .__android_log_print
.text:0000000000012EF4 loc_12EF4                               ; CODE XREF: android::HeifEncoder::store(void)+29C↑j
.text:0000000000012EF4                 MOV             W24, #4
.text:0000000000012EF8                 MOV             W27, W21
.text:0000000000012EFC                 LDR             X8, [SP,#0x90+var_78]
.text:0000000000012F00                 CBZ             X8, loc_12DB8
.text:0000000000012F04 loc_12F04                               ; CODE XREF: android::HeifEncoder::store(void)+3EC↓j
.text:0000000000012F04                 LDR             X9, [X8]
.text:0000000000012F08                 ADD             X1, SP, #0x90+var_78 ; void *
.text:0000000000012F0C                 LDUR            X9, [X9,#-0x18]
.text:0000000000012F10                 ADD             X0, X8, X9 ; this
.text:0000000000012F14                 BL              ._ZNK7android7RefBase9decStrongEPKv ; android::RefBase::decStrong(void const*)
.text:0000000000012F18                 LDR             X0, [SP,#0x90+tp]
.text:0000000000012F1C                 CBNZ            X0, loc_12DC0
.text:0000000000012F20                 B               loc_12DC8
.text:0000000000012F24 ; ---------------------------------------------------------------------------
.text:0000000000012F24 loc_12F24                               ; CODE XREF: android::HeifEncoder::store(void)+2E8↑j
.text:0000000000012F24                 LDRB            W8, [SP,#0x90+var_7C]
.text:0000000000012F28                 MOV             W9, #0x80E8
.text:0000000000012F2C                 ADD             X24, X24, X9
.text:0000000000012F30                 STR             X24, [SP,#0x90+var_88]
.text:0000000000012F34                 CBZ             W8, loc_12FC8
.text:0000000000012F38                 LDR             W8, [SP,#0x90+var_8C]
.text:0000000000012F3C                 TBZ             W8, #0, loc_12FAC
.text:0000000000012F40                 ADRP            X2, #aReachEosOfInpu_0@PAGE ; "reach EOS of input buffer for only one "...
.text:0000000000012F44                 MOV             W0, #4
.text:0000000000012F48                 MOV             X1, X23
.text:0000000000012F4C                 ADD             X2, X2, #aReachEosOfInpu_0@PAGEOFF ; "reach EOS of input buffer for only one "...
.text:0000000000012F50                 BL              .__android_log_print
.text:0000000000012F54                 MOV             X0, X19 ; this
.text:0000000000012F58                 BL              ._ZN7android11HeifEncoder19dequeuedInputBufferEv ; android::HeifEncoder::dequeuedInputBuffer(void)
.text:0000000000012F5C                 TBNZ            W0, #0x1F, loc_12FAC
.text:0000000000012F60                 LDR             X8, [X19,#0x38]
.text:0000000000012F64                 SXTW            X26, W0
.text:0000000000012F68                 MOV             X1, X26 ; unsigned __int64
.text:0000000000012F6C                 MOV             X2, XZR ; unsigned __int64
.text:0000000000012F70                 MOV             X3, XZR ; unsigned __int64
.text:0000000000012F74                 MOV             X0, X8  ; this
.text:0000000000012F78                 MOV             X4, X24 ; __int64
.text:0000000000012F7C                 MOV             W5, #4  ; unsigned int
.text:0000000000012F80                 MOV             X6, XZR ; android::AString *
.text:0000000000012F84                 BL              ._ZN7android10MediaCodec16queueInputBufferEmmmljPNS_7AStringE ; android::MediaCodec::queueInputBuffer(ulong,ulong,ulong,long,uint,android::AString *)
.text:0000000000012F88                 CBZ             W0, loc_12FAC
.text:0000000000012F8C                 ADRP            X2, #aFailedToQueueI@PAGE ; "failed to queue input buffer(%d), [%zu,"...
.text:0000000000012F90                 MOV             W3, W0
.text:0000000000012F94                 MOV             W0, #6
.text:0000000000012F98                 MOV             X1, X23
.text:0000000000012F9C                 ADD             X2, X2, #aFailedToQueueI@PAGEOFF ; "failed to queue input buffer(%d), [%zu,"...
.text:0000000000012FA0                 MOV             X4, X26
.text:0000000000012FA4                 MOV             X5, X24
.text:0000000000012FA8                 BL              .__android_log_print
.text:0000000000012FAC loc_12FAC                               ; CODE XREF: android::HeifEncoder::store(void)+354↑j
.text:0000000000012FAC                                         ; android::HeifEncoder::store(void)+374↑j ...
.text:0000000000012FAC                 ADRP            X2, #aBreakAtEosOfIn@PAGE ; "break at EOS of input buffer"
.text:0000000000012FB0                 MOV             W0, #4
.text:0000000000012FB4                 MOV             X1, X23
.text:0000000000012FB8                 ADD             X2, X2, #aBreakAtEosOfIn@PAGEOFF ; "break at EOS of input buffer"
.text:0000000000012FBC                 MOV             W24, #4
.text:0000000000012FC0                 BL              .__android_log_print
.text:0000000000012FC4                 B               loc_12FCC
.text:0000000000012FC8 ; ---------------------------------------------------------------------------
.text:0000000000012FC8 loc_12FC8                               ; CODE XREF: android::HeifEncoder::store(void)+34C↑j
.text:0000000000012FC8                 MOV             W24, WZR
.text:0000000000012FCC loc_12FCC                               ; CODE XREF: android::HeifEncoder::store(void)+3DC↑j
.text:0000000000012FCC                 MOV             W27, WZR
.text:0000000000012FD0                 LDR             X8, [SP,#0x90+var_78]
.text:0000000000012FD4                 CBNZ            X8, loc_12F04
.text:0000000000012FD8                 B               loc_12DB8
.text:0000000000012FDC ; ---------------------------------------------------------------------------
.text:0000000000012FDC loc_12FDC                               ; CODE XREF: android::HeifEncoder::store(void)+18C↑j
.text:0000000000012FDC                 MOV             W27, W21
.text:0000000000012FE0                 LDR             X0, [SP,#0x90+var_70]
.text:0000000000012FE4                 CBNZ            X0, loc_13138
.text:0000000000012FE8                 B               loc_13140
.text:0000000000012FEC ; ---------------------------------------------------------------------------
.text:0000000000012FEC loc_12FEC                               ; CODE XREF: android::HeifEncoder::store(void)+140↑j
.text:0000000000012FEC                 MOV             W27, WZR
.text:0000000000012FF0                 STR             WZR, [SP,#0x90+var_78]
.text:0000000000012FF4                 LDR             X0, [SP,#0x90+tp]
.text:0000000000012FF8                 CBNZ            X0, loc_12CE0
.text:0000000000012FFC                 B               loc_12CE8
.text:0000000000013000 ; ---------------------------------------------------------------------------
.text:0000000000013000 loc_13000                               ; CODE XREF: android::HeifEncoder::store(void)+1E4↑j
.text:0000000000013000                 CBNZ            W27, loc_13130
.text:0000000000013004                 ADD             X20, X19, #0x144
.text:0000000000013008                 MOV             X0, X20 ; mutex
.text:000000000001300C                 BL              .pthread_mutex_lock
.text:0000000000013010                 LDRB            W8, [X19,#0x110]
.text:0000000000013014                 CBNZ            W8, loc_13100
.text:0000000000013018                 MOV             W28, #0xCA00
.text:000000000001301C                 ADRP            X27, #aHeifencoder@PAGE ; "HeifEncoder"
.text:0000000000013020                 ADRP            X25, #aNoTheEosSignal@PAGE ; "no the EOS signal of output buffer(%d)"
.text:0000000000013024                 MOV             W23, WZR
.text:0000000000013028                 ADD             X21, X19, #0x114
.text:000000000001302C                 MOVK            W28, #0x3B9A,LSL#16
.text:0000000000013030                 MOV             X26, #0x7FFFFFFFFFFFFFFF
.text:0000000000013034                 ADD             X27, X27, #aHeifencoder@PAGEOFF ; "HeifEncoder"
.text:0000000000013038                 MOV             W24, #5
.text:000000000001303C                 ADD             X25, X25, #aNoTheEosSignal@PAGEOFF ; "no the EOS signal of output buffer(%d)"
.text:0000000000013040 loc_13040                               ; CODE XREF: android::HeifEncoder::store(void)+4F8↓j
.text:0000000000013040                                         ; android::HeifEncoder::store(void)+514↓j
.text:0000000000013040                 ADD             X1, SP, #0x90+tp ; tp
.text:0000000000013044                 MOV             W0, #1  ; clock_id
.text:0000000000013048                 BL              .clock_gettime
.text:000000000001304C                 LDR             X8, [SP,#0x90+tp.tv_nsec]
.text:0000000000013050                 CMP             X8, X28
.text:0000000000013054                 B.LT            loc_13070
.text:0000000000013058                 MOV             X9, #0xFFFFFFFFC4653600
.text:0000000000013060                 ADD             X9, X8, X9
.text:0000000000013064                 MOV             W8, #2
.text:0000000000013068                 STR             X9, [SP,#0x90+tp.tv_nsec]
.text:000000000001306C                 B               loc_13074
.text:0000000000013070 ; ---------------------------------------------------------------------------
.text:0000000000013070 loc_13070                               ; CODE XREF: android::HeifEncoder::store(void)+46C↑j
.text:0000000000013070                 MOV             W8, #1
.text:0000000000013074 loc_13074                               ; CODE XREF: android::HeifEncoder::store(void)+484↑j
.text:0000000000013074                 LDR             X9, [SP,#0x90+tp]
.text:0000000000013078                 EOR             X10, X8, #0x7FFFFFFFFFFFFFFF
.text:000000000001307C                 ADD             X2, SP, #0x90+tp ; abstime
.text:0000000000013080                 MOV             X0, X21 ; cond
.text:0000000000013084                 MOV             X1, X20 ; mutex
.text:0000000000013088                 ADD             X8, X9, X8
.text:000000000001308C                 CMP             X9, X10
.text:0000000000013090                 CSEL            X8, X26, X8, GT
.text:0000000000013094                 STR             X8, [SP,#0x90+tp]
.text:0000000000013098                 BL              .pthread_cond_timedwait
.text:000000000001309C                 CMP             W0, #0x6E ; 'n'
.text:00000000000130A0                 B.NE            loc_130DC
.text:00000000000130A4                 MOV             W0, W24
.text:00000000000130A8                 MOV             X1, X27
.text:00000000000130AC                 MOV             X2, X25
.text:00000000000130B0                 MOV             W3, W23
.text:00000000000130B4                 BL              .__android_log_print
.text:00000000000130B8                 LDRB            W8, [X19,#0x111]
.text:00000000000130BC                 CBZ             W8, loc_130E8
.text:00000000000130C0                 ADRP            X2, #aResetTo0OfTryC@PAGE ; "reset to 0 of try count"
.text:00000000000130C4                 STRB            WZR, [X19,#0x111]
.text:00000000000130C8                 MOV             W0, #4
.text:00000000000130CC                 MOV             X1, X27
.text:00000000000130D0                 ADD             X2, X2, #aResetTo0OfTryC@PAGEOFF ; "reset to 0 of try count"
.text:00000000000130D4                 BL              .__android_log_print
.text:00000000000130D8                 MOV             W23, WZR
.text:00000000000130DC loc_130DC                               ; CODE XREF: android::HeifEncoder::store(void)+4B8↑j
.text:00000000000130DC                 LDRB            W8, [X19,#0x110]
.text:00000000000130E0                 CBZ             W8, loc_13040
.text:00000000000130E4                 B               loc_13100
.text:00000000000130E8 ; ---------------------------------------------------------------------------
.text:00000000000130E8 loc_130E8                               ; CODE XREF: android::HeifEncoder::store(void)+4D4↑j
.text:00000000000130E8                 ADD             W3, W23, #1
.text:00000000000130EC                 CMP             W23, #0xA
.text:00000000000130F0                 B.GE            loc_13174
.text:00000000000130F4                 MOV             W23, W3
.text:00000000000130F8                 LDRB            W8, [X19,#0x110]
.text:00000000000130FC                 CBZ             W8, loc_13040
.text:0000000000013100 loc_13100                               ; CODE XREF: android::HeifEncoder::store(void)+42C↑j
.text:0000000000013100                                         ; android::HeifEncoder::store(void)+4FC↑j
.text:0000000000013100                 MOV             W27, WZR
.text:0000000000013104                 LDRB            W8, [X19,#0x112]
.text:0000000000013108                 CBNZ            W8, loc_13128
.text:000000000001310C loc_1310C                               ; CODE XREF: android::HeifEncoder::store(void)+5B0↓j
.text:000000000001310C                 ADRP            X1, #aHeifencoder@PAGE ; "HeifEncoder"
.text:0000000000013110                 ADRP            X2, #aWeMetTheZeroSi@PAGE ; "we met the zero size of output buffer"
.text:0000000000013114                 ADD             X1, X1, #aHeifencoder@PAGEOFF ; "HeifEncoder"
.text:0000000000013118                 MOV             W0, #5
.text:000000000001311C                 ADD             X2, X2, #aWeMetTheZeroSi@PAGEOFF ; "we met the zero size of output buffer"
.text:0000000000013120                 BL              .__android_log_print
.text:0000000000013124                 MOV             W27, #0xFFFFFC1A
.text:0000000000013128 loc_13128                               ; CODE XREF: android::HeifEncoder::store(void)+520↑j
.text:0000000000013128                                         ; android::HeifEncoder::store(void)+5AC↓j
.text:0000000000013128                 MOV             X0, X20 ; mutex
.text:000000000001312C                 BL              .pthread_mutex_unlock
.text:0000000000013130 loc_13130                               ; CODE XREF: android::HeifEncoder::store(void):loc_13000↑j
.text:0000000000013130                 LDR             X0, [SP,#0x90+var_70] ; this
.text:0000000000013134                 CBZ             X0, loc_13140
.text:0000000000013138 loc_13138                               ; CODE XREF: android::HeifEncoder::store(void)+124↑j
.text:0000000000013138                                         ; android::HeifEncoder::store(void)+3FC↑j
.text:0000000000013138                 ADD             X1, SP, #0x90+var_70 ; void *
.text:000000000001313C                 BL              ._ZNK7android7RefBase9decStrongEPKv ; android::RefBase::decStrong(void const*)
.text:0000000000013140 loc_13140                               ; CODE XREF: android::HeifEncoder::store(void)+128↑j
.text:0000000000013140                                         ; android::HeifEncoder::store(void)+400↑j ...
.text:0000000000013140                 LDR             X8, [X22,#0x28]
.text:0000000000013144                 LDR             X9, [SP,#0x90+var_58]
.text:0000000000013148                 CMP             X8, X9
.text:000000000001314C                 B.NE            loc_1319C
.text:0000000000013150                 MOV             W0, W27
.text:0000000000013154                 LDP             X29, X30, [SP,#0x90+var_s0]
.text:0000000000013158                 LDP             X20, X19, [SP,#0x90+var_10]
.text:000000000001315C                 LDP             X22, X21, [SP,#0x90+var_20]
.text:0000000000013160                 LDP             X24, X23, [SP,#0x90+var_30]
.text:0000000000013164                 LDP             X26, X25, [SP,#0x90+var_40]
.text:0000000000013168                 LDP             X28, X27, [SP,#0x90+var_50]
.text:000000000001316C                 ADD             SP, SP, #0xA0
.text:0000000000013170                 RET
.text:0000000000013174 ; ---------------------------------------------------------------------------
.text:0000000000013174 loc_13174                               ; CODE XREF: android::HeifEncoder::store(void)+508↑j
.text:0000000000013174                 ADRP            X1, #aHeifencoder@PAGE ; "HeifEncoder"
.text:0000000000013178                 ADRP            X2, #aCanNotWaitTheE@PAGE ; "can not wait the EOS signal of output b"...
.text:000000000001317C                 ADD             X1, X1, #aHeifencoder@PAGEOFF ; "HeifEncoder"
.text:0000000000013180                 ADD             X2, X2, #aCanNotWaitTheE@PAGEOFF ; "can not wait the EOS signal of output b"...
.text:0000000000013184                 MOV             W0, #6
.text:0000000000013188                 BL              .__android_log_print
.text:000000000001318C                 MOV             W27, #0xFFFFFC19
.text:0000000000013190                 LDRB            W8, [X19,#0x112]
.text:0000000000013194                 CBNZ            W8, loc_13128
.text:0000000000013198                 B               loc_1310C
.text:000000000001319C ; ---------------------------------------------------------------------------
.text:000000000001319C loc_1319C                               ; CODE XREF: android::HeifEncoder::store(void)+564↑j
.text:000000000001319C                 BL              .__stack_chk_fail
.text:000000000001319C ; } // starts at 12BE8
.text:000000000001319C ; End of function android::HeifEncoder::store(void)
.text:00000000000131A0 ; =============== S U B R O U T I N E =======================================
.text:00000000000131A0 ; Attributes: bp-based frame
.text:00000000000131A0 ; __int64 __fastcall android::HeifEncoder::dequeuedInputBuffer(android::HeifEncoder *__hidden this)
.text:00000000000131A0                 EXPORT _ZN7android11HeifEncoder19dequeuedInputBufferEv
.text:00000000000131A0 _ZN7android11HeifEncoder19dequeuedInputBufferEv
.text:00000000000131A0                                         ; CODE XREF: android::HeifEncoder::dequeuedInputBuffer(void)+C↓j
.text:00000000000131A0                                         ; DATA XREF: LOAD:0000000000001608↑o ...
.text:00000000000131A0 var_70          = -0x70
.text:00000000000131A0 tp              = -0x68
.text:00000000000131A0 var_58          = -0x58
.text:00000000000131A0 var_50          = -0x50
.text:00000000000131A0 var_40          = -0x40
.text:00000000000131A0 var_30          = -0x30
.text:00000000000131A0 var_20          = -0x20
.text:00000000000131A0 var_10          = -0x10
.text:00000000000131A0 var_s0          =  0
.text:00000000000131A0 ; __unwind {
.text:00000000000131A0                 SUB             SP, SP, #0x80
.text:00000000000131A4                 STP             X28, X27, [SP,#0x70+var_50]
.text:00000000000131A8                 STP             X26, X25, [SP,#0x70+var_40]
.text:00000000000131AC                 STP             X24, X23, [SP,#0x70+var_30]
.text:00000000000131B0                 STP             X22, X21, [SP,#0x70+var_20]
.text:00000000000131B4                 STP             X20, X19, [SP,#0x70+var_10]
.text:00000000000131B8                 STP             X29, X30, [SP,#0x70+var_s0]
.text:00000000000131BC                 ADD             X29, SP, #0x70
.text:00000000000131C0                 MRS             X8, #3, c13, c0, #2
.text:00000000000131C4                 ADD             X19, X0, #0x78 ; 'x'
.text:00000000000131C8                 STR             X8, [SP,#0x70+var_70]
.text:00000000000131CC                 MOV             X20, X0
.text:00000000000131D0                 LDR             X8, [X8,#0x28]
.text:00000000000131D4                 MOV             X0, X19 ; mutex
.text:00000000000131D8                 STR             X8, [SP,#0x70+var_58]
.text:00000000000131DC                 BL              .pthread_mutex_lock
.text:00000000000131E0                 LDR             X8, [X20,#0x60]
.text:00000000000131E4                 CBNZ            X8, loc_13294
.text:00000000000131E8                 MOV             W28, #0xE100
.text:00000000000131EC                 MOV             W27, #0xC9FF
.text:00000000000131F0                 MOV             X23, #0xFFFFFFFFFFFF1700
.text:00000000000131F4                 ADRP            X25, #aNoReleaseCallb@PAGE ; "no release callback from omx component "...
.text:00000000000131F8                 MOV             W22, WZR
.text:00000000000131FC                 ADD             X21, X20, #0xA0
.text:0000000000013200                 MOVK            W28, #0x5F5,LSL#16
.text:0000000000013204                 MOVK            W27, #0x3B9A,LSL#16
.text:0000000000013208                 MOVK            X23, #0xCA5B,LSL#16
.text:000000000001320C                 MOV             X24, #0x7FFFFFFFFFFFFFFF
.text:0000000000013210                 ADD             X25, X25, #aNoReleaseCallb@PAGEOFF ; "no release callback from omx component "...
.text:0000000000013214 loc_13214                               ; CODE XREF: android::HeifEncoder::dequeuedInputBuffer(void)+F0↓j
.text:0000000000013214                 ADD             X1, SP, #0x70+tp ; tp
.text:0000000000013218                 MOV             W0, #1  ; clock_id
.text:000000000001321C                 BL              .clock_gettime
.text:0000000000013220                 LDP             X9, X8, [SP,#0x70+tp]
.text:0000000000013224                 ADD             X2, SP, #0x70+tp ; abstime
.text:0000000000013228                 MOV             X0, X21 ; cond
.text:000000000001322C                 MOV             X1, X19 ; mutex
.text:0000000000013230                 ADD             X10, X8, X28
.text:0000000000013234                 CMP             X10, X27
.text:0000000000013238                 ADD             X8, X8, X23
.text:000000000001323C                 CSET            W11, GT
.text:0000000000013240                 CSEL            X8, X8, X10, GT
.text:0000000000013244                 EOR             X10, X11, #0x7FFFFFFFFFFFFFFF
.text:0000000000013248                 CINC            X11, X9, GT
.text:000000000001324C                 CMP             X9, X10
.text:0000000000013250                 CSEL            X9, X24, X11, GT
.text:0000000000013254                 STP             X9, X8, [SP,#0x70+tp]
.text:0000000000013258                 BL              .pthread_cond_timedwait
.text:000000000001325C                 CMP             W0, #0x6E ; 'n'
.text:0000000000013260                 B.NE            loc_1328C
.text:0000000000013264                 ADRP            X1, #aHeifencoder@PAGE ; "HeifEncoder"
.text:0000000000013268                 MOV             W0, #5
.text:000000000001326C                 ADD             X1, X1, #aHeifencoder@PAGEOFF ; "HeifEncoder"
.text:0000000000013270                 MOV             X2, X25
.text:0000000000013274                 MOV             W3, W22
.text:0000000000013278                 ADD             W26, W22, #1
.text:000000000001327C                 BL              .__android_log_print
.text:0000000000013280                 CMP             W22, #9
.text:0000000000013284                 B.GT            loc_1330C
.text:0000000000013288                 MOV             W22, W26
.text:000000000001328C loc_1328C                               ; CODE XREF: android::HeifEncoder::dequeuedInputBuffer(void)+C0↑j
.text:000000000001328C                 LDR             X8, [X20,#0x60]
.text:0000000000013290                 CBZ             X8, loc_13214
.text:0000000000013294 loc_13294                               ; CODE XREF: android::HeifEncoder::dequeuedInputBuffer(void)+44↑j
.text:0000000000013294                 ADD             X22, X20, #0x50 ; 'P'
.text:0000000000013298                 MOV             X0, X22 ; this
.text:000000000001329C                 BL              ._ZN7android10VectorImpl13editArrayImplEv ; android::VectorImpl::editArrayImpl(void)
.text:00000000000132A0                 LDR             W21, [X0]
.text:00000000000132A4                 MOV             X0, X22 ; this
.text:00000000000132A8                 BL              ._ZN7android10VectorImpl13editArrayImplEv ; android::VectorImpl::editArrayImpl(void)
.text:00000000000132AC                 LDR             X8, [X20,#0x58]
.text:00000000000132B0                 MOV             W2, #1  ; unsigned __int64
.text:00000000000132B4                 SUB             X8, X0, X8
.text:00000000000132B8                 MOV             X0, X22 ; this
.text:00000000000132BC                 ASR             X1, X8, #3 ; unsigned __int64
.text:00000000000132C0                 BL              ._ZN7android10VectorImpl13removeItemsAtEmm ; android::VectorImpl::removeItemsAt(ulong,ulong)
.text:00000000000132C4                 MOV             X0, X22 ; this
.text:00000000000132C8                 BL              ._ZN7android10VectorImpl13editArrayImplEv ; android::VectorImpl::editArrayImpl(void)
.text:00000000000132CC loc_132CC                               ; CODE XREF: android::HeifEncoder::dequeuedInputBuffer(void)+18C↓j
.text:00000000000132CC                 MOV             X0, X19 ; mutex
.text:00000000000132D0                 BL              .pthread_mutex_unlock
.text:00000000000132D4                 LDR             X8, [SP,#0x70+var_70]
.text:00000000000132D8                 LDR             X8, [X8,#0x28]
.text:00000000000132DC                 LDR             X9, [SP,#0x70+var_58]
.text:00000000000132E0                 CMP             X8, X9
.text:00000000000132E4                 B.NE            loc_13330
.text:00000000000132E8                 MOV             W0, W21
.text:00000000000132EC                 LDP             X29, X30, [SP,#0x70+var_s0]
.text:00000000000132F0                 LDP             X20, X19, [SP,#0x70+var_10]
.text:00000000000132F4                 LDP             X22, X21, [SP,#0x70+var_20]
.text:00000000000132F8                 LDP             X24, X23, [SP,#0x70+var_30]
.text:00000000000132FC                 LDP             X26, X25, [SP,#0x70+var_40]
.text:0000000000013300                 LDP             X28, X27, [SP,#0x70+var_50]
.text:0000000000013304                 ADD             SP, SP, #0x80
.text:0000000000013308                 RET
.text:000000000001330C ; ---------------------------------------------------------------------------
.text:000000000001330C loc_1330C                               ; CODE XREF: android::HeifEncoder::dequeuedInputBuffer(void)+E4↑j
.text:000000000001330C                 ADRP            X1, #aHeifencoder@PAGE ; "HeifEncoder"
.text:0000000000013310                 ADRP            X2, #aTimedOutForWai@PAGE ; "timed out for waitting input buffer(%d)"
.text:0000000000013314                 ADD             X1, X1, #aHeifencoder@PAGEOFF ; "HeifEncoder"
.text:0000000000013318                 ADD             X2, X2, #aTimedOutForWai@PAGEOFF ; "timed out for waitting input buffer(%d)"
.text:000000000001331C                 MOV             W0, #6
.text:0000000000013320                 MOV             W3, W26
.text:0000000000013324                 BL              .__android_log_print
.text:0000000000013328                 MOV             W21, #0xFFFFFFFF
.text:000000000001332C                 B               loc_132CC
.text:0000000000013330 ; ---------------------------------------------------------------------------
.text:0000000000013330 loc_13330                               ; CODE XREF: android::HeifEncoder::dequeuedInputBuffer(void)+144↑j
.text:0000000000013330                 BL              .__stack_chk_fail
.text:0000000000013330 ; } // starts at 131A0
.text:0000000000013330 ; End of function android::HeifEncoder::dequeuedInputBuffer(void)
.text:0000000000013330 ; ---------------------------------------------------------------------------
.text:0000000000013334                 ALIGN 8
.text:0000000000013338 ; =============== S U B R O U T I N E =======================================
.text:0000000000013338 ; Attributes: bp-based frame
.text:0000000000013338 ; __int64 __fastcall android::HeifEncoder::signalEOSForOneFrame(android::HeifEncoder *__hidden this, __int64)
.text:0000000000013338                 EXPORT _ZN7android11HeifEncoder20signalEOSForOneFrameEl
.text:0000000000013338 _ZN7android11HeifEncoder20signalEOSForOneFrameEl
.text:0000000000013338                                         ; DATA XREF: LOAD:00000000000015D8↑o
.text:0000000000013338 var_10          = -0x10
.text:0000000000013338 var_s0          =  0
.text:0000000000013338 ; __unwind {
.text:0000000000013338                 STP             X20, X19, [SP,#-0x10+var_10]!
.text:000000000001333C                 STP             X29, X30, [SP,#0x10+var_s0]
.text:0000000000013340                 ADD             X29, SP, #0x10
.text:0000000000013344                 MOV             X19, X1
.text:0000000000013348                 MOV             X20, X0
.text:000000000001334C                 BL              ._ZN7android11HeifEncoder19dequeuedInputBufferEv ; android::HeifEncoder::dequeuedInputBuffer(void)
.text:0000000000013350                 TBNZ            W0, #0x1F, loc_133AC
.text:0000000000013354                 LDR             X8, [X20,#0x38]
.text:0000000000013358                 SXTW            X20, W0
.text:000000000001335C                 MOV             X1, X20 ; unsigned __int64
.text:0000000000013360                 MOV             X2, XZR ; unsigned __int64
.text:0000000000013364                 MOV             X3, XZR ; unsigned __int64
.text:0000000000013368                 MOV             X0, X8  ; this
.text:000000000001336C                 MOV             X4, X19 ; __int64
.text:0000000000013370                 MOV             W5, #4  ; unsigned int
.text:0000000000013374                 MOV             X6, XZR ; android::AString *
.text:0000000000013378                 BL              ._ZN7android10MediaCodec16queueInputBufferEmmmljPNS_7AStringE ; android::MediaCodec::queueInputBuffer(ulong,ulong,ulong,long,uint,android::AString *)
.text:000000000001337C                 CBZ             W0, loc_133AC
.text:0000000000013380                 LDP             X29, X30, [SP,#0x10+var_s0]
.text:0000000000013384                 ADRP            X1, #aHeifencoder@PAGE ; "HeifEncoder"
.text:0000000000013388                 ADRP            X2, #aFailedToQueueI@PAGE ; "failed to queue input buffer(%d), [%zu,"...
.text:000000000001338C                 MOV             W3, W0
.text:0000000000013390                 ADD             X1, X1, #aHeifencoder@PAGEOFF ; "HeifEncoder"
.text:0000000000013394                 ADD             X2, X2, #aFailedToQueueI@PAGEOFF ; "failed to queue input buffer(%d), [%zu,"...
.text:0000000000013398                 MOV             W0, #6
.text:000000000001339C                 MOV             X4, X20
.text:00000000000133A0                 MOV             X5, X19
.text:00000000000133A4                 LDP             X20, X19, [SP+0x10+var_10],#0x20
.text:00000000000133A8                 B               .__android_log_print
.text:00000000000133AC ; ---------------------------------------------------------------------------
.text:00000000000133AC loc_133AC                               ; CODE XREF: android::HeifEncoder::signalEOSForOneFrame(long)+18↑j
.text:00000000000133AC                                         ; android::HeifEncoder::signalEOSForOneFrame(long)+44↑j
.text:00000000000133AC                 LDP             X29, X30, [SP,#0x10+var_s0]
.text:00000000000133B0                 LDP             X20, X19, [SP+0x10+var_10],#0x20
.text:00000000000133B4                 RET
.text:00000000000133B4 ; } // starts at 13338
.text:00000000000133B4 ; End of function android::HeifEncoder::signalEOSForOneFrame(long)
.text:00000000000133B8 ; =============== S U B R O U T I N E =======================================
.text:00000000000133B8 ; Attributes: bp-based frame
.text:00000000000133B8 ; android::HeifEncoder::restart(android::sp<android::AMessage> const&, android::sp<android::HeifMuxerBase> const&)
.text:00000000000133B8                 EXPORT _ZN7android11HeifEncoder7restartERKNS_2spINS_8AMessageEEERKNS1_INS_13HeifMuxerBaseEEE
.text:00000000000133B8 _ZN7android11HeifEncoder7restartERKNS_2spINS_8AMessageEEERKNS1_INS_13HeifMuxerBaseEEE
.text:00000000000133B8                                         ; CODE XREF: android::HeifEncoder::restart(android::sp<android::AMessage> const&,android::sp<android::HeifMuxerBase> const&)+C↓j
.text:00000000000133B8                                         ; DATA XREF: LOAD:0000000000001980↑o ...
.text:00000000000133B8 var_60          = -0x60
.text:00000000000133B8 var_54          = -0x54
.text:00000000000133B8 var_50          = -0x50
.text:00000000000133B8 var_48          = -0x48
.text:00000000000133B8 var_40          = -0x40
.text:00000000000133B8 var_30          = -0x30
.text:00000000000133B8 var_20          = -0x20
.text:00000000000133B8 var_10          = -0x10
.text:00000000000133B8 var_s0          =  0
.text:00000000000133B8 ; __unwind {
.text:00000000000133B8                 SUB             SP, SP, #0x70
.text:00000000000133BC                 STR             X25, [SP,#0x60+var_40]
.text:00000000000133C0                 STP             X24, X23, [SP,#0x60+var_30]
.text:00000000000133C4                 STP             X22, X21, [SP,#0x60+var_20]
.text:00000000000133C8                 STP             X20, X19, [SP,#0x60+var_10]
.text:00000000000133CC                 STP             X29, X30, [SP,#0x60+var_s0]
.text:00000000000133D0                 ADD             X29, SP, #0x60
.text:00000000000133D4                 MRS             X25, #3, c13, c0, #2
.text:00000000000133D8                 LDR             X8, [X25,#0x28]
.text:00000000000133DC                 STR             X8, [SP,#0x60+var_48]
.text:00000000000133E0                 LDRB            W8, [X0,#0x48]
.text:00000000000133E4                 CBZ             W8, loc_13510
.text:00000000000133E8                 ADD             X21, X0, #0x144
.text:00000000000133EC                 MOV             X20, X0
.text:00000000000133F0                 MOV             X0, X21 ; mutex
.text:00000000000133F4                 MOV             X22, X2
.text:00000000000133F8                 MOV             X19, X1
.text:00000000000133FC                 BL              .pthread_mutex_lock
.text:0000000000013400                 LDR             X23, [X20,#0x108]
.text:0000000000013404                 ADD             X24, X20, #0x108
.text:0000000000013408                 LDR             X22, [X22]
.text:000000000001340C                 CBZ             X22, loc_1341C
.text:0000000000013410                 MOV             X0, X22 ; this
.text:0000000000013414                 MOV             X1, X24 ; void *
.text:0000000000013418                 BL              ._ZNK7android7RefBase9incStrongEPKv ; android::RefBase::incStrong(void const*)
.text:000000000001341C loc_1341C                               ; CODE XREF: android::HeifEncoder::restart(android::sp<android::AMessage> const&,android::sp<android::HeifMuxerBase> const&)+54↑j
.text:000000000001341C                 CBZ             X23, loc_1342C
.text:0000000000013420                 MOV             X0, X23 ; this
.text:0000000000013424                 MOV             X1, X24 ; void *
.text:0000000000013428                 BL              ._ZNK7android7RefBase9decStrongEPKv ; android::RefBase::decStrong(void const*)
.text:000000000001342C loc_1342C                               ; CODE XREF: android::HeifEncoder::restart(android::sp<android::AMessage> const&,android::sp<android::HeifMuxerBase> const&):loc_1341C↑j
.text:000000000001342C                 LDR             X8, [X24]
.text:0000000000013430                 CMP             X23, X8
.text:0000000000013434                 B.EQ            loc_1343C
.text:0000000000013438                 BL              ._ZN7android14sp_report_raceEv ; android::sp_report_race(void)
.text:000000000001343C loc_1343C                               ; CODE XREF: android::HeifEncoder::restart(android::sp<android::AMessage> const&,android::sp<android::HeifMuxerBase> const&)+7C↑j
.text:000000000001343C                 MOV             X0, X21 ; mutex
.text:0000000000013440                 STR             X22, [X20,#0x108]
.text:0000000000013444                 STRH            WZR, [X20,#0x110]
.text:0000000000013448                 BL              .pthread_mutex_unlock
.text:000000000001344C                 MOV             W0, #0xA40 ; unsigned __int64
.text:0000000000013450                 BL              ._Znwm  ; operator new(ulong)
.text:0000000000013454                 LDR             X8, [X20,#0x28]
.text:0000000000013458                 MOV             X20, X0
.text:000000000001345C                 STR             X8, [SP,#0x60+var_50]
.text:0000000000013460                 CBZ             X8, loc_13470
.text:0000000000013464                 ADD             X1, SP, #0x60+var_50 ; void *
.text:0000000000013468                 MOV             X0, X8  ; this
.text:000000000001346C                 BL              ._ZNK7android7RefBase9incStrongEPKv ; android::RefBase::incStrong(void const*)
.text:0000000000013470 loc_13470                               ; CODE XREF: android::HeifEncoder::restart(android::sp<android::AMessage> const&,android::sp<android::HeifMuxerBase> const&)+A8↑j
.text:0000000000013470                 ADD             X2, SP, #0x60+var_50
.text:0000000000013474                 MOV             X0, X20
.text:0000000000013478                 MOV             W1, #4
.text:000000000001347C                 BL              ._ZN7android8AMessageC1EjRKNS_2spIKNS_8AHandlerEEE ; android::AMessage::AMessage(uint,android::sp<android::AHandler const> const&)
.text:0000000000013480                 MOV             X1, SP  ; void *
.text:0000000000013484                 STR             X20, [SP,#0x60+var_60]
.text:0000000000013488                 MOV             X0, X20 ; this
.text:000000000001348C                 BL              ._ZNK7android7RefBase9incStrongEPKv ; android::RefBase::incStrong(void const*)
.text:0000000000013490                 LDR             X0, [SP,#0x60+var_50] ; this
.text:0000000000013494                 CBZ             X0, loc_134A0
.text:0000000000013498                 ADD             X1, SP, #0x60+var_50 ; void *
.text:000000000001349C                 BL              ._ZNK7android7RefBase9decStrongEPKv ; android::RefBase::decStrong(void const*)
.text:00000000000134A0 loc_134A0                               ; CODE XREF: android::HeifEncoder::restart(android::sp<android::AMessage> const&,android::sp<android::HeifMuxerBase> const&)+DC↑j
.text:00000000000134A0                 LDR             X0, [SP,#0x60+var_60]
.text:00000000000134A4                 ADRP            X1, #aInputFormat@PAGE ; "input-format"
.text:00000000000134A8                 ADD             X1, X1, #aInputFormat@PAGEOFF ; "input-format"
.text:00000000000134AC                 MOV             X2, X19
.text:00000000000134B0                 BL              ._ZN7android8AMessage10setMessageEPKcRKNS_2spIS0_EE ; android::AMessage::setMessage(char const*,android::sp<android::AMessage> const&)
.text:00000000000134B4                 LDR             X0, [SP,#0x60+var_60]
.text:00000000000134B8                 ADD             X1, SP, #0x60+var_50
.text:00000000000134BC                 STR             XZR, [SP,#0x60+var_50]
.text:00000000000134C0                 BL              ._ZN7android8AMessage20postAndAwaitResponseEPNS_2spIS0_EE ; android::AMessage::postAndAwaitResponse(android::sp<android::AMessage> *)
.text:00000000000134C4                 MOV             W19, W0
.text:00000000000134C8                 STR             W0, [SP,#0x60+var_54]
.text:00000000000134CC                 CBZ             W0, loc_13540
.text:00000000000134D0                 LDR             X0, [SP,#0x60+var_50] ; this
.text:00000000000134D4                 CBZ             X0, loc_134E0
.text:00000000000134D8 loc_134D8                               ; CODE XREF: android::HeifEncoder::restart(android::sp<android::AMessage> const&,android::sp<android::HeifMuxerBase> const&)+1A8↓j
.text:00000000000134D8                                         ; android::HeifEncoder::restart(android::sp<android::AMessage> const&,android::sp<android::HeifMuxerBase> const&)+1BC↓j
.text:00000000000134D8                 ADD             X1, SP, #0x60+var_50 ; void *
.text:00000000000134DC                 BL              ._ZNK7android7RefBase9decStrongEPKv ; android::RefBase::decStrong(void const*)
.text:00000000000134E0 loc_134E0                               ; CODE XREF: android::HeifEncoder::restart(android::sp<android::AMessage> const&,android::sp<android::HeifMuxerBase> const&)+11C↑j
.text:00000000000134E0                                         ; android::HeifEncoder::restart(android::sp<android::AMessage> const&,android::sp<android::HeifMuxerBase> const&)+1AC↓j ...
.text:00000000000134E0                 CBZ             W19, loc_13500
.text:00000000000134E4                 ADRP            X1, #aHeifencoder@PAGE ; "HeifEncoder"
.text:00000000000134E8                 ADRP            X2, #aMeetAnErrorDWh_0@PAGE ; "Meet an error(%d) when restarting..."
.text:00000000000134EC                 ADD             X1, X1, #aHeifencoder@PAGEOFF ; "HeifEncoder"
.text:00000000000134F0                 ADD             X2, X2, #aMeetAnErrorDWh_0@PAGEOFF ; "Meet an error(%d) when restarting..."
.text:00000000000134F4                 MOV             W0, #5
.text:00000000000134F8                 MOV             W3, W19
.text:00000000000134FC                 BL              .__android_log_print
.text:0000000000013500 loc_13500                               ; CODE XREF: android::HeifEncoder::restart(android::sp<android::AMessage> const&,android::sp<android::HeifMuxerBase> const&):loc_134E0↑j
.text:0000000000013500                 LDR             X0, [SP,#0x60+var_60] ; this
.text:0000000000013504                 CBZ             X0, loc_13510
.text:0000000000013508                 MOV             X1, SP  ; void *
.text:000000000001350C                 BL              ._ZNK7android7RefBase9decStrongEPKv ; android::RefBase::decStrong(void const*)
.text:0000000000013510 loc_13510                               ; CODE XREF: android::HeifEncoder::restart(android::sp<android::AMessage> const&,android::sp<android::HeifMuxerBase> const&)+2C↑j
.text:0000000000013510                                         ; android::HeifEncoder::restart(android::sp<android::AMessage> const&,android::sp<android::HeifMuxerBase> const&)+14C↑j
.text:0000000000013510                 LDR             X8, [X25,#0x28]
.text:0000000000013514                 LDR             X9, [SP,#0x60+var_48]
.text:0000000000013518                 CMP             X8, X9
.text:000000000001351C                 B.NE            loc_1357C
.text:0000000000013520                 LDP             X29, X30, [SP,#0x60+var_s0]
.text:0000000000013524                 LDP             X20, X19, [SP,#0x60+var_10]
.text:0000000000013528                 LDP             X22, X21, [SP,#0x60+var_20]
.text:000000000001352C                 LDP             X24, X23, [SP,#0x60+var_30]
.text:0000000000013530                 LDR             X25, [SP,#0x60+var_40]
.text:0000000000013534                 MOV             W0, WZR
.text:0000000000013538                 ADD             SP, SP, #0x70 ; 'p'
.text:000000000001353C                 RET
.text:0000000000013540 ; ---------------------------------------------------------------------------
.text:0000000000013540 loc_13540                               ; CODE XREF: android::HeifEncoder::restart(android::sp<android::AMessage> const&,android::sp<android::HeifMuxerBase> const&)+114↑j
.text:0000000000013540                 LDR             X0, [SP,#0x60+var_50] ; this
.text:0000000000013544                 ADRP            X1, #aErr@PAGE ; "err"
.text:0000000000013548                 ADD             X1, X1, #aErr@PAGEOFF ; "err"
.text:000000000001354C                 ADD             X2, SP, #0x60+var_54 ; int *
.text:0000000000013550                 BL              ._ZNK7android8AMessage9findInt32EPKcPi ; android::AMessage::findInt32(char const*,int *)
.text:0000000000013554                 TBZ             W0, #0, loc_13568
.text:0000000000013558                 LDR             W19, [SP,#0x60+var_54]
.text:000000000001355C                 LDR             X0, [SP,#0x60+var_50]
.text:0000000000013560                 CBNZ            X0, loc_134D8
.text:0000000000013564                 B               loc_134E0
.text:0000000000013568 ; ---------------------------------------------------------------------------
.text:0000000000013568 loc_13568                               ; CODE XREF: android::HeifEncoder::restart(android::sp<android::AMessage> const&,android::sp<android::HeifMuxerBase> const&)+19C↑j
.text:0000000000013568                 MOV             W19, WZR
.text:000000000001356C                 STR             WZR, [SP,#0x60+var_54]
.text:0000000000013570                 LDR             X0, [SP,#0x60+var_50]
.text:0000000000013574                 CBNZ            X0, loc_134D8
.text:0000000000013578                 B               loc_134E0
.text:000000000001357C ; ---------------------------------------------------------------------------
.text:000000000001357C loc_1357C                               ; CODE XREF: android::HeifEncoder::restart(android::sp<android::AMessage> const&,android::sp<android::HeifMuxerBase> const&)+164↑j
.text:000000000001357C                 BL              .__stack_chk_fail
.text:000000000001357C ; } // starts at 133B8
.text:000000000001357C ; End of function android::HeifEncoder::restart(android::sp<android::AMessage> const&,android::sp<android::HeifMuxerBase> const&)
.text:0000000000013580 ; =============== S U B R O U T I N E =======================================
.text:0000000000013580 ; Attributes: bp-based frame
.text:0000000000013580 ; android::HeifEncoder::onMessageReceived(android::sp<android::AMessage> const&)
.text:0000000000013580                 EXPORT _ZN7android11HeifEncoder17onMessageReceivedERKNS_2spINS_8AMessageEEE
.text:0000000000013580 _ZN7android11HeifEncoder17onMessageReceivedERKNS_2spINS_8AMessageEEE
.text:0000000000013580                                         ; CODE XREF: android::HeifEncoder::onMessageReceived(android::sp<android::AMessage> const&)+C↓j
.text:0000000000013580                                         ; DATA XREF: LOAD:0000000000001440↑o ...
.text:0000000000013580 var_68          = -0x68
.text:0000000000013580 var_48          = -0x48
.text:0000000000013580 var_40          = -0x40
.text:0000000000013580 var_38          = -0x38
.text:0000000000013580 var_30          = -0x30
.text:0000000000013580 var_20          = -0x20
.text:0000000000013580 var_10          = -0x10
.text:0000000000013580 var_s0          =  0
.text:0000000000013580 arg_28          =  0x38
.text:0000000000013580 ; __unwind {
.text:0000000000013580                 SUB             SP, SP, #0xA0
.text:0000000000013584                 STR             X23, [SP,#0x90+var_30]
.text:0000000000013588                 STP             X22, X21, [SP,#0x90+var_20]
.text:000000000001358C                 STP             X20, X19, [SP,#0x90+var_10]
.text:0000000000013590                 STP             X29, X30, [SP,#0x90+var_s0]
.text:0000000000013594                 ADD             X29, SP, #0x90
.text:0000000000013598                 MRS             X23, #3, c13, c0, #2
.text:000000000001359C                 MOV             X19, X0
.text:00000000000135A0                 LDR             X8, [X23,#0x28]
.text:00000000000135A4                 MOV             X20, X1
.text:00000000000135A8                 STUR            X8, [X29,#var_38]
.text:00000000000135AC                 LDR             X0, [X1]
.text:00000000000135B0                 ADD             X1, SP, #0x90+var_48
.text:00000000000135B4                 STUR            XZR, [X29,#var_40]
.text:00000000000135B8                 STR             XZR, [SP,#0x90+var_48]
.text:00000000000135BC                 BL              ._ZN7android8AMessage20senderAwaitsResponseEPNS_2spINS_11AReplyTokenEEE ; android::AMessage::senderAwaitsResponse(android::sp<android::AReplyToken> *)
.text:00000000000135C0                 TBZ             W0, #0, loc_13608
.text:00000000000135C4                 MOV             W0, #0xA40 ; unsigned __int64
.text:00000000000135C8                 BL              ._Znwm  ; operator new(ulong)
.text:00000000000135CC                 MOV             X21, X0
.text:00000000000135D0                 BL              ._ZN7android8AMessageC1Ev ; android::AMessage::AMessage(void)
.text:00000000000135D4                 LDUR            X22, [X29,#var_40]
.text:00000000000135D8                 SUB             X1, X29, #-var_40 ; void *
.text:00000000000135DC                 MOV             X0, X21 ; this
.text:00000000000135E0                 BL              ._ZNK7android7RefBase9incStrongEPKv ; android::RefBase::incStrong(void const*)
.text:00000000000135E4                 CBZ             X22, loc_135F4
.text:00000000000135E8                 SUB             X1, X29, #-var_40 ; void *
.text:00000000000135EC                 MOV             X0, X22 ; this
.text:00000000000135F0                 BL              ._ZNK7android7RefBase9decStrongEPKv ; android::RefBase::decStrong(void const*)
.text:00000000000135F4 loc_135F4                               ; CODE XREF: android::HeifEncoder::onMessageReceived(android::sp<android::AMessage> const&)+64↑j
.text:00000000000135F4                 LDUR            X8, [X29,#var_40]
.text:00000000000135F8                 CMP             X22, X8
.text:00000000000135FC                 B.EQ            loc_13604
.text:0000000000013600                 BL              ._ZN7android14sp_report_raceEv ; android::sp_report_race(void)
.text:0000000000013604 loc_13604                               ; CODE XREF: android::HeifEncoder::onMessageReceived(android::sp<android::AMessage> const&)+7C↑j
.text:0000000000013604                 STUR            X21, [X29,#var_40]
.text:0000000000013608 loc_13608                               ; CODE XREF: android::HeifEncoder::onMessageReceived(android::sp<android::AMessage> const&)+40↑j
.text:0000000000013608                 LDR             X0, [X20] ; this
.text:000000000001360C                 BL              ._ZNK7android8AMessage4whatEv ; android::AMessage::what(void)
.text:0000000000013610                 CMP             W0, #4
.text:0000000000013614                 B.HI            loc_13A14
.text:0000000000013618                 ADRP            X9, #unk_9D68@PAGE
.text:000000000001361C                 MOV             W8, W0
.text:0000000000013620                 ADD             X9, X9, #unk_9D68@PAGEOFF
.text:0000000000013624                 ADR             X10, loc_13634
.text:0000000000013628                 LDRB            W11, [X9,X8]
.text:000000000001362C                 ADD             X10, X10, X11,LSL#2
.text:0000000000013630                 BR              X10
.text:0000000000013634 ; ---------------------------------------------------------------------------
.text:0000000000013634 loc_13634                               ; DATA XREF: android::HeifEncoder::onMessageReceived(android::sp<android::AMessage> const&)+A4↑o
.text:0000000000013634                 LDR             W8, [X19,#0x18]
.text:0000000000013638                 CBZ             W8, loc_137D0
.text:000000000001363C                 ADRP            X1, #aHeifencoder@PAGE ; "HeifEncoder"
.text:0000000000013640                 ADRP            X2, #aAlreadyStarted@PAGE ; "already STARTED"
.text:0000000000013644                 ADD             X1, X1, #aHeifencoder@PAGEOFF ; "HeifEncoder"
.text:0000000000013648                 MOV             W0, #5
.text:000000000001364C                 ADD             X2, X2, #aAlreadyStarted@PAGEOFF ; "already STARTED"
.text:0000000000013650                 B               loc_137BC
.text:0000000000013654 ; ---------------------------------------------------------------------------
.text:0000000000013654                 LDR             W8, [X19,#0x18]
.text:0000000000013658                 CMP             W8, #1
.text:000000000001365C                 B.NE            loc_13770
.text:0000000000013660                 LDR             X0, [X20]
.text:0000000000013664                 ADRP            X1, #aInputFormat@PAGE ; "input-format"
.text:0000000000013668                 ADD             X1, X1, #aInputFormat@PAGEOFF ; "input-format"
.text:000000000001366C                 STR             XZR, [SP,#0x90+var_68]
.text:0000000000013670                 ADD             X2, SP, #0x90+var_68
.text:0000000000013674                 BL              ._ZNK7android8AMessage11findMessageEPKcPNS_2spIS0_EE ; android::AMessage::findMessage(char const*,android::sp<android::AMessage> *)
.text:0000000000013678                 ADD             X1, SP, #0x90+var_68
.text:000000000001367C                 MOV             X0, X19
.text:0000000000013680                 BL              ._ZN7android11HeifEncoder9onRestartERKNS_2spINS_8AMessageEEE ; android::HeifEncoder::onRestart(android::sp<android::AMessage> const&)
.text:0000000000013684                 LDR             X8, [SP,#0x90+var_68]
.text:0000000000013688                 MOV             W21, W0
.text:000000000001368C                 CBZ             X8, loc_13854
.text:0000000000013690                 ADD             X1, SP, #0x90+var_68 ; void *
.text:0000000000013694                 MOV             X0, X8  ; this
.text:0000000000013698                 BL              ._ZNK7android7RefBase9decStrongEPKv ; android::RefBase::decStrong(void const*)
.text:000000000001369C                 LDUR            X0, [X29,#var_40]
.text:00000000000136A0                 CBNZ            X0, loc_1385C
.text:00000000000136A4                 B               loc_13878
.text:00000000000136A8 ; ---------------------------------------------------------------------------
.text:00000000000136A8                 LDR             W8, [X19,#0x18]
.text:00000000000136AC                 CMP             W8, #1
.text:00000000000136B0                 B.NE            loc_13770
.text:00000000000136B4                 MOV             X0, X19
.text:00000000000136B8                 MOV             X1, X20
.text:00000000000136BC                 BL              ._ZN7android11HeifEncoder7onStoreERKNS_2spINS_8AMessageEEE ; android::HeifEncoder::onStore(android::sp<android::AMessage> const&)
.text:00000000000136C0                 MOV             W21, W0
.text:00000000000136C4                 LDUR            X0, [X29,#var_40]
.text:00000000000136C8                 CBNZ            X0, loc_1385C
.text:00000000000136CC                 B               loc_13878
.text:00000000000136CC ; ---------------------------------------------------------------------------
.text:00000000000136D0                 DCQ 0xB40004E8F9401E68, 0x90FFFFA1F9400280, 0x910113E29131CC21
.text:00000000000136D0                 DCQ 0x36001A2094001C4A, 0x51000508B94047E8, 0x54001AC87100111F
.text:00000000000136D0                 DCQ 0x9135B529D0FFFFA9, 0x1000008A2A1F03F5, 0x8B0B094A3868692B
.text:00000000000136D0                 DCQ 0xF9400280D61F0140, 0x9106E021B0FFFFA1, 0x94001C39910063E2
.text:00000000000136D0                 DCQ 0xB9801BE836001520, 0xAA1503E09101E275, 0x94001D7FF90017E8
.text:00000000000136D0                 DCQ 0x91014260F9403262, 0x320003E39100A3E1, 0x9102826094001C66
.text:00000000000136D0                 DCQ 0xAA1503E094001D98, 0x1400007194001D82
.text:0000000000013770 ; ---------------------------------------------------------------------------
.text:0000000000013770 loc_13770                               ; CODE XREF: android::HeifEncoder::onMessageReceived(android::sp<android::AMessage> const&)+DC↑j
.text:0000000000013770                                         ; android::HeifEncoder::onMessageReceived(android::sp<android::AMessage> const&)+130↑j
.text:0000000000013770                 MOV             W21, #0xFFFFFFEA
.text:0000000000013774                 LDUR            X0, [X29,#var_40]
.text:0000000000013778                 CBNZ            X0, loc_1385C
.text:000000000001377C                 B               loc_13878
.text:0000000000013780 ; ---------------------------------------------------------------------------
.text:0000000000013780                 LDR             W8, [X19,#0x18]
.text:0000000000013784                 CMP             W8, #1
.text:0000000000013788                 B.NE            loc_137A8
.text:000000000001378C                 MOV             X0, X19 ; this
.text:0000000000013790                 BL              ._ZN7android11HeifEncoder5resetEv ; android::HeifEncoder::reset(void)
.text:0000000000013794                 MOV             W21, WZR
.text:0000000000013798                 STR             WZR, [X19,#0x18]
.text:000000000001379C                 LDUR            X0, [X29,#var_40]
.text:00000000000137A0                 CBNZ            X0, loc_1385C
.text:00000000000137A4                 B               loc_13878
.text:00000000000137A8 ; ---------------------------------------------------------------------------
.text:00000000000137A8 loc_137A8                               ; CODE XREF: android::HeifEncoder::onMessageReceived(android::sp<android::AMessage> const&)+208↑j
.text:00000000000137A8                 ADRP            X1, #aHeifencoder@PAGE ; "HeifEncoder"
.text:00000000000137AC                 ADRP            X2, #aAlreadyStopped@PAGE ; "already STOPPED"
.text:00000000000137B0                 ADD             X1, X1, #aHeifencoder@PAGEOFF ; "HeifEncoder"
.text:00000000000137B4                 MOV             W0, #5
.text:00000000000137B8                 ADD             X2, X2, #aAlreadyStopped@PAGEOFF ; "already STOPPED"
.text:00000000000137BC loc_137BC                               ; CODE XREF: android::HeifEncoder::onMessageReceived(android::sp<android::AMessage> const&)+D0↑j
.text:00000000000137BC                 BL              .__android_log_print
.text:00000000000137C0 loc_137C0                               ; CODE XREF: android::HeifEncoder::onMessageReceived(android::sp<android::AMessage> const&)+490↓j
.text:00000000000137C0                 MOV             W21, #0xFFFFFFDA
.text:00000000000137C4                 LDUR            X0, [X29,#var_40]
.text:00000000000137C8                 CBNZ            X0, loc_1385C
.text:00000000000137CC                 B               loc_13878
.text:00000000000137D0 ; ---------------------------------------------------------------------------
.text:00000000000137D0 loc_137D0                               ; CODE XREF: android::HeifEncoder::onMessageReceived(android::sp<android::AMessage> const&)+B8↑j
.text:00000000000137D0                 LDR             X0, [X20]
.text:00000000000137D4                 ADRP            X1, #aInputFormat@PAGE ; "input-format"
.text:00000000000137D8                 ADD             X1, X1, #aInputFormat@PAGEOFF ; "input-format"
.text:00000000000137DC                 STR             XZR, [SP,#0x90+var_68]
.text:00000000000137E0                 ADD             X2, SP, #0x90+var_68
.text:00000000000137E4                 BL              ._ZNK7android8AMessage11findMessageEPKcPNS_2spIS0_EE ; android::AMessage::findMessage(char const*,android::sp<android::AMessage> *)
.text:00000000000137E8                 ADD             X1, SP, #0x90+var_68
.text:00000000000137EC                 MOV             X0, X19
.text:00000000000137F0                 BL              ._ZN7android11HeifEncoder11initEncoderERKNS_2spINS_8AMessageEEE ; android::HeifEncoder::initEncoder(android::sp<android::AMessage> const&)
.text:00000000000137F4                 CBZ             W0, loc_13814
.text:00000000000137F8                 ADRP            X1, #aHeifencoder@PAGE ; "HeifEncoder"
.text:00000000000137FC                 ADRP            X2, #aFailedToInitia@PAGE ; "failed to initialize encoder %d"
.text:0000000000013800                 MOV             W3, W0
.text:0000000000013804                 ADD             X1, X1, #aHeifencoder@PAGEOFF ; "HeifEncoder"
.text:0000000000013808                 ADD             X2, X2, #aFailedToInitia@PAGEOFF ; "failed to initialize encoder %d"
.text:000000000001380C                 MOV             W0, #6
.text:0000000000013810                 BL              .__android_log_print
.text:0000000000013814 loc_13814                               ; CODE XREF: android::HeifEncoder::onMessageReceived(android::sp<android::AMessage> const&)+274↑j
.text:0000000000013814                 ADD             X1, SP, #0x90+var_68
.text:0000000000013818                 MOV             X0, X19
.text:000000000001381C                 BL              ._ZN7android11HeifEncoder10initSourceERKNS_2spINS_8AMessageEEE ; android::HeifEncoder::initSource(android::sp<android::AMessage> const&)
.text:0000000000013820                 MOV             W21, W0
.text:0000000000013824                 CBZ             W0, loc_138F0
.text:0000000000013828                 ADRP            X1, #aHeifencoder@PAGE ; "HeifEncoder"
.text:000000000001382C                 ADRP            X2, #aFailedToInitia_0@PAGE ; "failed to initialize source %d"
.text:0000000000013830                 ADD             X1, X1, #aHeifencoder@PAGEOFF ; "HeifEncoder"
.text:0000000000013834                 ADD             X2, X2, #aFailedToInitia_0@PAGEOFF ; "failed to initialize source %d"
.text:0000000000013838                 MOV             W0, #6
.text:000000000001383C                 MOV             W3, W21
.text:0000000000013840                 BL              .__android_log_print
.text:0000000000013844                 LDR             X0, [SP,#0x90+var_68] ; this
.text:0000000000013848                 CBZ             X0, loc_13854
.text:000000000001384C loc_1384C                               ; CODE XREF: android::HeifEncoder::onMessageReceived(android::sp<android::AMessage> const&)+37C↓j
.text:000000000001384C                 ADD             X1, SP, #0x90+var_68 ; void *
.text:0000000000013850                 BL              ._ZNK7android7RefBase9decStrongEPKv ; android::RefBase::decStrong(void const*)
.text:0000000000013854 loc_13854                               ; CODE XREF: android::HeifEncoder::onMessageReceived(android::sp<android::AMessage> const&)+10C↑j
.text:0000000000013854                                         ; android::HeifEncoder::onMessageReceived(android::sp<android::AMessage> const&)+2C8↑j ...
.text:0000000000013854                 LDUR            X0, [X29,#var_40] ; this
.text:0000000000013858                 CBZ             X0, loc_13878
.text:000000000001385C loc_1385C                               ; CODE XREF: android::HeifEncoder::onMessageReceived(android::sp<android::AMessage> const&)+120↑j
.text:000000000001385C                                         ; android::HeifEncoder::onMessageReceived(android::sp<android::AMessage> const&)+148↑j ...
.text:000000000001385C                 ADRP            X1, #aErr@PAGE ; "err"
.text:0000000000013860                 ADD             X1, X1, #aErr@PAGEOFF ; "err"
.text:0000000000013864                 MOV             W2, W21 ; int
.text:0000000000013868                 BL              ._ZN7android8AMessage8setInt32EPKci ; android::AMessage::setInt32(char const*,int)
.text:000000000001386C                 LDUR            X0, [X29,#var_40]
.text:0000000000013870                 ADD             X1, SP, #0x90+var_48
.text:0000000000013874                 BL              ._ZN7android8AMessage9postReplyERKNS_2spINS_11AReplyTokenEEE ; android::AMessage::postReply(android::sp<android::AReplyToken> const&)
.text:0000000000013878 loc_13878                               ; CODE XREF: android::HeifEncoder::onMessageReceived(android::sp<android::AMessage> const&)+124↑j
.text:0000000000013878                                         ; android::HeifEncoder::onMessageReceived(android::sp<android::AMessage> const&)+14C↑j ...
.text:0000000000013878                 CBZ             W21, loc_138A8
.text:000000000001387C                 LDR             X0, [X20] ; this
.text:0000000000013880                 BL              ._ZNK7android8AMessage4whatEv ; android::AMessage::what(void)
.text:0000000000013884                 LDR             W5, [X19,#0x18]
.text:0000000000013888                 ADRP            X1, #aHeifencoder@PAGE ; "HeifEncoder"
.text:000000000001388C                 ADRP            X2, #aMsgDErrorDInSt@PAGE ; "msg(%d) error(%d) in state(%d)"
.text:0000000000013890                 MOV             W3, W0
.text:0000000000013894                 ADD             X1, X1, #aHeifencoder@PAGEOFF ; "HeifEncoder"
.text:0000000000013898                 ADD             X2, X2, #aMsgDErrorDInSt@PAGEOFF ; "msg(%d) error(%d) in state(%d)"
.text:000000000001389C                 MOV             W0, #6
.text:00000000000138A0                 MOV             W4, W21
.text:00000000000138A4                 BL              .__android_log_print
.text:00000000000138A8 loc_138A8                               ; CODE XREF: android::HeifEncoder::onMessageReceived(android::sp<android::AMessage> const&):loc_13878↑j
.text:00000000000138A8                 LDR             X0, [SP,#0x90+var_48] ; this
.text:00000000000138AC                 CBZ             X0, loc_138B8
.text:00000000000138B0                 ADD             X1, SP, #0x90+var_48 ; void *
.text:00000000000138B4                 BL              ._ZNK7android7RefBase9decStrongEPKv ; android::RefBase::decStrong(void const*)
.text:00000000000138B8 loc_138B8                               ; CODE XREF: android::HeifEncoder::onMessageReceived(android::sp<android::AMessage> const&)+32C↑j
.text:00000000000138B8                 LDUR            X0, [X29,#var_40] ; this
.text:00000000000138BC                 CBZ             X0, loc_138C8
.text:00000000000138C0                 SUB             X1, X29, #-var_40 ; void *
.text:00000000000138C4                 BL              ._ZNK7android7RefBase9decStrongEPKv ; android::RefBase::decStrong(void const*)
.text:00000000000138C8 loc_138C8                               ; CODE XREF: android::HeifEncoder::onMessageReceived(android::sp<android::AMessage> const&)+33C↑j
.text:00000000000138C8                 LDR             X8, [X23,#0x28]
.text:00000000000138CC                 LDUR            X9, [X29,#var_38]
.text:00000000000138D0                 CMP             X8, X9
.text:00000000000138D4                 B.NE            loc_13A2C
.text:00000000000138D8                 LDP             X29, X30, [SP,#0x90+var_s0]
.text:00000000000138DC                 LDP             X20, X19, [SP,#0x90+var_10]
.text:00000000000138E0                 LDP             X22, X21, [SP,#0x90+var_20]
.text:00000000000138E4                 LDR             X23, [SP,#0x90+var_30]
.text:00000000000138E8                 ADD             SP, SP, #0xA0
.text:00000000000138EC                 RET
.text:00000000000138F0 ; ---------------------------------------------------------------------------
.text:00000000000138F0 loc_138F0                               ; CODE XREF: android::HeifEncoder::onMessageReceived(android::sp<android::AMessage> const&)+2A4↑j
.text:00000000000138F0                 MOV             W8, #1
.text:00000000000138F4                 STR             W8, [X19,#0x18]
.text:00000000000138F8                 LDR             X0, [SP,#-0x10+arg_28]
.text:00000000000138FC                 CBNZ            X0, loc_1384C
.text:0000000000013900                 B               loc_13854
.text:0000000000013900 ; ---------------------------------------------------------------------------
.text:0000000000013904                 DCD 0xF9400280
.text:0000000000013908                 DCQ 0x91130C21B0FFFFA1, 0x9100A3E2F90017FF, 0x36000A8094001BCA
.text:0000000000013908                 DCQ 0xB4000060F94017E0, 0x94001B759100A3E1, 0xF85C03A02A1F03F5
.text:0000000000013908                 DCQ 0x17FFFFCFB5FFF920, 0xB0FFFFA1F9400280, 0x910093E29106E021
.text:0000000000013908                 DCQ 0x360009E094001BB0, 0xB0FFFFA1F9400280, 0x9100A3E2912B7821
.text:0000000000013908                 DCQ 0x36000A4094001D2A, 0xB0FFFFA1F9400280, 0x910063E29112F821
.text:0000000000013908                 DCQ 0x36000AA094001D24, 0x90FFFFA1F9400280, 0x910043E2911CE021
.text:0000000000013908                 DCQ 0x36000B0094001D22, 0x90FFFFA1F9400280, 0x910033E291223821
.text:0000000000013908                 DCQ 0x36000B6094001B98, 0xAA1303E0B98027E1, 0xA9410FE4F94017E2
.text:0000000000013908                 DCQ 0x94001D19B9400FE5, 0xF940028017FFFF3C, 0x2A1F03E19100A3E8
.text:0000000000013908                 DCQ 0x9100A3E094001D18, 0xD0FFFFA194001D1A, 0xAA0003E390FFFFA2
.text:0000000000013908                 DCQ 0x9120004291015021, 0x94001B87528000A0, 0x94001D159100A3E0
.text:0000000000013A10 ; ---------------------------------------------------------------------------
.text:0000000000013A10                 B               loc_137C0
.text:0000000000013A14 ; ---------------------------------------------------------------------------
.text:0000000000013A14 loc_13A14                               ; CODE XREF: android::HeifEncoder::onMessageReceived(android::sp<android::AMessage> const&)+94↑j
.text:0000000000013A14                 ADRP            X1, #aHeifencoder@PAGE ; "HeifEncoder"
.text:0000000000013A18                 ADRP            X2, #aVendorSamsungF_29@PAGE ; "vendor/samsung/frameworks/av/media/libh"...
.text:0000000000013A1C                 ADD             X1, X1, #aHeifencoder@PAGEOFF ; "HeifEncoder"
.text:0000000000013A20                 ADD             X2, X2, #aVendorSamsungF_29@PAGEOFF ; "vendor/samsung/frameworks/av/media/libh"...
.text:0000000000013A24                 MOV             X0, XZR
.text:0000000000013A28                 BL              .__android_log_assert
.text:0000000000013A2C loc_13A2C                               ; CODE XREF: android::HeifEncoder::onMessageReceived(android::sp<android::AMessage> const&)+354↑j
.text:0000000000013A2C                 BL              .__stack_chk_fail
.text:0000000000013A2C ; End of function android::HeifEncoder::onMessageReceived(android::sp<android::AMessage> const&)
.text:0000000000013A2C ; ---------------------------------------------------------------------------
.text:0000000000013A30                 DCQ 0xD0FFFFA190FFFFA0, 0xB0FFFFA390FFFFA2, 0x910150219114F400
.text:0000000000013A30                 DCQ 0x9117AC6391225042, 0xD0FFFFA194001BE4, 0x9101502190FFFFA2
.text:0000000000013A30                 DCQ 0xAA1F03E0912CE442, 0xD0FFFFA094001BDE, 0x90FFFFA2D0FFFFA1
.text:0000000000013A30                 DCQ 0x91179800B0FFFFA3, 0x9122504291015021, 0x94001BD591311463
.text:0000000000013A30                 DCQ 0xD0FFFFA1D0FFFFA0, 0x90FFFFA390FFFFA2, 0x910150219110B800
.text:0000000000013A30                 DCQ 0x9135A46391225042, 0xB0FFFFA094001BCC, 0x90FFFFA2D0FFFFA1
.text:0000000000013A30                 DCQ 0x9119AC00B0FFFFA3, 0x9122504291015021, 0x94001BC39106F863
.text:0000000000013A30                 DCQ 0xD0FFFFA1B0FFFFA0, 0xB0FFFFA390FFFFA2, 0x91015021911FE800
.text:0000000000013A30                 DCQ 0x9108EC6391225042, 0x90FFFFA094001BBA, 0x90FFFFA2D0FFFFA1
.text:0000000000013A30                 DCQ 0x91265000B0FFFFA3, 0x9122504291015021, 0x94001BB191016863
.text:0000000000013A30                 DCQ 0xD0FFFFA1D0FFFFA0, 0x90FFFFA390FFFFA2, 0x9101502191018000
.text:0000000000013A30                 DCQ 0x913AE06391225042, 0x94001BA8
.text:0000000000013B48 ; =============== S U B R O U T I N E =======================================
.text:0000000000013B48 ; Attributes: bp-based frame
.text:0000000000013B48 ; android::HeifEncoder::onStart(android::sp<android::AMessage> const&)
.text:0000000000013B48                 EXPORT _ZN7android11HeifEncoder7onStartERKNS_2spINS_8AMessageEEE
.text:0000000000013B48 _ZN7android11HeifEncoder7onStartERKNS_2spINS_8AMessageEEE
.text:0000000000013B48                                         ; DATA XREF: LOAD:00000000000017B8↑o
.text:0000000000013B48 var_10          = -0x10
.text:0000000000013B48 var_s0          =  0
.text:0000000000013B48 ; __unwind {
.text:0000000000013B48                 STP             X20, X19, [SP,#-0x10+var_10]!
.text:0000000000013B4C                 STP             X29, X30, [SP,#0x10+var_s0]
.text:0000000000013B50                 ADD             X29, SP, #0x10
.text:0000000000013B54                 MOV             X19, X1
.text:0000000000013B58                 MOV             X20, X0
.text:0000000000013B5C                 BL              ._ZN7android11HeifEncoder11initEncoderERKNS_2spINS_8AMessageEEE ; android::HeifEncoder::initEncoder(android::sp<android::AMessage> const&)
.text:0000000000013B60                 CBZ             W0, loc_13B80
.text:0000000000013B64                 ADRP            X1, #aHeifencoder@PAGE ; "HeifEncoder"
.text:0000000000013B68                 ADRP            X2, #aFailedToInitia@PAGE ; "failed to initialize encoder %d"
.text:0000000000013B6C                 MOV             W3, W0
.text:0000000000013B70                 ADD             X1, X1, #aHeifencoder@PAGEOFF ; "HeifEncoder"
.text:0000000000013B74                 ADD             X2, X2, #aFailedToInitia@PAGEOFF ; "failed to initialize encoder %d"
.text:0000000000013B78                 MOV             W0, #6
.text:0000000000013B7C                 BL              .__android_log_print
.text:0000000000013B80 loc_13B80                               ; CODE XREF: android::HeifEncoder::onStart(android::sp<android::AMessage> const&)+18↑j
.text:0000000000013B80                 MOV             X0, X20
.text:0000000000013B84                 MOV             X1, X19
.text:0000000000013B88                 BL              ._ZN7android11HeifEncoder10initSourceERKNS_2spINS_8AMessageEEE ; android::HeifEncoder::initSource(android::sp<android::AMessage> const&)
.text:0000000000013B8C                 MOV             W19, W0
.text:0000000000013B90                 CBZ             W0, loc_13BB0
.text:0000000000013B94                 ADRP            X1, #aHeifencoder@PAGE ; "HeifEncoder"
.text:0000000000013B98                 ADRP            X2, #aFailedToInitia_0@PAGE ; "failed to initialize source %d"
.text:0000000000013B9C                 ADD             X1, X1, #aHeifencoder@PAGEOFF ; "HeifEncoder"
.text:0000000000013BA0                 ADD             X2, X2, #aFailedToInitia_0@PAGEOFF ; "failed to initialize source %d"
.text:0000000000013BA4                 MOV             W0, #6
.text:0000000000013BA8                 MOV             W3, W19
.text:0000000000013BAC                 BL              .__android_log_print
.text:0000000000013BB0 loc_13BB0                               ; CODE XREF: android::HeifEncoder::onStart(android::sp<android::AMessage> const&)+48↑j
.text:0000000000013BB0                 LDP             X29, X30, [SP,#0x10+var_s0]
.text:0000000000013BB4                 MOV             W0, W19
.text:0000000000013BB8                 LDP             X20, X19, [SP+0x10+var_10],#0x20
.text:0000000000013BBC                 RET
.text:0000000000013BBC ; } // starts at 13B48
.text:0000000000013BBC ; End of function android::HeifEncoder::onStart(android::sp<android::AMessage> const&)
.text:0000000000013BC0 ; =============== S U B R O U T I N E =======================================
.text:0000000000013BC0 ; android::HeifEncoder::setState(android::HeifEncoder::State)
.text:0000000000013BC0                 EXPORT _ZN7android11HeifEncoder8setStateENS0_5StateE
.text:0000000000013BC0 _ZN7android11HeifEncoder8setStateENS0_5StateE
.text:0000000000013BC0                                         ; DATA XREF: LOAD:0000000000001938↑o
.text:0000000000013BC0 ; __unwind {
.text:0000000000013BC0                 STR             W1, [X0,#0x18]
.text:0000000000013BC4                 RET
.text:0000000000013BC4 ; } // starts at 13BC0
.text:0000000000013BC4 ; End of function android::HeifEncoder::setState(android::HeifEncoder::State)
.text:0000000000013BC8 ; =============== S U B R O U T I N E =======================================
.text:0000000000013BC8 ; Attributes: bp-based frame
.text:0000000000013BC8 ; android::HeifEncoder::onRestart(android::sp<android::AMessage> const&)
.text:0000000000013BC8                 EXPORT _ZN7android11HeifEncoder9onRestartERKNS_2spINS_8AMessageEEE
.text:0000000000013BC8 _ZN7android11HeifEncoder9onRestartERKNS_2spINS_8AMessageEEE
.text:0000000000013BC8                                         ; CODE XREF: android::HeifEncoder::onRestart(android::sp<android::AMessage> const&)+C↓j
.text:0000000000013BC8                                         ; DATA XREF: LOAD:0000000000001A40↑o ...
.text:0000000000013BC8 var_2C          = -0x2C
.text:0000000000013BC8 var_28          = -0x28
.text:0000000000013BC8 var_20          = -0x20
.text:0000000000013BC8 var_10          = -0x10
.text:0000000000013BC8 var_s0          =  0
.text:0000000000013BC8 ; __unwind {
.text:0000000000013BC8                 SUB             SP, SP, #0x40
.text:0000000000013BCC                 STR             X21, [SP,#0x30+var_20]
.text:0000000000013BD0                 STP             X20, X19, [SP,#0x30+var_10]
.text:0000000000013BD4                 STP             X29, X30, [SP,#0x30+var_s0]
.text:0000000000013BD8                 ADD             X29, SP, #0x30
.text:0000000000013BDC                 MRS             X21, #3, c13, c0, #2
.text:0000000000013BE0                 MOV             X20, X1
.text:0000000000013BE4                 LDR             X8, [X21,#0x28]
.text:0000000000013BE8                 MOV             X19, X0
.text:0000000000013BEC                 ADD             X2, SP, #0x30+var_2C ; int *
.text:0000000000013BF0                 STR             X8, [SP,#0x30+var_28]
.text:0000000000013BF4                 LDR             X8, [X1]
.text:0000000000013BF8                 ADRP            X1, #aQpIncreaseRati@PAGE ; "qp-increase-ratio"
.text:0000000000013BFC                 ADD             X1, X1, #aQpIncreaseRati@PAGEOFF ; "qp-increase-ratio"
.text:0000000000013C00                 MOV             X0, X8  ; this
.text:0000000000013C04                 BL              ._ZNK7android8AMessage9findInt32EPKcPi ; android::AMessage::findInt32(char const*,int *)
.text:0000000000013C08                 LDR             W8, [X19,#0x14]
.text:0000000000013C0C                 LDR             W9, [SP,#0x30+var_2C]
.text:0000000000013C10                 CMP             W8, W9
.text:0000000000013C14                 B.NE            loc_13C64
.text:0000000000013C18                 LDR             X8, [X19,#0x38]
.text:0000000000013C1C                 CBZ             X8, loc_13CE4
.text:0000000000013C20                 ADRP            X1, #aHeifencoder@PAGE ; "HeifEncoder"
.text:0000000000013C24                 ADRP            X2, #aReuse@PAGE ; "reuse"
.text:0000000000013C28                 ADD             X1, X1, #aHeifencoder@PAGEOFF ; "HeifEncoder"
.text:0000000000013C2C                 ADD             X2, X2, #aReuse@PAGEOFF ; "reuse"
.text:0000000000013C30                 MOV             W0, #4
.text:0000000000013C34                 BL              .__android_log_print
.text:0000000000013C38                 ADD             X0, X19, #0x50 ; 'P' ; this
.text:0000000000013C3C                 BL              ._ZN7android10VectorImpl5clearEv ; android::VectorImpl::clear(void)
.text:0000000000013C40                 LDR             X0, [X19,#0x38] ; this
.text:0000000000013C44                 BL              ._ZN7android10MediaCodec5flushEv ; android::MediaCodec::flush(void)
.text:0000000000013C48                 CBZ             W0, loc_13D28
.text:0000000000013C4C                 ADRP            X1, #aHeifencoder@PAGE ; "HeifEncoder"
.text:0000000000013C50                 ADRP            X2, #aCanNotFlushEnc@PAGE ; "can not flush encoder %d"
.text:0000000000013C54                 MOV             W20, W0
.text:0000000000013C58                 ADD             X1, X1, #aHeifencoder@PAGEOFF ; "HeifEncoder"
.text:0000000000013C5C                 ADD             X2, X2, #aCanNotFlushEnc@PAGEOFF ; "can not flush encoder %d"
.text:0000000000013C60                 B               loc_13CD4
.text:0000000000013C64 ; ---------------------------------------------------------------------------
.text:0000000000013C64 loc_13C64                               ; CODE XREF: android::HeifEncoder::onRestart(android::sp<android::AMessage> const&)+4C↑j
.text:0000000000013C64                 ADRP            X1, #aHeifencoder@PAGE ; "HeifEncoder"
.text:0000000000013C68                 ADRP            X2, #aReconfiguratio@PAGE ; "reconfiguration"
.text:0000000000013C6C                 ADD             X1, X1, #aHeifencoder@PAGEOFF ; "HeifEncoder"
.text:0000000000013C70                 ADD             X2, X2, #aReconfiguratio@PAGEOFF ; "reconfiguration"
.text:0000000000013C74                 MOV             W0, #4
.text:0000000000013C78                 BL              .__android_log_print
.text:0000000000013C7C                 MOV             X0, X19 ; this
.text:0000000000013C80                 BL              ._ZN7android11HeifEncoder5resetEv ; android::HeifEncoder::reset(void)
.text:0000000000013C84                 MOV             X0, X19
.text:0000000000013C88                 MOV             X1, X20
.text:0000000000013C8C                 BL              ._ZN7android11HeifEncoder11initEncoderERKNS_2spINS_8AMessageEEE ; android::HeifEncoder::initEncoder(android::sp<android::AMessage> const&)
.text:0000000000013C90                 CBZ             W0, loc_13CB0
.text:0000000000013C94                 ADRP            X1, #aHeifencoder@PAGE ; "HeifEncoder"
.text:0000000000013C98                 ADRP            X2, #aFailedToInitia@PAGE ; "failed to initialize encoder %d"
.text:0000000000013C9C                 MOV             W3, W0
.text:0000000000013CA0                 ADD             X1, X1, #aHeifencoder@PAGEOFF ; "HeifEncoder"
.text:0000000000013CA4                 ADD             X2, X2, #aFailedToInitia@PAGEOFF ; "failed to initialize encoder %d"
.text:0000000000013CA8                 MOV             W0, #6
.text:0000000000013CAC                 BL              .__android_log_print
.text:0000000000013CB0 loc_13CB0                               ; CODE XREF: android::HeifEncoder::onRestart(android::sp<android::AMessage> const&)+C8↑j
.text:0000000000013CB0                 MOV             X0, X19
.text:0000000000013CB4                 MOV             X1, X20
.text:0000000000013CB8                 BL              ._ZN7android11HeifEncoder10initSourceERKNS_2spINS_8AMessageEEE ; android::HeifEncoder::initSource(android::sp<android::AMessage> const&)
.text:0000000000013CBC                 MOV             W20, W0
.text:0000000000013CC0                 CBZ             W0, loc_13D00
.text:0000000000013CC4                 ADRP            X1, #aHeifencoder@PAGE ; "HeifEncoder"
.text:0000000000013CC8                 ADRP            X2, #aFailedToInitia_0@PAGE ; "failed to initialize source %d"
.text:0000000000013CCC                 ADD             X1, X1, #aHeifencoder@PAGEOFF ; "HeifEncoder"
.text:0000000000013CD0                 ADD             X2, X2, #aFailedToInitia_0@PAGEOFF ; "failed to initialize source %d"
.text:0000000000013CD4 loc_13CD4                               ; CODE XREF: android::HeifEncoder::onRestart(android::sp<android::AMessage> const&)+98↑j
.text:0000000000013CD4                                         ; android::HeifEncoder::onRestart(android::sp<android::AMessage> const&)+180↓j
.text:0000000000013CD4                 MOV             W0, #6
.text:0000000000013CD8                 MOV             W3, W20
.text:0000000000013CDC                 BL              .__android_log_print
.text:0000000000013CE0                 B               loc_13D00
.text:0000000000013CE4 ; ---------------------------------------------------------------------------
.text:0000000000013CE4 loc_13CE4                               ; CODE XREF: android::HeifEncoder::onRestart(android::sp<android::AMessage> const&)+54↑j
.text:0000000000013CE4                 ADRP            X1, #aHeifencoder@PAGE ; "HeifEncoder"
.text:0000000000013CE8                 ADRP            X2, #aDoNotExistCode@PAGE ; "do not exist codec"
.text:0000000000013CEC                 ADD             X1, X1, #aHeifencoder@PAGEOFF ; "HeifEncoder"
.text:0000000000013CF0                 ADD             X2, X2, #aDoNotExistCode@PAGEOFF ; "do not exist codec"
.text:0000000000013CF4                 MOV             W0, #6
.text:0000000000013CF8                 BL              .__android_log_print
.text:0000000000013CFC                 MOV             W20, #0xFFFFFFEA
.text:0000000000013D00 loc_13D00                               ; CODE XREF: android::HeifEncoder::onRestart(android::sp<android::AMessage> const&)+F8↑j
.text:0000000000013D00                                         ; android::HeifEncoder::onRestart(android::sp<android::AMessage> const&)+118↑j ...
.text:0000000000013D00                 LDR             X8, [X21,#0x28]
.text:0000000000013D04                 LDR             X9, [SP,#0x30+var_28]
.text:0000000000013D08                 CMP             X8, X9
.text:0000000000013D0C                 B.NE            loc_13D4C
.text:0000000000013D10                 MOV             W0, W20
.text:0000000000013D14                 LDR             X21, [SP,#0x30+var_20]
.text:0000000000013D18                 LDP             X29, X30, [SP,#0x30+var_s0]
.text:0000000000013D1C                 LDP             X20, X19, [SP,#0x30+var_10]
.text:0000000000013D20                 ADD             SP, SP, #0x40 ; '@'
.text:0000000000013D24                 RET
.text:0000000000013D28 ; ---------------------------------------------------------------------------
.text:0000000000013D28 loc_13D28                               ; CODE XREF: android::HeifEncoder::onRestart(android::sp<android::AMessage> const&)+80↑j
.text:0000000000013D28                 LDR             X0, [X19,#0x38] ; this
.text:0000000000013D2C                 BL              ._ZN7android10MediaCodec5startEv ; android::MediaCodec::start(void)
.text:0000000000013D30                 MOV             W20, W0
.text:0000000000013D34                 CBZ             W0, loc_13D00
.text:0000000000013D38                 ADRP            X1, #aHeifencoder@PAGE ; "HeifEncoder"
.text:0000000000013D3C                 ADRP            X2, #aCanNotRestartE_0@PAGE ; "can not restart encoder %d"
.text:0000000000013D40                 ADD             X1, X1, #aHeifencoder@PAGEOFF ; "HeifEncoder"
.text:0000000000013D44                 ADD             X2, X2, #aCanNotRestartE_0@PAGEOFF ; "can not restart encoder %d"
.text:0000000000013D48                 B               loc_13CD4
.text:0000000000013D4C ; ---------------------------------------------------------------------------
.text:0000000000013D4C loc_13D4C                               ; CODE XREF: android::HeifEncoder::onRestart(android::sp<android::AMessage> const&)+144↑j
.text:0000000000013D4C                 BL              .__stack_chk_fail
.text:0000000000013D4C ; } // starts at 13BC8
.text:0000000000013D4C ; End of function android::HeifEncoder::onRestart(android::sp<android::AMessage> const&)
.text:0000000000013D50 ; =============== S U B R O U T I N E =======================================
.text:0000000000013D50 ; Attributes: bp-based frame
.text:0000000000013D50 ; __int64 __fastcall android::HeifEncoder::onStop(android::HeifEncoder *__hidden this)
.text:0000000000013D50                 EXPORT _ZN7android11HeifEncoder6onStopEv
.text:0000000000013D50 _ZN7android11HeifEncoder6onStopEv       ; DATA XREF: LOAD:0000000000000D68↑o
.text:0000000000013D50 var_s0          =  0
.text:0000000000013D50 ; __unwind {
.text:0000000000013D50                 STP             X29, X30, [SP,#-0x10+var_s0]!
.text:0000000000013D54                 MOV             X29, SP
.text:0000000000013D58                 BL              ._ZN7android11HeifEncoder5resetEv ; android::HeifEncoder::reset(void)
.text:0000000000013D5C                 MOV             W0, WZR
.text:0000000000013D60                 LDP             X29, X30, [SP+var_s0],#0x10
.text:0000000000013D64                 RET
.text:0000000000013D64 ; } // starts at 13D50
.text:0000000000013D64 ; End of function android::HeifEncoder::onStop(void)
.text:0000000000013D68 ; =============== S U B R O U T I N E =======================================
.text:0000000000013D68 ; Attributes: bp-based frame
.text:0000000000013D68 ; android::HeifEncoder::onStore(android::sp<android::AMessage> const&)
.text:0000000000013D68                 EXPORT _ZN7android11HeifEncoder7onStoreERKNS_2spINS_8AMessageEEE
.text:0000000000013D68 _ZN7android11HeifEncoder7onStoreERKNS_2spINS_8AMessageEEE
.text:0000000000013D68                                         ; CODE XREF: android::HeifEncoder::onStore(android::sp<android::AMessage> const&)+C↓j
.text:0000000000013D68                                         ; DATA XREF: LOAD:0000000000000F30↑o ...
.text:0000000000013D68 var_30          = -0x30
.text:0000000000013D68 var_28          = -0x28
.text:0000000000013D68 var_20          = -0x20
.text:0000000000013D68 var_10          = -0x10
.text:0000000000013D68 var_s0          =  0
.text:0000000000013D68 ; __unwind {
.text:0000000000013D68                 SUB             SP, SP, #0x40
.text:0000000000013D6C                 STP             X22, X21, [SP,#0x30+var_20]
.text:0000000000013D70                 STP             X20, X19, [SP,#0x30+var_10]
.text:0000000000013D74                 STP             X29, X30, [SP,#0x30+var_s0]
.text:0000000000013D78                 ADD             X29, SP, #0x30
.text:0000000000013D7C                 MRS             X22, #3, c13, c0, #2
.text:0000000000013D80                 MOV             X19, X0
.text:0000000000013D84                 LDR             X8, [X22,#0x28]
.text:0000000000013D88                 MOV             X2, SP
.text:0000000000013D8C                 STR             X8, [SP,#0x30+var_28]
.text:0000000000013D90                 STRB            WZR, [X0,#0x112]
.text:0000000000013D94                 LDR             X0, [X1]
.text:0000000000013D98                 ADRP            X1, #aSourceStatus@PAGE ; "source-status"
.text:0000000000013D9C                 ADD             X1, X1, #aSourceStatus@PAGEOFF ; "source-status"
.text:0000000000013DA0                 STR             XZR, [SP,#0x30+var_30]
.text:0000000000013DA4                 BL              ._ZNK7android8AMessage10findObjectEPKcPNS_2spINS_7RefBaseEEE ; android::AMessage::findObject(char const*,android::sp<android::RefBase> *)
.text:0000000000013DA8                 TBZ             W0, #0, loc_13DF8
.text:0000000000013DAC                 LDR             X20, [SP,#0x30+var_30]
.text:0000000000013DB0                 LDR             X21, [X19,#0xF8]!
.text:0000000000013DB4                 CBZ             X20, loc_13DC4
.text:0000000000013DB8                 MOV             X0, X20 ; this
.text:0000000000013DBC                 MOV             X1, X19 ; void *
.text:0000000000013DC0                 BL              ._ZNK7android7RefBase9incStrongEPKv ; android::RefBase::incStrong(void const*)
.text:0000000000013DC4 loc_13DC4                               ; CODE XREF: android::HeifEncoder::onStore(android::sp<android::AMessage> const&)+4C↑j
.text:0000000000013DC4                 CBZ             X21, loc_13DD4
.text:0000000000013DC8                 MOV             X0, X21 ; this
.text:0000000000013DCC                 MOV             X1, X19 ; void *
.text:0000000000013DD0                 BL              ._ZNK7android7RefBase9decStrongEPKv ; android::RefBase::decStrong(void const*)
.text:0000000000013DD4 loc_13DD4                               ; CODE XREF: android::HeifEncoder::onStore(android::sp<android::AMessage> const&):loc_13DC4↑j
.text:0000000000013DD4                 LDR             X8, [X19]
.text:0000000000013DD8                 CMP             X21, X8
.text:0000000000013DDC                 B.EQ            loc_13DE4
.text:0000000000013DE0                 BL              ._ZN7android14sp_report_raceEv ; android::sp_report_race(void)
.text:0000000000013DE4 loc_13DE4                               ; CODE XREF: android::HeifEncoder::onStore(android::sp<android::AMessage> const&)+74↑j
.text:0000000000013DE4                 MOV             W21, WZR
.text:0000000000013DE8                 STR             X20, [X19]
.text:0000000000013DEC                 LDR             X0, [SP,#0x30+var_30]
.text:0000000000013DF0                 CBNZ            X0, loc_13E04
.text:0000000000013DF4                 B               loc_13E0C
.text:0000000000013DF8 ; ---------------------------------------------------------------------------
.text:0000000000013DF8 loc_13DF8                               ; CODE XREF: android::HeifEncoder::onStore(android::sp<android::AMessage> const&)+40↑j
.text:0000000000013DF8                 MOV             W21, #0xFFFFFFEA
.text:0000000000013DFC                 LDR             X0, [SP,#0x30+var_30] ; this
.text:0000000000013E00                 CBZ             X0, loc_13E0C
.text:0000000000013E04 loc_13E04                               ; CODE XREF: android::HeifEncoder::onStore(android::sp<android::AMessage> const&)+88↑j
.text:0000000000013E04                 MOV             X1, SP  ; void *
.text:0000000000013E08                 BL              ._ZNK7android7RefBase9decStrongEPKv ; android::RefBase::decStrong(void const*)
.text:0000000000013E0C loc_13E0C                               ; CODE XREF: android::HeifEncoder::onStore(android::sp<android::AMessage> const&)+8C↑j
.text:0000000000013E0C                                         ; android::HeifEncoder::onStore(android::sp<android::AMessage> const&)+98↑j
.text:0000000000013E0C                 LDR             X8, [X22,#0x28]
.text:0000000000013E10                 LDR             X9, [SP,#0x30+var_28]
.text:0000000000013E14                 CMP             X8, X9
.text:0000000000013E18                 B.NE            loc_13E34
.text:0000000000013E1C                 MOV             W0, W21
.text:0000000000013E20                 LDP             X29, X30, [SP,#0x30+var_s0]
.text:0000000000013E24                 LDP             X20, X19, [SP,#0x30+var_10]
.text:0000000000013E28                 LDP             X22, X21, [SP,#0x30+var_20]
.text:0000000000013E2C                 ADD             SP, SP, #0x40 ; '@'
.text:0000000000013E30                 RET
.text:0000000000013E34 ; ---------------------------------------------------------------------------
.text:0000000000013E34 loc_13E34                               ; CODE XREF: android::HeifEncoder::onStore(android::sp<android::AMessage> const&)+B0↑j
.text:0000000000013E34                 BL              .__stack_chk_fail
.text:0000000000013E34 ; } // starts at 13D68
.text:0000000000013E34 ; End of function android::HeifEncoder::onStore(android::sp<android::AMessage> const&)
.text:0000000000013E38 ; =============== S U B R O U T I N E =======================================
.text:0000000000013E38 ; Attributes: bp-based frame
.text:0000000000013E38 ; __int64 __fastcall android::HeifEncoder::onHandleAnInputBuffer(android::HeifEncoder *__hidden this, unsigned __int64)
.text:0000000000013E38                 EXPORT _ZN7android11HeifEncoder21onHandleAnInputBufferEm
.text:0000000000013E38 _ZN7android11HeifEncoder21onHandleAnInputBufferEm
.text:0000000000013E38                                         ; DATA XREF: LOAD:0000000000001188↑o
.text:0000000000013E38 var_30          = -0x30
.text:0000000000013E38 var_28          = -0x28
.text:0000000000013E38 var_20          = -0x20
.text:0000000000013E38 var_10          = -0x10
.text:0000000000013E38 var_s0          =  0
.text:0000000000013E38 ; __unwind {
.text:0000000000013E38                 SUB             SP, SP, #0x40
.text:0000000000013E3C                 STR             X21, [SP,#0x30+var_20]
.text:0000000000013E40                 STP             X20, X19, [SP,#0x30+var_10]
.text:0000000000013E44                 STP             X29, X30, [SP,#0x30+var_s0]
.text:0000000000013E48                 ADD             X29, SP, #0x30
.text:0000000000013E4C                 MRS             X21, #3, c13, c0, #2
.text:0000000000013E50                 ADD             X20, X0, #0x78 ; 'x'
.text:0000000000013E54                 LDR             X8, [X21,#0x28]
.text:0000000000013E58                 MOV             X19, X0
.text:0000000000013E5C                 MOV             X0, X20 ; mutex
.text:0000000000013E60                 STR             X8, [SP,#0x30+var_28]
.text:0000000000013E64                 STR             X1, [SP,#0x30+var_30]
.text:0000000000013E68                 BL              .pthread_mutex_lock
.text:0000000000013E6C                 LDR             X2, [X19,#0x60] ; unsigned __int64
.text:0000000000013E70                 ADD             X0, X19, #0x50 ; 'P' ; this
.text:0000000000013E74                 MOV             X1, SP  ; void *
.text:0000000000013E78                 MOV             W3, #1  ; unsigned __int64
.text:0000000000013E7C                 BL              ._ZN7android10VectorImpl8insertAtEPKvmm ; android::VectorImpl::insertAt(void const*,ulong,ulong)
.text:0000000000013E80                 ADD             X0, X19, #0xA0 ; cond
.text:0000000000013E84                 BL              .pthread_cond_signal
.text:0000000000013E88                 MOV             X0, X20 ; mutex
.text:0000000000013E8C                 BL              .pthread_mutex_unlock
.text:0000000000013E90                 LDR             X8, [X21,#0x28]
.text:0000000000013E94                 LDR             X9, [SP,#0x30+var_28]
.text:0000000000013E98                 CMP             X8, X9
.text:0000000000013E9C                 B.NE            loc_13EB8
.text:0000000000013EA0                 LDP             X29, X30, [SP,#0x30+var_s0]
.text:0000000000013EA4                 LDP             X20, X19, [SP,#0x30+var_10]
.text:0000000000013EA8                 LDR             X21, [SP,#0x30+var_20]
.text:0000000000013EAC                 MOV             W0, WZR
.text:0000000000013EB0                 ADD             SP, SP, #0x40 ; '@'
.text:0000000000013EB4                 RET
.text:0000000000013EB8 ; ---------------------------------------------------------------------------
.text:0000000000013EB8 loc_13EB8                               ; CODE XREF: android::HeifEncoder::onHandleAnInputBuffer(ulong)+64↑j
.text:0000000000013EB8                 BL              .__stack_chk_fail
.text:0000000000013EB8 ; } // starts at 13E38
.text:0000000000013EB8 ; End of function android::HeifEncoder::onHandleAnInputBuffer(ulong)
.text:0000000000013EB8 ; ---------------------------------------------------------------------------
.text:0000000000013EBC                 ALIGN 0x20
.text:0000000000013EC0 ; =============== S U B R O U T I N E =======================================
.text:0000000000013EC0 ; Attributes: bp-based frame
.text:0000000000013EC0 ; __int64 __fastcall android::HeifEncoder::onHandleAnOutputBuffer(android::HeifEncoder *__hidden this, unsigned __int64, unsigned __int64, unsigned __int64, __int64, int)
.text:0000000000013EC0                 EXPORT _ZN7android11HeifEncoder22onHandleAnOutputBufferEmmmli
.text:0000000000013EC0 _ZN7android11HeifEncoder22onHandleAnOutputBufferEmmmli
.text:0000000000013EC0                                         ; CODE XREF: android::HeifEncoder::onHandleAnOutputBuffer(ulong,ulong,ulong,long,int)+C↓j
.text:0000000000013EC0                                         ; DATA XREF: LOAD:0000000000001F98↑o ...
.text:0000000000013EC0 var_70          = -0x70
.text:0000000000013EC0 var_60          = -0x60
.text:0000000000013EC0 var_58          = -0x58
.text:0000000000013EC0 var_50          = -0x50
.text:0000000000013EC0 var_48          = -0x48
.text:0000000000013EC0 var_40          = -0x40
.text:0000000000013EC0 var_30          = -0x30
.text:0000000000013EC0 var_20          = -0x20
.text:0000000000013EC0 var_10          = -0x10
.text:0000000000013EC0 var_s0          =  0
.text:0000000000013EC0 ; __unwind {
.text:0000000000013EC0                 SUB             SP, SP, #0x80
.text:0000000000013EC4                 STP             X26, X25, [SP,#0x70+var_40]
.text:0000000000013EC8                 STP             X24, X23, [SP,#0x70+var_30]
.text:0000000000013ECC                 STP             X22, X21, [SP,#0x70+var_20]
.text:0000000000013ED0                 STP             X20, X19, [SP,#0x70+var_10]
.text:0000000000013ED4                 STP             X29, X30, [SP,#0x70+var_s0]
.text:0000000000013ED8                 ADD             X29, SP, #0x70
.text:0000000000013EDC                 MRS             X26, #3, c13, c0, #2
.text:0000000000013EE0                 MOV             W21, W5
.text:0000000000013EE4                 LDR             X8, [X26,#0x28]
.text:0000000000013EE8                 MOV             X22, X4
.text:0000000000013EEC                 MOV             X24, X3
.text:0000000000013EF0                 MOV             X20, X0
.text:0000000000013EF4                 MOV             X19, X1
.text:0000000000013EF8                 STR             X8, [SP,#0x70+var_48]
.text:0000000000013EFC                 LDRB            W8, [X0,#0x110]
.text:0000000000013F00                 CBZ             W8, loc_13F3C
.text:0000000000013F04                 MOV             X5, X2
.text:0000000000013F08                 LDR             W3, [X20,#0x10]
.text:0000000000013F0C                 ADRP            X1, #aHeifencoder@PAGE ; "HeifEncoder"
.text:0000000000013F10                 STR             W21, [SP,#0x70+var_70]
.text:0000000000013F14                 ADRP            X2, #aAlreadyReceive@PAGE ; "Already received EOS Signal to encoder("...
.text:0000000000013F18                 ADD             X1, X1, #aHeifencoder@PAGEOFF ; "HeifEncoder"
.text:0000000000013F1C                 ADD             X2, X2, #aAlreadyReceive@PAGEOFF ; "Already received EOS Signal to encoder("...
.text:0000000000013F20                 MOV             W0, #5
.text:0000000000013F24                 MOV             X4, X19
.text:0000000000013F28                 MOV             X6, X24
.text:0000000000013F2C                 MOV             X7, X22
.text:0000000000013F30                 BL              .__android_log_print
.text:0000000000013F34 loc_13F34                               ; CODE XREF: android::HeifEncoder::onHandleAnOutputBuffer(ulong,ulong,ulong,long,int)+2D8↓j
.text:0000000000013F34                                         ; android::HeifEncoder::onHandleAnOutputBuffer(ulong,ulong,ulong,long,int)+2E4↓j
.text:0000000000013F34                 MOV             W23, WZR
.text:0000000000013F38                 B               loc_13F84
.text:0000000000013F3C ; ---------------------------------------------------------------------------
.text:0000000000013F3C loc_13F3C                               ; CODE XREF: android::HeifEncoder::onHandleAnOutputBuffer(ulong,ulong,ulong,long,int)+40↑j
.text:0000000000013F3C                 LDR             X0, [X20,#0x38]
.text:0000000000013F40                 ADD             X2, SP, #0x70+var_50
.text:0000000000013F44                 MOV             X1, X19
.text:0000000000013F48                 STR             XZR, [SP,#0x70+var_50]
.text:0000000000013F4C                 BL              ._ZN7android10MediaCodec15getOutputBufferEmPNS_2spINS_16MediaCodecBufferEEE ; android::MediaCodec::getOutputBuffer(ulong,android::sp<android::MediaCodecBuffer> *)
.text:0000000000013F50                 MOV             W23, W0
.text:0000000000013F54                 CBZ             W0, loc_13FB4
.text:0000000000013F58 loc_13F58                               ; CODE XREF: android::HeifEncoder::onHandleAnOutputBuffer(ulong,ulong,ulong,long,int)+F8↓j
.text:0000000000013F58                 ADRP            X1, #aHeifencoder@PAGE ; "HeifEncoder"
.text:0000000000013F5C                 ADRP            X2, #aCanNotGetOutpu@PAGE ; "can not get output buffer(%d)"
.text:0000000000013F60                 ADD             X1, X1, #aHeifencoder@PAGEOFF ; "HeifEncoder"
.text:0000000000013F64                 ADD             X2, X2, #aCanNotGetOutpu@PAGEOFF ; "can not get output buffer(%d)"
.text:0000000000013F68                 MOV             W0, #6
.text:0000000000013F6C                 MOV             W3, W23
.text:0000000000013F70                 BL              .__android_log_print
.text:0000000000013F74                 LDR             X0, [SP,#0x70+var_50] ; this
.text:0000000000013F78                 CBZ             X0, loc_13F84
.text:0000000000013F7C                 ADD             X1, SP, #0x70+var_50 ; void *
.text:0000000000013F80                 BL              ._ZNK7android7RefBase9decStrongEPKv ; android::RefBase::decStrong(void const*)
.text:0000000000013F84 loc_13F84                               ; CODE XREF: android::HeifEncoder::onHandleAnOutputBuffer(ulong,ulong,ulong,long,int)+78↑j
.text:0000000000013F84                                         ; android::HeifEncoder::onHandleAnOutputBuffer(ulong,ulong,ulong,long,int)+B8↑j
.text:0000000000013F84                 LDR             X8, [X26,#0x28]
.text:0000000000013F88                 LDR             X9, [SP,#0x70+var_48]
.text:0000000000013F8C                 CMP             X8, X9
.text:0000000000013F90                 B.NE            loc_141A8
.text:0000000000013F94                 MOV             W0, W23
.text:0000000000013F98                 LDP             X29, X30, [SP,#0x70+var_s0]
.text:0000000000013F9C                 LDP             X20, X19, [SP,#0x70+var_10]
.text:0000000000013FA0                 LDP             X22, X21, [SP,#0x70+var_20]
.text:0000000000013FA4                 LDP             X24, X23, [SP,#0x70+var_30]
.text:0000000000013FA8                 LDP             X26, X25, [SP,#0x70+var_40]
.text:0000000000013FAC                 ADD             SP, SP, #0x80
.text:0000000000013FB0                 RET
.text:0000000000013FB4 ; ---------------------------------------------------------------------------
.text:0000000000013FB4 loc_13FB4                               ; CODE XREF: android::HeifEncoder::onHandleAnOutputBuffer(ulong,ulong,ulong,long,int)+94↑j
.text:0000000000013FB4                 LDR             X25, [SP,#0x70+var_50]
.text:0000000000013FB8                 CBZ             X25, loc_13F58
.text:0000000000013FBC                 CBZ             X24, loc_14144
.text:0000000000013FC0                 MOV             W0, #0x40 ; '@' ; unsigned __int64
.text:0000000000013FC4                 BL              ._Znwm  ; operator new(ulong)
.text:0000000000013FC8                 MOV             X23, X0
.text:0000000000013FCC                 MOV             X0, X25 ; this
.text:0000000000013FD0                 BL              ._ZN7android16MediaCodecBuffer4baseEv ; android::MediaCodecBuffer::base(void)
.text:0000000000013FD4                 LDR             X8, [SP,#0x70+var_50]
.text:0000000000013FD8                 MOV             X24, X0
.text:0000000000013FDC                 MOV             X0, X8  ; this
.text:0000000000013FE0                 BL              ._ZNK7android16MediaCodecBuffer4sizeEv ; android::MediaCodecBuffer::size(void)
.text:0000000000013FE4                 MOV             X2, X0  ; unsigned __int64
.text:0000000000013FE8                 MOV             X0, X23 ; this
.text:0000000000013FEC                 MOV             X1, X24 ; void *
.text:0000000000013FF0                 BL              ._ZN7android7ABufferC1EPvm ; android::ABuffer::ABuffer(void *,ulong)
.text:0000000000013FF4                 ADD             X1, SP, #0x70+var_58 ; void *
.text:0000000000013FF8                 STR             X23, [SP,#0x70+var_58]
.text:0000000000013FFC                 MOV             X0, X23 ; this
.text:0000000000014000                 BL              ._ZNK7android7RefBase9incStrongEPKv ; android::RefBase::incStrong(void const*)
.text:0000000000014004                 LDR             X0, [SP,#0x70+var_58] ; this
.text:0000000000014008                 ADD             X8, SP, #0x70+var_60
.text:000000000001400C                 BL              ._ZN7android7ABuffer4metaEv ; android::ABuffer::meta(void)
.text:0000000000014010                 LDR             X0, [SP,#0x70+var_60] ; this
.text:0000000000014014                 ADRP            X1, #aIndex@PAGE ; "index"
.text:0000000000014018                 ADD             X1, X1, #aIndex@PAGEOFF ; "index"
.text:000000000001401C                 MOV             X2, X19 ; unsigned __int64
.text:0000000000014020                 BL              ._ZN7android8AMessage7setSizeEPKcm ; android::AMessage::setSize(char const*,ulong)
.text:0000000000014024                 LDR             X0, [SP,#0x70+var_60] ; this
.text:0000000000014028                 CBZ             X0, loc_14034
.text:000000000001402C                 ADD             X1, SP, #0x70+var_60 ; void *
.text:0000000000014030                 BL              ._ZNK7android7RefBase9decStrongEPKv ; android::RefBase::decStrong(void const*)
.text:0000000000014034 loc_14034                               ; CODE XREF: android::HeifEncoder::onHandleAnOutputBuffer(ulong,ulong,ulong,long,int)+168↑j
.text:0000000000014034                 LDR             X0, [SP,#0x70+var_58] ; this
.text:0000000000014038                 ADD             X8, SP, #0x70+var_60
.text:000000000001403C                 BL              ._ZN7android7ABuffer4metaEv ; android::ABuffer::meta(void)
.text:0000000000014040                 LDR             X0, [SP,#0x70+var_60] ; this
.text:0000000000014044                 ADRP            X1, #aTimeus@PAGE ; "timeUs"
.text:0000000000014048                 ADD             X1, X1, #aTimeus@PAGEOFF ; "timeUs"
.text:000000000001404C                 MOV             X2, X22 ; __int64
.text:0000000000014050                 BL              ._ZN7android8AMessage8setInt64EPKcl ; android::AMessage::setInt64(char const*,long)
.text:0000000000014054                 LDR             X0, [SP,#0x70+var_60] ; this
.text:0000000000014058                 CBZ             X0, loc_14064
.text:000000000001405C                 ADD             X1, SP, #0x70+var_60 ; void *
.text:0000000000014060                 BL              ._ZNK7android7RefBase9decStrongEPKv ; android::RefBase::decStrong(void const*)
.text:0000000000014064 loc_14064                               ; CODE XREF: android::HeifEncoder::onHandleAnOutputBuffer(ulong,ulong,ulong,long,int)+198↑j
.text:0000000000014064                 LDR             X0, [SP,#0x70+var_58] ; this
.text:0000000000014068                 ADD             X8, SP, #0x70+var_60
.text:000000000001406C                 BL              ._ZN7android7ABuffer4metaEv ; android::ABuffer::meta(void)
.text:0000000000014070                 LDR             X0, [SP,#0x70+var_60] ; this
.text:0000000000014074                 ADRP            X1, #aFlags@PAGE ; "flags"
.text:0000000000014078                 ADD             X1, X1, #aFlags@PAGEOFF ; "flags"
.text:000000000001407C                 MOV             W2, W21 ; int
.text:0000000000014080                 BL              ._ZN7android8AMessage8setInt32EPKci ; android::AMessage::setInt32(char const*,int)
.text:0000000000014084                 LDR             X0, [SP,#0x70+var_60] ; this
.text:0000000000014088                 CBZ             X0, loc_14094
.text:000000000001408C                 ADD             X1, SP, #0x70+var_60 ; void *
.text:0000000000014090                 BL              ._ZNK7android7RefBase9decStrongEPKv ; android::RefBase::decStrong(void const*)
.text:0000000000014094 loc_14094                               ; CODE XREF: android::HeifEncoder::onHandleAnOutputBuffer(ulong,ulong,ulong,long,int)+1C8↑j
.text:0000000000014094                 LDR             X24, [X20,#0x108]
.text:0000000000014098                 CBZ             X24, loc_14134
.text:000000000001409C                 MOV             X23, X20
.text:00000000000140A0                 LDR             X8, [X23,#0xF8]!
.text:00000000000140A4                 LDR             X0, [X8,#0x18] ; this
.text:00000000000140A8                 STR             X0, [SP,#0x70+var_60]
.text:00000000000140AC                 CBZ             X0, loc_140B8
.text:00000000000140B0                 ADD             X1, SP, #0x70+var_60 ; void *
.text:00000000000140B4                 BL              ._ZNK7android7RefBase9incStrongEPKv ; android::RefBase::incStrong(void const*)
.text:00000000000140B8 loc_140B8                               ; CODE XREF: android::HeifEncoder::onHandleAnOutputBuffer(ulong,ulong,ulong,long,int)+1EC↑j
.text:00000000000140B8                 LDR             X8, [X24]
.text:00000000000140BC                 ADD             X1, SP, #0x70+var_58
.text:00000000000140C0                 ADD             X2, SP, #0x70+var_60
.text:00000000000140C4                 MOV             X0, X24
.text:00000000000140C8                 MOV             X3, X22
.text:00000000000140CC                 LDR             X8, [X8,#0x50]
.text:00000000000140D0                 MOV             W4, W21
.text:00000000000140D4                 BLR             X8
.text:00000000000140D8                 LDR             X0, [SP,#0x70+var_60] ; this
.text:00000000000140DC                 CBZ             X0, loc_140E8
.text:00000000000140E0                 ADD             X1, SP, #0x70+var_60 ; void *
.text:00000000000140E4                 BL              ._ZNK7android7RefBase9decStrongEPKv ; android::RefBase::decStrong(void const*)
.text:00000000000140E8 loc_140E8                               ; CODE XREF: android::HeifEncoder::onHandleAnOutputBuffer(ulong,ulong,ulong,long,int)+21C↑j
.text:00000000000140E8                 TBZ             W21, #0, loc_14134
.text:00000000000140EC                 LDR             X8, [X23]
.text:00000000000140F0                 LDP             W10, W9, [X8,#0x10]
.text:00000000000140F4                 ADD             W9, W9, #1
.text:00000000000140F8                 CMP             W9, W10
.text:00000000000140FC                 STR             W9, [X8,#0x14]
.text:0000000000014100                 B.NE            loc_14134
.text:0000000000014104                 LDR             X22, [X23]
.text:0000000000014108                 CBZ             X22, loc_14118
.text:000000000001410C                 MOV             X0, X22 ; this
.text:0000000000014110                 MOV             X1, X23 ; void *
.text:0000000000014114                 BL              ._ZNK7android7RefBase9decStrongEPKv ; android::RefBase::decStrong(void const*)
.text:0000000000014118 loc_14118                               ; CODE XREF: android::HeifEncoder::onHandleAnOutputBuffer(ulong,ulong,ulong,long,int)+248↑j
.text:0000000000014118                 LDR             X8, [X23]
.text:000000000001411C                 CMP             X22, X8
.text:0000000000014120                 B.EQ            loc_14128
.text:0000000000014124                 BL              ._ZN7android14sp_report_raceEv ; android::sp_report_race(void)
.text:0000000000014128 loc_14128                               ; CODE XREF: android::HeifEncoder::onHandleAnOutputBuffer(ulong,ulong,ulong,long,int)+260↑j
.text:0000000000014128                 MOV             W8, #1
.text:000000000001412C                 STR             XZR, [X20,#0xF8]
.text:0000000000014130                 STRB            W8, [X20,#0x112]
.text:0000000000014134 loc_14134                               ; CODE XREF: android::HeifEncoder::onHandleAnOutputBuffer(ulong,ulong,ulong,long,int)+1D8↑j
.text:0000000000014134                                         ; android::HeifEncoder::onHandleAnOutputBuffer(ulong,ulong,ulong,long,int):loc_140E8↑j ...
.text:0000000000014134                 LDR             X0, [SP,#0x70+var_58] ; this
.text:0000000000014138                 CBZ             X0, loc_14144
.text:000000000001413C                 ADD             X1, SP, #0x70+var_58 ; void *
.text:0000000000014140                 BL              ._ZNK7android7RefBase9decStrongEPKv ; android::RefBase::decStrong(void const*)
.text:0000000000014144 loc_14144                               ; CODE XREF: android::HeifEncoder::onHandleAnOutputBuffer(ulong,ulong,ulong,long,int)+FC↑j
.text:0000000000014144                                         ; android::HeifEncoder::onHandleAnOutputBuffer(ulong,ulong,ulong,long,int)+278↑j
.text:0000000000014144                 ADD             X22, X20, #0x144
.text:0000000000014148                 MOV             X0, X22 ; mutex
.text:000000000001414C                 BL              .pthread_mutex_lock
.text:0000000000014150                 MOV             W23, #1
.text:0000000000014154                 STRB            W23, [X20,#0x111]
.text:0000000000014158                 TBZ             W21, #2, loc_14180
.text:000000000001415C                 ADRP            X1, #aHeifencoder@PAGE ; "HeifEncoder"
.text:0000000000014160                 ADRP            X2, #aWeMetTheEosOfO@PAGE ; "we met the EOS of output buffer"
.text:0000000000014164                 ADD             X1, X1, #aHeifencoder@PAGEOFF ; "HeifEncoder"
.text:0000000000014168                 ADD             X2, X2, #aWeMetTheEosOfO@PAGEOFF ; "we met the EOS of output buffer"
.text:000000000001416C                 MOV             W0, #4
.text:0000000000014170                 BL              .__android_log_print
.text:0000000000014174                 ADD             X0, X20, #0x114 ; cond
.text:0000000000014178                 STRB            W23, [X20,#0x110]
.text:000000000001417C                 BL              .pthread_cond_signal
.text:0000000000014180 loc_14180                               ; CODE XREF: android::HeifEncoder::onHandleAnOutputBuffer(ulong,ulong,ulong,long,int)+298↑j
.text:0000000000014180                 MOV             X0, X22 ; mutex
.text:0000000000014184                 BL              .pthread_mutex_unlock
.text:0000000000014188                 LDR             X0, [X20,#0x38] ; this
.text:000000000001418C                 MOV             X1, X19 ; unsigned __int64
.text:0000000000014190                 BL              ._ZN7android10MediaCodec19releaseOutputBufferEm ; android::MediaCodec::releaseOutputBuffer(ulong)
.text:0000000000014194                 LDR             X0, [SP,#0x70+var_50] ; this
.text:0000000000014198                 CBZ             X0, loc_13F34
.text:000000000001419C                 ADD             X1, SP, #0x70+var_50 ; void *
.text:00000000000141A0                 BL              ._ZNK7android7RefBase9decStrongEPKv ; android::RefBase::decStrong(void const*)
.text:00000000000141A4                 B               loc_13F34
.text:00000000000141A8 ; ---------------------------------------------------------------------------
.text:00000000000141A8 loc_141A8                               ; CODE XREF: android::HeifEncoder::onHandleAnOutputBuffer(ulong,ulong,ulong,long,int)+D0↑j
.text:00000000000141A8                 BL              .__stack_chk_fail
.text:00000000000141A8 ; } // starts at 13EC0
.text:00000000000141A8 ; End of function android::HeifEncoder::onHandleAnOutputBuffer(ulong,ulong,ulong,long,int)
.text:00000000000141A8 ; ---------------------------------------------------------------------------
.text:00000000000141AC                 ALIGN 0x10
.text:00000000000141B0 ; =============== S U B R O U T I N E =======================================
.text:00000000000141B0 ; android::HeifEncoder::onHandleAnOutputFormatChanged(android::sp<android::AMessage> const&)
.text:00000000000141B0                 EXPORT _ZN7android11HeifEncoder29onHandleAnOutputFormatChangedERKNS_2spINS_8AMessageEEE
.text:00000000000141B0 _ZN7android11HeifEncoder29onHandleAnOutputFormatChangedERKNS_2spINS_8AMessageEEE
.text:00000000000141B0                                         ; DATA XREF: LOAD:0000000000001D88↑o
.text:00000000000141B0 ; __unwind {
.text:00000000000141B0                 MOV             W0, WZR
.text:00000000000141B4                 RET
.text:00000000000141B4 ; } // starts at 141B0
.text:00000000000141B4 ; End of function android::HeifEncoder::onHandleAnOutputFormatChanged(android::sp<android::AMessage> const&)
.text:00000000000141B8 ; =============== S U B R O U T I N E =======================================
.text:00000000000141B8 ; Attributes: bp-based frame
.text:00000000000141B8 ; android::HeifEncoder::initEncoder(android::sp<android::AMessage> const&)
.text:00000000000141B8                 EXPORT _ZN7android11HeifEncoder11initEncoderERKNS_2spINS_8AMessageEEE
.text:00000000000141B8 _ZN7android11HeifEncoder11initEncoderERKNS_2spINS_8AMessageEEE
.text:00000000000141B8                                         ; CODE XREF: android::HeifEncoder::initEncoder(android::sp<android::AMessage> const&)+C↓j
.text:00000000000141B8                                         ; DATA XREF: LOAD:0000000000001428↑o ...
.text:00000000000141B8 var_B0          = -0xB0
.text:00000000000141B8 var_A8          = -0xA8
.text:00000000000141B8 var_A0          = -0xA0
.text:00000000000141B8 var_98          = -0x98
.text:00000000000141B8 var_94          = -0x94
.text:00000000000141B8 var_90          = -0x90
.text:00000000000141B8 var_88          = -0x88
.text:00000000000141B8 var_84          = -0x84
.text:00000000000141B8 var_80          = -0x80
.text:00000000000141B8 var_78          = -0x78
.text:00000000000141B8 var_5F          = -0x5F
.text:00000000000141B8 var_58          = -0x58
.text:00000000000141B8 var_50          = -0x50
.text:00000000000141B8 var_48          = -0x48
.text:00000000000141B8 var_40          = -0x40
.text:00000000000141B8 var_30          = -0x30
.text:00000000000141B8 var_20          = -0x20
.text:00000000000141B8 var_10          = -0x10
.text:00000000000141B8 var_s0          =  0
.text:00000000000141B8 ; __unwind {
.text:00000000000141B8                 SUB             SP, SP, #0xC0
.text:00000000000141BC                 STR             D8, [SP,#0xB0+var_50]
.text:00000000000141C0                 STR             X27, [SP,#0xB0+var_48]
.text:00000000000141C4                 STP             X26, X25, [SP,#0xB0+var_40]
.text:00000000000141C8                 STP             X24, X23, [SP,#0xB0+var_30]
.text:00000000000141CC                 STP             X22, X21, [SP,#0xB0+var_20]
.text:00000000000141D0                 STP             X20, X19, [SP,#0xB0+var_10]
.text:00000000000141D4                 STP             X29, X30, [SP,#0xB0+var_s0]
.text:00000000000141D8                 ADD             X29, SP, #0xB0
.text:00000000000141DC                 MRS             X25, #3, c13, c0, #2
.text:00000000000141E0                 MOV             X22, X1
.text:00000000000141E4                 LDR             X8, [X25,#0x28]
.text:00000000000141E8                 MOV             X19, X0
.text:00000000000141EC                 ADD             X2, SP, #0xB0+var_84 ; int *
.text:00000000000141F0                 STR             X8, [SP,#0xB0+var_58]
.text:00000000000141F4                 LDR             X8, [X1]
.text:00000000000141F8                 ADRP            X1, #aColorFormat@PAGE ; "color-format"
.text:00000000000141FC                 ADD             X1, X1, #aColorFormat@PAGEOFF ; "color-format"
.text:0000000000014200                 MOV             X0, X8  ; this
.text:0000000000014204                 BL              ._ZNK7android8AMessage9findInt32EPKcPi ; android::AMessage::findInt32(char const*,int *)
.text:0000000000014208                 TBZ             W0, #0, loc_14988
.text:000000000001420C                 LDR             X0, [X22] ; this
.text:0000000000014210                 ADD             X21, X19, #0x14
.text:0000000000014214                 ADRP            X1, #aQpIncreaseRati@PAGE ; "qp-increase-ratio"
.text:0000000000014218                 ADD             X1, X1, #aQpIncreaseRati@PAGEOFF ; "qp-increase-ratio"
.text:000000000001421C                 MOV             X2, X21 ; int *
.text:0000000000014220                 BL              ._ZNK7android8AMessage9findInt32EPKcPi ; android::AMessage::findInt32(char const*,int *)
.text:0000000000014224                 TBZ             W0, #0, loc_149AC
.text:0000000000014228                 LDR             W3, [SP,#0xB0+var_84]
.text:000000000001422C                 MOV             W8, #2
.text:0000000000014230                 CMP             W3, #7
.text:0000000000014234                 CSEL            W20, W3, W8, EQ
.text:0000000000014238                 CMP             W3, W20
.text:000000000001423C                 B.NE            loc_14248
.text:0000000000014240                 MOV             W24, WZR
.text:0000000000014244                 B               loc_14268
.text:0000000000014248 ; ---------------------------------------------------------------------------
.text:0000000000014248 loc_14248                               ; CODE XREF: android::HeifEncoder::initEncoder(android::sp<android::AMessage> const&)+84↑j
.text:0000000000014248                 ADRP            X1, #aHeifencoder@PAGE ; "HeifEncoder"
.text:000000000001424C                 ADRP            X2, #aNeedCscFromDTo@PAGE ; "need csc from %d to %d"
.text:0000000000014250                 ADD             X1, X1, #aHeifencoder@PAGEOFF ; "HeifEncoder"
.text:0000000000014254                 ADD             X2, X2, #aNeedCscFromDTo@PAGEOFF ; "need csc from %d to %d"
.text:0000000000014258                 MOV             W0, #4
.text:000000000001425C                 MOV             W4, W20
.text:0000000000014260                 BL              .__android_log_print
.text:0000000000014264                 MOV             W24, #1
.text:0000000000014268 loc_14268                               ; CODE XREF: android::HeifEncoder::initEncoder(android::sp<android::AMessage> const&)+8C↑j
.text:0000000000014268                 MOV             W8, #4
.text:000000000001426C                 ADD             X0, SP, #0xB0+var_80
.text:0000000000014270                 ADD             X2, SP, #0xB0+var_88
.text:0000000000014274                 MOV             W1, W20
.text:0000000000014278                 STR             W8, [SP,#0xB0+var_80]
.text:000000000001427C                 BL              sub_14C28
.text:0000000000014280                 MOV             W0, #0xA40 ; unsigned __int64
.text:0000000000014284                 BL              ._Znwm  ; operator new(ulong)
.text:0000000000014288                 MOV             X23, X0
.text:000000000001428C                 BL              ._ZN7android8AMessageC1Ev ; android::AMessage::AMessage(void)
.text:0000000000014290                 ADD             X1, SP, #0xB0+var_90 ; void *
.text:0000000000014294                 STR             X23, [SP,#0xB0+var_90]
.text:0000000000014298                 MOV             X0, X23 ; this
.text:000000000001429C                 BL              ._ZNK7android7RefBase9incStrongEPKv ; android::RefBase::incStrong(void const*)
.text:00000000000142A0                 LDR             W4, [X19,#0x10]
.text:00000000000142A4                 STP             XZR, XZR, [SP,#0xB0+var_A0]
.text:00000000000142A8                 CMP             W4, #2
.text:00000000000142AC                 B.EQ            loc_142CC
.text:00000000000142B0                 CMP             W4, #1
.text:00000000000142B4                 B.NE            loc_14334
.text:00000000000142B8                 MOV             W2, #0x200
.text:00000000000142BC                 MOV             W23, #0x12
.text:00000000000142C0                 STP             W2, W2, [SP,#0xB0+var_98]
.text:00000000000142C4                 STP             W2, W2, [SP,#0xB0+var_A0]
.text:00000000000142C8                 B               loc_14368
.text:00000000000142CC ; ---------------------------------------------------------------------------
.text:00000000000142CC loc_142CC                               ; CODE XREF: android::HeifEncoder::initEncoder(android::sp<android::AMessage> const&)+F4↑j
.text:00000000000142CC                 LDR             X0, [X22] ; this
.text:00000000000142D0                 ADRP            X1, #aWidth@PAGE ; "width"
.text:00000000000142D4                 ADD             X1, X1, #aWidth@PAGEOFF ; "width"
.text:00000000000142D8                 ADD             X2, SP, #0xB0+var_94 ; int *
.text:00000000000142DC                 BL              ._ZNK7android8AMessage9findInt32EPKcPi ; android::AMessage::findInt32(char const*,int *)
.text:00000000000142E0                 LDR             X0, [X22] ; this
.text:00000000000142E4                 ADRP            X1, #aHeight@PAGE ; "height"
.text:00000000000142E8                 ADD             X1, X1, #aHeight@PAGEOFF ; "height"
.text:00000000000142EC                 ADD             X2, SP, #0xB0+var_98 ; int *
.text:00000000000142F0                 BL              ._ZNK7android8AMessage9findInt32EPKcPi ; android::AMessage::findInt32(char const*,int *)
.text:00000000000142F4                 LDR             X0, [X22] ; this
.text:00000000000142F8                 ADRP            X1, #aStride@PAGE ; "stride"
.text:00000000000142FC                 ADD             X1, X1, #aStride@PAGEOFF ; "stride"
.text:0000000000014300                 ADD             X2, SP, #0xB0+var_A0+4 ; int *
.text:0000000000014304                 BL              ._ZNK7android8AMessage9findInt32EPKcPi ; android::AMessage::findInt32(char const*,int *)
.text:0000000000014308                 LDR             X0, [X22] ; this
.text:000000000001430C                 ADRP            X1, #aSliceHeight@PAGE ; "slice-height"
.text:0000000000014310                 ADD             X1, X1, #aSliceHeight@PAGEOFF ; "slice-height"
.text:0000000000014314                 ADD             X2, SP, #0xB0+var_A0 ; int *
.text:0000000000014318                 BL              ._ZNK7android8AMessage9findInt32EPKcPi ; android::AMessage::findInt32(char const*,int *)
.text:000000000001431C                 LDR             W2, [SP,#0xB0+var_94] ; int
.text:0000000000014320                 CBZ             W24, loc_14364
.text:0000000000014324                 LDR             W8, [SP,#0xB0+var_98]
.text:0000000000014328                 MOV             W23, #0x16
.text:000000000001432C                 STP             W8, W2, [SP,#0xB0+var_A0]
.text:0000000000014330                 B               loc_14368
.text:0000000000014334 ; ---------------------------------------------------------------------------
.text:0000000000014334 loc_14334                               ; CODE XREF: android::HeifEncoder::initEncoder(android::sp<android::AMessage> const&)+FC↑j
.text:0000000000014334                 ADRP            X1, #aHeifencoder@PAGE ; "HeifEncoder"
.text:0000000000014338                 ADRP            X2, #aSUnsupportedRo@PAGE ; "%s : unsupported role type(%d)"
.text:000000000001433C                 ADRP            X3, #aInitencoder@PAGE ; "initEncoder"
.text:0000000000014340                 ADD             X1, X1, #aHeifencoder@PAGEOFF ; "HeifEncoder"
.text:0000000000014344                 ADD             X2, X2, #aSUnsupportedRo@PAGEOFF ; "%s : unsupported role type(%d)"
.text:0000000000014348                 ADD             X3, X3, #aInitencoder@PAGEOFF ; "initEncoder"
.text:000000000001434C                 MOV             W0, #6
.text:0000000000014350                 BL              .__android_log_print
.text:0000000000014354                 MOV             W22, #0xFFFFFFEA
.text:0000000000014358                 LDR             X0, [SP,#0xB0+var_90]
.text:000000000001435C                 CBNZ            X0, loc_14780
.text:0000000000014360                 B               loc_14788
.text:0000000000014364 ; ---------------------------------------------------------------------------
.text:0000000000014364 loc_14364                               ; CODE XREF: android::HeifEncoder::initEncoder(android::sp<android::AMessage> const&)+168↑j
.text:0000000000014364                 MOV             W23, #0x16
.text:0000000000014368 loc_14368                               ; CODE XREF: android::HeifEncoder::initEncoder(android::sp<android::AMessage> const&)+110↑j
.text:0000000000014368                                         ; android::HeifEncoder::initEncoder(android::sp<android::AMessage> const&)+178↑j
.text:0000000000014368                 LDR             X0, [X22] ; this
.text:000000000001436C                 ADRP            X1, #aGridWidth@PAGE ; "grid-width"
.text:0000000000014370                 ADD             X1, X1, #aGridWidth@PAGEOFF ; "grid-width"
.text:0000000000014374                 BL              ._ZN7android8AMessage8setInt32EPKci ; android::AMessage::setInt32(char const*,int)
.text:0000000000014378                 LDR             X0, [X22] ; this
.text:000000000001437C                 ADRP            X1, #aGridHeight@PAGE ; "grid-height"
.text:0000000000014380                 LDR             W2, [SP,#0xB0+var_98] ; int
.text:0000000000014384                 ADD             X1, X1, #aGridHeight@PAGEOFF ; "grid-height"
.text:0000000000014388                 BL              ._ZN7android8AMessage8setInt32EPKci ; android::AMessage::setInt32(char const*,int)
.text:000000000001438C                 LDR             X0, [X22] ; this
.text:0000000000014390                 ADRP            X1, #aEncoderColorFo@PAGE ; "encoder-color-format"
.text:0000000000014394                 ADD             X1, X1, #aEncoderColorFo@PAGEOFF ; "encoder-color-format"
.text:0000000000014398                 MOV             W2, W20 ; int
.text:000000000001439C                 BL              ._ZN7android8AMessage8setInt32EPKci ; android::AMessage::setInt32(char const*,int)
.text:00000000000143A0                 ADRP            X24, #__bss_start@PAGE
.text:00000000000143A4                 LDR             X0, [SP,#0xB0+var_90] ; this
.text:00000000000143A8                 ADRP            X1, #aMime@PAGE ; "mime"
.text:00000000000143AC                 ADD             X1, X1, #aMime@PAGEOFF ; "mime"
.text:00000000000143B0                 LDR             X2, [X24,#__bss_start@PAGEOFF] ; char *
.text:00000000000143B4                 MOV             X3, #0xFFFFFFFFFFFFFFFF ; __int64
.text:00000000000143B8                 BL              ._ZN7android8AMessage9setStringEPKcS2_l ; android::AMessage::setString(char const*,char const*,long)
.text:00000000000143BC                 LDR             X0, [SP,#0xB0+var_90] ; this
.text:00000000000143C0                 ADRP            X1, #aWidth@PAGE ; "width"
.text:00000000000143C4                 LDR             W2, [SP,#0xB0+var_94] ; int
.text:00000000000143C8                 ADD             X1, X1, #aWidth@PAGEOFF ; "width"
.text:00000000000143CC                 BL              ._ZN7android8AMessage8setInt32EPKci ; android::AMessage::setInt32(char const*,int)
.text:00000000000143D0                 LDR             X0, [SP,#0xB0+var_90] ; this
.text:00000000000143D4                 ADRP            X1, #aHeight@PAGE ; "height"
.text:00000000000143D8                 LDR             W2, [SP,#0xB0+var_98] ; int
.text:00000000000143DC                 ADD             X1, X1, #aHeight@PAGEOFF ; "height"
.text:00000000000143E0                 BL              ._ZN7android8AMessage8setInt32EPKci ; android::AMessage::setInt32(char const*,int)
.text:00000000000143E4                 LDR             X0, [SP,#0xB0+var_90] ; this
.text:00000000000143E8                 ADRP            X1, #aStride@PAGE ; "stride"
.text:00000000000143EC                 LDR             W2, [SP,#0xB0+var_A0+4] ; int
.text:00000000000143F0                 ADD             X1, X1, #aStride@PAGEOFF ; "stride"
.text:00000000000143F4                 BL              ._ZN7android8AMessage8setInt32EPKci ; android::AMessage::setInt32(char const*,int)
.text:00000000000143F8                 LDR             X0, [SP,#0xB0+var_90] ; this
.text:00000000000143FC                 ADRP            X1, #aSliceHeight@PAGE ; "slice-height"
.text:0000000000014400                 LDR             W2, [SP,#0xB0+var_A0] ; int
.text:0000000000014404                 ADD             X1, X1, #aSliceHeight@PAGEOFF ; "slice-height"
.text:0000000000014408                 BL              ._ZN7android8AMessage8setInt32EPKci ; android::AMessage::setInt32(char const*,int)
.text:000000000001440C                 LDR             X0, [SP,#0xB0+var_90] ; this
.text:0000000000014410                 ADRP            X1, #aColorFormat@PAGE ; "color-format"
.text:0000000000014414                 LDR             W2, [SP,#0xB0+var_88] ; int
.text:0000000000014418                 ADD             X1, X1, #aColorFormat@PAGEOFF ; "color-format"
.text:000000000001441C                 BL              ._ZN7android8AMessage8setInt32EPKci ; android::AMessage::setInt32(char const*,int)
.text:0000000000014420                 LDR             X0, [SP,#0xB0+var_90] ; this
.text:0000000000014424                 ADRP            X1, #aFrameRate@PAGE ; "frame-rate"
.text:0000000000014428                 ADD             X1, X1, #aFrameRate@PAGEOFF ; "frame-rate"
.text:000000000001442C                 MOV             W2, #1  ; int
.text:0000000000014430                 MOV             W22, #1
.text:0000000000014434                 BL              ._ZN7android8AMessage8setInt32EPKci ; android::AMessage::setInt32(char const*,int)
.text:0000000000014438                 LDR             X0, [SP,#0xB0+var_90] ; this
.text:000000000001443C                 ADRP            X1, #aIFrameInterval@PAGE ; "i-frame-interval"
.text:0000000000014440                 ADD             X1, X1, #aIFrameInterval@PAGEOFF ; "i-frame-interval"
.text:0000000000014444                 MOV             W2, #1  ; int
.text:0000000000014448                 BL              ._ZN7android8AMessage8setInt32EPKci ; android::AMessage::setInt32(char const*,int)
.text:000000000001444C                 LDR             X0, [SP,#0xB0+var_90] ; this
.text:0000000000014450                 ADRP            X1, #aBitrateMode@PAGE ; "bitrate-mode"
.text:0000000000014454                 MOV             W2, #1
.text:0000000000014458                 ADD             X1, X1, #aBitrateMode@PAGEOFF ; "bitrate-mode"
.text:000000000001445C                 MOVK            W2, #0x7F03,LSL#16 ; int
.text:0000000000014460                 BL              ._ZN7android8AMessage8setInt32EPKci ; android::AMessage::setInt32(char const*,int)
.text:0000000000014464                 LDR             X0, [SP,#0xB0+var_90] ; this
.text:0000000000014468                 ADRP            X1, #aBitrate@PAGE ; "bitrate"
.text:000000000001446C                 MOV             W2, #0x1B00
.text:0000000000014470                 ADD             X1, X1, #aBitrate@PAGEOFF ; "bitrate"
.text:0000000000014474                 MOVK            W2, #0xB7,LSL#16 ; int
.text:0000000000014478                 BL              ._ZN7android8AMessage8setInt32EPKci ; android::AMessage::setInt32(char const*,int)
.text:000000000001447C                 LDR             X0, [SP,#0xB0+var_90] ; this
.text:0000000000014480                 ADRP            X1, #aVideofixedqpEn@PAGE ; "VideoFixedQP-enable"
.text:0000000000014484                 ADD             X1, X1, #aVideofixedqpEn@PAGEOFF ; "VideoFixedQP-enable"
.text:0000000000014488                 MOV             W2, #1  ; int
.text:000000000001448C                 BL              ._ZN7android8AMessage8setInt32EPKci ; android::AMessage::setInt32(char const*,int)
.text:0000000000014490                 LDR             W8, [X21]
.text:0000000000014494                 ADRP            X1, #aVideofixedqp@PAGE ; "VideoFixedQP"
.text:0000000000014498                 LDR             X0, [SP,#0xB0+var_90] ; this
.text:000000000001449C                 ADD             X1, X1, #aVideofixedqp@PAGEOFF ; "VideoFixedQP"
.text:00000000000144A0                 ADD             W2, W23, W8,LSL#2 ; int
.text:00000000000144A4                 BL              ._ZN7android8AMessage8setInt32EPKci ; android::AMessage::setInt32(char const*,int)
.text:00000000000144A8                 LDR             X0, [SP,#0xB0+var_90] ; this
.text:00000000000144AC                 ADRP            X1, #aRotationDegree@PAGE ; "rotation-degrees"
.text:00000000000144B0                 ADD             X1, X1, #aRotationDegree@PAGEOFF ; "rotation-degrees"
.text:00000000000144B4                 MOV             W2, WZR ; int
.text:00000000000144B8                 BL              ._ZN7android8AMessage8setInt32EPKci ; android::AMessage::setInt32(char const*,int)
.text:00000000000144BC                 LDR             X0, [SP,#0xB0+var_90] ; this
.text:00000000000144C0                 ADRP            X1, #aAndroidUsingRe@PAGE ; "android._using-recorder"
.text:00000000000144C4                 ADD             X1, X1, #aAndroidUsingRe@PAGEOFF ; "android._using-recorder"
.text:00000000000144C8                 MOV             W2, #1  ; int
.text:00000000000144CC                 BL              ._ZN7android8AMessage8setInt32EPKci ; android::AMessage::setInt32(char const*,int)
.text:00000000000144D0                 LDR             X0, [SP,#0xB0+var_90] ; this
.text:00000000000144D4                 ADRP            X1, #aColorRange@PAGE ; "color-range"
.text:00000000000144D8                 ADD             X1, X1, #aColorRange@PAGEOFF ; "color-range"
.text:00000000000144DC                 MOV             W2, #1  ; int
.text:00000000000144E0                 BL              ._ZN7android8AMessage8setInt32EPKci ; android::AMessage::setInt32(char const*,int)
.text:00000000000144E4                 LDR             W8, [SP,#0xB0+var_84]
.text:00000000000144E8                 CMP             W8, #9
.text:00000000000144EC                 B.HI            loc_14528
.text:00000000000144F0                 MOV             W10, #0x22E
.text:00000000000144F4                 LSL             W9, W22, W8
.text:00000000000144F8                 TST             W9, W10
.text:00000000000144FC                 B.EQ            loc_147C0
.text:0000000000014500                 LDR             X0, [SP,#0xB0+var_90] ; this
.text:0000000000014504                 ADRP            X1, #aColorStandard@PAGE ; "color-standard"
.text:0000000000014508                 ADD             X1, X1, #aColorStandard@PAGEOFF ; "color-standard"
.text:000000000001450C                 MOV             W2, #2  ; int
.text:0000000000014510                 BL              ._ZN7android8AMessage8setInt32EPKci ; android::AMessage::setInt32(char const*,int)
.text:0000000000014514                 LDR             X0, [SP,#0xB0+var_90] ; this
.text:0000000000014518                 ADRP            X1, #aColorTransfer@PAGE ; "color-transfer"
.text:000000000001451C                 ADD             X1, X1, #aColorTransfer@PAGEOFF ; "color-transfer"
.text:0000000000014520                 MOV             W2, #3  ; int
.text:0000000000014524 loc_14524                               ; CODE XREF: android::HeifEncoder::initEncoder(android::sp<android::AMessage> const&)+65C↓j
.text:0000000000014524                 BL              ._ZN7android8AMessage8setInt32EPKci ; android::AMessage::setInt32(char const*,int)
.text:0000000000014528 loc_14528                               ; CODE XREF: android::HeifEncoder::initEncoder(android::sp<android::AMessage> const&)+334↑j
.text:0000000000014528                                         ; android::HeifEncoder::initEncoder(android::sp<android::AMessage> const&)+60C↓j
.text:0000000000014528                 MOV             W0, #0xF8 ; unsigned __int64
.text:000000000001452C                 BL              ._Znwm  ; operator new(ulong)
.text:0000000000014530                 MOV             X22, X0
.text:0000000000014534                 BL              ._ZN7android7ALooperC1Ev ; android::ALooper::ALooper(void)
.text:0000000000014538                 MOV             X21, X19
.text:000000000001453C                 MOV             X0, X22 ; this
.text:0000000000014540                 LDR             X23, [X21,#0x30]!
.text:0000000000014544                 MOV             X1, X21 ; void *
.text:0000000000014548                 BL              ._ZNK7android7RefBase9incStrongEPKv ; android::RefBase::incStrong(void const*)
.text:000000000001454C                 CBZ             X23, loc_1455C
.text:0000000000014550                 MOV             X0, X23 ; this
.text:0000000000014554                 MOV             X1, X21 ; void *
.text:0000000000014558                 BL              ._ZNK7android7RefBase9decStrongEPKv ; android::RefBase::decStrong(void const*)
.text:000000000001455C loc_1455C                               ; CODE XREF: android::HeifEncoder::initEncoder(android::sp<android::AMessage> const&)+394↑j
.text:000000000001455C                 LDR             X8, [X21]
.text:0000000000014560                 CMP             X23, X8
.text:0000000000014564                 B.EQ            loc_1456C
.text:0000000000014568                 BL              ._ZN7android14sp_report_raceEv ; android::sp_report_race(void)
.text:000000000001456C loc_1456C                               ; CODE XREF: android::HeifEncoder::initEncoder(android::sp<android::AMessage> const&)+3AC↑j
.text:000000000001456C                 ADRP            X1, #aCodecLooper@PAGE ; "codec_looper"
.text:0000000000014570                 STR             X22, [X19,#0x30]
.text:0000000000014574                 ADD             X1, X1, #aCodecLooper@PAGEOFF ; "codec_looper"
.text:0000000000014578                 MOV             X0, X22 ; this
.text:000000000001457C                 BL              ._ZN7android7ALooper7setNameEPKc ; android::ALooper::setName(char const*)
.text:0000000000014580                 LDR             X0, [X19,#0x30] ; this
.text:0000000000014584                 MOV             W1, WZR ; bool
.text:0000000000014588                 MOV             W2, WZR ; bool
.text:000000000001458C                 MOV             W3, WZR ; int
.text:0000000000014590                 BL              ._ZN7android7ALooper5startEbbi ; android::ALooper::start(bool,bool,int)
.text:0000000000014594                 LDR             X1, [X24,#__bss_start@PAGEOFF] ; char *
.text:0000000000014598                 ADD             X0, SP, #0xB0+var_80 ; this
.text:000000000001459C                 BL              ._ZN7android7AStringC1EPKc ; android::AString::AString(char const*)
.text:00000000000145A0                 MOV             W4, #0xFFFFFFFF
.text:00000000000145A4                 ADD             X8, SP, #0xB0+var_A8
.text:00000000000145A8                 ADD             X1, SP, #0xB0+var_80
.text:00000000000145AC                 MOV             X0, X21
.text:00000000000145B0                 MOV             W2, #1
.text:00000000000145B4                 MOV             X3, XZR
.text:00000000000145B8                 MOV             W5, W4
.text:00000000000145BC                 BL              ._ZN7android10MediaCodec12CreateByTypeERKNS_2spINS_7ALooperEEERKNS_7AStringEbPiij ; android::MediaCodec::CreateByType(android::sp<android::ALooper> const&,android::AString const&,bool,int *,int,uint)
.text:00000000000145C0                 MOV             X21, X19
.text:00000000000145C4                 LDR             X22, [X21,#0x38]!
.text:00000000000145C8                 CBZ             X22, loc_145D8
.text:00000000000145CC                 MOV             X0, X22 ; this
.text:00000000000145D0                 MOV             X1, X21 ; void *
.text:00000000000145D4                 BL              ._ZNK7android7RefBase9decStrongEPKv ; android::RefBase::decStrong(void const*)
.text:00000000000145D8 loc_145D8                               ; CODE XREF: android::HeifEncoder::initEncoder(android::sp<android::AMessage> const&)+410↑j
.text:00000000000145D8                 LDR             X8, [X21]
.text:00000000000145DC                 CMP             X22, X8
.text:00000000000145E0                 B.EQ            loc_145E8
.text:00000000000145E4                 BL              ._ZN7android14sp_report_raceEv ; android::sp_report_race(void)
.text:00000000000145E8 loc_145E8                               ; CODE XREF: android::HeifEncoder::initEncoder(android::sp<android::AMessage> const&)+428↑j
.text:00000000000145E8                 LDR             X8, [SP,#0xB0+var_A8]
.text:00000000000145EC                 ADD             X0, SP, #0xB0+var_80 ; this
.text:00000000000145F0                 STR             XZR, [SP,#0xB0+var_A8]
.text:00000000000145F4                 STR             X8, [X21]
.text:00000000000145F8                 BL              ._ZN7android7AStringD1Ev ; android::AString::~AString()
.text:00000000000145FC                 LDR             X8, [X21]
.text:0000000000014600                 CBZ             X8, loc_149D4
.text:0000000000014604                 MOV             W0, #0xA40 ; unsigned __int64
.text:0000000000014608                 BL              ._Znwm  ; operator new(ulong)
.text:000000000001460C                 LDR             X8, [X19,#0x28]
.text:0000000000014610                 MOV             X22, X0
.text:0000000000014614                 STR             X8, [SP,#0xB0+var_80]
.text:0000000000014618                 CBZ             X8, loc_14628
.text:000000000001461C                 ADD             X1, SP, #0xB0+var_80 ; void *
.text:0000000000014620                 MOV             X0, X8  ; this
.text:0000000000014624                 BL              ._ZNK7android7RefBase9incStrongEPKv ; android::RefBase::incStrong(void const*)
.text:0000000000014628 loc_14628                               ; CODE XREF: android::HeifEncoder::initEncoder(android::sp<android::AMessage> const&)+460↑j
.text:0000000000014628                 ADD             X2, SP, #0xB0+var_80
.text:000000000001462C                 MOV             X0, X22
.text:0000000000014630                 MOV             W1, #3
.text:0000000000014634                 BL              ._ZN7android8AMessageC1EjRKNS_2spIKNS_8AHandlerEEE ; android::AMessage::AMessage(uint,android::sp<android::AHandler const> const&)
.text:0000000000014638                 MOV             X23, X19
.text:000000000001463C                 MOV             X0, X22 ; this
.text:0000000000014640                 LDR             X24, [X23,#0x40]!
.text:0000000000014644                 MOV             X1, X23 ; void *
.text:0000000000014648                 BL              ._ZNK7android7RefBase9incStrongEPKv ; android::RefBase::incStrong(void const*)
.text:000000000001464C                 CBZ             X24, loc_1465C
.text:0000000000014650                 MOV             X0, X24 ; this
.text:0000000000014654                 MOV             X1, X23 ; void *
.text:0000000000014658                 BL              ._ZNK7android7RefBase9decStrongEPKv ; android::RefBase::decStrong(void const*)
.text:000000000001465C loc_1465C                               ; CODE XREF: android::HeifEncoder::initEncoder(android::sp<android::AMessage> const&)+494↑j
.text:000000000001465C                 LDR             X8, [X23]
.text:0000000000014660                 CMP             X24, X8
.text:0000000000014664                 B.EQ            loc_1466C
.text:0000000000014668                 BL              ._ZN7android14sp_report_raceEv ; android::sp_report_race(void)
.text:000000000001466C loc_1466C                               ; CODE XREF: android::HeifEncoder::initEncoder(android::sp<android::AMessage> const&)+4AC↑j
.text:000000000001466C                 LDR             X0, [SP,#0xB0+var_80] ; this
.text:0000000000014670                 STR             X22, [X23]
.text:0000000000014674                 CBZ             X0, loc_14680
.text:0000000000014678                 ADD             X1, SP, #0xB0+var_80 ; void *
.text:000000000001467C                 BL              ._ZNK7android7RefBase9decStrongEPKv ; android::RefBase::decStrong(void const*)
.text:0000000000014680 loc_14680                               ; CODE XREF: android::HeifEncoder::initEncoder(android::sp<android::AMessage> const&)+4BC↑j
.text:0000000000014680                 LDR             X0, [X21]
.text:0000000000014684                 MOV             X1, X23
.text:0000000000014688                 BL              ._ZN7android10MediaCodec11setCallbackERKNS_2spINS_8AMessageEEE ; android::MediaCodec::setCallback(android::sp<android::AMessage> const&)
.text:000000000001468C                 LDR             X0, [X21]
.text:0000000000014690                 ADD             X1, SP, #0xB0+var_90
.text:0000000000014694                 ADD             X2, SP, #0xB0+var_80
.text:0000000000014698                 STR             XZR, [SP,#0xB0+var_80]
.text:000000000001469C                 ADD             X3, SP, #0xB0+var_A8
.text:00000000000146A0                 STR             XZR, [SP,#0xB0+var_A8]
.text:00000000000146A4                 MOV             W4, #1
.text:00000000000146A8                 BL              ._ZN7android10MediaCodec9configureERKNS_2spINS_8AMessageEEERKNS1_INS_7SurfaceEEERKNS1_INS_7ICryptoEEEj ; android::MediaCodec::configure(android::sp<android::AMessage> const&,android::sp<android::Surface> const&,android::sp<android::ICrypto> const&,uint)
.text:00000000000146AC                 LDR             X8, [SP,#0xB0+var_A8]
.text:00000000000146B0                 MOV             W22, W0
.text:00000000000146B4                 CBZ             X8, loc_146CC
.text:00000000000146B8                 LDR             X9, [X8]
.text:00000000000146BC                 ADD             X1, SP, #0xB0+var_A8 ; void *
.text:00000000000146C0                 LDUR            X9, [X9,#-0x18]
.text:00000000000146C4                 ADD             X0, X8, X9 ; this
.text:00000000000146C8                 BL              ._ZNK7android7RefBase9decStrongEPKv ; android::RefBase::decStrong(void const*)
.text:00000000000146CC loc_146CC                               ; CODE XREF: android::HeifEncoder::initEncoder(android::sp<android::AMessage> const&)+4FC↑j
.text:00000000000146CC                 LDR             X0, [SP,#0xB0+var_80] ; this
.text:00000000000146D0                 CBZ             X0, loc_146DC
.text:00000000000146D4                 ADD             X1, SP, #0xB0+var_80 ; void *
.text:00000000000146D8                 BL              ._ZNK7android7RefBase9decStrongEPKv ; android::RefBase::decStrong(void const*)
.text:00000000000146DC loc_146DC                               ; CODE XREF: android::HeifEncoder::initEncoder(android::sp<android::AMessage> const&)+518↑j
.text:00000000000146DC                 CBZ             W22, loc_146F4
.text:00000000000146E0                 ADRP            X1, #aHeifencoder@PAGE ; "HeifEncoder"
.text:00000000000146E4                 ADRP            X2, #aCanNotConfigur@PAGE ; "can not configure encoder %d"
.text:00000000000146E8                 ADD             X1, X1, #aHeifencoder@PAGEOFF ; "HeifEncoder"
.text:00000000000146EC                 ADD             X2, X2, #aCanNotConfigur@PAGEOFF ; "can not configure encoder %d"
.text:00000000000146F0                 B               loc_14714
.text:00000000000146F4 ; ---------------------------------------------------------------------------
.text:00000000000146F4 loc_146F4                               ; CODE XREF: android::HeifEncoder::initEncoder(android::sp<android::AMessage> const&):loc_146DC↑j
.text:00000000000146F4                 LDR             X0, [X21] ; this
.text:00000000000146F8                 BL              ._ZN7android10MediaCodec5startEv ; android::MediaCodec::start(void)
.text:00000000000146FC                 CBZ             W0, loc_14818
.text:0000000000014700                 MOV             W22, W0
.text:0000000000014704                 ADRP            X1, #aHeifencoder@PAGE ; "HeifEncoder"
.text:0000000000014708                 ADRP            X2, #aCanNotStartEnc_0@PAGE ; "can not start encoder %d"
.text:000000000001470C                 ADD             X1, X1, #aHeifencoder@PAGEOFF ; "HeifEncoder"
.text:0000000000014710                 ADD             X2, X2, #aCanNotStartEnc_0@PAGEOFF ; "can not start encoder %d"
.text:0000000000014714 loc_14714                               ; CODE XREF: android::HeifEncoder::initEncoder(android::sp<android::AMessage> const&)+538↑j
.text:0000000000014714                 MOV             W0, #6
.text:0000000000014718                 MOV             W3, W22
.text:000000000001471C                 BL              .__android_log_print
.text:0000000000014720                 LDR             X0, [X21] ; this
.text:0000000000014724                 BL              ._ZN7android10MediaCodec7releaseEv ; android::MediaCodec::release(void)
.text:0000000000014728                 LDR             X19, [X21]
.text:000000000001472C                 CBZ             X19, loc_14750
.text:0000000000014730                 MOV             X0, X19 ; this
.text:0000000000014734                 MOV             X1, X21 ; void *
.text:0000000000014738                 BL              ._ZNK7android7RefBase9decStrongEPKv ; android::RefBase::decStrong(void const*)
.text:000000000001473C                 LDR             X8, [X21]
.text:0000000000014740                 CMP             X19, X8
.text:0000000000014744                 B.EQ            loc_1474C
.text:0000000000014748                 BL              ._ZN7android14sp_report_raceEv ; android::sp_report_race(void)
.text:000000000001474C loc_1474C                               ; CODE XREF: android::HeifEncoder::initEncoder(android::sp<android::AMessage> const&)+58C↑j
.text:000000000001474C                 STR             XZR, [X21]
.text:0000000000014750 loc_14750                               ; CODE XREF: android::HeifEncoder::initEncoder(android::sp<android::AMessage> const&)+574↑j
.text:0000000000014750                 LDR             X19, [X21]
.text:0000000000014754                 CBZ             X19, loc_14764
.text:0000000000014758                 MOV             X0, X19 ; this
.text:000000000001475C                 MOV             X1, X21 ; void *
.text:0000000000014760                 BL              ._ZNK7android7RefBase9decStrongEPKv ; android::RefBase::decStrong(void const*)
.text:0000000000014764 loc_14764                               ; CODE XREF: android::HeifEncoder::initEncoder(android::sp<android::AMessage> const&)+59C↑j
.text:0000000000014764                 LDR             X8, [X21]
.text:0000000000014768                 CMP             X19, X8
.text:000000000001476C                 B.EQ            loc_14774
.text:0000000000014770                 BL              ._ZN7android14sp_report_raceEv ; android::sp_report_race(void)
.text:0000000000014774 loc_14774                               ; CODE XREF: android::HeifEncoder::initEncoder(android::sp<android::AMessage> const&)+5B4↑j
.text:0000000000014774                 STR             XZR, [X21]
.text:0000000000014778                 LDR             X0, [SP,#0xB0+var_90] ; this
.text:000000000001477C                 CBZ             X0, loc_14788
.text:0000000000014780 loc_14780                               ; CODE XREF: android::HeifEncoder::initEncoder(android::sp<android::AMessage> const&)+1A4↑j
.text:0000000000014780                                         ; android::HeifEncoder::initEncoder(android::sp<android::AMessage> const&)+7C8↓j
.text:0000000000014780                 ADD             X1, SP, #0xB0+var_90 ; void *
.text:0000000000014784                 BL              ._ZNK7android7RefBase9decStrongEPKv ; android::RefBase::decStrong(void const*)
.text:0000000000014788 loc_14788                               ; CODE XREF: android::HeifEncoder::initEncoder(android::sp<android::AMessage> const&)+1A8↑j
.text:0000000000014788                                         ; android::HeifEncoder::initEncoder(android::sp<android::AMessage> const&)+5C4↑j ...
.text:0000000000014788                 LDR             X8, [X25,#0x28]
.text:000000000001478C                 LDR             X9, [SP,#0xB0+var_58]
.text:0000000000014790                 CMP             X8, X9
.text:0000000000014794                 B.NE            loc_149D0
.text:0000000000014798                 MOV             W0, W22
.text:000000000001479C                 LDR             X27, [SP,#0xB0+var_48]
.text:00000000000147A0                 LDP             X29, X30, [SP,#0xB0+var_s0]
.text:00000000000147A4                 LDP             X20, X19, [SP,#0xB0+var_10]
.text:00000000000147A8                 LDP             X22, X21, [SP,#0xB0+var_20]
.text:00000000000147AC                 LDP             X24, X23, [SP,#0xB0+var_30]
.text:00000000000147B0                 LDP             X26, X25, [SP,#0xB0+var_40]
.text:00000000000147B4                 LDR             D8, [SP,#0xB0+var_50]
.text:00000000000147B8                 ADD             SP, SP, #0xC0
.text:00000000000147BC                 RET
.text:00000000000147C0 ; ---------------------------------------------------------------------------
.text:00000000000147C0 loc_147C0                               ; CODE XREF: android::HeifEncoder::initEncoder(android::sp<android::AMessage> const&)+344↑j
.text:00000000000147C0                 CMP             W8, #7
.text:00000000000147C4                 B.NE            loc_14528
.text:00000000000147C8                 LDR             X0, [SP,#0xB0+var_90] ; this
.text:00000000000147CC                 ADRP            X1, #aProfile@PAGE ; "profile"
.text:00000000000147D0                 ADD             X1, X1, #aProfile@PAGEOFF ; "profile"
.text:00000000000147D4                 MOV             W2, #0x1000 ; int
.text:00000000000147D8                 BL              ._ZN7android8AMessage8setInt32EPKci ; android::AMessage::setInt32(char const*,int)
.text:00000000000147DC                 LDR             X0, [SP,#0xB0+var_90] ; this
.text:00000000000147E0                 ADRP            X1, #aLevel@PAGE ; "level"
.text:00000000000147E4                 ADD             X1, X1, #aLevel@PAGEOFF ; "level"
.text:00000000000147E8                 MOV             W2, WZR ; int
.text:00000000000147EC                 BL              ._ZN7android8AMessage8setInt32EPKci ; android::AMessage::setInt32(char const*,int)
.text:00000000000147F0                 LDR             X0, [SP,#0xB0+var_90] ; this
.text:00000000000147F4                 ADRP            X1, #aColorStandard@PAGE ; "color-standard"
.text:00000000000147F8                 ADD             X1, X1, #aColorStandard@PAGEOFF ; "color-standard"
.text:00000000000147FC                 MOV             W2, #6  ; int
.text:0000000000014800                 BL              ._ZN7android8AMessage8setInt32EPKci ; android::AMessage::setInt32(char const*,int)
.text:0000000000014804                 LDR             X0, [SP,#0xB0+var_90]
.text:0000000000014808                 ADRP            X1, #aColorTransfer@PAGE ; "color-transfer"
.text:000000000001480C                 ADD             X1, X1, #aColorTransfer@PAGEOFF ; "color-transfer"
.text:0000000000014810                 MOV             W2, #6
.text:0000000000014814                 B               loc_14524
.text:0000000000014818 ; ---------------------------------------------------------------------------
.text:0000000000014818 loc_14818                               ; CODE XREF: android::HeifEncoder::initEncoder(android::sp<android::AMessage> const&)+544↑j
.text:0000000000014818                 MOV             W0, #0x38 ; '8' ; unsigned __int64
.text:000000000001481C                 BL              ._Znwm  ; operator new(ulong)
.text:0000000000014820                 LDP             W2, W1, [SP,#0xB0+var_98]
.text:0000000000014824                 MOV             W4, #0x32 ; '2'
.text:0000000000014828                 MOV             W3, W20
.text:000000000001482C                 MOV             X21, X0
.text:0000000000014830                 BL              ._ZN7android11FrameFormatC1EiiNS_15ApexColorFormatEj ; android::FrameFormat::FrameFormat(int,int,android::ApexColorFormat,uint)
.text:0000000000014834                 ADD             X1, SP, #0xB0+var_A8 ; void *
.text:0000000000014838                 STR             X21, [SP,#0xB0+var_A8]
.text:000000000001483C                 MOV             X0, X21 ; this
.text:0000000000014840                 BL              ._ZNK7android7RefBase9incStrongEPKv ; android::RefBase::incStrong(void const*)
.text:0000000000014844                 ADRP            X9, #qword_9D18@PAGE
.text:0000000000014848                 ADD             X8, SP, #0xB0+var_80
.text:000000000001484C                 ADD             X24, X8, #0x10
.text:0000000000014850                 LDR             D8, [X9,#qword_9D18@PAGEOFF]
.text:0000000000014854                 ADD             X21, X19, #0xD0
.text:0000000000014858                 MOV             W26, #0xA
.text:000000000001485C                 MOV             W27, #1
.text:0000000000014860 loc_14860                               ; CODE XREF: android::HeifEncoder::initEncoder(android::sp<android::AMessage> const&)+744↓j
.text:0000000000014860                 STR             XZR, [SP,#0xB0+var_80]
.text:0000000000014864                 LDR             X23, [SP,#0xB0+var_80]
.text:0000000000014868                 LDR             X22, [SP,#0xB0+var_A8]
.text:000000000001486C                 CBZ             X22, loc_1487C
.text:0000000000014870                 ADD             X1, SP, #0xB0+var_80 ; void *
.text:0000000000014874                 MOV             X0, X22 ; this
.text:0000000000014878                 BL              ._ZNK7android7RefBase9incStrongEPKv ; android::RefBase::incStrong(void const*)
.text:000000000001487C loc_1487C                               ; CODE XREF: android::HeifEncoder::initEncoder(android::sp<android::AMessage> const&)+6B4↑j
.text:000000000001487C                 CBZ             X23, loc_1488C
.text:0000000000014880                 ADD             X1, SP, #0xB0+var_80 ; void *
.text:0000000000014884                 MOV             X0, X23 ; this
.text:0000000000014888                 BL              ._ZNK7android7RefBase9decStrongEPKv ; android::RefBase::decStrong(void const*)
.text:000000000001488C loc_1488C                               ; CODE XREF: android::HeifEncoder::initEncoder(android::sp<android::AMessage> const&):loc_1487C↑j
.text:000000000001488C                 LDR             X8, [SP,#0xB0+var_80]
.text:0000000000014890                 CMP             X23, X8
.text:0000000000014894                 B.EQ            loc_1489C
.text:0000000000014898                 BL              ._ZN7android14sp_report_raceEv ; android::sp_report_race(void)
.text:000000000001489C loc_1489C                               ; CODE XREF: android::HeifEncoder::initEncoder(android::sp<android::AMessage> const&)+6DC↑j
.text:000000000001489C                 MOV             X8, SP
.text:00000000000148A0                 STR             X22, [SP,#0xB0+var_80]
.text:00000000000148A4                 ADD             X0, SP, #0xB0+var_80
.text:00000000000148A8                 STR             D8, [SP,#0xB0+var_78]
.text:00000000000148AC                 STP             XZR, XZR, [X24]
.text:00000000000148B0                 STRB            W27, [SP,#0xB0+var_5F]
.text:00000000000148B4                 BL              sub_EDD0
.text:00000000000148B8                 LDR             X0, [SP,#0xB0+var_80] ; this
.text:00000000000148BC                 CBZ             X0, loc_148C8
.text:00000000000148C0                 ADD             X1, SP, #0xB0+var_80 ; void *
.text:00000000000148C4                 BL              ._ZNK7android7RefBase9decStrongEPKv ; android::RefBase::decStrong(void const*)
.text:00000000000148C8 loc_148C8                               ; CODE XREF: android::HeifEncoder::initEncoder(android::sp<android::AMessage> const&)+704↑j
.text:00000000000148C8                 LDR             X2, [X19,#0xE0] ; unsigned __int64
.text:00000000000148CC                 MOV             X1, SP  ; void *
.text:00000000000148D0                 MOV             X0, X21 ; this
.text:00000000000148D4                 MOV             W3, #1  ; unsigned __int64
.text:00000000000148D8                 BL              ._ZN7android10VectorImpl8insertAtEPKvmm ; android::VectorImpl::insertAt(void const*,ulong,ulong)
.text:00000000000148DC                 LDR             X8, [SP,#0xB0+var_B0]
.text:00000000000148E0                 CBZ             X8, loc_148F8
.text:00000000000148E4                 LDR             X9, [X8]
.text:00000000000148E8                 MOV             X1, SP  ; void *
.text:00000000000148EC                 LDUR            X9, [X9,#-0x18]
.text:00000000000148F0                 ADD             X0, X8, X9 ; this
.text:00000000000148F4                 BL              ._ZNK7android7RefBase9decStrongEPKv ; android::RefBase::decStrong(void const*)
.text:00000000000148F8 loc_148F8                               ; CODE XREF: android::HeifEncoder::initEncoder(android::sp<android::AMessage> const&)+728↑j
.text:00000000000148F8                 SUBS            W26, W26, #1
.text:00000000000148FC                 B.NE            loc_14860
.text:0000000000014900                 STR             W20, [X19,#0x178]
.text:0000000000014904                 ADD             X22, X19, #0x170
.text:0000000000014908                 LDR             X21, [X19,#0x170]
.text:000000000001490C                 LDR             X20, [SP,#0xB0+var_90]
.text:0000000000014910                 CBZ             X20, loc_14920
.text:0000000000014914                 MOV             X0, X20 ; this
.text:0000000000014918                 MOV             X1, X22 ; void *
.text:000000000001491C                 BL              ._ZNK7android7RefBase9incStrongEPKv ; android::RefBase::incStrong(void const*)
.text:0000000000014920 loc_14920                               ; CODE XREF: android::HeifEncoder::initEncoder(android::sp<android::AMessage> const&)+758↑j
.text:0000000000014920                 CBZ             X21, loc_14930
.text:0000000000014924                 MOV             X0, X21 ; this
.text:0000000000014928                 MOV             X1, X22 ; void *
.text:000000000001492C                 BL              ._ZNK7android7RefBase9decStrongEPKv ; android::RefBase::decStrong(void const*)
.text:0000000000014930 loc_14930                               ; CODE XREF: android::HeifEncoder::initEncoder(android::sp<android::AMessage> const&):loc_14920↑j
.text:0000000000014930                 LDR             X8, [X22]
.text:0000000000014934                 CMP             X21, X8
.text:0000000000014938                 B.EQ            loc_14940
.text:000000000001493C                 BL              ._ZN7android14sp_report_raceEv ; android::sp_report_race(void)
.text:0000000000014940 loc_14940                               ; CODE XREF: android::HeifEncoder::initEncoder(android::sp<android::AMessage> const&)+780↑j
.text:0000000000014940                 LDR             W3, [X19,#0x10]
.text:0000000000014944                 ADRP            X1, #aHeifencoder@PAGE ; "HeifEncoder"
.text:0000000000014948                 ADRP            X2, #aSuccessToStart@PAGE ; "Success to start encoder (%d)"
.text:000000000001494C                 STR             X20, [X19,#0x170]
.text:0000000000014950                 MOV             W8, #1
.text:0000000000014954                 ADD             X1, X1, #aHeifencoder@PAGEOFF ; "HeifEncoder"
.text:0000000000014958                 ADD             X2, X2, #aSuccessToStart@PAGEOFF ; "Success to start encoder (%d)"
.text:000000000001495C                 MOV             W0, #4
.text:0000000000014960                 STRB            W8, [X19,#0x48]
.text:0000000000014964                 BL              .__android_log_print
.text:0000000000014968                 LDR             X0, [SP,#0xB0+var_A8] ; this
.text:000000000001496C                 CBZ             X0, loc_14978
.text:0000000000014970                 ADD             X1, SP, #0xB0+var_A8 ; void *
.text:0000000000014974                 BL              ._ZNK7android7RefBase9decStrongEPKv ; android::RefBase::decStrong(void const*)
.text:0000000000014978 loc_14978                               ; CODE XREF: android::HeifEncoder::initEncoder(android::sp<android::AMessage> const&)+7B4↑j
.text:0000000000014978                 MOV             W22, WZR
.text:000000000001497C                 LDR             X0, [SP,#0xB0+var_90]
.text:0000000000014980                 CBNZ            X0, loc_14780
.text:0000000000014984                 B               loc_14788
.text:0000000000014988 ; ---------------------------------------------------------------------------
.text:0000000000014988 loc_14988                               ; CODE XREF: android::HeifEncoder::initEncoder(android::sp<android::AMessage> const&)+50↑j
.text:0000000000014988                 ADRP            X0, #aInputformatFin@PAGE ; "!(inputFormat->findInt32(\"color-format"...
.text:000000000001498C                 ADRP            X1, #aHeifencoder@PAGE ; "HeifEncoder"
.text:0000000000014990                 ADRP            X2, #aS@PAGE ; "%s"
.text:0000000000014994                 ADRP            X3, #aVendorSamsungF_30@PAGE ; "vendor/samsung/frameworks/av/media/libh"...
.text:0000000000014998                 ADD             X0, X0, #aInputformatFin@PAGEOFF ; "!(inputFormat->findInt32(\"color-format"...
.text:000000000001499C                 ADD             X1, X1, #aHeifencoder@PAGEOFF ; "HeifEncoder"
.text:00000000000149A0                 ADD             X2, X2, #aS@PAGEOFF ; "%s"
.text:00000000000149A4                 ADD             X3, X3, #aVendorSamsungF_30@PAGEOFF ; "vendor/samsung/frameworks/av/media/libh"...
.text:00000000000149A8                 BL              .__android_log_assert
.text:00000000000149AC loc_149AC                               ; CODE XREF: android::HeifEncoder::initEncoder(android::sp<android::AMessage> const&)+6C↑j
.text:00000000000149AC                 ADRP            X0, #aInputformatFin_0@PAGE ; "!(inputFormat->findInt32(\"qp-increase-"...
.text:00000000000149B0                 ADRP            X1, #aHeifencoder@PAGE ; "HeifEncoder"
.text:00000000000149B4                 ADRP            X2, #aS@PAGE ; "%s"
.text:00000000000149B8                 ADRP            X3, #aVendorSamsungF_31@PAGE ; "vendor/samsung/frameworks/av/media/libh"...
.text:00000000000149BC                 ADD             X0, X0, #aInputformatFin_0@PAGEOFF ; "!(inputFormat->findInt32(\"qp-increase-"...
.text:00000000000149C0                 ADD             X1, X1, #aHeifencoder@PAGEOFF ; "HeifEncoder"
.text:00000000000149C4                 ADD             X2, X2, #aS@PAGEOFF ; "%s"
.text:00000000000149C8                 ADD             X3, X3, #aVendorSamsungF_31@PAGEOFF ; "vendor/samsung/frameworks/av/media/libh"...
.text:00000000000149CC                 BL              .__android_log_assert
.text:00000000000149D0 loc_149D0                               ; CODE XREF: android::HeifEncoder::initEncoder(android::sp<android::AMessage> const&)+5DC↑j
.text:00000000000149D0                 BL              .__stack_chk_fail
.text:00000000000149D4 ; ---------------------------------------------------------------------------
.text:00000000000149D4 loc_149D4                               ; CODE XREF: android::HeifEncoder::initEncoder(android::sp<android::AMessage> const&)+448↑j
.text:00000000000149D4                 ADRP            X0, #aMcodecNullptr@PAGE ; "!(mCodec != nullptr)"
.text:00000000000149D8                 ADRP            X1, #aHeifencoder@PAGE ; "HeifEncoder"
.text:00000000000149DC                 ADRP            X2, #aS@PAGE ; "%s"
.text:00000000000149E0                 ADRP            X3, #aVendorSamsungF_32@PAGE ; "vendor/samsung/frameworks/av/media/libh"...
.text:00000000000149E4                 ADD             X0, X0, #aMcodecNullptr@PAGEOFF ; "!(mCodec != nullptr)"
.text:00000000000149E8                 ADD             X1, X1, #aHeifencoder@PAGEOFF ; "HeifEncoder"
.text:00000000000149EC                 ADD             X2, X2, #aS@PAGEOFF ; "%s"
.text:00000000000149F0                 ADD             X3, X3, #aVendorSamsungF_32@PAGEOFF ; "vendor/samsung/frameworks/av/media/libh"...
.text:00000000000149F4                 BL              .__android_log_assert
.text:00000000000149F4 ; } // starts at 141B8
.text:00000000000149F4 ; End of function android::HeifEncoder::initEncoder(android::sp<android::AMessage> const&)
.text:00000000000149F8 ; =============== S U B R O U T I N E =======================================
.text:00000000000149F8 ; Attributes: bp-based frame
.text:00000000000149F8 ; android::HeifEncoder::initSource(android::sp<android::AMessage> const&)
.text:00000000000149F8                 EXPORT _ZN7android11HeifEncoder10initSourceERKNS_2spINS_8AMessageEEE
.text:00000000000149F8 _ZN7android11HeifEncoder10initSourceERKNS_2spINS_8AMessageEEE
.text:00000000000149F8                                         ; CODE XREF: android::HeifEncoder::initSource(android::sp<android::AMessage> const&)+C↓j
.text:00000000000149F8                                         ; DATA XREF: LOAD:0000000000000FD8↑o ...
.text:00000000000149F8 var_30          = -0x30
.text:00000000000149F8 var_20          = -0x20
.text:00000000000149F8 var_10          = -0x10
.text:00000000000149F8 var_s0          =  0
.text:00000000000149F8 ; __unwind {
.text:00000000000149F8                 STR             X23, [SP,#-0x10+var_30]!
.text:00000000000149FC                 STP             X22, X21, [SP,#0x30+var_20]
.text:0000000000014A00                 STP             X20, X19, [SP,#0x30+var_10]
.text:0000000000014A04                 STP             X29, X30, [SP,#0x30+var_s0]
.text:0000000000014A08                 ADD             X29, SP, #0x30
.text:0000000000014A0C                 MOV             X20, X0
.text:0000000000014A10                 MOV             W0, #0x2D0 ; unsigned __int64
.text:0000000000014A14                 MOV             X19, X1
.text:0000000000014A18                 BL              ._Znwm  ; operator new(ulong)
.text:0000000000014A1C                 MOV             X21, X0
.text:0000000000014A20                 BL              ._ZN7android10HeifSourceC2Ev ; android::HeifSource::HeifSource(void)
.text:0000000000014A24                 ADD             X23, X20, #0x100
.text:0000000000014A28                 LDR             X22, [X20,#0x100]
.text:0000000000014A2C                 MOV             X0, X21 ; this
.text:0000000000014A30                 MOV             X1, X23 ; void *
.text:0000000000014A34                 BL              ._ZNK7android7RefBase9incStrongEPKv ; android::RefBase::incStrong(void const*)
.text:0000000000014A38                 CBZ             X22, loc_14A48
.text:0000000000014A3C                 MOV             X0, X22 ; this
.text:0000000000014A40                 MOV             X1, X23 ; void *
.text:0000000000014A44                 BL              ._ZNK7android7RefBase9decStrongEPKv ; android::RefBase::decStrong(void const*)
.text:0000000000014A48 loc_14A48                               ; CODE XREF: android::HeifEncoder::initSource(android::sp<android::AMessage> const&)+40↑j
.text:0000000000014A48                 LDR             X8, [X23]
.text:0000000000014A4C                 CMP             X22, X8
.text:0000000000014A50                 B.EQ            loc_14A58
.text:0000000000014A54                 BL              ._ZN7android14sp_report_raceEv ; android::sp_report_race(void)
.text:0000000000014A58 loc_14A58                               ; CODE XREF: android::HeifEncoder::initSource(android::sp<android::AMessage> const&)+58↑j
.text:0000000000014A58                 STR             X21, [X20,#0x100]
.text:0000000000014A5C                 MOV             X0, X21
.text:0000000000014A60                 LDR             W1, [X20,#0x10]
.text:0000000000014A64                 MOV             X2, X19
.text:0000000000014A68                 LDP             X29, X30, [SP,#0x30+var_s0]
.text:0000000000014A6C                 LDP             X20, X19, [SP,#0x30+var_10]
.text:0000000000014A70                 LDP             X22, X21, [SP,#0x30+var_20]
.text:0000000000014A74                 LDR             X23, [SP+0x30+var_30],#0x40
.text:0000000000014A78                 B               ._ZN7android10HeifSource3setENS_4RoleERKNS_2spINS_8AMessageEEE ; android::HeifSource::set(android::Role,android::sp<android::AMessage> const&)
.text:0000000000014A78 ; } // starts at 149F8
.text:0000000000014A78 ; End of function android::HeifEncoder::initSource(android::sp<android::AMessage> const&)
.text:0000000000014A78 ; ---------------------------------------------------------------------------
.text:0000000000014A7C                 ALIGN 0x20
.text:0000000000014A80 ; =============== S U B R O U T I N E =======================================
.text:0000000000014A80 ; Attributes: bp-based frame
.text:0000000000014A80 ; __int64 __fastcall android::HeifEncoder::reset(android::HeifEncoder *__hidden this)
.text:0000000000014A80                 EXPORT _ZN7android11HeifEncoder5resetEv
.text:0000000000014A80 _ZN7android11HeifEncoder5resetEv        ; CODE XREF: android::HeifEncoder::reset(void)+C↓j
.text:0000000000014A80                                         ; DATA XREF: LOAD:0000000000001458↑o ...
.text:0000000000014A80 var_20          = -0x20
.text:0000000000014A80 var_10          = -0x10
.text:0000000000014A80 var_s0          =  0
.text:0000000000014A80 ; __unwind {
.text:0000000000014A80                 STR             X21, [SP,#-0x10+var_20]!
.text:0000000000014A84                 STP             X20, X19, [SP,#0x20+var_10]
.text:0000000000014A88                 STP             X29, X30, [SP,#0x20+var_s0]
.text:0000000000014A8C                 ADD             X29, SP, #0x20
.text:0000000000014A90                 LDRB            W8, [X0,#0x48]
.text:0000000000014A94                 MOV             X19, X0
.text:0000000000014A98                 CBZ             W8, loc_14BBC
.text:0000000000014A9C                 ADD             X0, X19, #0x50 ; 'P' ; this
.text:0000000000014AA0                 BL              ._ZN7android10VectorImpl5clearEv ; android::VectorImpl::clear(void)
.text:0000000000014AA4                 ADD             X0, X19, #0xD0 ; this
.text:0000000000014AA8                 BL              ._ZN7android10VectorImpl5clearEv ; android::VectorImpl::clear(void)
.text:0000000000014AAC                 MOV             X20, X19
.text:0000000000014AB0                 LDR             X0, [X20,#0x38]! ; this
.text:0000000000014AB4                 CBZ             X0, loc_14B0C
.text:0000000000014AB8                 BL              ._ZN7android10MediaCodec7releaseEv ; android::MediaCodec::release(void)
.text:0000000000014ABC                 LDR             X21, [X20]
.text:0000000000014AC0                 CBZ             X21, loc_14AE4
.text:0000000000014AC4                 MOV             X0, X21 ; this
.text:0000000000014AC8                 MOV             X1, X20 ; void *
.text:0000000000014ACC                 BL              ._ZNK7android7RefBase9decStrongEPKv ; android::RefBase::decStrong(void const*)
.text:0000000000014AD0                 LDR             X8, [X20]
.text:0000000000014AD4                 CMP             X21, X8
.text:0000000000014AD8                 B.EQ            loc_14AE0
.text:0000000000014ADC                 BL              ._ZN7android14sp_report_raceEv ; android::sp_report_race(void)
.text:0000000000014AE0 loc_14AE0                               ; CODE XREF: android::HeifEncoder::reset(void)+58↑j
.text:0000000000014AE0                 STR             XZR, [X20]
.text:0000000000014AE4 loc_14AE4                               ; CODE XREF: android::HeifEncoder::reset(void)+40↑j
.text:0000000000014AE4                 LDR             X21, [X20]
.text:0000000000014AE8                 CBZ             X21, loc_14AF8
.text:0000000000014AEC                 MOV             X0, X21 ; this
.text:0000000000014AF0                 MOV             X1, X20 ; void *
.text:0000000000014AF4                 BL              ._ZNK7android7RefBase9decStrongEPKv ; android::RefBase::decStrong(void const*)
.text:0000000000014AF8 loc_14AF8                               ; CODE XREF: android::HeifEncoder::reset(void)+68↑j
.text:0000000000014AF8                 LDR             X8, [X20]
.text:0000000000014AFC                 CMP             X21, X8
.text:0000000000014B00                 B.EQ            loc_14B08
.text:0000000000014B04                 BL              ._ZN7android14sp_report_raceEv ; android::sp_report_race(void)
.text:0000000000014B08 loc_14B08                               ; CODE XREF: android::HeifEncoder::reset(void)+80↑j
.text:0000000000014B08                 STR             XZR, [X20]
.text:0000000000014B0C loc_14B0C                               ; CODE XREF: android::HeifEncoder::reset(void)+34↑j
.text:0000000000014B0C                 MOV             X20, X19
.text:0000000000014B10                 LDR             X0, [X20,#0x30]! ; this
.text:0000000000014B14                 CBZ             X0, loc_14B6C
.text:0000000000014B18                 BL              ._ZN7android7ALooper4stopEv ; android::ALooper::stop(void)
.text:0000000000014B1C                 LDR             X21, [X20]
.text:0000000000014B20                 CBZ             X21, loc_14B44
.text:0000000000014B24                 MOV             X0, X21 ; this
.text:0000000000014B28                 MOV             X1, X20 ; void *
.text:0000000000014B2C                 BL              ._ZNK7android7RefBase9decStrongEPKv ; android::RefBase::decStrong(void const*)
.text:0000000000014B30                 LDR             X8, [X20]
.text:0000000000014B34                 CMP             X21, X8
.text:0000000000014B38                 B.EQ            loc_14B40
.text:0000000000014B3C                 BL              ._ZN7android14sp_report_raceEv ; android::sp_report_race(void)
.text:0000000000014B40 loc_14B40                               ; CODE XREF: android::HeifEncoder::reset(void)+B8↑j
.text:0000000000014B40                 STR             XZR, [X20]
.text:0000000000014B44 loc_14B44                               ; CODE XREF: android::HeifEncoder::reset(void)+A0↑j
.text:0000000000014B44                 LDR             X21, [X20]
.text:0000000000014B48                 CBZ             X21, loc_14B58
.text:0000000000014B4C                 MOV             X0, X21 ; this
.text:0000000000014B50                 MOV             X1, X20 ; void *
.text:0000000000014B54                 BL              ._ZNK7android7RefBase9decStrongEPKv ; android::RefBase::decStrong(void const*)
.text:0000000000014B58 loc_14B58                               ; CODE XREF: android::HeifEncoder::reset(void)+C8↑j
.text:0000000000014B58                 LDR             X8, [X20]
.text:0000000000014B5C                 CMP             X21, X8
.text:0000000000014B60                 B.EQ            loc_14B68
.text:0000000000014B64                 BL              ._ZN7android14sp_report_raceEv ; android::sp_report_race(void)
.text:0000000000014B68 loc_14B68                               ; CODE XREF: android::HeifEncoder::reset(void)+E0↑j
.text:0000000000014B68                 STR             XZR, [X20]
.text:0000000000014B6C loc_14B6C                               ; CODE XREF: android::HeifEncoder::reset(void)+94↑j
.text:0000000000014B6C                 LDR             X20, [X19,#0x170]
.text:0000000000014B70                 ADD             X21, X19, #0x170
.text:0000000000014B74                 CBZ             X20, loc_14B84
.text:0000000000014B78                 MOV             X0, X20 ; this
.text:0000000000014B7C                 MOV             X1, X21 ; void *
.text:0000000000014B80                 BL              ._ZNK7android7RefBase9decStrongEPKv ; android::RefBase::decStrong(void const*)
.text:0000000000014B84 loc_14B84                               ; CODE XREF: android::HeifEncoder::reset(void)+F4↑j
.text:0000000000014B84                 LDR             X8, [X21]
.text:0000000000014B88                 CMP             X20, X8
.text:0000000000014B8C                 B.EQ            loc_14B94
.text:0000000000014B90                 BL              ._ZN7android14sp_report_raceEv ; android::sp_report_race(void)
.text:0000000000014B94 loc_14B94                               ; CODE XREF: android::HeifEncoder::reset(void)+10C↑j
.text:0000000000014B94                 LDR             W3, [X19,#0x10]
.text:0000000000014B98                 ADRP            X1, #aHeifencoder@PAGE ; "HeifEncoder"
.text:0000000000014B9C                 ADRP            X2, #aSuccessToStopE@PAGE ; "Success to stop encoder (%d)"
.text:0000000000014BA0                 STR             XZR, [X19,#0x170]
.text:0000000000014BA4                 ADD             X1, X1, #aHeifencoder@PAGEOFF ; "HeifEncoder"
.text:0000000000014BA8                 STR             WZR, [X19,#0x14]
.text:0000000000014BAC                 ADD             X2, X2, #aSuccessToStopE@PAGEOFF ; "Success to stop encoder (%d)"
.text:0000000000014BB0                 STRB            WZR, [X19,#0x48]
.text:0000000000014BB4                 MOV             W0, #4
.text:0000000000014BB8                 BL              .__android_log_print
.text:0000000000014BBC loc_14BBC                               ; CODE XREF: android::HeifEncoder::reset(void)+18↑j
.text:0000000000014BBC                 LDR             X8, [X19,#0x100]
.text:0000000000014BC0                 CBZ             X8, loc_14C18
.text:0000000000014BC4                 ADD             X19, X19, #0x100
.text:0000000000014BC8                 LDR             X20, [X19]
.text:0000000000014BCC                 CBZ             X20, loc_14BF0
.text:0000000000014BD0                 MOV             X0, X20 ; this
.text:0000000000014BD4                 MOV             X1, X19 ; void *
.text:0000000000014BD8                 BL              ._ZNK7android7RefBase9decStrongEPKv ; android::RefBase::decStrong(void const*)
.text:0000000000014BDC                 LDR             X8, [X19]
.text:0000000000014BE0                 CMP             X20, X8
.text:0000000000014BE4                 B.EQ            loc_14BEC
.text:0000000000014BE8                 BL              ._ZN7android14sp_report_raceEv ; android::sp_report_race(void)
.text:0000000000014BEC loc_14BEC                               ; CODE XREF: android::HeifEncoder::reset(void)+164↑j
.text:0000000000014BEC                 STR             XZR, [X19]
.text:0000000000014BF0 loc_14BF0                               ; CODE XREF: android::HeifEncoder::reset(void)+14C↑j
.text:0000000000014BF0                 LDR             X20, [X19]
.text:0000000000014BF4                 CBZ             X20, loc_14C04
.text:0000000000014BF8                 MOV             X0, X20 ; this
.text:0000000000014BFC                 MOV             X1, X19 ; void *
.text:0000000000014C00                 BL              ._ZNK7android7RefBase9decStrongEPKv ; android::RefBase::decStrong(void const*)
.text:0000000000014C04 loc_14C04                               ; CODE XREF: android::HeifEncoder::reset(void)+174↑j
.text:0000000000014C04                 LDR             X8, [X19]
.text:0000000000014C08                 CMP             X20, X8
.text:0000000000014C0C                 B.EQ            loc_14C14
.text:0000000000014C10                 BL              ._ZN7android14sp_report_raceEv ; android::sp_report_race(void)
.text:0000000000014C14 loc_14C14                               ; CODE XREF: android::HeifEncoder::reset(void)+18C↑j
.text:0000000000014C14                 STR             XZR, [X19]
.text:0000000000014C18 loc_14C18                               ; CODE XREF: android::HeifEncoder::reset(void)+140↑j
.text:0000000000014C18                 LDP             X29, X30, [SP,#0x20+var_s0]
.text:0000000000014C1C                 LDP             X20, X19, [SP,#0x20+var_10]
.text:0000000000014C20                 LDR             X21, [SP+0x20+var_20],#0x30
.text:0000000000014C24                 RET
.text:0000000000014C24 ; } // starts at 14A80
.text:0000000000014C24 ; End of function android::HeifEncoder::reset(void)
.text:0000000000014C28 ; =============== S U B R O U T I N E =======================================
.text:0000000000014C28 ; Attributes: bp-based frame
.text:0000000000014C28 sub_14C28                               ; CODE XREF: android::HeifEncoder::initEncoder(android::sp<android::AMessage> const&)+C4↑p
.text:0000000000014C28 var_70          = -0x70
.text:0000000000014C28 var_64          = -0x64
.text:0000000000014C28 var_60          = -0x60
.text:0000000000014C28 var_40          = -0x40
.text:0000000000014C28 var_28          = -0x28
.text:0000000000014C28 var_20          = -0x20
.text:0000000000014C28 var_10          = -0x10
.text:0000000000014C28 var_s0          =  0
.text:0000000000014C28 ; __unwind {
.text:0000000000014C28                 SUB             SP, SP, #0x80
.text:0000000000014C2C                 STR             X21, [SP,#0x70+var_20]
.text:0000000000014C30                 STP             X20, X19, [SP,#0x70+var_10]
.text:0000000000014C34                 STP             X29, X30, [SP,#0x70+var_s0]
.text:0000000000014C38                 ADD             X29, SP, #0x70
.text:0000000000014C3C                 MRS             X21, #3, c13, c0, #2
.text:0000000000014C40                 MOV             X19, X2
.text:0000000000014C44                 LDR             X8, [X21,#0x28]
.text:0000000000014C48                 ADRP            X2, #unk_9D72@PAGE
.text:0000000000014C4C                 MOV             W20, W1
.text:0000000000014C50                 ADD             X2, X2, #unk_9D72@PAGEOFF
.text:0000000000014C54                 ADD             X3, SP, #0x70+var_60
.text:0000000000014C58                 STUR            X8, [X29,#var_28]
.text:0000000000014C5C                 ADRP            X8, #_ZN7android15_ApexVendorDefs11OpMapHolderIJNS_15ApexColorFormatEP20OMX_COLOR_FORMATTYPEEE5opMapE_ptr@PAGE
.text:0000000000014C60                 STR             X0, [SP,#0x70+var_60]
.text:0000000000014C64                 MOV             X4, SP
.text:0000000000014C68                 MOV             X1, X0
.text:0000000000014C6C                 LDR             X8, [X8,#_ZN7android15_ApexVendorDefs11OpMapHolderIJNS_15ApexColorFormatEP20OMX_COLOR_FORMATTYPEEE5opMapE_ptr@PAGEOFF]
.text:0000000000014C70                 MOV             X0, X8
.text:0000000000014C74                 BL              ._ZNSt3__112__hash_tableINS_17__hash_value_typeIN7android12ApexVendorOpENS_8functionIFiNS2_15ApexColorFormatEP20OMX_COLOR_FORMATTYPEEEEEENS_22__unordered_map_hasherIS3_SA_NS_4hashIS3_EELb1EEENS_21__unordered_map_equalIS3_SA_NS_8equal_toIS3_EELb1EEENS_9allocatorISA_EEE25__emplace_unique_key_argsIS3_JRKNS_21piecewise_construct_tENS_5tupleIJRKS3_EEENSQ_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeISA_PvEEEEbEERKT_DpOT0_
.text:0000000000014C78                 MOV             X8, X0
.text:0000000000014C7C                 LDR             X0, [X0,#0x40]
.text:0000000000014C80                 CBZ             X0, loc_14CE4
.text:0000000000014C84                 ADD             X8, X8, #0x20 ; ' '
.text:0000000000014C88                 CMP             X8, X0
.text:0000000000014C8C                 B.EQ            loc_14CF0
.text:0000000000014C90                 LDR             X8, [X0]
.text:0000000000014C94                 LDR             X8, [X8,#0x10]
.text:0000000000014C98                 BLR             X8
.text:0000000000014C9C                 STR             X0, [SP,#0x70+var_40]
.text:0000000000014CA0                 CBZ             X0, loc_14D10
.text:0000000000014CA4 loc_14CA4                               ; CODE XREF: sub_14C28+E4↓j
.text:0000000000014CA4                 STR             X19, [SP,#0x70+var_70]
.text:0000000000014CA8                 ADD             X1, SP, #0x70+var_64
.text:0000000000014CAC                 LDR             X8, [X0]
.text:0000000000014CB0                 MOV             X2, SP
.text:0000000000014CB4                 LDR             X8, [X8,#0x30]
.text:0000000000014CB8                 STR             W20, [SP,#0x70+var_64]
.text:0000000000014CBC                 BLR             X8
.text:0000000000014CC0                 MOV             W19, W0
.text:0000000000014CC4                 LDR             X0, [SP,#0x70+var_40]
.text:0000000000014CC8                 ADD             X8, SP, #0x70+var_60
.text:0000000000014CCC                 CMP             X8, X0
.text:0000000000014CD0                 B.EQ            loc_14D18
.text:0000000000014CD4                 CBZ             X0, loc_14D24
.text:0000000000014CD8                 LDR             X8, [X0]
.text:0000000000014CDC                 LDR             X8, [X8,#0x28]
.text:0000000000014CE0                 B               loc_14D20
.text:0000000000014CE4 ; ---------------------------------------------------------------------------
.text:0000000000014CE4 loc_14CE4                               ; CODE XREF: sub_14C28+58↑j
.text:0000000000014CE4                 MOV             W19, #0xFFFFD903
.text:0000000000014CE8                 STR             XZR, [SP,#0x70+var_40]
.text:0000000000014CEC                 B               loc_14D24
.text:0000000000014CF0 ; ---------------------------------------------------------------------------
.text:0000000000014CF0 loc_14CF0                               ; CODE XREF: sub_14C28+64↑j
.text:0000000000014CF0                 ADD             X8, SP, #0x70+var_60
.text:0000000000014CF4                 ADD             X1, SP, #0x70+var_60
.text:0000000000014CF8                 STR             X8, [SP,#0x70+var_40]
.text:0000000000014CFC                 LDR             X8, [X0]
.text:0000000000014D00                 LDR             X8, [X8,#0x18]
.text:0000000000014D04                 BLR             X8
.text:0000000000014D08                 LDR             X0, [SP,#0x70+var_40]
.text:0000000000014D0C                 CBNZ            X0, loc_14CA4
.text:0000000000014D10 loc_14D10                               ; CODE XREF: sub_14C28+78↑j
.text:0000000000014D10                 MOV             W19, #0xFFFFD903
.text:0000000000014D14                 B               loc_14D24
.text:0000000000014D18 ; ---------------------------------------------------------------------------
.text:0000000000014D18 loc_14D18                               ; CODE XREF: sub_14C28+A8↑j
.text:0000000000014D18                 LDR             X8, [X0]
.text:0000000000014D1C                 LDR             X8, [X8,#0x20]
.text:0000000000014D20 loc_14D20                               ; CODE XREF: sub_14C28+B8↑j
.text:0000000000014D20                 BLR             X8
.text:0000000000014D24 loc_14D24                               ; CODE XREF: sub_14C28+AC↑j
.text:0000000000014D24                                         ; sub_14C28+C4↑j ...
.text:0000000000014D24                 LDR             X8, [X21,#0x28]
.text:0000000000014D28                 LDUR            X9, [X29,#var_28]
.text:0000000000014D2C                 CMP             X8, X9
.text:0000000000014D30                 B.NE            loc_14D4C
.text:0000000000014D34                 MOV             W0, W19
.text:0000000000014D38                 LDR             X21, [SP,#0x70+var_20]
.text:0000000000014D3C                 LDP             X29, X30, [SP,#0x70+var_s0]
.text:0000000000014D40                 LDP             X20, X19, [SP,#0x70+var_10]
.text:0000000000014D44                 ADD             SP, SP, #0x80
.text:0000000000014D48                 RET
.text:0000000000014D4C ; ---------------------------------------------------------------------------
.text:0000000000014D4C loc_14D4C                               ; CODE XREF: sub_14C28+108↑j
.text:0000000000014D4C                 BL              .__stack_chk_fail
.text:0000000000014D4C ; } // starts at 14C28
.text:0000000000014D4C ; End of function sub_14C28
.text:0000000000014D50 ; ---------------------------------------------------------------------------
.text:0000000000014D50 ; __unwind {
.text:0000000000014D50                 STR             X19, [SP,#-0x20]!
.text:0000000000014D54                 STP             X29, X30, [SP,#0x10]
.text:0000000000014D58                 ADD             X29, SP, #0x10
.text:0000000000014D5C                 ADRP            X8, #_ZTVN7android6VectorImEE_ptr@PAGE
.text:0000000000014D60                 MOV             X19, X0
.text:0000000000014D64                 LDR             X8, [X8,#_ZTVN7android6VectorImEE_ptr@PAGEOFF]
.text:0000000000014D68                 ADD             X8, X8, #0x10
.text:0000000000014D6C                 STR             X8, [X0]
.text:0000000000014D70                 BL              ._ZN7android10VectorImpl13finish_vectorEv ; android::VectorImpl::finish_vector(void)
.text:0000000000014D74                 MOV             X0, X19
.text:0000000000014D78                 BL              ._ZN7android10VectorImplD2Ev ; android::VectorImpl::~VectorImpl()
.text:0000000000014D7C                 LDP             X29, X30, [SP,#0x10]
.text:0000000000014D80                 MOV             X0, X19
.text:0000000000014D84                 LDR             X19, [SP],#0x20
.text:0000000000014D88                 B               ._ZdlPv ; operator delete(void *)
.text:0000000000014D88 ; } // starts at 14D50
.text:0000000000014D88 ; ---------------------------------------------------------------------------
.text:0000000000014D8C                 ALIGN 0x10
.text:0000000000014D90 ; =============== S U B R O U T I N E =======================================
.text:0000000000014D90 ; android::Vector<unsigned long>::do_construct(void *, unsigned long)const
.text:0000000000014D90                 WEAK _ZNK7android6VectorImE12do_constructEPvm
.text:0000000000014D90 _ZNK7android6VectorImE12do_constructEPvm
.text:0000000000014D90                                         ; DATA XREF: LOAD:0000000000000FF0↑o
.text:0000000000014D90                                         ; .data.rel.ro:000000000001D3B0↓o
.text:0000000000014D90 ; __unwind {
.text:0000000000014D90                 RET
.text:0000000000014D90 ; } // starts at 14D90
.text:0000000000014D90 ; End of function android::Vector<ulong>::do_construct(void *,ulong)
.text:0000000000014D90 ; ---------------------------------------------------------------------------
.text:0000000000014D94                 ALIGN 8
.text:0000000000014D98 ; =============== S U B R O U T I N E =======================================
.text:0000000000014D98 ; android::Vector<unsigned long>::do_destroy(void *, unsigned long)const
.text:0000000000014D98                 WEAK _ZNK7android6VectorImE10do_destroyEPvm
.text:0000000000014D98 _ZNK7android6VectorImE10do_destroyEPvm  ; DATA XREF: LOAD:00000000000012C0↑o
.text:0000000000014D98                                         ; .data.rel.ro:000000000001D3B8↓o
.text:0000000000014D98 ; __unwind {
.text:0000000000014D98                 RET
.text:0000000000014D98 ; } // starts at 14D98
.text:0000000000014D98 ; End of function android::Vector<ulong>::do_destroy(void *,ulong)
.text:0000000000014D98 ; ---------------------------------------------------------------------------
.text:0000000000014D9C                 ALIGN 0x20
.text:0000000000014DA0 ; =============== S U B R O U T I N E =======================================
.text:0000000000014DA0 ; Attributes: bp-based frame
.text:0000000000014DA0 ; android::Vector<unsigned long>::do_copy(void *, void const*, unsigned long)const
.text:0000000000014DA0                 WEAK _ZNK7android6VectorImE7do_copyEPvPKvm
.text:0000000000014DA0 _ZNK7android6VectorImE7do_copyEPvPKvm   ; DATA XREF: LOAD:0000000000001B60↑o
.text:0000000000014DA0                                         ; .data.rel.ro:000000000001D3C0↓o
.text:0000000000014DA0 var_s0          =  0
.text:0000000000014DA0 ; __unwind {
.text:0000000000014DA0                 STP             X29, X30, [SP,#-0x10+var_s0]!
.text:0000000000014DA4                 MOV             X29, SP
.text:0000000000014DA8                 MOV             X8, X2
.text:0000000000014DAC                 MOV             X0, X1  ; dest
.text:0000000000014DB0                 MOV             X1, X8  ; src
.text:0000000000014DB4                 LSL             X2, X3, #3 ; n
.text:0000000000014DB8                 BL              .memcpy
.text:0000000000014DBC                 LDP             X29, X30, [SP+var_s0],#0x10
.text:0000000000014DC0                 RET
.text:0000000000014DC0 ; } // starts at 14DA0
.text:0000000000014DC0 ; End of function android::Vector<ulong>::do_copy(void *,void const*,ulong)
.text:0000000000014DC0 ; ---------------------------------------------------------------------------
.text:0000000000014DC4                 ALIGN 8
.text:0000000000014DC8 ; =============== S U B R O U T I N E =======================================
.text:0000000000014DC8 ; android::Vector<unsigned long>::do_splat(void *, void const*, unsigned long)const
.text:0000000000014DC8                 WEAK _ZNK7android6VectorImE8do_splatEPvPKvm
.text:0000000000014DC8 _ZNK7android6VectorImE8do_splatEPvPKvm  ; DATA XREF: LOAD:00000000000010C8↑o
.text:0000000000014DC8                                         ; .data.rel.ro:000000000001D3C8↓o
.text:0000000000014DC8 ; __unwind {
.text:0000000000014DC8                 CBZ             X3, locret_14E04
.text:0000000000014DCC                 CMP             X3, #4
.text:0000000000014DD0                 B.CC            loc_14DEC
.text:0000000000014DD4                 ADD             X8, X2, #1
.text:0000000000014DD8                 CMP             X8, X1
.text:0000000000014DDC                 B.LS            loc_14E08
.text:0000000000014DE0                 ADD             X8, X1, X3,LSL#3
.text:0000000000014DE4                 CMP             X8, X2
.text:0000000000014DE8                 B.LS            loc_14E08
.text:0000000000014DEC loc_14DEC                               ; CODE XREF: android::Vector<ulong>::do_splat(void *,void const*,ulong)+8↑j
.text:0000000000014DEC                 MOV             X8, X3
.text:0000000000014DF0                 MOV             X9, X1
.text:0000000000014DF4 loc_14DF4                               ; CODE XREF: android::Vector<ulong>::do_splat(void *,void const*,ulong)+38↓j
.text:0000000000014DF4                                         ; android::Vector<ulong>::do_splat(void *,void const*,ulong)+6C↓j
.text:0000000000014DF4                 LDR             X10, [X2]
.text:0000000000014DF8                 SUBS            X8, X8, #1
.text:0000000000014DFC                 STR             X10, [X9],#8
.text:0000000000014E00                 B.NE            loc_14DF4
.text:0000000000014E04 locret_14E04                            ; CODE XREF: android::Vector<ulong>::do_splat(void *,void const*,ulong)↑j
.text:0000000000014E04                                         ; android::Vector<ulong>::do_splat(void *,void const*,ulong)+70↓j
.text:0000000000014E04                 RET
.text:0000000000014E08 ; ---------------------------------------------------------------------------
.text:0000000000014E08 loc_14E08                               ; CODE XREF: android::Vector<ulong>::do_splat(void *,void const*,ulong)+14↑j
.text:0000000000014E08                                         ; android::Vector<ulong>::do_splat(void *,void const*,ulong)+20↑j
.text:0000000000014E08                 AND             X10, X3, #0xFFFFFFFFFFFFFFFC
.text:0000000000014E0C                 LD1R            {V0.2D}, [X2]
.text:0000000000014E10                 SUB             X8, X3, X10
.text:0000000000014E14                 ADD             X9, X1, X10,LSL#3
.text:0000000000014E18                 ADD             X11, X1, #0x10
.text:0000000000014E1C                 MOV             X12, X10
.text:0000000000014E20 loc_14E20                               ; CODE XREF: android::Vector<ulong>::do_splat(void *,void const*,ulong)+64↓j
.text:0000000000014E20                 STP             Q0, Q0, [X11,#-0x10]
.text:0000000000014E24                 ADD             X11, X11, #0x20 ; ' '
.text:0000000000014E28                 SUBS            X12, X12, #4
.text:0000000000014E2C                 B.NE            loc_14E20
.text:0000000000014E30                 CMP             X10, X3
.text:0000000000014E34                 B.NE            loc_14DF4
.text:0000000000014E38                 B               locret_14E04
.text:0000000000014E38 ; } // starts at 14DC8
.text:0000000000014E38 ; End of function android::Vector<ulong>::do_splat(void *,void const*,ulong)
.text:0000000000014E38 ; ---------------------------------------------------------------------------
.text:0000000000014E3C                 ALIGN 0x20
.text:0000000000014E40 ; =============== S U B R O U T I N E =======================================
.text:0000000000014E40 ; Attributes: bp-based frame
.text:0000000000014E40 ; android::Vector<unsigned long>::do_move_forward(void *, void const*, unsigned long)const
.text:0000000000014E40                 WEAK _ZNK7android6VectorImE15do_move_forwardEPvPKvm
.text:0000000000014E40 _ZNK7android6VectorImE15do_move_forwardEPvPKvm
.text:0000000000014E40                                         ; DATA XREF: LOAD:0000000000001470↑o
.text:0000000000014E40                                         ; .data.rel.ro:000000000001D3D0↓o
.text:0000000000014E40 var_s0          =  0
.text:0000000000014E40 ; __unwind {
.text:0000000000014E40                 STP             X29, X30, [SP,#-0x10+var_s0]!
.text:0000000000014E44                 MOV             X29, SP
.text:0000000000014E48                 MOV             X8, X2
.text:0000000000014E4C                 MOV             X0, X1  ; dest
.text:0000000000014E50                 MOV             X1, X8  ; src
.text:0000000000014E54                 LSL             X2, X3, #3 ; n
.text:0000000000014E58                 BL              .memmove
.text:0000000000014E5C                 LDP             X29, X30, [SP+var_s0],#0x10
.text:0000000000014E60                 RET
.text:0000000000014E60 ; } // starts at 14E40
.text:0000000000014E60 ; End of function android::Vector<ulong>::do_move_forward(void *,void const*,ulong)
.text:0000000000014E60 ; ---------------------------------------------------------------------------
.text:0000000000014E64                 ALIGN 8
.text:0000000000014E68 ; =============== S U B R O U T I N E =======================================
.text:0000000000014E68 ; Attributes: bp-based frame
.text:0000000000014E68 ; android::Vector<unsigned long>::do_move_backward(void *, void const*, unsigned long)const
.text:0000000000014E68                 WEAK _ZNK7android6VectorImE16do_move_backwardEPvPKvm
.text:0000000000014E68 _ZNK7android6VectorImE16do_move_backwardEPvPKvm
.text:0000000000014E68                                         ; DATA XREF: LOAD:0000000000000DF8↑o
.text:0000000000014E68                                         ; .data.rel.ro:000000000001D3D8↓o
.text:0000000000014E68 var_s0          =  0
.text:0000000000014E68 ; __unwind {
.text:0000000000014E68                 STP             X29, X30, [SP,#-0x10+var_s0]!
.text:0000000000014E6C                 MOV             X29, SP
.text:0000000000014E70                 MOV             X8, X2
.text:0000000000014E74                 MOV             X0, X1  ; dest
.text:0000000000014E78                 MOV             X1, X8  ; src
.text:0000000000014E7C                 LSL             X2, X3, #3 ; n
.text:0000000000014E80                 BL              .memmove
.text:0000000000014E84                 LDP             X29, X30, [SP+var_s0],#0x10
.text:0000000000014E88                 RET
.text:0000000000014E88 ; } // starts at 14E68
.text:0000000000014E88 ; End of function android::Vector<ulong>::do_move_backward(void *,void const*,ulong)
.text:0000000000014E88 ; ---------------------------------------------------------------------------
.text:0000000000014E8C                 ALIGN 0x10
.text:0000000000014E90 ; __unwind {
.text:0000000000014E90                 STR             X19, [SP,#-0x20]!
.text:0000000000014E94                 STP             X29, X30, [SP,#0x10]
.text:0000000000014E98                 ADD             X29, SP, #0x10
.text:0000000000014E9C                 ADRP            X8, #_ZTVN7android6VectorINS_2spINS_15ApexMediaBufferEEEEE_ptr@PAGE
.text:0000000000014EA0                 MOV             X19, X0
.text:0000000000014EA4                 LDR             X8, [X8,#_ZTVN7android6VectorINS_2spINS_15ApexMediaBufferEEEEE_ptr@PAGEOFF]
.text:0000000000014EA8                 ADD             X8, X8, #0x10
.text:0000000000014EAC                 STR             X8, [X0]
.text:0000000000014EB0                 BL              ._ZN7android10VectorImpl13finish_vectorEv ; android::VectorImpl::finish_vector(void)
.text:0000000000014EB4                 MOV             X0, X19
.text:0000000000014EB8                 BL              ._ZN7android10VectorImplD2Ev ; android::VectorImpl::~VectorImpl()
.text:0000000000014EBC                 LDP             X29, X30, [SP,#0x10]
.text:0000000000014EC0                 MOV             X0, X19
.text:0000000000014EC4                 LDR             X19, [SP],#0x20
.text:0000000000014EC8                 B               ._ZdlPv ; operator delete(void *)
.text:0000000000014EC8 ; } // starts at 14E90
.text:0000000000014EC8 ; ---------------------------------------------------------------------------
.text:0000000000014ECC                 ALIGN 0x10
.text:0000000000014ED0 ; =============== S U B R O U T I N E =======================================
.text:0000000000014ED0 ; android::Vector<android::sp<android::ApexMediaBuffer>>::do_construct(void *, unsigned long)const
.text:0000000000014ED0                 WEAK _ZNK7android6VectorINS_2spINS_15ApexMediaBufferEEEE12do_constructEPvm
.text:0000000000014ED0 _ZNK7android6VectorINS_2spINS_15ApexMediaBufferEEEE12do_constructEPvm
.text:0000000000014ED0                                         ; DATA XREF: LOAD:0000000000001698↑o
.text:0000000000014ED0                                         ; .data.rel.ro:000000000001D400↓o
.text:0000000000014ED0 ; __unwind {
.text:0000000000014ED0                 CBZ             X2, locret_14EE4
.text:0000000000014ED4                 MOV             X0, X1  ; s
.text:0000000000014ED8                 MOV             W1, WZR ; c
.text:0000000000014EDC                 LSL             X2, X2, #3 ; n
.text:0000000000014EE0                 B               .memset
.text:0000000000014EE4 ; ---------------------------------------------------------------------------
.text:0000000000014EE4 locret_14EE4                            ; CODE XREF: android::Vector<android::sp<android::ApexMediaBuffer>>::do_construct(void *,ulong)↑j
.text:0000000000014EE4                 RET
.text:0000000000014EE4 ; } // starts at 14ED0
.text:0000000000014EE4 ; End of function android::Vector<android::sp<android::ApexMediaBuffer>>::do_construct(void *,ulong)
.text:0000000000014EE8 ; =============== S U B R O U T I N E =======================================
.text:0000000000014EE8 ; Attributes: bp-based frame
.text:0000000000014EE8 ; android::Vector<android::sp<android::ApexMediaBuffer>>::do_destroy(void *, unsigned long)const
.text:0000000000014EE8                 WEAK _ZNK7android6VectorINS_2spINS_15ApexMediaBufferEEEE10do_destroyEPvm
.text:0000000000014EE8 _ZNK7android6VectorINS_2spINS_15ApexMediaBufferEEEE10do_destroyEPvm
.text:0000000000014EE8                                         ; DATA XREF: LOAD:0000000000001FB0↑o
.text:0000000000014EE8                                         ; .data.rel.ro:000000000001D408↓o
.text:0000000000014EE8 var_10          = -0x10
.text:0000000000014EE8 var_s0          =  0
.text:0000000000014EE8 ; __unwind {
.text:0000000000014EE8                 STP             X20, X19, [SP,#-0x10+var_10]!
.text:0000000000014EEC                 STP             X29, X30, [SP,#0x10+var_s0]
.text:0000000000014EF0                 ADD             X29, SP, #0x10
.text:0000000000014EF4                 CBZ             X2, loc_14F28
.text:0000000000014EF8                 MOV             X19, X2
.text:0000000000014EFC                 MOV             X20, X1
.text:0000000000014F00 loc_14F00                               ; CODE XREF: android::Vector<android::sp<android::ApexMediaBuffer>>::do_destroy(void *,ulong)+3C↓j
.text:0000000000014F00                 LDR             X8, [X20]
.text:0000000000014F04                 SUB             X19, X19, #1
.text:0000000000014F08                 CBZ             X8, loc_14F20
.text:0000000000014F0C                 LDR             X9, [X8]
.text:0000000000014F10                 MOV             X1, X20 ; void *
.text:0000000000014F14                 LDUR            X9, [X9,#-0x18]
.text:0000000000014F18                 ADD             X0, X8, X9 ; this
.text:0000000000014F1C                 BL              ._ZNK7android7RefBase9decStrongEPKv ; android::RefBase::decStrong(void const*)
.text:0000000000014F20 loc_14F20                               ; CODE XREF: android::Vector<android::sp<android::ApexMediaBuffer>>::do_destroy(void *,ulong)+20↑j
.text:0000000000014F20                 ADD             X20, X20, #8
.text:0000000000014F24                 CBNZ            X19, loc_14F00
.text:0000000000014F28 loc_14F28                               ; CODE XREF: android::Vector<android::sp<android::ApexMediaBuffer>>::do_destroy(void *,ulong)+C↑j
.text:0000000000014F28                 LDP             X29, X30, [SP,#0x10+var_s0]
.text:0000000000014F2C                 LDP             X20, X19, [SP+0x10+var_10],#0x20
.text:0000000000014F30                 RET
.text:0000000000014F30 ; } // starts at 14EE8
.text:0000000000014F30 ; End of function android::Vector<android::sp<android::ApexMediaBuffer>>::do_destroy(void *,ulong)
.text:0000000000014F30 ; ---------------------------------------------------------------------------
.text:0000000000014F34                 ALIGN 8
.text:0000000000014F38 ; =============== S U B R O U T I N E =======================================
.text:0000000000014F38 ; Attributes: bp-based frame
.text:0000000000014F38 ; android::Vector<android::sp<android::ApexMediaBuffer>>::do_copy(void *, void const*, unsigned long)const
.text:0000000000014F38                 WEAK _ZNK7android6VectorINS_2spINS_15ApexMediaBufferEEEE7do_copyEPvPKvm
.text:0000000000014F38 _ZNK7android6VectorINS_2spINS_15ApexMediaBufferEEEE7do_copyEPvPKvm
.text:0000000000014F38                                         ; DATA XREF: LOAD:0000000000001050↑o
.text:0000000000014F38                                         ; .data.rel.ro:000000000001D410↓o
.text:0000000000014F38 var_20          = -0x20
.text:0000000000014F38 var_10          = -0x10
.text:0000000000014F38 var_s0          =  0
.text:0000000000014F38 ; __unwind {
.text:0000000000014F38                 STR             X21, [SP,#-0x10+var_20]!
.text:0000000000014F3C                 STP             X20, X19, [SP,#0x20+var_10]
.text:0000000000014F40                 STP             X29, X30, [SP,#0x20+var_s0]
.text:0000000000014F44                 ADD             X29, SP, #0x20
.text:0000000000014F48                 CBZ             X3, loc_14F88
.text:0000000000014F4C                 MOV             X19, X3
.text:0000000000014F50                 MOV             X20, X2
.text:0000000000014F54                 MOV             X21, X1
.text:0000000000014F58 loc_14F58                               ; CODE XREF: android::Vector<android::sp<android::ApexMediaBuffer>>::do_copy(void *,void const*,ulong)+4C↓j
.text:0000000000014F58                 LDR             X8, [X20]
.text:0000000000014F5C                 SUB             X19, X19, #1
.text:0000000000014F60                 STR             X8, [X21]
.text:0000000000014F64                 CBZ             X8, loc_14F7C
.text:0000000000014F68                 LDR             X9, [X8]
.text:0000000000014F6C                 MOV             X1, X21 ; void *
.text:0000000000014F70                 LDUR            X9, [X9,#-0x18]
.text:0000000000014F74                 ADD             X0, X8, X9 ; this
.text:0000000000014F78                 BL              ._ZNK7android7RefBase9incStrongEPKv ; android::RefBase::incStrong(void const*)
.text:0000000000014F7C loc_14F7C                               ; CODE XREF: android::Vector<android::sp<android::ApexMediaBuffer>>::do_copy(void *,void const*,ulong)+2C↑j
.text:0000000000014F7C                 ADD             X21, X21, #8
.text:0000000000014F80                 ADD             X20, X20, #8
.text:0000000000014F84                 CBNZ            X19, loc_14F58
.text:0000000000014F88 loc_14F88                               ; CODE XREF: android::Vector<android::sp<android::ApexMediaBuffer>>::do_copy(void *,void const*,ulong)+10↑j
.text:0000000000014F88                 LDP             X29, X30, [SP,#0x20+var_s0]
.text:0000000000014F8C                 LDP             X20, X19, [SP,#0x20+var_10]
.text:0000000000014F90                 LDR             X21, [SP+0x20+var_20],#0x30
.text:0000000000014F94                 RET
.text:0000000000014F94 ; } // starts at 14F38
.text:0000000000014F94 ; End of function android::Vector<android::sp<android::ApexMediaBuffer>>::do_copy(void *,void const*,ulong)
.text:0000000000014F98 ; =============== S U B R O U T I N E =======================================
.text:0000000000014F98 ; Attributes: bp-based frame
.text:0000000000014F98 ; android::Vector<android::sp<android::ApexMediaBuffer>>::do_splat(void *, void const*, unsigned long)const
.text:0000000000014F98                 WEAK _ZNK7android6VectorINS_2spINS_15ApexMediaBufferEEEE8do_splatEPvPKvm
.text:0000000000014F98 _ZNK7android6VectorINS_2spINS_15ApexMediaBufferEEEE8do_splatEPvPKvm
.text:0000000000014F98                                         ; DATA XREF: LOAD:0000000000001E30↑o
.text:0000000000014F98                                         ; .data.rel.ro:000000000001D418↓o
.text:0000000000014F98 var_20          = -0x20
.text:0000000000014F98 var_10          = -0x10
.text:0000000000014F98 var_s0          =  0
.text:0000000000014F98 ; __unwind {
.text:0000000000014F98                 STR             X21, [SP,#-0x10+var_20]!
.text:0000000000014F9C                 STP             X20, X19, [SP,#0x20+var_10]
.text:0000000000014FA0                 STP             X29, X30, [SP,#0x20+var_s0]
.text:0000000000014FA4                 ADD             X29, SP, #0x20
.text:0000000000014FA8                 CBZ             X3, loc_14FE4
.text:0000000000014FAC                 MOV             X19, X3
.text:0000000000014FB0                 MOV             X20, X2
.text:0000000000014FB4                 MOV             X21, X1
.text:0000000000014FB8 loc_14FB8                               ; CODE XREF: android::Vector<android::sp<android::ApexMediaBuffer>>::do_splat(void *,void const*,ulong)+48↓j
.text:0000000000014FB8                 LDR             X8, [X20]
.text:0000000000014FBC                 SUB             X19, X19, #1
.text:0000000000014FC0                 STR             X8, [X21]
.text:0000000000014FC4                 CBZ             X8, loc_14FDC
.text:0000000000014FC8                 LDR             X9, [X8]
.text:0000000000014FCC                 MOV             X1, X21 ; void *
.text:0000000000014FD0                 LDUR            X9, [X9,#-0x18]
.text:0000000000014FD4                 ADD             X0, X8, X9 ; this
.text:0000000000014FD8                 BL              ._ZNK7android7RefBase9incStrongEPKv ; android::RefBase::incStrong(void const*)
.text:0000000000014FDC loc_14FDC                               ; CODE XREF: android::Vector<android::sp<android::ApexMediaBuffer>>::do_splat(void *,void const*,ulong)+2C↑j
.text:0000000000014FDC                 ADD             X21, X21, #8
.text:0000000000014FE0                 CBNZ            X19, loc_14FB8
.text:0000000000014FE4 loc_14FE4                               ; CODE XREF: android::Vector<android::sp<android::ApexMediaBuffer>>::do_splat(void *,void const*,ulong)+10↑j
.text:0000000000014FE4                 LDP             X29, X30, [SP,#0x20+var_s0]
.text:0000000000014FE8                 LDP             X20, X19, [SP,#0x20+var_10]
.text:0000000000014FEC                 LDR             X21, [SP+0x20+var_20],#0x30
.text:0000000000014FF0                 RET
.text:0000000000014FF0 ; } // starts at 14F98
.text:0000000000014FF0 ; End of function android::Vector<android::sp<android::ApexMediaBuffer>>::do_splat(void *,void const*,ulong)
.text:0000000000014FF0 ; ---------------------------------------------------------------------------
.text:0000000000014FF4                 ALIGN 8
.text:0000000000014FF8 ; =============== S U B R O U T I N E =======================================
.text:0000000000014FF8 ; Attributes: bp-based frame
.text:0000000000014FF8 ; android::Vector<android::sp<android::ApexMediaBuffer>>::do_move_forward(void *, void const*, unsigned long)const
.text:0000000000014FF8                 WEAK _ZNK7android6VectorINS_2spINS_15ApexMediaBufferEEEE15do_move_forwardEPvPKvm
.text:0000000000014FF8 _ZNK7android6VectorINS_2spINS_15ApexMediaBufferEEEE15do_move_forwardEPvPKvm
.text:0000000000014FF8                                         ; DATA XREF: LOAD:00000000000012A8↑o
.text:0000000000014FF8                                         ; .data.rel.ro:000000000001D420↓o
.text:0000000000014FF8 var_40          = -0x40
.text:0000000000014FF8 var_30          = -0x30
.text:0000000000014FF8 var_28          = -0x28
.text:0000000000014FF8 var_20          = -0x20
.text:0000000000014FF8 var_10          = -0x10
.text:0000000000014FF8 var_s0          =  0
.text:0000000000014FF8 ; __unwind {
.text:0000000000014FF8                 SUB             SP, SP, #0x50
.text:0000000000014FFC                 STP             X22, X21, [SP,#0x40+var_20]
.text:0000000000015000                 STP             X20, X19, [SP,#0x40+var_10]
.text:0000000000015004                 STP             X29, X30, [SP,#0x40+var_s0]
.text:0000000000015008                 ADD             X29, SP, #0x40
.text:000000000001500C                 MRS             X22, #3, c13, c0, #2
.text:0000000000015010                 MOV             X20, X2
.text:0000000000015014                 LDR             X8, [X22,#0x28]
.text:0000000000015018                 MOV             X21, X1
.text:000000000001501C                 MOV             X0, X1  ; dest
.text:0000000000015020                 MOV             X1, X20 ; src
.text:0000000000015024                 LSL             X2, X3, #3 ; n
.text:0000000000015028                 MOV             X19, X3
.text:000000000001502C                 STR             X8, [SP,#0x40+var_28]
.text:0000000000015030                 BL              .memmove
.text:0000000000015034                 ADRP            X8, #off_1D440@PAGE
.text:0000000000015038                 STR             X20, [SP,#0x40+var_30]
.text:000000000001503C                 ADD             X8, X8, #off_1D440@PAGEOFF
.text:0000000000015040                 MOV             X1, SP
.text:0000000000015044                 MOV             X0, X19
.text:0000000000015048                 STP             X8, X21, [SP,#0x40+var_40]
.text:000000000001504C                 BL              ._ZN7android7RefBase10renameRefsEmRKNS_16ReferenceRenamerE ; android::RefBase::renameRefs(ulong,android::ReferenceRenamer const&)
.text:0000000000015050                 LDR             X8, [X22,#0x28]
.text:0000000000015054                 LDR             X9, [SP,#0x40+var_28]
.text:0000000000015058                 CMP             X8, X9
.text:000000000001505C                 B.NE            loc_15074
.text:0000000000015060                 LDP             X29, X30, [SP,#0x40+var_s0]
.text:0000000000015064                 LDP             X20, X19, [SP,#0x40+var_10]
.text:0000000000015068                 LDP             X22, X21, [SP,#0x40+var_20]
.text:000000000001506C                 ADD             SP, SP, #0x50 ; 'P'
.text:0000000000015070                 RET
.text:0000000000015074 ; ---------------------------------------------------------------------------
.text:0000000000015074 loc_15074                               ; CODE XREF: android::Vector<android::sp<android::ApexMediaBuffer>>::do_move_forward(void *,void const*,ulong)+64↑j
.text:0000000000015074                 BL              .__stack_chk_fail
.text:0000000000015074 ; } // starts at 14FF8
.text:0000000000015074 ; End of function android::Vector<android::sp<android::ApexMediaBuffer>>::do_move_forward(void *,void const*,ulong)
.text:0000000000015078 ; =============== S U B R O U T I N E =======================================
.text:0000000000015078 ; Attributes: bp-based frame
.text:0000000000015078 ; android::Vector<android::sp<android::ApexMediaBuffer>>::do_move_backward(void *, void const*, unsigned long)const
.text:0000000000015078                 WEAK _ZNK7android6VectorINS_2spINS_15ApexMediaBufferEEEE16do_move_backwardEPvPKvm
.text:0000000000015078 _ZNK7android6VectorINS_2spINS_15ApexMediaBufferEEEE16do_move_backwardEPvPKvm
.text:0000000000015078                                         ; DATA XREF: LOAD:00000000000018A8↑o
.text:0000000000015078                                         ; .data.rel.ro:000000000001D428↓o
.text:0000000000015078 var_40          = -0x40
.text:0000000000015078 var_30          = -0x30
.text:0000000000015078 var_28          = -0x28
.text:0000000000015078 var_20          = -0x20
.text:0000000000015078 var_10          = -0x10
.text:0000000000015078 var_s0          =  0
.text:0000000000015078 ; __unwind {
.text:0000000000015078                 SUB             SP, SP, #0x50
.text:000000000001507C                 STP             X22, X21, [SP,#0x40+var_20]
.text:0000000000015080                 STP             X20, X19, [SP,#0x40+var_10]
.text:0000000000015084                 STP             X29, X30, [SP,#0x40+var_s0]
.text:0000000000015088                 ADD             X29, SP, #0x40
.text:000000000001508C                 MRS             X22, #3, c13, c0, #2
.text:0000000000015090                 MOV             X20, X2
.text:0000000000015094                 LDR             X8, [X22,#0x28]
.text:0000000000015098                 MOV             X21, X1
.text:000000000001509C                 MOV             X0, X1  ; dest
.text:00000000000150A0                 MOV             X1, X20 ; src
.text:00000000000150A4                 LSL             X2, X3, #3 ; n
.text:00000000000150A8                 MOV             X19, X3
.text:00000000000150AC                 STR             X8, [SP,#0x40+var_28]
.text:00000000000150B0                 BL              .memmove
.text:00000000000150B4                 ADRP            X8, #off_1D440@PAGE
.text:00000000000150B8                 STR             X20, [SP,#0x40+var_30]
.text:00000000000150BC                 ADD             X8, X8, #off_1D440@PAGEOFF
.text:00000000000150C0                 MOV             X1, SP
.text:00000000000150C4                 MOV             X0, X19
.text:00000000000150C8                 STP             X8, X21, [SP,#0x40+var_40]
.text:00000000000150CC                 BL              ._ZN7android7RefBase10renameRefsEmRKNS_16ReferenceRenamerE ; android::RefBase::renameRefs(ulong,android::ReferenceRenamer const&)
.text:00000000000150D0                 LDR             X8, [X22,#0x28]
.text:00000000000150D4                 LDR             X9, [SP,#0x40+var_28]
.text:00000000000150D8                 CMP             X8, X9
.text:00000000000150DC                 B.NE            loc_150F4
.text:00000000000150E0                 LDP             X29, X30, [SP,#0x40+var_s0]
.text:00000000000150E4                 LDP             X20, X19, [SP,#0x40+var_10]
.text:00000000000150E8                 LDP             X22, X21, [SP,#0x40+var_20]
.text:00000000000150EC                 ADD             SP, SP, #0x50 ; 'P'
.text:00000000000150F0                 RET
.text:00000000000150F4 ; ---------------------------------------------------------------------------
.text:00000000000150F4 loc_150F4                               ; CODE XREF: android::Vector<android::sp<android::ApexMediaBuffer>>::do_move_backward(void *,void const*,ulong)+64↑j
.text:00000000000150F4                 BL              .__stack_chk_fail
.text:00000000000150F4 ; } // starts at 15078
.text:00000000000150F4 ; End of function android::Vector<android::sp<android::ApexMediaBuffer>>::do_move_backward(void *,void const*,ulong)
.text:00000000000150F8 ; =============== S U B R O U T I N E =======================================
.text:00000000000150F8 sub_150F8                               ; DATA XREF: .data.rel.ro:off_1D440↓o
.text:00000000000150F8 ; __unwind {
.text:00000000000150F8                 LDR             X8, [X0,#8]
.text:00000000000150FC                 ADD             X2, X8, X1,LSL#3 ; void *
.text:0000000000015100                 LDR             X8, [X2]
.text:0000000000015104                 CBZ             X8, loc_15114
.text:0000000000015108                 LDR             X9, [X8]
.text:000000000001510C                 LDUR            X9, [X9,#-0x18]
.text:0000000000015110                 ADD             X8, X8, X9
.text:0000000000015114 loc_15114                               ; CODE XREF: sub_150F8+C↑j
.text:0000000000015114                 LDR             X9, [X0,#0x10]
.text:0000000000015118                 MOV             X0, X8  ; this
.text:000000000001511C                 ADD             X1, X9, X1,LSL#3 ; android::RefBase *
.text:0000000000015120                 B               ._ZN7android7RefBase11renameRefIdEPS0_PKvS3_ ; android::RefBase::renameRefId(android::RefBase*,void const*,void const*)
.text:0000000000015120 ; } // starts at 150F8
.text:0000000000015120 ; End of function sub_150F8
.text:0000000000015120 ; ---------------------------------------------------------------------------
.text:0000000000015124                 ALIGN 8
.text:0000000000015128 ; __unwind {
.text:0000000000015128                 STP             X20, X19, [SP,#-0x20]!
.text:000000000001512C                 STP             X29, X30, [SP,#0x10]
.text:0000000000015130                 ADD             X29, SP, #0x10
.text:0000000000015134                 ADRP            X8, #_ZTVN7android17AHandlerReflectorINS_11HeifEncoderEEE_ptr@PAGE
.text:0000000000015138                 MOV             X1, X0
.text:000000000001513C                 MOV             X19, X0
.text:0000000000015140                 LDR             X8, [X8,#_ZTVN7android17AHandlerReflectorINS_11HeifEncoderEEE_ptr@PAGEOFF]
.text:0000000000015144                 ADD             X8, X8, #0x10
.text:0000000000015148                 STR             X8, [X0]
.text:000000000001514C                 LDR             X8, [X1,#0x58]!
.text:0000000000015150                 CBZ             X8, loc_1515C
.text:0000000000015154                 LDR             X0, [X19,#0x60]
.text:0000000000015158                 BL              ._ZN7android7RefBase12weakref_type7decWeakEPKv ; android::RefBase::weakref_type::decWeak(void const*)
.text:000000000001515C loc_1515C                               ; CODE XREF: .text:0000000000015150↑j
.text:000000000001515C                 ADRP            X8, #_ZTVN7android12SortedVectorINS_16key_value_pair_tIjjEEEE_ptr@PAGE
.text:0000000000015160                 ADRP            X9, #_ZTVN7android8AHandlerE_ptr@PAGE
.text:0000000000015164                 MOV             X20, X19
.text:0000000000015168                 LDR             X8, [X8,#_ZTVN7android12SortedVectorINS_16key_value_pair_tIjjEEEE_ptr@PAGEOFF]
.text:000000000001516C                 LDR             X9, [X9,#_ZTVN7android8AHandlerE_ptr@PAGEOFF]
.text:0000000000015170                 ADD             X8, X8, #0x10
.text:0000000000015174                 ADD             X9, X9, #0x10
.text:0000000000015178                 STR             X8, [X20,#0x30]!
.text:000000000001517C                 MOV             X0, X20
.text:0000000000015180                 STR             X9, [X19]
.text:0000000000015184                 BL              ._ZN7android10VectorImpl13finish_vectorEv ; android::VectorImpl::finish_vector(void)
.text:0000000000015188                 MOV             X0, X20
.text:000000000001518C                 BL              ._ZN7android16SortedVectorImplD2Ev ; android::SortedVectorImpl::~SortedVectorImpl()
.text:0000000000015190                 MOV             X1, X19
.text:0000000000015194                 LDR             X8, [X1,#0x18]!
.text:0000000000015198                 CBZ             X8, loc_151A4
.text:000000000001519C                 LDR             X0, [X19,#0x20]
.text:00000000000151A0                 BL              ._ZN7android7RefBase12weakref_type7decWeakEPKv ; android::RefBase::weakref_type::decWeak(void const*)
.text:00000000000151A4 loc_151A4                               ; CODE XREF: .text:0000000000015198↑j
.text:00000000000151A4                 LDP             X29, X30, [SP,#0x10]
.text:00000000000151A8                 MOV             X0, X19
.text:00000000000151AC                 LDP             X20, X19, [SP],#0x20
.text:00000000000151B0                 B               ._ZN7android7RefBaseD2Ev ; android::RefBase::~RefBase()
.text:00000000000151B0 ; } // starts at 15128
.text:00000000000151B0 ; ---------------------------------------------------------------------------
.text:00000000000151B4                 ALIGN 8
.text:00000000000151B8 ; __unwind {
.text:00000000000151B8                 STP             X20, X19, [SP,#-0x20]!
.text:00000000000151BC                 STP             X29, X30, [SP,#0x10]
.text:00000000000151C0                 ADD             X29, SP, #0x10
.text:00000000000151C4                 ADRP            X8, #_ZTVN7android17AHandlerReflectorINS_11HeifEncoderEEE_ptr@PAGE
.text:00000000000151C8                 MOV             X1, X0
.text:00000000000151CC                 MOV             X19, X0
.text:00000000000151D0                 LDR             X8, [X8,#_ZTVN7android17AHandlerReflectorINS_11HeifEncoderEEE_ptr@PAGEOFF]
.text:00000000000151D4                 ADD             X8, X8, #0x10
.text:00000000000151D8                 STR             X8, [X0]
.text:00000000000151DC                 LDR             X8, [X1,#0x58]!
.text:00000000000151E0                 CBZ             X8, loc_151EC
.text:00000000000151E4                 LDR             X0, [X19,#0x60]
.text:00000000000151E8                 BL              ._ZN7android7RefBase12weakref_type7decWeakEPKv ; android::RefBase::weakref_type::decWeak(void const*)
.text:00000000000151EC loc_151EC                               ; CODE XREF: .text:00000000000151E0↑j
.text:00000000000151EC                 ADRP            X8, #_ZTVN7android12SortedVectorINS_16key_value_pair_tIjjEEEE_ptr@PAGE
.text:00000000000151F0                 ADRP            X9, #_ZTVN7android8AHandlerE_ptr@PAGE
.text:00000000000151F4                 MOV             X20, X19
.text:00000000000151F8                 LDR             X8, [X8,#_ZTVN7android12SortedVectorINS_16key_value_pair_tIjjEEEE_ptr@PAGEOFF]
.text:00000000000151FC                 LDR             X9, [X9,#_ZTVN7android8AHandlerE_ptr@PAGEOFF]
.text:0000000000015200                 ADD             X8, X8, #0x10
.text:0000000000015204                 ADD             X9, X9, #0x10
.text:0000000000015208                 STR             X8, [X20,#0x30]!
.text:000000000001520C                 MOV             X0, X20
.text:0000000000015210                 STR             X9, [X19]
.text:0000000000015214                 BL              ._ZN7android10VectorImpl13finish_vectorEv ; android::VectorImpl::finish_vector(void)
.text:0000000000015218                 MOV             X0, X20
.text:000000000001521C                 BL              ._ZN7android16SortedVectorImplD2Ev ; android::SortedVectorImpl::~SortedVectorImpl()
.text:0000000000015220                 MOV             X1, X19
.text:0000000000015224                 LDR             X8, [X1,#0x18]!
.text:0000000000015228                 CBZ             X8, loc_15234
.text:000000000001522C                 LDR             X0, [X19,#0x20]
.text:0000000000015230                 BL              ._ZN7android7RefBase12weakref_type7decWeakEPKv ; android::RefBase::weakref_type::decWeak(void const*)
.text:0000000000015234 loc_15234                               ; CODE XREF: .text:0000000000015228↑j
.text:0000000000015234                 MOV             X0, X19
.text:0000000000015238                 BL              ._ZN7android7RefBaseD2Ev ; android::RefBase::~RefBase()
.text:000000000001523C                 LDP             X29, X30, [SP,#0x10]
.text:0000000000015240                 MOV             X0, X19
.text:0000000000015244                 LDP             X20, X19, [SP],#0x20
.text:0000000000015248                 B               ._ZdlPv ; operator delete(void *)
.text:0000000000015248 ; } // starts at 151B8
.text:0000000000015248 ; ---------------------------------------------------------------------------
.text:000000000001524C                 ALIGN 0x10
.text:0000000000015250 ; =============== S U B R O U T I N E =======================================
.text:0000000000015250 ; Attributes: bp-based frame
.text:0000000000015250 sub_15250                               ; DATA XREF: .data.rel.ro:000000000001D498↓o
.text:0000000000015250 var_30          = -0x30
.text:0000000000015250 var_28          = -0x28
.text:0000000000015250 var_20          = -0x20
.text:0000000000015250 var_10          = -0x10
.text:0000000000015250 var_s0          =  0
.text:0000000000015250 ; __unwind {
.text:0000000000015250                 SUB             SP, SP, #0x40
.text:0000000000015254                 STR             X21, [SP,#0x30+var_20]
.text:0000000000015258                 STP             X20, X19, [SP,#0x30+var_10]
.text:000000000001525C                 STP             X29, X30, [SP,#0x30+var_s0]
.text:0000000000015260                 ADD             X29, SP, #0x30
.text:0000000000015264                 MRS             X21, #3, c13, c0, #2
.text:0000000000015268                 LDR             X8, [X21,#0x28]
.text:000000000001526C                 STR             X8, [SP,#0x30+var_28]
.text:0000000000015270                 LDR             X8, [X0,#0x58]
.text:0000000000015274                 STR             XZR, [SP,#0x30+var_30]
.text:0000000000015278                 CBZ             X8, loc_152C4
.text:000000000001527C                 MOV             X20, X0
.text:0000000000015280                 LDR             X0, [X0,#0x60] ; this
.text:0000000000015284                 MOV             X19, X1
.text:0000000000015288                 MOV             X1, SP  ; void *
.text:000000000001528C                 BL              ._ZN7android7RefBase12weakref_type16attemptIncStrongEPKv ; android::RefBase::weakref_type::attemptIncStrong(void const*)
.text:0000000000015290                 TBZ             W0, #0, loc_152A4
.text:0000000000015294                 LDR             X0, [X20,#0x58]
.text:0000000000015298                 STR             X0, [SP,#0x30+var_30]
.text:000000000001529C                 CBNZ            X0, loc_152AC
.text:00000000000152A0                 B               loc_152B8
.text:00000000000152A4 ; ---------------------------------------------------------------------------
.text:00000000000152A4 loc_152A4                               ; CODE XREF: sub_15250+40↑j
.text:00000000000152A4                 LDR             X0, [SP,#0x30+var_30]
.text:00000000000152A8                 CBZ             X0, loc_152B8
.text:00000000000152AC loc_152AC                               ; CODE XREF: sub_15250+4C↑j
.text:00000000000152AC                 MOV             X1, X19
.text:00000000000152B0                 BL              ._ZN7android11HeifEncoder17onMessageReceivedERKNS_2spINS_8AMessageEEE ; android::HeifEncoder::onMessageReceived(android::sp<android::AMessage> const&)
.text:00000000000152B4                 LDR             X0, [SP,#0x30+var_30] ; this
.text:00000000000152B8 loc_152B8                               ; CODE XREF: sub_15250+50↑j
.text:00000000000152B8                                         ; sub_15250+58↑j
.text:00000000000152B8                 CBZ             X0, loc_152C4
.text:00000000000152BC                 MOV             X1, SP  ; void *
.text:00000000000152C0                 BL              ._ZNK7android7RefBase9decStrongEPKv ; android::RefBase::decStrong(void const*)
.text:00000000000152C4 loc_152C4                               ; CODE XREF: sub_15250+28↑j
.text:00000000000152C4                                         ; sub_15250:loc_152B8↑j
.text:00000000000152C4                 LDR             X8, [X21,#0x28]
.text:00000000000152C8                 LDR             X9, [SP,#0x30+var_28]
.text:00000000000152CC                 CMP             X8, X9
.text:00000000000152D0                 B.NE            loc_152E8
.text:00000000000152D4                 LDP             X29, X30, [SP,#0x30+var_s0]
.text:00000000000152D8                 LDP             X20, X19, [SP,#0x30+var_10]
.text:00000000000152DC                 LDR             X21, [SP,#0x30+var_20]
.text:00000000000152E0                 ADD             SP, SP, #0x40 ; '@'
.text:00000000000152E4                 RET
.text:00000000000152E8 ; ---------------------------------------------------------------------------
.text:00000000000152E8 loc_152E8                               ; CODE XREF: sub_15250+80↑j
.text:00000000000152E8                 BL              .__stack_chk_fail
.text:00000000000152E8 ; } // starts at 15250
.text:00000000000152E8 ; End of function sub_15250
.text:00000000000152E8 ; ---------------------------------------------------------------------------
.text:00000000000152EC                 ALIGN 0x10
.text:00000000000152F0 ; __unwind {
.text:00000000000152F0                 STP             X20, X19, [SP,#-0x20]!
.text:00000000000152F4                 STP             X29, X30, [SP,#0x10]
.text:00000000000152F8                 ADD             X29, SP, #0x10
.text:00000000000152FC                 ADRP            X8, #_ZTVN7android12SortedVectorINS_16key_value_pair_tIjjEEEE_ptr@PAGE
.text:0000000000015300                 ADRP            X9, #_ZTVN7android8AHandlerE_ptr@PAGE
.text:0000000000015304                 MOV             X20, X0
.text:0000000000015308                 LDR             X8, [X8,#_ZTVN7android12SortedVectorINS_16key_value_pair_tIjjEEEE_ptr@PAGEOFF]
.text:000000000001530C                 MOV             X19, X0
.text:0000000000015310                 LDR             X9, [X9,#_ZTVN7android8AHandlerE_ptr@PAGEOFF]
.text:0000000000015314                 ADD             X8, X8, #0x10
.text:0000000000015318                 ADD             X9, X9, #0x10
.text:000000000001531C                 STR             X8, [X20,#0x30]!
.text:0000000000015320                 STR             X9, [X0]
.text:0000000000015324                 MOV             X0, X20
.text:0000000000015328                 BL              ._ZN7android10VectorImpl13finish_vectorEv ; android::VectorImpl::finish_vector(void)
.text:000000000001532C                 MOV             X0, X20
.text:0000000000015330                 BL              ._ZN7android16SortedVectorImplD2Ev ; android::SortedVectorImpl::~SortedVectorImpl()
.text:0000000000015334                 MOV             X1, X19
.text:0000000000015338                 LDR             X8, [X1,#0x18]!
.text:000000000001533C                 CBZ             X8, loc_15348
.text:0000000000015340                 LDR             X0, [X19,#0x20]
.text:0000000000015344                 BL              ._ZN7android7RefBase12weakref_type7decWeakEPKv ; android::RefBase::weakref_type::decWeak(void const*)
.text:0000000000015348 loc_15348                               ; CODE XREF: .text:000000000001533C↑j
.text:0000000000015348                 LDP             X29, X30, [SP,#0x10]
.text:000000000001534C                 MOV             X0, X19
.text:0000000000015350                 LDP             X20, X19, [SP],#0x20
.text:0000000000015354                 B               ._ZN7android7RefBaseD2Ev ; android::RefBase::~RefBase()
.text:0000000000015354 ; } // starts at 152F0
.text:0000000000015354 ; ---------------------------------------------------------------------------
.text:0000000000015358 ; __unwind {
.text:0000000000015358                 DCQ 0xD4200020, 0xA9017BFDF81E0FF3, 0x90000048910043FD
.text:0000000000015358                 DCQ 0xF9440D08AA0003F3, 0xF900000891004108, 0xA9417BFD940014E8
.text:0000000000015358                 DCQ 0xF84207F3AA1303E0, 0x14001708, 0xA9017BFDF81E0FF3
.text:0000000000015358                 DCQ 0x90000048910043FD, 0xF9440D08AA0003F3, 0xF900000891004108
.text:0000000000015358                 DCQ 0xAA1303E0940014DA, 0xA9417BFD940016FC, 0xF84207F3AA1303E0
.text:0000000000015358                 DCQ 0x140014F8
.text:00000000000153D8 ; =============== S U B R O U T I N E =======================================
.text:00000000000153D8 ; android::SortedVector<android::key_value_pair_t<unsigned int, unsigned int>>::do_construct(void *, unsigned long)const
.text:00000000000153D8                 WEAK _ZNK7android12SortedVectorINS_16key_value_pair_tIjjEEE12do_constructEPvm
.text:00000000000153D8 _ZNK7android12SortedVectorINS_16key_value_pair_tIjjEEE12do_constructEPvm
.text:00000000000153D8                                         ; DATA XREF: LOAD:00000000000013F8↑o
.text:00000000000153D8                                         ; .data.rel.ro:000000000001D508↓o
.text:00000000000153D8 ; __unwind {
.text:00000000000153D8                 RET
.text:00000000000153D8 ; } // starts at 153D8
.text:00000000000153D8 ; End of function android::SortedVector<android::key_value_pair_t<uint,uint>>::do_construct(void *,ulong)
.text:00000000000153D8 ; ---------------------------------------------------------------------------
.text:00000000000153DC                 ALIGN 0x20
.text:00000000000153E0 ; =============== S U B R O U T I N E =======================================
.text:00000000000153E0 ; android::SortedVector<android::key_value_pair_t<unsigned int, unsigned int>>::do_destroy(void *, unsigned long)const
.text:00000000000153E0                 WEAK _ZNK7android12SortedVectorINS_16key_value_pair_tIjjEEE10do_destroyEPvm
.text:00000000000153E0 _ZNK7android12SortedVectorINS_16key_value_pair_tIjjEEE10do_destroyEPvm
.text:00000000000153E0                                         ; DATA XREF: LOAD:0000000000001C38↑o
.text:00000000000153E0                                         ; .data.rel.ro:000000000001D510↓o
.text:00000000000153E0 ; __unwind {
.text:00000000000153E0                 RET
.text:00000000000153E0 ; } // starts at 153E0
.text:00000000000153E0 ; End of function android::SortedVector<android::key_value_pair_t<uint,uint>>::do_destroy(void *,ulong)
.text:00000000000153E0 ; ---------------------------------------------------------------------------
.text:00000000000153E4                 ALIGN 8
.text:00000000000153E8 ; =============== S U B R O U T I N E =======================================
.text:00000000000153E8 ; Attributes: bp-based frame
.text:00000000000153E8 ; android::SortedVector<android::key_value_pair_t<unsigned int, unsigned int>>::do_copy(void *, void const*, unsigned long)const
.text:00000000000153E8                 WEAK _ZNK7android12SortedVectorINS_16key_value_pair_tIjjEEE7do_copyEPvPKvm
.text:00000000000153E8 _ZNK7android12SortedVectorINS_16key_value_pair_tIjjEEE7do_copyEPvPKvm
.text:00000000000153E8                                         ; DATA XREF: LOAD:0000000000001560↑o
.text:00000000000153E8                                         ; .data.rel.ro:000000000001D518↓o
.text:00000000000153E8 var_s0          =  0
.text:00000000000153E8 ; __unwind {
.text:00000000000153E8                 STP             X29, X30, [SP,#-0x10+var_s0]!
.text:00000000000153EC                 MOV             X29, SP
.text:00000000000153F0                 MOV             X8, X2
.text:00000000000153F4                 MOV             X0, X1  ; dest
.text:00000000000153F8                 MOV             X1, X8  ; src
.text:00000000000153FC                 LSL             X2, X3, #3 ; n
.text:0000000000015400                 BL              .memcpy
.text:0000000000015404                 LDP             X29, X30, [SP+var_s0],#0x10
.text:0000000000015408                 RET
.text:0000000000015408 ; } // starts at 153E8
.text:0000000000015408 ; End of function android::SortedVector<android::key_value_pair_t<uint,uint>>::do_copy(void *,void const*,ulong)
.text:0000000000015408 ; ---------------------------------------------------------------------------
.text:000000000001540C                 ALIGN 0x10
.text:0000000000015410 ; =============== S U B R O U T I N E =======================================
.text:0000000000015410 ; android::SortedVector<android::key_value_pair_t<unsigned int, unsigned int>>::do_splat(void *, void const*, unsigned long)const
.text:0000000000015410                 WEAK _ZNK7android12SortedVectorINS_16key_value_pair_tIjjEEE8do_splatEPvPKvm
.text:0000000000015410 _ZNK7android12SortedVectorINS_16key_value_pair_tIjjEEE8do_splatEPvPKvm
.text:0000000000015410                                         ; DATA XREF: LOAD:0000000000001A58↑o
.text:0000000000015410                                         ; .data.rel.ro:000000000001D520↓o
.text:0000000000015410 ; __unwind {
.text:0000000000015410                 CBZ             X3, locret_1545C
.text:0000000000015414                 CMP             X3, #8
.text:0000000000015418                 B.CC            loc_15438
.text:000000000001541C                 ADD             X8, X2, #5
.text:0000000000015420                 CMP             X8, X1
.text:0000000000015424                 B.LS            loc_15460
.text:0000000000015428                 ADD             X8, X2, #4
.text:000000000001542C                 ADD             X9, X1, X3,LSL#3
.text:0000000000015430                 CMP             X8, X9
.text:0000000000015434                 B.CS            loc_15460
.text:0000000000015438 loc_15438                               ; CODE XREF: android::SortedVector<android::key_value_pair_t<uint,uint>>::do_splat(void *,void const*,ulong)+8↑j
.text:0000000000015438                 MOV             X8, X3
.text:000000000001543C                 MOV             X9, X1
.text:0000000000015440 loc_15440                               ; CODE XREF: android::SortedVector<android::key_value_pair_t<uint,uint>>::do_splat(void *,void const*,ulong)+48↓j
.text:0000000000015440                                         ; android::SortedVector<android::key_value_pair_t<uint,uint>>::do_splat(void *,void const*,ulong)+8C↓j
.text:0000000000015440                 LDR             W10, [X2]
.text:0000000000015444                 SUBS            X8, X8, #1
.text:0000000000015448                 STR             W10, [X9]
.text:000000000001544C                 LDR             W10, [X2,#4]
.text:0000000000015450                 STR             W10, [X9,#4]
.text:0000000000015454                 ADD             X9, X9, #8
.text:0000000000015458                 B.NE            loc_15440
.text:000000000001545C locret_1545C                            ; CODE XREF: android::SortedVector<android::key_value_pair_t<uint,uint>>::do_splat(void *,void const*,ulong)↑j
.text:000000000001545C                                         ; android::SortedVector<android::key_value_pair_t<uint,uint>>::do_splat(void *,void const*,ulong)+90↓j
.text:000000000001545C                 RET
.text:0000000000015460 ; ---------------------------------------------------------------------------
.text:0000000000015460 loc_15460                               ; CODE XREF: android::SortedVector<android::key_value_pair_t<uint,uint>>::do_splat(void *,void const*,ulong)+14↑j
.text:0000000000015460                                         ; android::SortedVector<android::key_value_pair_t<uint,uint>>::do_splat(void *,void const*,ulong)+24↑j
.text:0000000000015460                 AND             X10, X3, #0xFFFFFFFFFFFFFFF8
.text:0000000000015464                 SUB             X8, X3, X10
.text:0000000000015468                 ADD             X9, X1, X10,LSL#3
.text:000000000001546C                 ADD             X11, X1, #0x20 ; ' '
.text:0000000000015470                 MOV             X12, X10
.text:0000000000015474 loc_15474                               ; CODE XREF: android::SortedVector<android::key_value_pair_t<uint,uint>>::do_splat(void *,void const*,ulong)+84↓j
.text:0000000000015474                 MOV             X13, X2
.text:0000000000015478                 SUBS            X12, X12, #8
.text:000000000001547C                 LD1R            {V0.4S}, [X13],#0x10
.text:0000000000015480                 LD1R            {V1.4S}, [X13]
.text:0000000000015484                 SUB             X13, X11, #0x20 ; ' '
.text:0000000000015488                 ST2             {V0.4S-V1.4S}, [X11]
.text:000000000001548C                 ADD             X11, X11, #0x40 ; '@'
.text:0000000000015490                 ST2             {V0.4S-V1.4S}, [X13]
.text:0000000000015494                 B.NE            loc_15474
.text:0000000000015498                 CMP             X10, X3
.text:000000000001549C                 B.NE            loc_15440
.text:00000000000154A0                 B               locret_1545C
.text:00000000000154A0 ; } // starts at 15410
.text:00000000000154A0 ; End of function android::SortedVector<android::key_value_pair_t<uint,uint>>::do_splat(void *,void const*,ulong)
.text:00000000000154A0 ; ---------------------------------------------------------------------------
.text:00000000000154A4                 ALIGN 8
.text:00000000000154A8 ; =============== S U B R O U T I N E =======================================
.text:00000000000154A8 ; Attributes: bp-based frame
.text:00000000000154A8 ; android::SortedVector<android::key_value_pair_t<unsigned int, unsigned int>>::do_move_forward(void *, void const*, unsigned long)const
.text:00000000000154A8                 WEAK _ZNK7android12SortedVectorINS_16key_value_pair_tIjjEEE15do_move_forwardEPvPKvm
.text:00000000000154A8 _ZNK7android12SortedVectorINS_16key_value_pair_tIjjEEE15do_move_forwardEPvPKvm
.text:00000000000154A8                                         ; DATA XREF: LOAD:0000000000001AD0↑o
.text:00000000000154A8                                         ; .data.rel.ro:000000000001D528↓o
.text:00000000000154A8 var_s0          =  0
.text:00000000000154A8 ; __unwind {
.text:00000000000154A8                 STP             X29, X30, [SP,#-0x10+var_s0]!
.text:00000000000154AC                 MOV             X29, SP
.text:00000000000154B0                 MOV             X8, X2
.text:00000000000154B4                 MOV             X0, X1  ; dest
.text:00000000000154B8                 MOV             X1, X8  ; src
.text:00000000000154BC                 LSL             X2, X3, #3 ; n
.text:00000000000154C0                 BL              .memmove
.text:00000000000154C4                 LDP             X29, X30, [SP+var_s0],#0x10
.text:00000000000154C8                 RET
.text:00000000000154C8 ; } // starts at 154A8
.text:00000000000154C8 ; End of function android::SortedVector<android::key_value_pair_t<uint,uint>>::do_move_forward(void *,void const*,ulong)
.text:00000000000154C8 ; ---------------------------------------------------------------------------
.text:00000000000154CC                 ALIGN 0x10
.text:00000000000154D0 ; =============== S U B R O U T I N E =======================================
.text:00000000000154D0 ; Attributes: bp-based frame
.text:00000000000154D0 ; android::SortedVector<android::key_value_pair_t<unsigned int, unsigned int>>::do_move_backward(void *, void const*, unsigned long)const
.text:00000000000154D0                 WEAK _ZNK7android12SortedVectorINS_16key_value_pair_tIjjEEE16do_move_backwardEPvPKvm
.text:00000000000154D0 _ZNK7android12SortedVectorINS_16key_value_pair_tIjjEEE16do_move_backwardEPvPKvm
.text:00000000000154D0                                         ; DATA XREF: LOAD:0000000000000DE0↑o
.text:00000000000154D0                                         ; .data.rel.ro:000000000001D530↓o
.text:00000000000154D0 var_s0          =  0
.text:00000000000154D0 ; __unwind {
.text:00000000000154D0                 STP             X29, X30, [SP,#-0x10+var_s0]!
.text:00000000000154D4                 MOV             X29, SP
.text:00000000000154D8                 MOV             X8, X2
.text:00000000000154DC                 MOV             X0, X1  ; dest
.text:00000000000154E0                 MOV             X1, X8  ; src
.text:00000000000154E4                 LSL             X2, X3, #3 ; n
.text:00000000000154E8                 BL              .memmove
.text:00000000000154EC                 LDP             X29, X30, [SP+var_s0],#0x10
.text:00000000000154F0                 RET
.text:00000000000154F0 ; } // starts at 154D0
.text:00000000000154F0 ; End of function android::SortedVector<android::key_value_pair_t<uint,uint>>::do_move_backward(void *,void const*,ulong)
.text:00000000000154F0 ; ---------------------------------------------------------------------------
.text:00000000000154F4                 ALIGN 8
.text:00000000000154F8 ; =============== S U B R O U T I N E =======================================
.text:00000000000154F8 ; android::SortedVector<android::key_value_pair_t<unsigned int, unsigned int>>::do_compare(void const*, void const*)const
.text:00000000000154F8                 WEAK _ZNK7android12SortedVectorINS_16key_value_pair_tIjjEEE10do_compareEPKvS5_
.text:00000000000154F8 _ZNK7android12SortedVectorINS_16key_value_pair_tIjjEEE10do_compareEPKvS5_
.text:00000000000154F8                                         ; DATA XREF: LOAD:0000000000001E78↑o
.text:00000000000154F8                                         ; .data.rel.ro:000000000001D538↓o
.text:00000000000154F8 ; __unwind {
.text:00000000000154F8                 LDR             W8, [X2]
.text:00000000000154FC                 LDR             W9, [X1]
.text:0000000000015500                 CMP             W8, W9
.text:0000000000015504                 CSET            W10, CC
.text:0000000000015508                 CMP             W9, W8
.text:000000000001550C                 CSET            W8, CC
.text:0000000000015510                 SUB             W0, W10, W8
.text:0000000000015514                 RET
.text:0000000000015514 ; } // starts at 154F8
.text:0000000000015514 ; End of function android::SortedVector<android::key_value_pair_t<uint,uint>>::do_compare(void const*,void const*)
.text:0000000000015518 ; =============== S U B R O U T I N E =======================================
.text:0000000000015518 ; Attributes: bp-based frame
.text:0000000000015518                 WEAK _ZNSt3__112__hash_tableINS_17__hash_value_typeIN7android12ApexVendorOpENS_8functionIFiNS2_15ApexColorFormatEP20OMX_COLOR_FORMATTYPEEEEEENS_22__unordered_map_hasherIS3_SA_NS_4hashIS3_EELb1EEENS_21__unordered_map_equalIS3_SA_NS_8equal_toIS3_EELb1EEENS_9allocatorISA_EEE25__emplace_unique_key_argsIS3_JRKNS_21piecewise_construct_tENS_5tupleIJRKS3_EEENSQ_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeISA_PvEEEEbEERKT_DpOT0_
.text:0000000000015518 _ZNSt3__112__hash_tableINS_17__hash_value_typeIN7android12ApexVendorOpENS_8functionIFiNS2_15ApexColorFormatEP20OMX_COLOR_FORMATTYPEEEEEENS_22__unordered_map_hasherIS3_SA_NS_4hashIS3_EELb1EEENS_21__unordered_map_equalIS3_SA_NS_8equal_toIS3_EELb1EEENS_9allocatorISA_EEE25__emplace_unique_key_argsIS3_JRKNS_21piecewise_construct_tENS_5tupleIJRKS3_EEENSQ_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeISA_PvEEEEbEERKT_DpOT0_
.text:0000000000015518                                         ; CODE XREF: ._ZNSt3__112__hash_tableINS_17__hash_value_typeIN7android12ApexVendorOpENS_8functionIFiNS2_15ApexColorFormatEP20OMX_COLOR_FORMATTYPEEEEEENS_22__unordered_map_hasherIS3_SA_NS_4hashIS3_EELb1EEENS_21__unordered_map_equalIS3_SA_NS_8equal_toIS3_EELb1EEENS_9allocatorISA_EEE25__emplace_unique_key_argsIS3_JRKNS_21piecewise_construct_tENS_5tupleIJRKS3_EEENSQ_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeISA_PvEEEEbEERKT_DpOT0_+C↓j
.text:0000000000015518                                         ; DATA XREF: LOAD:0000000000001F68↑o ...
.text:0000000000015518 var_30          = -0x30
.text:0000000000015518 var_20          = -0x20
.text:0000000000015518 var_10          = -0x10
.text:0000000000015518 var_s0          =  0
.text:0000000000015518 ; __unwind {
.text:0000000000015518                 STP             X24, X23, [SP,#-0x10+var_30]!
.text:000000000001551C                 STP             X22, X21, [SP,#0x30+var_20]
.text:0000000000015520                 STP             X20, X19, [SP,#0x30+var_10]
.text:0000000000015524                 STP             X29, X30, [SP,#0x30+var_s0]
.text:0000000000015528                 ADD             X29, SP, #0x30
.text:000000000001552C                 LDR             X22, [X0,#8]
.text:0000000000015530                 MOV             X19, X0
.text:0000000000015534                 LDR             W23, [X1]
.text:0000000000015538                 MOV             X21, X3
.text:000000000001553C                 CBZ             X22, loc_15564
.text:0000000000015540                 SUB             X8, X22, #1
.text:0000000000015544                 ANDS            X9, X8, X22
.text:0000000000015548                 B.EQ            loc_15568
.text:000000000001554C                 MOV             X24, X23
.text:0000000000015550                 CMP             X22, X23
.text:0000000000015554                 B.HI            loc_1556C
.text:0000000000015558                 UDIV            X10, X23, X22
.text:000000000001555C                 MSUB            X24, X10, X22, X23
.text:0000000000015560                 B               loc_1556C
.text:0000000000015564 ; ---------------------------------------------------------------------------
.text:0000000000015564 loc_15564                               ; CODE XREF: _ZNSt3__112__hash_tableINS_17__hash_value_typeIN7android12ApexVendorOpENS_8functionIFiNS2_15ApexColorFormatEP20OMX_COLOR_FORMATTYPEEEEEENS_22__unordered_map_hasherIS3_SA_NS_4hashIS3_EELb1EEENS_21__unordered_map_equalIS3_SA_NS_8equal_toIS3_EELb1EEENS_9allocatorISA_EEE25__emplace_unique_key_argsIS3_JRKNS_21piecewise_construct_tENS_5tupleIJRKS3_EEENSQ_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeISA_PvEEEEbEERKT_DpOT0_+24↑j
.text:0000000000015564                 B               loc_155CC
.text:0000000000015568 ; ---------------------------------------------------------------------------
.text:0000000000015568 loc_15568                               ; CODE XREF: _ZNSt3__112__hash_tableINS_17__hash_value_typeIN7android12ApexVendorOpENS_8functionIFiNS2_15ApexColorFormatEP20OMX_COLOR_FORMATTYPEEEEEENS_22__unordered_map_hasherIS3_SA_NS_4hashIS3_EELb1EEENS_21__unordered_map_equalIS3_SA_NS_8equal_toIS3_EELb1EEENS_9allocatorISA_EEE25__emplace_unique_key_argsIS3_JRKNS_21piecewise_construct_tENS_5tupleIJRKS3_EEENSQ_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeISA_PvEEEEbEERKT_DpOT0_+30↑j
.text:0000000000015568                 AND             X24, X8, X23
.text:000000000001556C loc_1556C                               ; CODE XREF: _ZNSt3__112__hash_tableINS_17__hash_value_typeIN7android12ApexVendorOpENS_8functionIFiNS2_15ApexColorFormatEP20OMX_COLOR_FORMATTYPEEEEEENS_22__unordered_map_hasherIS3_SA_NS_4hashIS3_EELb1EEENS_21__unordered_map_equalIS3_SA_NS_8equal_toIS3_EELb1EEENS_9allocatorISA_EEE25__emplace_unique_key_argsIS3_JRKNS_21piecewise_construct_tENS_5tupleIJRKS3_EEENSQ_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeISA_PvEEEEbEERKT_DpOT0_+3C↑j
.text:000000000001556C                                         ; _ZNSt3__112__hash_tableINS_17__hash_value_typeIN7android12ApexVendorOpENS_8functionIFiNS2_15ApexColorFormatEP20OMX_COLOR_FORMATTYPEEEEEENS_22__unordered_map_hasherIS3_SA_NS_4hashIS3_EELb1EEENS_21__unordered_map_equalIS3_SA_NS_8equal_toIS3_EELb1EEENS_9allocatorISA_EEE25__emplace_unique_key_argsIS3_JRKNS_21piecewise_construct_tENS_5tupleIJRKS3_EEENSQ_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeISA_PvEEEEbEERKT_DpOT0_+48↑j
.text:000000000001556C                 LDR             X10, [X19]
.text:0000000000015570                 LDR             X20, [X10,X24,LSL#3]
.text:0000000000015574                 CBZ             X20, loc_155CC
.text:0000000000015578 loc_15578                               ; CODE XREF: _ZNSt3__112__hash_tableINS_17__hash_value_typeIN7android12ApexVendorOpENS_8functionIFiNS2_15ApexColorFormatEP20OMX_COLOR_FORMATTYPEEEEEENS_22__unordered_map_hasherIS3_SA_NS_4hashIS3_EELb1EEENS_21__unordered_map_equalIS3_SA_NS_8equal_toIS3_EELb1EEENS_9allocatorISA_EEE25__emplace_unique_key_argsIS3_JRKNS_21piecewise_construct_tENS_5tupleIJRKS3_EEENSQ_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeISA_PvEEEEbEERKT_DpOT0_+A8↓j
.text:0000000000015578                 LDR             X20, [X20]
.text:000000000001557C                 CBZ             X20, loc_155CC
.text:0000000000015580                 LDR             X10, [X20,#8]
.text:0000000000015584                 CMP             X10, X23
.text:0000000000015588                 B.EQ            loc_155B8
.text:000000000001558C                 CBZ             X9, loc_155AC
.text:0000000000015590                 CMP             X10, X22
.text:0000000000015594                 B.CC            loc_155B0
.text:0000000000015598                 UDIV            X11, X10, X22
.text:000000000001559C                 MSUB            X10, X11, X22, X10
.text:00000000000155A0                 CMP             X10, X24
.text:00000000000155A4                 B.EQ            loc_155B8
.text:00000000000155A8                 B               loc_155CC
.text:00000000000155AC ; ---------------------------------------------------------------------------
.text:00000000000155AC loc_155AC                               ; CODE XREF: _ZNSt3__112__hash_tableINS_17__hash_value_typeIN7android12ApexVendorOpENS_8functionIFiNS2_15ApexColorFormatEP20OMX_COLOR_FORMATTYPEEEEEENS_22__unordered_map_hasherIS3_SA_NS_4hashIS3_EELb1EEENS_21__unordered_map_equalIS3_SA_NS_8equal_toIS3_EELb1EEENS_9allocatorISA_EEE25__emplace_unique_key_argsIS3_JRKNS_21piecewise_construct_tENS_5tupleIJRKS3_EEENSQ_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeISA_PvEEEEbEERKT_DpOT0_+74↑j
.text:00000000000155AC                 AND             X10, X10, X8
.text:00000000000155B0 loc_155B0                               ; CODE XREF: _ZNSt3__112__hash_tableINS_17__hash_value_typeIN7android12ApexVendorOpENS_8functionIFiNS2_15ApexColorFormatEP20OMX_COLOR_FORMATTYPEEEEEENS_22__unordered_map_hasherIS3_SA_NS_4hashIS3_EELb1EEENS_21__unordered_map_equalIS3_SA_NS_8equal_toIS3_EELb1EEENS_9allocatorISA_EEE25__emplace_unique_key_argsIS3_JRKNS_21piecewise_construct_tENS_5tupleIJRKS3_EEENSQ_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeISA_PvEEEEbEERKT_DpOT0_+7C↑j
.text:00000000000155B0                 CMP             X10, X24
.text:00000000000155B4                 B.NE            loc_155CC
.text:00000000000155B8 loc_155B8                               ; CODE XREF: _ZNSt3__112__hash_tableINS_17__hash_value_typeIN7android12ApexVendorOpENS_8functionIFiNS2_15ApexColorFormatEP20OMX_COLOR_FORMATTYPEEEEEENS_22__unordered_map_hasherIS3_SA_NS_4hashIS3_EELb1EEENS_21__unordered_map_equalIS3_SA_NS_8equal_toIS3_EELb1EEENS_9allocatorISA_EEE25__emplace_unique_key_argsIS3_JRKNS_21piecewise_construct_tENS_5tupleIJRKS3_EEENSQ_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeISA_PvEEEEbEERKT_DpOT0_+70↑j
.text:00000000000155B8                                         ; _ZNSt3__112__hash_tableINS_17__hash_value_typeIN7android12ApexVendorOpENS_8functionIFiNS2_15ApexColorFormatEP20OMX_COLOR_FORMATTYPEEEEEENS_22__unordered_map_hasherIS3_SA_NS_4hashIS3_EELb1EEENS_21__unordered_map_equalIS3_SA_NS_8equal_toIS3_EELb1EEENS_9allocatorISA_EEE25__emplace_unique_key_argsIS3_JRKNS_21piecewise_construct_tENS_5tupleIJRKS3_EEENSQ_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeISA_PvEEEEbEERKT_DpOT0_+8C↑j
.text:00000000000155B8                 LDR             W10, [X20,#0x10]
.text:00000000000155BC                 CMP             W10, W23
.text:00000000000155C0                 B.NE            loc_15578
.text:00000000000155C4                 MOV             X1, XZR
.text:00000000000155C8                 B               loc_156F4
.text:00000000000155CC ; ---------------------------------------------------------------------------
.text:00000000000155CC loc_155CC                               ; CODE XREF: _ZNSt3__112__hash_tableINS_17__hash_value_typeIN7android12ApexVendorOpENS_8functionIFiNS2_15ApexColorFormatEP20OMX_COLOR_FORMATTYPEEEEEENS_22__unordered_map_hasherIS3_SA_NS_4hashIS3_EELb1EEENS_21__unordered_map_equalIS3_SA_NS_8equal_toIS3_EELb1EEENS_9allocatorISA_EEE25__emplace_unique_key_argsIS3_JRKNS_21piecewise_construct_tENS_5tupleIJRKS3_EEENSQ_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeISA_PvEEEEbEERKT_DpOT0_:loc_15564↑j
.text:00000000000155CC                                         ; _ZNSt3__112__hash_tableINS_17__hash_value_typeIN7android12ApexVendorOpENS_8functionIFiNS2_15ApexColorFormatEP20OMX_COLOR_FORMATTYPEEEEEENS_22__unordered_map_hasherIS3_SA_NS_4hashIS3_EELb1EEENS_21__unordered_map_equalIS3_SA_NS_8equal_toIS3_EELb1EEENS_9allocatorISA_EEE25__emplace_unique_key_argsIS3_JRKNS_21piecewise_construct_tENS_5tupleIJRKS3_EEENSQ_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeISA_PvEEEEbEERKT_DpOT0_+5C↑j ...
.text:00000000000155CC                 MOV             W0, #0x50 ; 'P' ; unsigned __int64
.text:00000000000155D0                 BL              ._Znwm  ; operator new(ulong)
.text:00000000000155D4                 LDR             X8, [X21]
.text:00000000000155D8                 MOV             X20, X0
.text:00000000000155DC                 LDR             X9, [X19,#0x18]
.text:00000000000155E0                 LDR             W8, [X8]
.text:00000000000155E4                 ADD             X9, X9, #1
.text:00000000000155E8                 UCVTF           S0, X9
.text:00000000000155EC                 STR             W8, [X0,#0x10]
.text:00000000000155F0                 LDR             S1, [X19,#0x20]
.text:00000000000155F4                 STR             XZR, [X0,#0x40]
.text:00000000000155F8                 STP             XZR, X23, [X0]
.text:00000000000155FC                 CBZ             X22, loc_15610
.text:0000000000015600                 UCVTF           S2, X22
.text:0000000000015604                 FMUL            S2, S1, S2
.text:0000000000015608                 FCMP            S2, S0
.text:000000000001560C                 B.PL            loc_1567C
.text:0000000000015610 loc_15610                               ; CODE XREF: _ZNSt3__112__hash_tableINS_17__hash_value_typeIN7android12ApexVendorOpENS_8functionIFiNS2_15ApexColorFormatEP20OMX_COLOR_FORMATTYPEEEEEENS_22__unordered_map_hasherIS3_SA_NS_4hashIS3_EELb1EEENS_21__unordered_map_equalIS3_SA_NS_8equal_toIS3_EELb1EEENS_9allocatorISA_EEE25__emplace_unique_key_argsIS3_JRKNS_21piecewise_construct_tENS_5tupleIJRKS3_EEENSQ_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeISA_PvEEEEbEERKT_DpOT0_+E4↑j
.text:0000000000015610                 LSL             X8, X22, #1
.text:0000000000015614                 CMP             X22, #3
.text:0000000000015618                 B.CC            loc_1562C
.text:000000000001561C                 SUB             X9, X22, #1
.text:0000000000015620                 TST             X9, X22
.text:0000000000015624                 CSET            W9, NE
.text:0000000000015628                 B               loc_15630
.text:000000000001562C ; ---------------------------------------------------------------------------
.text:000000000001562C loc_1562C                               ; CODE XREF: _ZNSt3__112__hash_tableINS_17__hash_value_typeIN7android12ApexVendorOpENS_8functionIFiNS2_15ApexColorFormatEP20OMX_COLOR_FORMATTYPEEEEEENS_22__unordered_map_hasherIS3_SA_NS_4hashIS3_EELb1EEENS_21__unordered_map_equalIS3_SA_NS_8equal_toIS3_EELb1EEENS_9allocatorISA_EEE25__emplace_unique_key_argsIS3_JRKNS_21piecewise_construct_tENS_5tupleIJRKS3_EEENSQ_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeISA_PvEEEEbEERKT_DpOT0_+100↑j
.text:000000000001562C                 MOV             W9, #1
.text:0000000000015630 loc_15630                               ; CODE XREF: _ZNSt3__112__hash_tableINS_17__hash_value_typeIN7android12ApexVendorOpENS_8functionIFiNS2_15ApexColorFormatEP20OMX_COLOR_FORMATTYPEEEEEENS_22__unordered_map_hasherIS3_SA_NS_4hashIS3_EELb1EEENS_21__unordered_map_equalIS3_SA_NS_8equal_toIS3_EELb1EEENS_9allocatorISA_EEE25__emplace_unique_key_argsIS3_JRKNS_21piecewise_construct_tENS_5tupleIJRKS3_EEENSQ_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeISA_PvEEEEbEERKT_DpOT0_+110↑j
.text:0000000000015630                 FDIV            S0, S0, S1
.text:0000000000015634                 ORR             X8, X9, X8
.text:0000000000015638                 MOV             X0, X19
.text:000000000001563C                 FCVTPU          X10, S0
.text:0000000000015640                 CMP             X8, X10
.text:0000000000015644                 CSEL            X1, X10, X8, CC
.text:0000000000015648                 BL              ._ZNSt3__112__hash_tableINS_17__hash_value_typeIN7android12ApexVendorOpENS_8functionIFiNS2_15ApexColorFormatEP20OMX_COLOR_FORMATTYPEEEEEENS_22__unordered_map_hasherIS3_SA_NS_4hashIS3_EELb1EEENS_21__unordered_map_equalIS3_SA_NS_8equal_toIS3_EELb1EEENS_9allocatorISA_EEE6rehashEm ; std::__1::__hash_table<std::__1::__hash_value_type<android::ApexVendorOp,std::__1::function<int ()(android::ApexColorFormat,OMX_COLOR_FORMATTYPE *)>>,std::__1::__unordered_map_hasher<android::ApexVendorOp,std::__1::__hash_value_type<android::ApexVendorOp,std::__1::function<int ()(android::ApexColorFormat,OMX_COLOR_FORMATTYPE *)>>,std::__1::hash<android::ApexVendorOp>,true>,std::__1::__unordered_map_equal<android::ApexVendorOp,std::__1::__hash_value_type<android::ApexVendorOp,std::__1::function<int ()(android::ApexColorFormat,OMX_COLOR_FORMATTYPE *)>>,std::__1::equal_to<android::ApexVendorOp>,true>,std::__1::allocator<std::__1::__hash_value_type<android::ApexVendorOp,std::__1::function<int ()(android::ApexColorFormat,OMX_COLOR_FORMATTYPE *)>>>>::rehash(ulong)
.text:000000000001564C                 LDR             X22, [X19,#8]
.text:0000000000015650                 SUB             X8, X22, #1
.text:0000000000015654                 TST             X8, X22
.text:0000000000015658                 B.EQ            loc_1566C
.text:000000000001565C                 CMP             X22, X23
.text:0000000000015660                 B.LS            loc_15674
.text:0000000000015664                 MOV             X24, X23
.text:0000000000015668                 B               loc_1567C
.text:000000000001566C ; ---------------------------------------------------------------------------
.text:000000000001566C loc_1566C                               ; CODE XREF: _ZNSt3__112__hash_tableINS_17__hash_value_typeIN7android12ApexVendorOpENS_8functionIFiNS2_15ApexColorFormatEP20OMX_COLOR_FORMATTYPEEEEEENS_22__unordered_map_hasherIS3_SA_NS_4hashIS3_EELb1EEENS_21__unordered_map_equalIS3_SA_NS_8equal_toIS3_EELb1EEENS_9allocatorISA_EEE25__emplace_unique_key_argsIS3_JRKNS_21piecewise_construct_tENS_5tupleIJRKS3_EEENSQ_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeISA_PvEEEEbEERKT_DpOT0_+140↑j
.text:000000000001566C                 AND             X24, X8, X23
.text:0000000000015670                 B               loc_1567C
.text:0000000000015674 ; ---------------------------------------------------------------------------
.text:0000000000015674 loc_15674                               ; CODE XREF: _ZNSt3__112__hash_tableINS_17__hash_value_typeIN7android12ApexVendorOpENS_8functionIFiNS2_15ApexColorFormatEP20OMX_COLOR_FORMATTYPEEEEEENS_22__unordered_map_hasherIS3_SA_NS_4hashIS3_EELb1EEENS_21__unordered_map_equalIS3_SA_NS_8equal_toIS3_EELb1EEENS_9allocatorISA_EEE25__emplace_unique_key_argsIS3_JRKNS_21piecewise_construct_tENS_5tupleIJRKS3_EEENSQ_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeISA_PvEEEEbEERKT_DpOT0_+148↑j
.text:0000000000015674                 UDIV            X8, X23, X22
.text:0000000000015678                 MSUB            X24, X8, X22, X23
.text:000000000001567C loc_1567C                               ; CODE XREF: _ZNSt3__112__hash_tableINS_17__hash_value_typeIN7android12ApexVendorOpENS_8functionIFiNS2_15ApexColorFormatEP20OMX_COLOR_FORMATTYPEEEEEENS_22__unordered_map_hasherIS3_SA_NS_4hashIS3_EELb1EEENS_21__unordered_map_equalIS3_SA_NS_8equal_toIS3_EELb1EEENS_9allocatorISA_EEE25__emplace_unique_key_argsIS3_JRKNS_21piecewise_construct_tENS_5tupleIJRKS3_EEENSQ_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeISA_PvEEEEbEERKT_DpOT0_+F4↑j
.text:000000000001567C                                         ; _ZNSt3__112__hash_tableINS_17__hash_value_typeIN7android12ApexVendorOpENS_8functionIFiNS2_15ApexColorFormatEP20OMX_COLOR_FORMATTYPEEEEEENS_22__unordered_map_hasherIS3_SA_NS_4hashIS3_EELb1EEENS_21__unordered_map_equalIS3_SA_NS_8equal_toIS3_EELb1EEENS_9allocatorISA_EEE25__emplace_unique_key_argsIS3_JRKNS_21piecewise_construct_tENS_5tupleIJRKS3_EEENSQ_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeISA_PvEEEEbEERKT_DpOT0_+150↑j ...
.text:000000000001567C                 LDR             X9, [X19]
.text:0000000000015680                 LDR             X8, [X9,X24,LSL#3]
.text:0000000000015684                 CBZ             X8, loc_15694
.text:0000000000015688                 LDR             X9, [X8]
.text:000000000001568C                 STR             X9, [X20]
.text:0000000000015690                 B               loc_156E0
.text:0000000000015694 ; ---------------------------------------------------------------------------
.text:0000000000015694 loc_15694                               ; CODE XREF: _ZNSt3__112__hash_tableINS_17__hash_value_typeIN7android12ApexVendorOpENS_8functionIFiNS2_15ApexColorFormatEP20OMX_COLOR_FORMATTYPEEEEEENS_22__unordered_map_hasherIS3_SA_NS_4hashIS3_EELb1EEENS_21__unordered_map_equalIS3_SA_NS_8equal_toIS3_EELb1EEENS_9allocatorISA_EEE25__emplace_unique_key_argsIS3_JRKNS_21piecewise_construct_tENS_5tupleIJRKS3_EEENSQ_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeISA_PvEEEEbEERKT_DpOT0_+16C↑j
.text:0000000000015694                 MOV             X8, X19
.text:0000000000015698                 LDR             X10, [X8,#0x10]!
.text:000000000001569C                 STR             X10, [X20]
.text:00000000000156A0                 STR             X20, [X8]
.text:00000000000156A4                 STR             X8, [X9,X24,LSL#3]
.text:00000000000156A8                 LDR             X8, [X20]
.text:00000000000156AC                 CBZ             X8, loc_156E4
.text:00000000000156B0                 LDR             X8, [X8,#8]
.text:00000000000156B4                 SUB             X9, X22, #1
.text:00000000000156B8                 TST             X9, X22
.text:00000000000156BC                 B.EQ            loc_156D4
.text:00000000000156C0                 CMP             X8, X22
.text:00000000000156C4                 B.CC            loc_156D8
.text:00000000000156C8                 UDIV            X9, X8, X22
.text:00000000000156CC                 MSUB            X8, X9, X22, X8
.text:00000000000156D0                 B               loc_156D8
.text:00000000000156D4 ; ---------------------------------------------------------------------------
.text:00000000000156D4 loc_156D4                               ; CODE XREF: _ZNSt3__112__hash_tableINS_17__hash_value_typeIN7android12ApexVendorOpENS_8functionIFiNS2_15ApexColorFormatEP20OMX_COLOR_FORMATTYPEEEEEENS_22__unordered_map_hasherIS3_SA_NS_4hashIS3_EELb1EEENS_21__unordered_map_equalIS3_SA_NS_8equal_toIS3_EELb1EEENS_9allocatorISA_EEE25__emplace_unique_key_argsIS3_JRKNS_21piecewise_construct_tENS_5tupleIJRKS3_EEENSQ_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeISA_PvEEEEbEERKT_DpOT0_+1A4↑j
.text:00000000000156D4                 AND             X8, X8, X9
.text:00000000000156D8 loc_156D8                               ; CODE XREF: _ZNSt3__112__hash_tableINS_17__hash_value_typeIN7android12ApexVendorOpENS_8functionIFiNS2_15ApexColorFormatEP20OMX_COLOR_FORMATTYPEEEEEENS_22__unordered_map_hasherIS3_SA_NS_4hashIS3_EELb1EEENS_21__unordered_map_equalIS3_SA_NS_8equal_toIS3_EELb1EEENS_9allocatorISA_EEE25__emplace_unique_key_argsIS3_JRKNS_21piecewise_construct_tENS_5tupleIJRKS3_EEENSQ_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeISA_PvEEEEbEERKT_DpOT0_+1AC↑j
.text:00000000000156D8                                         ; _ZNSt3__112__hash_tableINS_17__hash_value_typeIN7android12ApexVendorOpENS_8functionIFiNS2_15ApexColorFormatEP20OMX_COLOR_FORMATTYPEEEEEENS_22__unordered_map_hasherIS3_SA_NS_4hashIS3_EELb1EEENS_21__unordered_map_equalIS3_SA_NS_8equal_toIS3_EELb1EEENS_9allocatorISA_EEE25__emplace_unique_key_argsIS3_JRKNS_21piecewise_construct_tENS_5tupleIJRKS3_EEENSQ_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeISA_PvEEEEbEERKT_DpOT0_+1B8↑j
.text:00000000000156D8                 LDR             X9, [X19]
.text:00000000000156DC                 ADD             X8, X9, X8,LSL#3
.text:00000000000156E0 loc_156E0                               ; CODE XREF: _ZNSt3__112__hash_tableINS_17__hash_value_typeIN7android12ApexVendorOpENS_8functionIFiNS2_15ApexColorFormatEP20OMX_COLOR_FORMATTYPEEEEEENS_22__unordered_map_hasherIS3_SA_NS_4hashIS3_EELb1EEENS_21__unordered_map_equalIS3_SA_NS_8equal_toIS3_EELb1EEENS_9allocatorISA_EEE25__emplace_unique_key_argsIS3_JRKNS_21piecewise_construct_tENS_5tupleIJRKS3_EEENSQ_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeISA_PvEEEEbEERKT_DpOT0_+178↑j
.text:00000000000156E0                 STR             X20, [X8]
.text:00000000000156E4 loc_156E4                               ; CODE XREF: _ZNSt3__112__hash_tableINS_17__hash_value_typeIN7android12ApexVendorOpENS_8functionIFiNS2_15ApexColorFormatEP20OMX_COLOR_FORMATTYPEEEEEENS_22__unordered_map_hasherIS3_SA_NS_4hashIS3_EELb1EEENS_21__unordered_map_equalIS3_SA_NS_8equal_toIS3_EELb1EEENS_9allocatorISA_EEE25__emplace_unique_key_argsIS3_JRKNS_21piecewise_construct_tENS_5tupleIJRKS3_EEENSQ_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeISA_PvEEEEbEERKT_DpOT0_+194↑j
.text:00000000000156E4                 LDR             X8, [X19,#0x18]
.text:00000000000156E8                 MOV             W1, #1
.text:00000000000156EC                 ADD             X8, X8, #1
.text:00000000000156F0                 STR             X8, [X19,#0x18]
.text:00000000000156F4 loc_156F4                               ; CODE XREF: _ZNSt3__112__hash_tableINS_17__hash_value_typeIN7android12ApexVendorOpENS_8functionIFiNS2_15ApexColorFormatEP20OMX_COLOR_FORMATTYPEEEEEENS_22__unordered_map_hasherIS3_SA_NS_4hashIS3_EELb1EEENS_21__unordered_map_equalIS3_SA_NS_8equal_toIS3_EELb1EEENS_9allocatorISA_EEE25__emplace_unique_key_argsIS3_JRKNS_21piecewise_construct_tENS_5tupleIJRKS3_EEENSQ_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeISA_PvEEEEbEERKT_DpOT0_+B0↑j
.text:00000000000156F4                 MOV             X0, X20
.text:00000000000156F8                 LDP             X29, X30, [SP,#0x30+var_s0]
.text:00000000000156FC                 LDP             X20, X19, [SP,#0x30+var_10]
.text:0000000000015700                 LDP             X22, X21, [SP,#0x30+var_20]
.text:0000000000015704                 LDP             X24, X23, [SP+0x30+var_30],#0x40
.text:0000000000015708                 RET
.text:0000000000015708 ; } // starts at 15518
.text:0000000000015708 ; End of function _ZNSt3__112__hash_tableINS_17__hash_value_typeIN7android12ApexVendorOpENS_8functionIFiNS2_15ApexColorFormatEP20OMX_COLOR_FORMATTYPEEEEEENS_22__unordered_map_hasherIS3_SA_NS_4hashIS3_EELb1EEENS_21__unordered_map_equalIS3_SA_NS_8equal_toIS3_EELb1EEENS_9allocatorISA_EEE25__emplace_unique_key_argsIS3_JRKNS_21piecewise_construct_tENS_5tupleIJRKS3_EEENSQ_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeISA_PvEEEEbEERKT_DpOT0_
.text:0000000000015708 ; ---------------------------------------------------------------------------
.text:000000000001570C                 ALIGN 0x10
.text:0000000000015710 ; =============== S U B R O U T I N E =======================================
.text:0000000000015710 ; Attributes: bp-based frame
.text:0000000000015710 ; std::__1::__hash_table<std::__1::__hash_value_type<android::ApexVendorOp, std::__1::function<int ()(android::ApexColorFormat, OMX_COLOR_FORMATTYPE *)>>, std::__1::__unordered_map_hasher<android::ApexVendorOp, std::__1::__hash_value_type<android::ApexVendorOp, std::__1::function<int ()(android::ApexColorFormat, OMX_COLOR_FORMATTYPE *)>>, std::__1::hash<android::ApexVendorOp>, true>, std::__1::__unordered_map_equal<android::ApexVendorOp, std::__1::__hash_value_type<android::ApexVendorOp, std::__1::function<int ()(android::ApexColorFormat, OMX_COLOR_FORMATTYPE *)>>, std::__1::equal_to<android::ApexVendorOp>, true>, std::__1::allocator<std::__1::__hash_value_type<android::ApexVendorOp, std::__1::function<int ()(android::ApexColorFormat, OMX_COLOR_FORMATTYPE *)>>>>::rehash(unsigned long)
.text:0000000000015710                 WEAK _ZNSt3__112__hash_tableINS_17__hash_value_typeIN7android12ApexVendorOpENS_8functionIFiNS2_15ApexColorFormatEP20OMX_COLOR_FORMATTYPEEEEEENS_22__unordered_map_hasherIS3_SA_NS_4hashIS3_EELb1EEENS_21__unordered_map_equalIS3_SA_NS_8equal_toIS3_EELb1EEENS_9allocatorISA_EEE6rehashEm
.text:0000000000015710 _ZNSt3__112__hash_tableINS_17__hash_value_typeIN7android12ApexVendorOpENS_8functionIFiNS2_15ApexColorFormatEP20OMX_COLOR_FORMATTYPEEEEEENS_22__unordered_map_hasherIS3_SA_NS_4hashIS3_EELb1EEENS_21__unordered_map_equalIS3_SA_NS_8equal_toIS3_EELb1EEENS_9allocatorISA_EEE6rehashEm
.text:0000000000015710                                         ; CODE XREF: std::__1::__hash_table<std::__1::__hash_value_type<android::ApexVendorOp,std::__1::function<int ()(android::ApexColorFormat,OMX_COLOR_FORMATTYPE *)>>,std::__1::__unordered_map_hasher<android::ApexVendorOp,std::__1::__hash_value_type<android::ApexVendorOp,std::__1::function<int ()(android::ApexColorFormat,OMX_COLOR_FORMATTYPE *)>>,std::__1::hash<android::ApexVendorOp>,true>,std::__1::__unordered_map_equal<android::ApexVendorOp,std::__1::__hash_value_type<android::ApexVendorOp,std::__1::function<int ()(android::ApexColorFormat,OMX_COLOR_FORMATTYPE *)>>,std::__1::equal_to<android::ApexVendorOp>,true>,std::__1::allocator<std::__1::__hash_value_type<android::ApexVendorOp,std::__1::function<int ()(android::ApexColorFormat,OMX_COLOR_FORMATTYPE *)>>>>::rehash(ulong)+C↓j
.text:0000000000015710                                         ; DATA XREF: LOAD:0000000000001488↑o ...
.text:0000000000015710 var_20          = -0x20
.text:0000000000015710 var_10          = -0x10
.text:0000000000015710 var_s0          =  0
.text:0000000000015710 ; __unwind {
.text:0000000000015710                 STR             X21, [SP,#-0x10+var_20]!
.text:0000000000015714                 STP             X20, X19, [SP,#0x20+var_10]
.text:0000000000015718                 STP             X29, X30, [SP,#0x20+var_s0]
.text:000000000001571C                 ADD             X29, SP, #0x20
.text:0000000000015720                 MOV             X19, X0
.text:0000000000015724                 SUBS            X8, X1, #1
.text:0000000000015728                 B.NE            loc_15734
.text:000000000001572C                 MOV             W20, #2
.text:0000000000015730                 B               loc_1574C
.text:0000000000015734 ; ---------------------------------------------------------------------------
.text:0000000000015734 loc_15734                               ; CODE XREF: std::__1::__hash_table<std::__1::__hash_value_type<android::ApexVendorOp,std::__1::function<int ()(android::ApexColorFormat,OMX_COLOR_FORMATTYPE *)>>,std::__1::__unordered_map_hasher<android::ApexVendorOp,std::__1::__hash_value_type<android::ApexVendorOp,std::__1::function<int ()(android::ApexColorFormat,OMX_COLOR_FORMATTYPE *)>>,std::__1::hash<android::ApexVendorOp>,true>,std::__1::__unordered_map_equal<android::ApexVendorOp,std::__1::__hash_value_type<android::ApexVendorOp,std::__1::function<int ()(android::ApexColorFormat,OMX_COLOR_FORMATTYPE *)>>,std::__1::equal_to<android::ApexVendorOp>,true>,std::__1::allocator<std::__1::__hash_value_type<android::ApexVendorOp,std::__1::function<int ()(android::ApexColorFormat,OMX_COLOR_FORMATTYPE *)>>>>::rehash(ulong)+18↑j
.text:0000000000015734                 MOV             X20, X1
.text:0000000000015738                 TST             X8, X1
.text:000000000001573C                 B.EQ            loc_1574C
.text:0000000000015740                 MOV             X0, X20 ; this
.text:0000000000015744                 BL              ._ZNSt3__112__next_primeEm ; std::__1::__next_prime(ulong)
.text:0000000000015748                 MOV             X20, X0
.text:000000000001574C loc_1574C                               ; CODE XREF: std::__1::__hash_table<std::__1::__hash_value_type<android::ApexVendorOp,std::__1::function<int ()(android::ApexColorFormat,OMX_COLOR_FORMATTYPE *)>>,std::__1::__unordered_map_hasher<android::ApexVendorOp,std::__1::__hash_value_type<android::ApexVendorOp,std::__1::function<int ()(android::ApexColorFormat,OMX_COLOR_FORMATTYPE *)>>,std::__1::hash<android::ApexVendorOp>,true>,std::__1::__unordered_map_equal<android::ApexVendorOp,std::__1::__hash_value_type<android::ApexVendorOp,std::__1::function<int ()(android::ApexColorFormat,OMX_COLOR_FORMATTYPE *)>>,std::__1::equal_to<android::ApexVendorOp>,true>,std::__1::allocator<std::__1::__hash_value_type<android::ApexVendorOp,std::__1::function<int ()(android::ApexColorFormat,OMX_COLOR_FORMATTYPE *)>>>>::rehash(ulong)+20↑j
.text:000000000001574C                                         ; std::__1::__hash_table<std::__1::__hash_value_type<android::ApexVendorOp,std::__1::function<int ()(android::ApexColorFormat,OMX_COLOR_FORMATTYPE *)>>,std::__1::__unordered_map_hasher<android::ApexVendorOp,std::__1::__hash_value_type<android::ApexVendorOp,std::__1::function<int ()(android::ApexColorFormat,OMX_COLOR_FORMATTYPE *)>>,std::__1::hash<android::ApexVendorOp>,true>,std::__1::__unordered_map_equal<android::ApexVendorOp,std::__1::__hash_value_type<android::ApexVendorOp,std::__1::function<int ()(android::ApexColorFormat,OMX_COLOR_FORMATTYPE *)>>,std::__1::equal_to<android::ApexVendorOp>,true>,std::__1::allocator<std::__1::__hash_value_type<android::ApexVendorOp,std::__1::function<int ()(android::ApexColorFormat,OMX_COLOR_FORMATTYPE *)>>>>::rehash(ulong)+2C↑j
.text:000000000001574C                 LDR             X21, [X19,#8]
.text:0000000000015750                 CMP             X20, X21
.text:0000000000015754                 B.LS            loc_15770
.text:0000000000015758                 MOV             X0, X19
.text:000000000001575C                 MOV             X1, X20
.text:0000000000015760 loc_15760                               ; CODE XREF: std::__1::__hash_table<std::__1::__hash_value_type<android::ApexVendorOp,std::__1::function<int ()(android::ApexColorFormat,OMX_COLOR_FORMATTYPE *)>>,std::__1::__unordered_map_hasher<android::ApexVendorOp,std::__1::__hash_value_type<android::ApexVendorOp,std::__1::function<int ()(android::ApexColorFormat,OMX_COLOR_FORMATTYPE *)>>,std::__1::hash<android::ApexVendorOp>,true>,std::__1::__unordered_map_equal<android::ApexVendorOp,std::__1::__hash_value_type<android::ApexVendorOp,std::__1::function<int ()(android::ApexColorFormat,OMX_COLOR_FORMATTYPE *)>>,std::__1::equal_to<android::ApexVendorOp>,true>,std::__1::allocator<std::__1::__hash_value_type<android::ApexVendorOp,std::__1::function<int ()(android::ApexColorFormat,OMX_COLOR_FORMATTYPE *)>>>>::rehash(ulong)+D0↓j
.text:0000000000015760                 LDP             X29, X30, [SP,#0x20+var_s0]
.text:0000000000015764                 LDP             X20, X19, [SP,#0x20+var_10]
.text:0000000000015768                 LDR             X21, [SP+0x20+var_20],#0x30
.text:000000000001576C                 B               ._ZNSt3__112__hash_tableINS_17__hash_value_typeIN7android12ApexVendorOpENS_8functionIFiNS2_15ApexColorFormatEP20OMX_COLOR_FORMATTYPEEEEEENS_22__unordered_map_hasherIS3_SA_NS_4hashIS3_EELb1EEENS_21__unordered_map_equalIS3_SA_NS_8equal_toIS3_EELb1EEENS_9allocatorISA_EEE8__rehashEm ; std::__1::__hash_table<std::__1::__hash_value_type<android::ApexVendorOp,std::__1::function<int ()(android::ApexColorFormat,OMX_COLOR_FORMATTYPE *)>>,std::__1::__unordered_map_hasher<android::ApexVendorOp,std::__1::__hash_value_type<android::ApexVendorOp,std::__1::function<int ()(android::ApexColorFormat,OMX_COLOR_FORMATTYPE *)>>,std::__1::hash<android::ApexVendorOp>,true>,std::__1::__unordered_map_equal<android::ApexVendorOp,std::__1::__hash_value_type<android::ApexVendorOp,std::__1::function<int ()(android::ApexColorFormat,OMX_COLOR_FORMATTYPE *)>>,std::__1::equal_to<android::ApexVendorOp>,true>,std::__1::allocator<std::__1::__hash_value_type<android::ApexVendorOp,std::__1::function<int ()(android::ApexColorFormat,OMX_COLOR_FORMATTYPE *)>>>>::__rehash(ulong)
.text:0000000000015770 ; ---------------------------------------------------------------------------
.text:0000000000015770 loc_15770                               ; CODE XREF: std::__1::__hash_table<std::__1::__hash_value_type<android::ApexVendorOp,std::__1::function<int ()(android::ApexColorFormat,OMX_COLOR_FORMATTYPE *)>>,std::__1::__unordered_map_hasher<android::ApexVendorOp,std::__1::__hash_value_type<android::ApexVendorOp,std::__1::function<int ()(android::ApexColorFormat,OMX_COLOR_FORMATTYPE *)>>,std::__1::hash<android::ApexVendorOp>,true>,std::__1::__unordered_map_equal<android::ApexVendorOp,std::__1::__hash_value_type<android::ApexVendorOp,std::__1::function<int ()(android::ApexColorFormat,OMX_COLOR_FORMATTYPE *)>>,std::__1::equal_to<android::ApexVendorOp>,true>,std::__1::allocator<std::__1::__hash_value_type<android::ApexVendorOp,std::__1::function<int ()(android::ApexColorFormat,OMX_COLOR_FORMATTYPE *)>>>>::rehash(ulong)+44↑j
.text:0000000000015770                 B.CS            loc_157E4
.text:0000000000015774                 CMP             X21, #3
.text:0000000000015778                 B.CC            loc_1578C
.text:000000000001577C                 SUB             X8, X21, #1
.text:0000000000015780                 TST             X8, X21
.text:0000000000015784                 CSET            W8, EQ
.text:0000000000015788                 B               loc_15790
.text:000000000001578C ; ---------------------------------------------------------------------------
.text:000000000001578C loc_1578C                               ; CODE XREF: std::__1::__hash_table<std::__1::__hash_value_type<android::ApexVendorOp,std::__1::function<int ()(android::ApexColorFormat,OMX_COLOR_FORMATTYPE *)>>,std::__1::__unordered_map_hasher<android::ApexVendorOp,std::__1::__hash_value_type<android::ApexVendorOp,std::__1::function<int ()(android::ApexColorFormat,OMX_COLOR_FORMATTYPE *)>>,std::__1::hash<android::ApexVendorOp>,true>,std::__1::__unordered_map_equal<android::ApexVendorOp,std::__1::__hash_value_type<android::ApexVendorOp,std::__1::function<int ()(android::ApexColorFormat,OMX_COLOR_FORMATTYPE *)>>,std::__1::equal_to<android::ApexVendorOp>,true>,std::__1::allocator<std::__1::__hash_value_type<android::ApexVendorOp,std::__1::function<int ()(android::ApexColorFormat,OMX_COLOR_FORMATTYPE *)>>>>::rehash(ulong)+68↑j
.text:000000000001578C                 MOV             W8, WZR
.text:0000000000015790 loc_15790                               ; CODE XREF: std::__1::__hash_table<std::__1::__hash_value_type<android::ApexVendorOp,std::__1::function<int ()(android::ApexColorFormat,OMX_COLOR_FORMATTYPE *)>>,std::__1::__unordered_map_hasher<android::ApexVendorOp,std::__1::__hash_value_type<android::ApexVendorOp,std::__1::function<int ()(android::ApexColorFormat,OMX_COLOR_FORMATTYPE *)>>,std::__1::hash<android::ApexVendorOp>,true>,std::__1::__unordered_map_equal<android::ApexVendorOp,std::__1::__hash_value_type<android::ApexVendorOp,std::__1::function<int ()(android::ApexColorFormat,OMX_COLOR_FORMATTYPE *)>>,std::__1::equal_to<android::ApexVendorOp>,true>,std::__1::allocator<std::__1::__hash_value_type<android::ApexVendorOp,std::__1::function<int ()(android::ApexColorFormat,OMX_COLOR_FORMATTYPE *)>>>>::rehash(ulong)+78↑j
.text:0000000000015790                 LDR             X9, [X19,#0x18]
.text:0000000000015794                 LDR             S1, [X19,#0x20]
.text:0000000000015798                 UCVTF           S0, X9
.text:000000000001579C                 FDIV            S0, S0, S1
.text:00000000000157A0                 FCVTPU          X0, S0  ; this
.text:00000000000157A4                 CBZ             W8, loc_157C8
.text:00000000000157A8                 CMP             X0, #2
.text:00000000000157AC                 B.CC            loc_157CC
.text:00000000000157B0                 SUB             X8, X0, #1
.text:00000000000157B4                 CLZ             X8, X8
.text:00000000000157B8                 NEG             W8, W8
.text:00000000000157BC                 MOV             W9, #1
.text:00000000000157C0                 LSL             X0, X9, X8
.text:00000000000157C4                 B               loc_157CC
.text:00000000000157C8 ; ---------------------------------------------------------------------------
.text:00000000000157C8 loc_157C8                               ; CODE XREF: std::__1::__hash_table<std::__1::__hash_value_type<android::ApexVendorOp,std::__1::function<int ()(android::ApexColorFormat,OMX_COLOR_FORMATTYPE *)>>,std::__1::__unordered_map_hasher<android::ApexVendorOp,std::__1::__hash_value_type<android::ApexVendorOp,std::__1::function<int ()(android::ApexColorFormat,OMX_COLOR_FORMATTYPE *)>>,std::__1::hash<android::ApexVendorOp>,true>,std::__1::__unordered_map_equal<android::ApexVendorOp,std::__1::__hash_value_type<android::ApexVendorOp,std::__1::function<int ()(android::ApexColorFormat,OMX_COLOR_FORMATTYPE *)>>,std::__1::equal_to<android::ApexVendorOp>,true>,std::__1::allocator<std::__1::__hash_value_type<android::ApexVendorOp,std::__1::function<int ()(android::ApexColorFormat,OMX_COLOR_FORMATTYPE *)>>>>::rehash(ulong)+94↑j
.text:00000000000157C8                 BL              ._ZNSt3__112__next_primeEm ; std::__1::__next_prime(ulong)
.text:00000000000157CC loc_157CC                               ; CODE XREF: std::__1::__hash_table<std::__1::__hash_value_type<android::ApexVendorOp,std::__1::function<int ()(android::ApexColorFormat,OMX_COLOR_FORMATTYPE *)>>,std::__1::__unordered_map_hasher<android::ApexVendorOp,std::__1::__hash_value_type<android::ApexVendorOp,std::__1::function<int ()(android::ApexColorFormat,OMX_COLOR_FORMATTYPE *)>>,std::__1::hash<android::ApexVendorOp>,true>,std::__1::__unordered_map_equal<android::ApexVendorOp,std::__1::__hash_value_type<android::ApexVendorOp,std::__1::function<int ()(android::ApexColorFormat,OMX_COLOR_FORMATTYPE *)>>,std::__1::equal_to<android::ApexVendorOp>,true>,std::__1::allocator<std::__1::__hash_value_type<android::ApexVendorOp,std::__1::function<int ()(android::ApexColorFormat,OMX_COLOR_FORMATTYPE *)>>>>::rehash(ulong)+9C↑j
.text:00000000000157CC                                         ; std::__1::__hash_table<std::__1::__hash_value_type<android::ApexVendorOp,std::__1::function<int ()(android::ApexColorFormat,OMX_COLOR_FORMATTYPE *)>>,std::__1::__unordered_map_hasher<android::ApexVendorOp,std::__1::__hash_value_type<android::ApexVendorOp,std::__1::function<int ()(android::ApexColorFormat,OMX_COLOR_FORMATTYPE *)>>,std::__1::hash<android::ApexVendorOp>,true>,std::__1::__unordered_map_equal<android::ApexVendorOp,std::__1::__hash_value_type<android::ApexVendorOp,std::__1::function<int ()(android::ApexColorFormat,OMX_COLOR_FORMATTYPE *)>>,std::__1::equal_to<android::ApexVendorOp>,true>,std::__1::allocator<std::__1::__hash_value_type<android::ApexVendorOp,std::__1::function<int ()(android::ApexColorFormat,OMX_COLOR_FORMATTYPE *)>>>>::rehash(ulong)+B4↑j
.text:00000000000157CC                 CMP             X20, X0
.text:00000000000157D0                 CSEL            X1, X0, X20, CC
.text:00000000000157D4                 CMP             X1, X21
.text:00000000000157D8                 B.CS            loc_157E4
.text:00000000000157DC                 MOV             X0, X19
.text:00000000000157E0                 B               loc_15760
.text:00000000000157E4 ; ---------------------------------------------------------------------------
.text:00000000000157E4 loc_157E4                               ; CODE XREF: std::__1::__hash_table<std::__1::__hash_value_type<android::ApexVendorOp,std::__1::function<int ()(android::ApexColorFormat,OMX_COLOR_FORMATTYPE *)>>,std::__1::__unordered_map_hasher<android::ApexVendorOp,std::__1::__hash_value_type<android::ApexVendorOp,std::__1::function<int ()(android::ApexColorFormat,OMX_COLOR_FORMATTYPE *)>>,std::__1::hash<android::ApexVendorOp>,true>,std::__1::__unordered_map_equal<android::ApexVendorOp,std::__1::__hash_value_type<android::ApexVendorOp,std::__1::function<int ()(android::ApexColorFormat,OMX_COLOR_FORMATTYPE *)>>,std::__1::equal_to<android::ApexVendorOp>,true>,std::__1::allocator<std::__1::__hash_value_type<android::ApexVendorOp,std::__1::function<int ()(android::ApexColorFormat,OMX_COLOR_FORMATTYPE *)>>>>::rehash(ulong):loc_15770↑j
.text:00000000000157E4                                         ; std::__1::__hash_table<std::__1::__hash_value_type<android::ApexVendorOp,std::__1::function<int ()(android::ApexColorFormat,OMX_COLOR_FORMATTYPE *)>>,std::__1::__unordered_map_hasher<android::ApexVendorOp,std::__1::__hash_value_type<android::ApexVendorOp,std::__1::function<int ()(android::ApexColorFormat,OMX_COLOR_FORMATTYPE *)>>,std::__1::hash<android::ApexVendorOp>,true>,std::__1::__unordered_map_equal<android::ApexVendorOp,std::__1::__hash_value_type<android::ApexVendorOp,std::__1::function<int ()(android::ApexColorFormat,OMX_COLOR_FORMATTYPE *)>>,std::__1::equal_to<android::ApexVendorOp>,true>,std::__1::allocator<std::__1::__hash_value_type<android::ApexVendorOp,std::__1::function<int ()(android::ApexColorFormat,OMX_COLOR_FORMATTYPE *)>>>>::rehash(ulong)+C8↑j
.text:00000000000157E4                 LDP             X29, X30, [SP,#0x20+var_s0]
.text:00000000000157E8                 LDP             X20, X19, [SP,#0x20+var_10]
.text:00000000000157EC                 LDR             X21, [SP+0x20+var_20],#0x30
.text:00000000000157F0                 RET
.text:00000000000157F0 ; } // starts at 15710
.text:00000000000157F0 ; End of function std::__1::__hash_table<std::__1::__hash_value_type<android::ApexVendorOp,std::__1::function<int ()(android::ApexColorFormat,OMX_COLOR_FORMATTYPE *)>>,std::__1::__unordered_map_hasher<android::ApexVendorOp,std::__1::__hash_value_type<android::ApexVendorOp,std::__1::function<int ()(android::ApexColorFormat,OMX_COLOR_FORMATTYPE *)>>,std::__1::hash<android::ApexVendorOp>,true>,std::__1::__unordered_map_equal<android::ApexVendorOp,std::__1::__hash_value_type<android::ApexVendorOp,std::__1::function<int ()(android::ApexColorFormat,OMX_COLOR_FORMATTYPE *)>>,std::__1::equal_to<android::ApexVendorOp>,true>,std::__1::allocator<std::__1::__hash_value_type<android::ApexVendorOp,std::__1::function<int ()(android::ApexColorFormat,OMX_COLOR_FORMATTYPE *)>>>>::rehash(ulong)
.text:00000000000157F0 ; ---------------------------------------------------------------------------
.text:00000000000157F4                 ALIGN 8
.text:00000000000157F8 ; =============== S U B R O U T I N E =======================================
.text:00000000000157F8 ; Attributes: bp-based frame
.text:00000000000157F8 ; std::__1::__hash_table<std::__1::__hash_value_type<android::ApexVendorOp, std::__1::function<int ()(android::ApexColorFormat, OMX_COLOR_FORMATTYPE *)>>, std::__1::__unordered_map_hasher<android::ApexVendorOp, std::__1::__hash_value_type<android::ApexVendorOp, std::__1::function<int ()(android::ApexColorFormat, OMX_COLOR_FORMATTYPE *)>>, std::__1::hash<android::ApexVendorOp>, true>, std::__1::__unordered_map_equal<android::ApexVendorOp, std::__1::__hash_value_type<android::ApexVendorOp, std::__1::function<int ()(android::ApexColorFormat, OMX_COLOR_FORMATTYPE *)>>, std::__1::equal_to<android::ApexVendorOp>, true>, std::__1::allocator<std::__1::__hash_value_type<android::ApexVendorOp, std::__1::function<int ()(android::ApexColorFormat, OMX_COLOR_FORMATTYPE *)>>>>::__rehash(unsigned long)
.text:00000000000157F8                 WEAK _ZNSt3__112__hash_tableINS_17__hash_value_typeIN7android12ApexVendorOpENS_8functionIFiNS2_15ApexColorFormatEP20OMX_COLOR_FORMATTYPEEEEEENS_22__unordered_map_hasherIS3_SA_NS_4hashIS3_EELb1EEENS_21__unordered_map_equalIS3_SA_NS_8equal_toIS3_EELb1EEENS_9allocatorISA_EEE8__rehashEm
.text:00000000000157F8 _ZNSt3__112__hash_tableINS_17__hash_value_typeIN7android12ApexVendorOpENS_8functionIFiNS2_15ApexColorFormatEP20OMX_COLOR_FORMATTYPEEEEEENS_22__unordered_map_hasherIS3_SA_NS_4hashIS3_EELb1EEENS_21__unordered_map_equalIS3_SA_NS_8equal_toIS3_EELb1EEENS_9allocatorISA_EEE8__rehashEm
.text:00000000000157F8                                         ; CODE XREF: std::__1::__hash_table<std::__1::__hash_value_type<android::ApexVendorOp,std::__1::function<int ()(android::ApexColorFormat,OMX_COLOR_FORMATTYPE *)>>,std::__1::__unordered_map_hasher<android::ApexVendorOp,std::__1::__hash_value_type<android::ApexVendorOp,std::__1::function<int ()(android::ApexColorFormat,OMX_COLOR_FORMATTYPE *)>>,std::__1::hash<android::ApexVendorOp>,true>,std::__1::__unordered_map_equal<android::ApexVendorOp,std::__1::__hash_value_type<android::ApexVendorOp,std::__1::function<int ()(android::ApexColorFormat,OMX_COLOR_FORMATTYPE *)>>,std::__1::equal_to<android::ApexVendorOp>,true>,std::__1::allocator<std::__1::__hash_value_type<android::ApexVendorOp,std::__1::function<int ()(android::ApexColorFormat,OMX_COLOR_FORMATTYPE *)>>>>::__rehash(ulong)+C↓j
.text:00000000000157F8                                         ; DATA XREF: LOAD:0000000000001CF8↑o ...
.text:00000000000157F8 var_10          = -0x10
.text:00000000000157F8 var_s0          =  0
.text:00000000000157F8 ; __unwind {
.text:00000000000157F8                 STP             X20, X19, [SP,#-0x10+var_10]!
.text:00000000000157FC                 STP             X29, X30, [SP,#0x10+var_s0]
.text:0000000000015800                 ADD             X29, SP, #0x10
.text:0000000000015804                 MOV             X19, X0
.text:0000000000015808                 CBZ             X1, loc_15880
.text:000000000001580C                 MOV             X20, X1
.text:0000000000015810                 LSR             X8, X1, #0x3D ; '='
.text:0000000000015814                 CBNZ            X8, loc_15968
.text:0000000000015818                 LSL             X0, X20, #3 ; unsigned __int64
.text:000000000001581C                 BL              ._Znwm  ; operator new(ulong)
.text:0000000000015820                 LDR             X8, [X19]
.text:0000000000015824                 STR             X0, [X19]
.text:0000000000015828                 CBZ             X8, loc_15834
.text:000000000001582C                 MOV             X0, X8  ; void *
.text:0000000000015830                 BL              ._ZdlPv ; operator delete(void *)
.text:0000000000015834 loc_15834                               ; CODE XREF: std::__1::__hash_table<std::__1::__hash_value_type<android::ApexVendorOp,std::__1::function<int ()(android::ApexColorFormat,OMX_COLOR_FORMATTYPE *)>>,std::__1::__unordered_map_hasher<android::ApexVendorOp,std::__1::__hash_value_type<android::ApexVendorOp,std::__1::function<int ()(android::ApexColorFormat,OMX_COLOR_FORMATTYPE *)>>,std::__1::hash<android::ApexVendorOp>,true>,std::__1::__unordered_map_equal<android::ApexVendorOp,std::__1::__hash_value_type<android::ApexVendorOp,std::__1::function<int ()(android::ApexColorFormat,OMX_COLOR_FORMATTYPE *)>>,std::__1::equal_to<android::ApexVendorOp>,true>,std::__1::allocator<std::__1::__hash_value_type<android::ApexVendorOp,std::__1::function<int ()(android::ApexColorFormat,OMX_COLOR_FORMATTYPE *)>>>>::__rehash(ulong)+30↑j
.text:0000000000015834                 MOV             X8, XZR
.text:0000000000015838                 STR             X20, [X19,#8]
.text:000000000001583C loc_1583C                               ; CODE XREF: std::__1::__hash_table<std::__1::__hash_value_type<android::ApexVendorOp,std::__1::function<int ()(android::ApexColorFormat,OMX_COLOR_FORMATTYPE *)>>,std::__1::__unordered_map_hasher<android::ApexVendorOp,std::__1::__hash_value_type<android::ApexVendorOp,std::__1::function<int ()(android::ApexColorFormat,OMX_COLOR_FORMATTYPE *)>>,std::__1::hash<android::ApexVendorOp>,true>,std::__1::__unordered_map_equal<android::ApexVendorOp,std::__1::__hash_value_type<android::ApexVendorOp,std::__1::function<int ()(android::ApexColorFormat,OMX_COLOR_FORMATTYPE *)>>,std::__1::equal_to<android::ApexVendorOp>,true>,std::__1::allocator<std::__1::__hash_value_type<android::ApexVendorOp,std::__1::function<int ()(android::ApexColorFormat,OMX_COLOR_FORMATTYPE *)>>>>::__rehash(ulong)+54↓j
.text:000000000001583C                 LDR             X9, [X19]
.text:0000000000015840                 STR             XZR, [X9,X8,LSL#3]
.text:0000000000015844                 ADD             X8, X8, #1
.text:0000000000015848                 CMP             X20, X8
.text:000000000001584C                 B.NE            loc_1583C
.text:0000000000015850                 MOV             X12, X19
.text:0000000000015854                 LDR             X8, [X12,#0x10]!
.text:0000000000015858                 CBZ             X8, loc_1595C
.text:000000000001585C                 LDR             X11, [X8,#8]
.text:0000000000015860                 SUB             X9, X20, #1
.text:0000000000015864                 ANDS            X10, X9, X20
.text:0000000000015868                 B.EQ            loc_15898
.text:000000000001586C                 CMP             X11, X20
.text:0000000000015870                 B.CC            loc_1589C
.text:0000000000015874                 UDIV            X13, X11, X20
.text:0000000000015878                 MSUB            X11, X13, X20, X11
.text:000000000001587C                 B               loc_1589C
.text:0000000000015880 ; ---------------------------------------------------------------------------
.text:0000000000015880 loc_15880                               ; CODE XREF: std::__1::__hash_table<std::__1::__hash_value_type<android::ApexVendorOp,std::__1::function<int ()(android::ApexColorFormat,OMX_COLOR_FORMATTYPE *)>>,std::__1::__unordered_map_hasher<android::ApexVendorOp,std::__1::__hash_value_type<android::ApexVendorOp,std::__1::function<int ()(android::ApexColorFormat,OMX_COLOR_FORMATTYPE *)>>,std::__1::hash<android::ApexVendorOp>,true>,std::__1::__unordered_map_equal<android::ApexVendorOp,std::__1::__hash_value_type<android::ApexVendorOp,std::__1::function<int ()(android::ApexColorFormat,OMX_COLOR_FORMATTYPE *)>>,std::__1::equal_to<android::ApexVendorOp>,true>,std::__1::allocator<std::__1::__hash_value_type<android::ApexVendorOp,std::__1::function<int ()(android::ApexColorFormat,OMX_COLOR_FORMATTYPE *)>>>>::__rehash(ulong)+10↑j
.text:0000000000015880                 LDR             X0, [X19] ; void *
.text:0000000000015884                 STR             XZR, [X19]
.text:0000000000015888                 CBZ             X0, loc_15890
.text:000000000001588C                 BL              ._ZdlPv ; operator delete(void *)
.text:0000000000015890 loc_15890                               ; CODE XREF: std::__1::__hash_table<std::__1::__hash_value_type<android::ApexVendorOp,std::__1::function<int ()(android::ApexColorFormat,OMX_COLOR_FORMATTYPE *)>>,std::__1::__unordered_map_hasher<android::ApexVendorOp,std::__1::__hash_value_type<android::ApexVendorOp,std::__1::function<int ()(android::ApexColorFormat,OMX_COLOR_FORMATTYPE *)>>,std::__1::hash<android::ApexVendorOp>,true>,std::__1::__unordered_map_equal<android::ApexVendorOp,std::__1::__hash_value_type<android::ApexVendorOp,std::__1::function<int ()(android::ApexColorFormat,OMX_COLOR_FORMATTYPE *)>>,std::__1::equal_to<android::ApexVendorOp>,true>,std::__1::allocator<std::__1::__hash_value_type<android::ApexVendorOp,std::__1::function<int ()(android::ApexColorFormat,OMX_COLOR_FORMATTYPE *)>>>>::__rehash(ulong)+90↑j
.text:0000000000015890                 STR             XZR, [X19,#8]
.text:0000000000015894                 B               loc_1595C
.text:0000000000015898 ; ---------------------------------------------------------------------------
.text:0000000000015898 loc_15898                               ; CODE XREF: std::__1::__hash_table<std::__1::__hash_value_type<android::ApexVendorOp,std::__1::function<int ()(android::ApexColorFormat,OMX_COLOR_FORMATTYPE *)>>,std::__1::__unordered_map_hasher<android::ApexVendorOp,std::__1::__hash_value_type<android::ApexVendorOp,std::__1::function<int ()(android::ApexColorFormat,OMX_COLOR_FORMATTYPE *)>>,std::__1::hash<android::ApexVendorOp>,true>,std::__1::__unordered_map_equal<android::ApexVendorOp,std::__1::__hash_value_type<android::ApexVendorOp,std::__1::function<int ()(android::ApexColorFormat,OMX_COLOR_FORMATTYPE *)>>,std::__1::equal_to<android::ApexVendorOp>,true>,std::__1::allocator<std::__1::__hash_value_type<android::ApexVendorOp,std::__1::function<int ()(android::ApexColorFormat,OMX_COLOR_FORMATTYPE *)>>>>::__rehash(ulong)+70↑j
.text:0000000000015898                 AND             X11, X11, X9
.text:000000000001589C loc_1589C                               ; CODE XREF: std::__1::__hash_table<std::__1::__hash_value_type<android::ApexVendorOp,std::__1::function<int ()(android::ApexColorFormat,OMX_COLOR_FORMATTYPE *)>>,std::__1::__unordered_map_hasher<android::ApexVendorOp,std::__1::__hash_value_type<android::ApexVendorOp,std::__1::function<int ()(android::ApexColorFormat,OMX_COLOR_FORMATTYPE *)>>,std::__1::hash<android::ApexVendorOp>,true>,std::__1::__unordered_map_equal<android::ApexVendorOp,std::__1::__hash_value_type<android::ApexVendorOp,std::__1::function<int ()(android::ApexColorFormat,OMX_COLOR_FORMATTYPE *)>>,std::__1::equal_to<android::ApexVendorOp>,true>,std::__1::allocator<std::__1::__hash_value_type<android::ApexVendorOp,std::__1::function<int ()(android::ApexColorFormat,OMX_COLOR_FORMATTYPE *)>>>>::__rehash(ulong)+78↑j
.text:000000000001589C                                         ; std::__1::__hash_table<std::__1::__hash_value_type<android::ApexVendorOp,std::__1::function<int ()(android::ApexColorFormat,OMX_COLOR_FORMATTYPE *)>>,std::__1::__unordered_map_hasher<android::ApexVendorOp,std::__1::__hash_value_type<android::ApexVendorOp,std::__1::function<int ()(android::ApexColorFormat,OMX_COLOR_FORMATTYPE *)>>,std::__1::hash<android::ApexVendorOp>,true>,std::__1::__unordered_map_equal<android::ApexVendorOp,std::__1::__hash_value_type<android::ApexVendorOp,std::__1::function<int ()(android::ApexColorFormat,OMX_COLOR_FORMATTYPE *)>>,std::__1::equal_to<android::ApexVendorOp>,true>,std::__1::allocator<std::__1::__hash_value_type<android::ApexVendorOp,std::__1::function<int ()(android::ApexColorFormat,OMX_COLOR_FORMATTYPE *)>>>>::__rehash(ulong)+84↑j
.text:000000000001589C                 LDR             X13, [X19]
.text:00000000000158A0                 STR             X12, [X13,X11,LSL#3]
.text:00000000000158A4                 LDR             X12, [X8]
.text:00000000000158A8                 CBNZ            X12, loc_158BC
.text:00000000000158AC                 B               loc_1595C
.text:00000000000158B0 ; ---------------------------------------------------------------------------
.text:00000000000158B0 loc_158B0                               ; CODE XREF: std::__1::__hash_table<std::__1::__hash_value_type<android::ApexVendorOp,std::__1::function<int ()(android::ApexColorFormat,OMX_COLOR_FORMATTYPE *)>>,std::__1::__unordered_map_hasher<android::ApexVendorOp,std::__1::__hash_value_type<android::ApexVendorOp,std::__1::function<int ()(android::ApexColorFormat,OMX_COLOR_FORMATTYPE *)>>,std::__1::hash<android::ApexVendorOp>,true>,std::__1::__unordered_map_equal<android::ApexVendorOp,std::__1::__hash_value_type<android::ApexVendorOp,std::__1::function<int ()(android::ApexColorFormat,OMX_COLOR_FORMATTYPE *)>>,std::__1::equal_to<android::ApexVendorOp>,true>,std::__1::allocator<std::__1::__hash_value_type<android::ApexVendorOp,std::__1::function<int ()(android::ApexColorFormat,OMX_COLOR_FORMATTYPE *)>>>>::__rehash(ulong)+E0↓j
.text:00000000000158B0                                         ; std::__1::__hash_table<std::__1::__hash_value_type<android::ApexVendorOp,std::__1::function<int ()(android::ApexColorFormat,OMX_COLOR_FORMATTYPE *)>>,std::__1::__unordered_map_hasher<android::ApexVendorOp,std::__1::__hash_value_type<android::ApexVendorOp,std::__1::function<int ()(android::ApexColorFormat,OMX_COLOR_FORMATTYPE *)>>,std::__1::hash<android::ApexVendorOp>,true>,std::__1::__unordered_map_equal<android::ApexVendorOp,std::__1::__hash_value_type<android::ApexVendorOp,std::__1::function<int ()(android::ApexColorFormat,OMX_COLOR_FORMATTYPE *)>>,std::__1::equal_to<android::ApexVendorOp>,true>,std::__1::allocator<std::__1::__hash_value_type<android::ApexVendorOp,std::__1::function<int ()(android::ApexColorFormat,OMX_COLOR_FORMATTYPE *)>>>>::__rehash(ulong)+F0↓j
.text:00000000000158B0                 MOV             X8, X12
.text:00000000000158B4                 LDR             X12, [X8]
.text:00000000000158B8                 CBZ             X12, loc_1595C
.text:00000000000158BC loc_158BC                               ; CODE XREF: std::__1::__hash_table<std::__1::__hash_value_type<android::ApexVendorOp,std::__1::function<int ()(android::ApexColorFormat,OMX_COLOR_FORMATTYPE *)>>,std::__1::__unordered_map_hasher<android::ApexVendorOp,std::__1::__hash_value_type<android::ApexVendorOp,std::__1::function<int ()(android::ApexColorFormat,OMX_COLOR_FORMATTYPE *)>>,std::__1::hash<android::ApexVendorOp>,true>,std::__1::__unordered_map_equal<android::ApexVendorOp,std::__1::__hash_value_type<android::ApexVendorOp,std::__1::function<int ()(android::ApexColorFormat,OMX_COLOR_FORMATTYPE *)>>,std::__1::equal_to<android::ApexVendorOp>,true>,std::__1::allocator<std::__1::__hash_value_type<android::ApexVendorOp,std::__1::function<int ()(android::ApexColorFormat,OMX_COLOR_FORMATTYPE *)>>>>::__rehash(ulong)+B0↑j
.text:00000000000158BC                                         ; std::__1::__hash_table<std::__1::__hash_value_type<android::ApexVendorOp,std::__1::function<int ()(android::ApexColorFormat,OMX_COLOR_FORMATTYPE *)>>,std::__1::__unordered_map_hasher<android::ApexVendorOp,std::__1::__hash_value_type<android::ApexVendorOp,std::__1::function<int ()(android::ApexColorFormat,OMX_COLOR_FORMATTYPE *)>>,std::__1::hash<android::ApexVendorOp>,true>,std::__1::__unordered_map_equal<android::ApexVendorOp,std::__1::__hash_value_type<android::ApexVendorOp,std::__1::function<int ()(android::ApexColorFormat,OMX_COLOR_FORMATTYPE *)>>,std::__1::equal_to<android::ApexVendorOp>,true>,std::__1::allocator<std::__1::__hash_value_type<android::ApexVendorOp,std::__1::function<int ()(android::ApexColorFormat,OMX_COLOR_FORMATTYPE *)>>>>::__rehash(ulong)+148↓j ...
.text:00000000000158BC                 LDR             X13, [X12,#8]
.text:00000000000158C0                 CBZ             X10, loc_158E0
.text:00000000000158C4                 CMP             X13, X20
.text:00000000000158C8                 B.CC            loc_158D4
.text:00000000000158CC                 UDIV            X14, X13, X20
.text:00000000000158D0                 MSUB            X13, X14, X20, X13
.text:00000000000158D4 loc_158D4                               ; CODE XREF: std::__1::__hash_table<std::__1::__hash_value_type<android::ApexVendorOp,std::__1::function<int ()(android::ApexColorFormat,OMX_COLOR_FORMATTYPE *)>>,std::__1::__unordered_map_hasher<android::ApexVendorOp,std::__1::__hash_value_type<android::ApexVendorOp,std::__1::function<int ()(android::ApexColorFormat,OMX_COLOR_FORMATTYPE *)>>,std::__1::hash<android::ApexVendorOp>,true>,std::__1::__unordered_map_equal<android::ApexVendorOp,std::__1::__hash_value_type<android::ApexVendorOp,std::__1::function<int ()(android::ApexColorFormat,OMX_COLOR_FORMATTYPE *)>>,std::__1::equal_to<android::ApexVendorOp>,true>,std::__1::allocator<std::__1::__hash_value_type<android::ApexVendorOp,std::__1::function<int ()(android::ApexColorFormat,OMX_COLOR_FORMATTYPE *)>>>>::__rehash(ulong)+D0↑j
.text:00000000000158D4                 CMP             X13, X11
.text:00000000000158D8                 B.EQ            loc_158B0
.text:00000000000158DC                 B               loc_158EC
.text:00000000000158E0 ; ---------------------------------------------------------------------------
.text:00000000000158E0 loc_158E0                               ; CODE XREF: std::__1::__hash_table<std::__1::__hash_value_type<android::ApexVendorOp,std::__1::function<int ()(android::ApexColorFormat,OMX_COLOR_FORMATTYPE *)>>,std::__1::__unordered_map_hasher<android::ApexVendorOp,std::__1::__hash_value_type<android::ApexVendorOp,std::__1::function<int ()(android::ApexColorFormat,OMX_COLOR_FORMATTYPE *)>>,std::__1::hash<android::ApexVendorOp>,true>,std::__1::__unordered_map_equal<android::ApexVendorOp,std::__1::__hash_value_type<android::ApexVendorOp,std::__1::function<int ()(android::ApexColorFormat,OMX_COLOR_FORMATTYPE *)>>,std::__1::equal_to<android::ApexVendorOp>,true>,std::__1::allocator<std::__1::__hash_value_type<android::ApexVendorOp,std::__1::function<int ()(android::ApexColorFormat,OMX_COLOR_FORMATTYPE *)>>>>::__rehash(ulong)+C8↑j
.text:00000000000158E0                 AND             X13, X13, X9
.text:00000000000158E4                 CMP             X13, X11
.text:00000000000158E8                 B.EQ            loc_158B0
.text:00000000000158EC loc_158EC                               ; CODE XREF: std::__1::__hash_table<std::__1::__hash_value_type<android::ApexVendorOp,std::__1::function<int ()(android::ApexColorFormat,OMX_COLOR_FORMATTYPE *)>>,std::__1::__unordered_map_hasher<android::ApexVendorOp,std::__1::__hash_value_type<android::ApexVendorOp,std::__1::function<int ()(android::ApexColorFormat,OMX_COLOR_FORMATTYPE *)>>,std::__1::hash<android::ApexVendorOp>,true>,std::__1::__unordered_map_equal<android::ApexVendorOp,std::__1::__hash_value_type<android::ApexVendorOp,std::__1::function<int ()(android::ApexColorFormat,OMX_COLOR_FORMATTYPE *)>>,std::__1::equal_to<android::ApexVendorOp>,true>,std::__1::allocator<std::__1::__hash_value_type<android::ApexVendorOp,std::__1::function<int ()(android::ApexColorFormat,OMX_COLOR_FORMATTYPE *)>>>>::__rehash(ulong)+E4↑j
.text:00000000000158EC                 LDR             X14, [X19]
.text:00000000000158F0                 MOV             X15, X12
.text:00000000000158F4                 LDR             X16, [X14,X13,LSL#3]
.text:00000000000158F8                 CBZ             X16, loc_15948
.text:00000000000158FC loc_158FC                               ; CODE XREF: std::__1::__hash_table<std::__1::__hash_value_type<android::ApexVendorOp,std::__1::function<int ()(android::ApexColorFormat,OMX_COLOR_FORMATTYPE *)>>,std::__1::__unordered_map_hasher<android::ApexVendorOp,std::__1::__hash_value_type<android::ApexVendorOp,std::__1::function<int ()(android::ApexColorFormat,OMX_COLOR_FORMATTYPE *)>>,std::__1::hash<android::ApexVendorOp>,true>,std::__1::__unordered_map_equal<android::ApexVendorOp,std::__1::__hash_value_type<android::ApexVendorOp,std::__1::function<int ()(android::ApexColorFormat,OMX_COLOR_FORMATTYPE *)>>,std::__1::equal_to<android::ApexVendorOp>,true>,std::__1::allocator<std::__1::__hash_value_type<android::ApexVendorOp,std::__1::function<int ()(android::ApexColorFormat,OMX_COLOR_FORMATTYPE *)>>>>::__rehash(ulong)+11C↓j
.text:00000000000158FC                 MOV             X14, X15
.text:0000000000015900                 LDR             X15, [X15]
.text:0000000000015904                 CBZ             X15, loc_15918
.text:0000000000015908                 LDR             W16, [X12,#0x10]
.text:000000000001590C                 LDR             W17, [X15,#0x10]
.text:0000000000015910                 CMP             W16, W17
.text:0000000000015914                 B.EQ            loc_158FC
.text:0000000000015918 loc_15918                               ; CODE XREF: std::__1::__hash_table<std::__1::__hash_value_type<android::ApexVendorOp,std::__1::function<int ()(android::ApexColorFormat,OMX_COLOR_FORMATTYPE *)>>,std::__1::__unordered_map_hasher<android::ApexVendorOp,std::__1::__hash_value_type<android::ApexVendorOp,std::__1::function<int ()(android::ApexColorFormat,OMX_COLOR_FORMATTYPE *)>>,std::__1::hash<android::ApexVendorOp>,true>,std::__1::__unordered_map_equal<android::ApexVendorOp,std::__1::__hash_value_type<android::ApexVendorOp,std::__1::function<int ()(android::ApexColorFormat,OMX_COLOR_FORMATTYPE *)>>,std::__1::equal_to<android::ApexVendorOp>,true>,std::__1::allocator<std::__1::__hash_value_type<android::ApexVendorOp,std::__1::function<int ()(android::ApexColorFormat,OMX_COLOR_FORMATTYPE *)>>>>::__rehash(ulong)+10C↑j
.text:0000000000015918                 STR             X15, [X8]
.text:000000000001591C                 LSL             X13, X13, #3
.text:0000000000015920                 LDR             X15, [X19]
.text:0000000000015924                 LDR             X15, [X15,X13]
.text:0000000000015928                 LDR             X15, [X15]
.text:000000000001592C                 STR             X15, [X14]
.text:0000000000015930                 LDR             X14, [X19]
.text:0000000000015934                 LDR             X13, [X14,X13]
.text:0000000000015938                 STR             X12, [X13]
.text:000000000001593C                 LDR             X12, [X8]
.text:0000000000015940                 CBNZ            X12, loc_158BC
.text:0000000000015944                 B               loc_1595C
.text:0000000000015948 ; ---------------------------------------------------------------------------
.text:0000000000015948 loc_15948                               ; CODE XREF: std::__1::__hash_table<std::__1::__hash_value_type<android::ApexVendorOp,std::__1::function<int ()(android::ApexColorFormat,OMX_COLOR_FORMATTYPE *)>>,std::__1::__unordered_map_hasher<android::ApexVendorOp,std::__1::__hash_value_type<android::ApexVendorOp,std::__1::function<int ()(android::ApexColorFormat,OMX_COLOR_FORMATTYPE *)>>,std::__1::hash<android::ApexVendorOp>,true>,std::__1::__unordered_map_equal<android::ApexVendorOp,std::__1::__hash_value_type<android::ApexVendorOp,std::__1::function<int ()(android::ApexColorFormat,OMX_COLOR_FORMATTYPE *)>>,std::__1::equal_to<android::ApexVendorOp>,true>,std::__1::allocator<std::__1::__hash_value_type<android::ApexVendorOp,std::__1::function<int ()(android::ApexColorFormat,OMX_COLOR_FORMATTYPE *)>>>>::__rehash(ulong)+100↑j
.text:0000000000015948                 STR             X8, [X14,X13,LSL#3]
.text:000000000001594C                 MOV             X8, X12
.text:0000000000015950                 MOV             X11, X13
.text:0000000000015954                 LDR             X12, [X8]
.text:0000000000015958                 CBNZ            X12, loc_158BC
.text:000000000001595C loc_1595C                               ; CODE XREF: std::__1::__hash_table<std::__1::__hash_value_type<android::ApexVendorOp,std::__1::function<int ()(android::ApexColorFormat,OMX_COLOR_FORMATTYPE *)>>,std::__1::__unordered_map_hasher<android::ApexVendorOp,std::__1::__hash_value_type<android::ApexVendorOp,std::__1::function<int ()(android::ApexColorFormat,OMX_COLOR_FORMATTYPE *)>>,std::__1::hash<android::ApexVendorOp>,true>,std::__1::__unordered_map_equal<android::ApexVendorOp,std::__1::__hash_value_type<android::ApexVendorOp,std::__1::function<int ()(android::ApexColorFormat,OMX_COLOR_FORMATTYPE *)>>,std::__1::equal_to<android::ApexVendorOp>,true>,std::__1::allocator<std::__1::__hash_value_type<android::ApexVendorOp,std::__1::function<int ()(android::ApexColorFormat,OMX_COLOR_FORMATTYPE *)>>>>::__rehash(ulong)+60↑j
.text:000000000001595C                                         ; std::__1::__hash_table<std::__1::__hash_value_type<android::ApexVendorOp,std::__1::function<int ()(android::ApexColorFormat,OMX_COLOR_FORMATTYPE *)>>,std::__1::__unordered_map_hasher<android::ApexVendorOp,std::__1::__hash_value_type<android::ApexVendorOp,std::__1::function<int ()(android::ApexColorFormat,OMX_COLOR_FORMATTYPE *)>>,std::__1::hash<android::ApexVendorOp>,true>,std::__1::__unordered_map_equal<android::ApexVendorOp,std::__1::__hash_value_type<android::ApexVendorOp,std::__1::function<int ()(android::ApexColorFormat,OMX_COLOR_FORMATTYPE *)>>,std::__1::equal_to<android::ApexVendorOp>,true>,std::__1::allocator<std::__1::__hash_value_type<android::ApexVendorOp,std::__1::function<int ()(android::ApexColorFormat,OMX_COLOR_FORMATTYPE *)>>>>::__rehash(ulong)+9C↑j ...
.text:000000000001595C                 LDP             X29, X30, [SP,#0x10+var_s0]
.text:0000000000015960                 LDP             X20, X19, [SP+0x10+var_10],#0x20
.text:0000000000015964                 RET
.text:0000000000015968 ; ---------------------------------------------------------------------------
.text:0000000000015968 loc_15968                               ; CODE XREF: std::__1::__hash_table<std::__1::__hash_value_type<android::ApexVendorOp,std::__1::function<int ()(android::ApexColorFormat,OMX_COLOR_FORMATTYPE *)>>,std::__1::__unordered_map_hasher<android::ApexVendorOp,std::__1::__hash_value_type<android::ApexVendorOp,std::__1::function<int ()(android::ApexColorFormat,OMX_COLOR_FORMATTYPE *)>>,std::__1::hash<android::ApexVendorOp>,true>,std::__1::__unordered_map_equal<android::ApexVendorOp,std::__1::__hash_value_type<android::ApexVendorOp,std::__1::function<int ()(android::ApexColorFormat,OMX_COLOR_FORMATTYPE *)>>,std::__1::equal_to<android::ApexVendorOp>,true>,std::__1::allocator<std::__1::__hash_value_type<android::ApexVendorOp,std::__1::function<int ()(android::ApexColorFormat,OMX_COLOR_FORMATTYPE *)>>>>::__rehash(ulong)+1C↑j
.text:0000000000015968                 BL              .abort
.text:0000000000015968 ; } // starts at 157F8
.text:0000000000015968 ; End of function std::__1::__hash_table<std::__1::__hash_value_type<android::ApexVendorOp,std::__1::function<int ()(android::ApexColorFormat,OMX_COLOR_FORMATTYPE *)>>,std::__1::__unordered_map_hasher<android::ApexVendorOp,std::__1::__hash_value_type<android::ApexVendorOp,std::__1::function<int ()(android::ApexColorFormat,OMX_COLOR_FORMATTYPE *)>>,std::__1::hash<android::ApexVendorOp>,true>,std::__1::__unordered_map_equal<android::ApexVendorOp,std::__1::__hash_value_type<android::ApexVendorOp,std::__1::function<int ()(android::ApexColorFormat,OMX_COLOR_FORMATTYPE *)>>,std::__1::equal_to<android::ApexVendorOp>,true>,std::__1::allocator<std::__1::__hash_value_type<android::ApexVendorOp,std::__1::function<int ()(android::ApexColorFormat,OMX_COLOR_FORMATTYPE *)>>>>::__rehash(ulong)
.text:0000000000015968 ; ---------------------------------------------------------------------------
.text:000000000001596C                 ALIGN 0x10
.text:0000000000015970 ; =============== S U B R O U T I N E =======================================
.text:0000000000015970 sub_15970                               ; DATA XREF: .init_array:000000000001D540↓o
.text:0000000000015970 ; __unwind {
.text:0000000000015970                 ADRP            X8, #_ZN7android25MEDIA_MIMETYPE_VIDEO_HEVCE_ptr@PAGE
.text:0000000000015974                 ADRP            X9, #__bss_start@PAGE
.text:0000000000015978                 LDR             X8, [X8,#_ZN7android25MEDIA_MIMETYPE_VIDEO_HEVCE_ptr@PAGEOFF]
.text:000000000001597C                 LDR             X8, [X8] ; android::MEDIA_MIMETYPE_VIDEO_HEVC
.text:0000000000015980                 STR             X8, [X9,#__bss_start@PAGEOFF]
.text:0000000000015984                 RET
.text:0000000000015984 ; } // starts at 15970
.text:0000000000015984 ; End of function sub_15970
.text:0000000000015988 ; =============== S U B R O U T I N E =======================================
.text:0000000000015988 ; Attributes: bp-based frame
.text:0000000000015988                 EXPORT sheifm_create
.text:0000000000015988 sheifm_create                           ; CODE XREF: .sheifm_create+C↓j
.text:0000000000015988                                         ; DATA XREF: LOAD:0000000000000DB0↑o ...
.text:0000000000015988 var_60          = -0x60
.text:0000000000015988 var_58          = -0x58
.text:0000000000015988 var_50          = -0x50
.text:0000000000015988 var_40          = -0x40
.text:0000000000015988 var_30          = -0x30
.text:0000000000015988 var_20          = -0x20
.text:0000000000015988 var_10          = -0x10
.text:0000000000015988 var_s0          =  0
.text:0000000000015988 ; __unwind {
.text:0000000000015988                 SUB             SP, SP, #0x70
.text:000000000001598C                 STR             X27, [SP,#0x60+var_50]
.text:0000000000015990                 STP             X26, X25, [SP,#0x60+var_40]
.text:0000000000015994                 STP             X24, X23, [SP,#0x60+var_30]
.text:0000000000015998                 STP             X22, X21, [SP,#0x60+var_20]
.text:000000000001599C                 STP             X20, X19, [SP,#0x60+var_10]
.text:00000000000159A0                 STP             X29, X30, [SP,#0x60+var_s0]
.text:00000000000159A4                 ADD             X29, SP, #0x60
.text:00000000000159A8                 MRS             X26, #3, c13, c0, #2
.text:00000000000159AC                 MOV             X22, X0
.text:00000000000159B0                 LDR             X8, [X26,#0x28]
.text:00000000000159B4                 MOV             X21, X1
.text:00000000000159B8                 STR             X8, [SP,#0x60+var_58]
.text:00000000000159BC                 CBZ             X0, loc_15B3C
.text:00000000000159C0                 MOV             W0, #0x1AF0 ; size
.text:00000000000159C4                 BL              .malloc
.text:00000000000159C8                 MOV             X19, X0
.text:00000000000159CC                 CBZ             X0, loc_15B44
.text:00000000000159D0                 MOV             W2, #0x1AF0 ; n
.text:00000000000159D4                 MOV             X0, X19 ; s
.text:00000000000159D8                 MOV             W1, WZR ; c
.text:00000000000159DC                 MOV             W23, #0xA77134
.text:00000000000159E4                 ADD             X20, X19, #0x10
.text:00000000000159E8                 BL              .memset
.text:00000000000159EC                 MOV             X0, X23 ; size
.text:00000000000159F0                 BL              .malloc
.text:00000000000159F4                 STR             X0, [X19,#0x20]
.text:00000000000159F8                 CBZ             X0, loc_15B30
.text:00000000000159FC                 MOV             X24, X0
.text:0000000000015A00                 MOV             X0, X23 ; size
.text:0000000000015A04                 BL              .malloc
.text:0000000000015A08                 STR             X0, [X19,#0x40]
.text:0000000000015A0C                 CBZ             X0, loc_15B30
.text:0000000000015A10                 MOV             X25, X0
.text:0000000000015A14                 MOV             X0, X24 ; s
.text:0000000000015A18                 MOV             W1, WZR ; c
.text:0000000000015A1C                 MOV             X2, X23 ; n
.text:0000000000015A20                 MOV             W27, #0x4845494D
.text:0000000000015A28                 BL              .memset
.text:0000000000015A2C                 MOV             X0, X25 ; s
.text:0000000000015A30                 MOV             W1, WZR ; c
.text:0000000000015A34                 MOV             X2, X23 ; n
.text:0000000000015A38                 BL              .memset
.text:0000000000015A3C                 LDR             X8, [X19,#0x20]
.text:0000000000015A40                 MOV             W10, #0x19C8
.text:0000000000015A44                 LDR             X9, [X19,#0x40]
.text:0000000000015A48                 ADD             X0, X19, X10
.text:0000000000015A4C                 MOV             W1, #0x18
.text:0000000000015A50                 STR             W27, [X19,#0x18]
.text:0000000000015A54                 STR             W23, [X19,#0x48]
.text:0000000000015A58                 STR             W23, [X19,#0x58]
.text:0000000000015A5C                 STR             W23, [X19,#0x28]
.text:0000000000015A60                 STR             W23, [X19,#0x38]
.text:0000000000015A64                 STR             X8, [X19,#0x30]
.text:0000000000015A68                 STR             X9, [X19,#0x50]
.text:0000000000015A6C                 BL              .sheif_mblk_ctor
.text:0000000000015A70                 CBNZ            W0, loc_15B30
.text:0000000000015A74                 MOV             W8, #0x19F0
.text:0000000000015A78                 ADD             X0, X19, X8
.text:0000000000015A7C                 MOV             W1, #0x18
.text:0000000000015A80                 BL              .sheif_mblk_ctor
.text:0000000000015A84                 CBNZ            W0, loc_15B30
.text:0000000000015A88                 MOV             W8, #0x1A40
.text:0000000000015A8C                 ADD             X0, X19, X8
.text:0000000000015A90                 MOV             W1, #0x10
.text:0000000000015A94                 BL              .sheif_mblk_ctor
.text:0000000000015A98                 CBNZ            W0, loc_15B30
.text:0000000000015A9C                 MOV             W8, #0x19A0
.text:0000000000015AA0                 ADD             X0, X19, X8
.text:0000000000015AA4                 MOV             W1, #0x15
.text:0000000000015AA8                 BL              .sheif_mblk_ctor
.text:0000000000015AAC                 CBNZ            W0, loc_15B30
.text:0000000000015AB0                 MOV             W8, #0x1A18
.text:0000000000015AB4                 ADD             X0, X19, X8
.text:0000000000015AB8                 MOV             W1, #0x102
.text:0000000000015ABC                 BL              .sheif_mblk_ctor
.text:0000000000015AC0                 CBNZ            W0, loc_15B30
.text:0000000000015AC4                 MOV             X0, X20
.text:0000000000015AC8                 STR             W27, [X19]
.text:0000000000015ACC                 MOV             X1, X22
.text:0000000000015AD0                 STR             X19, [X19,#8]
.text:0000000000015AD4                 BL              .sheifm_atom_ftyp
.text:0000000000015AD8                 CBNZ            W0, loc_15B30
.text:0000000000015ADC                 LDR             W8, [X19,#0x48]
.text:0000000000015AE0                 ADRP            X10, #qword_9D00@PAGE
.text:0000000000015AE4                 LDR             W9, [X19,#0x58]
.text:0000000000015AE8                 LDR             D0, [X10,#qword_9D00@PAGEOFF]
.text:0000000000015AEC                 SUB             W8, W8, W9
.text:0000000000015AF0                 CMP             W9, #8
.text:0000000000015AF4                 STR             D0, [SP,#0x60+var_60]
.text:0000000000015AF8                 STR             W8, [X19,#0x5C]
.text:0000000000015AFC                 B.CC            loc_15B30
.text:0000000000015B00                 LDR             X8, [X19,#0x50]
.text:0000000000015B04                 LDR             X9, [SP,#0x60+var_60]
.text:0000000000015B08                 STR             X9, [X8]
.text:0000000000015B0C                 LDR             X8, [X19,#0x50]
.text:0000000000015B10                 LDR             W9, [X19,#0x58]
.text:0000000000015B14                 ADD             X8, X8, #8
.text:0000000000015B18                 SUB             W9, W9, #8
.text:0000000000015B1C                 STR             X8, [X19,#0x50]
.text:0000000000015B20                 STR             W9, [X19,#0x58]
.text:0000000000015B24                 CBZ             X21, loc_15BF4
.text:0000000000015B28                 STR             WZR, [X21]
.text:0000000000015B2C                 B               loc_15BF4
.text:0000000000015B30 ; ---------------------------------------------------------------------------
.text:0000000000015B30 loc_15B30                               ; CODE XREF: sheifm_create+70↑j
.text:0000000000015B30                                         ; sheifm_create+84↑j ...
.text:0000000000015B30                 MOV             X22, X19
.text:0000000000015B34                 MOV             X23, X20
.text:0000000000015B38                 B               loc_15B50
.text:0000000000015B3C ; ---------------------------------------------------------------------------
.text:0000000000015B3C loc_15B3C                               ; CODE XREF: sheifm_create+34↑j
.text:0000000000015B3C                 MOV             X19, XZR
.text:0000000000015B40                 B               loc_15B48
.text:0000000000015B44 ; ---------------------------------------------------------------------------
.text:0000000000015B44 loc_15B44                               ; CODE XREF: sheifm_create+44↑j
.text:0000000000015B44                 MOV             X22, XZR
.text:0000000000015B48 loc_15B48                               ; CODE XREF: sheifm_create+1B8↑j
.text:0000000000015B48                 MOV             X20, XZR
.text:0000000000015B4C                 MOV             X23, XZR
.text:0000000000015B50 loc_15B50                               ; CODE XREF: sheifm_create+1B0↑j
.text:0000000000015B50                 ADRP            X1, #aSheifm@PAGE ; "sheifm"
.text:0000000000015B54                 ADRP            X2, #aSheifmCreateFa@PAGE ; "sheifm_create() failed"
.text:0000000000015B58                 ADD             X1, X1, #aSheifm@PAGEOFF ; "sheifm"
.text:0000000000015B5C                 ADD             X2, X2, #aSheifmCreateFa@PAGEOFF ; "sheifm_create() failed"
.text:0000000000015B60                 MOV             W0, #6
.text:0000000000015B64                 BL              .__android_log_print
.text:0000000000015B68                 CBZ             X21, loc_15B74
.text:0000000000015B6C                 MOV             W8, #0xFFFFFFFE
.text:0000000000015B70                 STR             W8, [X21]
.text:0000000000015B74 loc_15B74                               ; CODE XREF: sheifm_create+1E0↑j
.text:0000000000015B74                 CBZ             X23, loc_15BE4
.text:0000000000015B78                 MOV             W8, #0x19B8
.text:0000000000015B7C                 ADD             X0, X23, X8
.text:0000000000015B80                 BL              .sheif_mblk_dtor
.text:0000000000015B84                 MOV             W8, #0x19E0
.text:0000000000015B88                 ADD             X0, X23, X8
.text:0000000000015B8C                 BL              .sheif_mblk_dtor
.text:0000000000015B90                 MOV             W8, #0x1A30
.text:0000000000015B94                 ADD             X0, X23, X8
.text:0000000000015B98                 BL              .sheif_mblk_dtor
.text:0000000000015B9C                 MOV             W8, #0x1990
.text:0000000000015BA0                 ADD             X0, X23, X8
.text:0000000000015BA4                 BL              .sheif_mblk_dtor
.text:0000000000015BA8                 MOV             W8, #0x1A08
.text:0000000000015BAC                 ADD             X0, X23, X8
.text:0000000000015BB0                 BL              .sheif_mblk_dtor
.text:0000000000015BB4                 LDR             X0, [X23,#0x10] ; ptr
.text:0000000000015BB8                 CBZ             X0, loc_15BC4
.text:0000000000015BBC                 BL              .free
.text:0000000000015BC0                 STR             XZR, [X23,#0x10]
.text:0000000000015BC4 loc_15BC4                               ; CODE XREF: sheifm_create+230↑j
.text:0000000000015BC4                 LDR             X0, [X23,#0x30] ; ptr
.text:0000000000015BC8                 CBZ             X0, loc_15BD4
.text:0000000000015BCC                 BL              .free
.text:0000000000015BD0                 STR             XZR, [X23,#0x30]
.text:0000000000015BD4 loc_15BD4                               ; CODE XREF: sheifm_create+240↑j
.text:0000000000015BD4                 MOV             W2, #0x1A60 ; n
.text:0000000000015BD8                 MOV             X0, X20 ; s
.text:0000000000015BDC                 MOV             W1, WZR ; c
.text:0000000000015BE0                 BL              .memset
.text:0000000000015BE4 loc_15BE4                               ; CODE XREF: sheifm_create:loc_15B74↑j
.text:0000000000015BE4                 CBZ             X22, loc_15BF0
.text:0000000000015BE8                 MOV             X0, X19 ; ptr
.text:0000000000015BEC                 BL              .free
.text:0000000000015BF0 loc_15BF0                               ; CODE XREF: sheifm_create:loc_15BE4↑j
.text:0000000000015BF0                 MOV             X19, XZR
.text:0000000000015BF4 loc_15BF4                               ; CODE XREF: sheifm_create+19C↑j
.text:0000000000015BF4                                         ; sheifm_create+1A4↑j
.text:0000000000015BF4                 LDR             X8, [X26,#0x28]
.text:0000000000015BF8                 LDR             X9, [SP,#0x60+var_58]
.text:0000000000015BFC                 CMP             X8, X9
.text:0000000000015C00                 B.NE            loc_15C28
.text:0000000000015C04                 MOV             X0, X19
.text:0000000000015C08                 LDR             X27, [SP,#0x60+var_50]
.text:0000000000015C0C                 LDP             X29, X30, [SP,#0x60+var_s0]
.text:0000000000015C10                 LDP             X20, X19, [SP,#0x60+var_10]
.text:0000000000015C14                 LDP             X22, X21, [SP,#0x60+var_20]
.text:0000000000015C18                 LDP             X24, X23, [SP,#0x60+var_30]
.text:0000000000015C1C                 LDP             X26, X25, [SP,#0x60+var_40]
.text:0000000000015C20                 ADD             SP, SP, #0x70 ; 'p'
.text:0000000000015C24                 RET
.text:0000000000015C28 ; ---------------------------------------------------------------------------
.text:0000000000015C28 loc_15C28                               ; CODE XREF: sheifm_create+278↑j
.text:0000000000015C28                 BL              .__stack_chk_fail
.text:0000000000015C28 ; } // starts at 15988
.text:0000000000015C28 ; End of function sheifm_create
.text:0000000000015C28 ; ---------------------------------------------------------------------------
.text:0000000000015C2C                 ALIGN 0x10
.text:0000000000015C30 ; =============== S U B R O U T I N E =======================================
.text:0000000000015C30 ; Attributes: bp-based frame
.text:0000000000015C30                 EXPORT sheifm_add_element_infe
.text:0000000000015C30 sheifm_add_element_infe                 ; DATA XREF: LOAD:0000000000001A70↑o
.text:0000000000015C30 var_40          = -0x40
.text:0000000000015C30 var_3C          = -0x3C
.text:0000000000015C30 var_34          = -0x34
.text:0000000000015C30 var_28          = -0x28
.text:0000000000015C30 var_20          = -0x20
.text:0000000000015C30 var_10          = -0x10
.text:0000000000015C30 var_s0          =  0
.text:0000000000015C30 ; __unwind {
.text:0000000000015C30                 SUB             SP, SP, #0x50
.text:0000000000015C34                 STR             X21, [SP,#0x40+var_20]
.text:0000000000015C38                 STP             X20, X19, [SP,#0x40+var_10]
.text:0000000000015C3C                 STP             X29, X30, [SP,#0x40+var_s0]
.text:0000000000015C40                 ADD             X29, SP, #0x40
.text:0000000000015C44                 MRS             X21, #3, c13, c0, #2
.text:0000000000015C48                 MOV             W9, #0x696D
.text:0000000000015C4C                 LDR             X8, [X21,#0x28]
.text:0000000000015C50                 MOVK            W9, #0x656D,LSL#16
.text:0000000000015C54                 CMP             W2, W9
.text:0000000000015C58                 MOV             W9, #0x15
.text:0000000000015C5C                 MOV             X19, X0
.text:0000000000015C60                 STR             X8, [SP,#0x40+var_28]
.text:0000000000015C64                 MOV             X8, SP
.text:0000000000015C68                 CINC            W20, W9, EQ
.text:0000000000015C6C                 STUR            XZR, [SP,#0x40+var_34]
.text:0000000000015C70                 MOV             W9, #2
.text:0000000000015C74                 STRH            W1, [SP,#0x40+var_34]
.text:0000000000015C78                 ADD             X0, X8, #0xC
.text:0000000000015C7C                 STUR            XZR, [SP,#0x40+var_3C]
.text:0000000000015C80                 STP             W2, WZR, [SP,#0x40+var_34+4]
.text:0000000000015C84                 STR             W20, [SP,#0x40+var_40]
.text:0000000000015C88                 STRB            W9, [SP,#0x40+var_3C+4]
.text:0000000000015C8C                 TBNZ            W3, #0, loc_15C98
.text:0000000000015C90                 MOV             W8, #1
.text:0000000000015C94                 STRB            W8, [SP,#0x40+var_3C+7]
.text:0000000000015C98 loc_15C98                               ; CODE XREF: sheifm_add_element_infe+5C↑j
.text:0000000000015C98                 MOV             W8, #0x65666E69
.text:0000000000015CA0                 STR             W8, [SP,#0x40+var_3C]
.text:0000000000015CA4                 BL              .sheif_conv_u16
.text:0000000000015CA8                 MOV             X0, SP
.text:0000000000015CAC                 BL              .sheif_conv_u32
.text:0000000000015CB0                 MOV             W8, #0x1990
.text:0000000000015CB4                 ADD             X0, X19, X8
.text:0000000000015CB8                 MOV             X1, SP
.text:0000000000015CBC                 MOV             W2, W20
.text:0000000000015CC0                 BL              .sheif_mblk_elem_add_with_size
.text:0000000000015CC4                 CBZ             W0, loc_15CE8
.text:0000000000015CC8                 ADRP            X1, #aSheifm@PAGE ; "sheifm"
.text:0000000000015CCC                 ADRP            X2, #aFailedToSheifm@PAGE ; "failed to sheifm_add_element_infe!"
.text:0000000000015CD0                 ADD             X1, X1, #aSheifm@PAGEOFF ; "sheifm"
.text:0000000000015CD4                 MOV             W0, #5
.text:0000000000015CD8                 ADD             X2, X2, #aFailedToSheifm@PAGEOFF ; "failed to sheifm_add_element_infe!"
.text:0000000000015CDC                 BL              .__android_log_print
.text:0000000000015CE0                 MOV             W0, #0xFFFFFFFB
.text:0000000000015CE4                 B               loc_15CF4
.text:0000000000015CE8 ; ---------------------------------------------------------------------------
.text:0000000000015CE8 loc_15CE8                               ; CODE XREF: sheifm_add_element_infe+94↑j
.text:0000000000015CE8                 LDR             W8, [X19,#0x54]
.text:0000000000015CEC                 ADD             W8, W8, #1
.text:0000000000015CF0                 STR             W8, [X19,#0x54]
.text:0000000000015CF4 loc_15CF4                               ; CODE XREF: sheifm_add_element_infe+B4↑j
.text:0000000000015CF4                 LDR             X8, [X21,#0x28]
.text:0000000000015CF8                 LDR             X9, [SP,#0x40+var_28]
.text:0000000000015CFC                 CMP             X8, X9
.text:0000000000015D00                 B.NE            loc_15D18
.text:0000000000015D04                 LDP             X29, X30, [SP,#0x40+var_s0]
.text:0000000000015D08                 LDP             X20, X19, [SP,#0x40+var_10]
.text:0000000000015D0C                 LDR             X21, [SP,#0x40+var_20]
.text:0000000000015D10                 ADD             SP, SP, #0x50 ; 'P'
.text:0000000000015D14                 RET
.text:0000000000015D18 ; ---------------------------------------------------------------------------
.text:0000000000015D18 loc_15D18                               ; CODE XREF: sheifm_add_element_infe+D0↑j
.text:0000000000015D18                 BL              .__stack_chk_fail
.text:0000000000015D18 ; } // starts at 15C30
.text:0000000000015D18 ; End of function sheifm_add_element_infe
.text:0000000000015D18 ; ---------------------------------------------------------------------------
.text:0000000000015D1C                 ALIGN 0x20
.text:0000000000015D20 ; =============== S U B R O U T I N E =======================================
.text:0000000000015D20 ; Attributes: bp-based frame
.text:0000000000015D20                 EXPORT sheifm_add_element_itemtyperef
.text:0000000000015D20 sheifm_add_element_itemtyperef          ; CODE XREF: .sheifm_add_element_itemtyperef+C↓j
.text:0000000000015D20                                         ; DATA XREF: LOAD:0000000000000F60↑o ...
.text:0000000000015D20 s               = -0x458
.text:0000000000015D20 var_454         = -0x454
.text:0000000000015D20 var_450         = -0x450
.text:0000000000015D20 var_44E         = -0x44E
.text:0000000000015D20 var_44C         = -0x44C
.text:0000000000015D20 var_48          = -0x48
.text:0000000000015D20 var_40          = -0x40
.text:0000000000015D20 var_30          = -0x30
.text:0000000000015D20 var_20          = -0x20
.text:0000000000015D20 var_10          = -0x10
.text:0000000000015D20 var_s0          =  0
.text:0000000000015D20 ; __unwind {
.text:0000000000015D20                 STP             X28, X25, [SP,#-0x10+var_40]!
.text:0000000000015D24                 STP             X24, X23, [SP,#0x40+var_30]
.text:0000000000015D28                 STP             X22, X21, [SP,#0x40+var_20]
.text:0000000000015D2C                 STP             X20, X19, [SP,#0x40+var_10]
.text:0000000000015D30                 STP             X29, X30, [SP,#0x40+var_s0]
.text:0000000000015D34                 ADD             X29, SP, #0x40
.text:0000000000015D38                 SUB             SP, SP, #0x420
.text:0000000000015D3C                 MRS             X24, #3, c13, c0, #2
.text:0000000000015D40                 MOV             W22, W2
.text:0000000000015D44                 LDR             X8, [X24,#0x28]
.text:0000000000015D48                 MOV             W20, W1
.text:0000000000015D4C                 MOV             X19, X0
.text:0000000000015D50                 MOV             W2, #0x40C ; n
.text:0000000000015D54                 ADD             X0, SP, #0x460+s ; s
.text:0000000000015D58                 MOV             W1, WZR ; c
.text:0000000000015D5C                 STUR            X8, [X29,#var_48]
.text:0000000000015D60                 MOV             X21, X4
.text:0000000000015D64                 MOV             W23, W3
.text:0000000000015D68                 BL              .memset
.text:0000000000015D6C                 STR             W23, [SP,#0x460+var_454]
.text:0000000000015D70                 CBZ             X21, loc_15D94
.text:0000000000015D74                 LDP             W8, W9, [X21,#8]
.text:0000000000015D78                 MUL             W8, W9, W8
.text:0000000000015D7C                 AND             W9, W8, #0xFFFF
.text:0000000000015D80                 CMP             W9, #0x200
.text:0000000000015D84                 STRH            W8, [SP,#0x460+var_44E]
.text:0000000000015D88                 B.LS            loc_15DA4
.text:0000000000015D8C                 MOV             W0, #0xFFFFFFFF
.text:0000000000015D90                 B               loc_15EC8
.text:0000000000015D94 ; ---------------------------------------------------------------------------
.text:0000000000015D94 loc_15D94                               ; CODE XREF: sheifm_add_element_itemtyperef+50↑j
.text:0000000000015D94                 MOV             W8, #1
.text:0000000000015D98                 STRH            W22, [SP,#0x460+var_44C]
.text:0000000000015D9C                 STRH            W8, [SP,#0x460+var_44E]
.text:0000000000015DA0                 B               loc_15E48
.text:0000000000015DA4 ; ---------------------------------------------------------------------------
.text:0000000000015DA4 loc_15DA4                               ; CODE XREF: sheifm_add_element_itemtyperef+68↑j
.text:0000000000015DA4                 CBZ             W9, loc_15E48
.text:0000000000015DA8                 LDR             W10, [X21,#0x10]
.text:0000000000015DAC                 CMP             W9, #0x10
.text:0000000000015DB0                 B.CS            loc_15DBC
.text:0000000000015DB4                 MOV             X11, XZR
.text:0000000000015DB8                 B               loc_15E24
.text:0000000000015DBC ; ---------------------------------------------------------------------------
.text:0000000000015DBC loc_15DBC                               ; CODE XREF: sheifm_add_element_itemtyperef+90↑j
.text:0000000000015DBC                 ADRP            X12, #xmmword_9D80@PAGE
.text:0000000000015DC0                 DUP             V0.4S, W10
.text:0000000000015DC4                 ADRP            X13, #xmmword_9DB0@PAGE
.text:0000000000015DC8                 MOVI            V1.8H, #8
.text:0000000000015DCC                 MOVI            V2.4S, #0x10
.text:0000000000015DD0                 AND             X11, X9, #0xFFF0
.text:0000000000015DD4                 ADD             X14, SP, #0x460+s
.text:0000000000015DD8                 LDR             Q3, [X12,#xmmword_9D80@PAGEOFF]
.text:0000000000015DDC                 LDR             Q4, [X13,#xmmword_9DB0@PAGEOFF]
.text:0000000000015DE0                 ADD             X12, X14, #0x1C
.text:0000000000015DE4                 MOV             X13, X11
.text:0000000000015DE8 loc_15DE8                               ; CODE XREF: sheifm_add_element_itemtyperef+F8↓j
.text:0000000000015DE8                 ADD             V5.4S, V0.4S, V4.4S
.text:0000000000015DEC                 SUBS            X13, X13, #0x10
.text:0000000000015DF0                 ADD             V6.4S, V0.4S, V3.4S
.text:0000000000015DF4                 ADD             V4.4S, V4.4S, V2.4S
.text:0000000000015DF8                 ADD             V3.4S, V3.4S, V2.4S
.text:0000000000015DFC                 XTN             V5.4H, V5.4S
.text:0000000000015E00                 MOV             V7.16B, V5.16B
.text:0000000000015E04                 XTN2            V7.8H, V6.4S
.text:0000000000015E08                 XTN2            V5.8H, V6.4S
.text:0000000000015E0C                 ADD             V5.8H, V5.8H, V1.8H
.text:0000000000015E10                 STP             Q7, Q5, [X12,#-0x10]
.text:0000000000015E14                 ADD             X12, X12, #0x20 ; ' '
.text:0000000000015E18                 B.NE            loc_15DE8
.text:0000000000015E1C                 CMP             X11, X9
.text:0000000000015E20                 B.EQ            loc_15E48
.text:0000000000015E24 loc_15E24                               ; CODE XREF: sheifm_add_element_itemtyperef+98↑j
.text:0000000000015E24                 ADD             X12, SP, #0x460+s
.text:0000000000015E28                 ADD             X12, X12, X11,LSL#1
.text:0000000000015E2C                 ADD             W10, W10, W11
.text:0000000000015E30                 ADD             X12, X12, #0xC
.text:0000000000015E34                 SUB             X9, X9, X11
.text:0000000000015E38 loc_15E38                               ; CODE XREF: sheifm_add_element_itemtyperef+124↓j
.text:0000000000015E38                 STRH            W10, [X12],#2
.text:0000000000015E3C                 ADD             W10, W10, #1
.text:0000000000015E40                 SUBS            X9, X9, #1
.text:0000000000015E44                 B.NE            loc_15E38
.text:0000000000015E48 loc_15E48                               ; CODE XREF: sheifm_add_element_itemtyperef+80↑j
.text:0000000000015E48                                         ; sheifm_add_element_itemtyperef:loc_15DA4↑j ...
.text:0000000000015E48                 UBFIZ           W8, W8, #1, #0x10
.text:0000000000015E4C                 STRH            W20, [SP,#0x460+var_450]
.text:0000000000015E50                 ADD             W21, W8, #0xC
.text:0000000000015E54                 ADD             X0, SP, #0x460+s
.text:0000000000015E58                 ADD             X25, SP, #0x460+s
.text:0000000000015E5C                 ADD             X22, X25, #0xA
.text:0000000000015E60                 STR             W21, [SP,#0x460+s]
.text:0000000000015E64                 ADD             X23, X25, #8
.text:0000000000015E68                 BL              .sheif_conv_u32
.text:0000000000015E6C                 MOV             X0, X23
.text:0000000000015E70                 BL              .sheif_conv_u16
.text:0000000000015E74                 LDRH            W8, [SP,#0x460+var_44E]
.text:0000000000015E78                 CBZ             W8, loc_15EA0
.text:0000000000015E7C                 MOV             X23, XZR
.text:0000000000015E80                 ADD             X20, X25, #0xC
.text:0000000000015E84 loc_15E84                               ; CODE XREF: sheifm_add_element_itemtyperef+17C↓j
.text:0000000000015E84                 MOV             X0, X20
.text:0000000000015E88                 BL              .sheif_conv_u16
.text:0000000000015E8C                 LDRH            W8, [SP,#0x460+var_44E]
.text:0000000000015E90                 ADD             X23, X23, #1
.text:0000000000015E94                 ADD             X20, X20, #2
.text:0000000000015E98                 CMP             X23, X8
.text:0000000000015E9C                 B.CC            loc_15E84
.text:0000000000015EA0 loc_15EA0                               ; CODE XREF: sheifm_add_element_itemtyperef+158↑j
.text:0000000000015EA0                 MOV             X0, X22
.text:0000000000015EA4                 BL              .sheif_conv_u16
.text:0000000000015EA8                 MOV             W8, #0x19B8
.text:0000000000015EAC                 ADD             X0, X19, X8
.text:0000000000015EB0                 ADD             X1, SP, #0x460+s
.text:0000000000015EB4                 MOV             W2, W21
.text:0000000000015EB8                 BL              .sheif_mblk_elem_add_with_size
.text:0000000000015EBC                 CMP             W0, #0
.text:0000000000015EC0                 MOV             W8, #0xFFFFFFFB
.text:0000000000015EC4                 CSEL            W0, WZR, W8, EQ
.text:0000000000015EC8 loc_15EC8                               ; CODE XREF: sheifm_add_element_itemtyperef+70↑j
.text:0000000000015EC8                 LDR             X8, [X24,#0x28]
.text:0000000000015ECC                 LDUR            X9, [X29,#var_48]
.text:0000000000015ED0                 CMP             X8, X9
.text:0000000000015ED4                 B.NE            loc_15EF4
.text:0000000000015ED8                 ADD             SP, SP, #0x420
.text:0000000000015EDC                 LDP             X29, X30, [SP,#0x40+var_s0]
.text:0000000000015EE0                 LDP             X20, X19, [SP,#0x40+var_10]
.text:0000000000015EE4                 LDP             X22, X21, [SP,#0x40+var_20]
.text:0000000000015EE8                 LDP             X24, X23, [SP,#0x40+var_30]
.text:0000000000015EEC                 LDP             X28, X25, [SP+0x40+var_40],#0x50
.text:0000000000015EF0                 RET
.text:0000000000015EF4 ; ---------------------------------------------------------------------------
.text:0000000000015EF4 loc_15EF4                               ; CODE XREF: sheifm_add_element_itemtyperef+1B4↑j
.text:0000000000015EF4                 BL              .__stack_chk_fail
.text:0000000000015EF4 ; } // starts at 15D20
.text:0000000000015EF4 ; End of function sheifm_add_element_itemtyperef
.text:0000000000015EF8 ; =============== S U B R O U T I N E =======================================
.text:0000000000015EF8 ; Attributes: bp-based frame
.text:0000000000015EF8                 EXPORT sheifm_add_element_hvcC
.text:0000000000015EF8 sheifm_add_element_hvcC                 ; CODE XREF: .sheifm_add_element_hvcC+C↓j
.text:0000000000015EF8                                         ; DATA XREF: LOAD:0000000000001200↑o ...
.text:0000000000015EF8 var_50          = -0x50
.text:0000000000015EF8 var_48          = -0x48
.text:0000000000015EF8 n               = -0x40
.text:0000000000015EF8 var_38          = -0x38
.text:0000000000015EF8 var_30          = -0x30
.text:0000000000015EF8 var_20          = -0x20
.text:0000000000015EF8 var_10          = -0x10
.text:0000000000015EF8 var_s0          =  0
.text:0000000000015EF8 ; __unwind {
.text:0000000000015EF8                 SUB             SP, SP, #0x60
.text:0000000000015EFC                 STR             X23, [SP,#0x50+var_30]
.text:0000000000015F00                 STP             X22, X21, [SP,#0x50+var_20]
.text:0000000000015F04                 STP             X20, X19, [SP,#0x50+var_10]
.text:0000000000015F08                 STP             X29, X30, [SP,#0x50+var_s0]
.text:0000000000015F0C                 ADD             X29, SP, #0x50
.text:0000000000015F10                 MRS             X23, #3, c13, c0, #2
.text:0000000000015F14                 MOV             X21, X0
.text:0000000000015F18                 LDR             X8, [X23,#0x28]
.text:0000000000015F1C                 STR             X8, [SP,#0x50+var_38]
.text:0000000000015F20                 LDR             W8, [X21,#0xB8]!
.text:0000000000015F24                 CMP             W8, #1
.text:0000000000015F28                 B.LT            loc_15FA8
.text:0000000000015F2C                 LDR             W8, [X0,#0xF0]
.text:0000000000015F30                 MOV             X19, X0
.text:0000000000015F34                 CMP             W8, #1
.text:0000000000015F38                 B.LT            loc_15FA8
.text:0000000000015F3C                 LDR             W8, [X19,#0x128]
.text:0000000000015F40                 CMP             W8, #1
.text:0000000000015F44                 B.LT            loc_15FA8
.text:0000000000015F48                 MOV             X0, X21
.text:0000000000015F4C                 STP             XZR, XZR, [SP,#0x50+var_48]
.text:0000000000015F50                 STR             XZR, [SP,#0x50+var_50]
.text:0000000000015F54                 BL              .sheifm_get_hvcc_size
.text:0000000000015F58                 MOV             W22, W0
.text:0000000000015F5C                 SXTW            X0, W22 ; size
.text:0000000000015F60                 STR             W22, [SP,#0x50+n]
.text:0000000000015F64                 BL              .malloc
.text:0000000000015F68                 CBZ             X0, loc_15F88
.text:0000000000015F6C                 MOV             X20, X0
.text:0000000000015F70                 MOV             X0, X21
.text:0000000000015F74                 MOV             X1, X20
.text:0000000000015F78                 BL              .sheifm_make_hvcc
.text:0000000000015F7C                 CBZ             W0, loc_15FD4
.text:0000000000015F80 loc_15F80                               ; CODE XREF: sheifm_add_element_hvcC+F0↓j
.text:0000000000015F80                 MOV             X0, X20 ; ptr
.text:0000000000015F84 loc_15F84                               ; CODE XREF: sheifm_add_element_hvcC+140↓j
.text:0000000000015F84                 BL              .free
.text:0000000000015F88 loc_15F88                               ; CODE XREF: sheifm_add_element_hvcC+70↑j
.text:0000000000015F88                 ADRP            X1, #aSheifm@PAGE ; "sheifm"
.text:0000000000015F8C                 ADRP            X2, #aFailedToSheifm_0@PAGE ; "failed to sheifm_add_element_hvcC!"
.text:0000000000015F90                 ADD             X1, X1, #aSheifm@PAGEOFF ; "sheifm"
.text:0000000000015F94                 MOV             W0, #5
.text:0000000000015F98                 ADD             X2, X2, #aFailedToSheifm_0@PAGEOFF ; "failed to sheifm_add_element_hvcC!"
.text:0000000000015F9C                 BL              .__android_log_print
.text:0000000000015FA0                 MOV             W0, #0xFFFFFFFB
.text:0000000000015FA4                 B               loc_15FAC
.text:0000000000015FA8 ; ---------------------------------------------------------------------------
.text:0000000000015FA8 loc_15FA8                               ; CODE XREF: sheifm_add_element_hvcC+30↑j
.text:0000000000015FA8                                         ; sheifm_add_element_hvcC+40↑j ...
.text:0000000000015FA8                 MOV             W0, #0xFFFFFFFF
.text:0000000000015FAC loc_15FAC                               ; CODE XREF: sheifm_add_element_hvcC+AC↑j
.text:0000000000015FAC                                         ; sheifm_add_element_hvcC+164↓j
.text:0000000000015FAC                 LDR             X8, [X23,#0x28]
.text:0000000000015FB0                 LDR             X9, [SP,#0x50+var_38]
.text:0000000000015FB4                 CMP             X8, X9
.text:0000000000015FB8                 B.NE            loc_16060
.text:0000000000015FBC                 LDP             X29, X30, [SP,#0x50+var_s0]
.text:0000000000015FC0                 LDP             X20, X19, [SP,#0x50+var_10]
.text:0000000000015FC4                 LDP             X22, X21, [SP,#0x50+var_20]
.text:0000000000015FC8                 LDR             X23, [SP,#0x50+var_30]
.text:0000000000015FCC                 ADD             SP, SP, #0x60 ; '`'
.text:0000000000015FD0                 RET
.text:0000000000015FD4 ; ---------------------------------------------------------------------------
.text:0000000000015FD4 loc_15FD4                               ; CODE XREF: sheifm_add_element_hvcC+84↑j
.text:0000000000015FD4                 MOV             W8, #0x43637668
.text:0000000000015FDC                 ADD             W0, W22, #8 ; size
.text:0000000000015FE0                 STP             W0, W8, [SP,#0x50+var_50]
.text:0000000000015FE4                 BL              .malloc
.text:0000000000015FE8                 CBZ             X0, loc_15F80
.text:0000000000015FEC                 MOV             X21, X0
.text:0000000000015FF0                 MOV             X0, SP
.text:0000000000015FF4                 BL              .sheif_conv_u32
.text:0000000000015FF8                 LDR             X8, [SP,#0x50+var_50]
.text:0000000000015FFC                 MOV             X0, X21
.text:0000000000016000                 LDRSW           X2, [SP,#0x50+n] ; n
.text:0000000000016004                 MOV             X1, X20 ; src
.text:0000000000016008                 STR             X8, [X0],#8 ; dest
.text:000000000001600C                 BL              .memcpy
.text:0000000000016010                 LDR             W8, [SP,#0x50+n]
.text:0000000000016014                 MOV             W9, #0x19E0
.text:0000000000016018                 ADD             X0, X19, X9
.text:000000000001601C                 MOV             X1, X21
.text:0000000000016020                 ADD             W2, W8, #8
.text:0000000000016024                 BL              .sheif_mblk_elem_add_with_size
.text:0000000000016028                 CBZ             W0, loc_1603C
.text:000000000001602C                 MOV             X0, X20 ; ptr
.text:0000000000016030                 BL              .free
.text:0000000000016034                 MOV             X0, X21
.text:0000000000016038                 B               loc_15F84
.text:000000000001603C ; ---------------------------------------------------------------------------
.text:000000000001603C loc_1603C                               ; CODE XREF: sheifm_add_element_hvcC+130↑j
.text:000000000001603C                 LDR             W8, [X19,#0x50]
.text:0000000000016040                 MOV             X0, X20 ; ptr
.text:0000000000016044                 ADD             W8, W8, #1
.text:0000000000016048                 STR             W8, [X19,#0x50]
.text:000000000001604C                 BL              .free
.text:0000000000016050                 MOV             X0, X21 ; ptr
.text:0000000000016054                 BL              .free
.text:0000000000016058                 MOV             W0, WZR
.text:000000000001605C                 B               loc_15FAC
.text:0000000000016060 ; ---------------------------------------------------------------------------
.text:0000000000016060 loc_16060                               ; CODE XREF: sheifm_add_element_hvcC+C0↑j
.text:0000000000016060                 BL              .__stack_chk_fail
.text:0000000000016060 ; } // starts at 15EF8
.text:0000000000016060 ; End of function sheifm_add_element_hvcC
.text:0000000000016060 ; ---------------------------------------------------------------------------
.text:0000000000016064                 ALIGN 8
.text:0000000000016068 ; =============== S U B R O U T I N E =======================================
.text:0000000000016068 ; Attributes: bp-based frame
.text:0000000000016068                 EXPORT sheifm_add_element_colr
.text:0000000000016068 sheifm_add_element_colr                 ; CODE XREF: .sheifm_add_element_colr+C↓j
.text:0000000000016068                                         ; DATA XREF: LOAD:00000000000012F0↑o ...
.text:0000000000016068 var_40          = -0x40
.text:0000000000016068 var_38          = -0x38
.text:0000000000016068 var_28          = -0x28
.text:0000000000016068 var_20          = -0x20
.text:0000000000016068 var_10          = -0x10
.text:0000000000016068 var_s0          =  0
.text:0000000000016068 ; __unwind {
.text:0000000000016068                 SUB             SP, SP, #0x50
.text:000000000001606C                 STR             X21, [SP,#0x40+var_20]
.text:0000000000016070                 STP             X20, X19, [SP,#0x40+var_10]
.text:0000000000016074                 STP             X29, X30, [SP,#0x40+var_s0]
.text:0000000000016078                 ADD             X29, SP, #0x40
.text:000000000001607C                 MRS             X21, #3, c13, c0, #2
.text:0000000000016080                 MOV             W9, #0x6F63
.text:0000000000016084                 LDR             X8, [X21,#0x28]
.text:0000000000016088                 MOV             X19, X0
.text:000000000001608C                 MOVK            W9, #0x726C,LSL#16
.text:0000000000016090                 STR             X8, [SP,#0x40+var_28]
.text:0000000000016094                 LDR             W8, [X0,#0xB0]
.text:0000000000016098                 STP             XZR, XZR, [SP,#0x40+var_38]
.text:000000000001609C                 ADD             W0, W8, #8 ; size
.text:00000000000160A0                 STP             W0, W9, [SP,#0x40+var_40]
.text:00000000000160A4                 BL              .malloc
.text:00000000000160A8                 CBZ             X0, loc_16114
.text:00000000000160AC                 MOV             X20, X0
.text:00000000000160B0                 MOV             X0, SP
.text:00000000000160B4                 BL              .sheif_conv_u32
.text:00000000000160B8                 LDR             X8, [SP,#0x40+var_40]
.text:00000000000160BC                 MOV             X0, X20
.text:00000000000160C0                 LDR             X1, [X19,#0xA8] ; src
.text:00000000000160C4                 STR             X8, [X0],#8 ; dest
.text:00000000000160C8                 LDR             W2, [X19,#0xB0] ; n
.text:00000000000160CC                 BL              .memcpy
.text:00000000000160D0                 LDR             W8, [X19,#0xB0]
.text:00000000000160D4                 MOV             W9, #0x19E0
.text:00000000000160D8                 ADD             X0, X19, X9
.text:00000000000160DC                 MOV             X1, X20
.text:00000000000160E0                 ADD             W2, W8, #8
.text:00000000000160E4                 BL              .sheif_mblk_elem_add_with_size
.text:00000000000160E8                 CBZ             W0, loc_1611C
.text:00000000000160EC                 MOV             X0, X20 ; ptr
.text:00000000000160F0                 BL              .free
.text:00000000000160F4                 ADRP            X1, #aSheifm@PAGE ; "sheifm"
.text:00000000000160F8                 ADRP            X2, #aFailedToSheifm_1@PAGE ; "failed to sheifm_add_element_colr!"
.text:00000000000160FC                 ADD             X1, X1, #aSheifm@PAGEOFF ; "sheifm"
.text:0000000000016100                 MOV             W0, #5
.text:0000000000016104                 ADD             X2, X2, #aFailedToSheifm_1@PAGEOFF ; "failed to sheifm_add_element_colr!"
.text:0000000000016108                 BL              .__android_log_print
.text:000000000001610C                 MOV             W0, #0xFFFFFFFB
.text:0000000000016110                 B               loc_16134
.text:0000000000016114 ; ---------------------------------------------------------------------------
.text:0000000000016114 loc_16114                               ; CODE XREF: sheifm_add_element_colr+40↑j
.text:0000000000016114                 MOV             W0, #0xFFFFFFFF
.text:0000000000016118                 B               loc_16134
.text:000000000001611C ; ---------------------------------------------------------------------------
.text:000000000001611C loc_1611C                               ; CODE XREF: sheifm_add_element_colr+80↑j
.text:000000000001611C                 LDR             W8, [X19,#0x50]
.text:0000000000016120                 MOV             X0, X20 ; ptr
.text:0000000000016124                 ADD             W8, W8, #1
.text:0000000000016128                 STR             W8, [X19,#0x50]
.text:000000000001612C                 BL              .free
.text:0000000000016130                 MOV             W0, WZR
.text:0000000000016134 loc_16134                               ; CODE XREF: sheifm_add_element_colr+A8↑j
.text:0000000000016134                                         ; sheifm_add_element_colr+B0↑j
.text:0000000000016134                 LDR             X8, [X21,#0x28]
.text:0000000000016138                 LDR             X9, [SP,#0x40+var_28]
.text:000000000001613C                 CMP             X8, X9
.text:0000000000016140                 B.NE            loc_16158
.text:0000000000016144                 LDP             X29, X30, [SP,#0x40+var_s0]
.text:0000000000016148                 LDP             X20, X19, [SP,#0x40+var_10]
.text:000000000001614C                 LDR             X21, [SP,#0x40+var_20]
.text:0000000000016150                 ADD             SP, SP, #0x50 ; 'P'
.text:0000000000016154                 RET
.text:0000000000016158 ; ---------------------------------------------------------------------------
.text:0000000000016158 loc_16158                               ; CODE XREF: sheifm_add_element_colr+D8↑j
.text:0000000000016158                 BL              .__stack_chk_fail
.text:0000000000016158 ; } // starts at 16068
.text:0000000000016158 ; End of function sheifm_add_element_colr
.text:0000000000016158 ; ---------------------------------------------------------------------------
.text:000000000001615C                 ALIGN 0x20
.text:0000000000016160 ; =============== S U B R O U T I N E =======================================
.text:0000000000016160 ; Attributes: bp-based frame
.text:0000000000016160                 EXPORT sheifm_add_element_ispe
.text:0000000000016160 sheifm_add_element_ispe                 ; DATA XREF: LOAD:0000000000001E48↑o
.text:0000000000016160 var_50          = -0x50
.text:0000000000016160 var_4C          = -0x4C
.text:0000000000016160 var_44          = -0x44
.text:0000000000016160 var_38          = -0x38
.text:0000000000016160 var_30          = -0x30
.text:0000000000016160 var_20          = -0x20
.text:0000000000016160 var_10          = -0x10
.text:0000000000016160 var_s0          =  0
.text:0000000000016160 ; __unwind {
.text:0000000000016160                 SUB             SP, SP, #0x60
.text:0000000000016164                 STP             X24, X23, [SP,#0x50+var_30]
.text:0000000000016168                 STP             X22, X21, [SP,#0x50+var_20]
.text:000000000001616C                 STP             X20, X19, [SP,#0x50+var_10]
.text:0000000000016170                 STP             X29, X30, [SP,#0x50+var_s0]
.text:0000000000016174                 ADD             X29, SP, #0x50
.text:0000000000016178                 MRS             X24, #3, c13, c0, #2
.text:000000000001617C                 MOV             X19, X0
.text:0000000000016180                 LDR             X8, [X24,#0x28]
.text:0000000000016184                 MOV             W22, #0x14
.text:0000000000016188                 MOV             X0, SP
.text:000000000001618C                 MOV             W20, W2
.text:0000000000016190                 MOV             W21, W1
.text:0000000000016194                 STR             X8, [SP,#0x50+var_38]
.text:0000000000016198                 MOV             X23, SP
.text:000000000001619C                 STUR            XZR, [SP,#0x50+var_44]
.text:00000000000161A0                 STUR            XZR, [SP,#0x50+var_4C]
.text:00000000000161A4                 STR             W22, [SP,#0x50+var_50]
.text:00000000000161A8                 BL              .sheif_conv_u32
.text:00000000000161AC                 MOV             W8, #0x7369
.text:00000000000161B0                 STP             W21, W20, [SP,#0x50+var_44]
.text:00000000000161B4                 MOVK            W8, #0x6570,LSL#16
.text:00000000000161B8                 ADD             X0, X23, #0xC
.text:00000000000161BC                 ADD             X23, X23, #0x10
.text:00000000000161C0                 STR             W8, [SP,#0x50+var_4C]
.text:00000000000161C4                 BL              .sheif_conv_u32
.text:00000000000161C8                 MOV             X0, X23
.text:00000000000161CC                 BL              .sheif_conv_u32
.text:00000000000161D0                 MOV             W8, #0x19E0
.text:00000000000161D4                 ADD             X0, X19, X8
.text:00000000000161D8                 MOV             X1, SP
.text:00000000000161DC                 MOV             W2, W22
.text:00000000000161E0                 BL              .sheif_mblk_elem_add_with_size
.text:00000000000161E4                 CBZ             W0, loc_161F0
.text:00000000000161E8                 MOV             W0, #0xFFFFFFFB
.text:00000000000161EC                 B               loc_161FC
.text:00000000000161F0 ; ---------------------------------------------------------------------------
.text:00000000000161F0 loc_161F0                               ; CODE XREF: sheifm_add_element_ispe+84↑j
.text:00000000000161F0                 LDR             W8, [X19,#0x50]
.text:00000000000161F4                 ADD             W8, W8, #1
.text:00000000000161F8                 STR             W8, [X19,#0x50]
.text:00000000000161FC loc_161FC                               ; CODE XREF: sheifm_add_element_ispe+8C↑j
.text:00000000000161FC                 LDR             X8, [X24,#0x28]
.text:0000000000016200                 LDR             X9, [SP,#0x50+var_38]
.text:0000000000016204                 CMP             X8, X9
.text:0000000000016208                 B.NE            loc_16224
.text:000000000001620C                 LDP             X29, X30, [SP,#0x50+var_s0]
.text:0000000000016210                 LDP             X20, X19, [SP,#0x50+var_10]
.text:0000000000016214                 LDP             X22, X21, [SP,#0x50+var_20]
.text:0000000000016218                 LDP             X24, X23, [SP,#0x50+var_30]
.text:000000000001621C                 ADD             SP, SP, #0x60 ; '`'
.text:0000000000016220                 RET
.text:0000000000016224 ; ---------------------------------------------------------------------------
.text:0000000000016224 loc_16224                               ; CODE XREF: sheifm_add_element_ispe+A8↑j
.text:0000000000016224                 BL              .__stack_chk_fail
.text:0000000000016224 ; } // starts at 16160
.text:0000000000016224 ; End of function sheifm_add_element_ispe
.text:0000000000016228 ; =============== S U B R O U T I N E =======================================
.text:0000000000016228 ; Attributes: bp-based frame
.text:0000000000016228                 EXPORT sheifm_add_element_irot
.text:0000000000016228 sheifm_add_element_irot                 ; DATA XREF: LOAD:0000000000001140↑o
.text:0000000000016228 var_38          = -0x38
.text:0000000000016228 var_34          = -0x34
.text:0000000000016228 var_28          = -0x28
.text:0000000000016228 var_20          = -0x20
.text:0000000000016228 var_10          = -0x10
.text:0000000000016228 var_s0          =  0
.text:0000000000016228 ; __unwind {
.text:0000000000016228                 SUB             SP, SP, #0x50
.text:000000000001622C                 STR             X21, [SP,#0x40+var_20]
.text:0000000000016230                 STP             X20, X19, [SP,#0x40+var_10]
.text:0000000000016234                 STP             X29, X30, [SP,#0x40+var_s0]
.text:0000000000016238                 ADD             X29, SP, #0x40
.text:000000000001623C                 MRS             X21, #3, c13, c0, #2
.text:0000000000016240                 MOV             X19, X0
.text:0000000000016244                 LDR             X8, [X21,#0x28]
.text:0000000000016248                 MOV             W9, #9
.text:000000000001624C                 ADD             X0, SP, #0x40+var_38
.text:0000000000016250                 MOV             W20, W1
.text:0000000000016254                 STR             X8, [SP,#0x40+var_28]
.text:0000000000016258                 STUR            XZR, [SP,#0x40+var_34]
.text:000000000001625C                 STR             W9, [SP,#0x40+var_38]
.text:0000000000016260                 BL              .sheif_conv_u32
.text:0000000000016264                 CMP             W20, #0x10E
.text:0000000000016268                 B.EQ            loc_1628C
.text:000000000001626C                 CMP             W20, #0xB4
.text:0000000000016270                 B.EQ            loc_16284
.text:0000000000016274                 CMP             W20, #0x5A ; 'Z'
.text:0000000000016278                 B.NE            loc_162D0
.text:000000000001627C                 MOV             W8, #3
.text:0000000000016280                 B               loc_16290
.text:0000000000016284 ; ---------------------------------------------------------------------------
.text:0000000000016284 loc_16284                               ; CODE XREF: sheifm_add_element_irot+48↑j
.text:0000000000016284                 MOV             W8, #2
.text:0000000000016288                 B               loc_16290
.text:000000000001628C ; ---------------------------------------------------------------------------
.text:000000000001628C loc_1628C                               ; CODE XREF: sheifm_add_element_irot+40↑j
.text:000000000001628C                 MOV             W8, #1
.text:0000000000016290 loc_16290                               ; CODE XREF: sheifm_add_element_irot+58↑j
.text:0000000000016290                                         ; sheifm_add_element_irot+60↑j
.text:0000000000016290                 MOV             W9, #0x7269
.text:0000000000016294                 STRB            W8, [SP,#0x40+var_34+4]
.text:0000000000016298                 MOV             W10, #0x19E0
.text:000000000001629C                 MOVK            W9, #0x746F,LSL#16
.text:00000000000162A0                 ADD             X0, X19, X10
.text:00000000000162A4                 MOV             W2, #9
.text:00000000000162A8                 ADD             X1, SP, #0x40+var_38
.text:00000000000162AC                 STR             W9, [SP,#0x40+var_34]
.text:00000000000162B0                 BL              .sheif_mblk_elem_add_with_size
.text:00000000000162B4                 CBZ             W0, loc_162C0
.text:00000000000162B8                 MOV             W0, #0xFFFFFFFB
.text:00000000000162BC                 B               loc_162D4
.text:00000000000162C0 ; ---------------------------------------------------------------------------
.text:00000000000162C0 loc_162C0                               ; CODE XREF: sheifm_add_element_irot+8C↑j
.text:00000000000162C0                 LDR             W8, [X19,#0x50]
.text:00000000000162C4                 ADD             W8, W8, #1
.text:00000000000162C8                 STR             W8, [X19,#0x50]
.text:00000000000162CC                 B               loc_162D4
.text:00000000000162D0 ; ---------------------------------------------------------------------------
.text:00000000000162D0 loc_162D0                               ; CODE XREF: sheifm_add_element_irot+50↑j
.text:00000000000162D0                 MOV             W0, WZR
.text:00000000000162D4 loc_162D4                               ; CODE XREF: sheifm_add_element_irot+94↑j
.text:00000000000162D4                                         ; sheifm_add_element_irot+A4↑j
.text:00000000000162D4                 LDR             X8, [X21,#0x28]
.text:00000000000162D8                 LDR             X9, [SP,#0x40+var_28]
.text:00000000000162DC                 CMP             X8, X9
.text:00000000000162E0                 B.NE            loc_162F8
.text:00000000000162E4                 LDP             X29, X30, [SP,#0x40+var_s0]
.text:00000000000162E8                 LDP             X20, X19, [SP,#0x40+var_10]
.text:00000000000162EC                 LDR             X21, [SP,#0x40+var_20]
.text:00000000000162F0                 ADD             SP, SP, #0x50 ; 'P'
.text:00000000000162F4                 RET
.text:00000000000162F8 ; ---------------------------------------------------------------------------
.text:00000000000162F8 loc_162F8                               ; CODE XREF: sheifm_add_element_irot+B8↑j
.text:00000000000162F8                 BL              .__stack_chk_fail
.text:00000000000162F8 ; } // starts at 16228
.text:00000000000162F8 ; End of function sheifm_add_element_irot
.text:00000000000162F8 ; ---------------------------------------------------------------------------
.text:00000000000162FC                 ALIGN 0x20
.text:0000000000016300 ; =============== S U B R O U T I N E =======================================
.text:0000000000016300 ; Attributes: bp-based frame
.text:0000000000016300                 EXPORT sheifm_add_element_ipma
.text:0000000000016300 sheifm_add_element_ipma                 ; DATA XREF: LOAD:0000000000001D10↑o
.text:0000000000016300 var_130         = -0x130
.text:0000000000016300 var_110         = -0x110
.text:0000000000016300 var_F0          = -0xF0
.text:0000000000016300 var_D0          = -0xD0
.text:0000000000016300 var_B0          = -0xB0
.text:0000000000016300 var_90          = -0x90
.text:0000000000016300 var_70          = -0x70
.text:0000000000016300 var_50          = -0x50
.text:0000000000016300 var_30          = -0x30
.text:0000000000016300 var_28          = -0x28
.text:0000000000016300 var_20          = -0x20
.text:0000000000016300 var_10          = -0x10
.text:0000000000016300 var_s0          =  0
.text:0000000000016300 ; __unwind {
.text:0000000000016300                 SUB             SP, SP, #0x140
.text:0000000000016304                 STR             X28, [SP,#0x130+var_20]
.text:0000000000016308                 STP             X20, X19, [SP,#0x130+var_10]
.text:000000000001630C                 STP             X29, X30, [SP,#0x130+var_s0]
.text:0000000000016310                 ADD             X29, SP, #0x130
.text:0000000000016314                 MOVI            V0.2D, #0
.text:0000000000016318                 MRS             X20, #3, c13, c0, #2
.text:000000000001631C                 LDR             X8, [X20,#0x28]
.text:0000000000016320                 MOV             X19, X0
.text:0000000000016324                 STUR            X8, [X29,#var_28]
.text:0000000000016328                 STRH            WZR, [SP,#0x130+var_30]
.text:000000000001632C                 STP             Q0, Q0, [SP,#0x130+var_50]
.text:0000000000016330                 STP             Q0, Q0, [SP,#0x130+var_70]
.text:0000000000016334                 STP             Q0, Q0, [SP,#0x130+var_90]
.text:0000000000016338                 STP             Q0, Q0, [SP,#0x130+var_B0]
.text:000000000001633C                 STP             Q0, Q0, [SP,#0x130+var_D0]
.text:0000000000016340                 LDR             W8, [X0,#0x50]
.text:0000000000016344                 STP             Q0, Q0, [SP,#0x130+var_F0]
.text:0000000000016348                 STP             Q0, Q0, [SP,#0x130+var_130]
.text:000000000001634C                 STRH            W1, [SP,#0x130+var_130]
.text:0000000000016350                 SUB             W9, W8, W2
.text:0000000000016354                 STP             Q0, Q0, [SP,#0x130+var_110]
.text:0000000000016358                 ANDS            W8, W9, #0xFF
.text:000000000001635C                 STRB            W9, [SP,#0x130+var_130+2]
.text:0000000000016360                 B.EQ            loc_16430
.text:0000000000016364                 CMP             W8, #0x10
.text:0000000000016368                 B.CS            loc_16374
.text:000000000001636C                 MOV             X9, XZR
.text:0000000000016370                 B               loc_16408
.text:0000000000016374 ; ---------------------------------------------------------------------------
.text:0000000000016374 loc_16374                               ; CODE XREF: sheifm_add_element_ipma+68↑j
.text:0000000000016374                 ADRP            X9, #xmmword_9DA0@PAGE
.text:0000000000016378                 DUP             V0.4S, W2
.text:000000000001637C                 ADRP            X10, #xmmword_9D90@PAGE
.text:0000000000016380                 MOVI            V2.16B, #1
.text:0000000000016384                 ADRP            X11, #xmmword_9D80@PAGE
.text:0000000000016388                 MOVI            V4.16B, #0x80
.text:000000000001638C                 ADRP            X12, #xmmword_9DB0@PAGE
.text:0000000000016390                 MOVI            V5.4S, #0x10
.text:0000000000016394                 LDR             Q1, [X9,#xmmword_9DA0@PAGEOFF]
.text:0000000000016398                 AND             X9, X8, #0xF0
.text:000000000001639C                 LDR             Q3, [X10,#xmmword_9D90@PAGEOFF]
.text:00000000000163A0                 MOV             X10, SP
.text:00000000000163A4                 LDR             Q6, [X11,#xmmword_9D80@PAGEOFF]
.text:00000000000163A8                 ORR             X10, X10, #3
.text:00000000000163AC                 LDR             Q7, [X12,#xmmword_9DB0@PAGEOFF]
.text:00000000000163B0                 MOV             X11, X9
.text:00000000000163B4 loc_163B4                               ; CODE XREF: sheifm_add_element_ipma+FC↓j
.text:00000000000163B4                 ADD             V16.4S, V3.4S, V0.4S
.text:00000000000163B8                 SUBS            X11, X11, #0x10
.text:00000000000163BC                 ADD             V17.4S, V7.4S, V0.4S
.text:00000000000163C0                 ADD             V18.4S, V6.4S, V0.4S
.text:00000000000163C4                 ADD             V19.4S, V1.4S, V0.4S
.text:00000000000163C8                 ADD             V7.4S, V7.4S, V5.4S
.text:00000000000163CC                 ADD             V6.4S, V6.4S, V5.4S
.text:00000000000163D0                 XTN             V16.4H, V16.4S
.text:00000000000163D4                 XTN             V17.4H, V17.4S
.text:00000000000163D8                 ADD             V3.4S, V3.4S, V5.4S
.text:00000000000163DC                 ADD             V1.4S, V1.4S, V5.4S
.text:00000000000163E0                 XTN2            V16.8H, V19.4S
.text:00000000000163E4                 XTN2            V17.8H, V18.4S
.text:00000000000163E8                 XTN             V17.8B, V17.8H
.text:00000000000163EC                 XTN2            V17.16B, V16.8H
.text:00000000000163F0                 ADD             V16.16B, V17.16B, V2.16B
.text:00000000000163F4                 ORR             V16.16B, V16.16B, V4.16B
.text:00000000000163F8                 STR             Q16, [X10],#0x10
.text:00000000000163FC                 B.NE            loc_163B4
.text:0000000000016400                 CMP             X9, X8
.text:0000000000016404                 B.EQ            loc_16430
.text:0000000000016408 loc_16408                               ; CODE XREF: sheifm_add_element_ipma+70↑j
.text:0000000000016408                 MOV             X11, SP
.text:000000000001640C                 ADD             X11, X11, X9
.text:0000000000016410                 ADD             W10, W2, W9
.text:0000000000016414                 ADD             X11, X11, #3
.text:0000000000016418                 SUB             X8, X8, X9
.text:000000000001641C loc_1641C                               ; CODE XREF: sheifm_add_element_ipma+12C↓j
.text:000000000001641C                 ADD             W10, W10, #1
.text:0000000000016420                 ORR             W9, W10, #0x80
.text:0000000000016424                 SUBS            X8, X8, #1
.text:0000000000016428                 STRB            W9, [X11],#1
.text:000000000001642C                 B.NE            loc_1641C
.text:0000000000016430 loc_16430                               ; CODE XREF: sheifm_add_element_ipma+60↑j
.text:0000000000016430                                         ; sheifm_add_element_ipma+104↑j
.text:0000000000016430                 MOV             X0, SP
.text:0000000000016434                 BL              .sheif_conv_u16
.text:0000000000016438                 LDRB            W8, [SP,#0x130+var_130+2]
.text:000000000001643C                 MOV             W9, #0x1A08
.text:0000000000016440                 ADD             X0, X19, X9
.text:0000000000016444                 MOV             X1, SP
.text:0000000000016448                 ADD             W2, W8, #3
.text:000000000001644C                 BL              .sheif_mblk_elem_add_with_size
.text:0000000000016450                 LDR             X8, [X20,#0x28]
.text:0000000000016454                 CMP             W0, #0
.text:0000000000016458                 LDUR            X9, [X29,#var_28]
.text:000000000001645C                 MOV             W10, #0xFFFFFFFB
.text:0000000000016460                 CSEL            W0, WZR, W10, EQ
.text:0000000000016464                 CMP             X8, X9
.text:0000000000016468                 B.NE            loc_16480
.text:000000000001646C                 LDP             X29, X30, [SP,#0x130+var_s0]
.text:0000000000016470                 LDP             X20, X19, [SP,#0x130+var_10]
.text:0000000000016474                 LDR             X28, [SP,#0x130+var_20]
.text:0000000000016478                 ADD             SP, SP, #0x140
.text:000000000001647C                 RET
.text:0000000000016480 ; ---------------------------------------------------------------------------
.text:0000000000016480 loc_16480                               ; CODE XREF: sheifm_add_element_ipma+168↑j
.text:0000000000016480                 BL              .__stack_chk_fail
.text:0000000000016480 ; } // starts at 16300
.text:0000000000016480 ; End of function sheifm_add_element_ipma
.text:0000000000016480 ; ---------------------------------------------------------------------------
.text:0000000000016484                 ALIGN 8
.text:0000000000016488 ; =============== S U B R O U T I N E =======================================
.text:0000000000016488 ; Attributes: bp-based frame
.text:0000000000016488                 EXPORT sheifm_reallocate_image_buffer
.text:0000000000016488 sheifm_reallocate_image_buffer          ; CODE XREF: .sheifm_reallocate_image_buffer+C↓j
.text:0000000000016488                                         ; DATA XREF: LOAD:0000000000001FE0↑o ...
.text:0000000000016488 var_30          = -0x30
.text:0000000000016488 var_20          = -0x20
.text:0000000000016488 var_10          = -0x10
.text:0000000000016488 var_s0          =  0
.text:0000000000016488 ; __unwind {
.text:0000000000016488                 STR             X23, [SP,#-0x10+var_30]!
.text:000000000001648C                 STP             X22, X21, [SP,#0x30+var_20]
.text:0000000000016490                 STP             X20, X19, [SP,#0x30+var_10]
.text:0000000000016494                 STP             X29, X30, [SP,#0x30+var_s0]
.text:0000000000016498                 ADD             X29, SP, #0x30
.text:000000000001649C                 MOV             W22, W1
.text:00000000000164A0                 MOV             X20, X0
.text:00000000000164A4                 MOV             X0, X22 ; size
.text:00000000000164A8                 MOV             W19, W1
.text:00000000000164AC                 BL              .malloc
.text:00000000000164B0                 CBZ             X0, loc_16510
.text:00000000000164B4                 MOV             W1, WZR ; c
.text:00000000000164B8                 MOV             X2, X22 ; n
.text:00000000000164BC                 MOV             X21, X0
.text:00000000000164C0                 BL              .memset
.text:00000000000164C4                 LDR             W8, [X20,#0x38]
.text:00000000000164C8                 LDR             W9, [X20,#0x48]
.text:00000000000164CC                 LDR             X1, [X20,#0x30] ; src
.text:00000000000164D0                 SUBS            W23, W8, W9
.text:00000000000164D4                 B.EQ            loc_16530
.text:00000000000164D8                 MOV             W22, W23
.text:00000000000164DC                 MOV             X0, X21 ; dest
.text:00000000000164E0                 MOV             X2, X22 ; n
.text:00000000000164E4                 BL              .memcpy
.text:00000000000164E8                 LDR             X0, [X20,#0x30] ; ptr
.text:00000000000164EC                 CBZ             X0, loc_164F8
.text:00000000000164F0                 BL              .free
.text:00000000000164F4                 STR             XZR, [X20,#0x30]
.text:00000000000164F8 loc_164F8                               ; CODE XREF: sheifm_reallocate_image_buffer+64↑j
.text:00000000000164F8                 ADD             X8, X21, X22
.text:00000000000164FC                 STR             W19, [X20,#0x38]
.text:0000000000016500                 SUB             W19, W19, W23
.text:0000000000016504                 STR             X21, [X20,#0x30]
.text:0000000000016508                 STR             X8, [X20,#0x40]
.text:000000000001650C                 B               loc_1654C
.text:0000000000016510 ; ---------------------------------------------------------------------------
.text:0000000000016510 loc_16510                               ; CODE XREF: sheifm_reallocate_image_buffer+28↑j
.text:0000000000016510                 ADRP            X1, #aSheifm@PAGE ; "sheifm"
.text:0000000000016514                 ADRP            X2, #aSheifmRealloca_0@PAGE ; "sheifm_reallocate_buffer() failed"
.text:0000000000016518                 ADD             X1, X1, #aSheifm@PAGEOFF ; "sheifm"
.text:000000000001651C                 MOV             W0, #5
.text:0000000000016520                 ADD             X2, X2, #aSheifmRealloca_0@PAGEOFF ; "sheifm_reallocate_buffer() failed"
.text:0000000000016524                 BL              .__android_log_print
.text:0000000000016528                 MOV             W0, #0xFFFFFFFB
.text:000000000001652C                 B               loc_16554
.text:0000000000016530 ; ---------------------------------------------------------------------------
.text:0000000000016530 loc_16530                               ; CODE XREF: sheifm_reallocate_image_buffer+4C↑j
.text:0000000000016530                 CBZ             X1, loc_16540
.text:0000000000016534                 MOV             X0, X1  ; ptr
.text:0000000000016538                 BL              .free
.text:000000000001653C                 STR             XZR, [X20,#0x30]
.text:0000000000016540 loc_16540                               ; CODE XREF: sheifm_reallocate_image_buffer:loc_16530↑j
.text:0000000000016540                 STR             X21, [X20,#0x30]
.text:0000000000016544                 STR             X21, [X20,#0x40]
.text:0000000000016548                 STR             W19, [X20,#0x38]
.text:000000000001654C loc_1654C                               ; CODE XREF: sheifm_reallocate_image_buffer+84↑j
.text:000000000001654C                 MOV             W0, WZR
.text:0000000000016550                 STR             W19, [X20,#0x48]
.text:0000000000016554 loc_16554                               ; CODE XREF: sheifm_reallocate_image_buffer+A4↑j
.text:0000000000016554                 LDP             X29, X30, [SP,#0x30+var_s0]
.text:0000000000016558                 LDP             X20, X19, [SP,#0x30+var_10]
.text:000000000001655C                 LDP             X22, X21, [SP,#0x30+var_20]
.text:0000000000016560                 LDR             X23, [SP+0x30+var_30],#0x40
.text:0000000000016564                 RET
.text:0000000000016564 ; } // starts at 16488
.text:0000000000016564 ; End of function sheifm_reallocate_image_buffer
.text:0000000000016568 ; =============== S U B R O U T I N E =======================================
.text:0000000000016568 ; Attributes: bp-based frame
.text:0000000000016568                 EXPORT sheifm_set_image_info
.text:0000000000016568 sheifm_set_image_info                   ; CODE XREF: .sheifm_set_image_info+C↓j
.text:0000000000016568                                         ; DATA XREF: LOAD:0000000000001398↑o ...
.text:0000000000016568 var_208         = -0x208
.text:0000000000016568 var_200         = -0x200
.text:0000000000016568 var_1F0         = -0x1F0
.text:0000000000016568 var_1E0         = -0x1E0
.text:0000000000016568 var_1D0         = -0x1D0
.text:0000000000016568 var_1C0         = -0x1C0
.text:0000000000016568 var_1AC         = -0x1AC
.text:0000000000016568 var_1A8         = -0x1A8
.text:0000000000016568 var_198         = -0x198
.text:0000000000016568 var_184         = -0x184
.text:0000000000016568 var_180         = -0x180
.text:0000000000016568 var_160         = -0x160
.text:0000000000016568 var_140         = -0x140
.text:0000000000016568 var_120         = -0x120
.text:0000000000016568 var_80          = -0x80
.text:0000000000016568 var_60          = -0x60
.text:0000000000016568 var_50          = -0x50
.text:0000000000016568 var_40          = -0x40
.text:0000000000016568 var_30          = -0x30
.text:0000000000016568 var_20          = -0x20
.text:0000000000016568 var_10          = -0x10
.text:0000000000016568 var_s0          =  0
.text:0000000000016568 ; __unwind {
.text:0000000000016568                 STR             D8, [SP,#-0x10+var_60]!
.text:000000000001656C                 STP             X28, X27, [SP,#0x60+var_50]
.text:0000000000016570                 STP             X26, X25, [SP,#0x60+var_40]
.text:0000000000016574                 STP             X24, X23, [SP,#0x60+var_30]
.text:0000000000016578                 STP             X22, X21, [SP,#0x60+var_20]
.text:000000000001657C                 STP             X20, X19, [SP,#0x60+var_10]
.text:0000000000016580                 STP             X29, X30, [SP,#0x60+var_s0]
.text:0000000000016584                 ADD             X29, SP, #0x60
.text:0000000000016588                 SUB             SP, SP, #0x1B0
.text:000000000001658C                 MRS             X28, #3, c13, c0, #2
.text:0000000000016590                 ADD             X23, SP, #0x210+var_180
.text:0000000000016594                 LDR             X8, [X28,#0x28]
.text:0000000000016598                 MOV             W9, #6
.text:000000000001659C                 MOV             X21, X3
.text:00000000000165A0                 MOV             W25, W2
.text:00000000000165A4                 MOV             W20, W1
.text:00000000000165A8                 STR             X8, [X23,#0x108]
.text:00000000000165AC                 MOV             X19, X0
.text:00000000000165B0                 STR             W9, [SP,#0x210+var_184]
.text:00000000000165B4                 ADD             X24, X0, #0x10
.text:00000000000165B8                 LDP             Q0, Q1, [X3,#0x20]
.text:00000000000165BC                 LDP             Q2, Q3, [X3]
.text:00000000000165C0                 STP             Q0, Q1, [X0,#0xC0]
.text:00000000000165C4                 STP             Q2, Q3, [X0,#0xA0]
.text:00000000000165C8                 LDP             Q0, Q1, [X3,#0x60]
.text:00000000000165CC                 LDP             Q2, Q3, [X3,#0x40]
.text:00000000000165D0                 STP             Q0, Q1, [X0,#0x100]
.text:00000000000165D4                 STP             Q2, Q3, [X0,#0xE0]
.text:00000000000165D8                 LDP             Q0, Q1, [X3,#0xA0]
.text:00000000000165DC                 LDP             Q2, Q3, [X3,#0x80]
.text:00000000000165E0                 STP             Q0, Q1, [X0,#0x140]
.text:00000000000165E4                 STP             Q2, Q3, [X0,#0x120]
.text:00000000000165E8                 LDP             Q0, Q1, [X3,#0xE0]
.text:00000000000165EC                 LDP             Q2, Q3, [X3,#0xC0]
.text:00000000000165F0                 STP             Q0, Q1, [X0,#0x180]
.text:00000000000165F4                 STP             Q2, Q3, [X0,#0x160]
.text:00000000000165F8                 CBZ             X4, loc_16730
.text:00000000000165FC                 STR             W25, [SP,#0x210+var_1C0]
.text:0000000000016600                 MOV             X22, X4
.text:0000000000016604                 STP             X24, X21, [SP,#0x210+var_1A8]
.text:0000000000016608                 STR             W20, [SP,#0x210+var_1AC]
.text:000000000001660C                 STR             X28, [SP,#0x210+var_198]
.text:0000000000016610                 LDP             Q0, Q1, [X4]
.text:0000000000016614                 STP             Q0, Q1, [X19,#0x80]
.text:0000000000016618                 LDP             W21, W8, [X4,#0x10]
.text:000000000001661C                 CMP             W21, W8
.text:0000000000016620                 B.HI            loc_166B0
.text:0000000000016624                 ADRP            X9, #qword_9CF8@PAGE
.text:0000000000016628                 ADD             X8, SP, #0x210+var_180
.text:000000000001662C                 MOV             W28, #0x7668
.text:0000000000016630                 ORR             X23, X8, #4
.text:0000000000016634                 LDR             D8, [X9,#qword_9CF8@PAGEOFF]
.text:0000000000016638                 ADD             X25, X8, #0xC
.text:000000000001663C                 MOV             W8, #0x19A0
.text:0000000000016640                 MOVK            W28, #0x3163,LSL#16
.text:0000000000016644                 ADD             X26, X19, X8
.text:0000000000016648                 MOV             W24, #2
.text:000000000001664C                 MOV             W20, #1
.text:0000000000016650                 MOV             W27, #0x15
.text:0000000000016654 loc_16654                               ; CODE XREF: sheifm_set_image_info+144↓j
.text:0000000000016654                 MOV             X0, X25
.text:0000000000016658                 STP             XZR, XZR, [X23]
.text:000000000001665C                 STR             WZR, [X23,#0x10]
.text:0000000000016660                 STRH            W21, [SP,#0x210+var_180+0xC]
.text:0000000000016664                 STR             W28, [SP,#0xA0]
.text:0000000000016668                 STRB            W24, [SP,#0x210+var_180+8]
.text:000000000001666C                 STRB            W20, [SP,#0x210+var_180+0xB]
.text:0000000000016670                 STR             D8, [SP,#0x210+var_180]
.text:0000000000016674                 BL              .sheif_conv_u16
.text:0000000000016678                 ADD             X0, SP, #0x210+var_180
.text:000000000001667C                 BL              .sheif_conv_u32
.text:0000000000016680                 ADD             X1, SP, #0x210+var_180
.text:0000000000016684                 MOV             X0, X26
.text:0000000000016688                 MOV             W2, W27
.text:000000000001668C                 BL              .sheif_mblk_elem_add_with_size
.text:0000000000016690                 CBNZ            W0, loc_1670C
.text:0000000000016694                 LDR             W8, [X19,#0x64]
.text:0000000000016698                 ADD             W21, W21, #1
.text:000000000001669C                 ADD             W8, W8, #1
.text:00000000000166A0                 STR             W8, [X19,#0x64]
.text:00000000000166A4                 LDR             W8, [X22,#0x14]
.text:00000000000166A8                 CMP             W21, W8
.text:00000000000166AC                 B.LS            loc_16654
.text:00000000000166B0 loc_166B0                               ; CODE XREF: sheifm_set_image_info+B8↑j
.text:00000000000166B0                 ADRP            X9, #qword_9CF8@PAGE
.text:00000000000166B4                 LDR             W8, [X22,#0x18]
.text:00000000000166B8                 MOV             W10, #0x7267
.text:00000000000166BC                 STUR            XZR, [SP,#0x210+var_180+0xC]
.text:00000000000166C0                 MOVK            W10, #0x6469,LSL#16
.text:00000000000166C4                 STUR            XZR, [SP,#0x210+var_180+4]
.text:00000000000166C8                 LDR             D0, [X9,#qword_9CF8@PAGEOFF]
.text:00000000000166CC                 ADD             X9, SP, #0x210+var_180
.text:00000000000166D0                 MOV             W11, #2
.text:00000000000166D4                 STRH            W8, [SP,#0x210+var_180+0xC]
.text:00000000000166D8                 ADD             X0, X9, #0xC
.text:00000000000166DC                 STP             W10, WZR, [SP,#0xA0]
.text:00000000000166E0                 STRB            W11, [SP,#0x210+var_180+8]
.text:00000000000166E4                 STR             D0, [SP,#0x210+var_180]
.text:00000000000166E8                 BL              .sheif_conv_u16
.text:00000000000166EC                 ADD             X0, SP, #0x210+var_180
.text:00000000000166F0                 BL              .sheif_conv_u32
.text:00000000000166F4                 MOV             W8, #0x19A0
.text:00000000000166F8                 ADD             X0, X19, X8
.text:00000000000166FC                 MOV             W2, #0x15
.text:0000000000016700                 ADD             X1, SP, #0x210+var_180
.text:0000000000016704                 BL              .sheif_mblk_elem_add_with_size
.text:0000000000016708                 CBZ             W0, loc_167A0
.text:000000000001670C loc_1670C                               ; CODE XREF: sheifm_set_image_info+128↑j
.text:000000000001670C                 ADRP            X1, #aSheifm@PAGE ; "sheifm"
.text:0000000000016710                 ADRP            X2, #aFailedToSheifm@PAGE ; "failed to sheifm_add_element_infe!"
.text:0000000000016714                 ADD             X1, X1, #aSheifm@PAGEOFF ; "sheifm"
.text:0000000000016718                 MOV             W0, #5
.text:000000000001671C                 ADD             X2, X2, #aFailedToSheifm@PAGEOFF ; "failed to sheifm_add_element_infe!"
.text:0000000000016720                 BL              .__android_log_print
.text:0000000000016724                 LDR             X28, [SP,#0x210+var_198]
.text:0000000000016728 loc_16728                               ; CODE XREF: sheifm_set_image_info+470↓j
.text:0000000000016728                 ADD             X23, SP, #0x210+var_180
.text:000000000001672C                 B               loc_16910
.text:0000000000016730 ; ---------------------------------------------------------------------------
.text:0000000000016730 loc_16730                               ; CODE XREF: sheifm_set_image_info+90↑j
.text:0000000000016730                 ADRP            X8, #qword_9CF8@PAGE
.text:0000000000016734                 STUR            XZR, [SP,#0x210+var_180+0xC]
.text:0000000000016738                 MOV             W9, #0x7668
.text:000000000001673C                 STUR            XZR, [SP,#0x210+var_180+4]
.text:0000000000016740                 MOVK            W9, #0x3163,LSL#16
.text:0000000000016744                 STRH            W20, [SP,#0x210+var_180+0xC]
.text:0000000000016748                 LDR             D0, [X8,#qword_9CF8@PAGEOFF]
.text:000000000001674C                 MOV             W10, #2
.text:0000000000016750                 ADD             X0, X23, #0xC
.text:0000000000016754                 STP             W9, WZR, [SP,#0xA0]
.text:0000000000016758                 STRB            W10, [SP,#0x210+var_180+8]
.text:000000000001675C                 STR             D0, [SP,#0x210+var_180]
.text:0000000000016760                 BL              .sheif_conv_u16
.text:0000000000016764                 ADD             X0, SP, #0x210+var_180
.text:0000000000016768                 BL              .sheif_conv_u32
.text:000000000001676C                 MOV             W8, #0x19A0
.text:0000000000016770                 ADD             X0, X19, X8
.text:0000000000016774                 MOV             W2, #0x15
.text:0000000000016778                 ADD             X1, SP, #0x210+var_180
.text:000000000001677C                 BL              .sheif_mblk_elem_add_with_size
.text:0000000000016780                 CBZ             W0, loc_168BC
.text:0000000000016784                 ADRP            X1, #aSheifm@PAGE ; "sheifm"
.text:0000000000016788                 ADRP            X2, #aFailedToSheifm@PAGE ; "failed to sheifm_add_element_infe!"
.text:000000000001678C                 ADD             X1, X1, #aSheifm@PAGEOFF ; "sheifm"
.text:0000000000016790                 MOV             W0, #5
.text:0000000000016794                 ADD             X2, X2, #aFailedToSheifm@PAGEOFF ; "failed to sheifm_add_element_infe!"
.text:0000000000016798                 BL              .__android_log_print
.text:000000000001679C                 B               loc_16910
.text:00000000000167A0 ; ---------------------------------------------------------------------------
.text:00000000000167A0 loc_167A0                               ; CODE XREF: sheifm_set_image_info+1A0↑j
.text:00000000000167A0                 LDR             W8, [X19,#0x64]
.text:00000000000167A4                 MOV             W9, #0x626D6874
.text:00000000000167AC                 LDR             W1, [SP,#0x210+var_1AC]
.text:00000000000167B0                 LDR             W2, [SP,#0x210+var_1C0]
.text:00000000000167B4                 MOV             X4, X22
.text:00000000000167B8                 ADD             W8, W8, #1
.text:00000000000167BC                 STR             W8, [X19,#0x64]
.text:00000000000167C0                 LDP             X20, X21, [SP,#0x210+var_1A8]
.text:00000000000167C4                 LDR             W8, [X21]
.text:00000000000167C8                 MOV             X0, X20
.text:00000000000167CC                 CMP             W8, #0
.text:00000000000167D0                 MOV             W8, #0x676D6964
.text:00000000000167D8                 CSEL            W3, W8, W9, EQ
.text:00000000000167DC                 BL              .sheifm_add_element_itemtyperef
.text:00000000000167E0                 LDR             X28, [SP,#0x210+var_198]
.text:00000000000167E4                 ADD             X23, SP, #0x210+var_180
.text:00000000000167E8                 CBNZ            W0, loc_16910
.text:00000000000167EC                 LDR             W27, [X19,#0x60]
.text:00000000000167F0                 MOV             X0, X20
.text:00000000000167F4                 BL              .sheifm_add_element_hvcC
.text:00000000000167F8                 CBNZ            W0, loc_16910
.text:00000000000167FC                 LDR             W8, [X21,#0x20]
.text:0000000000016800                 CBZ             W8, loc_16810
.text:0000000000016804                 MOV             X0, X20
.text:0000000000016808                 BL              .sheifm_add_element_colr
.text:000000000001680C                 CBNZ            W0, loc_16910
.text:0000000000016810 loc_16810                               ; CODE XREF: sheifm_set_image_info+298↑j
.text:0000000000016810                 LDUR            X20, [X21,#4]
.text:0000000000016814                 MOV             W8, #0x14
.text:0000000000016818                 ADD             X0, SP, #0x210+var_180
.text:000000000001681C                 STUR            XZR, [SP,#0x210+var_180+0xC]
.text:0000000000016820                 MOV             W26, #0x7369
.text:0000000000016824                 STUR            XZR, [SP,#0x210+var_180+4]
.text:0000000000016828                 MOVK            W26, #0x6570,LSL#16
.text:000000000001682C                 STR             W8, [SP,#0x210+var_180]
.text:0000000000016830                 MOV             X25, X21
.text:0000000000016834                 ADD             X21, SP, #0x210+var_180
.text:0000000000016838                 BL              .sheif_conv_u32
.text:000000000001683C                 ADD             X0, X21, #0xC
.text:0000000000016840                 STR             W26, [SP,#0x210+var_180+4]
.text:0000000000016844                 ADD             X24, X21, #0x10
.text:0000000000016848                 STUR            X20, [SP,#0x210+var_180+0xC]
.text:000000000001684C                 BL              .sheif_conv_u32
.text:0000000000016850                 MOV             X0, X24
.text:0000000000016854                 BL              .sheif_conv_u32
.text:0000000000016858                 MOV             W8, #0x19F0
.text:000000000001685C                 ADD             X21, X19, X8
.text:0000000000016860                 ADD             X1, SP, #0x210+var_180
.text:0000000000016864                 MOV             X0, X21
.text:0000000000016868                 MOV             W2, #0x14
.text:000000000001686C                 BL              .sheif_mblk_elem_add_with_size
.text:0000000000016870                 CBNZ            W0, loc_16910
.text:0000000000016874                 LDR             W8, [X19,#0x60]
.text:0000000000016878                 ADD             W8, W8, #1
.text:000000000001687C                 STR             W8, [X19,#0x60]
.text:0000000000016880                 LDR             W20, [X25,#0xC]
.text:0000000000016884                 CBZ             W20, loc_16A68
.text:0000000000016888                 MOV             W8, #9
.text:000000000001688C                 STUR            XZR, [SP,#0x210+var_180+4]
.text:0000000000016890                 ADD             X0, SP, #0x210+var_180
.text:0000000000016894                 STR             W8, [SP,#0x210+var_180]
.text:0000000000016898                 BL              .sheif_conv_u32
.text:000000000001689C                 CMP             W20, #0x10E
.text:00000000000168A0                 B.EQ            loc_16A2C
.text:00000000000168A4                 CMP             W20, #0xB4
.text:00000000000168A8                 B.EQ            loc_16A34
.text:00000000000168AC                 CMP             W20, #0x5A ; 'Z'
.text:00000000000168B0                 B.NE            loc_16A68
.text:00000000000168B4                 MOV             W8, #3
.text:00000000000168B8                 B               loc_16A38
.text:00000000000168BC ; ---------------------------------------------------------------------------
.text:00000000000168BC loc_168BC                               ; CODE XREF: sheifm_set_image_info+218↑j
.text:00000000000168BC                 LDR             W8, [X19,#0x64]
.text:00000000000168C0                 MOV             W9, #0x626D6874
.text:00000000000168C8                 MOV             X0, X24
.text:00000000000168CC                 MOV             W1, W20
.text:00000000000168D0                 ADD             W8, W8, #1
.text:00000000000168D4                 MOV             W2, W25
.text:00000000000168D8                 MOV             X4, XZR
.text:00000000000168DC                 STR             W8, [X19,#0x64]
.text:00000000000168E0                 LDR             W8, [X21]
.text:00000000000168E4                 CMP             W8, #0
.text:00000000000168E8                 MOV             W8, #0x676D6964
.text:00000000000168F0                 CSEL            W3, W8, W9, EQ
.text:00000000000168F4                 BL              .sheifm_add_element_itemtyperef
.text:00000000000168F8                 CBNZ            W0, loc_16910
.text:00000000000168FC                 MOV             X22, X24
.text:0000000000016900                 LDR             W24, [X19,#0x60]
.text:0000000000016904                 MOV             X0, X22
.text:0000000000016908                 BL              .sheifm_add_element_hvcC
.text:000000000001690C                 CBZ             W0, loc_16960
.text:0000000000016910 loc_16910                               ; CODE XREF: sheifm_set_image_info+1C4↑j
.text:0000000000016910                                         ; sheifm_set_image_info+234↑j ...
.text:0000000000016910                 ADRP            X1, #aSheifm@PAGE ; "sheifm"
.text:0000000000016914                 ADRP            X2, #aFailedToSetIma@PAGE ; "failed to set image info!"
.text:0000000000016918                 ADD             X1, X1, #aSheifm@PAGEOFF ; "sheifm"
.text:000000000001691C                 MOV             W0, #5
.text:0000000000016920                 ADD             X2, X2, #aFailedToSetIma@PAGEOFF ; "failed to set image info!"
.text:0000000000016924                 BL              .__android_log_print
.text:0000000000016928                 MOV             W0, #0xFFFFFFFB
.text:000000000001692C loc_1692C                               ; CODE XREF: sheifm_set_image_info+A38↓j
.text:000000000001692C                                         ; sheifm_set_image_info+A40↓j ...
.text:000000000001692C                 LDR             X8, [X28,#0x28]
.text:0000000000016930                 LDR             X9, [X23,#0x108]
.text:0000000000016934                 CMP             X8, X9
.text:0000000000016938                 B.NE            loc_17108
.text:000000000001693C                 ADD             SP, SP, #0x1B0
.text:0000000000016940                 LDP             X29, X30, [SP,#0x60+var_s0]
.text:0000000000016944                 LDP             X20, X19, [SP,#0x60+var_10]
.text:0000000000016948                 LDP             X22, X21, [SP,#0x60+var_20]
.text:000000000001694C                 LDP             X24, X23, [SP,#0x60+var_30]
.text:0000000000016950                 LDP             X26, X25, [SP,#0x60+var_40]
.text:0000000000016954                 LDP             X28, X27, [SP,#0x60+var_50]
.text:0000000000016958                 LDR             D8, [SP+0x60+var_60],#0x70
.text:000000000001695C                 RET
.text:0000000000016960 ; ---------------------------------------------------------------------------
.text:0000000000016960 loc_16960                               ; CODE XREF: sheifm_set_image_info+3A4↑j
.text:0000000000016960                 LDR             W8, [X21,#0x20]
.text:0000000000016964                 CBZ             W8, loc_16974
.text:0000000000016968                 MOV             X0, X22
.text:000000000001696C                 BL              .sheifm_add_element_colr
.text:0000000000016970                 CBNZ            W0, loc_16910
.text:0000000000016974 loc_16974                               ; CODE XREF: sheifm_set_image_info+3FC↑j
.text:0000000000016974                 MOV             W26, W20
.text:0000000000016978                 LDUR            X20, [X21,#4]
.text:000000000001697C                 MOV             W23, #0x14
.text:0000000000016980                 STUR            XZR, [SP,#0x210+var_180+0xC]
.text:0000000000016984                 ADD             X0, SP, #0x210+var_180
.text:0000000000016988                 STUR            XZR, [SP,#0x210+var_180+4]
.text:000000000001698C                 MOV             X25, X21
.text:0000000000016990                 STR             W23, [SP,#0x210+var_180]
.text:0000000000016994                 ADD             X21, SP, #0x210+var_180
.text:0000000000016998                 BL              .sheif_conv_u32
.text:000000000001699C                 MOV             W8, #0x7369
.text:00000000000169A0                 STUR            X20, [SP,#0x210+var_180+0xC]
.text:00000000000169A4                 MOVK            W8, #0x6570,LSL#16
.text:00000000000169A8                 ADD             X0, X21, #0xC
.text:00000000000169AC                 ADD             X22, X21, #0x10
.text:00000000000169B0                 STR             W8, [SP,#0x210+var_180+4]
.text:00000000000169B4                 BL              .sheif_conv_u32
.text:00000000000169B8                 MOV             X0, X22
.text:00000000000169BC                 BL              .sheif_conv_u32
.text:00000000000169C0                 MOV             W8, #0x19F0
.text:00000000000169C4                 ADD             X22, X19, X8
.text:00000000000169C8                 ADD             X1, SP, #0x210+var_180
.text:00000000000169CC                 MOV             X0, X22
.text:00000000000169D0                 MOV             W2, W23
.text:00000000000169D4                 BL              .sheif_mblk_elem_add_with_size
.text:00000000000169D8                 CBNZ            W0, loc_16728
.text:00000000000169DC                 LDR             W8, [X19,#0x60]
.text:00000000000169E0                 ADD             X23, SP, #0x210+var_180
.text:00000000000169E4                 MOV             X21, X25
.text:00000000000169E8                 ADD             W8, W8, #1
.text:00000000000169EC                 STR             W8, [X19,#0x60]
.text:00000000000169F0                 LDR             W20, [X25,#0xC]
.text:00000000000169F4                 CBZ             W20, loc_16D28
.text:00000000000169F8                 MOV             W8, #9
.text:00000000000169FC                 STUR            XZR, [SP,#0x210+var_180+4]
.text:0000000000016A00                 ADD             X0, SP, #0x210+var_180
.text:0000000000016A04                 STR             W8, [SP,#0x210+var_180]
.text:0000000000016A08                 BL              .sheif_conv_u32
.text:0000000000016A0C                 CMP             W20, #0x5A ; 'Z'
.text:0000000000016A10                 B.EQ            loc_16CE0
.text:0000000000016A14                 CMP             W20, #0xB4
.text:0000000000016A18                 B.EQ            loc_16CE8
.text:0000000000016A1C                 CMP             W20, #0x10E
.text:0000000000016A20                 B.NE            loc_16D24
.text:0000000000016A24                 MOV             W8, #1
.text:0000000000016A28                 B               loc_16CEC
.text:0000000000016A2C ; ---------------------------------------------------------------------------
.text:0000000000016A2C loc_16A2C                               ; CODE XREF: sheifm_set_image_info+338↑j
.text:0000000000016A2C                 MOV             W8, #1
.text:0000000000016A30                 B               loc_16A38
.text:0000000000016A34 ; ---------------------------------------------------------------------------
.text:0000000000016A34 loc_16A34                               ; CODE XREF: sheifm_set_image_info+340↑j
.text:0000000000016A34                 MOV             W8, #2
.text:0000000000016A38 loc_16A38                               ; CODE XREF: sheifm_set_image_info+350↑j
.text:0000000000016A38                                         ; sheifm_set_image_info+4C8↑j
.text:0000000000016A38                 MOV             W9, #0x7269
.text:0000000000016A3C                 STRB            W8, [SP,#0x210+var_180+8]
.text:0000000000016A40                 MOVK            W9, #0x746F,LSL#16
.text:0000000000016A44                 MOV             W2, #9
.text:0000000000016A48                 ADD             X1, SP, #0x210+var_180
.text:0000000000016A4C                 MOV             X0, X21
.text:0000000000016A50                 STR             W9, [SP,#0x210+var_180+4]
.text:0000000000016A54                 BL              .sheif_mblk_elem_add_with_size
.text:0000000000016A58                 CBNZ            W0, loc_16910
.text:0000000000016A5C                 LDR             W8, [X19,#0x60]
.text:0000000000016A60                 ADD             W8, W8, #1
.text:0000000000016A64                 STR             W8, [X19,#0x60]
.text:0000000000016A68 loc_16A68                               ; CODE XREF: sheifm_set_image_info+31C↑j
.text:0000000000016A68                                         ; sheifm_set_image_info+348↑j
.text:0000000000016A68                 STR             X21, [SP,#0x210+var_208]
.text:0000000000016A6C                 LDP             W25, W8, [X22,#0x10]
.text:0000000000016A70                 CMP             W25, W8
.text:0000000000016A74                 B.HI            loc_16BE4
.text:0000000000016A78                 ADRP            X8, #xmmword_9DA0@PAGE
.text:0000000000016A7C                 DUP             V16.4S, W27
.text:0000000000016A80                 ADRP            X9, #xmmword_9D90@PAGE
.text:0000000000016A84                 MOVI            V17.16B, #1
.text:0000000000016A88                 ADRP            X10, #xmmword_9D80@PAGE
.text:0000000000016A8C                 MOVI            V18.16B, #0x80
.text:0000000000016A90                 LDR             Q0, [X8,#xmmword_9DA0@PAGEOFF]
.text:0000000000016A94                 ADRP            X8, #xmmword_9DB0@PAGE
.text:0000000000016A98                 MOVI            V19.4S, #0x10
.text:0000000000016A9C                 STR             Q16, [SP,#0x210+var_1C0]
.text:0000000000016AA0                 STR             Q0, [SP,#0x210+var_1D0]
.text:0000000000016AA4                 LDR             Q0, [X9,#xmmword_9D90@PAGEOFF]
.text:0000000000016AA8                 MOV             W9, #0x1A18
.text:0000000000016AAC                 ADD             X26, X19, X9
.text:0000000000016AB0                 ADD             X9, SP, #0x210+var_180
.text:0000000000016AB4                 ORR             X24, X9, #3
.text:0000000000016AB8                 STR             Q0, [SP,#0x210+var_1E0]
.text:0000000000016ABC                 LDR             Q0, [X10,#xmmword_9D80@PAGEOFF]
.text:0000000000016AC0                 STR             Q0, [SP,#0x210+var_1F0]
.text:0000000000016AC4                 LDR             Q0, [X8,#xmmword_9DB0@PAGEOFF]
.text:0000000000016AC8                 STR             Q0, [SP,#0x210+var_200]
.text:0000000000016ACC loc_16ACC                               ; CODE XREF: sheifm_set_image_info+678↓j
.text:0000000000016ACC                 MOVI            V0.2D, #0
.text:0000000000016AD0                 STRH            WZR, [SP,#0x210+var_80]
.text:0000000000016AD4                 STP             Q0, Q0, [X23,#0xE0]
.text:0000000000016AD8                 STP             Q0, Q0, [X23,#0xC0]
.text:0000000000016ADC                 STP             Q0, Q0, [X23,#0xA0]
.text:0000000000016AE0                 STP             Q0, Q0, [X23,#0x80]
.text:0000000000016AE4                 LDR             W8, [X19,#0x60]
.text:0000000000016AE8                 STP             Q0, Q0, [SP,#0x210+var_180]
.text:0000000000016AEC                 STP             Q0, Q0, [SP,#0x210+var_120]
.text:0000000000016AF0                 STP             Q0, Q0, [SP,#0x210+var_140]
.text:0000000000016AF4                 SUB             W8, W8, W27
.text:0000000000016AF8                 STP             Q0, Q0, [SP,#0x210+var_160]
.text:0000000000016AFC                 STRH            W25, [SP,#0x210+var_180]
.text:0000000000016B00                 STRB            W8, [SP,#0x210+var_180+2]
.text:0000000000016B04                 ANDS            W8, W8, #0xFF
.text:0000000000016B08                 B.EQ            loc_16BA4
.text:0000000000016B0C                 CMP             W8, #0x10
.text:0000000000016B10                 B.CS            loc_16B1C
.text:0000000000016B14                 MOV             X9, XZR
.text:0000000000016B18                 B               loc_16B84
.text:0000000000016B1C ; ---------------------------------------------------------------------------
.text:0000000000016B1C loc_16B1C                               ; CODE XREF: sheifm_set_image_info+5A8↑j
.text:0000000000016B1C                 AND             X9, X8, #0xF0
.text:0000000000016B20                 LDP             Q0, Q1, [SP,#0x210+var_200]
.text:0000000000016B24                 LDP             Q2, Q3, [SP,#0x210+var_1E0]
.text:0000000000016B28                 MOV             X10, X24
.text:0000000000016B2C                 MOV             X11, X9
.text:0000000000016B30 loc_16B30                               ; CODE XREF: sheifm_set_image_info+610↓j
.text:0000000000016B30                 ADD             V4.4S, V16.4S, V2.4S
.text:0000000000016B34                 SUBS            X11, X11, #0x10
.text:0000000000016B38                 ADD             V5.4S, V16.4S, V0.4S
.text:0000000000016B3C                 ADD             V6.4S, V16.4S, V1.4S
.text:0000000000016B40                 ADD             V7.4S, V16.4S, V3.4S
.text:0000000000016B44                 ADD             V0.4S, V0.4S, V19.4S
.text:0000000000016B48                 ADD             V1.4S, V1.4S, V19.4S
.text:0000000000016B4C                 XTN             V4.4H, V4.4S
.text:0000000000016B50                 XTN             V5.4H, V5.4S
.text:0000000000016B54                 ADD             V2.4S, V2.4S, V19.4S
.text:0000000000016B58                 ADD             V3.4S, V3.4S, V19.4S
.text:0000000000016B5C                 XTN2            V4.8H, V7.4S
.text:0000000000016B60                 XTN2            V5.8H, V6.4S
.text:0000000000016B64                 XTN             V5.8B, V5.8H
.text:0000000000016B68                 XTN2            V5.16B, V4.8H
.text:0000000000016B6C                 ADD             V4.16B, V5.16B, V17.16B
.text:0000000000016B70                 ORR             V4.16B, V4.16B, V18.16B
.text:0000000000016B74                 STR             Q4, [X10],#0x10
.text:0000000000016B78                 B.NE            loc_16B30
.text:0000000000016B7C                 CMP             X9, X8
.text:0000000000016B80                 B.EQ            loc_16BA4
.text:0000000000016B84 loc_16B84                               ; CODE XREF: sheifm_set_image_info+5B0↑j
.text:0000000000016B84                 SUB             X8, X8, X9
.text:0000000000016B88                 ADD             X10, X24, X9
.text:0000000000016B8C                 ADD             W9, W27, W9
.text:0000000000016B90 loc_16B90                               ; CODE XREF: sheifm_set_image_info+638↓j
.text:0000000000016B90                 ADD             W9, W9, #1
.text:0000000000016B94                 ORR             W11, W9, #0x80
.text:0000000000016B98                 SUBS            X8, X8, #1
.text:0000000000016B9C                 STRB            W11, [X10],#1
.text:0000000000016BA0                 B.NE            loc_16B90
.text:0000000000016BA4 loc_16BA4                               ; CODE XREF: sheifm_set_image_info+5A0↑j
.text:0000000000016BA4                                         ; sheifm_set_image_info+618↑j
.text:0000000000016BA4                 ADD             X0, SP, #0x210+var_180
.text:0000000000016BA8                 BL              .sheif_conv_u16
.text:0000000000016BAC                 LDRB            W8, [SP,#0x210+var_180+2]
.text:0000000000016BB0                 ADD             X1, SP, #0x210+var_180
.text:0000000000016BB4                 MOV             X0, X26
.text:0000000000016BB8                 ADD             W2, W8, #3
.text:0000000000016BBC                 BL              .sheif_mblk_elem_add_with_size
.text:0000000000016BC0                 CBNZ            W0, loc_16910
.text:0000000000016BC4                 MOVI            V17.16B, #1
.text:0000000000016BC8                 LDR             W8, [X22,#0x14]
.text:0000000000016BCC                 MOVI            V18.16B, #0x80
.text:0000000000016BD0                 LDR             Q16, [SP,#0x210+var_1C0]
.text:0000000000016BD4                 MOVI            V19.4S, #0x10
.text:0000000000016BD8                 ADD             W25, W25, #1
.text:0000000000016BDC                 CMP             W25, W8
.text:0000000000016BE0                 B.LS            loc_16ACC
.text:0000000000016BE4 loc_16BE4                               ; CODE XREF: sheifm_set_image_info+50C↑j
.text:0000000000016BE4                 LDR             W27, [X19,#0x60]
.text:0000000000016BE8                 MOV             W24, #0x14
.text:0000000000016BEC                 LDR             X20, [X22]
.text:0000000000016BF0                 ADD             X0, SP, #0x210+var_180
.text:0000000000016BF4                 STUR            XZR, [SP,#0x210+var_180+0xC]
.text:0000000000016BF8                 ADD             X21, SP, #0x210+var_180
.text:0000000000016BFC                 STUR            XZR, [SP,#0x210+var_180+4]
.text:0000000000016C00                 STR             W24, [SP,#0x210+var_180]
.text:0000000000016C04                 BL              .sheif_conv_u32
.text:0000000000016C08                 MOV             W8, #0x7369
.text:0000000000016C0C                 STUR            X20, [SP,#0x210+var_180+0xC]
.text:0000000000016C10                 ADD             X0, X21, #0xC
.text:0000000000016C14                 MOVK            W8, #0x6570,LSL#16
.text:0000000000016C18                 ADD             X26, X21, #0x10
.text:0000000000016C1C                 STR             W8, [SP,#0x210+var_180+4]
.text:0000000000016C20                 BL              .sheif_conv_u32
.text:0000000000016C24                 MOV             X0, X26
.text:0000000000016C28                 BL              .sheif_conv_u32
.text:0000000000016C2C                 LDR             X0, [SP,#0x210+var_208]
.text:0000000000016C30                 ADD             X1, SP, #0x210+var_180
.text:0000000000016C34                 MOV             W2, W24
.text:0000000000016C38                 BL              .sheif_mblk_elem_add_with_size
.text:0000000000016C3C                 CBNZ            W0, loc_16910
.text:0000000000016C40                 LDR             W8, [X19,#0x60]
.text:0000000000016C44                 MOV             W11, #0xBA0C000
.text:0000000000016C4C                 ADD             W8, W8, #1
.text:0000000000016C50                 STR             W8, [X19,#0x60]
.text:0000000000016C54                 LDP             W8, W9, [X22]
.text:0000000000016C58                 LDP             X0, X21, [SP,#0x210+var_1A8]
.text:0000000000016C5C                 MUL             W10, W9, W8
.text:0000000000016C60                 CMP             W10, W11
.text:0000000000016C64                 B.HI            loc_16910
.text:0000000000016C68                 LSR             W8, W8, #4
.text:0000000000016C6C                 LSR             W9, W9, #4
.text:0000000000016C70                 MUL             W8, W8, W9
.text:0000000000016C74                 ADRP            X9, #qword_9CD8@PAGE
.text:0000000000016C78                 ADD             W8, W8, W8,LSL#1
.text:0000000000016C7C                 LDR             D1, [X9,#qword_9CD8@PAGEOFF]
.text:0000000000016C80                 LSL             W8, W8, #6
.text:0000000000016C84                 UCVTF           D0, W8
.text:0000000000016C88                 LDR             W8, [X19,#0x48]
.text:0000000000016C8C                 FMUL            D0, D0, D1
.text:0000000000016C90                 FCVTZU          W1, D0
.text:0000000000016C94                 CMP             W8, W1
.text:0000000000016C98                 B.CS            loc_16CA4
.text:0000000000016C9C                 BL              .sheifm_reallocate_image_buffer
.text:0000000000016CA0                 CBNZ            W0, loc_16910
.text:0000000000016CA4 loc_16CA4                               ; CODE XREF: sheifm_set_image_info+730↑j
.text:0000000000016CA4                 LDR             W20, [X22,#0x1C]
.text:0000000000016CA8                 CBZ             W20, loc_16FF0
.text:0000000000016CAC                 MOV             W8, #9
.text:0000000000016CB0                 STUR            XZR, [SP,#0x210+var_180+4]
.text:0000000000016CB4                 ADD             X0, SP, #0x210+var_180
.text:0000000000016CB8                 STR             W8, [SP,#0x210+var_180]
.text:0000000000016CBC                 BL              .sheif_conv_u32
.text:0000000000016CC0                 CMP             W20, #0x10E
.text:0000000000016CC4                 B.EQ            loc_16FB4
.text:0000000000016CC8                 CMP             W20, #0xB4
.text:0000000000016CCC                 B.EQ            loc_16FBC
.text:0000000000016CD0                 CMP             W20, #0x5A ; 'Z'
.text:0000000000016CD4                 B.NE            loc_16FF0
.text:0000000000016CD8                 MOV             W8, #3
.text:0000000000016CDC                 B               loc_16FC0
.text:0000000000016CE0 ; ---------------------------------------------------------------------------
.text:0000000000016CE0 loc_16CE0                               ; CODE XREF: sheifm_set_image_info+4A8↑j
.text:0000000000016CE0                 MOV             W8, #3
.text:0000000000016CE4                 B               loc_16CEC
.text:0000000000016CE8 ; ---------------------------------------------------------------------------
.text:0000000000016CE8 loc_16CE8                               ; CODE XREF: sheifm_set_image_info+4B0↑j
.text:0000000000016CE8                 MOV             W8, #2
.text:0000000000016CEC loc_16CEC                               ; CODE XREF: sheifm_set_image_info+4C0↑j
.text:0000000000016CEC                                         ; sheifm_set_image_info+77C↑j
.text:0000000000016CEC                 MOV             W9, #0x7269
.text:0000000000016CF0                 STRB            W8, [SP,#0x210+var_180+8]
.text:0000000000016CF4                 MOVK            W9, #0x746F,LSL#16
.text:0000000000016CF8                 MOV             W2, #9
.text:0000000000016CFC                 ADD             X1, SP, #0x210+var_180
.text:0000000000016D00                 MOV             X0, X22
.text:0000000000016D04                 STR             W9, [SP,#0x210+var_180+4]
.text:0000000000016D08                 MOV             W20, W26
.text:0000000000016D0C                 BL              .sheif_mblk_elem_add_with_size
.text:0000000000016D10                 CBNZ            W0, loc_16910
.text:0000000000016D14                 LDR             W8, [X19,#0x60]
.text:0000000000016D18                 ADD             W8, W8, #1
.text:0000000000016D1C                 STR             W8, [X19,#0x60]
.text:0000000000016D20                 B               loc_16D2C
.text:0000000000016D24 ; ---------------------------------------------------------------------------
.text:0000000000016D24 loc_16D24                               ; CODE XREF: sheifm_set_image_info+4B8↑j
.text:0000000000016D24                 LDR             W8, [X19,#0x60]
.text:0000000000016D28 loc_16D28                               ; CODE XREF: sheifm_set_image_info+48C↑j
.text:0000000000016D28                 MOV             W20, W26
.text:0000000000016D2C loc_16D2C                               ; CODE XREF: sheifm_set_image_info+7B8↑j
.text:0000000000016D2C                 MOVI            V0.2D, #0
.text:0000000000016D30                 SUB             W8, W8, W24
.text:0000000000016D34                 STRH            WZR, [SP,#0x210+var_80]
.text:0000000000016D38                 STP             Q0, Q0, [X23,#0xE0]
.text:0000000000016D3C                 STP             Q0, Q0, [X23,#0xC0]
.text:0000000000016D40                 STP             Q0, Q0, [X23,#0xA0]
.text:0000000000016D44                 STP             Q0, Q0, [X23,#0x80]
.text:0000000000016D48                 STP             Q0, Q0, [SP,#0x210+var_180]
.text:0000000000016D4C                 STRB            W8, [SP,#0x210+var_180+2]
.text:0000000000016D50                 ANDS            W8, W8, #0xFF
.text:0000000000016D54                 STP             Q0, Q0, [SP,#0x210+var_120]
.text:0000000000016D58                 STP             Q0, Q0, [SP,#0x210+var_140]
.text:0000000000016D5C                 STP             Q0, Q0, [SP,#0x210+var_160]
.text:0000000000016D60                 STRH            W20, [SP,#0x210+var_180]
.text:0000000000016D64                 B.EQ            loc_16E34
.text:0000000000016D68                 CMP             W8, #0x10
.text:0000000000016D6C                 B.CS            loc_16D78
.text:0000000000016D70                 MOV             X9, XZR
.text:0000000000016D74                 B               loc_16E0C
.text:0000000000016D78 ; ---------------------------------------------------------------------------
.text:0000000000016D78 loc_16D78                               ; CODE XREF: sheifm_set_image_info+804↑j
.text:0000000000016D78                 ADRP            X9, #xmmword_9DA0@PAGE
.text:0000000000016D7C                 DUP             V0.4S, W24
.text:0000000000016D80                 ADRP            X10, #xmmword_9D90@PAGE
.text:0000000000016D84                 MOVI            V2.16B, #1
.text:0000000000016D88                 ADRP            X11, #xmmword_9D80@PAGE
.text:0000000000016D8C                 MOVI            V4.16B, #0x80
.text:0000000000016D90                 ADRP            X12, #xmmword_9DB0@PAGE
.text:0000000000016D94                 MOVI            V5.4S, #0x10
.text:0000000000016D98                 LDR             Q1, [X9,#xmmword_9DA0@PAGEOFF]
.text:0000000000016D9C                 AND             X9, X8, #0xF0
.text:0000000000016DA0                 LDR             Q3, [X10,#xmmword_9D90@PAGEOFF]
.text:0000000000016DA4                 ADD             X10, SP, #0x210+var_180
.text:0000000000016DA8                 LDR             Q6, [X11,#xmmword_9D80@PAGEOFF]
.text:0000000000016DAC                 ORR             X10, X10, #3
.text:0000000000016DB0                 LDR             Q7, [X12,#xmmword_9DB0@PAGEOFF]
.text:0000000000016DB4                 MOV             X11, X9
.text:0000000000016DB8 loc_16DB8                               ; CODE XREF: sheifm_set_image_info+898↓j
.text:0000000000016DB8                 ADD             V16.4S, V0.4S, V3.4S
.text:0000000000016DBC                 SUBS            X11, X11, #0x10
.text:0000000000016DC0                 ADD             V17.4S, V0.4S, V7.4S
.text:0000000000016DC4                 ADD             V18.4S, V0.4S, V6.4S
.text:0000000000016DC8                 ADD             V19.4S, V0.4S, V1.4S
.text:0000000000016DCC                 ADD             V7.4S, V7.4S, V5.4S
.text:0000000000016DD0                 ADD             V6.4S, V6.4S, V5.4S
.text:0000000000016DD4                 XTN             V16.4H, V16.4S
.text:0000000000016DD8                 XTN             V17.4H, V17.4S
.text:0000000000016DDC                 ADD             V3.4S, V3.4S, V5.4S
.text:0000000000016DE0                 ADD             V1.4S, V1.4S, V5.4S
.text:0000000000016DE4                 XTN2            V16.8H, V19.4S
.text:0000000000016DE8                 XTN2            V17.8H, V18.4S
.text:0000000000016DEC                 XTN             V17.8B, V17.8H
.text:0000000000016DF0                 XTN2            V17.16B, V16.8H
.text:0000000000016DF4                 ADD             V16.16B, V17.16B, V2.16B
.text:0000000000016DF8                 ORR             V16.16B, V16.16B, V4.16B
.text:0000000000016DFC                 STR             Q16, [X10],#0x10
.text:0000000000016E00                 B.NE            loc_16DB8
.text:0000000000016E04                 CMP             X9, X8
.text:0000000000016E08                 B.EQ            loc_16E34
.text:0000000000016E0C loc_16E0C                               ; CODE XREF: sheifm_set_image_info+80C↑j
.text:0000000000016E0C                 ADD             X10, SP, #0x210+var_180
.text:0000000000016E10                 ADD             X10, X10, X9
.text:0000000000016E14                 SUB             X8, X8, X9
.text:0000000000016E18                 ADD             X10, X10, #3
.text:0000000000016E1C                 ADD             W9, W24, W9
.text:0000000000016E20 loc_16E20                               ; CODE XREF: sheifm_set_image_info+8C8↓j
.text:0000000000016E20                 ADD             W9, W9, #1
.text:0000000000016E24                 ORR             W11, W9, #0x80
.text:0000000000016E28                 SUBS            X8, X8, #1
.text:0000000000016E2C                 STRB            W11, [X10],#1
.text:0000000000016E30                 B.NE            loc_16E20
.text:0000000000016E34 loc_16E34                               ; CODE XREF: sheifm_set_image_info+7FC↑j
.text:0000000000016E34                                         ; sheifm_set_image_info+8A0↑j ...
.text:0000000000016E34                 ADD             X0, SP, #0x210+var_180
.text:0000000000016E38                 BL              .sheif_conv_u16
.text:0000000000016E3C                 LDRB            W8, [SP,#0x210+var_180+2]
.text:0000000000016E40                 MOV             W9, #0x1A18
.text:0000000000016E44                 ADD             X0, X19, X9
.text:0000000000016E48                 ADD             X1, SP, #0x210+var_180
.text:0000000000016E4C                 ADD             W2, W8, #3
.text:0000000000016E50                 BL              .sheif_mblk_elem_add_with_size
.text:0000000000016E54                 CBNZ            W0, loc_16910
.text:0000000000016E58                 LDR             W8, [X21,#0xF8]
.text:0000000000016E5C                 CBZ             W8, loc_16F14
.text:0000000000016E60                 ADD             X0, SP, #0x210+var_184
.text:0000000000016E64                 BL              .sheif_conv_u32
.text:0000000000016E68                 LDRSW           X8, [X19,#0x68]
.text:0000000000016E6C                 MOV             W9, #0x18
.text:0000000000016E70                 MOV             W10, W20
.text:0000000000016E74                 ADD             X20, X19, #0x1A0
.text:0000000000016E78                 MOV             W24, W10
.text:0000000000016E7C                 MUL             X8, X8, X9
.text:0000000000016E80                 MOV             X22, X21
.text:0000000000016E84                 STR             WZR, [X20,X8]
.text:0000000000016E88                 LDRSW           X8, [X19,#0x68]
.text:0000000000016E8C                 NOP
.text:0000000000016E90                 MADD            X8, X8, X9, X20
.text:0000000000016E94                 STR             W10, [X8,#4]
.text:0000000000016E98                 LDR             W10, [X21,#0xF8]
.text:0000000000016E9C                 ADD             W10, W10, #4
.text:0000000000016EA0                 STR             W10, [X8,#0x10]
.text:0000000000016EA4                 LDRSW           X8, [X19,#0x68]
.text:0000000000016EA8                 NOP
.text:0000000000016EAC                 MADD            X21, X8, X9, X20
.text:0000000000016EB0                 LDRSW           X0, [X21,#0x10] ; size
.text:0000000000016EB4                 BL              .malloc
.text:0000000000016EB8                 STR             X0, [X21,#8]
.text:0000000000016EBC                 CBZ             X0, loc_16FA4
.text:0000000000016EC0                 LDRSW           X8, [X19,#0x68]
.text:0000000000016EC4                 MOV             W9, #0x18
.text:0000000000016EC8                 LDR             W10, [SP,#0x210+var_184]
.text:0000000000016ECC                 NOP
.text:0000000000016ED0                 MADD            X8, X8, X9, X20
.text:0000000000016ED4                 LDR             X8, [X8,#8]
.text:0000000000016ED8                 STR             W10, [X8]
.text:0000000000016EDC                 LDRSW           X8, [X19,#0x68]
.text:0000000000016EE0                 LDR             X1, [X22,#0xF0] ; src
.text:0000000000016EE4                 NOP
.text:0000000000016EE8                 MADD            X8, X8, X9, X20
.text:0000000000016EEC                 LDR             X9, [X8,#8]
.text:0000000000016EF0                 LDRSW           X8, [X8,#0x10]
.text:0000000000016EF4                 ADD             X0, X9, #4 ; dest
.text:0000000000016EF8                 SUB             X2, X8, #4 ; n
.text:0000000000016EFC                 BL              .memcpy
.text:0000000000016F00                 LDR             W8, [X19,#0x68]
.text:0000000000016F04                 MOV             X21, X22
.text:0000000000016F08                 MOV             W20, W24
.text:0000000000016F0C                 ADD             W8, W8, #1
.text:0000000000016F10                 STR             W8, [X19,#0x68]
.text:0000000000016F14 loc_16F14                               ; CODE XREF: sheifm_set_image_info+8F4↑j
.text:0000000000016F14                 LDR             W8, [X21,#0xE8]
.text:0000000000016F18                 CBZ             W8, loc_16FAC
.text:0000000000016F1C                 LDRSW           X8, [X19,#0x68]
.text:0000000000016F20                 MOV             W9, #0x18
.text:0000000000016F24                 MOV             W11, W20
.text:0000000000016F28                 ADD             X20, X19, #0x1A0
.text:0000000000016F2C                 MOV             W10, #1
.text:0000000000016F30                 MUL             X8, X8, X9
.text:0000000000016F34                 MOV             X22, X21
.text:0000000000016F38                 STR             W10, [X20,X8]
.text:0000000000016F3C                 LDRSW           X8, [X19,#0x68]
.text:0000000000016F40                 NOP
.text:0000000000016F44                 MADD            X8, X8, X9, X20
.text:0000000000016F48                 STR             W11, [X8,#4]
.text:0000000000016F4C                 LDR             W10, [X21,#0xE8]
.text:0000000000016F50                 STR             W10, [X8,#0x10]
.text:0000000000016F54                 LDRSW           X8, [X19,#0x68]
.text:0000000000016F58                 NOP
.text:0000000000016F5C                 MADD            X21, X8, X9, X20
.text:0000000000016F60                 LDRSW           X0, [X21,#0x10] ; size
.text:0000000000016F64                 BL              .malloc
.text:0000000000016F68                 STR             X0, [X21,#8]
.text:0000000000016F6C                 CBZ             X0, loc_16FA4
.text:0000000000016F70                 LDRSW           X8, [X19,#0x68]
.text:0000000000016F74                 MOV             W9, #0x18
.text:0000000000016F78                 LDR             X1, [X22,#0xE0] ; src
.text:0000000000016F7C                 NOP
.text:0000000000016F80                 MADD            X8, X8, X9, X20
.text:0000000000016F84                 LDR             X0, [X8,#8] ; dest
.text:0000000000016F88                 LDRSW           X2, [X8,#0x10] ; n
.text:0000000000016F8C                 BL              .memcpy
.text:0000000000016F90                 LDR             W8, [X19,#0x68]
.text:0000000000016F94                 MOV             W0, WZR
.text:0000000000016F98                 ADD             W8, W8, #1
.text:0000000000016F9C                 STR             W8, [X19,#0x68]
.text:0000000000016FA0                 B               loc_1692C
.text:0000000000016FA4 ; ---------------------------------------------------------------------------
.text:0000000000016FA4 loc_16FA4                               ; CODE XREF: sheifm_set_image_info+954↑j
.text:0000000000016FA4                                         ; sheifm_set_image_info+A04↑j
.text:0000000000016FA4                 MOV             W0, #0xFFFFFFFF
.text:0000000000016FA8                 B               loc_1692C
.text:0000000000016FAC ; ---------------------------------------------------------------------------
.text:0000000000016FAC loc_16FAC                               ; CODE XREF: sheifm_set_image_info+9B0↑j
.text:0000000000016FAC                 MOV             W0, WZR
.text:0000000000016FB0                 B               loc_1692C
.text:0000000000016FB4 ; ---------------------------------------------------------------------------
.text:0000000000016FB4 loc_16FB4                               ; CODE XREF: sheifm_set_image_info+75C↑j
.text:0000000000016FB4                 MOV             W8, #1
.text:0000000000016FB8                 B               loc_16FC0
.text:0000000000016FBC ; ---------------------------------------------------------------------------
.text:0000000000016FBC loc_16FBC                               ; CODE XREF: sheifm_set_image_info+764↑j
.text:0000000000016FBC                 MOV             W8, #2
.text:0000000000016FC0 loc_16FC0                               ; CODE XREF: sheifm_set_image_info+774↑j
.text:0000000000016FC0                                         ; sheifm_set_image_info+A50↑j
.text:0000000000016FC0                 LDR             X0, [SP,#0x210+var_208]
.text:0000000000016FC4                 MOV             W9, #0x746F7269
.text:0000000000016FCC                 STRB            W8, [SP,#0x210+var_180+8]
.text:0000000000016FD0                 MOV             W2, #9
.text:0000000000016FD4                 ADD             X1, SP, #0x210+var_180
.text:0000000000016FD8                 STR             W9, [SP,#0x210+var_180+4]
.text:0000000000016FDC                 BL              .sheif_mblk_elem_add_with_size
.text:0000000000016FE0                 CBNZ            W0, loc_16910
.text:0000000000016FE4                 LDR             W8, [X19,#0x60]
.text:0000000000016FE8                 ADD             W8, W8, #1
.text:0000000000016FEC                 STR             W8, [X19,#0x60]
.text:0000000000016FF0 loc_16FF0                               ; CODE XREF: sheifm_set_image_info+740↑j
.text:0000000000016FF0                                         ; sheifm_set_image_info+76C↑j
.text:0000000000016FF0                 MOVI            V0.2D, #0
.text:0000000000016FF4                 LDR             W8, [X22,#0x18]
.text:0000000000016FF8                 LDR             W20, [SP,#0x210+var_1AC]
.text:0000000000016FFC                 STP             Q0, Q0, [X23,#0xE0]
.text:0000000000017000                 STP             Q0, Q0, [X23,#0xC0]
.text:0000000000017004                 STP             Q0, Q0, [X23,#0xA0]
.text:0000000000017008                 STP             Q0, Q0, [X23,#0x80]
.text:000000000001700C                 STP             Q0, Q0, [SP,#0x210+var_180]
.text:0000000000017010                 LDR             W9, [X19,#0x60]
.text:0000000000017014                 STRH            W8, [SP,#0x210+var_180]
.text:0000000000017018                 STRH            WZR, [SP,#0x210+var_80]
.text:000000000001701C                 STP             Q0, Q0, [SP,#0x210+var_120]
.text:0000000000017020                 SUB             W8, W9, W27
.text:0000000000017024                 STP             Q0, Q0, [SP,#0x210+var_140]
.text:0000000000017028                 STP             Q0, Q0, [SP,#0x210+var_160]
.text:000000000001702C                 STRB            W8, [SP,#0x210+var_180+2]
.text:0000000000017030                 ANDS            W8, W8, #0xFF
.text:0000000000017034                 B.EQ            loc_16E34
.text:0000000000017038                 CMP             W8, #0x10
.text:000000000001703C                 B.CS            loc_17048
.text:0000000000017040                 MOV             X9, XZR
.text:0000000000017044                 B               loc_170DC
.text:0000000000017048 ; ---------------------------------------------------------------------------
.text:0000000000017048 loc_17048                               ; CODE XREF: sheifm_set_image_info+AD4↑j
.text:0000000000017048                 ADRP            X9, #xmmword_9DA0@PAGE
.text:000000000001704C                 DUP             V0.4S, W27
.text:0000000000017050                 ADRP            X10, #xmmword_9D90@PAGE
.text:0000000000017054                 MOVI            V2.16B, #1
.text:0000000000017058                 ADRP            X11, #xmmword_9D80@PAGE
.text:000000000001705C                 MOVI            V4.16B, #0x80
.text:0000000000017060                 ADRP            X12, #xmmword_9DB0@PAGE
.text:0000000000017064                 MOVI            V5.4S, #0x10
.text:0000000000017068                 LDR             Q1, [X9,#xmmword_9DA0@PAGEOFF]
.text:000000000001706C                 AND             X9, X8, #0xF0
.text:0000000000017070                 LDR             Q3, [X10,#xmmword_9D90@PAGEOFF]
.text:0000000000017074                 ADD             X10, SP, #0x210+var_180
.text:0000000000017078                 LDR             Q6, [X11,#xmmword_9D80@PAGEOFF]
.text:000000000001707C                 ORR             X10, X10, #3
.text:0000000000017080                 LDR             Q7, [X12,#xmmword_9DB0@PAGEOFF]
.text:0000000000017084                 MOV             X11, X9
.text:0000000000017088 loc_17088                               ; CODE XREF: sheifm_set_image_info+B68↓j
.text:0000000000017088                 ADD             V16.4S, V0.4S, V3.4S
.text:000000000001708C                 SUBS            X11, X11, #0x10
.text:0000000000017090                 ADD             V17.4S, V0.4S, V7.4S
.text:0000000000017094                 ADD             V18.4S, V0.4S, V6.4S
.text:0000000000017098                 ADD             V19.4S, V0.4S, V1.4S
.text:000000000001709C                 ADD             V7.4S, V7.4S, V5.4S
.text:00000000000170A0                 ADD             V6.4S, V6.4S, V5.4S
.text:00000000000170A4                 XTN             V16.4H, V16.4S
.text:00000000000170A8                 XTN             V17.4H, V17.4S
.text:00000000000170AC                 ADD             V3.4S, V3.4S, V5.4S
.text:00000000000170B0                 ADD             V1.4S, V1.4S, V5.4S
.text:00000000000170B4                 XTN2            V16.8H, V19.4S
.text:00000000000170B8                 XTN2            V17.8H, V18.4S
.text:00000000000170BC                 XTN             V17.8B, V17.8H
.text:00000000000170C0                 XTN2            V17.16B, V16.8H
.text:00000000000170C4                 ADD             V16.16B, V17.16B, V2.16B
.text:00000000000170C8                 ORR             V16.16B, V16.16B, V4.16B
.text:00000000000170CC                 STR             Q16, [X10],#0x10
.text:00000000000170D0                 B.NE            loc_17088
.text:00000000000170D4                 CMP             X9, X8
.text:00000000000170D8                 B.EQ            loc_16E34
.text:00000000000170DC loc_170DC                               ; CODE XREF: sheifm_set_image_info+ADC↑j
.text:00000000000170DC                 ADD             X10, SP, #0x210+var_180
.text:00000000000170E0                 ADD             X10, X10, X9
.text:00000000000170E4                 SUB             X8, X8, X9
.text:00000000000170E8                 ADD             X10, X10, #3
.text:00000000000170EC                 ADD             W9, W27, W9
.text:00000000000170F0 loc_170F0                               ; CODE XREF: sheifm_set_image_info+B98↓j
.text:00000000000170F0                 ADD             W9, W9, #1
.text:00000000000170F4                 ORR             W11, W9, #0x80
.text:00000000000170F8                 SUBS            X8, X8, #1
.text:00000000000170FC                 STRB            W11, [X10],#1
.text:0000000000017100                 B.NE            loc_170F0
.text:0000000000017104                 B               loc_16E34
.text:0000000000017108 ; ---------------------------------------------------------------------------
.text:0000000000017108 loc_17108                               ; CODE XREF: sheifm_set_image_info+3D0↑j
.text:0000000000017108                 BL              .__stack_chk_fail
.text:0000000000017108 ; } // starts at 16568
.text:0000000000017108 ; End of function sheifm_set_image_info
.text:0000000000017108 ; ---------------------------------------------------------------------------
.text:000000000001710C                 ALIGN 0x10
.text:0000000000017110 ; =============== S U B R O U T I N E =======================================
.text:0000000000017110 ; Attributes: bp-based frame
.text:0000000000017110                 EXPORT sheifm_set_cover_image
.text:0000000000017110 sheifm_set_cover_image                  ; CODE XREF: .sheifm_set_cover_image+C↓j
.text:0000000000017110                                         ; DATA XREF: LOAD:00000000000014B8↑o ...
.text:0000000000017110 var_s0          =  0
.text:0000000000017110 ; __unwind {
.text:0000000000017110                 STP             X29, X30, [SP,#-0x10+var_s0]!
.text:0000000000017114                 MOV             X29, SP
.text:0000000000017118                 MOV             W3, W1
.text:000000000001711C                 TBNZ            W1, #0x1F, loc_17138
.text:0000000000017120                 MOV             X8, X0
.text:0000000000017124                 CBZ             X0, loc_1715C
.text:0000000000017128                 MOV             W0, WZR
.text:000000000001712C                 STR             W3, [X8,#0x10]
.text:0000000000017130                 LDP             X29, X30, [SP+var_s0],#0x10
.text:0000000000017134                 RET
.text:0000000000017138 ; ---------------------------------------------------------------------------
.text:0000000000017138 loc_17138                               ; CODE XREF: sheifm_set_cover_image+C↑j
.text:0000000000017138                 ADRP            X1, #aSheifm@PAGE ; "sheifm"
.text:000000000001713C                 ADRP            X2, #aImgIdIsInvalid@PAGE ; "img_id is invalid : %d"
.text:0000000000017140                 ADD             X1, X1, #aSheifm@PAGEOFF ; "sheifm"
.text:0000000000017144                 ADD             X2, X2, #aImgIdIsInvalid@PAGEOFF ; "img_id is invalid : %d"
.text:0000000000017148                 MOV             W0, #5
.text:000000000001714C                 BL              .__android_log_print
.text:0000000000017150                 MOV             W0, #0xFFFFFFFF
.text:0000000000017154                 LDP             X29, X30, [SP+var_s0],#0x10
.text:0000000000017158                 RET
.text:000000000001715C ; ---------------------------------------------------------------------------
.text:000000000001715C loc_1715C                               ; CODE XREF: sheifm_set_cover_image+14↑j
.text:000000000001715C                 ADRP            X1, #aSheifm@PAGE ; "sheifm"
.text:0000000000017160                 ADRP            X2, #aSheifmIsNull@PAGE ; "SHEIFM is NULL"
.text:0000000000017164                 ADD             X1, X1, #aSheifm@PAGEOFF ; "sheifm"
.text:0000000000017168                 MOV             W0, #5
.text:000000000001716C                 ADD             X2, X2, #aSheifmIsNull@PAGEOFF ; "SHEIFM is NULL"
.text:0000000000017170                 BL              .__android_log_print
.text:0000000000017174                 MOV             W0, #0xFFFFFFFF
.text:0000000000017178                 LDP             X29, X30, [SP+var_s0],#0x10
.text:000000000001717C                 RET
.text:000000000001717C ; } // starts at 17110
.text:000000000001717C ; End of function sheifm_set_cover_image
.text:0000000000017180 ; =============== S U B R O U T I N E =======================================
.text:0000000000017180 ; Attributes: bp-based frame
.text:0000000000017180                 EXPORT sheifm_put_frm
.text:0000000000017180 sheifm_put_frm                          ; CODE XREF: .sheifm_put_frm+C↓j
.text:0000000000017180                                         ; DATA XREF: LOAD:0000000000001278↑o ...
.text:0000000000017180 var_70          = -0x70
.text:0000000000017180 var_6E          = -0x6E
.text:0000000000017180 var_6A          = -0x6A
.text:0000000000017180 var_68          = -0x68
.text:0000000000017180 var_5C          = -0x5C
.text:0000000000017180 var_58          = -0x58
.text:0000000000017180 var_50          = -0x50
.text:0000000000017180 var_40          = -0x40
.text:0000000000017180 var_30          = -0x30
.text:0000000000017180 var_20          = -0x20
.text:0000000000017180 var_10          = -0x10
.text:0000000000017180 var_s0          =  0
.text:0000000000017180 ; __unwind {
.text:0000000000017180                 SUB             SP, SP, #0x80
.text:0000000000017184                 STR             X27, [SP,#0x70+var_50]
.text:0000000000017188                 STP             X26, X25, [SP,#0x70+var_40]
.text:000000000001718C                 STP             X24, X23, [SP,#0x70+var_30]
.text:0000000000017190                 STP             X22, X21, [SP,#0x70+var_20]
.text:0000000000017194                 STP             X20, X19, [SP,#0x70+var_10]
.text:0000000000017198                 STP             X29, X30, [SP,#0x70+var_s0]
.text:000000000001719C                 ADD             X29, SP, #0x70
.text:00000000000171A0                 MRS             X24, #3, c13, c0, #2
.text:00000000000171A4                 MOV             X19, X0
.text:00000000000171A8                 LDR             X8, [X24,#0x28]
.text:00000000000171AC                 MOV             W9, #1
.text:00000000000171B0                 MOV             W20, W3
.text:00000000000171B4                 MOV             X22, X2
.text:00000000000171B8                 MOV             W23, W1
.text:00000000000171BC                 STR             X8, [SP,#0x70+var_58]
.text:00000000000171C0                 MOV             X25, SP
.text:00000000000171C4                 LDR             W8, [X0,#0x50]
.text:00000000000171C8                 LDR             W10, [X0,#0x40]
.text:00000000000171CC                 MOV             X0, SP
.text:00000000000171D0                 STRH            W1, [SP,#0x70+var_70]
.text:00000000000171D4                 STUR            WZR, [SP,#0x70+var_6E]
.text:00000000000171D8                 STRH            W9, [SP,#0x70+var_6A]
.text:00000000000171DC                 SUB             W8, W8, W10
.text:00000000000171E0                 STP             W8, W3, [SP,#0x70+var_68]
.text:00000000000171E4                 BL              .sheif_conv_u16
.text:00000000000171E8                 MOV             W8, #0x1A40
.text:00000000000171EC                 ADD             X21, X19, X8
.text:00000000000171F0                 MOV             X1, SP
.text:00000000000171F4                 MOV             X0, X21
.text:00000000000171F8                 BL              .sheif_mblk_elem_add
.text:00000000000171FC                 CBZ             W0, loc_17234
.text:0000000000017200 loc_17200                               ; CODE XREF: sheifm_put_frm+100↓j
.text:0000000000017200                                         ; sheifm_put_frm+1F4↓j
.text:0000000000017200                 MOV             W0, #0xFFFFFFFB
.text:0000000000017204 loc_17204                               ; CODE XREF: sheifm_put_frm+12C↓j
.text:0000000000017204                                         ; sheifm_put_frm+240↓j
.text:0000000000017204                 LDR             X8, [X24,#0x28]
.text:0000000000017208                 LDR             X9, [SP,#0x70+var_58]
.text:000000000001720C                 CMP             X8, X9
.text:0000000000017210                 B.NE            loc_173C4
.text:0000000000017214                 LDP             X29, X30, [SP,#0x70+var_s0]
.text:0000000000017218                 LDP             X20, X19, [SP,#0x70+var_10]
.text:000000000001721C                 LDP             X22, X21, [SP,#0x70+var_20]
.text:0000000000017220                 LDP             X24, X23, [SP,#0x70+var_30]
.text:0000000000017224                 LDP             X26, X25, [SP,#0x70+var_40]
.text:0000000000017228                 LDR             X27, [SP,#0x70+var_50]
.text:000000000001722C                 ADD             SP, SP, #0x80
.text:0000000000017230                 RET
.text:0000000000017234 ; ---------------------------------------------------------------------------
.text:0000000000017234 loc_17234                               ; CODE XREF: sheifm_put_frm+7C↑j
.text:0000000000017234                 LDR             W8, [X19,#0x94]
.text:0000000000017238                 CMP             W8, W23
.text:000000000001723C                 B.NE            loc_17284
.text:0000000000017240                 ADRP            X9, #qword_9CE0@PAGE
.text:0000000000017244                 LDR             W8, [X19,#0x98]
.text:0000000000017248                 MOV             W10, #1
.text:000000000001724C                 MOV             X0, SP
.text:0000000000017250                 LDR             D0, [X9,#qword_9CE0@PAGEOFF]
.text:0000000000017254                 ORR             X23, X25, #2
.text:0000000000017258                 STRH            W8, [SP,#0x70+var_70]
.text:000000000001725C                 STUR            W10, [SP,#0x70+var_6E]
.text:0000000000017260                 STRH            W10, [SP,#0x70+var_6A]
.text:0000000000017264                 STR             D0, [SP,#0x70+var_68]
.text:0000000000017268                 BL              .sheif_conv_u16
.text:000000000001726C                 MOV             X0, X23
.text:0000000000017270                 BL              .sheif_conv_u16
.text:0000000000017274                 MOV             X1, SP
.text:0000000000017278                 MOV             X0, X21
.text:000000000001727C                 BL              .sheif_mblk_elem_add
.text:0000000000017280                 CBNZ            W0, loc_17200
.text:0000000000017284 loc_17284                               ; CODE XREF: sheifm_put_frm+BC↑j
.text:0000000000017284                 LDR             W8, [X19,#0x38]
.text:0000000000017288                 CMP             W8, W20
.text:000000000001728C                 B.GE            loc_172B0
.text:0000000000017290                 ADRP            X1, #aSheifm@PAGE ; "sheifm"
.text:0000000000017294                 ADRP            X2, #aImageFrameSize@PAGE ; "image frame size is too big, buffer too"...
.text:0000000000017298                 ADD             X1, X1, #aSheifm@PAGEOFF ; "sheifm"
.text:000000000001729C                 MOV             W0, #5
.text:00000000000172A0                 ADD             X2, X2, #aImageFrameSize@PAGEOFF ; "image frame size is too big, buffer too"...
.text:00000000000172A4                 BL              .__android_log_print
.text:00000000000172A8                 MOV             W0, #0xFFFFFFFC
.text:00000000000172AC                 B               loc_17204
.text:00000000000172B0 ; ---------------------------------------------------------------------------
.text:00000000000172B0 loc_172B0                               ; CODE XREF: sheifm_put_frm+10C↑j
.text:00000000000172B0                 LDR             X0, [X19,#0x30] ; dest
.text:00000000000172B4                 SXTW            X21, W20
.text:00000000000172B8                 MOV             X1, X22 ; src
.text:00000000000172BC                 MOV             X2, X21 ; n
.text:00000000000172C0                 BL              .memcpy
.text:00000000000172C4                 CMP             W20, #1
.text:00000000000172C8                 B.LT            loc_1734C
.text:00000000000172CC                 LDR             X22, [X19,#0x30]
.text:00000000000172D0                 MOV             W23, #0x1000000
.text:00000000000172D4                 MOV             W26, W20
.text:00000000000172D8                 ADD             X25, X22, X21
.text:00000000000172DC loc_172DC                               ; CODE XREF: sheifm_put_frm+1C8↓j
.text:00000000000172DC                 MOV             X9, XZR
.text:00000000000172E0                 ADD             X10, X22, #1
.text:00000000000172E4                 SXTW            X8, W26
.text:00000000000172E8 loc_172E8                               ; CODE XREF: sheifm_put_frm+17C↓j
.text:00000000000172E8                 LDR             W11, [X10,X9]
.text:00000000000172EC                 CMP             W11, W23
.text:00000000000172F0                 B.EQ            loc_17308
.text:00000000000172F4                 ADD             X9, X9, #1
.text:00000000000172F8                 CMP             X8, X9
.text:00000000000172FC                 B.NE            loc_172E8
.text:0000000000017300                 MOV             X9, XZR
.text:0000000000017304                 B               loc_1730C
.text:0000000000017308 ; ---------------------------------------------------------------------------
.text:0000000000017308 loc_17308                               ; CODE XREF: sheifm_put_frm+170↑j
.text:0000000000017308                 ADD             X9, X10, X9
.text:000000000001730C loc_1730C                               ; CODE XREF: sheifm_put_frm+184↑j
.text:000000000001730C                 CMP             X9, #0
.text:0000000000017310                 CSEL            X27, X25, X9, EQ
.text:0000000000017314                 ADD             W9, W22, #4
.text:0000000000017318                 SUB             W9, W27, W9
.text:000000000001731C                 CMP             W9, #1
.text:0000000000017320                 STR             W9, [SP,#0x70+var_5C]
.text:0000000000017324                 B.LT            loc_1734C
.text:0000000000017328                 SUB             W8, W8, #4
.text:000000000001732C                 SUBS            W26, W8, W9
.text:0000000000017330                 B.MI            loc_1734C
.text:0000000000017334                 ADD             X0, SP, #0x70+var_5C
.text:0000000000017338                 BL              .sheif_conv_u32
.text:000000000001733C                 LDR             W8, [SP,#0x70+var_5C]
.text:0000000000017340                 STR             W8, [X22]
.text:0000000000017344                 MOV             X22, X27
.text:0000000000017348                 CBNZ            W26, loc_172DC
.text:000000000001734C loc_1734C                               ; CODE XREF: sheifm_put_frm+148↑j
.text:000000000001734C                                         ; sheifm_put_frm+1A4↑j ...
.text:000000000001734C                 LDRSW           X9, [X19,#0x38]
.text:0000000000017350                 LDR             X8, [X19,#0x30]
.text:0000000000017354                 LDRSW           X10, [X19,#0x28]
.text:0000000000017358                 LDR             W11, [X19,#0x58]
.text:000000000001735C                 SUB             X9, X9, W20,SXTW
.text:0000000000017360                 ADD             X8, X8, X21
.text:0000000000017364                 SUB             X20, X10, X9
.text:0000000000017368                 CMP             W11, W20
.text:000000000001736C                 STR             W9, [X19,#0x38]
.text:0000000000017370                 STR             X8, [X19,#0x30]
.text:0000000000017374                 B.LT            loc_17200
.text:0000000000017378                 LDR             X0, [X19,#0x50] ; dest
.text:000000000001737C                 MOV             X2, X20 ; n
.text:0000000000017380                 LDR             X1, [X19,#0x20] ; src
.text:0000000000017384                 BL              .memcpy
.text:0000000000017388                 LDR             X8, [X19,#0x50]
.text:000000000001738C                 MOV             W0, WZR
.text:0000000000017390                 LDR             W9, [X19,#0x58]
.text:0000000000017394                 LDR             W10, [X19,#0x1A68]
.text:0000000000017398                 LDR             X11, [X19,#0x20]
.text:000000000001739C                 LDR             W12, [X19,#0x28]
.text:00000000000173A0                 ADD             X8, X8, X20
.text:00000000000173A4                 SUB             W9, W9, W20
.text:00000000000173A8                 ADD             W10, W10, W20
.text:00000000000173AC                 STR             X8, [X19,#0x50]
.text:00000000000173B0                 STR             W9, [X19,#0x58]
.text:00000000000173B4                 STR             W10, [X19,#0x1A68]
.text:00000000000173B8                 STR             X11, [X19,#0x30]
.text:00000000000173BC                 STR             W12, [X19,#0x38]
.text:00000000000173C0                 B               loc_17204
.text:00000000000173C4 ; ---------------------------------------------------------------------------
.text:00000000000173C4 loc_173C4                               ; CODE XREF: sheifm_put_frm+90↑j
.text:00000000000173C4                 BL              .__stack_chk_fail
.text:00000000000173C4 ; } // starts at 17180
.text:00000000000173C4 ; End of function sheifm_put_frm
.text:00000000000173C8 ; =============== S U B R O U T I N E =======================================
.text:00000000000173C8 ; Attributes: bp-based frame
.text:00000000000173C8                 EXPORT sheifm_put_metadata
.text:00000000000173C8 sheifm_put_metadata                     ; CODE XREF: .sheifm_put_metadata+C↓j
.text:00000000000173C8                                         ; DATA XREF: LOAD:0000000000001008↑o ...
.text:00000000000173C8 var_38          = -0x38
.text:00000000000173C8 var_36          = -0x36
.text:00000000000173C8 var_32          = -0x32
.text:00000000000173C8 var_30          = -0x30
.text:00000000000173C8 var_28          = -0x28
.text:00000000000173C8 var_20          = -0x20
.text:00000000000173C8 var_10          = -0x10
.text:00000000000173C8 var_s0          =  0
.text:00000000000173C8 ; __unwind {
.text:00000000000173C8                 SUB             SP, SP, #0x50
.text:00000000000173CC                 STP             X22, X21, [SP,#0x40+var_20]
.text:00000000000173D0                 STP             X20, X19, [SP,#0x40+var_10]
.text:00000000000173D4                 STP             X29, X30, [SP,#0x40+var_s0]
.text:00000000000173D8                 ADD             X29, SP, #0x40
.text:00000000000173DC                 MRS             X22, #3, c13, c0, #2
.text:00000000000173E0                 LDR             X8, [X22,#0x28]
.text:00000000000173E4                 STR             X8, [SP,#0x40+var_28]
.text:00000000000173E8                 CBZ             W3, loc_17424
.text:00000000000173EC                 LDR             W8, [X0,#0x38]
.text:00000000000173F0                 MOV             W20, W3
.text:00000000000173F4                 MOV             X19, X0
.text:00000000000173F8                 CMP             W8, W3
.text:00000000000173FC                 B.GE            loc_17444
.text:0000000000017400                 ADRP            X1, #aSheifm@PAGE ; "sheifm"
.text:0000000000017404                 ADRP            X2, #aRemainedIncomi@PAGE ; "remained_incoming_buf_sz is smaller tha"...
.text:0000000000017408                 ADD             X1, X1, #aSheifm@PAGEOFF ; "sheifm"
.text:000000000001740C                 ADD             X2, X2, #aRemainedIncomi@PAGEOFF ; "remained_incoming_buf_sz is smaller tha"...
.text:0000000000017410                 MOV             W0, #5
.text:0000000000017414                 MOV             W3, W20
.text:0000000000017418                 BL              .__android_log_print
.text:000000000001741C                 MOV             W0, #0xFFFFFFFC
.text:0000000000017420                 B               loc_17528
.text:0000000000017424 ; ---------------------------------------------------------------------------
.text:0000000000017424 loc_17424                               ; CODE XREF: sheifm_put_metadata+20↑j
.text:0000000000017424                 ADRP            X1, #aSheifm@PAGE ; "sheifm"
.text:0000000000017428                 ADRP            X2, #aMetadataSizeIs@PAGE ; "metadata size is zero"
.text:000000000001742C                 ADD             X1, X1, #aSheifm@PAGEOFF ; "sheifm"
.text:0000000000017430                 ADD             X2, X2, #aMetadataSizeIs@PAGEOFF ; "metadata size is zero"
.text:0000000000017434                 MOV             W0, #6
.text:0000000000017438                 BL              .__android_log_print
.text:000000000001743C                 MOV             W0, #0xFFFFFFFF
.text:0000000000017440                 B               loc_17528
.text:0000000000017444 ; ---------------------------------------------------------------------------
.text:0000000000017444 loc_17444                               ; CODE XREF: sheifm_put_metadata+34↑j
.text:0000000000017444                 LDR             W8, [X19,#0x50]
.text:0000000000017448                 MOV             W10, #1
.text:000000000001744C                 LDR             W9, [X19,#0x40]
.text:0000000000017450                 ADD             X0, SP, #0x40+var_38
.text:0000000000017454                 MOV             X21, X2
.text:0000000000017458                 STRH            W1, [SP,#0x40+var_38]
.text:000000000001745C                 STUR            WZR, [SP,#0x40+var_36]
.text:0000000000017460                 STRH            W10, [SP,#0x40+var_32]
.text:0000000000017464                 SUB             W8, W8, W9
.text:0000000000017468                 STP             W8, W20, [SP,#0x40+var_30]
.text:000000000001746C                 BL              .sheif_conv_u16
.text:0000000000017470                 MOV             W8, #0x1A40
.text:0000000000017474                 ADD             X0, X19, X8
.text:0000000000017478                 ADD             X1, SP, #0x40+var_38
.text:000000000001747C                 BL              .sheif_mblk_elem_add
.text:0000000000017480                 CBZ             W0, loc_1748C
.text:0000000000017484 loc_17484                               ; CODE XREF: sheifm_put_metadata+114↓j
.text:0000000000017484                 MOV             W0, #0xFFFFFFFB
.text:0000000000017488                 B               loc_17528
.text:000000000001748C ; ---------------------------------------------------------------------------
.text:000000000001748C loc_1748C                               ; CODE XREF: sheifm_put_metadata+B8↑j
.text:000000000001748C                 LDR             W8, [X19,#0x38]
.text:0000000000017490                 CMP             W8, W20
.text:0000000000017494                 B.GE            loc_174A0
.text:0000000000017498                 MOV             W0, #0xFFFFFFFC
.text:000000000001749C                 B               loc_17528
.text:00000000000174A0 ; ---------------------------------------------------------------------------
.text:00000000000174A0 loc_174A0                               ; CODE XREF: sheifm_put_metadata+CC↑j
.text:00000000000174A0                 LDR             X0, [X19,#0x30] ; dest
.text:00000000000174A4                 SXTW            X20, W20
.text:00000000000174A8                 MOV             X1, X21 ; src
.text:00000000000174AC                 MOV             X2, X20 ; n
.text:00000000000174B0                 BL              .memcpy
.text:00000000000174B4                 LDRSW           X9, [X19,#0x38]
.text:00000000000174B8                 LDR             X8, [X19,#0x30]
.text:00000000000174BC                 LDRSW           X10, [X19,#0x28]
.text:00000000000174C0                 LDR             W11, [X19,#0x58]
.text:00000000000174C4                 SUB             X9, X9, X20
.text:00000000000174C8                 ADD             X8, X8, X20
.text:00000000000174CC                 SUB             X20, X10, X9
.text:00000000000174D0                 CMP             W11, W20
.text:00000000000174D4                 STR             W9, [X19,#0x38]
.text:00000000000174D8                 STR             X8, [X19,#0x30]
.text:00000000000174DC                 B.LT            loc_17484
.text:00000000000174E0                 LDR             X0, [X19,#0x50] ; dest
.text:00000000000174E4                 MOV             X2, X20 ; n
.text:00000000000174E8                 LDR             X1, [X19,#0x20] ; src
.text:00000000000174EC                 BL              .memcpy
.text:00000000000174F0                 LDR             X8, [X19,#0x50]
.text:00000000000174F4                 MOV             W0, WZR
.text:00000000000174F8                 LDR             W9, [X19,#0x58]
.text:00000000000174FC                 LDR             W10, [X19,#0x1A68]
.text:0000000000017500                 LDR             X11, [X19,#0x20]
.text:0000000000017504                 LDR             W12, [X19,#0x28]
.text:0000000000017508                 ADD             X8, X8, X20
.text:000000000001750C                 SUB             W9, W9, W20
.text:0000000000017510                 ADD             W10, W10, W20
.text:0000000000017514                 STR             X8, [X19,#0x50]
.text:0000000000017518                 STR             W9, [X19,#0x58]
.text:000000000001751C                 STR             W10, [X19,#0x1A68]
.text:0000000000017520                 STR             X11, [X19,#0x30]
.text:0000000000017524                 STR             W12, [X19,#0x38]
.text:0000000000017528 loc_17528                               ; CODE XREF: sheifm_put_metadata+58↑j
.text:0000000000017528                                         ; sheifm_put_metadata+78↑j ...
.text:0000000000017528                 LDR             X8, [X22,#0x28]
.text:000000000001752C                 LDR             X9, [SP,#0x40+var_28]
.text:0000000000017530                 CMP             X8, X9
.text:0000000000017534                 B.NE            loc_1754C
.text:0000000000017538                 LDP             X29, X30, [SP,#0x40+var_s0]
.text:000000000001753C                 LDP             X20, X19, [SP,#0x40+var_10]
.text:0000000000017540                 LDP             X22, X21, [SP,#0x40+var_20]
.text:0000000000017544                 ADD             SP, SP, #0x50 ; 'P'
.text:0000000000017548                 RET
.text:000000000001754C ; ---------------------------------------------------------------------------
.text:000000000001754C loc_1754C                               ; CODE XREF: sheifm_put_metadata+16C↑j
.text:000000000001754C                 BL              .__stack_chk_fail
.text:000000000001754C ; } // starts at 173C8
.text:000000000001754C ; End of function sheifm_put_metadata
.text:0000000000017550 ; =============== S U B R O U T I N E =======================================
.text:0000000000017550 ; Attributes: bp-based frame
.text:0000000000017550                 EXPORT sheifm_stop_muxing
.text:0000000000017550 sheifm_stop_muxing                      ; CODE XREF: .sheifm_stop_muxing+C↓j
.text:0000000000017550                                         ; DATA XREF: LOAD:0000000000001C50↑o ...
.text:0000000000017550 var_4C0         = -0x4C0
.text:0000000000017550 var_4B8         = -0x4B8
.text:0000000000017550 var_4B0         = -0x4B0
.text:0000000000017550 var_4A8         = -0x4A8
.text:0000000000017550 var_49C         = -0x49C
.text:0000000000017550 var_498         = -0x498
.text:0000000000017550 var_490         = -0x490
.text:0000000000017550 var_48D         = -0x48D
.text:0000000000017550 var_48C         = -0x48C
.text:0000000000017550 var_488         = -0x488
.text:0000000000017550 s               = -0x480
.text:0000000000017550 var_478         = -0x478
.text:0000000000017550 var_476         = -0x476
.text:0000000000017550 var_474         = -0x474
.text:0000000000017550 var_60          = -0x60
.text:0000000000017550 var_50          = -0x50
.text:0000000000017550 var_40          = -0x40
.text:0000000000017550 var_30          = -0x30
.text:0000000000017550 var_20          = -0x20
.text:0000000000017550 var_10          = -0x10
.text:0000000000017550 var_s0          =  0
.text:0000000000017550 ; __unwind {
.text:0000000000017550                 STR             D8, [SP,#-0x10+var_60]!
.text:0000000000017554                 STP             X28, X27, [SP,#0x60+var_50]
.text:0000000000017558                 STP             X26, X25, [SP,#0x60+var_40]
.text:000000000001755C                 STP             X24, X23, [SP,#0x60+var_30]
.text:0000000000017560                 STP             X22, X21, [SP,#0x60+var_20]
.text:0000000000017564                 STP             X20, X19, [SP,#0x60+var_10]
.text:0000000000017568                 STP             X29, X30, [SP,#0x60+var_s0]
.text:000000000001756C                 ADD             X29, SP, #0x60
.text:0000000000017570                 SUB             SP, SP, #0x460
.text:0000000000017574                 MRS             X21, #3, c13, c0, #2
.text:0000000000017578                 ADD             X22, SP, #0x4C0+var_4A8
.text:000000000001757C                 LDR             X8, [X21,#0x28]
.text:0000000000017580                 STR             X8, [X22]
.text:0000000000017584                 STR             WZR, [SP,#0x4C0+var_49C]
.text:0000000000017588                 CBZ             X0, loc_1771C
.text:000000000001758C                 LDR             W8, [X0]
.text:0000000000017590                 MOV             X19, X0
.text:0000000000017594                 MOV             W9, #0x4845494D
.text:000000000001759C                 CMP             W8, W9
.text:00000000000175A0                 B.NE            loc_1771C
.text:00000000000175A4                 LDR             W8, [X19,#0x68]
.text:00000000000175A8                 CMP             W8, #1
.text:00000000000175AC                 B.LT            loc_17754
.text:00000000000175B0                 ADD             X8, SP, #0x4C0+var_498
.text:00000000000175B4                 STR             X21, [SP,#0x4C0+var_4C0]
.text:00000000000175B8                 ORR             X20, X8, #4
.text:00000000000175BC                 ADD             X8, X8, #0xC
.text:00000000000175C0                 MOV             X26, XZR
.text:00000000000175C4                 ADD             X22, X19, #0x1B0
.text:00000000000175C8                 STR             X8, [SP,#0x4C0+var_4B0]
.text:00000000000175CC                 MOV             W8, #0x19A0
.text:00000000000175D0                 ADD             X21, X19, X8
.text:00000000000175D4                 ADD             X8, SP, #0x4C0+s
.text:00000000000175D8                 ADD             X9, X8, #0xA
.text:00000000000175DC                 ADD             X23, X8, #0xC
.text:00000000000175E0                 ADD             X24, X8, #8
.text:00000000000175E4                 MOV             W8, #0x19C8
.text:00000000000175E8                 STR             X9, [SP,#0x4C0+var_4B8]
.text:00000000000175EC                 ADD             X25, X19, X8
.text:00000000000175F0                 ADRP            X8, #qword_9CE8@PAGE
.text:00000000000175F4                 MOV             W28, #1
.text:00000000000175F8                 LDR             D8, [X8,#qword_9CE8@PAGEOFF]
.text:00000000000175FC loc_175FC                               ; CODE XREF: sheifm_stop_muxing+1B8↓j
.text:00000000000175FC                 LDUR            W3, [X22,#-0x10]
.text:0000000000017600                 MOV             W8, #0x66697845
.text:0000000000017608                 CBZ             W3, loc_1761C
.text:000000000001760C                 MOV             W8, #0x656D696D
.text:0000000000017614                 CMP             W3, #1
.text:0000000000017618                 B.NE            loc_17794
.text:000000000001761C loc_1761C                               ; CODE XREF: sheifm_stop_muxing+B8↑j
.text:000000000001761C                 LDRH            W9, [X19,#0x64]
.text:0000000000017620                 MOV             W10, #0x656D696D
.text:0000000000017628                 STP             XZR, XZR, [X20]
.text:000000000001762C                 CMP             W8, W10
.text:0000000000017630                 STR             WZR, [X20,#0x10]
.text:0000000000017634                 STR             W8, [SP,#0x4C0+var_488]
.text:0000000000017638                 MOV             W10, #0x15
.text:000000000001763C                 ADD             W8, W9, #1
.text:0000000000017640                 LDR             X0, [SP,#0x4C0+var_4B0]
.text:0000000000017644                 CINC            W27, W10, EQ
.text:0000000000017648                 STRB            W28, [SP,#0x4C0+var_48D]
.text:000000000001764C                 MOV             W9, #2
.text:0000000000017650                 STRH            W8, [SP,#0x4C0+var_48C]
.text:0000000000017654                 MOV             W8, #0x65666E69
.text:000000000001765C                 STRB            W9, [SP,#0x4C0+var_490]
.text:0000000000017660                 STP             W27, W8, [SP,#0x4C0+var_498]
.text:0000000000017664                 BL              .sheif_conv_u16
.text:0000000000017668                 ADD             X0, SP, #0x4C0+var_498
.text:000000000001766C                 BL              .sheif_conv_u32
.text:0000000000017670                 ADD             X1, SP, #0x4C0+var_498
.text:0000000000017674                 MOV             X0, X21
.text:0000000000017678                 MOV             W2, W27
.text:000000000001767C                 BL              .sheif_mblk_elem_add_with_size
.text:0000000000017680                 CBNZ            W0, loc_177B0
.text:0000000000017684                 LDR             W8, [X19,#0x64]
.text:0000000000017688                 ADD             X0, SP, #0x4C0+s ; s
.text:000000000001768C                 MOV             W1, WZR ; c
.text:0000000000017690                 MOV             W2, #0x40C ; n
.text:0000000000017694                 ADD             W27, W8, #1
.text:0000000000017698                 STR             W27, [X19,#0x64]
.text:000000000001769C                 BL              .memset
.text:00000000000176A0                 STRH            W28, [SP,#0x4C0+var_476]
.text:00000000000176A4                 STR             D8, [SP,#0x4C0+s]
.text:00000000000176A8                 LDUR            W8, [X22,#-0xC]
.text:00000000000176AC                 LDR             X0, [SP,#0x4C0+var_4B8]
.text:00000000000176B0                 STRH            W27, [SP,#0x4C0+var_478]
.text:00000000000176B4                 STRH            W8, [SP,#0x4C0+var_474]
.text:00000000000176B8                 BL              .sheif_conv_u16
.text:00000000000176BC                 ADD             X0, SP, #0x4C0+s
.text:00000000000176C0                 BL              .sheif_conv_u32
.text:00000000000176C4                 MOV             X0, X24
.text:00000000000176C8                 BL              .sheif_conv_u16
.text:00000000000176CC                 MOV             X0, X23
.text:00000000000176D0                 BL              .sheif_conv_u16
.text:00000000000176D4                 ADD             X1, SP, #0x4C0+s
.text:00000000000176D8                 MOV             X0, X25
.text:00000000000176DC                 MOV             W2, #0xE
.text:00000000000176E0                 BL              .sheif_mblk_elem_add_with_size
.text:00000000000176E4                 CBNZ            W0, loc_177C8
.text:00000000000176E8                 LDR             W1, [X19,#0x64]
.text:00000000000176EC                 MOV             X0, X19
.text:00000000000176F0                 LDUR            X2, [X22,#-8]
.text:00000000000176F4                 LDR             W3, [X22],#0x18
.text:00000000000176F8                 BL              .sheifm_put_metadata
.text:00000000000176FC                 LDRSW           X8, [X19,#0x68]
.text:0000000000017700                 ADD             X26, X26, #1
.text:0000000000017704                 CMP             X26, X8
.text:0000000000017708                 B.LT            loc_175FC
.text:000000000001770C                 LDR             W8, [SP,#0x4C0+var_49C]
.text:0000000000017710                 ADD             X22, SP, #0x4C0+var_4A8
.text:0000000000017714                 LDR             X21, [SP,#0x4C0+var_4C0]
.text:0000000000017718                 B               loc_17758
.text:000000000001771C ; ---------------------------------------------------------------------------
.text:000000000001771C loc_1771C                               ; CODE XREF: sheifm_stop_muxing+38↑j
.text:000000000001771C                                         ; sheifm_stop_muxing+50↑j
.text:000000000001771C                 MOV             W0, #0xFFFFFFFF
.text:0000000000017720 loc_17720                               ; CODE XREF: sheifm_stop_muxing+240↓j
.text:0000000000017720                                         ; sheifm_stop_muxing+29C↓j
.text:0000000000017720                 LDR             X8, [X21,#0x28]
.text:0000000000017724                 LDR             X9, [X22]
.text:0000000000017728                 CMP             X8, X9
.text:000000000001772C                 B.NE            loc_177F0
.text:0000000000017730                 ADD             SP, SP, #0x460
.text:0000000000017734                 LDP             X29, X30, [SP,#0x60+var_s0]
.text:0000000000017738                 LDP             X20, X19, [SP,#0x60+var_10]
.text:000000000001773C                 LDP             X22, X21, [SP,#0x60+var_20]
.text:0000000000017740                 LDP             X24, X23, [SP,#0x60+var_30]
.text:0000000000017744                 LDP             X26, X25, [SP,#0x60+var_40]
.text:0000000000017748                 LDP             X28, X27, [SP,#0x60+var_50]
.text:000000000001774C                 LDR             D8, [SP+0x60+var_60],#0x70
.text:0000000000017750                 RET
.text:0000000000017754 ; ---------------------------------------------------------------------------
.text:0000000000017754 loc_17754                               ; CODE XREF: sheifm_stop_muxing+5C↑j
.text:0000000000017754                 MOV             W8, WZR
.text:0000000000017758 loc_17758                               ; CODE XREF: sheifm_stop_muxing+1C8↑j
.text:0000000000017758                 LDR             W9, [X19,#0x1A68]
.text:000000000001775C                 ADD             X0, X19, #0x10
.text:0000000000017760                 MOV             X1, X19
.text:0000000000017764                 ADD             W20, W8, W9
.text:0000000000017768                 BL              .sheifm_atom_meta
.text:000000000001776C                 ADD             W8, W20, #8
.text:0000000000017770                 ADD             X0, SP, #0x4C0+var_49C
.text:0000000000017774                 STR             W8, [SP,#0x4C0+var_49C]
.text:0000000000017778                 BL              .sheif_conv_u32
.text:000000000001777C                 LDR             X8, [X19,#0x40]
.text:0000000000017780                 MOV             W0, WZR
.text:0000000000017784                 LDRSW           X9, [X19,#0x5C]
.text:0000000000017788                 LDR             W10, [SP,#0x4C0+var_49C]
.text:000000000001778C                 STR             W10, [X8,X9]
.text:0000000000017790                 B               loc_17720
.text:0000000000017794 ; ---------------------------------------------------------------------------
.text:0000000000017794 loc_17794                               ; CODE XREF: sheifm_stop_muxing+C8↑j
.text:0000000000017794                 ADRP            X1, #aSheifm@PAGE ; "sheifm"
.text:0000000000017798                 ADRP            X2, #aUnsupportedIte@PAGE ; "unsupported item type : %d"
.text:000000000001779C                 ADD             X1, X1, #aSheifm@PAGEOFF ; "sheifm"
.text:00000000000177A0                 ADD             X2, X2, #aUnsupportedIte@PAGEOFF ; "unsupported item type : %d"
.text:00000000000177A4                 MOV             W0, #5
.text:00000000000177A8                 BL              .__android_log_print
.text:00000000000177AC                 B               loc_177C8
.text:00000000000177B0 ; ---------------------------------------------------------------------------
.text:00000000000177B0 loc_177B0                               ; CODE XREF: sheifm_stop_muxing+130↑j
.text:00000000000177B0                 ADRP            X1, #aSheifm@PAGE ; "sheifm"
.text:00000000000177B4                 ADRP            X2, #aFailedToSheifm@PAGE ; "failed to sheifm_add_element_infe!"
.text:00000000000177B8                 ADD             X1, X1, #aSheifm@PAGEOFF ; "sheifm"
.text:00000000000177BC                 MOV             W0, #5
.text:00000000000177C0                 ADD             X2, X2, #aFailedToSheifm@PAGEOFF ; "failed to sheifm_add_element_infe!"
.text:00000000000177C4                 BL              .__android_log_print
.text:00000000000177C8 loc_177C8                               ; CODE XREF: sheifm_stop_muxing+194↑j
.text:00000000000177C8                                         ; sheifm_stop_muxing+25C↑j
.text:00000000000177C8                 ADRP            X1, #aSheifm@PAGE ; "sheifm"
.text:00000000000177CC                 ADRP            X2, #aFailedToStopPr@PAGE ; "failed to stop properly!"
.text:00000000000177D0                 ADD             X1, X1, #aSheifm@PAGEOFF ; "sheifm"
.text:00000000000177D4                 ADD             X2, X2, #aFailedToStopPr@PAGEOFF ; "failed to stop properly!"
.text:00000000000177D8                 MOV             W0, #6
.text:00000000000177DC                 BL              .__android_log_print
.text:00000000000177E0                 LDR             X21, [SP,#0x4C0+var_4C0]
.text:00000000000177E4                 MOV             W0, #0xFFFFFFFD
.text:00000000000177E8                 ADD             X22, SP, #0x4C0+var_4A8
.text:00000000000177EC                 B               loc_17720
.text:00000000000177F0 ; ---------------------------------------------------------------------------
.text:00000000000177F0 loc_177F0                               ; CODE XREF: sheifm_stop_muxing+1DC↑j
.text:00000000000177F0                 BL              .__stack_chk_fail
.text:00000000000177F0 ; } // starts at 17550
.text:00000000000177F0 ; End of function sheifm_stop_muxing
.text:00000000000177F0 ; ---------------------------------------------------------------------------
.text:00000000000177F4                 ALIGN 8
.text:00000000000177F8 ; =============== S U B R O U T I N E =======================================
.text:00000000000177F8 ; Attributes: bp-based frame
.text:00000000000177F8                 EXPORT sheifm_dump_image_to_file
.text:00000000000177F8 sheifm_dump_image_to_file               ; DATA XREF: LOAD:0000000000001EC0↑o
.text:00000000000177F8 var_20          = -0x20
.text:00000000000177F8 var_10          = -0x10
.text:00000000000177F8 var_s0          =  0
.text:00000000000177F8 ; __unwind {
.text:00000000000177F8                 STP             X22, X21, [SP,#-0x10+var_20]!
.text:00000000000177FC                 STP             X20, X19, [SP,#0x20+var_10]
.text:0000000000017800                 STP             X29, X30, [SP,#0x20+var_s0]
.text:0000000000017804                 ADD             X29, SP, #0x20
.text:0000000000017808                 CBZ             X0, loc_17878
.text:000000000001780C                 LDR             W8, [X0]
.text:0000000000017810                 MOV             X19, X0
.text:0000000000017814                 MOV             W9, #0x4845494D
.text:000000000001781C                 CMP             W8, W9
.text:0000000000017820                 B.NE            loc_17878
.text:0000000000017824                 MOV             X20, X1
.text:0000000000017828                 CBZ             X1, loc_17880
.text:000000000001782C                 LDR             X8, [X20]
.text:0000000000017830                 MOV             X0, X20
.text:0000000000017834                 MOV             W1, #1
.text:0000000000017838                 BLR             X8
.text:000000000001783C                 CBZ             X0, loc_17880
.text:0000000000017840                 LDR             X8, [X19,#0x50]
.text:0000000000017844                 MOV             X21, X0
.text:0000000000017848                 LDR             X1, [X19,#0x40]
.text:000000000001784C                 LDR             X9, [X20,#0x18]
.text:0000000000017850                 SUB             X22, X8, X1
.text:0000000000017854                 MOV             W2, W22
.text:0000000000017858                 BLR             X9
.text:000000000001785C                 CMP             X22, W0,SXTW
.text:0000000000017860                 B.NE            loc_17880
.text:0000000000017864                 LDR             X8, [X20,#8]
.text:0000000000017868                 MOV             X0, X21
.text:000000000001786C                 BLR             X8
.text:0000000000017870                 MOV             W0, WZR
.text:0000000000017874                 B               loc_178B0
.text:0000000000017878 ; ---------------------------------------------------------------------------
.text:0000000000017878 loc_17878                               ; CODE XREF: sheifm_dump_image_to_file+10↑j
.text:0000000000017878                                         ; sheifm_dump_image_to_file+28↑j
.text:0000000000017878                 MOV             W0, #0xFFFFFFFF
.text:000000000001787C                 B               loc_178B0
.text:0000000000017880 ; ---------------------------------------------------------------------------
.text:0000000000017880 loc_17880                               ; CODE XREF: sheifm_dump_image_to_file+30↑j
.text:0000000000017880                                         ; sheifm_dump_image_to_file+44↑j ...
.text:0000000000017880                 LDR             X0, [X19,#0x1AE8]
.text:0000000000017884                 CBZ             X0, loc_17894
.text:0000000000017888                 LDR             X8, [X19,#0x1A78]
.text:000000000001788C                 BLR             X8
.text:0000000000017890                 STR             XZR, [X19,#0x1AE8]
.text:0000000000017894 loc_17894                               ; CODE XREF: sheifm_dump_image_to_file+8C↑j
.text:0000000000017894                 ADRP            X1, #aSheifm@PAGE ; "sheifm"
.text:0000000000017898                 ADRP            X2, #aFailedToWriteF@PAGE ; "failed to write file properly!"
.text:000000000001789C                 ADD             X1, X1, #aSheifm@PAGEOFF ; "sheifm"
.text:00000000000178A0                 ADD             X2, X2, #aFailedToWriteF@PAGEOFF ; "failed to write file properly!"
.text:00000000000178A4                 MOV             W0, #6
.text:00000000000178A8                 BL              .__android_log_print
.text:00000000000178AC                 MOV             W0, #0xFFFFFFFA
.text:00000000000178B0 loc_178B0                               ; CODE XREF: sheifm_dump_image_to_file+7C↑j
.text:00000000000178B0                                         ; sheifm_dump_image_to_file+84↑j
.text:00000000000178B0                 LDP             X29, X30, [SP,#0x20+var_s0]
.text:00000000000178B4                 LDP             X20, X19, [SP,#0x20+var_10]
.text:00000000000178B8                 LDP             X22, X21, [SP+0x20+var_20],#0x30
.text:00000000000178BC                 RET
.text:00000000000178BC ; } // starts at 177F8
.text:00000000000178BC ; End of function sheifm_dump_image_to_file
.text:00000000000178C0 ; =============== S U B R O U T I N E =======================================
.text:00000000000178C0                 EXPORT sheifm_dump_image_to_outputbuffer
.text:00000000000178C0 sheifm_dump_image_to_outputbuffer       ; CODE XREF: .sheifm_dump_image_to_outputbuffer+C↓j
.text:00000000000178C0                                         ; DATA XREF: LOAD:0000000000002028↑o ...
.text:00000000000178C0 var_10          = -0x10
.text:00000000000178C0 ; __unwind {
.text:00000000000178C0                 CBZ             X0, loc_17904
.text:00000000000178C4                 LDR             W8, [X0]
.text:00000000000178C8                 MOV             W9, #0x4845494D
.text:00000000000178D0                 CMP             W8, W9
.text:00000000000178D4                 B.NE            loc_1790C
.text:00000000000178D8                 STP             X29, X30, [SP,#var_10]!
.text:00000000000178DC                 MOV             X29, SP
.text:00000000000178E0                 LDR             X8, [X0,#0x40]
.text:00000000000178E4                 LDR             X9, [X0,#0x50]
.text:00000000000178E8                 MOV             X0, X1  ; dest
.text:00000000000178EC                 MOV             X1, X8  ; src
.text:00000000000178F0                 SUB             X2, X9, X8 ; n
.text:00000000000178F4                 BL              .memcpy
.text:00000000000178F8                 MOV             W0, WZR
.text:00000000000178FC                 LDP             X29, X30, [SP+0x10+var_10],#0x10
.text:0000000000017900                 RET
.text:0000000000017904 ; ---------------------------------------------------------------------------
.text:0000000000017904 loc_17904                               ; CODE XREF: sheifm_dump_image_to_outputbuffer↑j
.text:0000000000017904                 MOV             W0, #0xFFFFFFFF
.text:0000000000017908                 RET
.text:000000000001790C ; ---------------------------------------------------------------------------
.text:000000000001790C loc_1790C                               ; CODE XREF: sheifm_dump_image_to_outputbuffer+14↑j
.text:000000000001790C                 MOV             W0, #0xFFFFFFFF
.text:0000000000017910                 RET
.text:0000000000017910 ; } // starts at 178C0
.text:0000000000017910 ; End of function sheifm_dump_image_to_outputbuffer
.text:0000000000017910 ; ---------------------------------------------------------------------------
.text:0000000000017914                 ALIGN 8
.text:0000000000017918 ; =============== S U B R O U T I N E =======================================
.text:0000000000017918                 EXPORT sheifm_get_outputbuffer_size
.text:0000000000017918 sheifm_get_outputbuffer_size            ; CODE XREF: .sheifm_get_outputbuffer_size+C↓j
.text:0000000000017918                                         ; DATA XREF: LOAD:0000000000001D70↑o ...
.text:0000000000017918 ; __unwind {
.text:0000000000017918                 CBZ             X0, loc_17940
.text:000000000001791C                 LDR             W8, [X0]
.text:0000000000017920                 MOV             W9, #0x4845494D
.text:0000000000017928                 CMP             W8, W9
.text:000000000001792C                 B.NE            loc_17948
.text:0000000000017930                 LDR             W8, [X0,#0x50]
.text:0000000000017934                 LDR             W9, [X0,#0x40]
.text:0000000000017938                 SUB             W0, W8, W9
.text:000000000001793C                 RET
.text:0000000000017940 ; ---------------------------------------------------------------------------
.text:0000000000017940 loc_17940                               ; CODE XREF: sheifm_get_outputbuffer_size↑j
.text:0000000000017940                 MOV             W0, #0xFFFFFFFF
.text:0000000000017944                 RET
.text:0000000000017948 ; ---------------------------------------------------------------------------
.text:0000000000017948 loc_17948                               ; CODE XREF: sheifm_get_outputbuffer_size+14↑j
.text:0000000000017948                 MOV             W0, #0xFFFFFFFF
.text:000000000001794C                 RET
.text:000000000001794C ; } // starts at 17918
.text:000000000001794C ; End of function sheifm_get_outputbuffer_size
.text:0000000000017950 ; =============== S U B R O U T I N E =======================================
.text:0000000000017950 ; Attributes: bp-based frame
.text:0000000000017950                 EXPORT sheifm_delete
.text:0000000000017950 sheifm_delete                           ; CODE XREF: .sheifm_delete+C↓j
.text:0000000000017950                                         ; DATA XREF: LOAD:0000000000000DC8↑o ...
.text:0000000000017950 var_20          = -0x20
.text:0000000000017950 var_10          = -0x10
.text:0000000000017950 var_s0          =  0
.text:0000000000017950 ; __unwind {
.text:0000000000017950                 STP             X22, X21, [SP,#-0x10+var_20]!
.text:0000000000017954                 STP             X20, X19, [SP,#0x20+var_10]
.text:0000000000017958                 STP             X29, X30, [SP,#0x20+var_s0]
.text:000000000001795C                 ADD             X29, SP, #0x20
.text:0000000000017960                 CBZ             X0, loc_17A38
.text:0000000000017964                 LDR             W8, [X0]
.text:0000000000017968                 MOV             X19, X0
.text:000000000001796C                 MOV             W9, #0x4845494D
.text:0000000000017974                 CMP             W8, W9
.text:0000000000017978                 B.NE            loc_17A38
.text:000000000001797C                 MOV             W8, #0x19C8
.text:0000000000017980                 ADD             X0, X19, X8
.text:0000000000017984                 BL              .sheif_mblk_dtor
.text:0000000000017988                 MOV             W8, #0x19F0
.text:000000000001798C                 ADD             X0, X19, X8
.text:0000000000017990                 BL              .sheif_mblk_dtor
.text:0000000000017994                 MOV             W8, #0x1A40
.text:0000000000017998                 ADD             X0, X19, X8
.text:000000000001799C                 BL              .sheif_mblk_dtor
.text:00000000000179A0                 MOV             W8, #0x19A0
.text:00000000000179A4                 ADD             X0, X19, X8
.text:00000000000179A8                 BL              .sheif_mblk_dtor
.text:00000000000179AC                 MOV             W8, #0x1A18
.text:00000000000179B0                 ADD             X0, X19, X8
.text:00000000000179B4                 BL              .sheif_mblk_dtor
.text:00000000000179B8                 LDR             X0, [X19,#0x20] ; ptr
.text:00000000000179BC                 CBZ             X0, loc_179C8
.text:00000000000179C0                 BL              .free
.text:00000000000179C4                 STR             XZR, [X19,#0x20]
.text:00000000000179C8 loc_179C8                               ; CODE XREF: sheifm_delete+6C↑j
.text:00000000000179C8                 LDR             X0, [X19,#0x40] ; ptr
.text:00000000000179CC                 ADD             X20, X19, #0x10
.text:00000000000179D0                 CBZ             X0, loc_179DC
.text:00000000000179D4                 BL              .free
.text:00000000000179D8                 STR             XZR, [X19,#0x40]
.text:00000000000179DC loc_179DC                               ; CODE XREF: sheifm_delete+80↑j
.text:00000000000179DC                 LDR             W8, [X19,#0x68]
.text:00000000000179E0                 CMP             W8, #1
.text:00000000000179E4                 B.LT            loc_17A14
.text:00000000000179E8                 MOV             X21, XZR
.text:00000000000179EC                 ADD             X22, X19, #0x1A8
.text:00000000000179F0 loc_179F0                               ; CODE XREF: sheifm_delete+C0↓j
.text:00000000000179F0                 LDR             X0, [X22] ; ptr
.text:00000000000179F4                 CBZ             X0, loc_17A04
.text:00000000000179F8                 BL              .free
.text:00000000000179FC                 STR             XZR, [X22]
.text:0000000000017A00                 LDR             W8, [X19,#0x68]
.text:0000000000017A04 loc_17A04                               ; CODE XREF: sheifm_delete+A4↑j
.text:0000000000017A04                 ADD             X21, X21, #1
.text:0000000000017A08                 ADD             X22, X22, #0x18
.text:0000000000017A0C                 CMP             X21, W8,SXTW
.text:0000000000017A10                 B.LT            loc_179F0
.text:0000000000017A14 loc_17A14                               ; CODE XREF: sheifm_delete+94↑j
.text:0000000000017A14                 MOV             W2, #0x1A60 ; n
.text:0000000000017A18                 MOV             X0, X20 ; s
.text:0000000000017A1C                 MOV             W1, WZR ; c
.text:0000000000017A20                 BL              .memset
.text:0000000000017A24                 MOV             X0, X19 ; ptr
.text:0000000000017A28                 LDP             X29, X30, [SP,#0x20+var_s0]
.text:0000000000017A2C                 LDP             X20, X19, [SP,#0x20+var_10]
.text:0000000000017A30                 LDP             X22, X21, [SP+0x20+var_20],#0x30
.text:0000000000017A34                 B               .free
.text:0000000000017A38 ; ---------------------------------------------------------------------------
.text:0000000000017A38 loc_17A38                               ; CODE XREF: sheifm_delete+10↑j
.text:0000000000017A38                                         ; sheifm_delete+28↑j
.text:0000000000017A38                 LDP             X29, X30, [SP,#0x20+var_s0]
.text:0000000000017A3C                 LDP             X20, X19, [SP,#0x20+var_10]
.text:0000000000017A40                 LDP             X22, X21, [SP+0x20+var_20],#0x30
.text:0000000000017A44                 RET
.text:0000000000017A44 ; } // starts at 17950
.text:0000000000017A44 ; End of function sheifm_delete
.text:0000000000017A48 ; =============== S U B R O U T I N E =======================================
.text:0000000000017A48                 EXPORT sheif_conv_u16
.text:0000000000017A48 sheif_conv_u16                          ; CODE XREF: .sheif_conv_u16+C↓j
.text:0000000000017A48                                         ; DATA XREF: LOAD:0000000000002070↑o ...
.text:0000000000017A48 ; __unwind {
.text:0000000000017A48                 LDRB            W8, [X0,#1]
.text:0000000000017A4C                 LDRB            W9, [X0]
.text:0000000000017A50                 STRB            W8, [X0]
.text:0000000000017A54                 STRB            W9, [X0,#1]
.text:0000000000017A58                 RET
.text:0000000000017A58 ; } // starts at 17A48
.text:0000000000017A58 ; End of function sheif_conv_u16
.text:0000000000017A58 ; ---------------------------------------------------------------------------
.text:0000000000017A5C                 ALIGN 0x20
.text:0000000000017A60 ; =============== S U B R O U T I N E =======================================
.text:0000000000017A60                 EXPORT sheif_conv_u32
.text:0000000000017A60 sheif_conv_u32                          ; CODE XREF: .sheif_conv_u32+C↓j
.text:0000000000017A60                                         ; DATA XREF: LOAD:00000000000011E8↑o ...
.text:0000000000017A60 ; __unwind {
.text:0000000000017A60                 LDRB            W8, [X0,#3]
.text:0000000000017A64                 LDRB            W9, [X0]
.text:0000000000017A68                 LDRB            W10, [X0,#2]
.text:0000000000017A6C                 LDRB            W11, [X0,#1]
.text:0000000000017A70                 STRB            W8, [X0]
.text:0000000000017A74                 STRB            W9, [X0,#3]
.text:0000000000017A78                 STRB            W10, [X0,#1]
.text:0000000000017A7C                 STRB            W11, [X0,#2]
.text:0000000000017A80                 RET
.text:0000000000017A80 ; } // starts at 17A60
.text:0000000000017A80 ; End of function sheif_conv_u32
.text:0000000000017A80 ; ---------------------------------------------------------------------------
.text:0000000000017A84                 ALIGN 8
.text:0000000000017A88 ; =============== S U B R O U T I N E =======================================
.text:0000000000017A88                 EXPORT sheif_conv_u32_with_i
.text:0000000000017A88 sheif_conv_u32_with_i                   ; DATA XREF: LOAD:0000000000001230↑o
.text:0000000000017A88 ; __unwind {
.text:0000000000017A88                 CMP             W1, #4
.text:0000000000017A8C                 B.EQ            loc_17AB4
.text:0000000000017A90                 CMP             W1, #3
.text:0000000000017A94                 B.EQ            loc_17AD8
.text:0000000000017A98                 CMP             W1, #2
.text:0000000000017A9C                 B.NE            locret_17AD4
.text:0000000000017AA0                 LDRB            W8, [X0,#1]
.text:0000000000017AA4                 LDRB            W9, [X0]
.text:0000000000017AA8                 STRB            W8, [X0]
.text:0000000000017AAC                 STRB            W9, [X0,#1]
.text:0000000000017AB0                 RET
.text:0000000000017AB4 ; ---------------------------------------------------------------------------
.text:0000000000017AB4 loc_17AB4                               ; CODE XREF: sheif_conv_u32_with_i+4↑j
.text:0000000000017AB4                 LDRB            W8, [X0,#3]
.text:0000000000017AB8                 LDRB            W9, [X0]
.text:0000000000017ABC                 LDRB            W10, [X0,#2]
.text:0000000000017AC0                 LDRB            W11, [X0,#1]
.text:0000000000017AC4                 STRB            W8, [X0]
.text:0000000000017AC8                 STRB            W9, [X0,#3]
.text:0000000000017ACC                 STRB            W10, [X0,#1]
.text:0000000000017AD0                 STRB            W11, [X0,#2]
.text:0000000000017AD4 locret_17AD4                            ; CODE XREF: sheif_conv_u32_with_i+14↑j
.text:0000000000017AD4                 RET
.text:0000000000017AD8 ; ---------------------------------------------------------------------------
.text:0000000000017AD8 loc_17AD8                               ; CODE XREF: sheif_conv_u32_with_i+C↑j
.text:0000000000017AD8                 LDRB            W8, [X0,#2]
.text:0000000000017ADC                 STRB            W8, [X0,#1]
.text:0000000000017AE0                 RET
.text:0000000000017AE0 ; } // starts at 17A88
.text:0000000000017AE0 ; End of function sheif_conv_u32_with_i
.text:0000000000017AE0 ; ---------------------------------------------------------------------------
.text:0000000000017AE4                 ALIGN 8
.text:0000000000017AE8 ; =============== S U B R O U T I N E =======================================
.text:0000000000017AE8                 EXPORT sheif_conv_u64
.text:0000000000017AE8 sheif_conv_u64                          ; CODE XREF: .sheif_conv_u64+C↓j
.text:0000000000017AE8                                         ; DATA XREF: LOAD:00000000000011B8↑o ...
.text:0000000000017AE8 ; __unwind {
.text:0000000000017AE8                 LDRB            W8, [X0,#7]
.text:0000000000017AEC                 LDRB            W9, [X0]
.text:0000000000017AF0                 LDRB            W10, [X0,#6]
.text:0000000000017AF4                 LDRB            W11, [X0,#1]
.text:0000000000017AF8                 STRB            W8, [X0]
.text:0000000000017AFC                 STRB            W9, [X0,#7]
.text:0000000000017B00                 STRB            W10, [X0,#1]
.text:0000000000017B04                 STRB            W11, [X0,#6]
.text:0000000000017B08                 LDRB            W8, [X0,#5]
.text:0000000000017B0C                 LDRB            W9, [X0,#2]
.text:0000000000017B10                 LDRB            W10, [X0,#4]
.text:0000000000017B14                 LDRB            W11, [X0,#3]
.text:0000000000017B18                 STRB            W8, [X0,#2]
.text:0000000000017B1C                 STRB            W9, [X0,#5]
.text:0000000000017B20                 STRB            W10, [X0,#3]
.text:0000000000017B24                 STRB            W11, [X0,#4]
.text:0000000000017B28                 RET
.text:0000000000017B28 ; } // starts at 17AE8
.text:0000000000017B28 ; End of function sheif_conv_u64
.text:0000000000017B28 ; ---------------------------------------------------------------------------
.text:0000000000017B2C                 ALIGN 0x10
.text:0000000000017B30 ; =============== S U B R O U T I N E =======================================
.text:0000000000017B30                 EXPORT sheif_conv_buf_u16
.text:0000000000017B30 sheif_conv_buf_u16                      ; DATA XREF: LOAD:0000000000001D40↑o
.text:0000000000017B30 ; __unwind {
.text:0000000000017B30                 CBZ             W1, locret_17BC0
.text:0000000000017B34                 ADD             X8, X0, W1,UXTW#1
.text:0000000000017B38                 ADD             X9, X0, #2
.text:0000000000017B3C                 CMP             X8, X9
.text:0000000000017B40                 MVN             X10, X0
.text:0000000000017B44                 CSEL            X9, X8, X9, HI
.text:0000000000017B48                 ADD             X9, X9, X10
.text:0000000000017B4C                 LSR             X9, X9, #1
.text:0000000000017B50                 ADD             X10, X9, #1
.text:0000000000017B54                 CMP             X10, #0x20 ; ' '
.text:0000000000017B58                 B.CS            loc_17B64
.text:0000000000017B5C                 MOV             X9, X0
.text:0000000000017B60                 B               loc_17BA4
.text:0000000000017B64 ; ---------------------------------------------------------------------------
.text:0000000000017B64 loc_17B64                               ; CODE XREF: sheif_conv_buf_u16+28↑j
.text:0000000000017B64                 AND             X11, X10, #0xFFFFFFFFFFFFFFE0
.text:0000000000017B68                 ADD             X12, X0, #0x20 ; ' '
.text:0000000000017B6C                 ADD             X9, X0, X11,LSL#1
.text:0000000000017B70                 MOV             X13, X11
.text:0000000000017B74 loc_17B74                               ; CODE XREF: sheif_conv_buf_u16+68↓j
.text:0000000000017B74                 LD2             {V0.16B-V1.16B}, [X12]
.text:0000000000017B78                 SUB             X14, X12, #0x20 ; ' '
.text:0000000000017B7C                 SUBS            X13, X13, #0x20 ; ' '
.text:0000000000017B80                 LD2             {V3.16B-V4.16B}, [X14]
.text:0000000000017B84                 MOV             V2.16B, V0.16B
.text:0000000000017B88                 MOV             V5.16B, V3.16B
.text:0000000000017B8C                 ST2             {V1.16B-V2.16B}, [X12]
.text:0000000000017B90                 ADD             X12, X12, #0x40 ; '@'
.text:0000000000017B94                 ST2             {V4.16B-V5.16B}, [X14]
.text:0000000000017B98                 B.NE            loc_17B74
.text:0000000000017B9C                 CMP             X10, X11
.text:0000000000017BA0                 B.EQ            locret_17BC0
.text:0000000000017BA4 loc_17BA4                               ; CODE XREF: sheif_conv_buf_u16+30↑j
.text:0000000000017BA4                                         ; sheif_conv_buf_u16+8C↓j
.text:0000000000017BA4                 LDRB            W10, [X9,#1]
.text:0000000000017BA8                 LDRB            W11, [X9]
.text:0000000000017BAC                 STRB            W10, [X9]
.text:0000000000017BB0                 STRB            W11, [X9,#1]
.text:0000000000017BB4                 ADD             X9, X9, #2
.text:0000000000017BB8                 CMP             X9, X8
.text:0000000000017BBC                 B.CC            loc_17BA4
.text:0000000000017BC0 locret_17BC0                            ; CODE XREF: sheif_conv_buf_u16↑j
.text:0000000000017BC0                                         ; sheif_conv_buf_u16+70↑j
.text:0000000000017BC0                 RET
.text:0000000000017BC0 ; } // starts at 17B30
.text:0000000000017BC0 ; End of function sheif_conv_buf_u16
.text:0000000000017BC0 ; ---------------------------------------------------------------------------
.text:0000000000017BC4                 ALIGN 8
.text:0000000000017BC8 ; =============== S U B R O U T I N E =======================================
.text:0000000000017BC8                 EXPORT sheif_conv_buf_u32
.text:0000000000017BC8 sheif_conv_buf_u32                      ; DATA XREF: LOAD:0000000000000E10↑o
.text:0000000000017BC8 ; __unwind {
.text:0000000000017BC8                 CBZ             W1, locret_17C80
.text:0000000000017BCC                 ADD             X8, X0, W1,UXTW#2
.text:0000000000017BD0                 ADD             X9, X0, #4
.text:0000000000017BD4                 CMP             X8, X9
.text:0000000000017BD8                 MVN             X10, X0
.text:0000000000017BDC                 CSEL            X9, X8, X9, HI
.text:0000000000017BE0                 ADD             X9, X9, X10
.text:0000000000017BE4                 LSR             X9, X9, #2
.text:0000000000017BE8                 ADD             X10, X9, #1
.text:0000000000017BEC                 CMP             X10, #0x20 ; ' '
.text:0000000000017BF0                 B.CS            loc_17BFC
.text:0000000000017BF4                 MOV             X9, X0
.text:0000000000017BF8                 B               loc_17C54
.text:0000000000017BFC ; ---------------------------------------------------------------------------
.text:0000000000017BFC loc_17BFC                               ; CODE XREF: sheif_conv_buf_u32+28↑j
.text:0000000000017BFC                 AND             X11, X10, #0x7FFFFFFFFFFFFFE0
.text:0000000000017C00                 ADD             X12, X0, #0x40 ; '@'
.text:0000000000017C04                 ADD             X9, X0, X11,LSL#2
.text:0000000000017C08                 MOV             X13, X11
.text:0000000000017C0C loc_17C0C                               ; CODE XREF: sheif_conv_buf_u32+80↓j
.text:0000000000017C0C                 LD4             {V0.16B-V3.16B}, [X12]
.text:0000000000017C10                 SUB             X14, X12, #0x40 ; '@'
.text:0000000000017C14                 SUBS            X13, X13, #0x20 ; ' '
.text:0000000000017C18                 LD4             {V4.16B-V7.16B}, [X14]
.text:0000000000017C1C                 MOV             V16.16B, V3.16B
.text:0000000000017C20                 MOV             V17.16B, V2.16B
.text:0000000000017C24                 MOV             V18.16B, V1.16B
.text:0000000000017C28                 MOV             V19.16B, V0.16B
.text:0000000000017C2C                 MOV             V20.16B, V7.16B
.text:0000000000017C30                 MOV             V21.16B, V6.16B
.text:0000000000017C34                 MOV             V22.16B, V5.16B
.text:0000000000017C38                 MOV             V23.16B, V4.16B
.text:0000000000017C3C                 ST4             {V16.16B-V19.16B}, [X12]
.text:0000000000017C40                 ADD             X12, X12, #0x80
.text:0000000000017C44                 ST4             {V20.16B-V23.16B}, [X14]
.text:0000000000017C48                 B.NE            loc_17C0C
.text:0000000000017C4C                 CMP             X10, X11
.text:0000000000017C50                 B.EQ            locret_17C80
.text:0000000000017C54 loc_17C54                               ; CODE XREF: sheif_conv_buf_u32+30↑j
.text:0000000000017C54                                         ; sheif_conv_buf_u32+B4↓j
.text:0000000000017C54                 LDRB            W10, [X9,#3]
.text:0000000000017C58                 LDRB            W11, [X9]
.text:0000000000017C5C                 LDRB            W12, [X9,#2]
.text:0000000000017C60                 LDRB            W13, [X9,#1]
.text:0000000000017C64                 STRB            W10, [X9]
.text:0000000000017C68                 STRB            W11, [X9,#3]
.text:0000000000017C6C                 STRB            W12, [X9,#1]
.text:0000000000017C70                 STRB            W13, [X9,#2]
.text:0000000000017C74                 ADD             X9, X9, #4
.text:0000000000017C78                 CMP             X9, X8
.text:0000000000017C7C                 B.CC            loc_17C54
.text:0000000000017C80 locret_17C80                            ; CODE XREF: sheif_conv_buf_u32↑j
.text:0000000000017C80                                         ; sheif_conv_buf_u32+88↑j
.text:0000000000017C80                 RET
.text:0000000000017C80 ; } // starts at 17BC8
.text:0000000000017C80 ; End of function sheif_conv_buf_u32
.text:0000000000017C80 ; ---------------------------------------------------------------------------
.text:0000000000017C84                 ALIGN 8
.text:0000000000017C88 ; =============== S U B R O U T I N E =======================================
.text:0000000000017C88                 EXPORT sheif_conv_buf_u64
.text:0000000000017C88 sheif_conv_buf_u64                      ; DATA XREF: LOAD:0000000000000D80↑o
.text:0000000000017C88 ; __unwind {
.text:0000000000017C88                 CBZ             W1, locret_17CDC
.text:0000000000017C8C                 ADD             X8, X0, W1,UXTW#3
.text:0000000000017C90 loc_17C90                               ; CODE XREF: sheif_conv_buf_u64+50↓j
.text:0000000000017C90                 LDRB            W9, [X0,#7]
.text:0000000000017C94                 LDRB            W10, [X0]
.text:0000000000017C98                 LDRB            W11, [X0,#6]
.text:0000000000017C9C                 LDRB            W12, [X0,#1]
.text:0000000000017CA0                 STRB            W9, [X0]
.text:0000000000017CA4                 STRB            W10, [X0,#7]
.text:0000000000017CA8                 STRB            W11, [X0,#1]
.text:0000000000017CAC                 STRB            W12, [X0,#6]
.text:0000000000017CB0                 LDRB            W9, [X0,#5]
.text:0000000000017CB4                 LDRB            W10, [X0,#2]
.text:0000000000017CB8                 LDRB            W11, [X0,#4]
.text:0000000000017CBC                 LDRB            W12, [X0,#3]
.text:0000000000017CC0                 STRB            W9, [X0,#2]
.text:0000000000017CC4                 STRB            W10, [X0,#5]
.text:0000000000017CC8                 STRB            W11, [X0,#3]
.text:0000000000017CCC                 STRB            W12, [X0,#4]
.text:0000000000017CD0                 ADD             X0, X0, #8
.text:0000000000017CD4                 CMP             X0, X8
.text:0000000000017CD8                 B.CC            loc_17C90
.text:0000000000017CDC locret_17CDC                            ; CODE XREF: sheif_conv_buf_u64↑j
.text:0000000000017CDC                 RET
.text:0000000000017CDC ; } // starts at 17C88
.text:0000000000017CDC ; End of function sheif_conv_buf_u64
.text:0000000000017CE0 ; =============== S U B R O U T I N E =======================================
.text:0000000000017CE0                 EXPORT sheif_conv_reverse
.text:0000000000017CE0 sheif_conv_reverse                      ; DATA XREF: LOAD:0000000000001068↑o
.text:0000000000017CE0 ; __unwind {
.text:0000000000017CE0                 CMP             W1, #2
.text:0000000000017CE4                 B.LT            locret_17D1C
.text:0000000000017CE8                 CMP             W1, #0
.text:0000000000017CEC                 SUB             W8, W1, #1
.text:0000000000017CF0                 CINC            W10, W1, LT
.text:0000000000017CF4                 MOV             X9, X0
.text:0000000000017CF8                 ASR             W10, W10, #1
.text:0000000000017CFC loc_17CFC                               ; CODE XREF: sheif_conv_reverse+38↓j
.text:0000000000017CFC                 SXTW            X11, W8
.text:0000000000017D00                 LDRB            W13, [X9]
.text:0000000000017D04                 SUB             W8, W8, #1
.text:0000000000017D08                 LDRB            W12, [X0,X11]
.text:0000000000017D0C                 SUBS            X10, X10, #1
.text:0000000000017D10                 STRB            W12, [X9],#1
.text:0000000000017D14                 STRB            W13, [X0,X11]
.text:0000000000017D18                 B.NE            loc_17CFC
.text:0000000000017D1C locret_17D1C                            ; CODE XREF: sheif_conv_reverse+4↑j
.text:0000000000017D1C                 RET
.text:0000000000017D1C ; } // starts at 17CE0
.text:0000000000017D1C ; End of function sheif_conv_reverse
.text:0000000000017D20 ; =============== S U B R O U T I N E =======================================
.text:0000000000017D20 ; Attributes: bp-based frame
.text:0000000000017D20                 EXPORT sheif_conv_int
.text:0000000000017D20 sheif_conv_int                          ; DATA XREF: LOAD:00000000000016B0↑o
.text:0000000000017D20 var_38          = -0x38
.text:0000000000017D20 var_30          = -0x30
.text:0000000000017D20 var_20          = -0x20
.text:0000000000017D20 var_10          = -0x10
.text:0000000000017D20 var_s0          =  0
.text:0000000000017D20 ; __unwind {
.text:0000000000017D20                 SUB             SP, SP, #0x50
.text:0000000000017D24                 STR             X23, [SP,#0x40+var_30]
.text:0000000000017D28                 STP             X22, X21, [SP,#0x40+var_20]
.text:0000000000017D2C                 STP             X20, X19, [SP,#0x40+var_10]
.text:0000000000017D30                 STP             X29, X30, [SP,#0x40+var_s0]
.text:0000000000017D34                 ADD             X29, SP, #0x40
.text:0000000000017D38                 MRS             X22, #3, c13, c0, #2
.text:0000000000017D3C                 MOV             W21, W1
.text:0000000000017D40                 LDR             X8, [X22,#0x28]
.text:0000000000017D44                 MOV             X19, X0
.text:0000000000017D48                 SXTW            X20, W21
.text:0000000000017D4C                 MOV             X0, SP
.text:0000000000017D50                 MOV             X1, X19
.text:0000000000017D54                 MOV             X2, X20
.text:0000000000017D58                 STR             X8, [SP,#0x40+var_38]
.text:0000000000017D5C                 MOV             W3, #8
.text:0000000000017D60                 MOV             X23, SP
.text:0000000000017D64                 BL              .__memcpy_chk
.text:0000000000017D68                 CMP             W21, #2
.text:0000000000017D6C                 B.LT            loc_17D9C
.text:0000000000017D70                 SUB             W8, W21, #1
.text:0000000000017D74                 MOV             X9, SP
.text:0000000000017D78                 LSR             W10, W21, #1
.text:0000000000017D7C loc_17D7C                               ; CODE XREF: sheif_conv_int+78↓j
.text:0000000000017D7C                 SXTW            X11, W8
.text:0000000000017D80                 LDRB            W13, [X9]
.text:0000000000017D84                 SUB             X10, X10, #1
.text:0000000000017D88                 LDRB            W12, [X23,X11]
.text:0000000000017D8C                 SUB             W8, W8, #1
.text:0000000000017D90                 STRB            W12, [X9],#1
.text:0000000000017D94                 STRB            W13, [X23,X11]
.text:0000000000017D98                 CBNZ            X10, loc_17D7C
.text:0000000000017D9C loc_17D9C                               ; CODE XREF: sheif_conv_int+4C↑j
.text:0000000000017D9C                 MOV             X1, SP  ; src
.text:0000000000017DA0                 MOV             X0, X19 ; dest
.text:0000000000017DA4                 MOV             X2, X20 ; n
.text:0000000000017DA8                 BL              .memcpy
.text:0000000000017DAC                 LDR             X8, [X22,#0x28]
.text:0000000000017DB0                 LDR             X9, [SP,#0x40+var_38]
.text:0000000000017DB4                 CMP             X8, X9
.text:0000000000017DB8                 B.NE            loc_17DD4
.text:0000000000017DBC                 LDP             X29, X30, [SP,#0x40+var_s0]
.text:0000000000017DC0                 LDP             X20, X19, [SP,#0x40+var_10]
.text:0000000000017DC4                 LDP             X22, X21, [SP,#0x40+var_20]
.text:0000000000017DC8                 LDR             X23, [SP,#0x40+var_30]
.text:0000000000017DCC                 ADD             SP, SP, #0x50 ; 'P'
.text:0000000000017DD0                 RET
.text:0000000000017DD4 ; ---------------------------------------------------------------------------
.text:0000000000017DD4 loc_17DD4                               ; CODE XREF: sheif_conv_int+98↑j
.text:0000000000017DD4                 BL              .__stack_chk_fail
.text:0000000000017DD4 ; } // starts at 17D20
.text:0000000000017DD4 ; End of function sheif_conv_int
.text:0000000000017DD8 ; =============== S U B R O U T I N E =======================================
.text:0000000000017DD8                 EXPORT sheif_mblk_ctor
.text:0000000000017DD8 sheif_mblk_ctor                         ; CODE XREF: .sheif_mblk_ctor+C↓j
.text:0000000000017DD8                                         ; DATA XREF: LOAD:0000000000001C80↑o ...
.text:0000000000017DD8 ; __unwind {
.text:0000000000017DD8                 MOVI            V0.2D, #0
.text:0000000000017DDC                 MOV             X8, X0
.text:0000000000017DE0                 MOV             W0, WZR
.text:0000000000017DE4                 STP             Q0, Q0, [X8]
.text:0000000000017DE8                 STR             XZR, [X8]
.text:0000000000017DEC                 STR             XZR, [X8,#0x10]
.text:0000000000017DF0                 STP             XZR, XZR, [X8,#0x18]
.text:0000000000017DF4                 STR             W1, [X8,#8]
.text:0000000000017DF8                 RET
.text:0000000000017DF8 ; } // starts at 17DD8
.text:0000000000017DF8 ; End of function sheif_mblk_ctor
.text:0000000000017DF8 ; ---------------------------------------------------------------------------
.text:0000000000017DFC                 ALIGN 0x20
.text:0000000000017E00 ; =============== S U B R O U T I N E =======================================
.text:0000000000017E00 ; Attributes: bp-based frame
.text:0000000000017E00                 EXPORT sheif_mblk_elem_add
.text:0000000000017E00 sheif_mblk_elem_add                     ; CODE XREF: .sheif_mblk_elem_add+C↓j
.text:0000000000017E00                                         ; DATA XREF: LOAD:0000000000000EB8↑o ...
.text:0000000000017E00 var_20          = -0x20
.text:0000000000017E00 var_10          = -0x10
.text:0000000000017E00 var_s0          =  0
.text:0000000000017E00 ; __unwind {
.text:0000000000017E00                 STP             X22, X21, [SP,#-0x10+var_20]!
.text:0000000000017E04                 STP             X20, X19, [SP,#0x20+var_10]
.text:0000000000017E08                 STP             X29, X30, [SP,#0x20+var_s0]
.text:0000000000017E0C                 ADD             X29, SP, #0x20
.text:0000000000017E10                 LDR             X22, [X0,#0x18]
.text:0000000000017E14                 MOV             X19, X0
.text:0000000000017E18                 LDRSW           X20, [X0,#8]
.text:0000000000017E1C                 MOV             X21, X1
.text:0000000000017E20                 CBZ             X22, loc_17E38
.text:0000000000017E24                 MOV             W9, #0xFE8
.text:0000000000017E28                 LDR             W8, [X22,#0x10]
.text:0000000000017E2C                 UDIV            X9, X9, X20
.text:0000000000017E30                 CMP             W8, W9
.text:0000000000017E34                 B.NE            loc_17E78
.text:0000000000017E38 loc_17E38                               ; CODE XREF: sheif_mblk_elem_add+20↑j
.text:0000000000017E38                 MOV             W0, #0x1000 ; size
.text:0000000000017E3C                 BL              .malloc
.text:0000000000017E40                 CBZ             X0, loc_17EB0
.text:0000000000017E44                 STP             X22, XZR, [X0,#8]
.text:0000000000017E48                 STR             XZR, [X0]
.text:0000000000017E4C                 CBZ             X22, loc_17E54
.text:0000000000017E50                 STR             X0, [X22]
.text:0000000000017E54 loc_17E54                               ; CODE XREF: sheif_mblk_elem_add+4C↑j
.text:0000000000017E54                 LDR             X8, [X19,#0x10]
.text:0000000000017E58                 STR             X0, [X19,#0x18]
.text:0000000000017E5C                 CBNZ            X8, loc_17E64
.text:0000000000017E60                 STR             X0, [X19,#0x10]
.text:0000000000017E64 loc_17E64                               ; CODE XREF: sheif_mblk_elem_add+5C↑j
.text:0000000000017E64                 LDR             W8, [X19]
.text:0000000000017E68                 MOV             X22, X0
.text:0000000000017E6C                 ADD             W9, W8, #1
.text:0000000000017E70                 LDR             W8, [X0,#0x10]
.text:0000000000017E74                 STR             W9, [X19]
.text:0000000000017E78 loc_17E78                               ; CODE XREF: sheif_mblk_elem_add+34↑j
.text:0000000000017E78                 SXTW            X8, W8
.text:0000000000017E7C                 MADD            X8, X8, X20, X22
.text:0000000000017E80                 MOV             X1, X21 ; src
.text:0000000000017E84                 MOV             X2, X20 ; n
.text:0000000000017E88                 ADD             X0, X8, #0x18 ; dest
.text:0000000000017E8C                 BL              .memcpy
.text:0000000000017E90                 LDR             W8, [X22,#0x10]
.text:0000000000017E94                 MOV             W0, WZR
.text:0000000000017E98                 ADD             W8, W8, #1
.text:0000000000017E9C                 STR             W8, [X22,#0x10]
.text:0000000000017EA0                 LDR             W8, [X19,#4]
.text:0000000000017EA4                 ADD             W8, W8, #1
.text:0000000000017EA8                 STR             W8, [X19,#4]
.text:0000000000017EAC                 B               loc_17EB8
.text:0000000000017EB0 ; ---------------------------------------------------------------------------
.text:0000000000017EB0 loc_17EB0                               ; CODE XREF: sheif_mblk_elem_add+40↑j
.text:0000000000017EB0                 MOV             W0, #0xFFFFFFFF
.text:0000000000017EB4                 STR             XZR, [X19,#0x18]
.text:0000000000017EB8 loc_17EB8                               ; CODE XREF: sheif_mblk_elem_add+AC↑j
.text:0000000000017EB8                 LDP             X29, X30, [SP,#0x20+var_s0]
.text:0000000000017EBC                 LDP             X20, X19, [SP,#0x20+var_10]
.text:0000000000017EC0                 LDP             X22, X21, [SP+0x20+var_20],#0x30
.text:0000000000017EC4                 RET
.text:0000000000017EC4 ; } // starts at 17E00
.text:0000000000017EC4 ; End of function sheif_mblk_elem_add
.text:0000000000017EC8 ; =============== S U B R O U T I N E =======================================
.text:0000000000017EC8 ; Attributes: bp-based frame
.text:0000000000017EC8                 EXPORT sheif_mblk_elem_add_with_size
.text:0000000000017EC8 sheif_mblk_elem_add_with_size           ; CODE XREF: .sheif_mblk_elem_add_with_size+C↓j
.text:0000000000017EC8                                         ; DATA XREF: LOAD:0000000000001C98↑o ...
.text:0000000000017EC8 var_20          = -0x20
.text:0000000000017EC8 var_10          = -0x10
.text:0000000000017EC8 var_s0          =  0
.text:0000000000017EC8 ; __unwind {
.text:0000000000017EC8                 STP             X22, X21, [SP,#-0x10+var_20]!
.text:0000000000017ECC                 STP             X20, X19, [SP,#0x20+var_10]
.text:0000000000017ED0                 STP             X29, X30, [SP,#0x20+var_s0]
.text:0000000000017ED4                 ADD             X29, SP, #0x20
.text:0000000000017ED8                 CMP             W2, #1,LSL#12
.text:0000000000017EDC                 B.GT            loc_17F8C
.text:0000000000017EE0                 LDR             X22, [X0,#0x18]
.text:0000000000017EE4                 MOV             W20, W2
.text:0000000000017EE8                 MOV             X21, X1
.text:0000000000017EEC                 MOV             X19, X0
.text:0000000000017EF0                 CBZ             X22, loc_17F04
.text:0000000000017EF4                 LDR             W8, [X22,#0x14]
.text:0000000000017EF8                 ADD             W9, W8, W20
.text:0000000000017EFC                 CMP             W9, #0xFE9
.text:0000000000017F00                 B.CC            loc_17F48
.text:0000000000017F04 loc_17F04                               ; CODE XREF: sheif_mblk_elem_add_with_size+28↑j
.text:0000000000017F04                 MOV             W0, #0x1000 ; size
.text:0000000000017F08                 BL              .malloc
.text:0000000000017F0C                 CBZ             X0, loc_17F94
.text:0000000000017F10                 STP             X22, XZR, [X0,#8]
.text:0000000000017F14                 STR             XZR, [X0]
.text:0000000000017F18                 CBZ             X22, loc_17F20
.text:0000000000017F1C                 STR             X0, [X22]
.text:0000000000017F20 loc_17F20                               ; CODE XREF: sheif_mblk_elem_add_with_size+50↑j
.text:0000000000017F20                 LDR             X8, [X19,#0x10]
.text:0000000000017F24                 STR             X0, [X19,#0x18]
.text:0000000000017F28                 STR             WZR, [X0,#0x14]
.text:0000000000017F2C                 CBNZ            X8, loc_17F34
.text:0000000000017F30                 STR             X0, [X19,#0x10]
.text:0000000000017F34 loc_17F34                               ; CODE XREF: sheif_mblk_elem_add_with_size+64↑j
.text:0000000000017F34                 LDR             W9, [X19]
.text:0000000000017F38                 MOV             W8, WZR
.text:0000000000017F3C                 MOV             X22, X0
.text:0000000000017F40                 ADD             W9, W9, #1
.text:0000000000017F44                 STR             W9, [X19]
.text:0000000000017F48 loc_17F48                               ; CODE XREF: sheif_mblk_elem_add_with_size+38↑j
.text:0000000000017F48                 ADD             X8, X22, W8,SXTW
.text:0000000000017F4C                 ADD             X0, X8, #0x18 ; dest
.text:0000000000017F50                 MOV             X1, X21 ; src
.text:0000000000017F54                 SXTW            X2, W20 ; n
.text:0000000000017F58                 BL              .memcpy
.text:0000000000017F5C                 LDR             W8, [X22,#0x10]
.text:0000000000017F60                 MOV             W0, WZR
.text:0000000000017F64                 ADD             W8, W8, #1
.text:0000000000017F68                 STR             W8, [X22,#0x10]
.text:0000000000017F6C                 LDR             W8, [X19,#4]
.text:0000000000017F70                 LDR             X9, [X19,#0x18]
.text:0000000000017F74                 ADD             W8, W8, #1
.text:0000000000017F78                 STR             W8, [X19,#4]
.text:0000000000017F7C                 LDR             W8, [X9,#0x14]
.text:0000000000017F80                 ADD             W8, W8, W20
.text:0000000000017F84                 STR             W8, [X9,#0x14]
.text:0000000000017F88                 B               loc_17F9C
.text:0000000000017F8C ; ---------------------------------------------------------------------------
.text:0000000000017F8C loc_17F8C                               ; CODE XREF: sheif_mblk_elem_add_with_size+14↑j
.text:0000000000017F8C                 MOV             W0, #0xFFFFFFFF
.text:0000000000017F90                 B               loc_17F9C
.text:0000000000017F94 ; ---------------------------------------------------------------------------
.text:0000000000017F94 loc_17F94                               ; CODE XREF: sheif_mblk_elem_add_with_size+44↑j
.text:0000000000017F94                 MOV             W0, #0xFFFFFFFF
.text:0000000000017F98                 STR             XZR, [X19,#0x18]
.text:0000000000017F9C loc_17F9C                               ; CODE XREF: sheif_mblk_elem_add_with_size+C0↑j
.text:0000000000017F9C                                         ; sheif_mblk_elem_add_with_size+C8↑j
.text:0000000000017F9C                 LDP             X29, X30, [SP,#0x20+var_s0]
.text:0000000000017FA0                 LDP             X20, X19, [SP,#0x20+var_10]
.text:0000000000017FA4                 LDP             X22, X21, [SP+0x20+var_20],#0x30
.text:0000000000017FA8                 RET
.text:0000000000017FA8 ; } // starts at 17EC8
.text:0000000000017FA8 ; End of function sheif_mblk_elem_add_with_size
.text:0000000000017FA8 ; ---------------------------------------------------------------------------
.text:0000000000017FAC                 ALIGN 0x10
.text:0000000000017FB0 ; =============== S U B R O U T I N E =======================================
.text:0000000000017FB0 ; Attributes: bp-based frame
.text:0000000000017FB0                 EXPORT sheif_mblk_upd_meta
.text:0000000000017FB0 sheif_mblk_upd_meta                     ; DATA XREF: LOAD:0000000000001DD0↑o
.text:0000000000017FB0 var_30          = -0x30
.text:0000000000017FB0 var_20          = -0x20
.text:0000000000017FB0 var_10          = -0x10
.text:0000000000017FB0 var_s0          =  0
.text:0000000000017FB0 ; __unwind {
.text:0000000000017FB0                 STR             X23, [SP,#-0x10+var_30]!
.text:0000000000017FB4                 STP             X22, X21, [SP,#0x30+var_20]
.text:0000000000017FB8                 STP             X20, X19, [SP,#0x30+var_10]
.text:0000000000017FBC                 STP             X29, X30, [SP,#0x30+var_s0]
.text:0000000000017FC0                 ADD             X29, SP, #0x30
.text:0000000000017FC4                 LDR             X8, [X0,#0x20]
.text:0000000000017FC8                 CBZ             X8, loc_17FEC
.text:0000000000017FCC                 ADRP            X1, #aSheifMblk@PAGE ; "sheif_mblk"
.text:0000000000017FD0                 ADRP            X2, #aIndexErrMetaAr@PAGE ; "[index] err: meta_array index already b"...
.text:0000000000017FD4                 ADD             X1, X1, #aSheifMblk@PAGEOFF ; "sheif_mblk"
.text:0000000000017FD8                 MOV             W0, #5
.text:0000000000017FDC                 ADD             X2, X2, #aIndexErrMetaAr@PAGEOFF ; "[index] err: meta_array index already b"...
.text:0000000000017FE0                 BL              .__android_log_print
.text:0000000000017FE4 loc_17FE4                               ; CODE XREF: sheif_mblk_upd_meta+58↓j
.text:0000000000017FE4                 MOV             W0, #0xFFFFFFFF
.text:0000000000017FE8                 B               loc_18044
.text:0000000000017FEC ; ---------------------------------------------------------------------------
.text:0000000000017FEC loc_17FEC                               ; CODE XREF: sheif_mblk_upd_meta+18↑j
.text:0000000000017FEC                 LDRSW           X8, [X0]
.text:0000000000017FF0                 MOV             X19, X0
.text:0000000000017FF4                 CMP             W8, #2
.text:0000000000017FF8                 B.LT            loc_18040
.text:0000000000017FFC                 LSL             X0, X8, #4 ; size
.text:0000000000018000                 MOV             X20, X1
.text:0000000000018004                 BL              .malloc
.text:0000000000018008                 CBZ             X0, loc_17FE4
.text:000000000001800C                 LDR             X22, [X19,#0x10]
.text:0000000000018010                 MOV             X21, X0
.text:0000000000018014                 CBZ             X22, loc_18034
.text:0000000000018018                 ADD             X23, X21, #8
.text:000000000001801C loc_1801C                               ; CODE XREF: sheif_mblk_upd_meta+80↓j
.text:000000000001801C                 ADD             X0, X22, #0x18
.text:0000000000018020                 STUR            X22, [X23,#-8]
.text:0000000000018024                 BLR             X20
.text:0000000000018028                 STR             W0, [X23],#0x10
.text:000000000001802C                 LDR             X22, [X22]
.text:0000000000018030                 CBNZ            X22, loc_1801C
.text:0000000000018034 loc_18034                               ; CODE XREF: sheif_mblk_upd_meta+64↑j
.text:0000000000018034                 MOV             W0, WZR
.text:0000000000018038                 STR             X21, [X19,#0x20]
.text:000000000001803C                 B               loc_18044
.text:0000000000018040 ; ---------------------------------------------------------------------------
.text:0000000000018040 loc_18040                               ; CODE XREF: sheif_mblk_upd_meta+48↑j
.text:0000000000018040                 MOV             W0, WZR
.text:0000000000018044 loc_18044                               ; CODE XREF: sheif_mblk_upd_meta+38↑j
.text:0000000000018044                                         ; sheif_mblk_upd_meta+8C↑j
.text:0000000000018044                 LDP             X29, X30, [SP,#0x30+var_s0]
.text:0000000000018048                 LDP             X20, X19, [SP,#0x30+var_10]
.text:000000000001804C                 LDP             X22, X21, [SP,#0x30+var_20]
.text:0000000000018050                 LDR             X23, [SP+0x30+var_30],#0x40
.text:0000000000018054                 RET
.text:0000000000018054 ; } // starts at 17FB0
.text:0000000000018054 ; End of function sheif_mblk_upd_meta
.text:0000000000018058 ; =============== S U B R O U T I N E =======================================
.text:0000000000018058 ; Attributes: bp-based frame
.text:0000000000018058                 EXPORT sheif_mblk_elem_find
.text:0000000000018058 sheif_mblk_elem_find                    ; DATA XREF: LOAD:00000000000013C8↑o
.text:0000000000018058 var_2C          = -0x2C
.text:0000000000018058 var_28          = -0x28
.text:0000000000018058 var_20          = -0x20
.text:0000000000018058 var_10          = -0x10
.text:0000000000018058 var_s0          =  0
.text:0000000000018058 ; __unwind {
.text:0000000000018058                 SUB             SP, SP, #0x40
.text:000000000001805C                 STR             X21, [SP,#0x30+var_20]
.text:0000000000018060                 STP             X20, X19, [SP,#0x30+var_10]
.text:0000000000018064                 STP             X29, X30, [SP,#0x30+var_s0]
.text:0000000000018068                 ADD             X29, SP, #0x30
.text:000000000001806C                 MRS             X21, #3, c13, c0, #2
.text:0000000000018070                 MOV             X20, X0
.text:0000000000018074                 LDR             X8, [X21,#0x28]
.text:0000000000018078                 MOV             X19, X2
.text:000000000001807C                 STR             X8, [SP,#0x30+var_28]
.text:0000000000018080                 LDR             W8, [X0]
.text:0000000000018084                 STR             W1, [SP,#0x30+var_2C]
.text:0000000000018088                 CMP             W8, #2
.text:000000000001808C                 B.LT            loc_180DC
.text:0000000000018090                 LDR             X0, [X20,#0x20]
.text:0000000000018094                 CBZ             X0, loc_180DC
.text:0000000000018098                 ADRP            X4, #loc_18118@PAGE
.text:000000000001809C                 ADD             X4, X4, #loc_18118@PAGEOFF
.text:00000000000180A0                 ADD             X3, SP, #0x30+var_2C
.text:00000000000180A4                 MOV             W1, W8
.text:00000000000180A8                 MOV             W2, #0x10
.text:00000000000180AC                 MOV             X5, X20
.text:00000000000180B0                 BL              .sheif_bsearch
.text:00000000000180B4                 CBZ             X0, loc_180EC
.text:00000000000180B8                 LDR             X5, [X0]
.text:00000000000180BC                 CBZ             X5, loc_180E8
.text:00000000000180C0 loc_180C0                               ; CODE XREF: sheif_mblk_elem_find+8C↓j
.text:00000000000180C0                 LDR             W1, [X5,#0x10]
.text:00000000000180C4                 ADD             X0, X5, #0x18
.text:00000000000180C8                 LDR             W2, [X20,#8]
.text:00000000000180CC                 ADD             X3, SP, #0x30+var_2C
.text:00000000000180D0                 MOV             X4, X19
.text:00000000000180D4                 BL              .sheif_bsearch
.text:00000000000180D8                 B               loc_180EC
.text:00000000000180DC ; ---------------------------------------------------------------------------
.text:00000000000180DC loc_180DC                               ; CODE XREF: sheif_mblk_elem_find+34↑j
.text:00000000000180DC                                         ; sheif_mblk_elem_find+3C↑j
.text:00000000000180DC                 ADD             X0, X20, #0x10
.text:00000000000180E0                 LDR             X5, [X0]
.text:00000000000180E4                 CBNZ            X5, loc_180C0
.text:00000000000180E8 loc_180E8                               ; CODE XREF: sheif_mblk_elem_find+64↑j
.text:00000000000180E8                 MOV             X0, XZR
.text:00000000000180EC loc_180EC                               ; CODE XREF: sheif_mblk_elem_find+5C↑j
.text:00000000000180EC                                         ; sheif_mblk_elem_find+80↑j
.text:00000000000180EC                 LDR             X8, [X21,#0x28]
.text:00000000000180F0                 LDR             X9, [SP,#0x30+var_28]
.text:00000000000180F4                 CMP             X8, X9
.text:00000000000180F8                 B.NE            loc_18110
.text:00000000000180FC                 LDP             X29, X30, [SP,#0x30+var_s0]
.text:0000000000018100                 LDP             X20, X19, [SP,#0x30+var_10]
.text:0000000000018104                 LDR             X21, [SP,#0x30+var_20]
.text:0000000000018108                 ADD             SP, SP, #0x40 ; '@'
.text:000000000001810C                 RET
.text:0000000000018110 ; ---------------------------------------------------------------------------
.text:0000000000018110 loc_18110                               ; CODE XREF: sheif_mblk_elem_find+A0↑j
.text:0000000000018110                 BL              .__stack_chk_fail
.text:0000000000018110 ; } // starts at 18058
.text:0000000000018110 ; End of function sheif_mblk_elem_find
.text:0000000000018110 ; ---------------------------------------------------------------------------
.text:0000000000018114                 ALIGN 8
.text:0000000000018118 loc_18118                               ; DATA XREF: sheif_mblk_elem_find+40↑o
.text:0000000000018118                                         ; sheif_mblk_elem_find+44↑o
.text:0000000000018118 ; __unwind {
.text:0000000000018118                 LDR             W9, [X1,#8]
.text:000000000001811C                 LDR             W8, [X0]
.text:0000000000018120                 CMP             W8, W9
.text:0000000000018124                 B.CS            loc_18130
.text:0000000000018128                 MOV             W0, #0xFFFFFFFF
.text:000000000001812C                 RET
.text:0000000000018130 ; ---------------------------------------------------------------------------
.text:0000000000018130 loc_18130                               ; CODE XREF: .text:0000000000018124↑j
.text:0000000000018130                 B.LS            loc_18154
.text:0000000000018134                 LDR             X9, [X1]
.text:0000000000018138                 LDR             X10, [X2,#0x18]
.text:000000000001813C                 CMP             X9, X10
.text:0000000000018140                 B.EQ            loc_1815C
.text:0000000000018144                 LDR             W9, [X1,#0x18]
.text:0000000000018148                 CMP             W8, W9
.text:000000000001814C                 CSET            W0, HI
.text:0000000000018150                 RET
.text:0000000000018154 ; ---------------------------------------------------------------------------
.text:0000000000018154 loc_18154                               ; CODE XREF: .text:loc_18130↑j
.text:0000000000018154                 MOV             W0, WZR
.text:0000000000018158                 RET
.text:000000000001815C ; ---------------------------------------------------------------------------
.text:000000000001815C loc_1815C                               ; CODE XREF: .text:0000000000018140↑j
.text:000000000001815C                 MOV             W0, WZR
.text:0000000000018160                 RET
.text:0000000000018160 ; } // starts at 18118
.text:0000000000018160 ; ---------------------------------------------------------------------------
.text:0000000000018164                 ALIGN 8
.text:0000000000018168 ; =============== S U B R O U T I N E =======================================
.text:0000000000018168 ; Attributes: bp-based frame
.text:0000000000018168                 EXPORT sheif_mblk_dtor
.text:0000000000018168 sheif_mblk_dtor                         ; CODE XREF: .sheif_mblk_dtor+C↓j
.text:0000000000018168                                         ; DATA XREF: LOAD:0000000000001638↑o ...
.text:0000000000018168 var_10          = -0x10
.text:0000000000018168 var_s0          =  0
.text:0000000000018168 ; __unwind {
.text:0000000000018168                 CBZ             X0, locret_181B8
.text:000000000001816C                 STP             X20, X19, [SP,#-0x10+var_10]!
.text:0000000000018170                 STP             X29, X30, [SP,#0x10+var_s0]
.text:0000000000018174                 ADD             X29, SP, #0x10
.text:0000000000018178                 MOV             X19, X0
.text:000000000001817C                 LDR             X0, [X0,#0x10] ; ptr
.text:0000000000018180                 CBZ             X0, loc_18194
.text:0000000000018184 loc_18184                               ; CODE XREF: sheif_mblk_dtor+28↓j
.text:0000000000018184                 LDR             X20, [X0]
.text:0000000000018188                 BL              .free
.text:000000000001818C                 MOV             X0, X20
.text:0000000000018190                 CBNZ            X20, loc_18184
.text:0000000000018194 loc_18194                               ; CODE XREF: sheif_mblk_dtor+18↑j
.text:0000000000018194                 LDR             X0, [X19,#0x20] ; ptr
.text:0000000000018198                 CBZ             X0, loc_181A4
.text:000000000001819C                 BL              .free
.text:00000000000181A0                 STR             XZR, [X19,#0x20]
.text:00000000000181A4 loc_181A4                               ; CODE XREF: sheif_mblk_dtor+30↑j
.text:00000000000181A4                 MOVI            V0.2D, #0
.text:00000000000181A8                 STR             XZR, [X19,#0x20]
.text:00000000000181AC                 STP             Q0, Q0, [X19]
.text:00000000000181B0                 LDP             X29, X30, [SP,#0x10+var_s0]
.text:00000000000181B4                 LDP             X20, X19, [SP+0x10+var_10],#0x20
.text:00000000000181B8 locret_181B8                            ; CODE XREF: sheif_mblk_dtor↑j
.text:00000000000181B8                 RET
.text:00000000000181B8 ; } // starts at 18168
.text:00000000000181B8 ; End of function sheif_mblk_dtor
.text:00000000000181B8 ; ---------------------------------------------------------------------------
.text:00000000000181BC                 ALIGN 0x20
.text:00000000000181C0 ; =============== S U B R O U T I N E =======================================
.text:00000000000181C0                 EXPORT sheif_mblk_elem_first
.text:00000000000181C0 sheif_mblk_elem_first                   ; CODE XREF: .sheif_mblk_elem_first+C↓j
.text:00000000000181C0                                         ; DATA XREF: LOAD:00000000000012D8↑o ...
.text:00000000000181C0 ; __unwind {
.text:00000000000181C0                 LDR             W8, [X0,#4]
.text:00000000000181C4                 CBZ             W8, loc_181EC
.text:00000000000181C8                 LDR             X8, [X0,#0x10]
.text:00000000000181CC                 LDR             W9, [X8,#0x10]
.text:00000000000181D0                 CBZ             W9, loc_181F4
.text:00000000000181D4                 STR             X8, [X1]
.text:00000000000181D8                 STR             WZR, [X1,#8]
.text:00000000000181DC                 LDR             X8, [X0,#0x10]
.text:00000000000181E0                 ADD             X0, X8, #0x18
.text:00000000000181E4                 STR             X0, [X1,#0x10]
.text:00000000000181E8                 RET
.text:00000000000181EC ; ---------------------------------------------------------------------------
.text:00000000000181EC loc_181EC                               ; CODE XREF: sheif_mblk_elem_first+4↑j
.text:00000000000181EC                 MOV             X0, XZR
.text:00000000000181F0                 RET
.text:00000000000181F4 ; ---------------------------------------------------------------------------
.text:00000000000181F4 loc_181F4                               ; CODE XREF: sheif_mblk_elem_first+10↑j
.text:00000000000181F4                 MOV             X0, XZR
.text:00000000000181F8                 RET
.text:00000000000181F8 ; } // starts at 181C0
.text:00000000000181F8 ; End of function sheif_mblk_elem_first
.text:00000000000181F8 ; ---------------------------------------------------------------------------
.text:00000000000181FC                 ALIGN 0x20
.text:0000000000018200 ; =============== S U B R O U T I N E =======================================
.text:0000000000018200                 EXPORT sheif_mblk_elem_next
.text:0000000000018200 sheif_mblk_elem_next                    ; CODE XREF: .sheif_mblk_elem_next+C↓j
.text:0000000000018200                                         ; DATA XREF: LOAD:0000000000001DA0↑o ...
.text:0000000000018200 ; __unwind {
.text:0000000000018200                 LDR             W8, [X1,#8]
.text:0000000000018204                 ADD             W9, W8, #1
.text:0000000000018208                 LDR             X8, [X1]
.text:000000000001820C                 STR             W9, [X1,#8]
.text:0000000000018210                 LDR             W10, [X8,#0x10]
.text:0000000000018214                 CMP             W9, W10
.text:0000000000018218                 B.NE            loc_18234
.text:000000000001821C                 LDR             X9, [X8]
.text:0000000000018220                 CBZ             X9, loc_1824C
.text:0000000000018224                 STR             WZR, [X1,#8]
.text:0000000000018228                 MOV             W9, WZR
.text:000000000001822C                 LDR             X8, [X8]
.text:0000000000018230                 STR             X8, [X1]
.text:0000000000018234 loc_18234                               ; CODE XREF: sheif_mblk_elem_next+18↑j
.text:0000000000018234                 LDRSW           X10, [X0,#8]
.text:0000000000018238                 SXTW            X9, W9
.text:000000000001823C                 MADD            X8, X10, X9, X8
.text:0000000000018240                 ADD             X0, X8, #0x18
.text:0000000000018244                 STR             X0, [X1,#0x10]
.text:0000000000018248                 RET
.text:000000000001824C ; ---------------------------------------------------------------------------
.text:000000000001824C loc_1824C                               ; CODE XREF: sheif_mblk_elem_next+20↑j
.text:000000000001824C                 MOV             X0, XZR
.text:0000000000018250                 STP             XZR, XZR, [X1]
.text:0000000000018254                 STR             XZR, [X1,#0x10]
.text:0000000000018258                 RET
.text:0000000000018258 ; } // starts at 18200
.text:0000000000018258 ; End of function sheif_mblk_elem_next
.text:0000000000018258 ; ---------------------------------------------------------------------------
.text:000000000001825C                 ALIGN 0x20
.text:0000000000018260 ; =============== S U B R O U T I N E =======================================
.text:0000000000018260                 EXPORT sheif_mblk_elem_last
.text:0000000000018260 sheif_mblk_elem_last                    ; CODE XREF: .sheif_mblk_elem_last+C↓j
.text:0000000000018260                                         ; DATA XREF: LOAD:0000000000001E90↑o ...
.text:0000000000018260 ; __unwind {
.text:0000000000018260                 LDR             W8, [X0,#4]
.text:0000000000018264                 CBZ             W8, loc_18294
.text:0000000000018268                 LDR             X8, [X0,#0x18]
.text:000000000001826C                 STR             X8, [X1]
.text:0000000000018270                 LDRSW           X9, [X8,#0x10]
.text:0000000000018274                 SUB             X9, X9, #1
.text:0000000000018278                 STR             W9, [X1,#8]
.text:000000000001827C                 LDRSW           X10, [X0,#8]
.text:0000000000018280                 NOP
.text:0000000000018284                 MADD            X8, X10, X9, X8
.text:0000000000018288                 ADD             X0, X8, #0x18
.text:000000000001828C                 STR             X0, [X1,#0x10]
.text:0000000000018290                 RET
.text:0000000000018294 ; ---------------------------------------------------------------------------
.text:0000000000018294 loc_18294                               ; CODE XREF: sheif_mblk_elem_last+4↑j
.text:0000000000018294                 MOV             X0, XZR
.text:0000000000018298                 STR             XZR, [X1]
.text:000000000001829C                 STR             XZR, [X1,#0x10]
.text:00000000000182A0                 RET
.text:00000000000182A0 ; } // starts at 18260
.text:00000000000182A0 ; End of function sheif_mblk_elem_last
.text:00000000000182A0 ; ---------------------------------------------------------------------------
.text:00000000000182A4                 ALIGN 8
.text:00000000000182A8 ; =============== S U B R O U T I N E =======================================
.text:00000000000182A8                 EXPORT sheif_mblk_elem_prev
.text:00000000000182A8 sheif_mblk_elem_prev                    ; DATA XREF: LOAD:0000000000001758↑o
.text:00000000000182A8 ; __unwind {
.text:00000000000182A8                 LDR             W9, [X1,#8]
.text:00000000000182AC                 LDR             X8, [X1]
.text:00000000000182B0                 CBNZ            W9, loc_182C0
.text:00000000000182B4                 LDR             X8, [X8,#8]
.text:00000000000182B8                 STR             X8, [X1]
.text:00000000000182BC                 LDR             W9, [X8,#0x10]
.text:00000000000182C0 loc_182C0                               ; CODE XREF: sheif_mblk_elem_prev+8↑j
.text:00000000000182C0                 SXTW            X9, W9
.text:00000000000182C4                 SUB             X9, X9, #1
.text:00000000000182C8                 STR             W9, [X1,#8]
.text:00000000000182CC                 LDRSW           X10, [X0,#8]
.text:00000000000182D0                 NOP
.text:00000000000182D4                 MADD            X8, X10, X9, X8
.text:00000000000182D8                 ADD             X0, X8, #0x18
.text:00000000000182DC                 STR             X0, [X1,#0x10]
.text:00000000000182E0                 RET
.text:00000000000182E0 ; } // starts at 182A8
.text:00000000000182E0 ; End of function sheif_mblk_elem_prev
.text:00000000000182E0 ; ---------------------------------------------------------------------------
.text:00000000000182E4                 ALIGN 8
.text:00000000000182E8 ; =============== S U B R O U T I N E =======================================
.text:00000000000182E8 ; Attributes: bp-based frame
.text:00000000000182E8                 EXPORT sheif_mblk_dump
.text:00000000000182E8 sheif_mblk_dump                         ; CODE XREF: .sheif_mblk_dump+C↓j
.text:00000000000182E8                                         ; DATA XREF: LOAD:00000000000016C8↑o ...
.text:00000000000182E8 var_30          = -0x30
.text:00000000000182E8 var_20          = -0x20
.text:00000000000182E8 var_10          = -0x10
.text:00000000000182E8 var_s0          =  0
.text:00000000000182E8 ; __unwind {
.text:00000000000182E8                 STP             X24, X23, [SP,#-0x10+var_30]!
.text:00000000000182EC                 STP             X22, X21, [SP,#0x30+var_20]
.text:00000000000182F0                 STP             X20, X19, [SP,#0x30+var_10]
.text:00000000000182F4                 STP             X29, X30, [SP,#0x30+var_s0]
.text:00000000000182F8                 ADD             X29, SP, #0x30
.text:00000000000182FC                 LDR             X22, [X0,#0x10]
.text:0000000000018300                 CBZ             X22, loc_1835C
.text:0000000000018304                 LDRSW           X23, [X0,#8]
.text:0000000000018308                 MOV             X19, X1
.text:000000000001830C                 LDR             W8, [X1,#0x48]
.text:0000000000018310                 MOV             W20, WZR
.text:0000000000018314 loc_18314                               ; CODE XREF: sheif_mblk_dump+6C↓j
.text:0000000000018314                 LDRSW           X24, [X22,#0x10]
.text:0000000000018318                 MUL             X21, X24, X23
.text:000000000001831C                 CMP             W8, W21
.text:0000000000018320                 B.LT            loc_18364
.text:0000000000018324                 LDR             X0, [X19,#0x40] ; dest
.text:0000000000018328                 ADD             X1, X22, #0x18 ; src
.text:000000000001832C                 MOV             X2, X21 ; n
.text:0000000000018330                 BL              .memcpy
.text:0000000000018334                 LDR             X8, [X19,#0x40]
.text:0000000000018338                 ADD             W20, W24, W20
.text:000000000001833C                 LDR             W9, [X19,#0x48]
.text:0000000000018340                 ADD             X10, X8, X21
.text:0000000000018344                 SUB             W8, W9, W21
.text:0000000000018348                 STR             X10, [X19,#0x40]
.text:000000000001834C                 STR             W8, [X19,#0x48]
.text:0000000000018350                 LDR             X22, [X22]
.text:0000000000018354                 CBNZ            X22, loc_18314
.text:0000000000018358                 B               loc_18368
.text:000000000001835C ; ---------------------------------------------------------------------------
.text:000000000001835C loc_1835C                               ; CODE XREF: sheif_mblk_dump+18↑j
.text:000000000001835C                 MOV             W20, WZR
.text:0000000000018360                 B               loc_18368
.text:0000000000018364 ; ---------------------------------------------------------------------------
.text:0000000000018364 loc_18364                               ; CODE XREF: sheif_mblk_dump+38↑j
.text:0000000000018364                 MOV             W20, #0xFFFFFFFC
.text:0000000000018368 loc_18368                               ; CODE XREF: sheif_mblk_dump+70↑j
.text:0000000000018368                                         ; sheif_mblk_dump+78↑j
.text:0000000000018368                 MOV             W0, W20
.text:000000000001836C                 LDP             X29, X30, [SP,#0x30+var_s0]
.text:0000000000018370                 LDP             X20, X19, [SP,#0x30+var_10]
.text:0000000000018374                 LDP             X22, X21, [SP,#0x30+var_20]
.text:0000000000018378                 LDP             X24, X23, [SP+0x30+var_30],#0x40
.text:000000000001837C                 RET
.text:000000000001837C ; } // starts at 182E8
.text:000000000001837C ; End of function sheif_mblk_dump
.text:0000000000018380 ; =============== S U B R O U T I N E =======================================
.text:0000000000018380 ; Attributes: bp-based frame
.text:0000000000018380                 EXPORT sheif_mblk_dump_size
.text:0000000000018380 sheif_mblk_dump_size                    ; CODE XREF: .sheif_mblk_dump_size+C↓j
.text:0000000000018380                                         ; DATA XREF: LOAD:00000000000014D0↑o ...
.text:0000000000018380 var_20          = -0x20
.text:0000000000018380 var_10          = -0x10
.text:0000000000018380 var_s0          =  0
.text:0000000000018380 ; __unwind {
.text:0000000000018380                 STR             X21, [SP,#-0x10+var_20]!
.text:0000000000018384                 STP             X20, X19, [SP,#0x20+var_10]
.text:0000000000018388                 STP             X29, X30, [SP,#0x20+var_s0]
.text:000000000001838C                 ADD             X29, SP, #0x20
.text:0000000000018390                 LDR             X21, [X0,#0x10]
.text:0000000000018394                 MOV             X19, X0
.text:0000000000018398                 CBZ             X21, loc_183E4
.text:000000000001839C                 LDR             W8, [X1,#0x48]
.text:00000000000183A0                 MOV             X20, X1
.text:00000000000183A4 loc_183A4                               ; CODE XREF: sheif_mblk_dump_size+60↓j
.text:00000000000183A4                 LDRSW           X2, [X21,#0x14] ; n
.text:00000000000183A8                 CMP             W8, W2
.text:00000000000183AC                 B.LT            loc_183EC
.text:00000000000183B0                 LDR             X0, [X20,#0x40] ; dest
.text:00000000000183B4                 ADD             X1, X21, #0x18 ; src
.text:00000000000183B8                 BL              .memcpy
.text:00000000000183BC                 LDRSW           X8, [X21,#0x14]
.text:00000000000183C0                 LDR             X9, [X20,#0x40]
.text:00000000000183C4                 ADD             X8, X9, X8
.text:00000000000183C8                 STR             X8, [X20,#0x40]
.text:00000000000183CC                 LDR             W8, [X20,#0x48]
.text:00000000000183D0                 LDR             W9, [X21,#0x14]
.text:00000000000183D4                 SUB             W8, W8, W9
.text:00000000000183D8                 STR             W8, [X20,#0x48]
.text:00000000000183DC                 LDR             X21, [X21]
.text:00000000000183E0                 CBNZ            X21, loc_183A4
.text:00000000000183E4 loc_183E4                               ; CODE XREF: sheif_mblk_dump_size+18↑j
.text:00000000000183E4                 LDR             W0, [X19,#4]
.text:00000000000183E8                 B               loc_183F0
.text:00000000000183EC ; ---------------------------------------------------------------------------
.text:00000000000183EC loc_183EC                               ; CODE XREF: sheif_mblk_dump_size+2C↑j
.text:00000000000183EC                 MOV             W0, #0xFFFFFFFC
.text:00000000000183F0 loc_183F0                               ; CODE XREF: sheif_mblk_dump_size+68↑j
.text:00000000000183F0                 LDP             X29, X30, [SP,#0x20+var_s0]
.text:00000000000183F4                 LDP             X20, X19, [SP,#0x20+var_10]
.text:00000000000183F8                 LDR             X21, [SP+0x20+var_20],#0x30
.text:00000000000183FC                 RET
.text:00000000000183FC ; } // starts at 18380
.text:00000000000183FC ; End of function sheif_mblk_dump_size
.text:0000000000018400 ; =============== S U B R O U T I N E =======================================
.text:0000000000018400                 EXPORT sheif_mblk_datasize
.text:0000000000018400 sheif_mblk_datasize                     ; DATA XREF: LOAD:0000000000001368↑o
.text:0000000000018400 ; __unwind {
.text:0000000000018400                 LDPSW           X8, X9, [X0,#4]
.text:0000000000018404                 MUL             X0, X9, X8
.text:0000000000018408                 RET
.text:0000000000018408 ; } // starts at 18400
.text:0000000000018408 ; End of function sheif_mblk_datasize
.text:0000000000018408 ; ---------------------------------------------------------------------------
.text:000000000001840C                 ALIGN 0x10
.text:0000000000018410 ; =============== S U B R O U T I N E =======================================
.text:0000000000018410                 EXPORT sheif_mblk_total_datasize
.text:0000000000018410 sheif_mblk_total_datasize               ; CODE XREF: .sheif_mblk_total_datasize+C↓j
.text:0000000000018410                                         ; DATA XREF: LOAD:0000000000001128↑o ...
.text:0000000000018410 ; __unwind {
.text:0000000000018410                 LDR             X8, [X0,#0x10]
.text:0000000000018414                 CBZ             X8, loc_18430
.text:0000000000018418                 MOV             X0, XZR
.text:000000000001841C loc_1841C                               ; CODE XREF: sheif_mblk_total_datasize+18↓j
.text:000000000001841C                 LDRSW           X9, [X8,#0x14]
.text:0000000000018420                 LDR             X8, [X8]
.text:0000000000018424                 ADD             X0, X0, X9
.text:0000000000018428                 CBNZ            X8, loc_1841C
.text:000000000001842C                 RET
.text:0000000000018430 ; ---------------------------------------------------------------------------
.text:0000000000018430 loc_18430                               ; CODE XREF: sheif_mblk_total_datasize+4↑j
.text:0000000000018430                 MOV             X0, XZR
.text:0000000000018434                 RET
.text:0000000000018434 ; } // starts at 18410
.text:0000000000018434 ; End of function sheif_mblk_total_datasize
.text:0000000000018438 ; =============== S U B R O U T I N E =======================================
.text:0000000000018438 ; Attributes: bp-based frame
.text:0000000000018438                 EXPORT sheif_bsearch
.text:0000000000018438 sheif_bsearch                           ; CODE XREF: .sheif_bsearch+C↓j
.text:0000000000018438                                         ; DATA XREF: LOAD:0000000000001FC8↑o ...
.text:0000000000018438 var_50          = -0x50
.text:0000000000018438 var_40          = -0x40
.text:0000000000018438 var_30          = -0x30
.text:0000000000018438 var_20          = -0x20
.text:0000000000018438 var_10          = -0x10
.text:0000000000018438 var_s0          =  0
.text:0000000000018438 ; __unwind {
.text:0000000000018438                 STR             X27, [SP,#-0x10+var_50]!
.text:000000000001843C                 STP             X26, X25, [SP,#0x50+var_40]
.text:0000000000018440                 STP             X24, X23, [SP,#0x50+var_30]
.text:0000000000018444                 STP             X22, X21, [SP,#0x50+var_20]
.text:0000000000018448                 STP             X20, X19, [SP,#0x50+var_10]
.text:000000000001844C                 STP             X29, X30, [SP,#0x50+var_s0]
.text:0000000000018450                 ADD             X29, SP, #0x50
.text:0000000000018454                 CBZ             W1, loc_184C8
.text:0000000000018458                 MOV             X19, X5
.text:000000000001845C                 MOV             W24, W1
.text:0000000000018460                 MOV             X20, X4
.text:0000000000018464                 MOV             X21, X3
.text:0000000000018468                 MOV             W22, W2
.text:000000000001846C                 MOV             X23, X0
.text:0000000000018470                 MOV             W26, WZR
.text:0000000000018474 loc_18474                               ; CODE XREF: sheif_bsearch:loc_184C0↓j
.text:0000000000018474                 SUB             W27, W24, #1
.text:0000000000018478                 CMP             W26, W27
.text:000000000001847C                 B.GT            loc_184C8
.text:0000000000018480 loc_18480                               ; CODE XREF: sheif_bsearch+80↓j
.text:0000000000018480                 ADD             W8, W26, W27
.text:0000000000018484                 CMP             W8, #0
.text:0000000000018488                 CINC            W8, W8, LT
.text:000000000001848C                 ASR             W24, W8, #1
.text:0000000000018490                 MUL             W8, W24, W22
.text:0000000000018494                 MOV             X0, X21
.text:0000000000018498                 MOV             X2, X19
.text:000000000001849C                 ADD             X25, X23, X8
.text:00000000000184A0                 MOV             X1, X25
.text:00000000000184A4                 BLR             X20
.text:00000000000184A8                 CMP             W0, #1
.text:00000000000184AC                 B.LT            loc_184C0
.text:00000000000184B0                 ADD             W26, W24, #1
.text:00000000000184B4                 CMP             W24, W27
.text:00000000000184B8                 B.LT            loc_18480
.text:00000000000184BC                 B               loc_184C8
.text:00000000000184C0 ; ---------------------------------------------------------------------------
.text:00000000000184C0 loc_184C0                               ; CODE XREF: sheif_bsearch+74↑j
.text:00000000000184C0                 CBNZ            W0, loc_18474
.text:00000000000184C4                 B               loc_184CC
.text:00000000000184C8 ; ---------------------------------------------------------------------------
.text:00000000000184C8 loc_184C8                               ; CODE XREF: sheif_bsearch+1C↑j
.text:00000000000184C8                                         ; sheif_bsearch+44↑j ...
.text:00000000000184C8                 MOV             X25, XZR
.text:00000000000184CC loc_184CC                               ; CODE XREF: sheif_bsearch+8C↑j
.text:00000000000184CC                 MOV             X0, X25
.text:00000000000184D0                 LDP             X29, X30, [SP,#0x50+var_s0]
.text:00000000000184D4                 LDP             X20, X19, [SP,#0x50+var_10]
.text:00000000000184D8                 LDP             X22, X21, [SP,#0x50+var_20]
.text:00000000000184DC                 LDP             X24, X23, [SP,#0x50+var_30]
.text:00000000000184E0                 LDP             X26, X25, [SP,#0x50+var_40]
.text:00000000000184E4                 LDR             X27, [SP+0x50+var_50],#0x60
.text:00000000000184E8                 RET
.text:00000000000184E8 ; } // starts at 18438
.text:00000000000184E8 ; End of function sheif_bsearch
.text:00000000000184E8 ; ---------------------------------------------------------------------------
.text:00000000000184EC                 ALIGN 0x10
.text:00000000000184F0 ; =============== S U B R O U T I N E =======================================
.text:00000000000184F0                 EXPORT sheifd_find_itemIndex
.text:00000000000184F0 sheifd_find_itemIndex                   ; DATA XREF: LOAD:0000000000001EA8↑o
.text:00000000000184F0 ; __unwind {
.text:00000000000184F0                 CBZ             X0, loc_18508
.text:00000000000184F4                 LDRH            W8, [X0]
.text:00000000000184F8                 CMP             W8, W2
.text:00000000000184FC                 B.LS            loc_18510
.text:0000000000018500                 MOV             W0, #0xFFFFFFFF
.text:0000000000018504                 RET
.text:0000000000018508 ; ---------------------------------------------------------------------------
.text:0000000000018508 loc_18508                               ; CODE XREF: sheifd_find_itemIndex↑j
.text:0000000000018508                 MOV             W0, #0xFFFFFFFF
.text:000000000001850C                 RET
.text:0000000000018510 ; ---------------------------------------------------------------------------
.text:0000000000018510 loc_18510                               ; CODE XREF: sheifd_find_itemIndex+C↑j
.text:0000000000018510                 CMP             W2, #1
.text:0000000000018514                 B.LT            loc_18548
.text:0000000000018518                 CMP             W2, W1
.text:000000000001851C                 B.GE            loc_18548
.text:0000000000018520                 SXTW            X9, W2
.text:0000000000018524                 SUB             X9, X9, #1
.text:0000000000018528                 MOV             W10, #0x50 ; 'P'
.text:000000000001852C                 MUL             X10, X9, X10
.text:0000000000018530                 LDRH            W10, [X0,X10]
.text:0000000000018534                 CMP             W10, W2
.text:0000000000018538                 B.NE            loc_18548
.text:000000000001853C                 MOV             W0, WZR
.text:0000000000018540                 STR             W9, [X3]
.text:0000000000018544                 RET
.text:0000000000018548 ; ---------------------------------------------------------------------------
.text:0000000000018548 loc_18548                               ; CODE XREF: sheifd_find_itemIndex+24↑j
.text:0000000000018548                                         ; sheifd_find_itemIndex+2C↑j ...
.text:0000000000018548                 CMP             W2, W1
.text:000000000001854C                 B.LT            loc_18574
.text:0000000000018550                 SUB             W9, W2, W8
.text:0000000000018554                 MOV             W10, #0x50 ; 'P'
.text:0000000000018558                 UMULL           X10, W9, W10
.text:000000000001855C                 LDRH            W10, [X0,X10]
.text:0000000000018560                 CMP             W10, W2
.text:0000000000018564                 B.NE            loc_18574
.text:0000000000018568                 MOV             W0, WZR
.text:000000000001856C                 STR             W9, [X3]
.text:0000000000018570                 RET
.text:0000000000018574 ; ---------------------------------------------------------------------------
.text:0000000000018574 loc_18574                               ; CODE XREF: sheifd_find_itemIndex+5C↑j
.text:0000000000018574                                         ; sheifd_find_itemIndex+74↑j
.text:0000000000018574                 CMP             W1, #1
.text:0000000000018578                 B.LT            loc_1858C
.text:000000000001857C                 CMP             W8, W2
.text:0000000000018580                 B.NE            loc_18594
.text:0000000000018584                 MOV             W8, WZR
.text:0000000000018588                 B               loc_185BC
.text:000000000001858C ; ---------------------------------------------------------------------------
.text:000000000001858C loc_1858C                               ; CODE XREF: sheifd_find_itemIndex+88↑j
.text:000000000001858C                 MOV             W8, WZR
.text:0000000000018590                 B               loc_185C8
.text:0000000000018594 ; ---------------------------------------------------------------------------
.text:0000000000018594 loc_18594                               ; CODE XREF: sheifd_find_itemIndex+90↑j
.text:0000000000018594                 MOV             X10, XZR
.text:0000000000018598                 ADD             X9, X0, #0x50 ; 'P'
.text:000000000001859C                 SXTW            X11, W1
.text:00000000000185A0 loc_185A0                               ; CODE XREF: sheifd_find_itemIndex+C8↓j
.text:00000000000185A0                 ADD             X8, X10, #1
.text:00000000000185A4                 CMP             X8, X11
.text:00000000000185A8                 B.GE            loc_185C4
.text:00000000000185AC                 LDRH            W12, [X9],#0x50
.text:00000000000185B0                 MOV             X10, X8
.text:00000000000185B4                 CMP             W12, W2
.text:00000000000185B8                 B.NE            loc_185A0
.text:00000000000185BC loc_185BC                               ; CODE XREF: sheifd_find_itemIndex+98↑j
.text:00000000000185BC                 STR             W8, [X3]
.text:00000000000185C0                 B               loc_185C8
.text:00000000000185C4 ; ---------------------------------------------------------------------------
.text:00000000000185C4 loc_185C4                               ; CODE XREF: sheifd_find_itemIndex+B8↑j
.text:00000000000185C4                 ADD             W8, W10, #1
.text:00000000000185C8 loc_185C8                               ; CODE XREF: sheifd_find_itemIndex+A0↑j
.text:00000000000185C8                                         ; sheifd_find_itemIndex+D0↑j
.text:00000000000185C8                 CMP             W8, W1
.text:00000000000185CC                 CSETM           W0, EQ
.text:00000000000185D0                 RET
.text:00000000000185D0 ; } // starts at 184F0
.text:00000000000185D0 ; End of function sheifd_find_itemIndex
.text:00000000000185D0 ; ---------------------------------------------------------------------------
.text:00000000000185D4                 ALIGN 8
.text:00000000000185D8 ; =============== S U B R O U T I N E =======================================
.text:00000000000185D8 ; Attributes: bp-based frame
.text:00000000000185D8                 EXPORT sheifm_atom_ftyp
.text:00000000000185D8 sheifm_atom_ftyp                        ; CODE XREF: .sheifm_atom_ftyp+C↓j
.text:00000000000185D8                                         ; DATA XREF: LOAD:0000000000001830↑o ...
.text:00000000000185D8 var_30          = -0x30
.text:00000000000185D8 var_2C          = -0x2C
.text:00000000000185D8 var_28          = -0x28
.text:00000000000185D8 var_20          = -0x20
.text:00000000000185D8 var_10          = -0x10
.text:00000000000185D8 var_s0          =  0
.text:00000000000185D8 ; __unwind {
.text:00000000000185D8                 SUB             SP, SP, #0x40
.text:00000000000185DC                 STR             X21, [SP,#0x30+var_20]
.text:00000000000185E0                 STP             X20, X19, [SP,#0x30+var_10]
.text:00000000000185E4                 STP             X29, X30, [SP,#0x30+var_s0]
.text:00000000000185E8                 ADD             X29, SP, #0x30
.text:00000000000185EC                 MRS             X21, #3, c13, c0, #2
.text:00000000000185F0                 MOV             W9, #0x7466
.text:00000000000185F4                 LDR             X8, [X21,#0x28]
.text:00000000000185F8                 MOVK            W9, #0x7079,LSL#16
.text:00000000000185FC                 STR             X8, [SP,#0x30+var_28]
.text:0000000000018600                 STP             W9, WZR, [SP,#0x30+var_30]
.text:0000000000018604                 CBZ             X1, loc_18708
.text:0000000000018608                 LDR             W8, [X1]
.text:000000000001860C                 MOV             X20, X1
.text:0000000000018610                 MOV             X19, X0
.text:0000000000018614                 CBZ             W8, loc_18728
.text:0000000000018618                 LDR             W8, [X20,#0x2C]
.text:000000000001861C                 LDR             W9, [X19,#0x48]
.text:0000000000018620                 LSL             W8, W8, #2
.text:0000000000018624                 ADD             W8, W8, #0x10
.text:0000000000018628                 CMP             W9, W8
.text:000000000001862C                 STR             W8, [SP,#0x30+var_2C]
.text:0000000000018630                 B.LT            loc_18780
.text:0000000000018634                 ADD             X0, SP, #0x30+var_2C
.text:0000000000018638                 BL              .sheif_conv_u32
.text:000000000001863C                 LDR             X8, [X19,#0x40]
.text:0000000000018640                 LDP             W11, W9, [SP,#0x30+var_30]
.text:0000000000018644                 STR             W9, [X8]
.text:0000000000018648                 LDR             X8, [X19,#0x40]
.text:000000000001864C                 LDR             W9, [X19,#0x48]
.text:0000000000018650                 ADD             X10, X8, #4
.text:0000000000018654                 SUB             W9, W9, #4
.text:0000000000018658                 STR             X10, [X19,#0x40]
.text:000000000001865C                 STR             W9, [X19,#0x48]
.text:0000000000018660                 STR             W11, [X8,#4]
.text:0000000000018664                 LDR             X8, [X19,#0x40]
.text:0000000000018668                 LDR             W9, [X19,#0x48]
.text:000000000001866C                 ADD             X10, X8, #4
.text:0000000000018670                 SUB             W9, W9, #4
.text:0000000000018674                 STR             X10, [X19,#0x40]
.text:0000000000018678                 STR             W9, [X19,#0x48]
.text:000000000001867C                 LDR             W9, [X20,#4]
.text:0000000000018680                 STR             W9, [X8,#4]
.text:0000000000018684                 LDR             X8, [X19,#0x40]
.text:0000000000018688                 LDR             W9, [X19,#0x48]
.text:000000000001868C                 ADD             X10, X8, #4
.text:0000000000018690                 SUB             W9, W9, #4
.text:0000000000018694                 STR             X10, [X19,#0x40]
.text:0000000000018698                 STR             W9, [X19,#0x48]
.text:000000000001869C                 LDR             W9, [X20,#8]
.text:00000000000186A0                 STR             W9, [X8,#4]
.text:00000000000186A4                 LDR             X8, [X19,#0x40]
.text:00000000000186A8                 LDR             W9, [X19,#0x48]
.text:00000000000186AC                 ADD             X8, X8, #4
.text:00000000000186B0                 SUB             W9, W9, #4
.text:00000000000186B4                 STR             X8, [X19,#0x40]
.text:00000000000186B8                 STR             W9, [X19,#0x48]
.text:00000000000186BC                 LDR             W9, [X20,#0x2C]
.text:00000000000186C0                 CMP             W9, #1
.text:00000000000186C4                 B.LT            loc_18700
.text:00000000000186C8                 MOV             X9, XZR
.text:00000000000186CC                 ADD             X10, X20, #0xC
.text:00000000000186D0 loc_186D0                               ; CODE XREF: sheifm_atom_ftyp+124↓j
.text:00000000000186D0                 LDR             W11, [X10],#4
.text:00000000000186D4                 STR             W11, [X8]
.text:00000000000186D8                 ADD             X9, X9, #1
.text:00000000000186DC                 LDR             X8, [X19,#0x40]
.text:00000000000186E0                 LDR             W11, [X19,#0x48]
.text:00000000000186E4                 ADD             X8, X8, #4
.text:00000000000186E8                 SUB             W11, W11, #4
.text:00000000000186EC                 STR             X8, [X19,#0x40]
.text:00000000000186F0                 STR             W11, [X19,#0x48]
.text:00000000000186F4                 LDRSW           X11, [X20,#0x2C]
.text:00000000000186F8                 CMP             X9, X11
.text:00000000000186FC                 B.LT            loc_186D0
.text:0000000000018700 loc_18700                               ; CODE XREF: sheifm_atom_ftyp+EC↑j
.text:0000000000018700                 MOV             W0, WZR
.text:0000000000018704                 B               loc_18784
.text:0000000000018708 ; ---------------------------------------------------------------------------
.text:0000000000018708 loc_18708                               ; CODE XREF: sheifm_atom_ftyp+2C↑j
.text:0000000000018708                 ADRP            X1, #aSheifmAtom@PAGE ; "sheifm_atom"
.text:000000000001870C                 ADRP            X2, #aInvalidArgumen@PAGE ; "invalid argument, init_dsc is NULL"
.text:0000000000018710                 ADD             X1, X1, #aSheifmAtom@PAGEOFF ; "sheifm_atom"
.text:0000000000018714                 ADD             X2, X2, #aInvalidArgumen@PAGEOFF ; "invalid argument, init_dsc is NULL"
.text:0000000000018718                 MOV             W0, #6
.text:000000000001871C                 BL              .__android_log_print
.text:0000000000018720                 MOV             W0, #0xFFFFFFFF
.text:0000000000018724                 B               loc_18784
.text:0000000000018728 ; ---------------------------------------------------------------------------
.text:0000000000018728 loc_18728                               ; CODE XREF: sheifm_atom_ftyp+3C↑j
.text:0000000000018728                 ADRP            X20, #xmmword_1C008@PAGE
.text:000000000001872C                 ADD             X20, X20, #xmmword_1C008@PAGEOFF
.text:0000000000018730                 MOV             W8, #0x18
.text:0000000000018734                 MOV             X0, X20
.text:0000000000018738                 STR             W8, [X20]
.text:000000000001873C                 BL              .sheif_conv_u32
.text:0000000000018740                 LDR             W8, [X19,#0x48]
.text:0000000000018744                 CMP             W8, #0x18
.text:0000000000018748                 B.CC            loc_18780
.text:000000000001874C                 LDR             X8, [X19,#0x40]
.text:0000000000018750                 MOV             W0, WZR
.text:0000000000018754                 LDR             X9, [X20,#(qword_1C018 - 0x1C008)]
.text:0000000000018758                 LDR             Q0, [X20]
.text:000000000001875C                 STR             X9, [X8,#0x10]
.text:0000000000018760                 STR             Q0, [X8]
.text:0000000000018764                 LDR             X8, [X19,#0x40]
.text:0000000000018768                 LDR             W9, [X19,#0x48]
.text:000000000001876C                 ADD             X8, X8, #0x18
.text:0000000000018770                 SUB             W9, W9, #0x18
.text:0000000000018774                 STR             X8, [X19,#0x40]
.text:0000000000018778                 STR             W9, [X19,#0x48]
.text:000000000001877C                 B               loc_18784
.text:0000000000018780 ; ---------------------------------------------------------------------------
.text:0000000000018780 loc_18780                               ; CODE XREF: sheifm_atom_ftyp+58↑j
.text:0000000000018780                                         ; sheifm_atom_ftyp+170↑j
.text:0000000000018780                 MOV             W0, #0xFFFFFFFC
.text:0000000000018784 loc_18784                               ; CODE XREF: sheifm_atom_ftyp+12C↑j
.text:0000000000018784                                         ; sheifm_atom_ftyp+14C↑j ...
.text:0000000000018784                 LDR             X8, [X21,#0x28]
.text:0000000000018788                 LDR             X9, [SP,#0x30+var_28]
.text:000000000001878C                 CMP             X8, X9
.text:0000000000018790                 B.NE            loc_187A8
.text:0000000000018794                 LDP             X29, X30, [SP,#0x30+var_s0]
.text:0000000000018798                 LDP             X20, X19, [SP,#0x30+var_10]
.text:000000000001879C                 LDR             X21, [SP,#0x30+var_20]
.text:00000000000187A0                 ADD             SP, SP, #0x40 ; '@'
.text:00000000000187A4                 RET
.text:00000000000187A8 ; ---------------------------------------------------------------------------
.text:00000000000187A8 loc_187A8                               ; CODE XREF: sheifm_atom_ftyp+1B8↑j
.text:00000000000187A8                 BL              .__stack_chk_fail
.text:00000000000187A8 ; } // starts at 185D8
.text:00000000000187A8 ; End of function sheifm_atom_ftyp
.text:00000000000187A8 ; ---------------------------------------------------------------------------
.text:00000000000187AC                 ALIGN 0x10
.text:00000000000187B0 ; =============== S U B R O U T I N E =======================================
.text:00000000000187B0                 EXPORT sheifm_atom_size
.text:00000000000187B0 sheifm_atom_size                        ; DATA XREF: LOAD:0000000000001788↑o
.text:00000000000187B0 ; __unwind {
.text:00000000000187B0                 ADD             X9, X0, #8
.text:00000000000187B4                 LSR             X9, X9, #0x20 ; ' '
.text:00000000000187B8                 MOV             W8, #8
.text:00000000000187BC                 CMP             X9, #0
.text:00000000000187C0                 MOV             W9, #0x10
.text:00000000000187C4                 CSEL            X8, X9, X8, NE
.text:00000000000187C8                 ADD             X0, X8, X0
.text:00000000000187CC                 RET
.text:00000000000187CC ; } // starts at 187B0
.text:00000000000187CC ; End of function sheifm_atom_size
.text:00000000000187D0 ; =============== S U B R O U T I N E =======================================
.text:00000000000187D0                 EXPORT sheifm_atomf_size
.text:00000000000187D0 sheifm_atomf_size                       ; DATA XREF: LOAD:0000000000001DE8↑o
.text:00000000000187D0 ; __unwind {
.text:00000000000187D0                 ADD             X9, X0, #8
.text:00000000000187D4                 LSR             X9, X9, #0x20 ; ' '
.text:00000000000187D8                 MOV             W8, #8
.text:00000000000187DC                 CMP             X9, #0
.text:00000000000187E0                 MOV             W9, #0x10
.text:00000000000187E4                 CSEL            X8, X9, X8, NE
.text:00000000000187E8                 ADD             X8, X0, X8
.text:00000000000187EC                 ADD             X0, X8, #4
.text:00000000000187F0                 RET
.text:00000000000187F0 ; } // starts at 187D0
.text:00000000000187F0 ; End of function sheifm_atomf_size
.text:00000000000187F0 ; ---------------------------------------------------------------------------
.text:00000000000187F4                 ALIGN 8
.text:00000000000187F8 ; =============== S U B R O U T I N E =======================================
.text:00000000000187F8 ; Attributes: bp-based frame
.text:00000000000187F8                 EXPORT sheifm_atom_header
.text:00000000000187F8 sheifm_atom_header                      ; CODE XREF: .sheifm_atom_header+C↓j
.text:00000000000187F8                                         ; DATA XREF: LOAD:0000000000001248↑o ...
.text:00000000000187F8 var_50          = -0x50
.text:00000000000187F8 var_48          = -0x48
.text:00000000000187F8 var_40          = -0x40
.text:00000000000187F8 var_3C          = -0x3C
.text:00000000000187F8 var_3A          = -0x3A
.text:00000000000187F8 var_38          = -0x38
.text:00000000000187F8 var_30          = -0x30
.text:00000000000187F8 var_20          = -0x20
.text:00000000000187F8 var_10          = -0x10
.text:00000000000187F8 var_s0          =  0
.text:00000000000187F8 ; __unwind {
.text:00000000000187F8                 SUB             SP, SP, #0x60
.text:00000000000187FC                 STR             X23, [SP,#0x50+var_30]
.text:0000000000018800                 STP             X22, X21, [SP,#0x50+var_20]
.text:0000000000018804                 STP             X20, X19, [SP,#0x50+var_10]
.text:0000000000018808                 STP             X29, X30, [SP,#0x50+var_s0]
.text:000000000001880C                 ADD             X29, SP, #0x50
.text:0000000000018810                 MRS             X22, #3, c13, c0, #2
.text:0000000000018814                 MOV             W9, #0x10
.text:0000000000018818                 LDR             X8, [X22,#0x28]
.text:000000000001881C                 MOV             X19, X0
.text:0000000000018820                 MOV             X0, SP
.text:0000000000018824                 MOV             X20, X6
.text:0000000000018828                 MOV             W21, W4
.text:000000000001882C                 STR             X8, [SP,#0x50+var_38]
.text:0000000000018830                 ADD             X8, X2, #8
.text:0000000000018834                 LSR             X8, X8, #0x20 ; ' '
.text:0000000000018838                 STRB            W5, [SP,#0x50+var_40]
.text:000000000001883C                 CMP             X8, #0
.text:0000000000018840                 MOV             W8, #8
.text:0000000000018844                 CSEL            X8, X9, X8, NE
.text:0000000000018848                 ADD             X9, X2, #4
.text:000000000001884C                 CMP             W4, #0
.text:0000000000018850                 CSEL            X9, X9, X2, NE
.text:0000000000018854                 ADD             X8, X9, X8
.text:0000000000018858                 LSR             X23, X8, #0x20 ; ' '
.text:000000000001885C                 CMP             X23, #0
.text:0000000000018860                 CSINC           W9, W8, WZR, EQ
.text:0000000000018864                 STR             X8, [SP,#0x50+var_48]
.text:0000000000018868                 STP             W9, W1, [SP,#0x50+var_50]
.text:000000000001886C                 BL              .sheif_conv_u32
.text:0000000000018870                 LDR             W8, [X19,#0x48]
.text:0000000000018874                 CMP             W8, #8
.text:0000000000018878                 B.CC            loc_1894C
.text:000000000001887C                 LDR             X8, [X19,#0x40]
.text:0000000000018880                 LDR             X9, [SP,#0x50+var_50]
.text:0000000000018884                 STR             X9, [X8]
.text:0000000000018888                 LDR             X8, [X19,#0x40]
.text:000000000001888C                 LDR             W9, [X19,#0x48]
.text:0000000000018890                 ADD             X8, X8, #8
.text:0000000000018894                 SUB             W9, W9, #8
.text:0000000000018898                 STR             X8, [X19,#0x40]
.text:000000000001889C                 STR             W9, [X19,#0x48]
.text:00000000000188A0                 CBZ             X23, loc_188DC
.text:00000000000188A4                 ADD             X0, SP, #0x50+var_48
.text:00000000000188A8                 BL              .sheif_conv_u64
.text:00000000000188AC                 LDR             W8, [X19,#0x48]
.text:00000000000188B0                 CMP             W8, #8
.text:00000000000188B4                 B.CC            loc_1894C
.text:00000000000188B8                 LDR             X8, [X19,#0x40]
.text:00000000000188BC                 LDR             X9, [SP,#0x50+var_48]
.text:00000000000188C0                 STR             X9, [X8]
.text:00000000000188C4                 LDR             X8, [X19,#0x40]
.text:00000000000188C8                 LDR             W9, [X19,#0x48]
.text:00000000000188CC                 ADD             X8, X8, #8
.text:00000000000188D0                 SUB             W9, W9, #8
.text:00000000000188D4                 STR             X8, [X19,#0x40]
.text:00000000000188D8                 STR             W9, [X19,#0x48]
.text:00000000000188DC loc_188DC                               ; CODE XREF: sheifm_atom_header+A8↑j
.text:00000000000188DC                 CBZ             W21, loc_18978
.text:00000000000188E0                 CMP             W9, #4
.text:00000000000188E4                 STRB            WZR, [SP,#0x50+var_3A]
.text:00000000000188E8                 STRH            WZR, [SP,#0x50+var_3C]
.text:00000000000188EC                 B.CC            loc_1894C
.text:00000000000188F0                 LDRB            W9, [SP,#0x50+var_40]
.text:00000000000188F4                 CMP             X20, #0
.text:00000000000188F8                 ADD             X10, SP, #0x50+var_3C
.text:00000000000188FC                 CSEL            X10, X10, X20, EQ
.text:0000000000018900                 MOV             W0, WZR
.text:0000000000018904                 STRB            W9, [X8]
.text:0000000000018908                 LDR             X8, [X19,#0x40]
.text:000000000001890C                 LDR             W9, [X19,#0x48]
.text:0000000000018910                 ADD             X11, X8, #1
.text:0000000000018914                 SUB             W9, W9, #1
.text:0000000000018918                 STR             X11, [X19,#0x40]
.text:000000000001891C                 STR             W9, [X19,#0x48]
.text:0000000000018920                 LDRB            W9, [X10,#2]
.text:0000000000018924                 LDRH            W10, [X10]
.text:0000000000018928                 STRB            W9, [X8,#3]
.text:000000000001892C                 STURH           W10, [X8,#1]
.text:0000000000018930                 LDR             X8, [X19,#0x40]
.text:0000000000018934                 LDR             W9, [X19,#0x48]
.text:0000000000018938                 ADD             X8, X8, #3
.text:000000000001893C                 SUB             W9, W9, #3
.text:0000000000018940                 STR             X8, [X19,#0x40]
.text:0000000000018944                 STR             W9, [X19,#0x48]
.text:0000000000018948                 B               loc_18950
.text:000000000001894C ; ---------------------------------------------------------------------------
.text:000000000001894C loc_1894C                               ; CODE XREF: sheifm_atom_header+80↑j
.text:000000000001894C                                         ; sheifm_atom_header+BC↑j ...
.text:000000000001894C                 MOV             W0, #0xFFFFFFFC
.text:0000000000018950 loc_18950                               ; CODE XREF: sheifm_atom_header+150↑j
.text:0000000000018950                                         ; sheifm_atom_header+184↓j
.text:0000000000018950                 LDR             X8, [X22,#0x28]
.text:0000000000018954                 LDR             X9, [SP,#0x50+var_38]
.text:0000000000018958                 CMP             X8, X9
.text:000000000001895C                 B.NE            loc_18980
.text:0000000000018960                 LDP             X29, X30, [SP,#0x50+var_s0]
.text:0000000000018964                 LDP             X20, X19, [SP,#0x50+var_10]
.text:0000000000018968                 LDP             X22, X21, [SP,#0x50+var_20]
.text:000000000001896C                 LDR             X23, [SP,#0x50+var_30]
.text:0000000000018970                 ADD             SP, SP, #0x60 ; '`'
.text:0000000000018974                 RET
.text:0000000000018978 ; ---------------------------------------------------------------------------
.text:0000000000018978 loc_18978                               ; CODE XREF: sheifm_atom_header:loc_188DC↑j
.text:0000000000018978                 MOV             W0, WZR
.text:000000000001897C                 B               loc_18950
.text:0000000000018980 ; ---------------------------------------------------------------------------
.text:0000000000018980 loc_18980                               ; CODE XREF: sheifm_atom_header+164↑j
.text:0000000000018980                 BL              .__stack_chk_fail
.text:0000000000018980 ; } // starts at 187F8
.text:0000000000018980 ; End of function sheifm_atom_header
.text:0000000000018980 ; ---------------------------------------------------------------------------
.text:0000000000018984                 ALIGN 8
.text:0000000000018988 ; =============== S U B R O U T I N E =======================================
.text:0000000000018988 ; Attributes: bp-based frame
.text:0000000000018988                 EXPORT atom_dump_iinf
.text:0000000000018988 atom_dump_iinf                          ; DATA XREF: LOAD:0000000000001D58↑o
.text:0000000000018988                                         ; .data:000000000001C088↓o
.text:0000000000018988 var_48          = -0x48
.text:0000000000018988 var_40          = -0x40
.text:0000000000018988 var_28          = -0x28
.text:0000000000018988 var_20          = -0x20
.text:0000000000018988 var_10          = -0x10
.text:0000000000018988 var_s0          =  0
.text:0000000000018988 ; __unwind {
.text:0000000000018988                 SUB             SP, SP, #0x60
.text:000000000001898C                 STP             X22, X21, [SP,#0x50+var_20]
.text:0000000000018990                 STP             X20, X19, [SP,#0x50+var_10]
.text:0000000000018994                 STP             X29, X30, [SP,#0x50+var_s0]
.text:0000000000018998                 ADD             X29, SP, #0x50
.text:000000000001899C                 MRS             X21, #3, c13, c0, #2
.text:00000000000189A0                 ADD             X0, SP, #0x50+var_48
.text:00000000000189A4                 LDR             X8, [X21,#0x28]
.text:00000000000189A8                 MOV             X19, X2
.text:00000000000189AC                 STR             X8, [SP,#0x50+var_28]
.text:00000000000189B0                 LDR             W8, [X2,#0x1994]
.text:00000000000189B4                 STRH            W8, [SP,#0x50+var_48]
.text:00000000000189B8                 BL              .sheif_conv_u16
.text:00000000000189BC                 LDR             W8, [X19,#0x48]
.text:00000000000189C0                 CMP             W8, #2
.text:00000000000189C4                 B.CC            loc_18A30
.text:00000000000189C8                 LDR             X8, [X19,#0x40]
.text:00000000000189CC                 MOV             W10, #0x1990
.text:00000000000189D0                 LDRH            W9, [SP,#0x50+var_48]
.text:00000000000189D4                 ADD             X20, X19, X10
.text:00000000000189D8                 ADD             X1, SP, #0x50+var_40
.text:00000000000189DC                 MOV             X0, X20
.text:00000000000189E0                 STRH            W9, [X8]
.text:00000000000189E4                 LDR             X8, [X19,#0x40]
.text:00000000000189E8                 LDR             W9, [X19,#0x48]
.text:00000000000189EC                 ADD             X8, X8, #2
.text:00000000000189F0                 SUB             W9, W9, #2
.text:00000000000189F4                 STR             X8, [X19,#0x40]
.text:00000000000189F8                 STR             W9, [X19,#0x48]
.text:00000000000189FC                 BL              .sheif_mblk_elem_first
.text:0000000000018A00                 CBZ             X0, loc_18A14
.text:0000000000018A04 loc_18A04                               ; CODE XREF: atom_dump_iinf+88↓j
.text:0000000000018A04                 ADD             X1, SP, #0x50+var_40
.text:0000000000018A08                 MOV             X0, X20
.text:0000000000018A0C                 BL              .sheif_mblk_elem_next
.text:0000000000018A10                 CBNZ            X0, loc_18A04
.text:0000000000018A14 loc_18A14                               ; CODE XREF: atom_dump_iinf+78↑j
.text:0000000000018A14                 LDR             W22, [X19,#0x1994]
.text:0000000000018A18                 MOV             X0, X20
.text:0000000000018A1C                 MOV             X1, X19
.text:0000000000018A20                 BL              .sheif_mblk_dump_size
.text:0000000000018A24                 CMP             W22, W0
.text:0000000000018A28                 CSETM           W0, NE
.text:0000000000018A2C                 B               loc_18A34
.text:0000000000018A30 ; ---------------------------------------------------------------------------
.text:0000000000018A30 loc_18A30                               ; CODE XREF: atom_dump_iinf+3C↑j
.text:0000000000018A30                 MOV             W0, #0xFFFFFFFC
.text:0000000000018A34 loc_18A34                               ; CODE XREF: atom_dump_iinf+A4↑j
.text:0000000000018A34                 LDR             X8, [X21,#0x28]
.text:0000000000018A38                 LDR             X9, [SP,#0x50+var_28]
.text:0000000000018A3C                 CMP             X8, X9
.text:0000000000018A40                 B.NE            loc_18A58
.text:0000000000018A44                 LDP             X29, X30, [SP,#0x50+var_s0]
.text:0000000000018A48                 LDP             X20, X19, [SP,#0x50+var_10]
.text:0000000000018A4C                 LDP             X22, X21, [SP,#0x50+var_20]
.text:0000000000018A50                 ADD             SP, SP, #0x60 ; '`'
.text:0000000000018A54                 RET
.text:0000000000018A58 ; ---------------------------------------------------------------------------
.text:0000000000018A58 loc_18A58                               ; CODE XREF: atom_dump_iinf+B8↑j
.text:0000000000018A58                 BL              .__stack_chk_fail
.text:0000000000018A58 ; } // starts at 18988
.text:0000000000018A58 ; End of function atom_dump_iinf
.text:0000000000018A58 ; ---------------------------------------------------------------------------
.text:0000000000018A5C                 ALIGN 0x20
.text:0000000000018A60 ; =============== S U B R O U T I N E =======================================
.text:0000000000018A60 ; Attributes: bp-based frame
.text:0000000000018A60                 EXPORT atom_dump_ipma
.text:0000000000018A60 atom_dump_ipma                          ; DATA XREF: LOAD:00000000000018F0↑o
.text:0000000000018A60                                         ; .data:000000000001C288↓o
.text:0000000000018A60 var_48          = -0x48
.text:0000000000018A60 var_40          = -0x40
.text:0000000000018A60 var_28          = -0x28
.text:0000000000018A60 var_20          = -0x20
.text:0000000000018A60 var_10          = -0x10
.text:0000000000018A60 var_s0          =  0
.text:0000000000018A60 ; __unwind {
.text:0000000000018A60                 SUB             SP, SP, #0x60
.text:0000000000018A64                 STP             X22, X21, [SP,#0x50+var_20]
.text:0000000000018A68                 STP             X20, X19, [SP,#0x50+var_10]
.text:0000000000018A6C                 STP             X29, X30, [SP,#0x50+var_s0]
.text:0000000000018A70                 ADD             X29, SP, #0x50
.text:0000000000018A74                 MRS             X21, #3, c13, c0, #2
.text:0000000000018A78                 ADD             X0, SP, #0x50+var_48
.text:0000000000018A7C                 LDR             X8, [X21,#0x28]
.text:0000000000018A80                 MOV             X19, X2
.text:0000000000018A84                 STR             X8, [SP,#0x50+var_28]
.text:0000000000018A88                 LDR             W8, [X2,#0x1A0C]
.text:0000000000018A8C                 STR             W8, [SP,#0x50+var_48]
.text:0000000000018A90                 BL              .sheif_conv_u32
.text:0000000000018A94                 LDR             W8, [X19,#0x48]
.text:0000000000018A98                 CMP             W8, #4
.text:0000000000018A9C                 B.CC            loc_18B08
.text:0000000000018AA0                 LDR             X8, [X19,#0x40]
.text:0000000000018AA4                 MOV             W10, #0x1A08
.text:0000000000018AA8                 LDR             W9, [SP,#0x50+var_48]
.text:0000000000018AAC                 ADD             X20, X19, X10
.text:0000000000018AB0                 ADD             X1, SP, #0x50+var_40
.text:0000000000018AB4                 MOV             X0, X20
.text:0000000000018AB8                 STR             W9, [X8]
.text:0000000000018ABC                 LDR             X8, [X19,#0x40]
.text:0000000000018AC0                 LDR             W9, [X19,#0x48]
.text:0000000000018AC4                 ADD             X8, X8, #4
.text:0000000000018AC8                 SUB             W9, W9, #4
.text:0000000000018ACC                 STR             X8, [X19,#0x40]
.text:0000000000018AD0                 STR             W9, [X19,#0x48]
.text:0000000000018AD4                 BL              .sheif_mblk_elem_first
.text:0000000000018AD8                 CBZ             X0, loc_18AEC
.text:0000000000018ADC loc_18ADC                               ; CODE XREF: atom_dump_ipma+88↓j
.text:0000000000018ADC                 ADD             X1, SP, #0x50+var_40
.text:0000000000018AE0                 MOV             X0, X20
.text:0000000000018AE4                 BL              .sheif_mblk_elem_next
.text:0000000000018AE8                 CBNZ            X0, loc_18ADC
.text:0000000000018AEC loc_18AEC                               ; CODE XREF: atom_dump_ipma+78↑j
.text:0000000000018AEC                 LDR             W22, [X19,#0x1A0C]
.text:0000000000018AF0                 MOV             X0, X20
.text:0000000000018AF4                 MOV             X1, X19
.text:0000000000018AF8                 BL              .sheif_mblk_dump_size
.text:0000000000018AFC                 CMP             W22, W0
.text:0000000000018B00                 CSETM           W0, NE
.text:0000000000018B04                 B               loc_18B0C
.text:0000000000018B08 ; ---------------------------------------------------------------------------
.text:0000000000018B08 loc_18B08                               ; CODE XREF: atom_dump_ipma+3C↑j
.text:0000000000018B08                 MOV             W0, #0xFFFFFFFC
.text:0000000000018B0C loc_18B0C                               ; CODE XREF: atom_dump_ipma+A4↑j
.text:0000000000018B0C                 LDR             X8, [X21,#0x28]
.text:0000000000018B10                 LDR             X9, [SP,#0x50+var_28]
.text:0000000000018B14                 CMP             X8, X9
.text:0000000000018B18                 B.NE            loc_18B30
.text:0000000000018B1C                 LDP             X29, X30, [SP,#0x50+var_s0]
.text:0000000000018B20                 LDP             X20, X19, [SP,#0x50+var_10]
.text:0000000000018B24                 LDP             X22, X21, [SP,#0x50+var_20]
.text:0000000000018B28                 ADD             SP, SP, #0x60 ; '`'
.text:0000000000018B2C                 RET
.text:0000000000018B30 ; ---------------------------------------------------------------------------
.text:0000000000018B30 loc_18B30                               ; CODE XREF: atom_dump_ipma+B8↑j
.text:0000000000018B30                 BL              .__stack_chk_fail
.text:0000000000018B30 ; } // starts at 18A60
.text:0000000000018B30 ; End of function atom_dump_ipma
.text:0000000000018B30 ; ---------------------------------------------------------------------------
.text:0000000000018B34                 ALIGN 8
.text:0000000000018B38 ; =============== S U B R O U T I N E =======================================
.text:0000000000018B38 ; Attributes: bp-based frame
.text:0000000000018B38                 EXPORT atom_dump_iref
.text:0000000000018B38 atom_dump_iref                          ; DATA XREF: LOAD:0000000000001158↑o
.text:0000000000018B38                                         ; .data:000000000001C1C8↓o
.text:0000000000018B38 var_28          = -0x28
.text:0000000000018B38 var_20          = -0x20
.text:0000000000018B38 var_10          = -0x10
.text:0000000000018B38 var_s0          =  0
.text:0000000000018B38 ; __unwind {
.text:0000000000018B38                 SUB             SP, SP, #0x50
.text:0000000000018B3C                 STP             X22, X21, [SP,#0x40+var_20]
.text:0000000000018B40                 STP             X20, X19, [SP,#0x40+var_10]
.text:0000000000018B44                 STP             X29, X30, [SP,#0x40+var_s0]
.text:0000000000018B48                 ADD             X29, SP, #0x40
.text:0000000000018B4C                 MRS             X21, #3, c13, c0, #2
.text:0000000000018B50                 MOV             W9, #0x19B8
.text:0000000000018B54                 LDR             X8, [X21,#0x28]
.text:0000000000018B58                 ADD             X20, X2, X9
.text:0000000000018B5C                 MOV             X1, SP
.text:0000000000018B60                 MOV             X0, X20
.text:0000000000018B64                 MOV             X19, X2
.text:0000000000018B68                 STR             X8, [SP,#0x40+var_28]
.text:0000000000018B6C                 BL              .sheif_mblk_elem_first
.text:0000000000018B70                 CBZ             X0, loc_18B84
.text:0000000000018B74 loc_18B74                               ; CODE XREF: atom_dump_iref+48↓j
.text:0000000000018B74                 MOV             X1, SP
.text:0000000000018B78                 MOV             X0, X20
.text:0000000000018B7C                 BL              .sheif_mblk_elem_next
.text:0000000000018B80                 CBNZ            X0, loc_18B74
.text:0000000000018B84 loc_18B84                               ; CODE XREF: atom_dump_iref+38↑j
.text:0000000000018B84                 LDR             W22, [X19,#0x19BC]
.text:0000000000018B88                 MOV             X0, X20
.text:0000000000018B8C                 MOV             X1, X19
.text:0000000000018B90                 BL              .sheif_mblk_dump_size
.text:0000000000018B94                 LDR             X8, [X21,#0x28]
.text:0000000000018B98                 CMP             W22, W0
.text:0000000000018B9C                 LDR             X9, [SP,#0x40+var_28]
.text:0000000000018BA0                 CSETM           W0, NE
.text:0000000000018BA4                 CMP             X8, X9
.text:0000000000018BA8                 B.NE            loc_18BC0
.text:0000000000018BAC                 LDP             X29, X30, [SP,#0x40+var_s0]
.text:0000000000018BB0                 LDP             X20, X19, [SP,#0x40+var_10]
.text:0000000000018BB4                 LDP             X22, X21, [SP,#0x40+var_20]
.text:0000000000018BB8                 ADD             SP, SP, #0x50 ; 'P'
.text:0000000000018BBC                 RET
.text:0000000000018BC0 ; ---------------------------------------------------------------------------
.text:0000000000018BC0 loc_18BC0                               ; CODE XREF: atom_dump_iref+70↑j
.text:0000000000018BC0                 BL              .__stack_chk_fail
.text:0000000000018BC0 ; } // starts at 18B38
.text:0000000000018BC0 ; End of function atom_dump_iref
.text:0000000000018BC0 ; ---------------------------------------------------------------------------
.text:0000000000018BC4                 ALIGN 8
.text:0000000000018BC8 ; =============== S U B R O U T I N E =======================================
.text:0000000000018BC8 ; Attributes: bp-based frame
.text:0000000000018BC8                 EXPORT atom_dump_ipco
.text:0000000000018BC8 atom_dump_ipco                          ; DATA XREF: LOAD:00000000000014E8↑o
.text:0000000000018BC8                                         ; .data:000000000001C248↓o
.text:0000000000018BC8 var_28          = -0x28
.text:0000000000018BC8 var_20          = -0x20
.text:0000000000018BC8 var_10          = -0x10
.text:0000000000018BC8 var_s0          =  0
.text:0000000000018BC8 ; __unwind {
.text:0000000000018BC8                 SUB             SP, SP, #0x50
.text:0000000000018BCC                 STP             X22, X21, [SP,#0x40+var_20]
.text:0000000000018BD0                 STP             X20, X19, [SP,#0x40+var_10]
.text:0000000000018BD4                 STP             X29, X30, [SP,#0x40+var_s0]
.text:0000000000018BD8                 ADD             X29, SP, #0x40
.text:0000000000018BDC                 MRS             X21, #3, c13, c0, #2
.text:0000000000018BE0                 MOV             W9, #0x19E0
.text:0000000000018BE4                 LDR             X8, [X21,#0x28]
.text:0000000000018BE8                 ADD             X20, X2, X9
.text:0000000000018BEC                 MOV             X1, SP
.text:0000000000018BF0                 MOV             X0, X20
.text:0000000000018BF4                 MOV             X19, X2
.text:0000000000018BF8                 STR             X8, [SP,#0x40+var_28]
.text:0000000000018BFC                 BL              .sheif_mblk_elem_first
.text:0000000000018C00                 CBZ             X0, loc_18C14
.text:0000000000018C04 loc_18C04                               ; CODE XREF: atom_dump_ipco+48↓j
.text:0000000000018C04                 MOV             X1, SP
.text:0000000000018C08                 MOV             X0, X20
.text:0000000000018C0C                 BL              .sheif_mblk_elem_next
.text:0000000000018C10                 CBNZ            X0, loc_18C04
.text:0000000000018C14 loc_18C14                               ; CODE XREF: atom_dump_ipco+38↑j
.text:0000000000018C14                 LDR             W22, [X19,#0x19E4]
.text:0000000000018C18                 MOV             X0, X20
.text:0000000000018C1C                 MOV             X1, X19
.text:0000000000018C20                 BL              .sheif_mblk_dump_size
.text:0000000000018C24                 LDR             X8, [X21,#0x28]
.text:0000000000018C28                 CMP             W22, W0
.text:0000000000018C2C                 LDR             X9, [SP,#0x40+var_28]
.text:0000000000018C30                 CSETM           W0, NE
.text:0000000000018C34                 CMP             X8, X9
.text:0000000000018C38                 B.NE            loc_18C50
.text:0000000000018C3C                 LDP             X29, X30, [SP,#0x40+var_s0]
.text:0000000000018C40                 LDP             X20, X19, [SP,#0x40+var_10]
.text:0000000000018C44                 LDP             X22, X21, [SP,#0x40+var_20]
.text:0000000000018C48                 ADD             SP, SP, #0x50 ; 'P'
.text:0000000000018C4C                 RET
.text:0000000000018C50 ; ---------------------------------------------------------------------------
.text:0000000000018C50 loc_18C50                               ; CODE XREF: atom_dump_ipco+70↑j
.text:0000000000018C50                 BL              .__stack_chk_fail
.text:0000000000018C50 ; } // starts at 18BC8
.text:0000000000018C50 ; End of function atom_dump_ipco
.text:0000000000018C50 ; ---------------------------------------------------------------------------
.text:0000000000018C54                 ALIGN 8
.text:0000000000018C58 ; =============== S U B R O U T I N E =======================================
.text:0000000000018C58 ; Attributes: bp-based frame
.text:0000000000018C58                 EXPORT sheifm_atom_meta
.text:0000000000018C58 sheifm_atom_meta                        ; CODE XREF: .sheifm_atom_meta+C↓j
.text:0000000000018C58                                         ; DATA XREF: LOAD:0000000000001218↑o ...
.text:0000000000018C58 var_68          = -0x68
.text:0000000000018C58 var_60          = -0x60
.text:0000000000018C58 var_58          = -0x58
.text:0000000000018C58 var_50          = -0x50
.text:0000000000018C58 var_40          = -0x40
.text:0000000000018C58 var_30          = -0x30
.text:0000000000018C58 var_20          = -0x20
.text:0000000000018C58 var_10          = -0x10
.text:0000000000018C58 var_s0          =  0
.text:0000000000018C58 ; __unwind {
.text:0000000000018C58                 SUB             SP, SP, #0x80
.text:0000000000018C5C                 STP             X28, X27, [SP,#0x70+var_50]
.text:0000000000018C60                 STP             X26, X25, [SP,#0x70+var_40]
.text:0000000000018C64                 STP             X24, X23, [SP,#0x70+var_30]
.text:0000000000018C68                 STP             X22, X21, [SP,#0x70+var_20]
.text:0000000000018C6C                 STP             X20, X19, [SP,#0x70+var_10]
.text:0000000000018C70                 STP             X29, X30, [SP,#0x70+var_s0]
.text:0000000000018C74                 ADD             X29, SP, #0x70
.text:0000000000018C78                 MRS             X26, #3, c13, c0, #2
.text:0000000000018C7C                 STR             X0, [SP,#0x70+var_68]
.text:0000000000018C80                 LDR             X8, [X26,#0x28]
.text:0000000000018C84                 ADRP            X9, #dword_1C020@PAGE
.text:0000000000018C88                 MOV             X19, X1
.text:0000000000018C8C                 ADD             X20, X1, #0x10
.text:0000000000018C90                 STR             X8, [SP,#0x70+var_58]
.text:0000000000018C94                 LDR             W8, [X9,#dword_1C020@PAGEOFF]
.text:0000000000018C98                 CMN             W8, #1
.text:0000000000018C9C                 B.EQ            loc_18D54
.text:0000000000018CA0                 ADRP            X22, #dword_1C060@PAGE
.text:0000000000018CA4                 ADRP            X24, #sub_18E80@PAGE
.text:0000000000018CA8                 MOV             X23, XZR
.text:0000000000018CAC                 MOV             W28, #8
.text:0000000000018CB0                 MOV             W27, #0x10
.text:0000000000018CB4                 MOV             W21, #0xFFFFFFFF
.text:0000000000018CB8                 ADD             X22, X22, #dword_1C060@PAGEOFF
.text:0000000000018CBC                 ADD             X24, X24, #sub_18E80@PAGEOFF
.text:0000000000018CC0 loc_18CC0                               ; CODE XREF: sheifm_atom_meta+F4↓j
.text:0000000000018CC0                 LDUR            X8, [X22,#-0x10]
.text:0000000000018CC4                 CBZ             X8, loc_18CE8
.text:0000000000018CC8                 LDUR            X0, [X22,#-8]
.text:0000000000018CCC                 MOV             X1, X20
.text:0000000000018CD0                 MOV             X2, X19
.text:0000000000018CD4                 BLR             X8
.text:0000000000018CD8                 MOV             X25, X0
.text:0000000000018CDC                 LDUR            X0, [X22,#-0x28]
.text:0000000000018CE0                 CBNZ            X0, loc_18CF4
.text:0000000000018CE4                 B               loc_18D1C
.text:0000000000018CE8 ; ---------------------------------------------------------------------------
.text:0000000000018CE8 loc_18CE8                               ; CODE XREF: sheifm_atom_meta+6C↑j
.text:0000000000018CE8                 MOV             X25, XZR
.text:0000000000018CEC                 LDUR            X0, [X22,#-0x28]
.text:0000000000018CF0                 CBZ             X0, loc_18D1C
.text:0000000000018CF4 loc_18CF4                               ; CODE XREF: sheifm_atom_meta+88↑j
.text:0000000000018CF4                 ADD             X2, SP, #0x70+var_60
.text:0000000000018CF8                 STR             XZR, [SP,#0x70+var_60]
.text:0000000000018CFC                 MOV             X1, X19
.text:0000000000018D00                 MOV             X3, X24
.text:0000000000018D04                 BL              sub_18E00
.text:0000000000018D08                 LDR             X8, [SP,#0x70+var_60]
.text:0000000000018D0C                 CMP             W0, #0
.text:0000000000018D10                 CSEL            X8, X8, XZR, EQ
.text:0000000000018D14                 CBNZ            W0, loc_18DC8
.text:0000000000018D18                 ADD             X25, X8, X25
.text:0000000000018D1C loc_18D1C                               ; CODE XREF: sheifm_atom_meta+8C↑j
.text:0000000000018D1C                                         ; sheifm_atom_meta+98↑j
.text:0000000000018D1C                 LDUR            W9, [X22,#-0x3C]
.text:0000000000018D20                 ADD             X8, X25, #8
.text:0000000000018D24                 LSR             X8, X8, #0x20 ; ' '
.text:0000000000018D28                 CMP             X8, #0
.text:0000000000018D2C                 ADD             X10, X25, #4
.text:0000000000018D30                 CSEL            X8, X27, X28, NE
.text:0000000000018D34                 CMP             W9, #0
.text:0000000000018D38                 CSEL            X10, X25, X10, EQ
.text:0000000000018D3C                 LDR             W9, [X22],#0x40
.text:0000000000018D40                 ADD             X10, X10, X23
.text:0000000000018D44                 ADD             X23, X10, X8
.text:0000000000018D48                 CMN             W9, #1
.text:0000000000018D4C                 B.NE            loc_18CC0
.text:0000000000018D50                 B               loc_18D58
.text:0000000000018D54 ; ---------------------------------------------------------------------------
.text:0000000000018D54 loc_18D54                               ; CODE XREF: sheifm_atom_meta+44↑j
.text:0000000000018D54                 MOV             X23, XZR
.text:0000000000018D58 loc_18D58                               ; CODE XREF: sheifm_atom_meta+F8↑j
.text:0000000000018D58                 MOV             W1, #0x656D
.text:0000000000018D5C                 LDR             X0, [SP,#0x70+var_68]
.text:0000000000018D60                 MOVK            W1, #0x6174,LSL#16
.text:0000000000018D64                 MOV             X2, X23
.text:0000000000018D68                 MOV             W4, #1
.text:0000000000018D6C                 MOV             W5, WZR
.text:0000000000018D70                 MOV             X6, XZR
.text:0000000000018D74                 BL              .sheifm_atom_header
.text:0000000000018D78                 CBZ             W0, loc_18D84
.text:0000000000018D7C                 MOV             W21, #0xFFFFFFFF
.text:0000000000018D80                 B               loc_18DC8
.text:0000000000018D84 ; ---------------------------------------------------------------------------
.text:0000000000018D84 loc_18D84                               ; CODE XREF: sheifm_atom_meta+120↑j
.text:0000000000018D84                 ADRP            X8, #dword_1C020@PAGE
.text:0000000000018D88                 LDR             W8, [X8,#dword_1C020@PAGEOFF]
.text:0000000000018D8C                 CMN             W8, #1
.text:0000000000018D90                 B.EQ            loc_18DC4
.text:0000000000018D94                 ADRP            X22, #dword_1C020@PAGE
.text:0000000000018D98                 MOV             W21, #0xFFFFFFFF
.text:0000000000018D9C                 ADD             X22, X22, #dword_1C020@PAGEOFF
.text:0000000000018DA0 loc_18DA0                               ; CODE XREF: sheifm_atom_meta+168↓j
.text:0000000000018DA0                 MOV             X0, X22
.text:0000000000018DA4                 MOV             X1, X20
.text:0000000000018DA8                 MOV             X2, X19
.text:0000000000018DAC                 MOV             X3, XZR
.text:0000000000018DB0                 BL              sub_18FA0
.text:0000000000018DB4                 CBNZ            W0, loc_18DC8
.text:0000000000018DB8                 LDR             W8, [X22,#0x40]!
.text:0000000000018DBC                 CMN             W8, #1
.text:0000000000018DC0                 B.NE            loc_18DA0
.text:0000000000018DC4 loc_18DC4                               ; CODE XREF: sheifm_atom_meta+138↑j
.text:0000000000018DC4                 MOV             W21, WZR
.text:0000000000018DC8 loc_18DC8                               ; CODE XREF: sheifm_atom_meta+BC↑j
.text:0000000000018DC8                                         ; sheifm_atom_meta+128↑j ...
.text:0000000000018DC8                 LDR             X8, [X26,#0x28]
.text:0000000000018DCC                 LDR             X9, [SP,#0x70+var_58]
.text:0000000000018DD0                 CMP             X8, X9
.text:0000000000018DD4                 B.NE            loc_18DFC
.text:0000000000018DD8                 MOV             W0, W21
.text:0000000000018DDC                 LDP             X29, X30, [SP,#0x70+var_s0]
.text:0000000000018DE0                 LDP             X20, X19, [SP,#0x70+var_10]
.text:0000000000018DE4                 LDP             X22, X21, [SP,#0x70+var_20]
.text:0000000000018DE8                 LDP             X24, X23, [SP,#0x70+var_30]
.text:0000000000018DEC                 LDP             X26, X25, [SP,#0x70+var_40]
.text:0000000000018DF0                 LDP             X28, X27, [SP,#0x70+var_50]
.text:0000000000018DF4                 ADD             SP, SP, #0x80
.text:0000000000018DF8                 RET
.text:0000000000018DFC ; ---------------------------------------------------------------------------
.text:0000000000018DFC loc_18DFC                               ; CODE XREF: sheifm_atom_meta+17C↑j
.text:0000000000018DFC                 BL              .__stack_chk_fail
.text:0000000000018DFC ; } // starts at 18C58
.text:0000000000018DFC ; End of function sheifm_atom_meta
.text:0000000000018E00 ; =============== S U B R O U T I N E =======================================
.text:0000000000018E00 ; Attributes: bp-based frame
.text:0000000000018E00 sub_18E00                               ; CODE XREF: sheifm_atom_meta+AC↑p
.text:0000000000018E00 var_30          = -0x30
.text:0000000000018E00 var_20          = -0x20
.text:0000000000018E00 var_10          = -0x10
.text:0000000000018E00 var_s0          =  0
.text:0000000000018E00 ; __unwind {
.text:0000000000018E00                 STP             X24, X23, [SP,#-0x10+var_30]!
.text:0000000000018E04                 STP             X22, X21, [SP,#0x30+var_20]
.text:0000000000018E08                 STP             X20, X19, [SP,#0x30+var_10]
.text:0000000000018E0C                 STP             X29, X30, [SP,#0x30+var_s0]
.text:0000000000018E10                 ADD             X29, SP, #0x30
.text:0000000000018E14                 CBZ             X0, loc_18E60
.text:0000000000018E18                 LDR             W8, [X0]
.text:0000000000018E1C                 MOV             X23, X0
.text:0000000000018E20                 CMN             W8, #1
.text:0000000000018E24                 B.EQ            loc_18E60
.text:0000000000018E28                 MOV             X19, X3
.text:0000000000018E2C                 MOV             X20, X2
.text:0000000000018E30                 MOV             X22, X1
.text:0000000000018E34                 ADD             X24, X1, #0x10
.text:0000000000018E38                 MOV             W21, #0xFFFFFFFF
.text:0000000000018E3C loc_18E3C                               ; CODE XREF: sub_18E00+5C↓j
.text:0000000000018E3C                 MOV             X0, X23
.text:0000000000018E40                 MOV             X1, X24
.text:0000000000018E44                 MOV             X2, X22
.text:0000000000018E48                 MOV             X3, X20
.text:0000000000018E4C                 BLR             X19
.text:0000000000018E50                 CBNZ            W0, loc_18E64
.text:0000000000018E54                 LDR             W8, [X23,#0x40]!
.text:0000000000018E58                 CMN             W8, #1
.text:0000000000018E5C                 B.NE            loc_18E3C
.text:0000000000018E60 loc_18E60                               ; CODE XREF: sub_18E00+14↑j
.text:0000000000018E60                                         ; sub_18E00+24↑j
.text:0000000000018E60                 MOV             W21, WZR
.text:0000000000018E64 loc_18E64                               ; CODE XREF: sub_18E00+50↑j
.text:0000000000018E64                 MOV             W0, W21
.text:0000000000018E68                 LDP             X29, X30, [SP,#0x30+var_s0]
.text:0000000000018E6C                 LDP             X20, X19, [SP,#0x30+var_10]
.text:0000000000018E70                 LDP             X22, X21, [SP,#0x30+var_20]
.text:0000000000018E74                 LDP             X24, X23, [SP+0x30+var_30],#0x40
.text:0000000000018E78                 RET
.text:0000000000018E78 ; } // starts at 18E00
.text:0000000000018E78 ; End of function sub_18E00
.text:0000000000018E78 ; ---------------------------------------------------------------------------
.text:0000000000018E7C                 ALIGN 0x20
.text:0000000000018E80 ; =============== S U B R O U T I N E =======================================
.text:0000000000018E80 ; Attributes: bp-based frame
.text:0000000000018E80 sub_18E80                               ; CODE XREF: sub_18E80+88↓p
.text:0000000000018E80                                         ; sub_18FA0+E4↓p
.text:0000000000018E80                                         ; DATA XREF: ...
.text:0000000000018E80 var_50          = -0x50
.text:0000000000018E80 var_48          = -0x48
.text:0000000000018E80 var_40          = -0x40
.text:0000000000018E80 var_30          = -0x30
.text:0000000000018E80 var_20          = -0x20
.text:0000000000018E80 var_10          = -0x10
.text:0000000000018E80 var_s0          =  0
.text:0000000000018E80 ; __unwind {
.text:0000000000018E80                 SUB             SP, SP, #0x60
.text:0000000000018E84                 STR             X25, [SP,#0x50+var_40]
.text:0000000000018E88                 STP             X24, X23, [SP,#0x50+var_30]
.text:0000000000018E8C                 STP             X22, X21, [SP,#0x50+var_20]
.text:0000000000018E90                 STP             X20, X19, [SP,#0x50+var_10]
.text:0000000000018E94                 STP             X29, X30, [SP,#0x50+var_s0]
.text:0000000000018E98                 ADD             X29, SP, #0x50
.text:0000000000018E9C                 MRS             X25, #3, c13, c0, #2
.text:0000000000018EA0                 MOV             X19, X3
.text:0000000000018EA4                 LDR             X8, [X25,#0x28]
.text:0000000000018EA8                 MOV             X22, X2
.text:0000000000018EAC                 MOV             X20, X0
.text:0000000000018EB0                 STR             X8, [SP,#0x50+var_48]
.text:0000000000018EB4                 LDR             X8, [X0,#0x30]
.text:0000000000018EB8                 CBZ             X8, loc_18ED8
.text:0000000000018EBC                 LDR             X0, [X20,#0x38]
.text:0000000000018EC0                 MOV             X2, X22
.text:0000000000018EC4                 BLR             X8
.text:0000000000018EC8                 MOV             X21, X0
.text:0000000000018ECC                 LDR             X23, [X20,#0x18]
.text:0000000000018ED0                 CBNZ            X23, loc_18EE4
.text:0000000000018ED4                 B               loc_18F2C
.text:0000000000018ED8 ; ---------------------------------------------------------------------------
.text:0000000000018ED8 loc_18ED8                               ; CODE XREF: sub_18E80+38↑j
.text:0000000000018ED8                 MOV             X21, XZR
.text:0000000000018EDC                 LDR             X23, [X20,#0x18]
.text:0000000000018EE0                 CBZ             X23, loc_18F2C
.text:0000000000018EE4 loc_18EE4                               ; CODE XREF: sub_18E80+50↑j
.text:0000000000018EE4                 LDR             W8, [X23]
.text:0000000000018EE8                 STR             XZR, [SP,#0x50+var_50]
.text:0000000000018EEC                 CMN             W8, #1
.text:0000000000018EF0                 B.EQ            loc_18F24
.text:0000000000018EF4                 ADD             X24, X22, #0x10
.text:0000000000018EF8 loc_18EF8                               ; CODE XREF: sub_18E80+98↓j
.text:0000000000018EF8                 MOV             X3, SP
.text:0000000000018EFC                 MOV             X0, X23
.text:0000000000018F00                 MOV             X1, X24
.text:0000000000018F04                 MOV             X2, X22
.text:0000000000018F08                 BL              sub_18E80
.text:0000000000018F0C                 CBNZ            W0, loc_18F94
.text:0000000000018F10                 LDR             W8, [X23,#0x40]!
.text:0000000000018F14                 CMN             W8, #1
.text:0000000000018F18                 B.NE            loc_18EF8
.text:0000000000018F1C                 LDR             X8, [SP,#0x50+var_50]
.text:0000000000018F20                 B               loc_18F28
.text:0000000000018F24 ; ---------------------------------------------------------------------------
.text:0000000000018F24 loc_18F24                               ; CODE XREF: sub_18E80+70↑j
.text:0000000000018F24                 MOV             X8, XZR
.text:0000000000018F28 loc_18F28                               ; CODE XREF: sub_18E80+A0↑j
.text:0000000000018F28                 ADD             X21, X8, X21
.text:0000000000018F2C loc_18F2C                               ; CODE XREF: sub_18E80+54↑j
.text:0000000000018F2C                                         ; sub_18E80+60↑j
.text:0000000000018F2C                 ADD             X8, X21, #8
.text:0000000000018F30                 LDR             W9, [X20,#4]
.text:0000000000018F34                 LSR             X8, X8, #0x20 ; ' '
.text:0000000000018F38                 CMP             X8, #0
.text:0000000000018F3C                 MOV             W8, #8
.text:0000000000018F40                 MOV             W10, #0x10
.text:0000000000018F44                 CSEL            X8, X10, X8, NE
.text:0000000000018F48                 LDR             X10, [X19]
.text:0000000000018F4C                 CMP             W9, #0
.text:0000000000018F50                 ADD             X9, X21, #4
.text:0000000000018F54                 CSEL            X9, X21, X9, EQ
.text:0000000000018F58                 ADD             X9, X9, X10
.text:0000000000018F5C                 ADD             X8, X9, X8
.text:0000000000018F60                 MOV             W0, WZR
.text:0000000000018F64                 STR             X8, [X19]
.text:0000000000018F68 loc_18F68                               ; CODE XREF: sub_18E80+118↓j
.text:0000000000018F68                 LDR             X8, [X25,#0x28]
.text:0000000000018F6C                 LDR             X9, [SP,#0x50+var_48]
.text:0000000000018F70                 CMP             X8, X9
.text:0000000000018F74                 B.NE            loc_18F9C
.text:0000000000018F78                 LDP             X29, X30, [SP,#0x50+var_s0]
.text:0000000000018F7C                 LDP             X20, X19, [SP,#0x50+var_10]
.text:0000000000018F80                 LDP             X22, X21, [SP,#0x50+var_20]
.text:0000000000018F84                 LDP             X24, X23, [SP,#0x50+var_30]
.text:0000000000018F88                 LDR             X25, [SP,#0x50+var_40]
.text:0000000000018F8C                 ADD             SP, SP, #0x60 ; '`'
.text:0000000000018F90                 RET
.text:0000000000018F94 ; ---------------------------------------------------------------------------
.text:0000000000018F94 loc_18F94                               ; CODE XREF: sub_18E80+8C↑j
.text:0000000000018F94                 MOV             W0, #0xFFFFFFFF
.text:0000000000018F98                 B               loc_18F68
.text:0000000000018F9C ; ---------------------------------------------------------------------------
.text:0000000000018F9C loc_18F9C                               ; CODE XREF: sub_18E80+F4↑j
.text:0000000000018F9C                 BL              .__stack_chk_fail
.text:0000000000018F9C ; } // starts at 18E80
.text:0000000000018F9C ; End of function sub_18E80
.text:0000000000018FA0 ; =============== S U B R O U T I N E =======================================
.text:0000000000018FA0 ; Attributes: bp-based frame
.text:0000000000018FA0 sub_18FA0                               ; CODE XREF: sheifm_atom_meta+158↑p
.text:0000000000018FA0                                         ; sub_18FA0+1AC↓p
.text:0000000000018FA0 var_50          = -0x50
.text:0000000000018FA0 var_48          = -0x48
.text:0000000000018FA0 var_40          = -0x40
.text:0000000000018FA0 var_30          = -0x30
.text:0000000000018FA0 var_20          = -0x20
.text:0000000000018FA0 var_10          = -0x10
.text:0000000000018FA0 var_s0          =  0
.text:0000000000018FA0 ; __unwind {
.text:0000000000018FA0                 SUB             SP, SP, #0x60
.text:0000000000018FA4                 STP             X26, X25, [SP,#0x50+var_40]
.text:0000000000018FA8                 STP             X24, X23, [SP,#0x50+var_30]
.text:0000000000018FAC                 STP             X22, X21, [SP,#0x50+var_20]
.text:0000000000018FB0                 STP             X20, X19, [SP,#0x50+var_10]
.text:0000000000018FB4                 STP             X29, X30, [SP,#0x50+var_s0]
.text:0000000000018FB8                 ADD             X29, SP, #0x50
.text:0000000000018FBC                 MRS             X26, #3, c13, c0, #2
.text:0000000000018FC0                 MOV             X19, X2
.text:0000000000018FC4                 LDR             X8, [X26,#0x28]
.text:0000000000018FC8                 MOV             X21, X0
.text:0000000000018FCC                 MOV             X22, X1
.text:0000000000018FD0                 STR             X8, [SP,#0x50+var_48]
.text:0000000000018FD4                 LDRSW           X23, [X0,#0x10]
.text:0000000000018FD8                 CMP             W23, #1
.text:0000000000018FDC                 B.LT            loc_19008
.text:0000000000018FE0                 MOV             X0, X23 ; size
.text:0000000000018FE4                 BL              .malloc
.text:0000000000018FE8                 CBZ             X0, loc_190D0
.text:0000000000018FEC                 MOV             W1, WZR ; c
.text:0000000000018FF0                 MOV             X2, X23 ; n
.text:0000000000018FF4                 MOV             X20, X0
.text:0000000000018FF8                 BL              .memset
.text:0000000000018FFC                 LDR             X8, [X21,#0x20]
.text:0000000000019000                 CBNZ            X8, loc_19014
.text:0000000000019004                 B               loc_1902C
.text:0000000000019008 ; ---------------------------------------------------------------------------
.text:0000000000019008 loc_19008                               ; CODE XREF: sub_18FA0+3C↑j
.text:0000000000019008                 MOV             X20, XZR
.text:000000000001900C                 LDR             X8, [X21,#0x20]
.text:0000000000019010                 CBZ             X8, loc_1902C
.text:0000000000019014 loc_19014                               ; CODE XREF: sub_18FA0+60↑j
.text:0000000000019014                 LDR             X1, [X21,#0x38]
.text:0000000000019018                 MOV             X0, X20
.text:000000000001901C                 MOV             X2, X22
.text:0000000000019020                 MOV             X3, X19
.text:0000000000019024                 BLR             X8
.text:0000000000019028                 CBNZ            W0, loc_190C4
.text:000000000001902C loc_1902C                               ; CODE XREF: sub_18FA0+64↑j
.text:000000000001902C                                         ; sub_18FA0+70↑j
.text:000000000001902C                 LDR             X8, [X21,#0x30]
.text:0000000000019030                 CBZ             X8, loc_19054
.text:0000000000019034                 LDR             X0, [X21,#0x38]
.text:0000000000019038                 MOV             X1, X22
.text:000000000001903C                 MOV             X2, X19
.text:0000000000019040                 BLR             X8
.text:0000000000019044                 MOV             X23, X0
.text:0000000000019048                 LDR             X24, [X21,#0x18]
.text:000000000001904C                 CBNZ            X24, loc_19060
.text:0000000000019050                 B               loc_190A8
.text:0000000000019054 ; ---------------------------------------------------------------------------
.text:0000000000019054 loc_19054                               ; CODE XREF: sub_18FA0+90↑j
.text:0000000000019054                 MOV             X23, XZR
.text:0000000000019058                 LDR             X24, [X21,#0x18]
.text:000000000001905C                 CBZ             X24, loc_190A8
.text:0000000000019060 loc_19060                               ; CODE XREF: sub_18FA0+AC↑j
.text:0000000000019060                 LDR             W8, [X24]
.text:0000000000019064                 STR             XZR, [SP,#0x50+var_50]
.text:0000000000019068                 CMN             W8, #1
.text:000000000001906C                 B.EQ            loc_190A0
.text:0000000000019070                 ADD             X25, X19, #0x10
.text:0000000000019074 loc_19074                               ; CODE XREF: sub_18FA0+F4↓j
.text:0000000000019074                 MOV             X3, SP
.text:0000000000019078                 MOV             X0, X24
.text:000000000001907C                 MOV             X1, X25
.text:0000000000019080                 MOV             X2, X19
.text:0000000000019084                 BL              sub_18E80
.text:0000000000019088                 CBNZ            W0, loc_190C4
.text:000000000001908C                 LDR             W8, [X24,#0x40]!
.text:0000000000019090                 CMN             W8, #1
.text:0000000000019094                 B.NE            loc_19074
.text:0000000000019098                 LDR             X8, [SP,#0x50+var_50]
.text:000000000001909C                 B               loc_190A4
.text:00000000000190A0 ; ---------------------------------------------------------------------------
.text:00000000000190A0 loc_190A0                               ; CODE XREF: sub_18FA0+CC↑j
.text:00000000000190A0                 MOV             X8, XZR
.text:00000000000190A4 loc_190A4                               ; CODE XREF: sub_18FA0+FC↑j
.text:00000000000190A4                 ADD             X23, X8, X23
.text:00000000000190A8 loc_190A8                               ; CODE XREF: sub_18FA0+B0↑j
.text:00000000000190A8                                         ; sub_18FA0+BC↑j
.text:00000000000190A8                 LDP             W1, W4, [X21]
.text:00000000000190AC                 LDRB            W5, [X21,#8]
.text:00000000000190B0                 ADD             X6, X21, #9
.text:00000000000190B4                 MOV             X0, X22
.text:00000000000190B8                 MOV             X2, X23
.text:00000000000190BC                 BL              .sheifm_atom_header
.text:00000000000190C0                 CBZ             W0, loc_19100
.text:00000000000190C4 loc_190C4                               ; CODE XREF: sub_18FA0+88↑j
.text:00000000000190C4                                         ; sub_18FA0+E8↑j ...
.text:00000000000190C4                 CBZ             X20, loc_190D0
.text:00000000000190C8                 MOV             X0, X20 ; ptr
.text:00000000000190CC                 BL              .free
.text:00000000000190D0 loc_190D0                               ; CODE XREF: sub_18FA0+48↑j
.text:00000000000190D0                                         ; sub_18FA0:loc_190C4↑j
.text:00000000000190D0                 MOV             W0, #0xFFFFFFFF
.text:00000000000190D4 loc_190D4                               ; CODE XREF: sub_18FA0+1D0↓j
.text:00000000000190D4                 LDR             X8, [X26,#0x28]
.text:00000000000190D8                 LDR             X9, [SP,#0x50+var_48]
.text:00000000000190DC                 CMP             X8, X9
.text:00000000000190E0                 B.NE            loc_19174
.text:00000000000190E4                 LDP             X29, X30, [SP,#0x50+var_s0]
.text:00000000000190E8                 LDP             X20, X19, [SP,#0x50+var_10]
.text:00000000000190EC                 LDP             X22, X21, [SP,#0x50+var_20]
.text:00000000000190F0                 LDP             X24, X23, [SP,#0x50+var_30]
.text:00000000000190F4                 LDP             X26, X25, [SP,#0x50+var_40]
.text:00000000000190F8                 ADD             SP, SP, #0x60 ; '`'
.text:00000000000190FC                 RET
.text:0000000000019100 ; ---------------------------------------------------------------------------
.text:0000000000019100 loc_19100                               ; CODE XREF: sub_18FA0+120↑j
.text:0000000000019100                 CBZ             X23, loc_19124
.text:0000000000019104                 LDR             X8, [X21,#0x28]
.text:0000000000019108                 CBZ             X8, loc_19124
.text:000000000001910C                 LDR             X1, [X21,#0x38]
.text:0000000000019110                 MOV             X0, X20
.text:0000000000019114                 MOV             X2, X22
.text:0000000000019118                 MOV             X3, X19
.text:000000000001911C                 BLR             X8
.text:0000000000019120                 CBNZ            W0, loc_190C4
.text:0000000000019124 loc_19124                               ; CODE XREF: sub_18FA0:loc_19100↑j
.text:0000000000019124                                         ; sub_18FA0+168↑j
.text:0000000000019124                 LDR             X21, [X21,#0x18]
.text:0000000000019128                 CBZ             X21, loc_19160
.text:000000000001912C                 LDR             W8, [X21]
.text:0000000000019130                 CMN             W8, #1
.text:0000000000019134                 B.EQ            loc_19160
.text:0000000000019138                 ADD             X22, X19, #0x10
.text:000000000001913C loc_1913C                               ; CODE XREF: sub_18FA0+1BC↓j
.text:000000000001913C                 MOV             X0, X21
.text:0000000000019140                 MOV             X1, X22
.text:0000000000019144                 MOV             X2, X19
.text:0000000000019148                 MOV             X3, XZR
.text:000000000001914C                 BL              sub_18FA0
.text:0000000000019150                 CBNZ            W0, loc_190C4
.text:0000000000019154                 LDR             W8, [X21,#0x40]!
.text:0000000000019158                 CMN             W8, #1
.text:000000000001915C                 B.NE            loc_1913C
.text:0000000000019160 loc_19160                               ; CODE XREF: sub_18FA0+188↑j
.text:0000000000019160                                         ; sub_18FA0+194↑j
.text:0000000000019160                 CBZ             X20, loc_1916C
.text:0000000000019164                 MOV             X0, X20 ; ptr
.text:0000000000019168                 BL              .free
.text:000000000001916C loc_1916C                               ; CODE XREF: sub_18FA0:loc_19160↑j
.text:000000000001916C                 MOV             W0, WZR
.text:0000000000019170                 B               loc_190D4
.text:0000000000019174 ; ---------------------------------------------------------------------------
.text:0000000000019174 loc_19174                               ; CODE XREF: sub_18FA0+140↑j
.text:0000000000019174                 BL              .__stack_chk_fail
.text:0000000000019174 ; } // starts at 18FA0
.text:0000000000019174 ; End of function sub_18FA0
.text:0000000000019178 ; =============== S U B R O U T I N E =======================================
.text:0000000000019178 ; Attributes: bp-based frame
.text:0000000000019178                 EXPORT sheifm_atom_mdat
.text:0000000000019178 sheifm_atom_mdat                        ; DATA XREF: LOAD:0000000000001F50↑o
.text:0000000000019178 var_s0          =  0
.text:0000000000019178 ; __unwind {
.text:0000000000019178                 STP             X29, X30, [SP,#-0x10+var_s0]!
.text:000000000001917C                 MOV             X29, SP
.text:0000000000019180                 MOV             W8, #0x7461646D
.text:0000000000019188                 MOV             X2, X1
.text:000000000001918C                 MOV             W4, WZR
.text:0000000000019190                 MOV             W5, WZR
.text:0000000000019194                 MOV             W1, W8
.text:0000000000019198                 MOV             X6, XZR
.text:000000000001919C                 BL              .sheifm_atom_header
.text:00000000000191A0                 CMP             W0, #0
.text:00000000000191A4                 CSETM           W0, NE
.text:00000000000191A8                 LDP             X29, X30, [SP+var_s0],#0x10
.text:00000000000191AC                 RET
.text:00000000000191AC ; } // starts at 19178
.text:00000000000191AC ; End of function sheifm_atom_mdat
.text:00000000000191B0 ; ---------------------------------------------------------------------------
.text:00000000000191B0 ; __unwind {
.text:00000000000191B0                 STP             X29, X30, [SP,#-0x10]!
.text:00000000000191B4                 MOV             X29, SP
.text:00000000000191B8                 MOV             W8, #0x74636970
.text:00000000000191C0                 STR             W8, [X0,#4]!
.text:00000000000191C4                 BL              .sheif_conv_u32
.text:00000000000191C8                 MOV             W0, WZR
.text:00000000000191CC                 LDP             X29, X30, [SP],#0x10
.text:00000000000191D0                 RET
.text:00000000000191D0 ; } // starts at 191B0
.text:00000000000191D0 ; ---------------------------------------------------------------------------
.text:00000000000191D4                 ALIGN 8
.text:00000000000191D8 ; __unwind {
.text:00000000000191D8                 MOV             X8, X0
.text:00000000000191DC                 MOV             X9, X1
.text:00000000000191E0                 MOV             X0, X2
.text:00000000000191E4                 MOV             X1, X8
.text:00000000000191E8                 MOV             X2, X9
.text:00000000000191EC                 B               .sheif_rawstruct_mwrite
.text:00000000000191EC ; } // starts at 191D8
.text:00000000000191F0 ; ---------------------------------------------------------------------------
.text:00000000000191F0 ; __unwind {
.text:00000000000191F0                 CBZ             X0, locret_19208
.text:00000000000191F4                 STP             X29, X30, [SP,#-0x10]!
.text:00000000000191F8                 MOV             X29, SP
.text:00000000000191FC                 BL              .sheif_rawstruct_size
.text:0000000000019200                 SXTW            X0, W0
.text:0000000000019204                 LDP             X29, X30, [SP],#0x10
.text:0000000000019208 locret_19208                            ; CODE XREF: .text:00000000000191F0↑j
.text:0000000000019208                 RET
.text:0000000000019208 ; } // starts at 191F0
.text:0000000000019208 ; ---------------------------------------------------------------------------
.text:000000000001920C                 ALIGN 0x10
.text:0000000000019210 ; =============== S U B R O U T I N E =======================================
.text:0000000000019210 ; Attributes: bp-based frame
.text:0000000000019210 sub_19210                               ; DATA XREF: .data:000000000001C090↓o
.text:0000000000019210 var_s0          =  0
.text:0000000000019210 ; __unwind {
.text:0000000000019210                 STP             X29, X30, [SP,#-0x10+var_s0]!
.text:0000000000019214                 MOV             X29, SP
.text:0000000000019218                 MOV             W8, #0x1990
.text:000000000001921C                 ADD             X0, X1, X8
.text:0000000000019220                 BL              .sheif_mblk_total_datasize
.text:0000000000019224                 ADD             X0, X0, #2
.text:0000000000019228                 LDP             X29, X30, [SP+var_s0],#0x10
.text:000000000001922C                 RET
.text:000000000001922C ; } // starts at 19210
.text:000000000001922C ; End of function sub_19210
.text:0000000000019230 ; ---------------------------------------------------------------------------
.text:0000000000019230 ; __unwind {
.text:0000000000019230                 LDR             W9, [X2]
.text:0000000000019234                 MOV             X8, X0
.text:0000000000019238                 MOV             W0, WZR
.text:000000000001923C                 STRH            W9, [X8]
.text:0000000000019240                 RET
.text:0000000000019240 ; } // starts at 19230
.text:0000000000019240 ; ---------------------------------------------------------------------------
.text:0000000000019244                 ALIGN 8
.text:0000000000019248 ; __unwind {
.text:0000000000019248                 SUB             SP, SP, #0x60 ; '`'
.text:000000000001924C                 STP             X22, X21, [SP,#0x30]
.text:0000000000019250                 STP             X20, X19, [SP,#0x40]
.text:0000000000019254                 STP             X29, X30, [SP,#0x50]
.text:0000000000019258                 ADD             X29, SP, #0x50 ; 'P'
.text:000000000001925C                 MRS             X22, #3, c13, c0, #2
.text:0000000000019260                 ADD             X10, SP, #8
.text:0000000000019264                 LDR             X8, [X22,#0x28]
.text:0000000000019268                 ORR             X0, X10, #2
.text:000000000001926C                 MOV             X19, X2
.text:0000000000019270                 STR             X8, [SP,#0x28]
.text:0000000000019274                 MOV             W8, #0x44 ; 'D'
.text:0000000000019278                 LDR             W9, [X2,#0x1A34]
.text:000000000001927C                 STRH            W8, [SP,#8]
.text:0000000000019280                 STRH            W9, [SP,#0xA]
.text:0000000000019284                 BL              .sheif_conv_u16
.text:0000000000019288                 LDR             W8, [X19,#0x48]
.text:000000000001928C                 CMP             W8, #4
.text:0000000000019290                 B.CC            loc_1931C
.text:0000000000019294                 LDR             X8, [X19,#0x40]
.text:0000000000019298                 MOV             W10, #0x1A30
.text:000000000001929C                 LDR             W9, [SP,#8]
.text:00000000000192A0                 ADD             X20, X19, X10
.text:00000000000192A4                 ADD             X1, SP, #0x10
.text:00000000000192A8                 MOV             X0, X20
.text:00000000000192AC                 STR             W9, [X8]
.text:00000000000192B0                 LDR             X8, [X19,#0x40]
.text:00000000000192B4                 LDR             W9, [X19,#0x48]
.text:00000000000192B8                 ADD             X8, X8, #4
.text:00000000000192BC                 SUB             W9, W9, #4
.text:00000000000192C0                 STR             X8, [X19,#0x40]
.text:00000000000192C4                 STR             W9, [X19,#0x48]
.text:00000000000192C8                 BL              .sheif_mblk_elem_first
.text:00000000000192CC                 CBZ             X0, loc_19300
.text:00000000000192D0                 MOV             X21, X0
.text:00000000000192D4 loc_192D4                               ; CODE XREF: .text:00000000000192FC↓j
.text:00000000000192D4                 ADD             X0, X21, #6
.text:00000000000192D8                 BL              .sheif_conv_u16
.text:00000000000192DC                 ADD             X0, X21, #8
.text:00000000000192E0                 BL              .sheif_conv_u32
.text:00000000000192E4                 ADD             X0, X21, #0xC
.text:00000000000192E8                 BL              .sheif_conv_u32
.text:00000000000192EC                 ADD             X1, SP, #0x10
.text:00000000000192F0                 MOV             X0, X20
.text:00000000000192F4                 BL              .sheif_mblk_elem_next
.text:00000000000192F8                 MOV             X21, X0
.text:00000000000192FC                 CBNZ            X0, loc_192D4
.text:0000000000019300 loc_19300                               ; CODE XREF: .text:00000000000192CC↑j
.text:0000000000019300                 LDR             W21, [X19,#0x1A34]
.text:0000000000019304                 MOV             X0, X20
.text:0000000000019308                 MOV             X1, X19
.text:000000000001930C                 BL              .sheif_mblk_dump
.text:0000000000019310                 CMP             W21, W0
.text:0000000000019314                 CSETM           W0, NE
.text:0000000000019318                 B               loc_19320
.text:000000000001931C ; ---------------------------------------------------------------------------
.text:000000000001931C loc_1931C                               ; CODE XREF: .text:0000000000019290↑j
.text:000000000001931C                 MOV             W0, #0xFFFFFFFC
.text:0000000000019320 loc_19320                               ; CODE XREF: .text:0000000000019318↑j
.text:0000000000019320                 LDR             X8, [X22,#0x28]
.text:0000000000019324                 LDR             X9, [SP,#0x28]
.text:0000000000019328                 CMP             X8, X9
.text:000000000001932C                 B.NE            loc_19344
.text:0000000000019330                 LDP             X29, X30, [SP,#0x50]
.text:0000000000019334                 LDP             X20, X19, [SP,#0x40]
.text:0000000000019338                 LDP             X22, X21, [SP,#0x30]
.text:000000000001933C                 ADD             SP, SP, #0x60 ; '`'
.text:0000000000019340                 RET
.text:0000000000019344 ; ---------------------------------------------------------------------------
.text:0000000000019344 loc_19344                               ; CODE XREF: .text:000000000001932C↑j
.text:0000000000019344                 BL              .__stack_chk_fail
.text:0000000000019344 ; } // starts at 19248
.text:0000000000019348 ; ---------------------------------------------------------------------------
.text:0000000000019348 ; __unwind {
.text:0000000000019348                 SUB             SP, SP, #0x50 ; 'P'
.text:000000000001934C                 STR             X21, [SP,#0x20]
.text:0000000000019350                 STP             X20, X19, [SP,#0x30]
.text:0000000000019354                 STP             X29, X30, [SP,#0x40]
.text:0000000000019358                 ADD             X29, SP, #0x40 ; '@'
.text:000000000001935C                 MRS             X21, #3, c13, c0, #2
.text:0000000000019360                 MOV             W19, #4
.text:0000000000019364                 LDR             X8, [X21,#0x28]
.text:0000000000019368                 STR             X8, [SP,#0x18]
.text:000000000001936C                 LDR             W8, [X1,#0x1A34]
.text:0000000000019370                 CMP             W8, #1
.text:0000000000019374                 B.LT            loc_19394
.text:0000000000019378                 MOV             W8, #0x1A30
.text:000000000001937C                 MOV             X20, X1
.text:0000000000019380                 ADD             X0, X1, X8
.text:0000000000019384                 MOV             X1, SP
.text:0000000000019388                 BL              .sheif_mblk_elem_last
.text:000000000001938C                 LDR             W8, [X20,#0x1A34]
.text:0000000000019390                 BFI             W19, W8, #4, #0x1C
.text:0000000000019394 loc_19394                               ; CODE XREF: .text:0000000000019374↑j
.text:0000000000019394                 LDR             X8, [X21,#0x28]
.text:0000000000019398                 LDR             X9, [SP,#0x18]
.text:000000000001939C                 CMP             X8, X9
.text:00000000000193A0                 B.NE            loc_193BC
.text:00000000000193A4                 MOV             X0, X19
.text:00000000000193A8                 LDR             X21, [SP,#0x20]
.text:00000000000193AC                 LDP             X29, X30, [SP,#0x40]
.text:00000000000193B0                 LDP             X20, X19, [SP,#0x30]
.text:00000000000193B4                 ADD             SP, SP, #0x50 ; 'P'
.text:00000000000193B8                 RET
.text:00000000000193BC ; ---------------------------------------------------------------------------
.text:00000000000193BC loc_193BC                               ; CODE XREF: .text:00000000000193A0↑j
.text:00000000000193BC                 BL              .__stack_chk_fail
.text:00000000000193BC ; } // starts at 19348
.text:00000000000193C0 ; ---------------------------------------------------------------------------
.text:00000000000193C0 ; __unwind {
.text:00000000000193C0                 STRH            WZR, [X0]
.text:00000000000193C4                 MOV             X8, X0
.text:00000000000193C8                 LDRB            W9, [X2,#0x78]
.text:00000000000193CC                 SUB             W9, W9, #1
.text:00000000000193D0                 STRB            W9, [X0,#2]
.text:00000000000193D4                 LDRB            W9, [X2,#0x7C]
.text:00000000000193D8                 SUB             W9, W9, #1
.text:00000000000193DC                 STRB            W9, [X0,#3]
.text:00000000000193E0                 LDR             W9, [X2,#0x70]
.text:00000000000193E4                 STRH            W9, [X0,#4]
.text:00000000000193E8                 MOV             W0, WZR
.text:00000000000193EC                 LDR             W9, [X2,#0x74]
.text:00000000000193F0                 STRH            W9, [X8,#6]
.text:00000000000193F4                 RET
.text:00000000000193F4 ; } // starts at 193C0
.text:00000000000193F8 ; =============== S U B R O U T I N E =======================================
.text:00000000000193F8 sub_193F8                               ; DATA XREF: .data:000000000001C1D0↓o
.text:00000000000193F8 ; __unwind {
.text:00000000000193F8                 MOV             W8, #0x19B8
.text:00000000000193FC                 ADD             X0, X1, X8
.text:0000000000019400                 B               .sheif_mblk_total_datasize
.text:0000000000019400 ; } // starts at 193F8
.text:0000000000019400 ; End of function sub_193F8
.text:0000000000019400 ; ---------------------------------------------------------------------------
.text:0000000000019404                 ALIGN 8
.text:0000000000019408 ; =============== S U B R O U T I N E =======================================
.text:0000000000019408 sub_19408                               ; DATA XREF: .data:000000000001C250↓o
.text:0000000000019408 ; __unwind {
.text:0000000000019408                 MOV             W8, #0x19E0
.text:000000000001940C                 ADD             X0, X1, X8
.text:0000000000019410                 B               .sheif_mblk_total_datasize
.text:0000000000019410 ; } // starts at 19408
.text:0000000000019410 ; End of function sub_19408
.text:0000000000019410 ; ---------------------------------------------------------------------------
.text:0000000000019414                 ALIGN 8
.text:0000000000019418 ; =============== S U B R O U T I N E =======================================
.text:0000000000019418 ; Attributes: bp-based frame
.text:0000000000019418 sub_19418                               ; DATA XREF: .data:000000000001C290↓o
.text:0000000000019418 var_s0          =  0
.text:0000000000019418 ; __unwind {
.text:0000000000019418                 STP             X29, X30, [SP,#-0x10+var_s0]!
.text:000000000001941C                 MOV             X29, SP
.text:0000000000019420                 MOV             W8, #0x1A08
.text:0000000000019424                 ADD             X0, X1, X8
.text:0000000000019428                 BL              .sheif_mblk_total_datasize
.text:000000000001942C                 ADD             X0, X0, #4
.text:0000000000019430                 LDP             X29, X30, [SP+var_s0],#0x10
.text:0000000000019434                 RET
.text:0000000000019434 ; } // starts at 19418
.text:0000000000019434 ; End of function sub_19418
.text:0000000000019438 ; =============== S U B R O U T I N E =======================================
.text:0000000000019438 ; Attributes: bp-based frame
.text:0000000000019438                 EXPORT sheif_rawstruct_conv
.text:0000000000019438 sheif_rawstruct_conv                    ; DATA XREF: LOAD:0000000000001B30↑o
.text:0000000000019438 var_s0          =  0
.text:0000000000019438 ; __unwind {
.text:0000000000019438                 STP             X29, X30, [SP,#-0x10+var_s0]!
.text:000000000001943C                 MOV             X29, SP
.text:0000000000019440                 LDR             W8, [X1,#0xC]
.text:0000000000019444                 CBZ             W8, loc_19478
.text:0000000000019448                 LDR             W8, [X1,#8]
.text:000000000001944C                 CMP             W8, #8
.text:0000000000019450                 B.EQ            loc_1946C
.text:0000000000019454                 CMP             W8, #4
.text:0000000000019458                 B.EQ            loc_19474
.text:000000000001945C                 CMP             W8, #2
.text:0000000000019460                 B.NE            loc_19478
.text:0000000000019464                 BL              .sheif_conv_u16
.text:0000000000019468                 B               loc_19478
.text:000000000001946C ; ---------------------------------------------------------------------------
.text:000000000001946C loc_1946C                               ; CODE XREF: sheif_rawstruct_conv+18↑j
.text:000000000001946C                 BL              .sheif_conv_u64
.text:0000000000019470                 B               loc_19478
.text:0000000000019474 ; ---------------------------------------------------------------------------
.text:0000000000019474 loc_19474                               ; CODE XREF: sheif_rawstruct_conv+20↑j
.text:0000000000019474                 BL              .sheif_conv_u32
.text:0000000000019478 loc_19478                               ; CODE XREF: sheif_rawstruct_conv+C↑j
.text:0000000000019478                                         ; sheif_rawstruct_conv+28↑j ...
.text:0000000000019478                 MOV             W0, WZR
.text:000000000001947C                 LDP             X29, X30, [SP+var_s0],#0x10
.text:0000000000019480                 RET
.text:0000000000019480 ; } // starts at 19438
.text:0000000000019480 ; End of function sheif_rawstruct_conv
.text:0000000000019480 ; ---------------------------------------------------------------------------
.text:0000000000019484                 ALIGN 8
.text:0000000000019488 ; =============== S U B R O U T I N E =======================================
.text:0000000000019488 ; Attributes: bp-based frame
.text:0000000000019488                 EXPORT sheif_rawstruct_write_iter
.text:0000000000019488 sheif_rawstruct_write_iter              ; DATA XREF: LOAD:0000000000002010↑o
.text:0000000000019488 var_40          = -0x40
.text:0000000000019488 var_30          = -0x30
.text:0000000000019488 var_20          = -0x20
.text:0000000000019488 var_10          = -0x10
.text:0000000000019488 var_s0          =  0
.text:0000000000019488 ; __unwind {
.text:0000000000019488                 STP             X26, X25, [SP,#-0x10+var_40]!
.text:000000000001948C                 STP             X24, X23, [SP,#0x40+var_30]
.text:0000000000019490                 STP             X22, X21, [SP,#0x40+var_20]
.text:0000000000019494                 STP             X20, X19, [SP,#0x40+var_10]
.text:0000000000019498                 STP             X29, X30, [SP,#0x40+var_s0]
.text:000000000001949C                 ADD             X29, SP, #0x40
.text:00000000000194A0                 MOV             X25, X2
.text:00000000000194A4                 LDR             W8, [X25,#8]!
.text:00000000000194A8                 CBZ             W8, loc_1952C
.text:00000000000194AC                 MOV             X19, X4
.text:00000000000194B0                 MOV             X22, X2
.text:00000000000194B4                 MOV             X20, X3
.text:00000000000194B8                 MOV             X23, X1
.text:00000000000194BC                 MOV             X24, X0
.text:00000000000194C0                 MOV             W21, #0xFFFFFFFF
.text:00000000000194C4 loc_194C4                               ; CODE XREF: sheif_rawstruct_write_iter+A0↓j
.text:00000000000194C4                 LDR             W8, [X22,#0x10]
.text:00000000000194C8                 CMP             W8, #1
.text:00000000000194CC                 B.LT            loc_19518
.text:00000000000194D0                 MOV             W26, WZR
.text:00000000000194D4 loc_194D4                               ; CODE XREF: sheif_rawstruct_write_iter+8C↓j
.text:00000000000194D4                 CBZ             X23, loc_194F0
.text:00000000000194D8                 LDR             X8, [X22]
.text:00000000000194DC                 SXTW            X10, W26
.text:00000000000194E0                 LDRSW           X9, [X25]
.text:00000000000194E4                 ADD             X8, X23, X8
.text:00000000000194E8                 MADD            X1, X9, X10, X8
.text:00000000000194EC                 B               loc_194F4
.text:00000000000194F0 ; ---------------------------------------------------------------------------
.text:00000000000194F0 loc_194F0                               ; CODE XREF: sheif_rawstruct_write_iter:loc_194D4↑j
.text:00000000000194F0                 MOV             X1, XZR
.text:00000000000194F4 loc_194F4                               ; CODE XREF: sheif_rawstruct_write_iter+64↑j
.text:00000000000194F4                 MOV             X0, X24
.text:00000000000194F8                 MOV             X2, X22
.text:00000000000194FC                 MOV             X3, X19
.text:0000000000019500                 BLR             X20
.text:0000000000019504                 CBNZ            W0, loc_19530
.text:0000000000019508                 LDR             W8, [X22,#0x10]
.text:000000000001950C                 ADD             W26, W26, #1
.text:0000000000019510                 CMP             W26, W8
.text:0000000000019514                 B.LT            loc_194D4
.text:0000000000019518 loc_19518                               ; CODE XREF: sheif_rawstruct_write_iter+44↑j
.text:0000000000019518                 LDR             W8, [X22,#0x20]!
.text:000000000001951C                 SUB             X9, X22, #8
.text:0000000000019520                 MOV             X25, X22
.text:0000000000019524                 MOV             X22, X9
.text:0000000000019528                 CBNZ            W8, loc_194C4
.text:000000000001952C loc_1952C                               ; CODE XREF: sheif_rawstruct_write_iter+20↑j
.text:000000000001952C                 MOV             W21, WZR
.text:0000000000019530 loc_19530                               ; CODE XREF: sheif_rawstruct_write_iter+7C↑j
.text:0000000000019530                 MOV             W0, W21
.text:0000000000019534                 LDP             X29, X30, [SP,#0x40+var_s0]
.text:0000000000019538                 LDP             X20, X19, [SP,#0x40+var_10]
.text:000000000001953C                 LDP             X22, X21, [SP,#0x40+var_20]
.text:0000000000019540                 LDP             X24, X23, [SP,#0x40+var_30]
.text:0000000000019544                 LDP             X26, X25, [SP+0x40+var_40],#0x50
.text:0000000000019548                 RET
.text:0000000000019548 ; } // starts at 19488
.text:0000000000019548 ; End of function sheif_rawstruct_write_iter
.text:0000000000019548 ; ---------------------------------------------------------------------------
.text:000000000001954C                 ALIGN 0x10
.text:0000000000019550 ; =============== S U B R O U T I N E =======================================
.text:0000000000019550 ; Attributes: bp-based frame
.text:0000000000019550                 EXPORT sheif_rawstruct_iter
.text:0000000000019550 sheif_rawstruct_iter                    ; DATA XREF: LOAD:00000000000016E0↑o
.text:0000000000019550 var_40          = -0x40
.text:0000000000019550 var_30          = -0x30
.text:0000000000019550 var_20          = -0x20
.text:0000000000019550 var_10          = -0x10
.text:0000000000019550 var_s0          =  0
.text:0000000000019550 ; __unwind {
.text:0000000000019550                 STR             X25, [SP,#-0x10+var_40]!
.text:0000000000019554                 STP             X24, X23, [SP,#0x40+var_30]
.text:0000000000019558                 STP             X22, X21, [SP,#0x40+var_20]
.text:000000000001955C                 STP             X20, X19, [SP,#0x40+var_10]
.text:0000000000019560                 STP             X29, X30, [SP,#0x40+var_s0]
.text:0000000000019564                 ADD             X29, SP, #0x40
.text:0000000000019568                 MOV             X24, X1
.text:000000000001956C                 LDR             W8, [X24,#8]!
.text:0000000000019570                 CBZ             W8, loc_195EC
.text:0000000000019574                 MOV             X19, X3
.text:0000000000019578                 MOV             X22, X1
.text:000000000001957C                 MOV             X21, X2
.text:0000000000019580                 MOV             X23, X0
.text:0000000000019584                 MOV             W20, #0xFFFFFFFF
.text:0000000000019588 loc_19588                               ; CODE XREF: sheif_rawstruct_iter+98↓j
.text:0000000000019588                 LDR             W8, [X22,#0x10]
.text:000000000001958C                 CMP             W8, #1
.text:0000000000019590                 B.LT            loc_195D8
.text:0000000000019594                 MOV             W25, WZR
.text:0000000000019598 loc_19598                               ; CODE XREF: sheif_rawstruct_iter+84↓j
.text:0000000000019598                 CBZ             X23, loc_195B4
.text:000000000001959C                 LDR             X8, [X22]
.text:00000000000195A0                 SXTW            X10, W25
.text:00000000000195A4                 LDRSW           X9, [X24]
.text:00000000000195A8                 ADD             X8, X23, X8
.text:00000000000195AC                 MADD            X0, X9, X10, X8
.text:00000000000195B0                 B               loc_195B8
.text:00000000000195B4 ; ---------------------------------------------------------------------------
.text:00000000000195B4 loc_195B4                               ; CODE XREF: sheif_rawstruct_iter:loc_19598↑j
.text:00000000000195B4                 MOV             X0, XZR
.text:00000000000195B8 loc_195B8                               ; CODE XREF: sheif_rawstruct_iter+60↑j
.text:00000000000195B8                 MOV             X1, X22
.text:00000000000195BC                 MOV             X2, X19
.text:00000000000195C0                 BLR             X21
.text:00000000000195C4                 CBNZ            W0, loc_195F0
.text:00000000000195C8                 LDR             W8, [X22,#0x10]
.text:00000000000195CC                 ADD             W25, W25, #1
.text:00000000000195D0                 CMP             W25, W8
.text:00000000000195D4                 B.LT            loc_19598
.text:00000000000195D8 loc_195D8                               ; CODE XREF: sheif_rawstruct_iter+40↑j
.text:00000000000195D8                 LDR             W8, [X22,#0x20]!
.text:00000000000195DC                 SUB             X9, X22, #8
.text:00000000000195E0                 MOV             X24, X22
.text:00000000000195E4                 MOV             X22, X9
.text:00000000000195E8                 CBNZ            W8, loc_19588
.text:00000000000195EC loc_195EC                               ; CODE XREF: sheif_rawstruct_iter+20↑j
.text:00000000000195EC                 MOV             W20, WZR
.text:00000000000195F0 loc_195F0                               ; CODE XREF: sheif_rawstruct_iter+74↑j
.text:00000000000195F0                 MOV             W0, W20
.text:00000000000195F4                 LDP             X29, X30, [SP,#0x40+var_s0]
.text:00000000000195F8                 LDP             X20, X19, [SP,#0x40+var_10]
.text:00000000000195FC                 LDP             X22, X21, [SP,#0x40+var_20]
.text:0000000000019600                 LDP             X24, X23, [SP,#0x40+var_30]
.text:0000000000019604                 LDR             X25, [SP+0x40+var_40],#0x50
.text:0000000000019608                 RET
.text:0000000000019608 ; } // starts at 19550
.text:0000000000019608 ; End of function sheif_rawstruct_iter
.text:0000000000019608 ; ---------------------------------------------------------------------------
.text:000000000001960C                 ALIGN 0x10
.text:0000000000019610 ; =============== S U B R O U T I N E =======================================
.text:0000000000019610                 EXPORT sheif_rawstruct_size
.text:0000000000019610 sheif_rawstruct_size                    ; CODE XREF: .sheif_rawstruct_size+C↓j
.text:0000000000019610                                         ; DATA XREF: LOAD:0000000000001578↑o ...
.text:0000000000019610 ; __unwind {
.text:0000000000019610                 LDR             W9, [X0,#8]
.text:0000000000019614                 CBZ             W9, loc_19648
.text:0000000000019618                 MOV             X8, X0
.text:000000000001961C                 MOV             W0, WZR
.text:0000000000019620                 ADD             X8, X8, #0x10
.text:0000000000019624 loc_19624                               ; CODE XREF: sheif_rawstruct_size+30↓j
.text:0000000000019624                 LDR             W9, [X8]
.text:0000000000019628                 CMP             W9, #1
.text:000000000001962C                 B.LT            loc_19638
.text:0000000000019630                 LDUR            W10, [X8,#-8]
.text:0000000000019634                 MADD            W0, W10, W9, W0
.text:0000000000019638 loc_19638                               ; CODE XREF: sheif_rawstruct_size+1C↑j
.text:0000000000019638                 LDR             W9, [X8,#0x10]
.text:000000000001963C                 ADD             X8, X8, #0x18
.text:0000000000019640                 CBNZ            W9, loc_19624
.text:0000000000019644                 RET
.text:0000000000019648 ; ---------------------------------------------------------------------------
.text:0000000000019648 loc_19648                               ; CODE XREF: sheif_rawstruct_size+4↑j
.text:0000000000019648                 MOV             W0, WZR
.text:000000000001964C                 RET
.text:000000000001964C ; } // starts at 19610
.text:000000000001964C ; End of function sheif_rawstruct_size
.text:0000000000019650 ; =============== S U B R O U T I N E =======================================
.text:0000000000019650 ; Attributes: bp-based frame
.text:0000000000019650                 EXPORT sheif_rawstruct_bigend
.text:0000000000019650 sheif_rawstruct_bigend                  ; DATA XREF: LOAD:0000000000001FF8↑o
.text:0000000000019650 var_20          = -0x20
.text:0000000000019650 var_10          = -0x10
.text:0000000000019650 var_s0          =  0
.text:0000000000019650 ; __unwind {
.text:0000000000019650                 STP             X22, X21, [SP,#-0x10+var_20]!
.text:0000000000019654                 STP             X20, X19, [SP,#0x20+var_10]
.text:0000000000019658                 STP             X29, X30, [SP,#0x20+var_s0]
.text:000000000001965C                 ADD             X29, SP, #0x20
.text:0000000000019660                 MOV             X21, X1
.text:0000000000019664                 LDR             W8, [X21,#8]!
.text:0000000000019668                 CBZ             W8, loc_19708
.text:000000000001966C                 MOV             X19, X1
.text:0000000000019670                 MOV             X20, X0
.text:0000000000019674 loc_19674                               ; CODE XREF: sheif_rawstruct_bigend+B4↓j
.text:0000000000019674                 LDR             W8, [X19,#0x10]
.text:0000000000019678                 CMP             W8, #1
.text:000000000001967C                 B.LT            loc_196F4
.text:0000000000019680                 MOV             W22, WZR
.text:0000000000019684 loc_19684                               ; CODE XREF: sheif_rawstruct_bigend+A0↓j
.text:0000000000019684                 CBZ             X20, loc_196A8
.text:0000000000019688                 LDR             X8, [X19]
.text:000000000001968C                 SXTW            X10, W22
.text:0000000000019690                 LDRSW           X9, [X21]
.text:0000000000019694                 ADD             X8, X20, X8
.text:0000000000019698                 MADD            X0, X9, X10, X8
.text:000000000001969C                 LDR             W8, [X19,#0xC]
.text:00000000000196A0                 CBNZ            W8, loc_196B4
.text:00000000000196A4                 B               loc_196E4
.text:00000000000196A8 ; ---------------------------------------------------------------------------
.text:00000000000196A8 loc_196A8                               ; CODE XREF: sheif_rawstruct_bigend:loc_19684↑j
.text:00000000000196A8                 MOV             X0, XZR
.text:00000000000196AC                 LDR             W8, [X19,#0xC]
.text:00000000000196B0                 CBZ             W8, loc_196E4
.text:00000000000196B4 loc_196B4                               ; CODE XREF: sheif_rawstruct_bigend+50↑j
.text:00000000000196B4                 LDR             W8, [X19,#8]
.text:00000000000196B8                 CMP             W8, #8
.text:00000000000196BC                 B.EQ            loc_196E0
.text:00000000000196C0                 CMP             W8, #4
.text:00000000000196C4                 B.EQ            loc_196D8
.text:00000000000196C8                 CMP             W8, #2
.text:00000000000196CC                 B.NE            loc_196E4
.text:00000000000196D0                 BL              .sheif_conv_u16
.text:00000000000196D4                 B               loc_196E4
.text:00000000000196D8 ; ---------------------------------------------------------------------------
.text:00000000000196D8 loc_196D8                               ; CODE XREF: sheif_rawstruct_bigend+74↑j
.text:00000000000196D8                 BL              .sheif_conv_u32
.text:00000000000196DC                 B               loc_196E4
.text:00000000000196E0 ; ---------------------------------------------------------------------------
.text:00000000000196E0 loc_196E0                               ; CODE XREF: sheif_rawstruct_bigend+6C↑j
.text:00000000000196E0                 BL              .sheif_conv_u64
.text:00000000000196E4 loc_196E4                               ; CODE XREF: sheif_rawstruct_bigend+54↑j
.text:00000000000196E4                                         ; sheif_rawstruct_bigend+60↑j ...
.text:00000000000196E4                 LDR             W8, [X19,#0x10]
.text:00000000000196E8                 ADD             W22, W22, #1
.text:00000000000196EC                 CMP             W22, W8
.text:00000000000196F0                 B.LT            loc_19684
.text:00000000000196F4 loc_196F4                               ; CODE XREF: sheif_rawstruct_bigend+2C↑j
.text:00000000000196F4                 LDR             W8, [X19,#0x20]!
.text:00000000000196F8                 SUB             X9, X19, #8
.text:00000000000196FC                 MOV             X21, X19
.text:0000000000019700                 MOV             X19, X9
.text:0000000000019704                 CBNZ            W8, loc_19674
.text:0000000000019708 loc_19708                               ; CODE XREF: sheif_rawstruct_bigend+18↑j
.text:0000000000019708                 LDP             X29, X30, [SP,#0x20+var_s0]
.text:000000000001970C                 LDP             X20, X19, [SP,#0x20+var_10]
.text:0000000000019710                 MOV             W0, WZR
.text:0000000000019714                 LDP             X22, X21, [SP+0x20+var_20],#0x30
.text:0000000000019718                 RET
.text:0000000000019718 ; } // starts at 19650
.text:0000000000019718 ; End of function sheif_rawstruct_bigend
.text:0000000000019718 ; ---------------------------------------------------------------------------
.text:000000000001971C                 ALIGN 0x20
.text:0000000000019720 ; =============== S U B R O U T I N E =======================================
.text:0000000000019720 ; Attributes: bp-based frame
.text:0000000000019720                 EXPORT sheif_rawstruct_mwrite
.text:0000000000019720 sheif_rawstruct_mwrite                  ; CODE XREF: .sheif_rawstruct_mwrite+C↓j
.text:0000000000019720                                         ; DATA XREF: LOAD:0000000000001770↑o ...
.text:0000000000019720 var_40          = -0x40
.text:0000000000019720 var_30          = -0x30
.text:0000000000019720 var_20          = -0x20
.text:0000000000019720 var_10          = -0x10
.text:0000000000019720 var_s0          =  0
.text:0000000000019720 ; __unwind {
.text:0000000000019720                 STR             X25, [SP,#-0x10+var_40]!
.text:0000000000019724                 STP             X24, X23, [SP,#0x40+var_30]
.text:0000000000019728                 STP             X22, X21, [SP,#0x40+var_20]
.text:000000000001972C                 STP             X20, X19, [SP,#0x40+var_10]
.text:0000000000019730                 STP             X29, X30, [SP,#0x40+var_s0]
.text:0000000000019734                 ADD             X29, SP, #0x40
.text:0000000000019738                 MOV             X24, X2
.text:000000000001973C                 LDR             W8, [X24,#8]!
.text:0000000000019740                 CBZ             W8, loc_19880
.text:0000000000019744                 MOV             X20, X2
.text:0000000000019748                 MOV             X19, X1
.text:000000000001974C                 MOV             X21, X0
.text:0000000000019750                 MOV             X23, X24
.text:0000000000019754                 MOV             X22, X2
.text:0000000000019758 loc_19758                               ; CODE XREF: sheif_rawstruct_mwrite+C8↓j
.text:0000000000019758                 LDR             W8, [X22,#0x10]
.text:000000000001975C                 CMP             W8, #1
.text:0000000000019760                 B.LT            loc_197D8
.text:0000000000019764                 MOV             W25, WZR
.text:0000000000019768 loc_19768                               ; CODE XREF: sheif_rawstruct_mwrite+B4↓j
.text:0000000000019768                 CBZ             X19, loc_1978C
.text:000000000001976C                 LDR             X8, [X22]
.text:0000000000019770                 SXTW            X10, W25
.text:0000000000019774                 LDRSW           X9, [X23]
.text:0000000000019778                 ADD             X8, X19, X8
.text:000000000001977C                 MADD            X0, X9, X10, X8
.text:0000000000019780                 LDR             W8, [X22,#0xC]
.text:0000000000019784                 CBNZ            W8, loc_19798
.text:0000000000019788                 B               loc_197C8
.text:000000000001978C ; ---------------------------------------------------------------------------
.text:000000000001978C loc_1978C                               ; CODE XREF: sheif_rawstruct_mwrite:loc_19768↑j
.text:000000000001978C                 MOV             X0, XZR
.text:0000000000019790                 LDR             W8, [X22,#0xC]
.text:0000000000019794                 CBZ             W8, loc_197C8
.text:0000000000019798 loc_19798                               ; CODE XREF: sheif_rawstruct_mwrite+64↑j
.text:0000000000019798                 LDR             W8, [X22,#8]
.text:000000000001979C                 CMP             W8, #8
.text:00000000000197A0                 B.EQ            loc_197C4
.text:00000000000197A4                 CMP             W8, #4
.text:00000000000197A8                 B.EQ            loc_197BC
.text:00000000000197AC                 CMP             W8, #2
.text:00000000000197B0                 B.NE            loc_197C8
.text:00000000000197B4                 BL              .sheif_conv_u16
.text:00000000000197B8                 B               loc_197C8
.text:00000000000197BC ; ---------------------------------------------------------------------------
.text:00000000000197BC loc_197BC                               ; CODE XREF: sheif_rawstruct_mwrite+88↑j
.text:00000000000197BC                 BL              .sheif_conv_u32
.text:00000000000197C0                 B               loc_197C8
.text:00000000000197C4 ; ---------------------------------------------------------------------------
.text:00000000000197C4 loc_197C4                               ; CODE XREF: sheif_rawstruct_mwrite+80↑j
.text:00000000000197C4                 BL              .sheif_conv_u64
.text:00000000000197C8 loc_197C8                               ; CODE XREF: sheif_rawstruct_mwrite+68↑j
.text:00000000000197C8                                         ; sheif_rawstruct_mwrite+74↑j ...
.text:00000000000197C8                 LDR             W8, [X22,#0x10]
.text:00000000000197CC                 ADD             W25, W25, #1
.text:00000000000197D0                 CMP             W25, W8
.text:00000000000197D4                 B.LT            loc_19768
.text:00000000000197D8 loc_197D8                               ; CODE XREF: sheif_rawstruct_mwrite+40↑j
.text:00000000000197D8                 LDR             W8, [X22,#0x20]!
.text:00000000000197DC                 SUB             X9, X22, #8
.text:00000000000197E0                 MOV             X23, X22
.text:00000000000197E4                 MOV             X22, X9
.text:00000000000197E8                 CBNZ            W8, loc_19758
.text:00000000000197EC                 LDR             W8, [X24]
.text:00000000000197F0                 CBZ             W8, loc_19880
.text:00000000000197F4                 MOV             W22, #0xFFFFFFFF
.text:00000000000197F8 loc_197F8                               ; CODE XREF: sheif_rawstruct_mwrite+15C↓j
.text:00000000000197F8                 LDR             W8, [X20,#0x10]
.text:00000000000197FC                 CMP             W8, #1
.text:0000000000019800                 B.LT            loc_1986C
.text:0000000000019804                 MOV             W25, WZR
.text:0000000000019808 loc_19808                               ; CODE XREF: sheif_rawstruct_mwrite+148↓j
.text:0000000000019808                 CBZ             X19, loc_19824
.text:000000000001980C                 LDR             X8, [X20]
.text:0000000000019810                 SXTW            X10, W25
.text:0000000000019814                 LDRSW           X9, [X24]
.text:0000000000019818                 ADD             X8, X19, X8
.text:000000000001981C                 MADD            X1, X9, X10, X8
.text:0000000000019820                 B               loc_19828
.text:0000000000019824 ; ---------------------------------------------------------------------------
.text:0000000000019824 loc_19824                               ; CODE XREF: sheif_rawstruct_mwrite:loc_19808↑j
.text:0000000000019824                 MOV             X1, XZR ; src
.text:0000000000019828 loc_19828                               ; CODE XREF: sheif_rawstruct_mwrite+100↑j
.text:0000000000019828                 LDRSW           X23, [X20,#8]
.text:000000000001982C                 LDR             W8, [X21,#0x48]
.text:0000000000019830                 CMP             W8, W23
.text:0000000000019834                 B.LT            loc_19884
.text:0000000000019838                 LDR             X0, [X21,#0x40] ; dest
.text:000000000001983C                 MOV             X2, X23 ; n
.text:0000000000019840                 BL              .memcpy
.text:0000000000019844                 LDR             X8, [X21,#0x40]
.text:0000000000019848                 ADD             W25, W25, #1
.text:000000000001984C                 LDR             W9, [X21,#0x48]
.text:0000000000019850                 ADD             X8, X8, X23
.text:0000000000019854                 SUB             W9, W9, W23
.text:0000000000019858                 STR             X8, [X21,#0x40]
.text:000000000001985C                 STR             W9, [X21,#0x48]
.text:0000000000019860                 LDR             W8, [X20,#0x10]
.text:0000000000019864                 CMP             W25, W8
.text:0000000000019868                 B.LT            loc_19808
.text:000000000001986C loc_1986C                               ; CODE XREF: sheif_rawstruct_mwrite+E0↑j
.text:000000000001986C                 LDR             W8, [X20,#0x20]!
.text:0000000000019870                 SUB             X9, X20, #8
.text:0000000000019874                 MOV             X24, X20
.text:0000000000019878                 MOV             X20, X9
.text:000000000001987C                 CBNZ            W8, loc_197F8
.text:0000000000019880 loc_19880                               ; CODE XREF: sheif_rawstruct_mwrite+20↑j
.text:0000000000019880                                         ; sheif_rawstruct_mwrite+D0↑j
.text:0000000000019880                 MOV             W22, WZR
.text:0000000000019884 loc_19884                               ; CODE XREF: sheif_rawstruct_mwrite+114↑j
.text:0000000000019884                 MOV             W0, W22
.text:0000000000019888                 LDP             X29, X30, [SP,#0x40+var_s0]
.text:000000000001988C                 LDP             X20, X19, [SP,#0x40+var_10]
.text:0000000000019890                 LDP             X22, X21, [SP,#0x40+var_20]
.text:0000000000019894                 LDP             X24, X23, [SP,#0x40+var_30]
.text:0000000000019898                 LDR             X25, [SP+0x40+var_40],#0x50
.text:000000000001989C                 RET
.text:000000000001989C ; } // starts at 19720
.text:000000000001989C ; End of function sheif_rawstruct_mwrite
.text:00000000000198A0 ; =============== S U B R O U T I N E =======================================
.text:00000000000198A0                 EXPORT sheifm_get_hvcc_size
.text:00000000000198A0 sheifm_get_hvcc_size                    ; CODE XREF: .sheifm_get_hvcc_size+C↓j
.text:00000000000198A0                                         ; DATA XREF: LOAD:0000000000001AE8↑o ...
.text:00000000000198A0 ; __unwind {
.text:00000000000198A0                 LDR             W11, [X0]
.text:00000000000198A4                 CMP             W11, #4
.text:00000000000198A8                 B.GT            loc_198F0
.text:00000000000198AC                 LDR             W10, [X0,#0x38]
.text:00000000000198B0                 CMP             W10, #4
.text:00000000000198B4                 B.GT            loc_198FC
.text:00000000000198B8                 LDR             W9, [X0,#0x70]
.text:00000000000198BC                 MOV             W8, #0xFFFFFFFF
.text:00000000000198C0                 CMP             W9, #4
.text:00000000000198C4                 B.GT            loc_19A98
.text:00000000000198C8                 ORR             W12, W10, W11
.text:00000000000198CC                 ORR             W12, W12, W9
.text:00000000000198D0                 TBNZ            W12, #0x1F, loc_19A98
.text:00000000000198D4                 CMP             W11, #1
.text:00000000000198D8                 B.LT            loc_19908
.text:00000000000198DC                 CMP             W11, #7
.text:00000000000198E0                 B.HI            loc_19918
.text:00000000000198E4                 MOV             X12, XZR
.text:00000000000198E8                 MOV             W8, #0x17
.text:00000000000198EC                 B               loc_19968
.text:00000000000198F0 ; ---------------------------------------------------------------------------
.text:00000000000198F0 loc_198F0                               ; CODE XREF: sheifm_get_hvcc_size+8↑j
.text:00000000000198F0                 MOV             W8, #0xFFFFFFFF
.text:00000000000198F4                 MOV             W0, W8
.text:00000000000198F8                 RET
.text:00000000000198FC ; ---------------------------------------------------------------------------
.text:00000000000198FC loc_198FC                               ; CODE XREF: sheifm_get_hvcc_size+14↑j
.text:00000000000198FC                 MOV             W8, #0xFFFFFFFF
.text:0000000000019900                 MOV             W0, W8
.text:0000000000019904                 RET
.text:0000000000019908 ; ---------------------------------------------------------------------------
.text:0000000000019908 loc_19908                               ; CODE XREF: sheifm_get_hvcc_size+38↑j
.text:0000000000019908                 MOV             W8, #0x17
.text:000000000001990C                 CMP             W10, #1
.text:0000000000019910                 B.GE            loc_19990
.text:0000000000019914                 B               loc_19A10
.text:0000000000019918 ; ---------------------------------------------------------------------------
.text:0000000000019918 loc_19918                               ; CODE XREF: sheifm_get_hvcc_size+40↑j
.text:0000000000019918                 ADRP            X13, #xmmword_9DC0@PAGE
.text:000000000001991C                 MOVI            V0.2D, #0
.text:0000000000019920                 MOVI            V1.4S, #5
.text:0000000000019924                 AND             X12, X11, #0xFFFFFFF8
.text:0000000000019928                 ADD             X8, X0, #0x14
.text:000000000001992C                 LDR             Q2, [X13,#xmmword_9DC0@PAGEOFF]
.text:0000000000019930                 MOV             X13, X12
.text:0000000000019934 loc_19934                               ; CODE XREF: sheifm_get_hvcc_size+B0↓j
.text:0000000000019934                 LDP             Q3, Q4, [X8,#-0x10]
.text:0000000000019938                 ADD             X8, X8, #0x20 ; ' '
.text:000000000001993C                 SUBS            X13, X13, #8
.text:0000000000019940                 ADD             V2.4S, V2.4S, V3.4S
.text:0000000000019944                 ADD             V0.4S, V0.4S, V4.4S
.text:0000000000019948                 ADD             V2.4S, V2.4S, V1.4S
.text:000000000001994C                 ADD             V0.4S, V0.4S, V1.4S
.text:0000000000019950                 B.NE            loc_19934
.text:0000000000019954                 ADD             V0.4S, V0.4S, V2.4S
.text:0000000000019958                 CMP             X12, X11
.text:000000000001995C                 ADDV            S0, V0.4S
.text:0000000000019960                 FMOV            W8, S0
.text:0000000000019964                 B.EQ            loc_19988
.text:0000000000019968 loc_19968                               ; CODE XREF: sheifm_get_hvcc_size+4C↑j
.text:0000000000019968                 ADD             X13, X0, X12,LSL#2
.text:000000000001996C                 ADD             X13, X13, #4
.text:0000000000019970                 SUB             X11, X11, X12
.text:0000000000019974 loc_19974                               ; CODE XREF: sheifm_get_hvcc_size+E4↓j
.text:0000000000019974                 LDR             W12, [X13],#4
.text:0000000000019978                 ADD             W8, W8, W12
.text:000000000001997C                 ADD             W8, W8, #5
.text:0000000000019980                 SUBS            X11, X11, #1
.text:0000000000019984                 B.NE            loc_19974
.text:0000000000019988 loc_19988                               ; CODE XREF: sheifm_get_hvcc_size+C4↑j
.text:0000000000019988                 CMP             W10, #1
.text:000000000001998C                 B.LT            loc_19A10
.text:0000000000019990 loc_19990                               ; CODE XREF: sheifm_get_hvcc_size+70↑j
.text:0000000000019990                 CMP             W10, #7
.text:0000000000019994                 B.HI            loc_199A0
.text:0000000000019998                 MOV             X11, XZR
.text:000000000001999C                 B               loc_199F0
.text:00000000000199A0 ; ---------------------------------------------------------------------------
.text:00000000000199A0 loc_199A0                               ; CODE XREF: sheifm_get_hvcc_size+F4↑j
.text:00000000000199A0                 MOVI            V0.2D, #0
.text:00000000000199A4                 AND             X11, X10, #0xFFFFFFF8
.text:00000000000199A8                 MOVI            V2.4S, #5
.text:00000000000199AC                 MOV             X12, X11
.text:00000000000199B0                 MOV             V1.16B, V0.16B
.text:00000000000199B4                 INS             V1.S[0], W8
.text:00000000000199B8                 ADD             X8, X0, #0x4C ; 'L'
.text:00000000000199BC loc_199BC                               ; CODE XREF: sheifm_get_hvcc_size+138↓j
.text:00000000000199BC                 LDP             Q3, Q4, [X8,#-0x10]
.text:00000000000199C0                 ADD             X8, X8, #0x20 ; ' '
.text:00000000000199C4                 SUBS            X12, X12, #8
.text:00000000000199C8                 ADD             V1.4S, V1.4S, V3.4S
.text:00000000000199CC                 ADD             V0.4S, V0.4S, V4.4S
.text:00000000000199D0                 ADD             V1.4S, V1.4S, V2.4S
.text:00000000000199D4                 ADD             V0.4S, V0.4S, V2.4S
.text:00000000000199D8                 B.NE            loc_199BC
.text:00000000000199DC                 ADD             V0.4S, V0.4S, V1.4S
.text:00000000000199E0                 CMP             X11, X10
.text:00000000000199E4                 ADDV            S0, V0.4S
.text:00000000000199E8                 FMOV            W8, S0
.text:00000000000199EC                 B.EQ            loc_19A10
.text:00000000000199F0 loc_199F0                               ; CODE XREF: sheifm_get_hvcc_size+FC↑j
.text:00000000000199F0                 ADD             X12, X0, X11,LSL#2
.text:00000000000199F4                 ADD             X12, X12, #0x3C ; '<'
.text:00000000000199F8                 SUB             X10, X10, X11
.text:00000000000199FC loc_199FC                               ; CODE XREF: sheifm_get_hvcc_size+16C↓j
.text:00000000000199FC                 LDR             W11, [X12],#4
.text:0000000000019A00                 ADD             W8, W8, W11
.text:0000000000019A04                 ADD             W8, W8, #5
.text:0000000000019A08                 SUBS            X10, X10, #1
.text:0000000000019A0C                 B.NE            loc_199FC
.text:0000000000019A10 loc_19A10                               ; CODE XREF: sheifm_get_hvcc_size+74↑j
.text:0000000000019A10                                         ; sheifm_get_hvcc_size+EC↑j ...
.text:0000000000019A10                 CMP             W9, #1
.text:0000000000019A14                 B.LT            loc_19A98
.text:0000000000019A18                 CMP             W9, #7
.text:0000000000019A1C                 B.HI            loc_19A28
.text:0000000000019A20                 MOV             X10, XZR
.text:0000000000019A24                 B               loc_19A78
.text:0000000000019A28 ; ---------------------------------------------------------------------------
.text:0000000000019A28 loc_19A28                               ; CODE XREF: sheifm_get_hvcc_size+17C↑j
.text:0000000000019A28                 MOVI            V0.2D, #0
.text:0000000000019A2C                 AND             X10, X9, #0xFFFFFFF8
.text:0000000000019A30                 MOVI            V2.4S, #5
.text:0000000000019A34                 MOV             X11, X10
.text:0000000000019A38                 MOV             V1.16B, V0.16B
.text:0000000000019A3C                 INS             V1.S[0], W8
.text:0000000000019A40                 ADD             X8, X0, #0x84
.text:0000000000019A44 loc_19A44                               ; CODE XREF: sheifm_get_hvcc_size+1C0↓j
.text:0000000000019A44                 LDP             Q3, Q4, [X8,#-0x10]
.text:0000000000019A48                 ADD             X8, X8, #0x20 ; ' '
.text:0000000000019A4C                 SUBS            X11, X11, #8
.text:0000000000019A50                 ADD             V1.4S, V1.4S, V3.4S
.text:0000000000019A54                 ADD             V0.4S, V0.4S, V4.4S
.text:0000000000019A58                 ADD             V1.4S, V1.4S, V2.4S
.text:0000000000019A5C                 ADD             V0.4S, V0.4S, V2.4S
.text:0000000000019A60                 B.NE            loc_19A44
.text:0000000000019A64                 ADD             V0.4S, V0.4S, V1.4S
.text:0000000000019A68                 CMP             X10, X9
.text:0000000000019A6C                 ADDV            S0, V0.4S
.text:0000000000019A70                 FMOV            W8, S0
.text:0000000000019A74                 B.EQ            loc_19A98
.text:0000000000019A78 loc_19A78                               ; CODE XREF: sheifm_get_hvcc_size+184↑j
.text:0000000000019A78                 ADD             X11, X0, X10,LSL#2
.text:0000000000019A7C                 ADD             X11, X11, #0x74 ; 't'
.text:0000000000019A80                 SUB             X9, X9, X10
.text:0000000000019A84 loc_19A84                               ; CODE XREF: sheifm_get_hvcc_size+1F4↓j
.text:0000000000019A84                 LDR             W10, [X11],#4
.text:0000000000019A88                 ADD             W8, W8, W10
.text:0000000000019A8C                 ADD             W8, W8, #5
.text:0000000000019A90                 SUBS            X9, X9, #1
.text:0000000000019A94                 B.NE            loc_19A84
.text:0000000000019A98 loc_19A98                               ; CODE XREF: sheifm_get_hvcc_size+24↑j
.text:0000000000019A98                                         ; sheifm_get_hvcc_size+30↑j ...
.text:0000000000019A98                 MOV             W0, W8
.text:0000000000019A9C                 RET
.text:0000000000019A9C ; } // starts at 198A0
.text:0000000000019A9C ; End of function sheifm_get_hvcc_size
.text:0000000000019AA0 ; =============== S U B R O U T I N E =======================================
.text:0000000000019AA0 ; Attributes: bp-based frame
.text:0000000000019AA0                 EXPORT sheifm_make_hvcc
.text:0000000000019AA0 sheifm_make_hvcc                        ; CODE XREF: .sheifm_make_hvcc+C↓j
.text:0000000000019AA0                                         ; DATA XREF: LOAD:0000000000000E28↑o ...
.text:0000000000019AA0 var_284         = -0x284
.text:0000000000019AA0 var_280         = -0x280
.text:0000000000019AA0 var_270         = -0x270
.text:0000000000019AA0 var_26E         = -0x26E
.text:0000000000019AA0 var_26C         = -0x26C
.text:0000000000019AA0 var_26A         = -0x26A
.text:0000000000019AA0 var_268         = -0x268
.text:0000000000019AA0 var_266         = -0x266
.text:0000000000019AA0 var_265         = -0x265
.text:0000000000019AA0 var_264         = -0x264
.text:0000000000019AA0 var_263         = -0x263
.text:0000000000019AA0 var_262         = -0x262
.text:0000000000019AA0 var_260         = -0x260
.text:0000000000019AA0 var_250         = -0x250
.text:0000000000019AA0 var_240         = -0x240
.text:0000000000019AA0 var_220         = -0x220
.text:0000000000019AA0 var_E0          = -0xE0
.text:0000000000019AA0 var_DC          = -0xDC
.text:0000000000019AA0 var_B0          = -0xB0
.text:0000000000019AA0 var_80          = -0x80
.text:0000000000019AA0 var_7F          = -0x7F
.text:0000000000019AA0 var_7E          = -0x7E
.text:0000000000019AA0 var_7D          = -0x7D
.text:0000000000019AA0 var_7C          = -0x7C
.text:0000000000019AA0 var_7B          = -0x7B
.text:0000000000019AA0 var_7A          = -0x7A
.text:0000000000019AA0 var_79          = -0x79
.text:0000000000019AA0 var_78          = -0x78
.text:0000000000019AA0 var_77          = -0x77
.text:0000000000019AA0 var_76          = -0x76
.text:0000000000019AA0 var_75          = -0x75
.text:0000000000019AA0 var_74          = -0x74
.text:0000000000019AA0 var_71          = -0x71
.text:0000000000019AA0 var_70          = -0x70
.text:0000000000019AA0 var_6F          = -0x6F
.text:0000000000019AA0 var_6E          = -0x6E
.text:0000000000019AA0 var_6B          = -0x6B
.text:0000000000019AA0 var_6A          = -0x6A
.text:0000000000019AA0 var_50          = -0x50
.text:0000000000019AA0 var_40          = -0x40
.text:0000000000019AA0 var_30          = -0x30
.text:0000000000019AA0 var_20          = -0x20
.text:0000000000019AA0 var_10          = -0x10
.text:0000000000019AA0 var_s0          =  0
.text:0000000000019AA0 ; __unwind {
.text:0000000000019AA0                 STP             X28, X27, [SP,#-0x10+var_50]!
.text:0000000000019AA4                 STP             X26, X25, [SP,#0x50+var_40]
.text:0000000000019AA8                 STP             X24, X23, [SP,#0x50+var_30]
.text:0000000000019AAC                 STP             X22, X21, [SP,#0x50+var_20]
.text:0000000000019AB0                 STP             X20, X19, [SP,#0x50+var_10]
.text:0000000000019AB4                 STP             X29, X30, [SP,#0x50+var_s0]
.text:0000000000019AB8                 ADD             X29, SP, #0x50
.text:0000000000019ABC                 SUB             SP, SP, #0x240
.text:0000000000019AC0                 MRS             X22, #3, c13, c0, #2
.text:0000000000019AC4                 SUB             X23, X29, #-var_80
.text:0000000000019AC8                 LDR             X8, [X22,#0x28]
.text:0000000000019ACC                 STR             X8, [X23,#0x18]
.text:0000000000019AD0                 LDR             W8, [X0]
.text:0000000000019AD4                 CMP             W8, #4
.text:0000000000019AD8                 B.GT            loc_19DBC
.text:0000000000019ADC                 LDR             W9, [X0,#0x38]
.text:0000000000019AE0                 MOV             X19, X0
.text:0000000000019AE4                 CMP             W9, #4
.text:0000000000019AE8                 B.GT            loc_19DBC
.text:0000000000019AEC                 LDR             W10, [X19,#0x70]
.text:0000000000019AF0                 MOV             W0, #0xFFFFFFFF
.text:0000000000019AF4                 CMP             W10, #4
.text:0000000000019AF8                 B.GT            loc_19DC0
.text:0000000000019AFC                 ORR             W8, W9, W8
.text:0000000000019B00                 ORR             W8, W8, W10
.text:0000000000019B04                 TBNZ            W8, #0x1F, loc_19DC0
.text:0000000000019B08                 LDR             X8, [X19,#0x18]
.text:0000000000019B0C                 CBZ             X8, loc_19DBC
.text:0000000000019B10                 LDR             X8, [X19,#0x50]
.text:0000000000019B14                 CBZ             X8, loc_19DBC
.text:0000000000019B18                 LDR             X9, [X19,#0x88]
.text:0000000000019B1C                 CBZ             X9, loc_19DBC
.text:0000000000019B20                 LDR             W9, [X19,#0x3C]
.text:0000000000019B24                 CMP             W9, #8
.text:0000000000019B28                 B.LT            loc_19DBC
.text:0000000000019B2C                 ADRP            X3, #loc_1A5A0@PAGE
.text:0000000000019B30                 MOV             X20, X1
.text:0000000000019B34                 ADD             X1, X8, #2
.text:0000000000019B38                 SUB             W2, W9, #2
.text:0000000000019B3C                 ADD             X3, X3, #loc_1A5A0@PAGEOFF
.text:0000000000019B40                 SUB             X0, X29, #-var_E0
.text:0000000000019B44                 ADD             X21, SP, #0x290+var_280
.text:0000000000019B48                 BL              .scmn_bsr_init
.text:0000000000019B4C                 MOVI            V0.2D, #0
.text:0000000000019B50                 SUB             X0, X29, #-var_E0
.text:0000000000019B54                 MOV             W1, #4
.text:0000000000019B58                 STUR            WZR, [X29,#var_B0]
.text:0000000000019B5C                 STR             XZR, [X21,#0x190]
.text:0000000000019B60                 STP             Q0, Q0, [X21,#0x170]
.text:0000000000019B64                 STP             Q0, Q0, [X21,#0x150]
.text:0000000000019B68                 STP             Q0, Q0, [X21,#0x130]
.text:0000000000019B6C                 STP             Q0, Q0, [X21,#0x110]
.text:0000000000019B70                 STP             Q0, Q0, [X21,#0xF0]
.text:0000000000019B74                 STP             Q0, Q0, [X21,#0xD0]
.text:0000000000019B78                 STP             Q0, Q0, [X21,#0xB0]
.text:0000000000019B7C                 STP             Q0, Q0, [X21,#0x90]
.text:0000000000019B80                 STR             Q0, [X21,#0x80]
.text:0000000000019B84                 STP             Q0, Q0, [SP,#0x290+var_220]
.text:0000000000019B88                 STP             Q0, Q0, [SP,#0x290+var_240]
.text:0000000000019B8C                 STP             Q0, Q0, [SP,#0x290+var_260]
.text:0000000000019B90                 STP             Q0, Q0, [SP,#0x290+var_280]
.text:0000000000019B94                 BL              .scmn_bsr_read
.text:0000000000019B98                 STRB            W0, [SP,#0x290+var_280]
.text:0000000000019B9C                 SUB             X0, X29, #-var_E0
.text:0000000000019BA0                 MOV             W1, #3
.text:0000000000019BA4                 BL              .scmn_bsr_read
.text:0000000000019BA8                 STRB            W0, [SP,#0x290+var_280+1]
.text:0000000000019BAC                 SUB             X0, X29, #-var_E0
.text:0000000000019BB0                 BL              .scmn_bsr_read1
.text:0000000000019BB4                 LDRB            W25, [SP,#0x290+var_280+1]
.text:0000000000019BB8                 MOV             W1, #2
.text:0000000000019BBC                 STRB            W0, [SP,#0x290+var_280+2]
.text:0000000000019BC0                 SUB             X0, X29, #-var_E0
.text:0000000000019BC4                 BL              .scmn_bsr_read
.text:0000000000019BC8                 STRB            W0, [SP,#0x290+var_264]
.text:0000000000019BCC                 SUB             X0, X29, #-var_E0
.text:0000000000019BD0                 BL              .scmn_bsr_read1
.text:0000000000019BD4                 STRB            W0, [SP,#0x290+var_263]
.text:0000000000019BD8                 MOV             W1, #5
.text:0000000000019BDC                 SUB             X0, X29, #-var_E0
.text:0000000000019BE0                 BL              .scmn_bsr_read
.text:0000000000019BE4                 STRB            W0, [SP,#0x290+var_262]
.text:0000000000019BE8                 SUB             X0, X29, #-var_E0
.text:0000000000019BEC                 MOV             W1, #0x20 ; ' '
.text:0000000000019BF0                 BL              .scmn_bsr_read
.text:0000000000019BF4                 STR             W0, [SP,#0x290+var_260]
.text:0000000000019BF8                 SUB             X0, X29, #-var_E0
.text:0000000000019BFC                 MOV             W1, #0x20 ; ' '
.text:0000000000019C00                 BL              .scmn_bsr_read
.text:0000000000019C04                 MOV             W21, W0
.text:0000000000019C08                 SUB             X0, X29, #-var_E0
.text:0000000000019C0C                 MOV             W1, #0x10
.text:0000000000019C10                 STR             X21, [SP,#0x290+var_260+8]
.text:0000000000019C14                 BL              .scmn_bsr_read
.text:0000000000019C18                 MOV             W8, W0
.text:0000000000019C1C                 ORR             X8, X8, X21,LSL#16
.text:0000000000019C20                 SUB             X0, X29, #-var_E0
.text:0000000000019C24                 MOV             W1, #8
.text:0000000000019C28                 STR             X8, [SP,#0x290+var_260+8]
.text:0000000000019C2C                 BL              .scmn_bsr_read
.text:0000000000019C30                 STRB            W0, [SP,#0x290+var_250]
.text:0000000000019C34                 CBZ             X25, loc_19DA4
.text:0000000000019C38                 ADD             X8, SP, #0x290+var_280
.text:0000000000019C3C                 ADD             X21, X8, #0x38 ; '8'
.text:0000000000019C40                 MOV             X24, X25
.text:0000000000019C44 loc_19C44                               ; CODE XREF: sheifm_make_hvcc+1C0↓j
.text:0000000000019C44                 SUB             X0, X29, #-var_E0
.text:0000000000019C48                 BL              .scmn_bsr_read1
.text:0000000000019C4C                 STURB           W0, [X21,#-7]
.text:0000000000019C50                 SUB             X0, X29, #-var_E0
.text:0000000000019C54                 BL              .scmn_bsr_read1
.text:0000000000019C58                 SUBS            X24, X24, #1
.text:0000000000019C5C                 STRB            W0, [X21],#1
.text:0000000000019C60                 B.NE            loc_19C44
.text:0000000000019C64                 SUB             W8, W25, #1
.text:0000000000019C68                 AND             W8, W8, #0xFF
.text:0000000000019C6C                 CMP             W8, #6
.text:0000000000019C70                 B.HI            loc_19C9C
.text:0000000000019C74                 ADD             X8, SP, #0x290+var_280
.text:0000000000019C78                 ADD             X21, X8, #0x3F ; '?'
.text:0000000000019C7C                 MOV             X24, X25
.text:0000000000019C80 loc_19C80                               ; CODE XREF: sheifm_make_hvcc+1F8↓j
.text:0000000000019C80                 SUB             X0, X29, #-var_E0
.text:0000000000019C84                 MOV             W1, #2
.text:0000000000019C88                 BL              .scmn_bsr_read
.text:0000000000019C8C                 STRB            W0, [X21,X24]
.text:0000000000019C90                 ADD             X24, X24, #1
.text:0000000000019C94                 CMP             X24, #8
.text:0000000000019C98                 B.CC            loc_19C80
.text:0000000000019C9C loc_19C9C                               ; CODE XREF: sheifm_make_hvcc+1D0↑j
.text:0000000000019C9C                 ADD             X27, SP, #0x290+var_280
.text:0000000000019CA0                 MOV             X26, XZR
.text:0000000000019CA4                 ADD             X28, X27, #0x5C ; '\'
.text:0000000000019CA8 loc_19CA8                               ; CODE XREF: sheifm_make_hvcc+300↓j
.text:0000000000019CA8                 ADD             X24, X27, X26
.text:0000000000019CAC                 LDRB            W8, [X24,#0x31]
.text:0000000000019CB0                 CBZ             W8, loc_19D7C
.text:0000000000019CB4                 SUB             X0, X29, #-var_E0
.text:0000000000019CB8                 MOV             W1, #2
.text:0000000000019CBC                 BL              .scmn_bsr_read
.text:0000000000019CC0                 STRB            W0, [X24,#0x47]
.text:0000000000019CC4                 SUB             X0, X29, #-var_E0
.text:0000000000019CC8                 BL              .scmn_bsr_read1
.text:0000000000019CCC                 STRB            W0, [X24,#0x4E]
.text:0000000000019CD0                 SUB             X0, X29, #-var_E0
.text:0000000000019CD4                 MOV             W1, #5
.text:0000000000019CD8                 BL              .scmn_bsr_read
.text:0000000000019CDC                 STRB            W0, [X24,#0x55]
.text:0000000000019CE0                 SUB             X0, X29, #-var_E0
.text:0000000000019CE4                 BL              .scmn_bsr_read1
.text:0000000000019CE8                 MOV             X21, XZR
.text:0000000000019CEC loc_19CEC                               ; CODE XREF: sheifm_make_hvcc+260↓j
.text:0000000000019CEC                 STRB            W0, [X28,X21]
.text:0000000000019CF0                 SUB             X0, X29, #-var_E0
.text:0000000000019CF4                 ADD             X21, X21, #1
.text:0000000000019CF8                 BL              .scmn_bsr_read1
.text:0000000000019CFC                 CMP             X21, #0x20 ; ' '
.text:0000000000019D00                 B.NE            loc_19CEC
.text:0000000000019D04                 STRB            W0, [X24,#0x13C]
.text:0000000000019D08                 SUB             X0, X29, #-var_E0
.text:0000000000019D0C                 BL              .scmn_bsr_read1
.text:0000000000019D10                 STRB            W0, [X24,#0x143]
.text:0000000000019D14                 SUB             X0, X29, #-var_E0
.text:0000000000019D18                 BL              .scmn_bsr_read1
.text:0000000000019D1C                 STRB            W0, [X24,#0x14A]
.text:0000000000019D20                 SUB             X0, X29, #-var_E0
.text:0000000000019D24                 BL              .scmn_bsr_read1
.text:0000000000019D28                 STRB            W0, [X24,#0x151]
.text:0000000000019D2C                 SUB             X0, X29, #-var_E0
.text:0000000000019D30                 MOV             W1, #0x10
.text:0000000000019D34                 BL              .scmn_bsr_read
.text:0000000000019D38                 MOV             W8, W0
.text:0000000000019D3C                 ADD             X21, X27, X26,LSL#3
.text:0000000000019D40                 SUB             X0, X29, #-var_E0
.text:0000000000019D44                 MOV             W1, #0x10
.text:0000000000019D48                 STR             X8, [X21,#0x158]
.text:0000000000019D4C                 BL              .scmn_bsr_read
.text:0000000000019D50                 LDR             X8, [X21,#0x158]
.text:0000000000019D54                 MOV             W9, W0
.text:0000000000019D58                 SUB             X0, X29, #-var_E0
.text:0000000000019D5C                 MOV             W1, #0xC
.text:0000000000019D60                 ORR             X8, X8, X9
.text:0000000000019D64                 STR             X8, [X21,#0x158]
.text:0000000000019D68                 BL              .scmn_bsr_read
.text:0000000000019D6C                 LDR             X8, [X21,#0x158]
.text:0000000000019D70                 MOV             W9, W0
.text:0000000000019D74                 ORR             X8, X8, X9
.text:0000000000019D78                 STR             X8, [X21,#0x158]
.text:0000000000019D7C loc_19D7C                               ; CODE XREF: sheifm_make_hvcc+210↑j
.text:0000000000019D7C                 LDRB            W8, [X24,#0x38]
.text:0000000000019D80                 CBZ             W8, loc_19D94
.text:0000000000019D84                 SUB             X0, X29, #-var_E0
.text:0000000000019D88                 MOV             W1, #8
.text:0000000000019D8C                 BL              .scmn_bsr_read
.text:0000000000019D90                 STRB            W0, [X24,#0x190]
.text:0000000000019D94 loc_19D94                               ; CODE XREF: sheifm_make_hvcc+2E0↑j
.text:0000000000019D94                 ADD             X26, X26, #1
.text:0000000000019D98                 ADD             X28, X28, #0x20 ; ' '
.text:0000000000019D9C                 CMP             X26, X25
.text:0000000000019DA0                 B.NE            loc_19CA8
.text:0000000000019DA4 loc_19DA4                               ; CODE XREF: sheifm_make_hvcc+194↑j
.text:0000000000019DA4                 LDUR            W0, [X29,#var_E0]
.text:0000000000019DA8                 TBNZ            W0, #0x1F, loc_19DF0
.text:0000000000019DAC                 CBZ             W0, loc_19E08
.text:0000000000019DB0                 MOV             W21, WZR
.text:0000000000019DB4                 ADD             X24, SP, #0x290+var_280
.text:0000000000019DB8                 B               loc_19E24
.text:0000000000019DBC ; ---------------------------------------------------------------------------
.text:0000000000019DBC loc_19DBC                               ; CODE XREF: sheifm_make_hvcc+38↑j
.text:0000000000019DBC                                         ; sheifm_make_hvcc+48↑j ...
.text:0000000000019DBC                 MOV             W0, #0xFFFFFFFF
.text:0000000000019DC0 loc_19DC0                               ; CODE XREF: sheifm_make_hvcc+58↑j
.text:0000000000019DC0                                         ; sheifm_make_hvcc+64↑j ...
.text:0000000000019DC0                 LDR             X8, [X22,#0x28]
.text:0000000000019DC4                 LDR             X9, [X23,#0x18]
.text:0000000000019DC8                 CMP             X8, X9
.text:0000000000019DCC                 B.NE            loc_1A598
.text:0000000000019DD0                 ADD             SP, SP, #0x240
.text:0000000000019DD4                 LDP             X29, X30, [SP,#0x50+var_s0]
.text:0000000000019DD8                 LDP             X20, X19, [SP,#0x50+var_10]
.text:0000000000019DDC                 LDP             X22, X21, [SP,#0x50+var_20]
.text:0000000000019DE0                 LDP             X24, X23, [SP,#0x50+var_30]
.text:0000000000019DE4                 LDP             X26, X25, [SP,#0x50+var_40]
.text:0000000000019DE8                 LDP             X28, X27, [SP+0x50+var_50],#0x60
.text:0000000000019DEC                 RET
.text:0000000000019DF0 ; ---------------------------------------------------------------------------
.text:0000000000019DF0 loc_19DF0                               ; CODE XREF: sheifm_make_hvcc+308↑j
.text:0000000000019DF0                 LDUR            W9, [X29,#var_DC]
.text:0000000000019DF4                 LSL             W0, W0, #1
.text:0000000000019DF8                 MOV             W8, WZR
.text:0000000000019DFC                 ADD             X24, SP, #0x290+var_280
.text:0000000000019E00                 SUB             W9, W9, #1
.text:0000000000019E04                 B               loc_19E64
.text:0000000000019E08 ; ---------------------------------------------------------------------------
.text:0000000000019E08 loc_19E08                               ; CODE XREF: sheifm_make_hvcc+30C↑j
.text:0000000000019E08                 ADD             X24, SP, #0x290+var_280
.text:0000000000019E0C                 LDUR            W21, [X29,#var_DC]
.text:0000000000019E10                 SUB             X0, X29, #-var_E0
.text:0000000000019E14                 MOV             W1, #4
.text:0000000000019E18                 LDR             X8, [X24,#0x1C8]
.text:0000000000019E1C                 BLR             X8
.text:0000000000019E20                 LDUR            W0, [X29,#var_E0]
.text:0000000000019E24 loc_19E24                               ; CODE XREF: sheifm_make_hvcc+318↑j
.text:0000000000019E24                 BL              .scmn_bsr_clz_in_code
.text:0000000000019E28                 ADDS            W8, W0, W21
.text:0000000000019E2C                 B.EQ            loc_19E58
.text:0000000000019E30                 ADD             W8, W0, W8
.text:0000000000019E34                 ADD             W1, W8, #1
.text:0000000000019E38                 SUB             X0, X29, #-var_E0
.text:0000000000019E3C                 BL              .scmn_bsr_read
.text:0000000000019E40                 MOV             W8, W0
.text:0000000000019E44                 LDUR            W0, [X29,#var_E0]
.text:0000000000019E48                 SUB             W8, W8, #1
.text:0000000000019E4C                 STRB            W8, [SP,#0x290+var_280+3]
.text:0000000000019E50                 TBZ             W0, #0x1F, loc_19E70
.text:0000000000019E54                 B               loc_19EF0
.text:0000000000019E58 ; ---------------------------------------------------------------------------
.text:0000000000019E58 loc_19E58                               ; CODE XREF: sheifm_make_hvcc+38C↑j
.text:0000000000019E58                 LDP             W9, W10, [X29,#var_E0]
.text:0000000000019E5C                 LSL             W0, W9, #1
.text:0000000000019E60                 SUB             W9, W10, #1
.text:0000000000019E64 loc_19E64                               ; CODE XREF: sheifm_make_hvcc+364↑j
.text:0000000000019E64                 STP             W0, W9, [X29,#var_E0]
.text:0000000000019E68                 STRB            W8, [SP,#0x290+var_280+3]
.text:0000000000019E6C                 TBNZ            W0, #0x1F, loc_19EF0
.text:0000000000019E70 loc_19E70                               ; CODE XREF: sheifm_make_hvcc+3B0↑j
.text:0000000000019E70                 CBZ             W0, loc_19E7C
.text:0000000000019E74                 MOV             W21, WZR
.text:0000000000019E78                 B               loc_19E94
.text:0000000000019E7C ; ---------------------------------------------------------------------------
.text:0000000000019E7C loc_19E7C                               ; CODE XREF: sheifm_make_hvcc:loc_19E70↑j
.text:0000000000019E7C                 LDR             X8, [X24,#0x1C8]
.text:0000000000019E80                 SUB             X0, X29, #-var_E0
.text:0000000000019E84                 LDUR            W21, [X29,#var_DC]
.text:0000000000019E88                 MOV             W1, #4
.text:0000000000019E8C                 BLR             X8
.text:0000000000019E90                 LDUR            W0, [X29,#var_E0]
.text:0000000000019E94 loc_19E94                               ; CODE XREF: sheifm_make_hvcc+3D8↑j
.text:0000000000019E94                 BL              .scmn_bsr_clz_in_code
.text:0000000000019E98                 ADDS            W8, W0, W21
.text:0000000000019E9C                 B.EQ            loc_19EEC
.text:0000000000019EA0                 ADD             W8, W0, W8
.text:0000000000019EA4                 ADD             W1, W8, #1
.text:0000000000019EA8                 SUB             X0, X29, #-var_E0
.text:0000000000019EAC                 BL              .scmn_bsr_read
.text:0000000000019EB0                 SUB             W8, W0, #1
.text:0000000000019EB4                 AND             W9, W8, #0xFF
.text:0000000000019EB8                 CMP             W9, #3
.text:0000000000019EBC                 STRB            W8, [SP,#0x290+var_280+4]
.text:0000000000019EC0                 B.NE            loc_19F04
.text:0000000000019EC4                 SUB             X0, X29, #-var_E0
.text:0000000000019EC8                 BL              .scmn_bsr_read1
.text:0000000000019ECC                 STRB            W0, [SP,#0x290+var_280+5]
.text:0000000000019ED0                 LDUR            W0, [X29,#var_E0]
.text:0000000000019ED4                 TBZ             W0, #0x1F, loc_19F0C
.text:0000000000019ED8 loc_19ED8                               ; CODE XREF: sheifm_make_hvcc+468↓j
.text:0000000000019ED8                 LDUR            W9, [X29,#var_DC]
.text:0000000000019EDC                 LSL             W0, W0, #1
.text:0000000000019EE0                 MOV             W8, WZR
.text:0000000000019EE4                 SUB             W9, W9, #1
.text:0000000000019EE8                 B               loc_19F84
.text:0000000000019EEC ; ---------------------------------------------------------------------------
.text:0000000000019EEC loc_19EEC                               ; CODE XREF: sheifm_make_hvcc+3FC↑j
.text:0000000000019EEC                 LDUR            W0, [X29,#var_E0]
.text:0000000000019EF0 loc_19EF0                               ; CODE XREF: sheifm_make_hvcc+3B4↑j
.text:0000000000019EF0                                         ; sheifm_make_hvcc+3CC↑j
.text:0000000000019EF0                 LDUR            W8, [X29,#var_DC]
.text:0000000000019EF4                 LSL             W9, W0, #1
.text:0000000000019EF8                 STRB            WZR, [SP,#0x290+var_280+4]
.text:0000000000019EFC                 SUB             W8, W8, #1
.text:0000000000019F00                 STP             W9, W8, [X29,#var_E0]
.text:0000000000019F04 loc_19F04                               ; CODE XREF: sheifm_make_hvcc+420↑j
.text:0000000000019F04                 LDUR            W0, [X29,#var_E0]
.text:0000000000019F08                 TBNZ            W0, #0x1F, loc_19ED8
.text:0000000000019F0C loc_19F0C                               ; CODE XREF: sheifm_make_hvcc+434↑j
.text:0000000000019F0C                 CBZ             W0, loc_19F18
.text:0000000000019F10                 MOV             W21, WZR
.text:0000000000019F14                 B               loc_19F30
.text:0000000000019F18 ; ---------------------------------------------------------------------------
.text:0000000000019F18 loc_19F18                               ; CODE XREF: sheifm_make_hvcc:loc_19F0C↑j
.text:0000000000019F18                 LDR             X8, [X24,#0x1C8]
.text:0000000000019F1C                 SUB             X0, X29, #-var_E0
.text:0000000000019F20                 LDUR            W21, [X29,#var_DC]
.text:0000000000019F24                 MOV             W1, #4
.text:0000000000019F28                 BLR             X8
.text:0000000000019F2C                 LDUR            W0, [X29,#var_E0]
.text:0000000000019F30 loc_19F30                               ; CODE XREF: sheifm_make_hvcc+474↑j
.text:0000000000019F30                 BL              .scmn_bsr_clz_in_code
.text:0000000000019F34                 ADDS            W8, W0, W21
.text:0000000000019F38                 B.EQ            loc_19F78
.text:0000000000019F3C                 ADD             W8, W0, W8
.text:0000000000019F40                 ADD             W1, W8, #1
.text:0000000000019F44                 SUB             X0, X29, #-var_E0
.text:0000000000019F48                 BL              .scmn_bsr_read
.text:0000000000019F4C                 MOV             W8, W0
.text:0000000000019F50                 LDUR            W0, [X29,#var_E0]
.text:0000000000019F54                 SUB             W8, W8, #1
.text:0000000000019F58                 STR             W8, [SP,#0x290+var_280+8]
.text:0000000000019F5C                 TBZ             W0, #0x1F, loc_19F90
.text:0000000000019F60 loc_19F60                               ; CODE XREF: sheifm_make_hvcc+4EC↓j
.text:0000000000019F60                 LDUR            W9, [X29,#var_DC]
.text:0000000000019F64                 LSL             W10, W0, #1
.text:0000000000019F68                 MOV             W8, WZR
.text:0000000000019F6C                 SUB             W9, W9, #1
.text:0000000000019F70                 STP             W10, W9, [X29,#var_E0]
.text:0000000000019F74                 B               loc_19FE8
.text:0000000000019F78 ; ---------------------------------------------------------------------------
.text:0000000000019F78 loc_19F78                               ; CODE XREF: sheifm_make_hvcc+498↑j
.text:0000000000019F78                 LDP             W9, W10, [X29,#var_E0]
.text:0000000000019F7C                 LSL             W0, W9, #1
.text:0000000000019F80                 SUB             W9, W10, #1
.text:0000000000019F84 loc_19F84                               ; CODE XREF: sheifm_make_hvcc+448↑j
.text:0000000000019F84                 STP             W0, W9, [X29,#var_E0]
.text:0000000000019F88                 STR             W8, [SP,#0x290+var_280+8]
.text:0000000000019F8C                 TBNZ            W0, #0x1F, loc_19F60
.text:0000000000019F90 loc_19F90                               ; CODE XREF: sheifm_make_hvcc+4BC↑j
.text:0000000000019F90                 CBZ             W0, loc_19F9C
.text:0000000000019F94                 MOV             W21, WZR
.text:0000000000019F98                 B               loc_19FB4
.text:0000000000019F9C ; ---------------------------------------------------------------------------
.text:0000000000019F9C loc_19F9C                               ; CODE XREF: sheifm_make_hvcc:loc_19F90↑j
.text:0000000000019F9C                 LDR             X8, [X24,#0x1C8]
.text:0000000000019FA0                 SUB             X0, X29, #-var_E0
.text:0000000000019FA4                 LDUR            W21, [X29,#var_DC]
.text:0000000000019FA8                 MOV             W1, #4
.text:0000000000019FAC                 BLR             X8
.text:0000000000019FB0                 LDUR            W0, [X29,#var_E0]
.text:0000000000019FB4 loc_19FB4                               ; CODE XREF: sheifm_make_hvcc+4F8↑j
.text:0000000000019FB4                 BL              .scmn_bsr_clz_in_code
.text:0000000000019FB8                 ADDS            W8, W0, W21
.text:0000000000019FBC                 B.EQ            loc_19FD8
.text:0000000000019FC0                 ADD             W8, W0, W8
.text:0000000000019FC4                 ADD             W1, W8, #1
.text:0000000000019FC8                 SUB             X0, X29, #-var_E0
.text:0000000000019FCC                 BL              .scmn_bsr_read
.text:0000000000019FD0                 SUB             W8, W0, #1
.text:0000000000019FD4                 B               loc_19FE8
.text:0000000000019FD8 ; ---------------------------------------------------------------------------
.text:0000000000019FD8 loc_19FD8                               ; CODE XREF: sheifm_make_hvcc+51C↑j
.text:0000000000019FD8                 LDP             W9, W10, [X29,#var_E0]
.text:0000000000019FDC                 SUB             W10, W10, #1
.text:0000000000019FE0                 LSL             W9, W9, #1
.text:0000000000019FE4                 STP             W9, W10, [X29,#var_E0]
.text:0000000000019FE8 loc_19FE8                               ; CODE XREF: sheifm_make_hvcc+4D4↑j
.text:0000000000019FE8                                         ; sheifm_make_hvcc+534↑j
.text:0000000000019FE8                 SUB             X0, X29, #-var_E0
.text:0000000000019FEC                 STR             W8, [SP,#0x290+var_280+0xC]
.text:0000000000019FF0                 BL              .scmn_bsr_read1
.text:0000000000019FF4                 TST             W0, #0xFFFF
.text:0000000000019FF8                 STRH            W0, [SP,#0x290+var_270]
.text:0000000000019FFC                 B.EQ            loc_1A1FC
.text:000000000001A000                 LDUR            W0, [X29,#var_E0]
.text:000000000001A004                 TBNZ            W0, #0x1F, loc_1A014
.text:000000000001A008                 CBZ             W0, loc_1A028
.text:000000000001A00C                 MOV             W21, WZR
.text:000000000001A010                 B               loc_1A040
.text:000000000001A014 ; ---------------------------------------------------------------------------
.text:000000000001A014 loc_1A014                               ; CODE XREF: sheifm_make_hvcc+564↑j
.text:000000000001A014                 LDUR            W9, [X29,#var_DC]
.text:000000000001A018                 LSL             W0, W0, #1
.text:000000000001A01C                 MOV             W8, WZR
.text:000000000001A020                 SUB             W9, W9, #1
.text:000000000001A024                 B               loc_1A090
.text:000000000001A028 ; ---------------------------------------------------------------------------
.text:000000000001A028 loc_1A028                               ; CODE XREF: sheifm_make_hvcc+568↑j
.text:000000000001A028                 LDR             X8, [X24,#0x1C8]
.text:000000000001A02C                 SUB             X0, X29, #-var_E0
.text:000000000001A030                 LDUR            W21, [X29,#var_DC]
.text:000000000001A034                 MOV             W1, #4
.text:000000000001A038                 BLR             X8
.text:000000000001A03C                 LDUR            W0, [X29,#var_E0]
.text:000000000001A040 loc_1A040                               ; CODE XREF: sheifm_make_hvcc+570↑j
.text:000000000001A040                 BL              .scmn_bsr_clz_in_code
.text:000000000001A044                 ADDS            W8, W0, W21
.text:000000000001A048                 B.EQ            loc_1A084
.text:000000000001A04C                 ADD             W8, W0, W8
.text:000000000001A050                 ADD             W1, W8, #1
.text:000000000001A054                 SUB             X0, X29, #-var_E0
.text:000000000001A058                 BL              .scmn_bsr_read
.text:000000000001A05C                 MOV             W8, W0
.text:000000000001A060                 LDUR            W0, [X29,#var_E0]
.text:000000000001A064                 SUB             W8, W8, #1
.text:000000000001A068                 STRH            W8, [SP,#0x290+var_26E]
.text:000000000001A06C                 TBZ             W0, #0x1F, loc_1A09C
.text:000000000001A070 loc_1A070                               ; CODE XREF: sheifm_make_hvcc+5F8↓j
.text:000000000001A070                 LDUR            W9, [X29,#var_DC]
.text:000000000001A074                 LSL             W0, W0, #1
.text:000000000001A078                 MOV             W8, WZR
.text:000000000001A07C                 SUB             W9, W9, #1
.text:000000000001A080                 B               loc_1A110
.text:000000000001A084 ; ---------------------------------------------------------------------------
.text:000000000001A084 loc_1A084                               ; CODE XREF: sheifm_make_hvcc+5A8↑j
.text:000000000001A084                 LDP             W9, W10, [X29,#var_E0]
.text:000000000001A088                 LSL             W0, W9, #1
.text:000000000001A08C                 SUB             W9, W10, #1
.text:000000000001A090 loc_1A090                               ; CODE XREF: sheifm_make_hvcc+584↑j
.text:000000000001A090                 STP             W0, W9, [X29,#var_E0]
.text:000000000001A094                 STRH            W8, [SP,#0x290+var_26E]
.text:000000000001A098                 TBNZ            W0, #0x1F, loc_1A070
.text:000000000001A09C loc_1A09C                               ; CODE XREF: sheifm_make_hvcc+5CC↑j
.text:000000000001A09C                 CBZ             W0, loc_1A0A8
.text:000000000001A0A0                 MOV             W21, WZR
.text:000000000001A0A4                 B               loc_1A0C0
.text:000000000001A0A8 ; ---------------------------------------------------------------------------
.text:000000000001A0A8 loc_1A0A8                               ; CODE XREF: sheifm_make_hvcc:loc_1A09C↑j
.text:000000000001A0A8                 LDR             X8, [X24,#0x1C8]
.text:000000000001A0AC                 SUB             X0, X29, #-var_E0
.text:000000000001A0B0                 LDUR            W21, [X29,#var_DC]
.text:000000000001A0B4                 MOV             W1, #4
.text:000000000001A0B8                 BLR             X8
.text:000000000001A0BC                 LDUR            W0, [X29,#var_E0]
.text:000000000001A0C0 loc_1A0C0                               ; CODE XREF: sheifm_make_hvcc+604↑j
.text:000000000001A0C0                 BL              .scmn_bsr_clz_in_code
.text:000000000001A0C4                 ADDS            W8, W0, W21
.text:000000000001A0C8                 B.EQ            loc_1A104
.text:000000000001A0CC                 ADD             W8, W0, W8
.text:000000000001A0D0                 ADD             W1, W8, #1
.text:000000000001A0D4                 SUB             X0, X29, #-var_E0
.text:000000000001A0D8                 BL              .scmn_bsr_read
.text:000000000001A0DC                 MOV             W8, W0
.text:000000000001A0E0                 LDUR            W0, [X29,#var_E0]
.text:000000000001A0E4                 SUB             W8, W8, #1
.text:000000000001A0E8                 STRH            W8, [SP,#0x290+var_26C]
.text:000000000001A0EC                 TBZ             W0, #0x1F, loc_1A11C
.text:000000000001A0F0 loc_1A0F0                               ; CODE XREF: sheifm_make_hvcc+678↓j
.text:000000000001A0F0                 LDUR            W9, [X29,#var_DC]
.text:000000000001A0F4                 LSL             W0, W0, #1
.text:000000000001A0F8                 MOV             W8, WZR
.text:000000000001A0FC                 SUB             W9, W9, #1
.text:000000000001A100                 B               loc_1A194
.text:000000000001A104 ; ---------------------------------------------------------------------------
.text:000000000001A104 loc_1A104                               ; CODE XREF: sheifm_make_hvcc+628↑j
.text:000000000001A104                 LDP             W9, W10, [X29,#var_E0]
.text:000000000001A108                 LSL             W0, W9, #1
.text:000000000001A10C                 SUB             W9, W10, #1
.text:000000000001A110 loc_1A110                               ; CODE XREF: sheifm_make_hvcc+5E0↑j
.text:000000000001A110                 STP             W0, W9, [X29,#var_E0]
.text:000000000001A114                 STRH            W8, [SP,#0x290+var_26C]
.text:000000000001A118                 TBNZ            W0, #0x1F, loc_1A0F0
.text:000000000001A11C loc_1A11C                               ; CODE XREF: sheifm_make_hvcc+64C↑j
.text:000000000001A11C                 CBZ             W0, loc_1A128
.text:000000000001A120                 MOV             W21, WZR
.text:000000000001A124                 B               loc_1A140
.text:000000000001A128 ; ---------------------------------------------------------------------------
.text:000000000001A128 loc_1A128                               ; CODE XREF: sheifm_make_hvcc:loc_1A11C↑j
.text:000000000001A128                 LDR             X8, [X24,#0x1C8]
.text:000000000001A12C                 SUB             X0, X29, #-var_E0
.text:000000000001A130                 LDUR            W21, [X29,#var_DC]
.text:000000000001A134                 MOV             W1, #4
.text:000000000001A138                 BLR             X8
.text:000000000001A13C                 LDUR            W0, [X29,#var_E0]
.text:000000000001A140 loc_1A140                               ; CODE XREF: sheifm_make_hvcc+684↑j
.text:000000000001A140                 BL              .scmn_bsr_clz_in_code
.text:000000000001A144                 ADDS            W8, W0, W21
.text:000000000001A148                 B.EQ            loc_1A188
.text:000000000001A14C                 ADD             W8, W0, W8
.text:000000000001A150                 ADD             W1, W8, #1
.text:000000000001A154                 SUB             X0, X29, #-var_E0
.text:000000000001A158                 BL              .scmn_bsr_read
.text:000000000001A15C                 MOV             W8, W0
.text:000000000001A160                 LDUR            W0, [X29,#var_E0]
.text:000000000001A164                 SUB             W8, W8, #1
.text:000000000001A168                 STRH            W8, [SP,#0x290+var_26A]
.text:000000000001A16C                 TBZ             W0, #0x1F, loc_1A1A0
.text:000000000001A170 loc_1A170                               ; CODE XREF: sheifm_make_hvcc+6FC↓j
.text:000000000001A170                 LDUR            W9, [X29,#var_DC]
.text:000000000001A174                 LSL             W10, W0, #1
.text:000000000001A178                 MOV             W8, WZR
.text:000000000001A17C                 SUB             W9, W9, #1
.text:000000000001A180                 STP             W10, W9, [X29,#var_E0]
.text:000000000001A184                 B               loc_1A1F8
.text:000000000001A188 ; ---------------------------------------------------------------------------
.text:000000000001A188 loc_1A188                               ; CODE XREF: sheifm_make_hvcc+6A8↑j
.text:000000000001A188                 LDP             W9, W10, [X29,#var_E0]
.text:000000000001A18C                 LSL             W0, W9, #1
.text:000000000001A190                 SUB             W9, W10, #1
.text:000000000001A194 loc_1A194                               ; CODE XREF: sheifm_make_hvcc+660↑j
.text:000000000001A194                 STP             W0, W9, [X29,#var_E0]
.text:000000000001A198                 STRH            W8, [SP,#0x290+var_26A]
.text:000000000001A19C                 TBNZ            W0, #0x1F, loc_1A170
.text:000000000001A1A0 loc_1A1A0                               ; CODE XREF: sheifm_make_hvcc+6CC↑j
.text:000000000001A1A0                 CBZ             W0, loc_1A1AC
.text:000000000001A1A4                 MOV             W21, WZR
.text:000000000001A1A8                 B               loc_1A1C4
.text:000000000001A1AC ; ---------------------------------------------------------------------------
.text:000000000001A1AC loc_1A1AC                               ; CODE XREF: sheifm_make_hvcc:loc_1A1A0↑j
.text:000000000001A1AC                 LDR             X8, [X24,#0x1C8]
.text:000000000001A1B0                 SUB             X0, X29, #-var_E0
.text:000000000001A1B4                 LDUR            W21, [X29,#var_DC]
.text:000000000001A1B8                 MOV             W1, #4
.text:000000000001A1BC                 BLR             X8
.text:000000000001A1C0                 LDUR            W0, [X29,#var_E0]
.text:000000000001A1C4 loc_1A1C4                               ; CODE XREF: sheifm_make_hvcc+708↑j
.text:000000000001A1C4                 BL              .scmn_bsr_clz_in_code
.text:000000000001A1C8                 ADDS            W8, W0, W21
.text:000000000001A1CC                 B.EQ            loc_1A1E8
.text:000000000001A1D0                 ADD             W8, W0, W8
.text:000000000001A1D4                 ADD             W1, W8, #1
.text:000000000001A1D8                 SUB             X0, X29, #-var_E0
.text:000000000001A1DC                 BL              .scmn_bsr_read
.text:000000000001A1E0                 SUB             W8, W0, #1
.text:000000000001A1E4                 B               loc_1A1F8
.text:000000000001A1E8 ; ---------------------------------------------------------------------------
.text:000000000001A1E8 loc_1A1E8                               ; CODE XREF: sheifm_make_hvcc+72C↑j
.text:000000000001A1E8                 LDP             W9, W10, [X29,#var_E0]
.text:000000000001A1EC                 SUB             W10, W10, #1
.text:000000000001A1F0                 LSL             W9, W9, #1
.text:000000000001A1F4                 STP             W9, W10, [X29,#var_E0]
.text:000000000001A1F8 loc_1A1F8                               ; CODE XREF: sheifm_make_hvcc+6E4↑j
.text:000000000001A1F8                                         ; sheifm_make_hvcc+744↑j
.text:000000000001A1F8                 STRH            W8, [SP,#0x290+var_268]
.text:000000000001A1FC loc_1A1FC                               ; CODE XREF: sheifm_make_hvcc+55C↑j
.text:000000000001A1FC                 LDUR            W0, [X29,#var_E0]
.text:000000000001A200                 TBNZ            W0, #0x1F, loc_1A210
.text:000000000001A204                 CBZ             W0, loc_1A224
.text:000000000001A208                 MOV             W21, WZR
.text:000000000001A20C                 B               loc_1A23C
.text:000000000001A210 ; ---------------------------------------------------------------------------
.text:000000000001A210 loc_1A210                               ; CODE XREF: sheifm_make_hvcc+760↑j
.text:000000000001A210                 LDUR            W9, [X29,#var_DC]
.text:000000000001A214                 LSL             W0, W0, #1
.text:000000000001A218                 MOV             W8, WZR
.text:000000000001A21C                 SUB             W9, W9, #1
.text:000000000001A220                 B               loc_1A290
.text:000000000001A224 ; ---------------------------------------------------------------------------
.text:000000000001A224 loc_1A224                               ; CODE XREF: sheifm_make_hvcc+764↑j
.text:000000000001A224                 LDR             X8, [X24,#0x1C8]
.text:000000000001A228                 SUB             X0, X29, #-var_E0
.text:000000000001A22C                 LDUR            W21, [X29,#var_DC]
.text:000000000001A230                 MOV             W1, #4
.text:000000000001A234                 BLR             X8
.text:000000000001A238                 LDUR            W0, [X29,#var_E0]
.text:000000000001A23C loc_1A23C                               ; CODE XREF: sheifm_make_hvcc+76C↑j
.text:000000000001A23C                 BL              .scmn_bsr_clz_in_code
.text:000000000001A240                 ADDS            W8, W0, W21
.text:000000000001A244                 B.EQ            loc_1A284
.text:000000000001A248                 ADD             W8, W0, W8
.text:000000000001A24C                 ADD             W1, W8, #1
.text:000000000001A250                 SUB             X0, X29, #-var_E0
.text:000000000001A254                 BL              .scmn_bsr_read
.text:000000000001A258                 MOV             W8, W0
.text:000000000001A25C                 LDUR            W0, [X29,#var_E0]
.text:000000000001A260                 SUB             W8, W8, #1
.text:000000000001A264                 STRB            W8, [SP,#0x290+var_266]
.text:000000000001A268                 TBZ             W0, #0x1F, loc_1A29C
.text:000000000001A26C loc_1A26C                               ; CODE XREF: sheifm_make_hvcc+7F8↓j
.text:000000000001A26C                 LDUR            W9, [X29,#var_DC]
.text:000000000001A270                 LSL             W10, W0, #1
.text:000000000001A274                 MOV             W8, WZR
.text:000000000001A278                 SUB             W9, W9, #1
.text:000000000001A27C                 STP             W10, W9, [X29,#var_E0]
.text:000000000001A280                 B               loc_1A2F4
.text:000000000001A284 ; ---------------------------------------------------------------------------
.text:000000000001A284 loc_1A284                               ; CODE XREF: sheifm_make_hvcc+7A4↑j
.text:000000000001A284                 LDP             W9, W10, [X29,#var_E0]
.text:000000000001A288                 LSL             W0, W9, #1
.text:000000000001A28C                 SUB             W9, W10, #1
.text:000000000001A290 loc_1A290                               ; CODE XREF: sheifm_make_hvcc+780↑j
.text:000000000001A290                 STP             W0, W9, [X29,#var_E0]
.text:000000000001A294                 STRB            W8, [SP,#0x290+var_266]
.text:000000000001A298                 TBNZ            W0, #0x1F, loc_1A26C
.text:000000000001A29C loc_1A29C                               ; CODE XREF: sheifm_make_hvcc+7C8↑j
.text:000000000001A29C                 CBZ             W0, loc_1A2A8
.text:000000000001A2A0                 MOV             W21, WZR
.text:000000000001A2A4                 B               loc_1A2C0
.text:000000000001A2A8 ; ---------------------------------------------------------------------------
.text:000000000001A2A8 loc_1A2A8                               ; CODE XREF: sheifm_make_hvcc:loc_1A29C↑j
.text:000000000001A2A8                 LDR             X8, [X24,#0x1C8]
.text:000000000001A2AC                 SUB             X0, X29, #-var_E0
.text:000000000001A2B0                 LDUR            W21, [X29,#var_DC]
.text:000000000001A2B4                 MOV             W1, #4
.text:000000000001A2B8                 BLR             X8
.text:000000000001A2BC                 LDUR            W0, [X29,#var_E0]
.text:000000000001A2C0 loc_1A2C0                               ; CODE XREF: sheifm_make_hvcc+804↑j
.text:000000000001A2C0                 BL              .scmn_bsr_clz_in_code
.text:000000000001A2C4                 ADDS            W8, W0, W21
.text:000000000001A2C8                 B.EQ            loc_1A2E4
.text:000000000001A2CC                 ADD             W8, W0, W8
.text:000000000001A2D0                 ADD             W1, W8, #1
.text:000000000001A2D4                 SUB             X0, X29, #-var_E0
.text:000000000001A2D8                 BL              .scmn_bsr_read
.text:000000000001A2DC                 SUB             W8, W0, #1
.text:000000000001A2E0                 B               loc_1A2F4
.text:000000000001A2E4 ; ---------------------------------------------------------------------------
.text:000000000001A2E4 loc_1A2E4                               ; CODE XREF: sheifm_make_hvcc+828↑j
.text:000000000001A2E4                 LDP             W9, W10, [X29,#var_E0]
.text:000000000001A2E8                 SUB             W10, W10, #1
.text:000000000001A2EC                 LSL             W9, W9, #1
.text:000000000001A2F0                 STP             W9, W10, [X29,#var_E0]
.text:000000000001A2F4 loc_1A2F4                               ; CODE XREF: sheifm_make_hvcc+7E0↑j
.text:000000000001A2F4                                         ; sheifm_make_hvcc+840↑j
.text:000000000001A2F4                 LDRB            W9, [SP,#0x290+var_263]
.text:000000000001A2F8                 MOV             W12, #1
.text:000000000001A2FC                 LDRB            W10, [SP,#0x290+var_264]
.text:000000000001A300                 LDRB            W13, [SP,#0x290+var_262]
.text:000000000001A304                 LDR             W11, [SP,#0x290+var_260]
.text:000000000001A308                 LSL             W9, W9, #5
.text:000000000001A30C                 LDR             X14, [SP,#0x290+var_260+8]
.text:000000000001A310                 ORR             W9, W9, W10,LSL#6
.text:000000000001A314                 STURB           W12, [X29,#var_80]
.text:000000000001A318                 ORR             W9, W9, W13
.text:000000000001A31C                 LSR             W10, W11, #0x18
.text:000000000001A320                 STURB           W11, [X29,#var_7B]
.text:000000000001A324                 LSR             W12, W11, #0x10
.text:000000000001A328                 STURB           W14, [X29,#var_75]
.text:000000000001A32C                 STURB           W10, [X29,#var_7E]
.text:000000000001A330                 LSR             W10, W11, #8
.text:000000000001A334                 STURB           W9, [X29,#var_7F]
.text:000000000001A338                 LSR             X9, X14, #0x28 ; '('
.text:000000000001A33C                 STURB           W10, [X29,#var_7C]
.text:000000000001A340                 LSR             X10, X14, #0x20 ; ' '
.text:000000000001A344                 STURB           W9, [X29,#var_7A]
.text:000000000001A348                 LSR             X9, X14, #0x18
.text:000000000001A34C                 LDRB            W11, [SP,#0x290+var_250]
.text:000000000001A350                 MOV             W13, #0xFC
.text:000000000001A354                 STURB           W10, [X29,#var_79]
.text:000000000001A358                 LSR             X10, X14, #8
.text:000000000001A35C                 STURB           W9, [X29,#var_78]
.text:000000000001A360                 LSR             X9, X14, #0x10
.text:000000000001A364                 STURB           W10, [X29,#var_76]
.text:000000000001A368                 MOV             W10, #0xF0
.text:000000000001A36C                 STURB           W9, [X29,#var_77]
.text:000000000001A370                 STURB           W11, [X29,#var_74]
.text:000000000001A374                 LDRB            W9, [SP,#0x290+var_280+4]
.text:000000000001A378                 LDRB            W11, [SP,#0x290+var_266]
.text:000000000001A37C                 STURB           W12, [X29,#var_7D]
.text:000000000001A380                 LDR             W12, [X19]
.text:000000000001A384                 LDR             W14, [X19,#0x38]
.text:000000000001A388                 ORR             W9, W9, #0xFC
.text:000000000001A38C                 STURH           W10, [X23,#0xD]
.text:000000000001A390                 ORR             W10, W11, #0xF8
.text:000000000001A394                 LDR             W11, [X19,#0x70]
.text:000000000001A398                 STURB           W9, [X29,#var_70]
.text:000000000001A39C                 ADD             W9, W14, W12
.text:000000000001A3A0                 STURB           W13, [X29,#var_71]
.text:000000000001A3A4                 ORR             W13, W8, #0xF8
.text:000000000001A3A8                 STURB           W10, [X29,#var_6F]
.text:000000000001A3AC                 MOV             W10, #3
.text:000000000001A3B0                 ADD             W9, W9, W11
.text:000000000001A3B4                 STURB           W13, [X29,#var_6E]
.text:000000000001A3B8                 STURH           WZR, [X23,#0x13]
.text:000000000001A3BC                 STURB           W10, [X29,#var_6B]
.text:000000000001A3C0                 STURB           W9, [X29,#var_6A]
.text:000000000001A3C4                 LDR             Q0, [X23]
.text:000000000001A3C8                 LDUR            X9, [X23,#0xF]
.text:000000000001A3CC                 STR             Q0, [X20]
.text:000000000001A3D0                 STUR            X9, [X20,#0xF]
.text:000000000001A3D4                 LDR             W9, [X19]
.text:000000000001A3D8                 STRB            W8, [SP,#0x290+var_265]
.text:000000000001A3DC                 CMP             W9, #1
.text:000000000001A3E0                 B.LT            loc_1A464
.text:000000000001A3E4                 MOV             W8, #0x20 ; ' '
.text:000000000001A3E8                 STRH            W9, [SP,#0x290+var_284]
.text:000000000001A3EC                 ADD             X0, SP, #0x290+var_284
.text:000000000001A3F0                 STRB            W8, [X20,#0x17]
.text:000000000001A3F4                 BL              .sheif_conv_u16
.text:000000000001A3F8                 LDRH            W8, [SP,#0x290+var_284]
.text:000000000001A3FC                 STRH            W8, [X20,#0x18]
.text:000000000001A400                 LDR             W8, [X19]
.text:000000000001A404                 CMP             W8, #1
.text:000000000001A408                 B.LT            loc_1A46C
.text:000000000001A40C                 MOV             X25, XZR
.text:000000000001A410                 ADD             X26, X19, #0x18
.text:000000000001A414                 MOV             W24, #0x1A
.text:000000000001A418 loc_1A418                               ; CODE XREF: sheifm_make_hvcc+9BC↓j
.text:000000000001A418                 ADD             X8, X26, X25,LSL#2
.text:000000000001A41C                 ADD             X0, SP, #0x290+var_284
.text:000000000001A420                 LDUR            W8, [X8,#-0x14]
.text:000000000001A424                 AND             X21, X8, #0xFFFF
.text:000000000001A428                 STRH            W8, [SP,#0x290+var_284]
.text:000000000001A42C                 BL              .sheif_conv_u16
.text:000000000001A430                 LDRH            W8, [SP,#0x290+var_284]
.text:000000000001A434                 MOV             X2, X21 ; n
.text:000000000001A438                 STRH            W8, [X20,W24,SXTW]
.text:000000000001A43C                 ADD             W24, W24, #2
.text:000000000001A440                 LDR             X1, [X26,X25,LSL#3] ; src
.text:000000000001A444                 ADD             X0, X20, W24,SXTW ; dest
.text:000000000001A448                 BL              .memcpy
.text:000000000001A44C                 LDRSW           X8, [X19]
.text:000000000001A450                 ADD             W24, W21, W24
.text:000000000001A454                 ADD             X25, X25, #1
.text:000000000001A458                 CMP             X25, X8
.text:000000000001A45C                 B.LT            loc_1A418
.text:000000000001A460                 B               loc_1A470
.text:000000000001A464 ; ---------------------------------------------------------------------------
.text:000000000001A464 loc_1A464                               ; CODE XREF: sheifm_make_hvcc+940↑j
.text:000000000001A464                 MOV             W24, #0x17
.text:000000000001A468                 B               loc_1A470
.text:000000000001A46C ; ---------------------------------------------------------------------------
.text:000000000001A46C loc_1A46C                               ; CODE XREF: sheifm_make_hvcc+968↑j
.text:000000000001A46C                 MOV             W24, #0x1A
.text:000000000001A470 loc_1A470                               ; CODE XREF: sheifm_make_hvcc+9C0↑j
.text:000000000001A470                                         ; sheifm_make_hvcc+9C8↑j
.text:000000000001A470                 LDR             W8, [X19,#0x38]
.text:000000000001A474                 CMP             W8, #1
.text:000000000001A478                 B.LT            loc_1A4FC
.text:000000000001A47C                 ADD             X21, X20, W24,SXTW
.text:000000000001A480                 STRH            W8, [SP,#0x290+var_284]
.text:000000000001A484                 MOV             W9, #0x21 ; '!'
.text:000000000001A488                 ADD             X0, SP, #0x290+var_284
.text:000000000001A48C                 STRB            W9, [X21]
.text:000000000001A490                 BL              .sheif_conv_u16
.text:000000000001A494                 LDRH            W8, [SP,#0x290+var_284]
.text:000000000001A498                 ADD             W24, W24, #3
.text:000000000001A49C                 STURH           W8, [X21,#1]
.text:000000000001A4A0                 LDR             W8, [X19,#0x38]
.text:000000000001A4A4                 CMP             W8, #1
.text:000000000001A4A8                 B.LT            loc_1A4FC
.text:000000000001A4AC                 MOV             X25, XZR
.text:000000000001A4B0                 ADD             X26, X19, #0x50 ; 'P'
.text:000000000001A4B4 loc_1A4B4                               ; CODE XREF: sheifm_make_hvcc+A58↓j
.text:000000000001A4B4                 ADD             X8, X26, X25,LSL#2
.text:000000000001A4B8                 ADD             X0, SP, #0x290+var_284
.text:000000000001A4BC                 LDUR            W8, [X8,#-0x14]
.text:000000000001A4C0                 AND             X21, X8, #0xFFFF
.text:000000000001A4C4                 STRH            W8, [SP,#0x290+var_284]
.text:000000000001A4C8                 BL              .sheif_conv_u16
.text:000000000001A4CC                 LDRH            W8, [SP,#0x290+var_284]
.text:000000000001A4D0                 MOV             X2, X21 ; n
.text:000000000001A4D4                 STRH            W8, [X20,W24,SXTW]
.text:000000000001A4D8                 ADD             W24, W24, #2
.text:000000000001A4DC                 LDR             X1, [X26,X25,LSL#3] ; src
.text:000000000001A4E0                 ADD             X0, X20, W24,SXTW ; dest
.text:000000000001A4E4                 BL              .memcpy
.text:000000000001A4E8                 LDRSW           X8, [X19,#0x38]
.text:000000000001A4EC                 ADD             W24, W21, W24
.text:000000000001A4F0                 ADD             X25, X25, #1
.text:000000000001A4F4                 CMP             X25, X8
.text:000000000001A4F8                 B.LT            loc_1A4B4
.text:000000000001A4FC loc_1A4FC                               ; CODE XREF: sheifm_make_hvcc+9D8↑j
.text:000000000001A4FC                                         ; sheifm_make_hvcc+A08↑j
.text:000000000001A4FC                 LDR             W8, [X19,#0x70]
.text:000000000001A500                 CMP             W8, #1
.text:000000000001A504                 B.LT            loc_1A590
.text:000000000001A508                 ADD             X21, X20, W24,SXTW
.text:000000000001A50C                 STRH            W8, [SP,#0x290+var_284]
.text:000000000001A510                 MOV             W9, #0x22 ; '"'
.text:000000000001A514                 ADD             X0, SP, #0x290+var_284
.text:000000000001A518                 STRB            W9, [X21]
.text:000000000001A51C                 BL              .sheif_conv_u16
.text:000000000001A520                 LDRH            W8, [SP,#0x290+var_284]
.text:000000000001A524                 STURH           W8, [X21,#1]
.text:000000000001A528                 LDR             W8, [X19,#0x70]
.text:000000000001A52C                 CMP             W8, #1
.text:000000000001A530                 B.LT            loc_1A590
.text:000000000001A534                 MOV             X25, XZR
.text:000000000001A538                 ADD             W26, W24, #3
.text:000000000001A53C                 ADD             X24, X19, #0x88
.text:000000000001A540 loc_1A540                               ; CODE XREF: sheifm_make_hvcc+AE8↓j
.text:000000000001A540                 ADD             X8, X24, X25,LSL#2
.text:000000000001A544                 ADD             X0, SP, #0x290+var_284
.text:000000000001A548                 LDUR            W8, [X8,#-0x14]
.text:000000000001A54C                 AND             X21, X8, #0xFFFF
.text:000000000001A550                 STRH            W8, [SP,#0x290+var_284]
.text:000000000001A554                 BL              .sheif_conv_u16
.text:000000000001A558                 LDRH            W8, [SP,#0x290+var_284]
.text:000000000001A55C                 MOV             X2, X21 ; n
.text:000000000001A560                 STRH            W8, [X20,W26,SXTW]
.text:000000000001A564                 ADD             W26, W26, #2
.text:000000000001A568                 LDR             X1, [X24,X25,LSL#3] ; src
.text:000000000001A56C                 ADD             X0, X20, W26,SXTW ; dest
.text:000000000001A570                 BL              .memcpy
.text:000000000001A574                 LDRSW           X8, [X19,#0x70]
.text:000000000001A578                 MOV             W0, WZR
.text:000000000001A57C                 ADD             W26, W21, W26
.text:000000000001A580                 ADD             X25, X25, #1
.text:000000000001A584                 CMP             X25, X8
.text:000000000001A588                 B.LT            loc_1A540
.text:000000000001A58C                 B               loc_19DC0
.text:000000000001A590 ; ---------------------------------------------------------------------------
.text:000000000001A590 loc_1A590                               ; CODE XREF: sheifm_make_hvcc+A64↑j
.text:000000000001A590                                         ; sheifm_make_hvcc+A90↑j
.text:000000000001A590                 MOV             W0, WZR
.text:000000000001A594                 B               loc_19DC0
.text:000000000001A598 ; ---------------------------------------------------------------------------
.text:000000000001A598 loc_1A598                               ; CODE XREF: sheifm_make_hvcc+32C↑j
.text:000000000001A598                 BL              .__stack_chk_fail
.text:000000000001A598 ; } // starts at 19AA0
.text:000000000001A598 ; End of function sheifm_make_hvcc
.text:000000000001A598 ; ---------------------------------------------------------------------------
.text:000000000001A59C                 ALIGN 0x20
.text:000000000001A5A0 loc_1A5A0                               ; DATA XREF: sheifm_make_hvcc+8C↑o
.text:000000000001A5A0                                         ; sheifm_make_hvcc+9C↑o
.text:000000000001A5A0 ; __unwind {
.text:000000000001A5A0                 LDP             X9, X8, [X0,#8]
.text:000000000001A5A4                 SUB             W10, W8, W9
.text:000000000001A5A8                 ADD             W11, W10, #1
.text:000000000001A5AC                 CMP             W11, W1
.text:000000000001A5B0                 CSINC           W13, W1, W10, GE
.text:000000000001A5B4                 CMP             W13, #0
.text:000000000001A5B8                 B.LE            loc_1A67C
.text:000000000001A5BC                 LDR             W12, [X0,#0x30]
.text:000000000001A5C0                 MOV             W14, WZR
.text:000000000001A5C4                 MOV             W10, WZR
.text:000000000001A5C8                 MOV             W11, WZR
.text:000000000001A5CC                 LSL             W15, W13, #3
.text:000000000001A5D0                 STR             W15, [X0,#4]
.text:000000000001A5D4 loc_1A5D4                               ; CODE XREF: .text:000000000001A644↓j
.text:000000000001A5D4                 LDRB            W16, [X9]
.text:000000000001A5D8                 CMP             W12, #1
.text:000000000001A5DC                 B.LE            loc_1A5F0
.text:000000000001A5E0                 CMP             W16, #3
.text:000000000001A5E4                 B.NE            loc_1A5F0
.text:000000000001A5E8                 LDRB            W16, [X9,#1]!
.text:000000000001A5EC                 MOV             W12, WZR
.text:000000000001A5F0 loc_1A5F0                               ; CODE XREF: .text:000000000001A5DC↑j
.text:000000000001A5F0                                         ; .text:000000000001A5E4↑j
.text:000000000001A5F0                 CBZ             W16, loc_1A5FC
.text:000000000001A5F4                 MOV             W12, WZR
.text:000000000001A5F8                 B               loc_1A628
.text:000000000001A5FC ; ---------------------------------------------------------------------------
.text:000000000001A5FC loc_1A5FC                               ; CODE XREF: .text:loc_1A5F0↑j
.text:000000000001A5FC                 ADD             X17, X9, #4
.text:000000000001A600                 CMP             X17, X8
.text:000000000001A604                 B.CS            loc_1A624
.text:000000000001A608                 LDRB            W17, [X9,#1]
.text:000000000001A60C                 CBNZ            W17, loc_1A624
.text:000000000001A610                 LDRB            W17, [X9,#2]
.text:000000000001A614                 CBNZ            W17, loc_1A61C
.text:000000000001A618                 LDRB            W17, [X9,#3]
.text:000000000001A61C loc_1A61C                               ; CODE XREF: .text:000000000001A614↑j
.text:000000000001A61C                 CMP             W17, #1
.text:000000000001A620                 B.EQ            loc_1A668
.text:000000000001A624 loc_1A624                               ; CODE XREF: .text:000000000001A604↑j
.text:000000000001A624                                         ; .text:000000000001A60C↑j
.text:000000000001A624                 ADD             W12, W12, #1
.text:000000000001A628 loc_1A628                               ; CODE XREF: .text:000000000001A5F8↑j
.text:000000000001A628                 BFI             W16, W11, #8, #0x18
.text:000000000001A62C                 ADD             X9, X9, #1
.text:000000000001A630                 ADD             W10, W10, #8
.text:000000000001A634                 SUB             W14, W14, #1
.text:000000000001A638                 MOV             W11, W16
.text:000000000001A63C                 ADD             W16, W13, W14
.text:000000000001A640                 CMP             W16, #1
.text:000000000001A644                 B.GE            loc_1A5D4
.text:000000000001A648                 MOV             W10, W15
.text:000000000001A64C loc_1A64C                               ; CODE XREF: .text:000000000001A678↓j
.text:000000000001A64C                 STR             X9, [X0,#8]
.text:000000000001A650                 NEG             W9, W10
.text:000000000001A654                 STR             W12, [X0,#0x30]
.text:000000000001A658                 LSL             W9, W11, W9
.text:000000000001A65C                 STR             W9, [X0]
.text:000000000001A660                 MOV             W0, WZR
.text:000000000001A664                 RET
.text:000000000001A668 ; ---------------------------------------------------------------------------
.text:000000000001A668 loc_1A668                               ; CODE XREF: .text:000000000001A620↑j
.text:000000000001A668                 SUB             X8, X9, #1
.text:000000000001A66C                 STR             X8, [X0,#0x10]
.text:000000000001A670                 CBZ             W14, loc_1A67C
.text:000000000001A674                 STR             W10, [X0,#4]
.text:000000000001A678                 B               loc_1A64C
.text:000000000001A67C ; ---------------------------------------------------------------------------
.text:000000000001A67C loc_1A67C                               ; CODE XREF: .text:000000000001A5B8↑j
.text:000000000001A67C                                         ; .text:000000000001A670↑j
.text:000000000001A67C                 MOV             W8, #0xFFFFFFFF
.text:000000000001A680                 STR             XZR, [X0]
.text:000000000001A684                 MOV             W0, W8
.text:000000000001A688                 RET
.text:000000000001A688 ; } // starts at 1A5A0
.text:000000000001A688 ; .text         ends
