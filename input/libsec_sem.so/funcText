.text:0000000000003FE0 ; ===========================================================================
.text:0000000000003FE0 ; Segment type: Pure code
.text:0000000000003FE0                 AREA .text, CODE
.text:0000000000003FE0                 ; ORG 0x3FE0
.text:0000000000003FE0                 CODE64
.text:0000000000003FE0 ; =============== S U B R O U T I N E =======================================
.text:0000000000003FE0                 EXPORT start
.text:0000000000003FE0 start                                   ; DATA XREF: LOAD:0000000000000018↑o
.text:0000000000003FE0                                         ; LOAD:0000000000000730↑o ...
.text:0000000000003FE0                 ADRP            X0, #unk_27000@PAGE
.text:0000000000003FE4                 ADD             X0, X0, #unk_27000@PAGEOFF ; void *
.text:0000000000003FE8                 B               .__cxa_finalize
.text:0000000000003FE8 ; End of function start
.text:0000000000003FEC ; =============== S U B R O U T I N E =======================================
.text:0000000000003FEC ; Attributes: bp-based frame
.text:0000000000003FEC sub_3FEC                                ; DATA XREF: .text:000000000000400C↓o
.text:0000000000003FEC                                         ; .text:0000000000004014↓o
.text:0000000000003FEC var_s0          =  0
.text:0000000000003FEC                 STP             X29, X30, [SP,#-0x10+var_s0]!
.text:0000000000003FF0                 MOV             X29, SP
.text:0000000000003FF4                 CBZ             X0, loc_3FFC
.text:0000000000003FF8                 BLR             X0
.text:0000000000003FFC loc_3FFC                                ; CODE XREF: sub_3FEC+8↑j
.text:0000000000003FFC                 LDP             X29, X30, [SP+var_s0],#0x10
.text:0000000000004000                 RET
.text:0000000000004000 ; End of function sub_3FEC
.text:0000000000004004 ; ---------------------------------------------------------------------------
.text:0000000000004004                 MOV             X1, X0
.text:0000000000004008                 ADRP            X2, #unk_27000@PAGE
.text:000000000000400C                 ADRP            X0, #sub_3FEC@PAGE
.text:0000000000004010                 ADD             X2, X2, #unk_27000@PAGEOFF
.text:0000000000004014                 ADD             X0, X0, #sub_3FEC@PAGEOFF
.text:0000000000004018                 B               .__cxa_atexit
.text:000000000000401C ; =============== S U B R O U T I N E =======================================
.text:000000000000401C                 EXPORT handleCCM
.text:000000000000401C handleCCM                               ; CODE XREF: .handleCCM+C↑j
.text:000000000000401C                                         ; DATA XREF: LOAD:0000000000000FA0↑o ...
.text:000000000000401C ; __unwind {
.text:000000000000401C                 MOV             X8, X0
.text:0000000000004020                 MOV             X9, X1
.text:0000000000004024                 MOV             W0, #0xA
.text:0000000000004028                 MOV             X1, X8
.text:000000000000402C                 MOV             X2, X9
.text:0000000000004030                 B               ._handleCCM
.text:0000000000004030 ; } // starts at 401C
.text:0000000000004030 ; End of function handleCCM
.text:0000000000004034 ; =============== S U B R O U T I N E =======================================
.text:0000000000004034 ; Attributes: bp-based frame
.text:0000000000004034                 EXPORT _handleCCM
.text:0000000000004034 _handleCCM                              ; CODE XREF: ._handleCCM+C↑j
.text:0000000000004034                                         ; DATA XREF: LOAD:0000000000000AC0↑o ...
.text:0000000000004034 var_2D138       = -0x2D138
.text:0000000000004034 src             = -0x2D130
.text:0000000000004034 var_2D12A       = -0x2D12A
.text:0000000000004034 s               = -0x2D068
.text:0000000000004034 var_50          = -0x50
.text:0000000000004034 var_40          = -0x40
.text:0000000000004034 var_30          = -0x30
.text:0000000000004034 var_20          = -0x20
.text:0000000000004034 var_10          = -0x10
.text:0000000000004034 var_s0          =  0
.text:0000000000004034 ; __unwind {
.text:0000000000004034                 STP             X28, X27, [SP,#-0x10+var_50]!
.text:0000000000004038                 STP             X26, X25, [SP,#0x50+var_40]
.text:000000000000403C                 STP             X24, X23, [SP,#0x50+var_30]
.text:0000000000004040                 STP             X22, X21, [SP,#0x50+var_20]
.text:0000000000004044                 STP             X20, X19, [SP,#0x50+var_10]
.text:0000000000004048                 STP             X29, X30, [SP,#0x50+var_s0]
.text:000000000000404C                 ADD             X29, SP, #0x50
.text:0000000000004050                 SUB             SP, SP, #0x2D,LSL#12
.text:0000000000004054                 SUB             SP, SP, #0xF0
.text:0000000000004058                 ADRP            X24, #__stack_chk_guard_ptr@PAGE
.text:000000000000405C                 LDR             X24, [X24,#__stack_chk_guard_ptr@PAGEOFF]
.text:0000000000004060                 MOV             X20, X2
.text:0000000000004064                 MOV             W22, W0
.text:0000000000004068                 ADD             X0, SP, #0x2D140+var_2D12A,LSL#12
.text:000000000000406C                 LDR             X24, [X24]
.text:0000000000004070                 MOV             W2, #0x10000
.text:0000000000004074                 MOV             X19, X1
.text:0000000000004078                 ADD             X25, SP, #0x2D140+var_2D138
.text:000000000000407C                 ADD             X26, SP, #0x2D140+var_2D12A,LSL#12
.text:0000000000004080                 ADD             X0, X0, #0x8D8 ; s
.text:0000000000004084                 MOVK            W2, #0x680C ; n
.text:0000000000004088                 MOV             W1, WZR ; c
.text:000000000000408C                 ADD             X26, X26, #0x8D8
.text:0000000000004090                 STR             X24, [X25]
.text:0000000000004094                 BL              .memset
.text:0000000000004098                 MOV             W2, #0x10000
.text:000000000000409C                 MOV             W8, #0xFFFFFFFF
.text:00000000000040A0                 ADD             X0, SP, #0x2D140+s ; s
.text:00000000000040A4                 MOVK            W2, #0x6800 ; n
.text:00000000000040A8                 MOV             W1, WZR ; c
.text:00000000000040AC                 STR             W8, [X26,#4]
.text:00000000000040B0                 BL              .memset
.text:00000000000040B4                 ADD             X0, SP, #0x2D140+src ; s
.text:00000000000040B8                 MOV             W2, #0xC8 ; n
.text:00000000000040BC                 MOV             W1, WZR ; c
.text:00000000000040C0                 BL              .memset
.text:00000000000040C4                 CBZ             X19, loc_41A0
.text:00000000000040C8                 CBZ             X20, loc_40D8
.text:00000000000040CC                 LDR             W21, [X20]
.text:00000000000040D0                 CMP             W21, #0
.text:00000000000040D4                 B.LE            loc_41A0
.text:00000000000040D8 loc_40D8                                ; CODE XREF: _handleCCM+94↑j
.text:00000000000040D8                 ADRP            X0, #aEfsSecEfsSspDa@PAGE ; "/efs/sec_efs/ssp_data"
.text:00000000000040DC                 ADD             X0, X0, #aEfsSecEfsSspDa@PAGEOFF ; "/efs/sec_efs/ssp_data"
.text:00000000000040E0                 ADD             X1, SP, #0x2D140+src
.text:00000000000040E4                 MOV             W2, #0xC8
.text:00000000000040E8                 BL              .c_readFile
.text:00000000000040EC                 MOV             W23, W0
.text:00000000000040F0                 TBNZ            W23, #0x1F, loc_41C0
.text:00000000000040F4                 STP             W22, W23, [SP,#0x2D140+s]
.text:00000000000040F8                 ADD             X22, SP, #0x2D140+s
.text:00000000000040FC                 ADD             X0, X22, #8 ; dest
.text:0000000000004100                 MOV             W2, W23 ; n
.text:0000000000004104                 ADD             X1, SP, #0x2D140+src ; src
.text:0000000000004108                 BL              .memcpy
.text:000000000000410C                 ADD             W8, W23, #8
.text:0000000000004110                 ADD             W23, W23, #0xC
.text:0000000000004114                 STR             W21, [X22,W8,UXTW]
.text:0000000000004118                 ADD             X0, X22, W23,UXTW ; dest
.text:000000000000411C                 SXTW            X22, W21
.text:0000000000004120                 MOV             X1, X19 ; src
.text:0000000000004124                 MOV             X2, X22 ; n
.text:0000000000004128                 BL              .memcpy
.text:000000000000412C                 ADRP            X1, #unk_10DEC@PAGE
.text:0000000000004130                 ADRP            X2, #aHandleccmClear@PAGE ; "_handleCCM clear buffer"
.text:0000000000004134                 ADD             X1, X1, #unk_10DEC@PAGEOFF
.text:0000000000004138                 ADD             X2, X2, #aHandleccmClear@PAGEOFF ; "_handleCCM clear buffer"
.text:000000000000413C                 MOV             W0, #4
.text:0000000000004140                 ADD             W23, W23, W21
.text:0000000000004144                 BL              .__android_log_print
.text:0000000000004148                 MOV             W1, WZR ; c
.text:000000000000414C                 MOV             X0, X19 ; s
.text:0000000000004150                 MOV             X2, X22 ; n
.text:0000000000004154                 BL              .memset
.text:0000000000004158                 ADD             X3, SP, #0x2D140+var_2D12A,LSL#12
.text:000000000000415C                 MOV             W0, #0x1B
.text:0000000000004160                 ADD             X1, SP, #0x2D140+s
.text:0000000000004164                 ADD             X3, X3, #0x8D8
.text:0000000000004168                 ADD             X22, SP, #0x2D140+var_2D12A,LSL#12
.text:000000000000416C                 MOV             W2, W23
.text:0000000000004170                 STR             WZR, [X20]
.text:0000000000004174                 ADD             X22, X22, #0x8D8
.text:0000000000004178                 BL              .invokeCommand
.text:000000000000417C                 CBZ             W0, loc_41E0
.text:0000000000004180                 LDR             W3, [X26,#4]
.text:0000000000004184                 ADRP            X1, #unk_10DEC@PAGE
.text:0000000000004188                 ADRP            X2, #aCmdHandleCcmDa@PAGE ; " CMD_HANDLE_CCM_DATA_P1 invokeCommand()"...
.text:000000000000418C                 ADD             X1, X1, #unk_10DEC@PAGEOFF
.text:0000000000004190                 ADD             X2, X2, #aCmdHandleCcmDa@PAGEOFF ; " CMD_HANDLE_CCM_DATA_P1 invokeCommand()"...
.text:0000000000004194 loc_4194                                ; CODE XREF: _handleCCM+314↓j
.text:0000000000004194                 MOV             W0, #6
.text:0000000000004198                 BL              .__android_log_print
.text:000000000000419C                 B               loc_4240
.text:00000000000041A0 ; ---------------------------------------------------------------------------
.text:00000000000041A0 loc_41A0                                ; CODE XREF: _handleCCM+90↑j
.text:00000000000041A0                                         ; _handleCCM+A0↑j
.text:00000000000041A0                 ADRP            X1, #unk_10DEC@PAGE
.text:00000000000041A4                 ADRP            X2, #aInvalidInputPa@PAGE ; "Invalid input parameters"
.text:00000000000041A8                 ADD             X1, X1, #unk_10DEC@PAGEOFF
.text:00000000000041AC                 ADD             X2, X2, #aInvalidInputPa@PAGEOFF ; "Invalid input parameters"
.text:00000000000041B0                 MOV             W0, #6
.text:00000000000041B4                 BL              .__android_log_print
.text:00000000000041B8                 MOV             W0, #0xFFFFFF8C
.text:00000000000041BC                 B               loc_4244
.text:00000000000041C0 ; ---------------------------------------------------------------------------
.text:00000000000041C0 loc_41C0                                ; CODE XREF: _handleCCM+BC↑j
.text:00000000000041C0                 ADRP            X1, #unk_10DEC@PAGE
.text:00000000000041C4                 ADRP            X2, #aOptKeySizeIsIn@PAGE ; "OPT KEY size is invalid."
.text:00000000000041C8                 ADD             X1, X1, #unk_10DEC@PAGEOFF
.text:00000000000041CC                 ADD             X2, X2, #aOptKeySizeIsIn@PAGEOFF ; "OPT KEY size is invalid."
.text:00000000000041D0                 MOV             W0, #6
.text:00000000000041D4                 BL              .__android_log_print
.text:00000000000041D8                 MOV             W0, #0xFFFFFF8D
.text:00000000000041DC                 B               loc_4244
.text:00000000000041E0 ; ---------------------------------------------------------------------------
.text:00000000000041E0 loc_41E0                                ; CODE XREF: _handleCCM+148↑j
.text:00000000000041E0                 MOV             W8, #0x16808
.text:00000000000041E8                 ADD             X23, X22, X8
.text:00000000000041EC                 LDR             W3, [X23]
.text:00000000000041F0                 CMP             W3, W21
.text:00000000000041F4                 B.LS            loc_4220
.text:00000000000041F8                 ADRP            X1, #unk_10DEC@PAGE
.text:00000000000041FC                 ADRP            X2, #aHandleccmdataD@PAGE ; "handleCCMData() data overflow %d, %d"
.text:0000000000004200                 ADD             X1, X1, #unk_10DEC@PAGEOFF
.text:0000000000004204                 ADD             X2, X2, #aHandleccmdataD@PAGEOFF ; "handleCCMData() data overflow %d, %d"
.text:0000000000004208                 MOV             W0, #6
.text:000000000000420C                 MOV             W4, W21
.text:0000000000004210                 BL              .__android_log_print
.text:0000000000004214                 MOV             W8, #0xFFFFFF8B
.text:0000000000004218 loc_4218                                ; CODE XREF: _handleCCM+28C↓j
.text:0000000000004218                                         ; _handleCCM+370↓j
.text:0000000000004218                 STR             W8, [X26,#4]
.text:000000000000421C                 B               loc_4240
.text:0000000000004220 ; ---------------------------------------------------------------------------
.text:0000000000004220 loc_4220                                ; CODE XREF: _handleCCM+1C0↑j
.text:0000000000004220                 LDR             W8, [X26,#4]
.text:0000000000004224                 CBZ             W8, loc_4270
.text:0000000000004228                 ADRP            X1, #unk_10DEC@PAGE
.text:000000000000422C                 ADRP            X2, #aHandleccmdataF@PAGE ; "handleCCMData() fail"
.text:0000000000004230                 ADD             X1, X1, #unk_10DEC@PAGEOFF
.text:0000000000004234                 ADD             X2, X2, #aHandleccmdataF@PAGEOFF ; "handleCCMData() fail"
.text:0000000000004238                 MOV             W0, #6
.text:000000000000423C                 BL              .__android_log_print
.text:0000000000004240 loc_4240                                ; CODE XREF: _handleCCM+168↑j
.text:0000000000004240                                         ; _handleCCM+1E8↑j ...
.text:0000000000004240                 LDR             W0, [X26,#4]
.text:0000000000004244 loc_4244                                ; CODE XREF: _handleCCM+188↑j
.text:0000000000004244                                         ; _handleCCM+1A8↑j
.text:0000000000004244                 LDR             X8, [X25]
.text:0000000000004248                 SUB             X8, X24, X8
.text:000000000000424C                 CBNZ            X8, loc_442C
.text:0000000000004250                 SUB             SP, X29, #0x50 ; 'P'
.text:0000000000004254                 LDP             X29, X30, [SP,#0x50+var_s0]
.text:0000000000004258                 LDP             X20, X19, [SP,#0x50+var_10]
.text:000000000000425C                 LDP             X22, X21, [SP,#0x50+var_20]
.text:0000000000004260                 LDP             X24, X23, [SP,#0x50+var_30]
.text:0000000000004264                 LDP             X26, X25, [SP,#0x50+var_40]
.text:0000000000004268                 LDP             X28, X27, [SP+0x50+var_50],#0x60
.text:000000000000426C                 RET
.text:0000000000004270 ; ---------------------------------------------------------------------------
.text:0000000000004270 loc_4270                                ; CODE XREF: _handleCCM+1F0↑j
.text:0000000000004270                 BL              .isLccmSwpProp
.text:0000000000004274                 ADRP            X1, #unk_10DEC@PAGE
.text:0000000000004278                 ADD             X1, X1, #unk_10DEC@PAGEOFF
.text:000000000000427C                 CMP             W0, #1
.text:0000000000004280                 B.NE            loc_42C4
.text:0000000000004284                 ADRP            X2, #aHandleccmSwp@PAGE ; "_handleCCM SWP"
.text:0000000000004288                 ADD             X2, X2, #aHandleccmSwp@PAGEOFF ; "_handleCCM SWP"
.text:000000000000428C                 MOV             W0, #4
.text:0000000000004290                 BL              .__android_log_print
.text:0000000000004294                 LDRSW           X2, [X23] ; n
.text:0000000000004298                 STR             W2, [X20]
.text:000000000000429C                 LDR             W8, [X26,#4]
.text:00000000000042A0                 CBZ             W8, loc_434C
.text:00000000000042A4                 ADRP            X1, #unk_10DEC@PAGE
.text:00000000000042A8                 ADRP            X2, #aHandleccmdataR@PAGE ; "handleCCMData() response is empty"
.text:00000000000042AC                 ADD             X1, X1, #unk_10DEC@PAGEOFF
.text:00000000000042B0                 ADD             X2, X2, #aHandleccmdataR@PAGEOFF ; "handleCCMData() response is empty"
.text:00000000000042B4                 MOV             W0, #6
.text:00000000000042B8                 BL              .__android_log_print
.text:00000000000042BC                 MOV             W8, #0xFFFFFFFF
.text:00000000000042C0                 B               loc_4218
.text:00000000000042C4 ; ---------------------------------------------------------------------------
.text:00000000000042C4 loc_42C4                                ; CODE XREF: _handleCCM+24C↑j
.text:00000000000042C4                 ADRP            X2, #aHandleccmSpi@PAGE ; "_handleCCM SPI"
.text:00000000000042C8                 ADD             X2, X2, #aHandleccmSpi@PAGEOFF ; "_handleCCM SPI"
.text:00000000000042CC                 MOV             W0, #4
.text:00000000000042D0                 BL              .__android_log_print
.text:00000000000042D4                 LDR             W22, [X23]
.text:00000000000042D8                 ADD             X8, SP, #0x2D140+var_2D12A,LSL#12
.text:00000000000042DC                 ADD             X8, X8, #0x8D8
.text:00000000000042E0                 ADD             X21, X8, #8
.text:00000000000042E4                 ADD             X0, SP, #0x2D140+s ; dest
.text:00000000000042E8                 MOV             X1, X21 ; src
.text:00000000000042EC                 MOV             X2, X22 ; n
.text:00000000000042F0                 BL              .memcpy
.text:00000000000042F4                 MOV             W1, WZR ; c
.text:00000000000042F8                 MOV             X0, X21 ; s
.text:00000000000042FC                 MOV             X2, X22 ; n
.text:0000000000004300                 BL              .memset
.text:0000000000004304                 MOV             W8, #0xFFFFFF84
.text:0000000000004308                 MOV             W9, #0xFFFFFFFF
.text:000000000000430C                 STR             W8, [X26,#4]
.text:0000000000004310                 STR             W9, [X23]
.text:0000000000004314                 CBZ             W22, loc_4364
.text:0000000000004318                 ADD             X3, SP, #0x2D140+var_2D12A,LSL#12
.text:000000000000431C                 MOV             W0, #0x1C
.text:0000000000004320                 ADD             X1, SP, #0x2D140+s
.text:0000000000004324                 ADD             X3, X3, #0x8D8
.text:0000000000004328                 MOV             W2, W22
.text:000000000000432C                 BL              .invokeCommand
.text:0000000000004330                 LDR             W3, [X26,#4]
.text:0000000000004334                 CBZ             W0, loc_4384
.text:0000000000004338                 ADRP            X1, #unk_10DEC@PAGE
.text:000000000000433C                 ADRP            X2, #aCmdHandleCcmDa_0@PAGE ; " CMD_HANDLE_CCM_DATA_P2 invokeCommand()"...
.text:0000000000004340                 ADD             X1, X1, #unk_10DEC@PAGEOFF
.text:0000000000004344                 ADD             X2, X2, #aCmdHandleCcmDa_0@PAGEOFF ; " CMD_HANDLE_CCM_DATA_P2 invokeCommand()"...
.text:0000000000004348                 B               loc_4194
.text:000000000000434C ; ---------------------------------------------------------------------------
.text:000000000000434C loc_434C                                ; CODE XREF: _handleCCM+26C↑j
.text:000000000000434C                 ADD             X8, SP, #0x2D140+var_2D12A,LSL#12
.text:0000000000004350                 ADD             X8, X8, #0x8D8
.text:0000000000004354                 ADD             X1, X8, #8 ; src
.text:0000000000004358                 MOV             X0, X19 ; dest
.text:000000000000435C                 BL              .memcpy
.text:0000000000004360                 B               loc_4240
.text:0000000000004364 ; ---------------------------------------------------------------------------
.text:0000000000004364 loc_4364                                ; CODE XREF: _handleCCM+2E0↑j
.text:0000000000004364                 ADRP            X1, #unk_10DEC@PAGE
.text:0000000000004368                 ADRP            X2, #aNoDataToBeSent@PAGE ; "No data to be sent!"
.text:000000000000436C                 ADD             X1, X1, #unk_10DEC@PAGEOFF
.text:0000000000004370                 ADD             X2, X2, #aNoDataToBeSent@PAGEOFF ; "No data to be sent!"
.text:0000000000004374                 MOV             W0, #4
.text:0000000000004378                 BL              .__android_log_print
.text:000000000000437C                 STR             WZR, [X26,#4]
.text:0000000000004380                 B               loc_4240
.text:0000000000004384 ; ---------------------------------------------------------------------------
.text:0000000000004384 loc_4384                                ; CODE XREF: _handleCCM+300↑j
.text:0000000000004384                 CBZ             W3, loc_43A8
.text:0000000000004388                 ADRP            X1, #unk_10DEC@PAGE
.text:000000000000438C                 ADRP            X2, #aHandleccmdataK@PAGE ; "handleCCMData() KO [%d]"
.text:0000000000004390                 ADD             X1, X1, #unk_10DEC@PAGEOFF
.text:0000000000004394                 ADD             X2, X2, #aHandleccmdataK@PAGEOFF ; "handleCCMData() KO [%d]"
.text:0000000000004398                 MOV             W0, #6
.text:000000000000439C                 BL              .__android_log_print
.text:00000000000043A0                 MOV             W8, #0xFFFFFF84
.text:00000000000043A4                 B               loc_4218
.text:00000000000043A8 ; ---------------------------------------------------------------------------
.text:00000000000043A8 loc_43A8                                ; CODE XREF: _handleCCM:loc_4384↑j
.text:00000000000043A8                 ADRP            X1, #unk_10DEC@PAGE
.text:00000000000043AC                 ADRP            X2, #aHandleccmOk@PAGE ; "_handleCCM: OK"
.text:00000000000043B0                 ADD             X1, X1, #unk_10DEC@PAGEOFF
.text:00000000000043B4                 ADD             X2, X2, #aHandleccmOk@PAGEOFF ; "_handleCCM: OK"
.text:00000000000043B8                 MOV             W0, #4
.text:00000000000043BC                 BL              .__android_log_print
.text:00000000000043C0                 LDR             W22, [X23]
.text:00000000000043C4                 CBZ             W22, loc_4240
.text:00000000000043C8                 LDRSW           X8, [X20]
.text:00000000000043CC                 CMP             W8, #0xFF
.text:00000000000043D0                 B.LT            loc_43F4
.text:00000000000043D4                 ADRP            X1, #unk_10DEC@PAGE
.text:00000000000043D8                 ADRP            X2, #aCbSizeErrorD@PAGE ; "CB Size ERROR %d"
.text:00000000000043DC                 ADD             X1, X1, #unk_10DEC@PAGEOFF
.text:00000000000043E0                 ADD             X2, X2, #aCbSizeErrorD@PAGEOFF ; "CB Size ERROR %d"
.text:00000000000043E4                 MOV             W0, #6
.text:00000000000043E8                 MOV             W3, W8
.text:00000000000043EC                 BL              .__android_log_print
.text:00000000000043F0                 B               loc_4240
.text:00000000000043F4 ; ---------------------------------------------------------------------------
.text:00000000000043F4 loc_43F4                                ; CODE XREF: _handleCCM+39C↑j
.text:00000000000043F4                 MOV             W1, WZR ; c
.text:00000000000043F8                 MOV             X0, X19 ; s
.text:00000000000043FC                 MOV             X2, X8  ; n
.text:0000000000004400                 BL              .memset
.text:0000000000004404                 STR             W22, [X20]
.text:0000000000004408                 STRH            W22, [X19],#2
.text:000000000000440C                 LDRSW           X2, [X20] ; n
.text:0000000000004410                 MOV             X0, X19 ; dest
.text:0000000000004414                 MOV             X1, X21 ; src
.text:0000000000004418                 BL              .memcpy
.text:000000000000441C                 LDR             W8, [X20]
.text:0000000000004420                 ADD             W8, W8, #2
.text:0000000000004424                 STR             W8, [X20]
.text:0000000000004428                 B               loc_4240
.text:000000000000442C ; ---------------------------------------------------------------------------
.text:000000000000442C loc_442C                                ; CODE XREF: _handleCCM+218↑j
.text:000000000000442C                 BL              .__stack_chk_fail
.text:000000000000442C ; } // starts at 4034
.text:000000000000442C ; End of function _handleCCM
.text:0000000000004430 ; =============== S U B R O U T I N E =======================================
.text:0000000000004430                 EXPORT handleCCM_version
.text:0000000000004430 handleCCM_version                       ; CODE XREF: .handleCCM_version+C↑j
.text:0000000000004430                                         ; DATA XREF: LOAD:0000000000000DD8↑o ...
.text:0000000000004430 ; __unwind {
.text:0000000000004430                 B               ._handleCCM
.text:0000000000004430 ; } // starts at 4430
.text:0000000000004430 ; End of function handleCCM_version
.text:0000000000004434 ; =============== S U B R O U T I N E =======================================
.text:0000000000004434 ; Attributes: bp-based frame
.text:0000000000004434                 EXPORT isFactoryBinary
.text:0000000000004434 isFactoryBinary                         ; CODE XREF: .isFactoryBinary+C↑j
.text:0000000000004434                                         ; DATA XREF: LOAD:00000000000009B8↑o ...
.text:0000000000004434 s               = -0x74
.text:0000000000004434 var_18          = -0x18
.text:0000000000004434 var_10          = -0x10
.text:0000000000004434 var_s0          =  0
.text:0000000000004434 ; __unwind {
.text:0000000000004434                 STP             X20, X19, [SP,#-0x10+var_10]!
.text:0000000000004438                 STP             X29, X30, [SP,#0x10+var_s0]
.text:000000000000443C                 ADD             X29, SP, #0x10
.text:0000000000004440                 SUB             SP, SP, #0x70
.text:0000000000004444                 ADRP            X19, #__stack_chk_guard_ptr@PAGE
.text:0000000000004448                 LDR             X19, [X19,#__stack_chk_guard_ptr@PAGEOFF]
.text:000000000000444C                 ADD             X0, SP, #0x80+s ; s
.text:0000000000004450                 MOV             W2, #0x5C ; '\' ; n
.text:0000000000004454                 MOV             W1, WZR ; c
.text:0000000000004458                 LDR             X19, [X19]
.text:000000000000445C                 STUR            X19, [X29,#var_18]
.text:0000000000004460                 BL              .memset
.text:0000000000004464                 ADRP            X0, #aRoFactoryFacto@PAGE ; "ro.factory.factory_binary"
.text:0000000000004468                 ADRP            X2, #aNotFound@PAGE ; "_not_found"
.text:000000000000446C                 ADD             X0, X0, #aRoFactoryFacto@PAGEOFF ; "ro.factory.factory_binary"
.text:0000000000004470                 ADD             X2, X2, #aNotFound@PAGEOFF ; "_not_found"
.text:0000000000004474                 ADD             X1, SP, #0x80+s
.text:0000000000004478                 BL              .property_get
.text:000000000000447C                 ADRP            X1, #aFactory@PAGE ; "factory"
.text:0000000000004480                 ADD             X1, X1, #aFactory@PAGEOFF ; "factory"
.text:0000000000004484                 ADD             X0, SP, #0x80+s ; s1
.text:0000000000004488                 MOV             W2, #7  ; n
.text:000000000000448C                 BL              .strncmp
.text:0000000000004490                 LDUR            X8, [X29,#var_18]
.text:0000000000004494                 CMP             W0, #0
.text:0000000000004498                 CSET            W0, EQ
.text:000000000000449C                 SUB             X8, X19, X8
.text:00000000000044A0                 CBNZ            X8, loc_44B4
.text:00000000000044A4                 SUB             SP, X29, #0x10
.text:00000000000044A8                 LDP             X29, X30, [SP,#0x10+var_s0]
.text:00000000000044AC                 LDP             X20, X19, [SP+0x10+var_10],#0x20
.text:00000000000044B0                 RET
.text:00000000000044B4 ; ---------------------------------------------------------------------------
.text:00000000000044B4 loc_44B4                                ; CODE XREF: isFactoryBinary+6C↑j
.text:00000000000044B4                 BL              .__stack_chk_fail
.text:00000000000044B4 ; } // starts at 4434
.text:00000000000044B4 ; End of function isFactoryBinary
.text:00000000000044B8 ; =============== S U B R O U T I N E =======================================
.text:00000000000044B8 ; Attributes: bp-based frame
.text:00000000000044B8                 EXPORT isENGBuild
.text:00000000000044B8 isENGBuild                              ; DATA XREF: LOAD:00000000000008B0↑o
.text:00000000000044B8 s               = -0x74
.text:00000000000044B8 var_18          = -0x18
.text:00000000000044B8 var_10          = -0x10
.text:00000000000044B8 var_s0          =  0
.text:00000000000044B8 ; __unwind {
.text:00000000000044B8                 STP             X20, X19, [SP,#-0x10+var_10]!
.text:00000000000044BC                 STP             X29, X30, [SP,#0x10+var_s0]
.text:00000000000044C0                 ADD             X29, SP, #0x10
.text:00000000000044C4                 SUB             SP, SP, #0x70
.text:00000000000044C8                 ADRP            X19, #__stack_chk_guard_ptr@PAGE
.text:00000000000044CC                 LDR             X19, [X19,#__stack_chk_guard_ptr@PAGEOFF]
.text:00000000000044D0                 ADD             X0, SP, #0x80+s ; s
.text:00000000000044D4                 MOV             W2, #0x5C ; '\' ; n
.text:00000000000044D8                 MOV             W1, WZR ; c
.text:00000000000044DC                 LDR             X19, [X19]
.text:00000000000044E0                 STUR            X19, [X29,#var_18]
.text:00000000000044E4                 BL              .memset
.text:00000000000044E8                 ADRP            X0, #aRoBuildType@PAGE ; "ro.build.type"
.text:00000000000044EC                 ADRP            X2, #aNotFound@PAGE ; "_not_found"
.text:00000000000044F0                 ADD             X0, X0, #aRoBuildType@PAGEOFF ; "ro.build.type"
.text:00000000000044F4                 ADD             X2, X2, #aNotFound@PAGEOFF ; "_not_found"
.text:00000000000044F8                 ADD             X1, SP, #0x80+s
.text:00000000000044FC                 BL              .property_get
.text:0000000000004500                 ADRP            X1, #aEng@PAGE ; "eng"
.text:0000000000004504                 ADD             X1, X1, #aEng@PAGEOFF ; "eng"
.text:0000000000004508                 ADD             X0, SP, #0x80+s ; s1
.text:000000000000450C                 MOV             W2, #3  ; n
.text:0000000000004510                 BL              .strncmp
.text:0000000000004514                 LDUR            X8, [X29,#var_18]
.text:0000000000004518                 CMP             W0, #0
.text:000000000000451C                 CSET            W0, EQ
.text:0000000000004520                 SUB             X8, X19, X8
.text:0000000000004524                 CBNZ            X8, loc_4538
.text:0000000000004528                 SUB             SP, X29, #0x10
.text:000000000000452C                 LDP             X29, X30, [SP,#0x10+var_s0]
.text:0000000000004530                 LDP             X20, X19, [SP+0x10+var_10],#0x20
.text:0000000000004534                 RET
.text:0000000000004538 ; ---------------------------------------------------------------------------
.text:0000000000004538 loc_4538                                ; CODE XREF: isENGBuild+6C↑j
.text:0000000000004538                 BL              .__stack_chk_fail
.text:0000000000004538 ; } // starts at 44B8
.text:0000000000004538 ; End of function isENGBuild
.text:000000000000453C ; =============== S U B R O U T I N E =======================================
.text:000000000000453C ; Attributes: bp-based frame
.text:000000000000453C                 EXPORT isSWDFactory
.text:000000000000453C isSWDFactory                            ; CODE XREF: .isSWDFactory+C↑j
.text:000000000000453C                                         ; DATA XREF: LOAD:0000000000000B68↑o ...
.text:000000000000453C s               = -0x74
.text:000000000000453C var_18          = -0x18
.text:000000000000453C var_10          = -0x10
.text:000000000000453C var_s0          =  0
.text:000000000000453C ; __unwind {
.text:000000000000453C                 STP             X20, X19, [SP,#-0x10+var_10]!
.text:0000000000004540                 STP             X29, X30, [SP,#0x10+var_s0]
.text:0000000000004544                 ADD             X29, SP, #0x10
.text:0000000000004548                 SUB             SP, SP, #0x70
.text:000000000000454C                 ADRP            X19, #__stack_chk_guard_ptr@PAGE
.text:0000000000004550                 LDR             X19, [X19,#__stack_chk_guard_ptr@PAGEOFF]
.text:0000000000004554                 ADD             X0, SP, #0x80+s ; s
.text:0000000000004558                 MOV             W2, #0x5C ; '\' ; n
.text:000000000000455C                 MOV             W1, WZR ; c
.text:0000000000004560                 LDR             X19, [X19]
.text:0000000000004564                 STUR            X19, [X29,#var_18]
.text:0000000000004568                 BL              .memset
.text:000000000000456C                 ADRP            X0, #aRoSecurityEseF@PAGE ; "ro.security.ese.factorymode"
.text:0000000000004570                 ADRP            X2, #aNotFound@PAGE ; "_not_found"
.text:0000000000004574                 ADD             X0, X0, #aRoSecurityEseF@PAGEOFF ; "ro.security.ese.factorymode"
.text:0000000000004578                 ADD             X2, X2, #aNotFound@PAGEOFF ; "_not_found"
.text:000000000000457C                 ADD             X1, SP, #0x80+s
.text:0000000000004580                 BL              .property_get
.text:0000000000004584                 ADRP            X1, #aSwdFactory@PAGE ; "SWD_FACTORY"
.text:0000000000004588                 ADD             X1, X1, #aSwdFactory@PAGEOFF ; "SWD_FACTORY"
.text:000000000000458C                 ADD             X0, SP, #0x80+s ; s1
.text:0000000000004590                 MOV             W2, #0xB ; n
.text:0000000000004594                 BL              .strncmp
.text:0000000000004598                 LDUR            X8, [X29,#var_18]
.text:000000000000459C                 CMP             W0, #0
.text:00000000000045A0                 CSET            W0, EQ
.text:00000000000045A4                 SUB             X8, X19, X8
.text:00000000000045A8                 CBNZ            X8, loc_45BC
.text:00000000000045AC                 SUB             SP, X29, #0x10
.text:00000000000045B0                 LDP             X29, X30, [SP,#0x10+var_s0]
.text:00000000000045B4                 LDP             X20, X19, [SP+0x10+var_10],#0x20
.text:00000000000045B8                 RET
.text:00000000000045BC ; ---------------------------------------------------------------------------
.text:00000000000045BC loc_45BC                                ; CODE XREF: isSWDFactory+6C↑j
.text:00000000000045BC                 BL              .__stack_chk_fail
.text:00000000000045BC ; } // starts at 453C
.text:00000000000045BC ; End of function isSWDFactory
.text:00000000000045C0 ; =============== S U B R O U T I N E =======================================
.text:00000000000045C0 ; Attributes: bp-based frame
.text:00000000000045C0                 EXPORT isSupportScpKm
.text:00000000000045C0 isSupportScpKm                          ; CODE XREF: .isSupportScpKm+C↑j
.text:00000000000045C0                                         ; DATA XREF: LOAD:0000000000001450↑o ...
.text:00000000000045C0 s               = -0x74
.text:00000000000045C0 var_18          = -0x18
.text:00000000000045C0 var_10          = -0x10
.text:00000000000045C0 var_s0          =  0
.text:00000000000045C0 ; __unwind {
.text:00000000000045C0                 STP             X20, X19, [SP,#-0x10+var_10]!
.text:00000000000045C4                 STP             X29, X30, [SP,#0x10+var_s0]
.text:00000000000045C8                 ADD             X29, SP, #0x10
.text:00000000000045CC                 SUB             SP, SP, #0x70
.text:00000000000045D0                 ADRP            X19, #__stack_chk_guard_ptr@PAGE
.text:00000000000045D4                 LDR             X19, [X19,#__stack_chk_guard_ptr@PAGEOFF]
.text:00000000000045D8                 ADD             X0, SP, #0x80+s ; s
.text:00000000000045DC                 MOV             W2, #0x5C ; '\' ; n
.text:00000000000045E0                 MOV             W1, WZR ; c
.text:00000000000045E4                 LDR             X19, [X19]
.text:00000000000045E8                 STUR            X19, [X29,#var_18]
.text:00000000000045EC                 BL              .memset
.text:00000000000045F0                 ADRP            X0, #aRoSecurityEseC@PAGE ; "ro.security.ese.cosname"
.text:00000000000045F4                 ADRP            X2, #aNotFound@PAGE ; "_not_found"
.text:00000000000045F8                 ADD             X0, X0, #aRoSecurityEseC@PAGEOFF ; "ro.security.ese.cosname"
.text:00000000000045FC                 ADD             X2, X2, #aNotFound@PAGEOFF ; "_not_found"
.text:0000000000004600                 ADD             X1, SP, #0x80+s
.text:0000000000004604                 BL              .property_get
.text:0000000000004608                 ADRP            X1, #aPearl@PAGE ; "PEARL"
.text:000000000000460C                 ADD             X1, X1, #aPearl@PAGEOFF ; "PEARL"
.text:0000000000004610                 ADD             X0, SP, #0x80+s ; s1
.text:0000000000004614                 MOV             W2, #5  ; n
.text:0000000000004618                 BL              .strncmp
.text:000000000000461C                 MOV             W8, W0
.text:0000000000004620                 MOV             W0, WZR
.text:0000000000004624                 CBZ             W8, loc_46A4
.text:0000000000004628                 ADRP            X1, #aJcop3@PAGE ; "JCOP3"
.text:000000000000462C                 ADD             X1, X1, #aJcop3@PAGEOFF ; "JCOP3"
.text:0000000000004630                 ADD             X0, SP, #0x80+s ; s1
.text:0000000000004634                 MOV             W2, #5  ; n
.text:0000000000004638                 BL              .strncmp
.text:000000000000463C                 CBZ             W0, loc_4690
.text:0000000000004640                 ADRP            X1, #aUt2@PAGE ; "UT2"
.text:0000000000004644                 ADD             X1, X1, #aUt2@PAGEOFF ; "UT2"
.text:0000000000004648                 ADD             X0, SP, #0x80+s ; s1
.text:000000000000464C                 MOV             W2, #3  ; n
.text:0000000000004650                 BL              .strncmp
.text:0000000000004654                 CBZ             W0, loc_4698
.text:0000000000004658                 ADRP            X1, #aUt3@PAGE ; "UT3"
.text:000000000000465C                 ADD             X1, X1, #aUt3@PAGEOFF ; "UT3"
.text:0000000000004660                 ADD             X0, SP, #0x80+s ; s1
.text:0000000000004664                 MOV             W2, #3  ; n
.text:0000000000004668                 BL              .strncmp
.text:000000000000466C                 CBZ             W0, loc_46A0
.text:0000000000004670                 ADRP            X1, #aUt4@PAGE ; "UT4"
.text:0000000000004674                 ADD             X1, X1, #aUt4@PAGEOFF ; "UT4"
.text:0000000000004678                 ADD             X0, SP, #0x80+s ; s1
.text:000000000000467C                 MOV             W2, #3  ; n
.text:0000000000004680                 BL              .strncmp
.text:0000000000004684                 CMP             W0, #0
.text:0000000000004688                 CSET            W0, NE
.text:000000000000468C                 B               loc_46A4
.text:0000000000004690 ; ---------------------------------------------------------------------------
.text:0000000000004690 loc_4690                                ; CODE XREF: isSupportScpKm+7C↑j
.text:0000000000004690                 MOV             W0, WZR
.text:0000000000004694                 B               loc_46A4
.text:0000000000004698 ; ---------------------------------------------------------------------------
.text:0000000000004698 loc_4698                                ; CODE XREF: isSupportScpKm+94↑j
.text:0000000000004698                 MOV             W0, WZR
.text:000000000000469C                 B               loc_46A4
.text:00000000000046A0 ; ---------------------------------------------------------------------------
.text:00000000000046A0 loc_46A0                                ; CODE XREF: isSupportScpKm+AC↑j
.text:00000000000046A0                 MOV             W0, WZR
.text:00000000000046A4 loc_46A4                                ; CODE XREF: isSupportScpKm+64↑j
.text:00000000000046A4                                         ; isSupportScpKm+CC↑j ...
.text:00000000000046A4                 LDUR            X8, [X29,#var_18]
.text:00000000000046A8                 SUB             X8, X19, X8
.text:00000000000046AC                 CBNZ            X8, loc_46C0
.text:00000000000046B0                 SUB             SP, X29, #0x10
.text:00000000000046B4                 LDP             X29, X30, [SP,#0x10+var_s0]
.text:00000000000046B8                 LDP             X20, X19, [SP+0x10+var_10],#0x20
.text:00000000000046BC                 RET
.text:00000000000046C0 ; ---------------------------------------------------------------------------
.text:00000000000046C0 loc_46C0                                ; CODE XREF: isSupportScpKm+EC↑j
.text:00000000000046C0                 BL              .__stack_chk_fail
.text:00000000000046C0 ; } // starts at 45C0
.text:00000000000046C0 ; End of function isSupportScpKm
.text:00000000000046C4 ; =============== S U B R O U T I N E =======================================
.text:00000000000046C4 ; Attributes: bp-based frame
.text:00000000000046C4                 EXPORT isLccmSwpProp
.text:00000000000046C4 isLccmSwpProp                           ; CODE XREF: .isLccmSwpProp+C↑j
.text:00000000000046C4                                         ; DATA XREF: LOAD:0000000000000970↑o ...
.text:00000000000046C4 s               = -0x74
.text:00000000000046C4 var_70          = -0x70
.text:00000000000046C4 var_18          = -0x18
.text:00000000000046C4 var_10          = -0x10
.text:00000000000046C4 var_s0          =  0
.text:00000000000046C4 ; __unwind {
.text:00000000000046C4                 STP             X20, X19, [SP,#-0x10+var_10]!
.text:00000000000046C8                 STP             X29, X30, [SP,#0x10+var_s0]
.text:00000000000046CC                 ADD             X29, SP, #0x10
.text:00000000000046D0                 SUB             SP, SP, #0xC0
.text:00000000000046D4                 ADRP            X19, #__stack_chk_guard_ptr@PAGE
.text:00000000000046D8                 LDR             X19, [X19,#__stack_chk_guard_ptr@PAGEOFF]
.text:00000000000046DC                 ADD             X0, SP, #0xD0+s ; s
.text:00000000000046E0                 MOV             W2, #0x5C ; '\' ; n
.text:00000000000046E4                 MOV             W1, WZR ; c
.text:00000000000046E8                 LDR             X19, [X19]
.text:00000000000046EC                 STUR            X19, [X29,#var_18]
.text:00000000000046F0                 BL              .memset
.text:00000000000046F4                 MOV             W8, #0x64616552
.text:00000000000046FC                 MOV             W9, #0x79 ; 'y'
.text:0000000000004700                 MOV             X0, SP  ; s
.text:0000000000004704                 MOV             W2, #0x5C ; '\' ; n
.text:0000000000004708                 MOV             W1, WZR ; c
.text:000000000000470C                 STR             W8, [SP,#0xD0+s]
.text:0000000000004710                 STRB            W9, [SP,#0xD0+var_70]
.text:0000000000004714                 BL              .memset
.text:0000000000004718                 ADRP            X0, #aVendorTztsDaem@PAGE ; "vendor.tzts_daemon"
.text:000000000000471C                 ADRP            X2, #aNotFound@PAGE ; "_not_found"
.text:0000000000004720                 ADD             X0, X0, #aVendorTztsDaem@PAGEOFF ; "vendor.tzts_daemon"
.text:0000000000004724                 ADD             X2, X2, #aNotFound@PAGEOFF ; "_not_found"
.text:0000000000004728                 MOV             X1, SP
.text:000000000000472C                 BL              .property_get
.text:0000000000004730                 ADD             X0, SP, #0xD0+s ; s
.text:0000000000004734                 BL              .strlen
.text:0000000000004738                 MOV             X2, X0  ; n
.text:000000000000473C                 MOV             X0, SP  ; s1
.text:0000000000004740                 ADD             X1, SP, #0xD0+s ; s2
.text:0000000000004744                 BL              .strncmp
.text:0000000000004748                 LDUR            X8, [X29,#var_18]
.text:000000000000474C                 CMP             W0, #0
.text:0000000000004750                 CSET            W0, NE
.text:0000000000004754                 SUB             X8, X19, X8
.text:0000000000004758                 CBNZ            X8, loc_476C
.text:000000000000475C                 SUB             SP, X29, #0x10
.text:0000000000004760                 LDP             X29, X30, [SP,#0x10+var_s0]
.text:0000000000004764                 LDP             X20, X19, [SP+0x10+var_10],#0x20
.text:0000000000004768                 RET
.text:000000000000476C ; ---------------------------------------------------------------------------
.text:000000000000476C loc_476C                                ; CODE XREF: isLccmSwpProp+94↑j
.text:000000000000476C                 BL              .__stack_chk_fail
.text:000000000000476C ; } // starts at 46C4
.text:000000000000476C ; End of function isLccmSwpProp
.text:0000000000004770 ; =============== S U B R O U T I N E =======================================
.text:0000000000004770 ; Attributes: bp-based frame
.text:0000000000004770                 EXPORT getESESTPropStr
.text:0000000000004770 getESESTPropStr                         ; CODE XREF: .getESESTPropStr+C↑j
.text:0000000000004770                                         ; DATA XREF: LOAD:0000000000000D48↑o ...
.text:0000000000004770 s               = -0x84
.text:0000000000004770 var_28          = -0x28
.text:0000000000004770 var_20          = -0x20
.text:0000000000004770 var_10          = -0x10
.text:0000000000004770 var_s0          =  0
.text:0000000000004770 ; __unwind {
.text:0000000000004770                 STP             X22, X21, [SP,#-0x10+var_20]!
.text:0000000000004774                 STP             X20, X19, [SP,#0x20+var_10]
.text:0000000000004778                 STP             X29, X30, [SP,#0x20+var_s0]
.text:000000000000477C                 ADD             X29, SP, #0x20
.text:0000000000004780                 SUB             SP, SP, #0x70
.text:0000000000004784                 ADRP            X21, #__stack_chk_guard_ptr@PAGE
.text:0000000000004788                 LDR             X21, [X21,#__stack_chk_guard_ptr@PAGEOFF]
.text:000000000000478C                 MOV             X19, X1
.text:0000000000004790                 MOV             X20, X0
.text:0000000000004794                 ADD             X0, SP, #0x90+s ; s
.text:0000000000004798                 LDR             X21, [X21]
.text:000000000000479C                 MOV             W2, #0x5C ; '\' ; n
.text:00000000000047A0                 MOV             W1, WZR ; c
.text:00000000000047A4                 STUR            X21, [X29,#var_28]
.text:00000000000047A8                 BL              .memset
.text:00000000000047AC                 ADRP            X0, #aRoSecurityEses@PAGE ; "ro.security.esest"
.text:00000000000047B0                 ADRP            X2, #aNotFound@PAGE ; "_not_found"
.text:00000000000047B4                 ADD             X0, X0, #aRoSecurityEses@PAGEOFF ; "ro.security.esest"
.text:00000000000047B8                 ADD             X2, X2, #aNotFound@PAGEOFF ; "_not_found"
.text:00000000000047BC                 ADD             X1, SP, #0x90+s
.text:00000000000047C0                 BL              .property_get
.text:00000000000047C4                 ADD             X0, SP, #0x90+s ; s
.text:00000000000047C8                 BL              .strlen
.text:00000000000047CC                 MOV             X2, X0  ; n
.text:00000000000047D0                 ADD             X1, SP, #0x90+s ; src
.text:00000000000047D4                 MOV             X0, X20 ; dest
.text:00000000000047D8                 BL              .strncpy
.text:00000000000047DC                 ADD             X0, SP, #0x90+s ; s
.text:00000000000047E0                 BL              .strlen
.text:00000000000047E4                 STRB            W0, [X19]
.text:00000000000047E8                 LDUR            X8, [X29,#var_28]
.text:00000000000047EC                 SUB             X8, X21, X8
.text:00000000000047F0                 CBNZ            X8, loc_4808
.text:00000000000047F4                 SUB             SP, X29, #0x20 ; ' '
.text:00000000000047F8                 LDP             X29, X30, [SP,#0x20+var_s0]
.text:00000000000047FC                 LDP             X20, X19, [SP,#0x20+var_10]
.text:0000000000004800                 LDP             X22, X21, [SP+0x20+var_20],#0x30
.text:0000000000004804                 RET
.text:0000000000004808 ; ---------------------------------------------------------------------------
.text:0000000000004808 loc_4808                                ; CODE XREF: getESESTPropStr+80↑j
.text:0000000000004808                 BL              .__stack_chk_fail
.text:0000000000004808 ; } // starts at 4770
.text:0000000000004808 ; End of function getESESTPropStr
.text:000000000000480C ; =============== S U B R O U T I N E =======================================
.text:000000000000480C ; Attributes: bp-based frame
.text:000000000000480C                 EXPORT getCosNameStr
.text:000000000000480C getCosNameStr                           ; CODE XREF: .getCosNameStr+C↑j
.text:000000000000480C                                         ; DATA XREF: LOAD:0000000000001858↑o ...
.text:000000000000480C s               = -0x84
.text:000000000000480C var_28          = -0x28
.text:000000000000480C var_20          = -0x20
.text:000000000000480C var_10          = -0x10
.text:000000000000480C var_s0          =  0
.text:000000000000480C ; __unwind {
.text:000000000000480C                 STP             X22, X21, [SP,#-0x10+var_20]!
.text:0000000000004810                 STP             X20, X19, [SP,#0x20+var_10]
.text:0000000000004814                 STP             X29, X30, [SP,#0x20+var_s0]
.text:0000000000004818                 ADD             X29, SP, #0x20
.text:000000000000481C                 SUB             SP, SP, #0x70
.text:0000000000004820                 ADRP            X21, #__stack_chk_guard_ptr@PAGE
.text:0000000000004824                 LDR             X21, [X21,#__stack_chk_guard_ptr@PAGEOFF]
.text:0000000000004828                 MOV             X19, X1
.text:000000000000482C                 MOV             X20, X0
.text:0000000000004830                 ADD             X0, SP, #0x90+s ; s
.text:0000000000004834                 LDR             X21, [X21]
.text:0000000000004838                 MOV             W2, #0x5C ; '\' ; n
.text:000000000000483C                 MOV             W1, WZR ; c
.text:0000000000004840                 STUR            X21, [X29,#var_28]
.text:0000000000004844                 BL              .memset
.text:0000000000004848                 ADRP            X0, #aRoSecurityEseC@PAGE ; "ro.security.ese.cosname"
.text:000000000000484C                 ADRP            X2, #aNotFound@PAGE ; "_not_found"
.text:0000000000004850                 ADD             X0, X0, #aRoSecurityEseC@PAGEOFF ; "ro.security.ese.cosname"
.text:0000000000004854                 ADD             X2, X2, #aNotFound@PAGEOFF ; "_not_found"
.text:0000000000004858                 ADD             X1, SP, #0x90+s
.text:000000000000485C                 BL              .property_get
.text:0000000000004860                 ADD             X0, SP, #0x90+s ; s
.text:0000000000004864                 BL              .strlen
.text:0000000000004868                 STRB            W0, [X19]
.text:000000000000486C                 AND             X2, X0, #0xFF ; n
.text:0000000000004870                 ADD             X1, SP, #0x90+s ; src
.text:0000000000004874                 MOV             X0, X20 ; dest
.text:0000000000004878                 BL              .strncpy
.text:000000000000487C                 LDUR            X8, [X29,#var_28]
.text:0000000000004880                 SUB             X8, X21, X8
.text:0000000000004884                 CBNZ            X8, loc_489C
.text:0000000000004888                 SUB             SP, X29, #0x20 ; ' '
.text:000000000000488C                 LDP             X29, X30, [SP,#0x20+var_s0]
.text:0000000000004890                 LDP             X20, X19, [SP,#0x20+var_10]
.text:0000000000004894                 LDP             X22, X21, [SP+0x20+var_20],#0x30
.text:0000000000004898                 RET
.text:000000000000489C ; ---------------------------------------------------------------------------
.text:000000000000489C loc_489C                                ; CODE XREF: getCosNameStr+78↑j
.text:000000000000489C                 BL              .__stack_chk_fail
.text:000000000000489C ; } // starts at 480C
.text:000000000000489C ; End of function getCosNameStr
.text:00000000000048A0 ; =============== S U B R O U T I N E =======================================
.text:00000000000048A0                 EXPORT set_system_prop_bap_state
.text:00000000000048A0 set_system_prop_bap_state               ; CODE XREF: .set_system_prop_bap_state+C↑j
.text:00000000000048A0                                         ; DATA XREF: LOAD:00000000000012A0↑o ...
.text:00000000000048A0 var_20          = -0x20
.text:00000000000048A0 var_10          = -0x10
.text:00000000000048A0 ; __unwind {
.text:00000000000048A0                 CMP             W0, #3
.text:00000000000048A4                 B.CC            loc_48C8
.text:00000000000048A8                 ADRP            X1, #unk_10DEC@PAGE
.text:00000000000048AC                 ADRP            X2, #aCanTSetSInvali@PAGE ; "Can't set '%s' : invalid parameter"
.text:00000000000048B0                 ADRP            X3, #aRoSecurityBapc@PAGE ; "ro.security.bapcheck"
.text:00000000000048B4                 ADD             X1, X1, #unk_10DEC@PAGEOFF
.text:00000000000048B8                 ADD             X2, X2, #aCanTSetSInvali@PAGEOFF ; "Can't set '%s' : invalid parameter"
.text:00000000000048BC                 ADD             X3, X3, #aRoSecurityBapc@PAGEOFF ; "ro.security.bapcheck"
.text:00000000000048C0                 MOV             W0, #6
.text:00000000000048C4                 B               .__android_log_print
.text:00000000000048C8 ; ---------------------------------------------------------------------------
.text:00000000000048C8 loc_48C8                                ; CODE XREF: set_system_prop_bap_state+4↑j
.text:00000000000048C8                 STP             X20, X19, [SP,#var_20]!
.text:00000000000048CC                 STP             X29, X30, [SP,#0x20+var_10]
.text:00000000000048D0                 ADD             X29, SP, #0x20+var_10
.text:00000000000048D4                 ADRP            X8, #off_268C8@PAGE ; "0"
.text:00000000000048D8                 ADD             X8, X8, #off_268C8@PAGEOFF ; "0"
.text:00000000000048DC                 LDR             X19, [X8,W0,UXTW#3]
.text:00000000000048E0                 ADRP            X20, #aRoSecurityBapc@PAGE ; "ro.security.bapcheck"
.text:00000000000048E4                 ADRP            X1, #unk_10DEC@PAGE
.text:00000000000048E8                 ADRP            X2, #aSettingPropert@PAGE ; "Setting property '%s' to '%s'"
.text:00000000000048EC                 ADD             X20, X20, #aRoSecurityBapc@PAGEOFF ; "ro.security.bapcheck"
.text:00000000000048F0                 ADD             X1, X1, #unk_10DEC@PAGEOFF
.text:00000000000048F4                 ADD             X2, X2, #aSettingPropert@PAGEOFF ; "Setting property '%s' to '%s'"
.text:00000000000048F8                 MOV             W0, #4
.text:00000000000048FC                 MOV             X3, X20
.text:0000000000004900                 MOV             X4, X19
.text:0000000000004904                 BL              .__android_log_print
.text:0000000000004908                 LDP             X29, X30, [SP,#0x20+var_10]
.text:000000000000490C                 MOV             X0, X20
.text:0000000000004910                 MOV             X1, X19
.text:0000000000004914                 LDP             X20, X19, [SP+0x20+var_20],#0x20
.text:0000000000004918                 B               .property_set
.text:0000000000004918 ; } // starts at 48A0
.text:0000000000004918 ; End of function set_system_prop_bap_state
.text:000000000000491C ; =============== S U B R O U T I N E =======================================
.text:000000000000491C ; Attributes: bp-based frame
.text:000000000000491C ; __int64 __fastcall set_system_prop_ese_status(char *string)
.text:000000000000491C                 EXPORT set_system_prop_ese_status
.text:000000000000491C set_system_prop_ese_status              ; DATA XREF: LOAD:0000000000001090↑o
.text:000000000000491C var_10          = -0x10
.text:000000000000491C var_s0          =  0
.text:000000000000491C ; __unwind {
.text:000000000000491C                 STP             X20, X19, [SP,#-0x10+var_10]!
.text:0000000000004920                 STP             X29, X30, [SP,#0x10+var_s0]
.text:0000000000004924                 ADD             X29, SP, #0x10
.text:0000000000004928                 MOV             X19, X0
.text:000000000000492C                 CBZ             X19, loc_4948
.text:0000000000004930                 MOV             W1, #0xA ; maxlen
.text:0000000000004934                 MOV             X0, X19 ; string
.text:0000000000004938                 BL              .strnlen
.text:000000000000493C                 SUB             X8, X0, #1
.text:0000000000004940                 CMP             X8, #0xA
.text:0000000000004944                 B.CC            loc_4970
.text:0000000000004948 loc_4948                                ; CODE XREF: set_system_prop_ese_status+10↑j
.text:0000000000004948                 LDP             X29, X30, [SP,#0x10+var_s0]
.text:000000000000494C                 ADRP            X1, #unk_10DEC@PAGE
.text:0000000000004950                 ADRP            X2, #aCanTSetSInvali@PAGE ; "Can't set '%s' : invalid parameter"
.text:0000000000004954                 ADRP            X3, #aRoSecurityEses@PAGE ; "ro.security.esest"
.text:0000000000004958                 ADD             X1, X1, #unk_10DEC@PAGEOFF
.text:000000000000495C                 ADD             X2, X2, #aCanTSetSInvali@PAGEOFF ; "Can't set '%s' : invalid parameter"
.text:0000000000004960                 ADD             X3, X3, #aRoSecurityEses@PAGEOFF ; "ro.security.esest"
.text:0000000000004964                 MOV             W0, #6
.text:0000000000004968                 LDP             X20, X19, [SP+0x10+var_10],#0x20
.text:000000000000496C                 B               .__android_log_print
.text:0000000000004970 ; ---------------------------------------------------------------------------
.text:0000000000004970 loc_4970                                ; CODE XREF: set_system_prop_ese_status+28↑j
.text:0000000000004970                 ADRP            X20, #aRoSecurityEses@PAGE ; "ro.security.esest"
.text:0000000000004974                 ADRP            X1, #unk_10DEC@PAGE
.text:0000000000004978                 ADRP            X2, #aSettingPropert@PAGE ; "Setting property '%s' to '%s'"
.text:000000000000497C                 ADD             X20, X20, #aRoSecurityEses@PAGEOFF ; "ro.security.esest"
.text:0000000000004980                 ADD             X1, X1, #unk_10DEC@PAGEOFF
.text:0000000000004984                 ADD             X2, X2, #aSettingPropert@PAGEOFF ; "Setting property '%s' to '%s'"
.text:0000000000004988                 MOV             W0, #4
.text:000000000000498C                 MOV             X3, X20
.text:0000000000004990                 MOV             X4, X19
.text:0000000000004994                 BL              .__android_log_print
.text:0000000000004998                 LDP             X29, X30, [SP,#0x10+var_s0]
.text:000000000000499C                 MOV             X0, X20
.text:00000000000049A0                 MOV             X1, X19
.text:00000000000049A4                 LDP             X20, X19, [SP+0x10+var_10],#0x20
.text:00000000000049A8                 B               .property_set
.text:00000000000049A8 ; } // starts at 491C
.text:00000000000049A8 ; End of function set_system_prop_ese_status
.text:00000000000049AC ; =============== S U B R O U T I N E =======================================
.text:00000000000049AC ; Attributes: bp-based frame
.text:00000000000049AC                 EXPORT set_system_prop_ese_driver_state
.text:00000000000049AC set_system_prop_ese_driver_state        ; CODE XREF: .set_system_prop_ese_driver_state+C↑j
.text:00000000000049AC                                         ; DATA XREF: LOAD:0000000000000DF0↑o ...
.text:00000000000049AC var_50          = -0x50
.text:00000000000049AC var_40          = -0x40
.text:00000000000049AC var_30          = -0x30
.text:00000000000049AC var_28          = -0x28
.text:00000000000049AC var_20          = -0x20
.text:00000000000049AC var_10          = -0x10
.text:00000000000049AC var_s0          =  0
.text:00000000000049AC ; __unwind {
.text:00000000000049AC                 STP             X22, X21, [SP,#-0x10+var_20]!
.text:00000000000049B0                 STP             X20, X19, [SP,#0x20+var_10]
.text:00000000000049B4                 STP             X29, X30, [SP,#0x20+var_s0]
.text:00000000000049B8                 ADD             X29, SP, #0x20
.text:00000000000049BC                 SUB             SP, SP, #0x30
.text:00000000000049C0                 ADRP            X21, #__stack_chk_guard_ptr@PAGE
.text:00000000000049C4                 LDR             X21, [X21,#__stack_chk_guard_ptr@PAGEOFF]
.text:00000000000049C8                 CMP             W0, #5
.text:00000000000049CC                 LDR             X21, [X21]
.text:00000000000049D0                 STR             X21, [SP,#0x50+var_28]
.text:00000000000049D4                 B.CC            loc_4A14
.text:00000000000049D8                 LDR             X8, [SP,#0x50+var_28]
.text:00000000000049DC                 SUB             X8, X21, X8
.text:00000000000049E0                 CBNZ            X8, loc_4ABC
.text:00000000000049E4                 ADRP            X1, #unk_10DEC@PAGE
.text:00000000000049E8                 ADRP            X2, #aCanTSetSInvali@PAGE ; "Can't set '%s' : invalid parameter"
.text:00000000000049EC                 ADRP            X3, #aRoSecurityEsed@PAGE ; "ro.security.esedrv"
.text:00000000000049F0                 ADD             X1, X1, #unk_10DEC@PAGEOFF
.text:00000000000049F4                 ADD             X2, X2, #aCanTSetSInvali@PAGEOFF ; "Can't set '%s' : invalid parameter"
.text:00000000000049F8                 ADD             X3, X3, #aRoSecurityEsed@PAGEOFF ; "ro.security.esedrv"
.text:00000000000049FC                 MOV             W0, #6
.text:0000000000004A00                 SUB             SP, X29, #0x20 ; ' '
.text:0000000000004A04                 LDP             X29, X30, [SP,#0x20+var_s0]
.text:0000000000004A08                 LDP             X20, X19, [SP,#0x20+var_10]
.text:0000000000004A0C                 LDP             X22, X21, [SP+0x20+var_20],#0x30
.text:0000000000004A10                 B               .__android_log_print
.text:0000000000004A14 ; ---------------------------------------------------------------------------
.text:0000000000004A14 loc_4A14                                ; CODE XREF: set_system_prop_ese_driver_state+28↑j
.text:0000000000004A14                 ADRP            X8, #(aStaDatalen0+0xF)@PAGE ; "0"
.text:0000000000004A18                 ADD             X8, X8, #(aStaDatalen0+0xF)@PAGEOFF ; "0"
.text:0000000000004A1C                 FMOV            D0, X8
.text:0000000000004A20                 ADRP            X8, #(aPearl31+7)@PAGE ; "1"
.text:0000000000004A24                 ADD             X8, X8, #(aPearl31+7)@PAGEOFF ; "1"
.text:0000000000004A28                 INS             V0.D[1], X8
.text:0000000000004A2C                 ADRP            X8, #(aUt2+2)@PAGE ; "2"
.text:0000000000004A30                 ADD             X8, X8, #(aUt2+2)@PAGEOFF ; "2"
.text:0000000000004A34                 STP             XZR, XZR, [SP,#0x50+var_40]
.text:0000000000004A38                 STP             XZR, XZR, [SP,#0x50+var_50]
.text:0000000000004A3C                 STR             Q0, [SP,#0x50+var_50]
.text:0000000000004A40                 FMOV            D0, X8
.text:0000000000004A44                 ADRP            X8, #(aHqmAttackcheck_8+0x33)@PAGE ; "3"
.text:0000000000004A48                 ADD             X8, X8, #(aHqmAttackcheck_8+0x33)@PAGEOFF ; "3"
.text:0000000000004A4C                 INS             V0.D[1], X8
.text:0000000000004A50                 ADRP            X8, #a9@PAGE ; "9"
.text:0000000000004A54                 ADD             X8, X8, #a9@PAGEOFF ; "9"
.text:0000000000004A58                 STR             X8, [SP,#0x50+var_30]
.text:0000000000004A5C                 MOV             X8, SP
.text:0000000000004A60                 STR             Q0, [SP,#0x50+var_40]
.text:0000000000004A64                 LDR             X19, [X8,W0,UXTW#3]
.text:0000000000004A68                 ADRP            X20, #aRoSecurityEsed@PAGE ; "ro.security.esedrv"
.text:0000000000004A6C                 ADRP            X1, #unk_10DEC@PAGE
.text:0000000000004A70                 ADRP            X2, #aSettingPropert@PAGE ; "Setting property '%s' to '%s'"
.text:0000000000004A74                 ADD             X20, X20, #aRoSecurityEsed@PAGEOFF ; "ro.security.esedrv"
.text:0000000000004A78                 ADD             X1, X1, #unk_10DEC@PAGEOFF
.text:0000000000004A7C                 ADD             X2, X2, #aSettingPropert@PAGEOFF ; "Setting property '%s' to '%s'"
.text:0000000000004A80                 MOV             W0, #4
.text:0000000000004A84                 MOV             X3, X20
.text:0000000000004A88                 MOV             X4, X19
.text:0000000000004A8C                 BL              .__android_log_print
.text:0000000000004A90                 MOV             X0, X20
.text:0000000000004A94                 MOV             X1, X19
.text:0000000000004A98                 BL              .property_set
.text:0000000000004A9C                 LDR             X8, [SP,#0x50+var_28]
.text:0000000000004AA0                 SUB             X8, X21, X8
.text:0000000000004AA4                 CBNZ            X8, loc_4ABC
.text:0000000000004AA8                 SUB             SP, X29, #0x20 ; ' '
.text:0000000000004AAC                 LDP             X29, X30, [SP,#0x20+var_s0]
.text:0000000000004AB0                 LDP             X20, X19, [SP,#0x20+var_10]
.text:0000000000004AB4                 LDP             X22, X21, [SP+0x20+var_20],#0x30
.text:0000000000004AB8                 RET
.text:0000000000004ABC ; ---------------------------------------------------------------------------
.text:0000000000004ABC loc_4ABC                                ; CODE XREF: set_system_prop_ese_driver_state+34↑j
.text:0000000000004ABC                                         ; set_system_prop_ese_driver_state+F8↑j
.text:0000000000004ABC                 BL              .__stack_chk_fail
.text:0000000000004ABC ; } // starts at 49AC
.text:0000000000004ABC ; End of function set_system_prop_ese_driver_state
.text:0000000000004AC0 ; =============== S U B R O U T I N E =======================================
.text:0000000000004AC0 ; Attributes: bp-based frame
.text:0000000000004AC0                 EXPORT set_system_prop_ese_ap_cold_reset
.text:0000000000004AC0 set_system_prop_ese_ap_cold_reset       ; CODE XREF: .set_system_prop_ese_ap_cold_reset+C↑j
.text:0000000000004AC0                                         ; DATA XREF: LOAD:0000000000000CB8↑o ...
.text:0000000000004AC0 var_10          = -0x10
.text:0000000000004AC0 var_s0          =  0
.text:0000000000004AC0 ; __unwind {
.text:0000000000004AC0                 STP             X20, X19, [SP,#-0x10+var_10]!
.text:0000000000004AC4                 STP             X29, X30, [SP,#0x10+var_s0]
.text:0000000000004AC8                 ADD             X29, SP, #0x10
.text:0000000000004ACC                 BL              .checkColdReset
.text:0000000000004AD0                 MOV             W19, W0
.text:0000000000004AD4                 ADRP            X1, #unk_10DEC@PAGE
.text:0000000000004AD8                 ADRP            X2, #aSemDaemonFacto@PAGE ; "SEM daemon - Factory Step : cold_reset_"...
.text:0000000000004ADC                 ADD             X1, X1, #unk_10DEC@PAGEOFF
.text:0000000000004AE0                 ADD             X2, X2, #aSemDaemonFacto@PAGEOFF ; "SEM daemon - Factory Step : cold_reset_"...
.text:0000000000004AE4                 MOV             W0, #4
.text:0000000000004AE8                 MOV             W3, W19
.text:0000000000004AEC                 BL              .__android_log_print
.text:0000000000004AF0                 ADD             W8, W19, #0x99
.text:0000000000004AF4                 CMP             W8, #3  ; switch 4 cases
.text:0000000000004AF8                 B.HI            def_4B0C ; jumptable 0000000000004B0C default case
.text:0000000000004AFC                 ADRP            X9, #jpt_4B0C@PAGE
.text:0000000000004B00                 ADD             X9, X9, #jpt_4B0C@PAGEOFF
.text:0000000000004B04                 LDRSW           X8, [X9,X8,LSL#2]
.text:0000000000004B08                 ADD             X8, X8, X9
.text:0000000000004B0C                 BR              X8      ; switch jump
.text:0000000000004B10 ; ---------------------------------------------------------------------------
.text:0000000000004B10 loc_4B10                                ; CODE XREF: set_system_prop_ese_ap_cold_reset+4C↑j
.text:0000000000004B10                                         ; DATA XREF: .rodata:jpt_4B0C↓o
.text:0000000000004B10                 ADRP            X0, #aRoSecurityEsea@PAGE ; jumptable 0000000000004B0C case 0
.text:0000000000004B14                 ADRP            X1, #(aUt4+2)@PAGE ; "4"
.text:0000000000004B18                 ADD             X0, X0, #aRoSecurityEsea@PAGEOFF ; "ro.security.eseapcr"
.text:0000000000004B1C                 ADD             X1, X1, #(aUt4+2)@PAGEOFF ; "4"
.text:0000000000004B20                 B               loc_4B88
.text:0000000000004B24 ; ---------------------------------------------------------------------------
.text:0000000000004B24 def_4B0C                                ; CODE XREF: set_system_prop_ese_ap_cold_reset+38↑j
.text:0000000000004B24                 CBNZ            W19, loc_4B78 ; jumptable 0000000000004B0C default case
.text:0000000000004B28                 ADRP            X0, #aRoSecurityEsea@PAGE ; "ro.security.eseapcr"
.text:0000000000004B2C                 ADRP            X1, #(aStaDatalen0+0xF)@PAGE ; "0"
.text:0000000000004B30                 ADD             X0, X0, #aRoSecurityEsea@PAGEOFF ; "ro.security.eseapcr"
.text:0000000000004B34                 ADD             X1, X1, #(aStaDatalen0+0xF)@PAGEOFF ; "0"
.text:0000000000004B38                 B               loc_4B88
.text:0000000000004B3C ; ---------------------------------------------------------------------------
.text:0000000000004B3C loc_4B3C                                ; CODE XREF: set_system_prop_ese_ap_cold_reset+4C↑j
.text:0000000000004B3C                                         ; DATA XREF: .rodata:0000000000010F84↓o
.text:0000000000004B3C                 ADRP            X0, #aRoSecurityEsea@PAGE ; jumptable 0000000000004B0C case 1
.text:0000000000004B40                 ADRP            X1, #(aHqmAttackcheck_8+0x33)@PAGE ; "3"
.text:0000000000004B44                 ADD             X0, X0, #aRoSecurityEsea@PAGEOFF ; "ro.security.eseapcr"
.text:0000000000004B48                 ADD             X1, X1, #(aHqmAttackcheck_8+0x33)@PAGEOFF ; "3"
.text:0000000000004B4C                 B               loc_4B88
.text:0000000000004B50 ; ---------------------------------------------------------------------------
.text:0000000000004B50 loc_4B50                                ; CODE XREF: set_system_prop_ese_ap_cold_reset+4C↑j
.text:0000000000004B50                                         ; DATA XREF: .rodata:0000000000010F88↓o
.text:0000000000004B50                 ADRP            X0, #aRoSecurityEsea@PAGE ; jumptable 0000000000004B0C case 2
.text:0000000000004B54                 ADRP            X1, #(aUt2+2)@PAGE ; "2"
.text:0000000000004B58                 ADD             X0, X0, #aRoSecurityEsea@PAGEOFF ; "ro.security.eseapcr"
.text:0000000000004B5C                 ADD             X1, X1, #(aUt2+2)@PAGEOFF ; "2"
.text:0000000000004B60                 B               loc_4B88
.text:0000000000004B64 ; ---------------------------------------------------------------------------
.text:0000000000004B64 loc_4B64                                ; CODE XREF: set_system_prop_ese_ap_cold_reset+4C↑j
.text:0000000000004B64                                         ; DATA XREF: .rodata:0000000000010F8C↓o
.text:0000000000004B64                 ADRP            X0, #aRoSecurityEsea@PAGE ; jumptable 0000000000004B0C case 3
.text:0000000000004B68                 ADRP            X1, #(aPearl31+7)@PAGE ; "1"
.text:0000000000004B6C                 ADD             X0, X0, #aRoSecurityEsea@PAGEOFF ; "ro.security.eseapcr"
.text:0000000000004B70                 ADD             X1, X1, #(aPearl31+7)@PAGEOFF ; "1"
.text:0000000000004B74                 B               loc_4B88
.text:0000000000004B78 ; ---------------------------------------------------------------------------
.text:0000000000004B78 loc_4B78                                ; CODE XREF: set_system_prop_ese_ap_cold_reset:def_4B0C↑j
.text:0000000000004B78                 ADRP            X0, #aRoSecurityEsea@PAGE ; "ro.security.eseapcr"
.text:0000000000004B7C                 ADRP            X1, #a9@PAGE ; "9"
.text:0000000000004B80                 ADD             X0, X0, #aRoSecurityEsea@PAGEOFF ; "ro.security.eseapcr"
.text:0000000000004B84                 ADD             X1, X1, #a9@PAGEOFF ; "9"
.text:0000000000004B88 loc_4B88                                ; CODE XREF: set_system_prop_ese_ap_cold_reset+60↑j
.text:0000000000004B88                                         ; set_system_prop_ese_ap_cold_reset+78↑j ...
.text:0000000000004B88                 LDP             X29, X30, [SP,#0x10+var_s0]
.text:0000000000004B8C                 LDP             X20, X19, [SP+0x10+var_10],#0x20
.text:0000000000004B90                 B               .property_set
.text:0000000000004B90 ; } // starts at 4AC0
.text:0000000000004B90 ; End of function set_system_prop_ese_ap_cold_reset
.text:0000000000004B94 ; =============== S U B R O U T I N E =======================================
.text:0000000000004B94 ; Attributes: bp-based frame
.text:0000000000004B94                 EXPORT Java_com_android_server_SemService_getCPLC14mode
.text:0000000000004B94 Java_com_android_server_SemService_getCPLC14mode
.text:0000000000004B94                                         ; DATA XREF: LOAD:0000000000000820↑o
.text:0000000000004B94 var_90          = -0x90
.text:0000000000004B94 s               = -0x8C
.text:0000000000004B94 var_28          = -0x28
.text:0000000000004B94 var_20          = -0x20
.text:0000000000004B94 var_10          = -0x10
.text:0000000000004B94 var_s0          =  0
.text:0000000000004B94 ; __unwind {
.text:0000000000004B94                 STP             X22, X21, [SP,#-0x10+var_20]!
.text:0000000000004B98                 STP             X20, X19, [SP,#0x20+var_10]
.text:0000000000004B9C                 STP             X29, X30, [SP,#0x20+var_s0]
.text:0000000000004BA0                 ADD             X29, SP, #0x20
.text:0000000000004BA4                 ADRP            X22, #__stack_chk_guard_ptr@PAGE
.text:0000000000004BA8                 LDR             X22, [X22,#__stack_chk_guard_ptr@PAGEOFF]
.text:0000000000004BAC                 MOV             X19, X2
.text:0000000000004BB0                 MOV             X20, X0
.text:0000000000004BB4                 LDR             X22, [X22]
.text:0000000000004BB8                 STUR            X22, [X29,#var_28]
.text:0000000000004BBC                 STR             WZR, [SP,#0x20+var_90]!
.text:0000000000004BC0                 ADD             X0, SP, #0x90+s ; s
.text:0000000000004BC4                 MOV             W2, #0x64 ; 'd' ; n
.text:0000000000004BC8                 MOV             W1, WZR ; c
.text:0000000000004BCC                 BL              .memset
.text:0000000000004BD0                 ADRP            X1, #unk_10DEC@PAGE
.text:0000000000004BD4                 ADRP            X2, #aJniGetCplcStar@PAGE ; "JNI, Get CPLC start"
.text:0000000000004BD8                 ADD             X1, X1, #unk_10DEC@PAGEOFF
.text:0000000000004BDC                 ADD             X2, X2, #aJniGetCplcStar@PAGEOFF ; "JNI, Get CPLC start"
.text:0000000000004BE0                 MOV             W0, #4
.text:0000000000004BE4                 BL              .__android_log_print
.text:0000000000004BE8                 ADD             X0, SP, #0x90+s
.text:0000000000004BEC                 MOV             X1, SP
.text:0000000000004BF0                 BL              .getCPLC14mode
.text:0000000000004BF4                 LDR             W3, [SP,#0x90+var_90]
.text:0000000000004BF8                 CBZ             W3, loc_4C58
.text:0000000000004BFC                 ADRP            X21, #unk_10DEC@PAGE
.text:0000000000004C00                 ADD             X21, X21, #unk_10DEC@PAGEOFF
.text:0000000000004C04                 ADRP            X2, #aCplcLenD@PAGE ; "CPLC len: %d"
.text:0000000000004C08                 ADD             X2, X2, #aCplcLenD@PAGEOFF ; "CPLC len: %d"
.text:0000000000004C0C                 MOV             W0, #4
.text:0000000000004C10                 MOV             X1, X21
.text:0000000000004C14                 BL              .__android_log_print
.text:0000000000004C18                 ADRP            X2, #aCplcS@PAGE ; "CPLC %s"
.text:0000000000004C1C                 ADD             X2, X2, #aCplcS@PAGEOFF ; "CPLC %s"
.text:0000000000004C20                 MOV             W0, #4
.text:0000000000004C24                 ADD             X3, SP, #0x90+s
.text:0000000000004C28                 MOV             X1, X21
.text:0000000000004C2C                 BL              .__android_log_print
.text:0000000000004C30                 LDR             X8, [X20]
.text:0000000000004C34                 LDR             W21, [SP,#0x90+var_90]
.text:0000000000004C38                 MOV             W2, WZR
.text:0000000000004C3C                 ADD             X4, SP, #0x90+s
.text:0000000000004C40                 LDR             X8, [X8,#0x680]
.text:0000000000004C44                 MOV             X0, X20
.text:0000000000004C48                 MOV             X1, X19
.text:0000000000004C4C                 MOV             W3, W21
.text:0000000000004C50                 BLR             X8
.text:0000000000004C54                 B               loc_4C74
.text:0000000000004C58 ; ---------------------------------------------------------------------------
.text:0000000000004C58 loc_4C58                                ; CODE XREF: Java_com_android_server_SemService_getCPLC14mode+64↑j
.text:0000000000004C58                 ADRP            X1, #unk_10DEC@PAGE
.text:0000000000004C5C                 ADRP            X2, #aGetCplcDatalen@PAGE ; "Get CPLC dataLen == 0"
.text:0000000000004C60                 ADD             X1, X1, #unk_10DEC@PAGEOFF
.text:0000000000004C64                 ADD             X2, X2, #aGetCplcDatalen@PAGEOFF ; "Get CPLC dataLen == 0"
.text:0000000000004C68                 MOV             W0, #4
.text:0000000000004C6C                 BL              .__android_log_print
.text:0000000000004C70                 MOV             W21, WZR
.text:0000000000004C74 loc_4C74                                ; CODE XREF: Java_com_android_server_SemService_getCPLC14mode+C0↑j
.text:0000000000004C74                 ADRP            X1, #unk_10DEC@PAGE
.text:0000000000004C78                 ADRP            X2, #aJniGetCplcEnd@PAGE ; "JNI, Get CPLC end"
.text:0000000000004C7C                 ADD             X1, X1, #unk_10DEC@PAGEOFF
.text:0000000000004C80                 ADD             X2, X2, #aJniGetCplcEnd@PAGEOFF ; "JNI, Get CPLC end"
.text:0000000000004C84                 MOV             W0, #4
.text:0000000000004C88                 BL              .__android_log_print
.text:0000000000004C8C                 LDUR            X8, [X29,#var_28]
.text:0000000000004C90                 SUB             X8, X22, X8
.text:0000000000004C94                 CBNZ            X8, loc_4CB0
.text:0000000000004C98                 MOV             W0, W21
.text:0000000000004C9C                 SUB             SP, X29, #0x20 ; ' '
.text:0000000000004CA0                 LDP             X29, X30, [SP,#0x20+var_s0]
.text:0000000000004CA4                 LDP             X20, X19, [SP,#0x20+var_10]
.text:0000000000004CA8                 LDP             X22, X21, [SP+0x20+var_20],#0x30
.text:0000000000004CAC                 RET
.text:0000000000004CB0 ; ---------------------------------------------------------------------------
.text:0000000000004CB0 loc_4CB0                                ; CODE XREF: Java_com_android_server_SemService_getCPLC14mode+100↑j
.text:0000000000004CB0                 BL              .__stack_chk_fail
.text:0000000000004CB0 ; } // starts at 4B94
.text:0000000000004CB0 ; End of function Java_com_android_server_SemService_getCPLC14mode
.text:0000000000004CB4 ; =============== S U B R O U T I N E =======================================
.text:0000000000004CB4 ; Attributes: bp-based frame
.text:0000000000004CB4                 EXPORT Java_com_android_server_SemService_getRestricted05mode
.text:0000000000004CB4 Java_com_android_server_SemService_getRestricted05mode
.text:0000000000004CB4                                         ; DATA XREF: LOAD:0000000000000B08↑o
.text:0000000000004CB4 var_430         = -0x430
.text:0000000000004CB4 var_424         = -0x424
.text:0000000000004CB4 s               = -0x420
.text:0000000000004CB4 var_30          = -0x30
.text:0000000000004CB4 var_20          = -0x20
.text:0000000000004CB4 var_10          = -0x10
.text:0000000000004CB4 var_s0          =  0
.text:0000000000004CB4 ; __unwind {
.text:0000000000004CB4                 STP             X24, X23, [SP,#-0x10+var_30]!
.text:0000000000004CB8                 STP             X22, X21, [SP,#0x30+var_20]
.text:0000000000004CBC                 STP             X20, X19, [SP,#0x30+var_10]
.text:0000000000004CC0                 STP             X29, X30, [SP,#0x30+var_s0]
.text:0000000000004CC4                 ADD             X29, SP, #0x30
.text:0000000000004CC8                 SUB             SP, SP, #0x400
.text:0000000000004CCC                 ADRP            X22, #__stack_chk_guard_ptr@PAGE
.text:0000000000004CD0                 LDR             X22, [X22,#__stack_chk_guard_ptr@PAGEOFF]
.text:0000000000004CD4                 MOV             X19, X2
.text:0000000000004CD8                 MOV             X20, X0
.text:0000000000004CDC                 MOV             X23, SP
.text:0000000000004CE0                 LDR             X22, [X22]
.text:0000000000004CE4                 ADD             X0, SP, #0x430+s ; s
.text:0000000000004CE8                 MOV             W2, #0x3E8 ; n
.text:0000000000004CEC                 MOV             W1, WZR ; c
.text:0000000000004CF0                 STR             X22, [X23,#0x430+var_430]
.text:0000000000004CF4                 STR             WZR, [SP,#0x430+var_424]
.text:0000000000004CF8                 BL              .memset
.text:0000000000004CFC                 ADRP            X1, #unk_10DEC@PAGE
.text:0000000000004D00                 ADRP            X2, #aJniCheckRestri@PAGE ; "JNI, Check Restricted start"
.text:0000000000004D04                 ADD             X1, X1, #unk_10DEC@PAGEOFF
.text:0000000000004D08                 ADD             X2, X2, #aJniCheckRestri@PAGEOFF ; "JNI, Check Restricted start"
.text:0000000000004D0C                 MOV             W0, #4
.text:0000000000004D10                 BL              .__android_log_print
.text:0000000000004D14                 ADD             X0, SP, #0x430+s
.text:0000000000004D18                 ADD             X1, SP, #0x430+var_424
.text:0000000000004D1C                 BL              .getRestrictedCheck05mode
.text:0000000000004D20                 LDR             W3, [SP,#0x430+var_424]
.text:0000000000004D24                 CBZ             W3, loc_4D84
.text:0000000000004D28                 ADRP            X21, #unk_10DEC@PAGE
.text:0000000000004D2C                 ADD             X21, X21, #unk_10DEC@PAGEOFF
.text:0000000000004D30                 ADRP            X2, #a05resultLenD@PAGE ; "05Result len: %d"
.text:0000000000004D34                 ADD             X2, X2, #a05resultLenD@PAGEOFF ; "05Result len: %d"
.text:0000000000004D38                 MOV             W0, #4
.text:0000000000004D3C                 MOV             X1, X21
.text:0000000000004D40                 BL              .__android_log_print
.text:0000000000004D44                 ADRP            X2, #a05resultS@PAGE ; "05Result %s"
.text:0000000000004D48                 ADD             X2, X2, #a05resultS@PAGEOFF ; "05Result %s"
.text:0000000000004D4C                 MOV             W0, #4
.text:0000000000004D50                 ADD             X3, SP, #0x430+s
.text:0000000000004D54                 MOV             X1, X21
.text:0000000000004D58                 BL              .__android_log_print
.text:0000000000004D5C                 LDR             X8, [X20]
.text:0000000000004D60                 LDR             W21, [SP,#0x430+var_424]
.text:0000000000004D64                 MOV             W2, WZR
.text:0000000000004D68                 ADD             X4, SP, #0x430+s
.text:0000000000004D6C                 LDR             X8, [X8,#0x680]
.text:0000000000004D70                 MOV             X0, X20
.text:0000000000004D74                 MOV             X1, X19
.text:0000000000004D78                 MOV             W3, W21
.text:0000000000004D7C                 BLR             X8
.text:0000000000004D80                 B               loc_4DA0
.text:0000000000004D84 ; ---------------------------------------------------------------------------
.text:0000000000004D84 loc_4D84                                ; CODE XREF: Java_com_android_server_SemService_getRestricted05mode+70↑j
.text:0000000000004D84                 ADRP            X1, #unk_10DEC@PAGE
.text:0000000000004D88                 ADRP            X2, #aGetRestrictedD@PAGE ; "Get Restricted dataLen == 0"
.text:0000000000004D8C                 ADD             X1, X1, #unk_10DEC@PAGEOFF
.text:0000000000004D90                 ADD             X2, X2, #aGetRestrictedD@PAGEOFF ; "Get Restricted dataLen == 0"
.text:0000000000004D94                 MOV             W0, #4
.text:0000000000004D98                 BL              .__android_log_print
.text:0000000000004D9C                 MOV             W21, WZR
.text:0000000000004DA0 loc_4DA0                                ; CODE XREF: Java_com_android_server_SemService_getRestricted05mode+CC↑j
.text:0000000000004DA0                 ADRP            X1, #unk_10DEC@PAGE
.text:0000000000004DA4                 ADRP            X2, #aJniCheckRestri_0@PAGE ; "JNI, Check Restricted end"
.text:0000000000004DA8                 ADD             X1, X1, #unk_10DEC@PAGEOFF
.text:0000000000004DAC                 ADD             X2, X2, #aJniCheckRestri_0@PAGEOFF ; "JNI, Check Restricted end"
.text:0000000000004DB0                 MOV             W0, #4
.text:0000000000004DB4                 BL              .__android_log_print
.text:0000000000004DB8                 LDR             X8, [X23]
.text:0000000000004DBC                 SUB             X8, X22, X8
.text:0000000000004DC0                 CBNZ            X8, loc_4DE0
.text:0000000000004DC4                 MOV             W0, W21
.text:0000000000004DC8                 SUB             SP, X29, #0x30 ; '0'
.text:0000000000004DCC                 LDP             X29, X30, [SP,#0x30+var_s0]
.text:0000000000004DD0                 LDP             X20, X19, [SP,#0x30+var_10]
.text:0000000000004DD4                 LDP             X22, X21, [SP,#0x30+var_20]
.text:0000000000004DD8                 LDP             X24, X23, [SP+0x30+var_30],#0x40
.text:0000000000004DDC                 RET
.text:0000000000004DE0 ; ---------------------------------------------------------------------------
.text:0000000000004DE0 loc_4DE0                                ; CODE XREF: Java_com_android_server_SemService_getRestricted05mode+10C↑j
.text:0000000000004DE0                 BL              .__stack_chk_fail
.text:0000000000004DE0 ; } // starts at 4CB4
.text:0000000000004DE0 ; End of function Java_com_android_server_SemService_getRestricted05mode
.text:0000000000004DE4 ; =============== S U B R O U T I N E =======================================
.text:0000000000004DE4 ; Attributes: bp-based frame
.text:0000000000004DE4                 EXPORT bytes2charArray
.text:0000000000004DE4 bytes2charArray                         ; DATA XREF: LOAD:00000000000013A8↑o
.text:0000000000004DE4 var_30          = -0x30
.text:0000000000004DE4 var_20          = -0x20
.text:0000000000004DE4 var_10          = -0x10
.text:0000000000004DE4 var_s0          =  0
.text:0000000000004DE4 ; __unwind {
.text:0000000000004DE4                 STP             X24, X23, [SP,#-0x10+var_30]!
.text:0000000000004DE8                 STP             X22, X21, [SP,#0x30+var_20]
.text:0000000000004DEC                 STP             X20, X19, [SP,#0x30+var_10]
.text:0000000000004DF0                 STP             X29, X30, [SP,#0x30+var_s0]
.text:0000000000004DF4                 ADD             X29, SP, #0x30
.text:0000000000004DF8                 MOV             X19, X2
.text:0000000000004DFC                 MOV             W20, W1
.text:0000000000004E00                 MOV             X21, X0
.text:0000000000004E04                 CBZ             X21, loc_4E54
.text:0000000000004E08                 CMP             W20, #1
.text:0000000000004E0C                 B.LT            loc_4E54
.text:0000000000004E10                 CBZ             X19, loc_4E54
.text:0000000000004E14                 CMP             W20, #1
.text:0000000000004E18                 B.LT            loc_4E4C
.text:0000000000004E1C                 ADRP            X22, #a02x@PAGE ; "%02X"
.text:0000000000004E20                 MOV             W23, WZR
.text:0000000000004E24                 ADD             X22, X22, #a02x@PAGEOFF ; "%02X"
.text:0000000000004E28                 MOV             W24, W20
.text:0000000000004E2C loc_4E2C                                ; CODE XREF: bytes2charArray+64↓j
.text:0000000000004E2C                 LDRB            W3, [X21],#1
.text:0000000000004E30                 ADD             X0, X19, W23,SXTW ; s
.text:0000000000004E34                 MOV             W1, #3  ; maxlen
.text:0000000000004E38                 MOV             X2, X22 ; format
.text:0000000000004E3C                 BL              .snprintf
.text:0000000000004E40                 ADD             W23, W23, #2
.text:0000000000004E44                 SUB             W24, W24, #1
.text:0000000000004E48                 CBNZ            W24, loc_4E2C
.text:0000000000004E4C loc_4E4C                                ; CODE XREF: bytes2charArray+34↑j
.text:0000000000004E4C                 SBFIZ           X8, X20, #1, #0x20 ; ' '
.text:0000000000004E50                 STRB            WZR, [X19,X8]
.text:0000000000004E54 loc_4E54                                ; CODE XREF: bytes2charArray+20↑j
.text:0000000000004E54                                         ; bytes2charArray+28↑j ...
.text:0000000000004E54                 LDP             X29, X30, [SP,#0x30+var_s0]
.text:0000000000004E58                 LDP             X20, X19, [SP,#0x30+var_10]
.text:0000000000004E5C                 LDP             X22, X21, [SP,#0x30+var_20]
.text:0000000000004E60                 LDP             X24, X23, [SP+0x30+var_30],#0x40
.text:0000000000004E64                 RET
.text:0000000000004E64 ; } // starts at 4DE4
.text:0000000000004E64 ; End of function bytes2charArray
.text:0000000000004E68 ; =============== S U B R O U T I N E =======================================
.text:0000000000004E68 ; Attributes: bp-based frame
.text:0000000000004E68                 EXPORT nextApduOffset
.text:0000000000004E68 nextApduOffset                          ; CODE XREF: .nextApduOffset+C↑j
.text:0000000000004E68                                         ; DATA XREF: LOAD:0000000000000A90↑o ...
.text:0000000000004E68 var_20          = -0x20
.text:0000000000004E68 var_10          = -0x10
.text:0000000000004E68 var_s0          =  0
.text:0000000000004E68 ; __unwind {
.text:0000000000004E68                 STP             X22, X21, [SP,#-0x10+var_20]!
.text:0000000000004E6C                 STP             X20, X19, [SP,#0x20+var_10]
.text:0000000000004E70                 STP             X29, X30, [SP,#0x20+var_s0]
.text:0000000000004E74                 ADD             X29, SP, #0x20
.text:0000000000004E78                 MOV             X19, X4
.text:0000000000004E7C                 MOV             W20, #0xFFFFFFFF
.text:0000000000004E80                 CBZ             X0, loc_4F18
.text:0000000000004E84                 TBNZ            W1, #0x1F, loc_4F18
.text:0000000000004E88                 MOV             W20, #0xFFFFFFFF
.text:0000000000004E8C                 CMP             W1, W2
.text:0000000000004E90                 B.GE            loc_4F18
.text:0000000000004E94                 CBZ             X3, loc_4F18
.text:0000000000004E98                 SXTW            X8, W1
.text:0000000000004E9C                 ADD             X8, X8, #1
.text:0000000000004EA0                 LDRSB           W9, [X0,X8]
.text:0000000000004EA4                 AND             W20, W9, #0xFF
.text:0000000000004EA8                 TBNZ            W9, #0x1F, loc_4EB8
.text:0000000000004EAC                 MOV             W21, WZR
.text:0000000000004EB0                 MOV             W22, #1
.text:0000000000004EB4                 B               loc_4EF4
.text:0000000000004EB8 ; ---------------------------------------------------------------------------
.text:0000000000004EB8 loc_4EB8                                ; CODE XREF: nextApduOffset+40↑j
.text:0000000000004EB8                 CMP             W20, #0x81
.text:0000000000004EBC                 B.CC            loc_4EE8
.text:0000000000004EC0                 CMP             W20, #0x83
.text:0000000000004EC4                 B.EQ            loc_4F2C
.text:0000000000004EC8                 CMP             W20, #0x82
.text:0000000000004ECC                 B.EQ            loc_4F5C
.text:0000000000004ED0                 CMP             W20, #0x81
.text:0000000000004ED4                 B.NE            loc_4EE8
.text:0000000000004ED8                 ADD             X9, X0, W1,SXTW
.text:0000000000004EDC                 LDRB            W20, [X9,#2]
.text:0000000000004EE0                 MOV             W21, WZR
.text:0000000000004EE4                 B               loc_4EEC
.text:0000000000004EE8 ; ---------------------------------------------------------------------------
.text:0000000000004EE8 loc_4EE8                                ; CODE XREF: nextApduOffset+54↑j
.text:0000000000004EE8                                         ; nextApduOffset+6C↑j
.text:0000000000004EE8                 MOV             W21, WZR
.text:0000000000004EEC loc_4EEC                                ; CODE XREF: nextApduOffset+7C↑j
.text:0000000000004EEC                 MOV             W22, WZR
.text:0000000000004EF0                 MOV             W1, W8
.text:0000000000004EF4 loc_4EF4                                ; CODE XREF: nextApduOffset+4C↑j
.text:0000000000004EF4                                         ; nextApduOffset+F0↓j ...
.text:0000000000004EF4                 ADD             W8, W1, #2
.text:0000000000004EF8                 ADD             X1, X0, W8,SXTW ; src
.text:0000000000004EFC                 SXTW            X2, W20 ; n
.text:0000000000004F00                 MOV             X0, X3  ; dest
.text:0000000000004F04                 BL              .memcpy
.text:0000000000004F08                 STR             W20, [X19]
.text:0000000000004F0C                 TBNZ            W22, #0, loc_4F18
.text:0000000000004F10                 ADD             W8, W20, W21
.text:0000000000004F14                 ADD             W20, W8, #1
.text:0000000000004F18 loc_4F18                                ; CODE XREF: nextApduOffset+18↑j
.text:0000000000004F18                                         ; nextApduOffset+1C↑j ...
.text:0000000000004F18                 MOV             W0, W20
.text:0000000000004F1C                 LDP             X29, X30, [SP,#0x20+var_s0]
.text:0000000000004F20                 LDP             X20, X19, [SP,#0x20+var_10]
.text:0000000000004F24                 LDP             X22, X21, [SP+0x20+var_20],#0x30
.text:0000000000004F28                 RET
.text:0000000000004F2C ; ---------------------------------------------------------------------------
.text:0000000000004F2C loc_4F2C                                ; CODE XREF: nextApduOffset+5C↑j
.text:0000000000004F2C                 SXTW            X8, W1
.text:0000000000004F30                 ADD             X9, X8, X0
.text:0000000000004F34                 ADD             X1, X8, #3
.text:0000000000004F38                 LDRB            W8, [X9,#2]
.text:0000000000004F3C                 LDRB            W10, [X0,X1]
.text:0000000000004F40                 LDRB            W9, [X9,#4]
.text:0000000000004F44                 MOV             W22, WZR
.text:0000000000004F48                 LSL             W8, W8, #0x10
.text:0000000000004F4C                 BFI             W8, W10, #8, #8
.text:0000000000004F50                 ORR             W20, W8, W9
.text:0000000000004F54                 MOV             W21, #2
.text:0000000000004F58                 B               loc_4EF4
.text:0000000000004F5C ; ---------------------------------------------------------------------------
.text:0000000000004F5C loc_4F5C                                ; CODE XREF: nextApduOffset+64↑j
.text:0000000000004F5C                 SXTW            X8, W1
.text:0000000000004F60                 ADD             X1, X8, #2
.text:0000000000004F64                 ADD             X8, X8, X0
.text:0000000000004F68                 LDRB            W9, [X0,X1]
.text:0000000000004F6C                 LDRB            W20, [X8,#3]
.text:0000000000004F70                 MOV             W22, WZR
.text:0000000000004F74                 MOV             W21, #1
.text:0000000000004F78                 BFI             W20, W9, #8, #8
.text:0000000000004F7C                 B               loc_4EF4
.text:0000000000004F7C ; } // starts at 4E68
.text:0000000000004F7C ; End of function nextApduOffset
.text:0000000000004F80 ; =============== S U B R O U T I N E =======================================
.text:0000000000004F80 ; Attributes: bp-based frame
.text:0000000000004F80                 EXPORT Java_com_android_server_SemService_handleCCM
.text:0000000000004F80 Java_com_android_server_SemService_handleCCM
.text:0000000000004F80                                         ; DATA XREF: LOAD:0000000000000EF8↑o
.text:0000000000004F80 var_670         = -0x670
.text:0000000000004F80 var_660         = -0x660
.text:0000000000004F80 var_65C         = -0x65C
.text:0000000000004F80 var_658         = -0x658
.text:0000000000004F80 var_650         = -0x650
.text:0000000000004F80 var_64C         = -0x64C
.text:0000000000004F80 var_646         = -0x646
.text:0000000000004F80 s               = -0x252
.text:0000000000004F80 var_58          = -0x58
.text:0000000000004F80 var_50          = -0x50
.text:0000000000004F80 var_40          = -0x40
.text:0000000000004F80 var_30          = -0x30
.text:0000000000004F80 var_20          = -0x20
.text:0000000000004F80 var_10          = -0x10
.text:0000000000004F80 var_s0          =  0
.text:0000000000004F80 ; __unwind {
.text:0000000000004F80                 STP             X28, X27, [SP,#-0x10+var_50]!
.text:0000000000004F84                 STP             X26, X25, [SP,#0x50+var_40]
.text:0000000000004F88                 STP             X24, X23, [SP,#0x50+var_30]
.text:0000000000004F8C                 STP             X22, X21, [SP,#0x50+var_20]
.text:0000000000004F90                 STP             X20, X19, [SP,#0x50+var_10]
.text:0000000000004F94                 STP             X29, X30, [SP,#0x50+var_s0]
.text:0000000000004F98                 ADD             X29, SP, #0x50
.text:0000000000004F9C                 SUB             SP, SP, #0x630
.text:0000000000004FA0                 ADRP            X22, #__stack_chk_guard_ptr@PAGE
.text:0000000000004FA4                 LDR             X22, [X22,#__stack_chk_guard_ptr@PAGEOFF]
.text:0000000000004FA8                 MOV             X19, X0
.text:0000000000004FAC                 ADRP            X1, #aJavaLangString@PAGE ; "java/lang/String"
.text:0000000000004FB0                 ADD             X1, X1, #aJavaLangString@PAGEOFF ; "java/lang/String"
.text:0000000000004FB4                 LDR             X22, [X22]
.text:0000000000004FB8                 MOV             W25, W3
.text:0000000000004FBC                 MOV             X27, X2
.text:0000000000004FC0                 STUR            X22, [X29,#var_58]
.text:0000000000004FC4                 STR             WZR, [SP,#0x680+var_64C]
.text:0000000000004FC8                 LDR             X8, [X19]
.text:0000000000004FCC                 LDR             X21, [X8,#0x560]
.text:0000000000004FD0                 LDR             X8, [X8,#0x30]
.text:0000000000004FD4                 BLR             X8
.text:0000000000004FD8                 LDR             X8, [X19]
.text:0000000000004FDC                 ADRP            X1, #(aPrintsestate00+0x12)@PAGE ; ""
.text:0000000000004FE0                 MOV             X20, X0
.text:0000000000004FE4                 ADD             X1, X1, #(aPrintsestate00+0x12)@PAGEOFF ; ""
.text:0000000000004FE8                 LDR             X8, [X8,#0x538]
.text:0000000000004FEC                 MOV             X0, X19
.text:0000000000004FF0                 BLR             X8
.text:0000000000004FF4                 MOV             X3, X0
.text:0000000000004FF8                 MOV             W1, #0x3E8
.text:0000000000004FFC                 MOV             X0, X19
.text:0000000000005000                 MOV             X2, X20
.text:0000000000005004                 BLR             X21
.text:0000000000005008                 ADRP            X1, #unk_10DEC@PAGE
.text:000000000000500C                 ADD             X1, X1, #unk_10DEC@PAGEOFF
.text:0000000000005010                 MOV             X20, X0
.text:0000000000005014                 CBZ             X20, loc_5058
.text:0000000000005018                 ADRP            X2, #aJniLccmStart@PAGE ; "JNI, LCCM start"
.text:000000000000501C                 ADD             X2, X2, #aJniLccmStart@PAGEOFF ; "JNI, LCCM start"
.text:0000000000005020                 MOV             W0, #4
.text:0000000000005024                 BL              .__android_log_print
.text:0000000000005028                 BL              .openSecureSpi
.text:000000000000502C                 CMP             W0, #1
.text:0000000000005030                 B.NE            loc_5064
.text:0000000000005034                 SUB             W23, W25, #1
.text:0000000000005038                 LSR             W8, W23, #0xB
.text:000000000000503C                 CMP             W8, #0x2D ; '-'
.text:0000000000005040                 B.CC            loc_5084
.text:0000000000005044                 ADRP            X1, #unk_10DEC@PAGE
.text:0000000000005048                 ADRP            X2, #aNotSupportingC@PAGE ; "Not supporting CCM data length."
.text:000000000000504C                 ADD             X1, X1, #unk_10DEC@PAGEOFF
.text:0000000000005050                 ADD             X2, X2, #aNotSupportingC@PAGEOFF ; "Not supporting CCM data length."
.text:0000000000005054                 B               loc_5104
.text:0000000000005058 ; ---------------------------------------------------------------------------
.text:0000000000005058 loc_5058                                ; CODE XREF: Java_com_android_server_SemService_handleCCM+94↑j
.text:0000000000005058                 ADRP            X2, #aLccmAllocation@PAGE ; "LCCM allocation failed"
.text:000000000000505C                 ADD             X2, X2, #aLccmAllocation@PAGEOFF ; "LCCM allocation failed"
.text:0000000000005060                 B               loc_5074
.text:0000000000005064 ; ---------------------------------------------------------------------------
.text:0000000000005064 loc_5064                                ; CODE XREF: Java_com_android_server_SemService_handleCCM+B0↑j
.text:0000000000005064                 ADRP            X1, #unk_10DEC@PAGE
.text:0000000000005068                 ADRP            X2, #aLccmFailedDueT@PAGE ; "LCCM failed due to openSecureSpi fail"
.text:000000000000506C                 ADD             X1, X1, #unk_10DEC@PAGEOFF
.text:0000000000005070                 ADD             X2, X2, #aLccmFailedDueT@PAGEOFF ; "LCCM failed due to openSecureSpi fail"
.text:0000000000005074 loc_5074                                ; CODE XREF: Java_com_android_server_SemService_handleCCM+E0↑j
.text:0000000000005074                 MOV             W0, #6
.text:0000000000005078                 BL              .__android_log_print
.text:000000000000507C                 MOV             W26, #0xFFFFFFFF
.text:0000000000005080                 B               loc_54B8
.text:0000000000005084 ; ---------------------------------------------------------------------------
.text:0000000000005084 loc_5084                                ; CODE XREF: Java_com_android_server_SemService_handleCCM+C0↑j
.text:0000000000005084                 SXTW            X24, W25
.text:0000000000005088                 MOV             X0, X24 ; size
.text:000000000000508C                 STR             W25, [SP,#0x680+var_64C]
.text:0000000000005090                 BL              .malloc
.text:0000000000005094                 MOV             X28, X0
.text:0000000000005098                 CBZ             X28, loc_50F4
.text:000000000000509C                 LDR             X8, [X19]
.text:00000000000050A0                 MOV             X2, XZR
.text:00000000000050A4                 MOV             X0, X19
.text:00000000000050A8                 MOV             X1, X27
.text:00000000000050AC                 LDR             X8, [X8,#0x5C0]
.text:00000000000050B0                 BLR             X8
.text:00000000000050B4                 MOV             X21, X0
.text:00000000000050B8                 MOV             X0, X28 ; dest
.text:00000000000050BC                 MOV             X1, X21 ; src
.text:00000000000050C0                 MOV             X2, X24 ; n
.text:00000000000050C4                 BL              .memcpy
.text:00000000000050C8                 LDRB            W0, [X28]
.text:00000000000050CC                 CMP             W0, #0xB
.text:00000000000050D0                 B.CC            loc_5114
.text:00000000000050D4                 CMP             W0, #0x37 ; '7'
.text:00000000000050D8                 B.EQ            loc_5114
.text:00000000000050DC                 ADD             X28, X28, #1
.text:00000000000050E0                 ADD             X2, SP, #0x680+var_64C
.text:00000000000050E4                 MOV             X1, X28
.text:00000000000050E8                 STR             W23, [SP,#0x680+var_64C]
.text:00000000000050EC                 BL              .handleCCM_version
.text:00000000000050F0                 B               loc_5120
.text:00000000000050F4 ; ---------------------------------------------------------------------------
.text:00000000000050F4 loc_50F4                                ; CODE XREF: Java_com_android_server_SemService_handleCCM+118↑j
.text:00000000000050F4                 ADRP            X1, #unk_10DEC@PAGE
.text:00000000000050F8                 ADRP            X2, #aLccmMemAllocFa@PAGE ; "LCCM MEM ALLOC failed"
.text:00000000000050FC                 ADD             X1, X1, #unk_10DEC@PAGEOFF
.text:0000000000005100                 ADD             X2, X2, #aLccmMemAllocFa@PAGEOFF ; "LCCM MEM ALLOC failed"
.text:0000000000005104 loc_5104                                ; CODE XREF: Java_com_android_server_SemService_handleCCM+D4↑j
.text:0000000000005104                 MOV             W0, #6
.text:0000000000005108                 BL              .__android_log_print
.text:000000000000510C                 MOV             W26, #0xFFFFFFFF
.text:0000000000005110                 B               loc_54B4
.text:0000000000005114 ; ---------------------------------------------------------------------------
.text:0000000000005114 loc_5114                                ; CODE XREF: Java_com_android_server_SemService_handleCCM+150↑j
.text:0000000000005114                                         ; Java_com_android_server_SemService_handleCCM+158↑j
.text:0000000000005114                 ADD             X1, SP, #0x680+var_64C
.text:0000000000005118                 MOV             X0, X28
.text:000000000000511C                 BL              .handleCCM
.text:0000000000005120 loc_5120                                ; CODE XREF: Java_com_android_server_SemService_handleCCM+170↑j
.text:0000000000005120                 MOV             W26, W0
.text:0000000000005124                 BL              .closeSecureSpi
.text:0000000000005128                 MOV             W23, W0
.text:000000000000512C                 CBZ             W26, loc_514C
.text:0000000000005130                 ADRP            X1, #unk_10DEC@PAGE
.text:0000000000005134                 ADRP            X2, #aLccmReturnedFa@PAGE ; "LCCM returned fail"
.text:0000000000005138                 ADD             X1, X1, #unk_10DEC@PAGEOFF
.text:000000000000513C                 ADD             X2, X2, #aLccmReturnedFa@PAGEOFF ; "LCCM returned fail"
.text:0000000000005140                 MOV             W0, #6
.text:0000000000005144                 BL              .__android_log_print
.text:0000000000005148                 B               loc_5480
.text:000000000000514C ; ---------------------------------------------------------------------------
.text:000000000000514C loc_514C                                ; CODE XREF: Java_com_android_server_SemService_handleCCM+1AC↑j
.text:000000000000514C                 BL              .isLccmSwpProp
.text:0000000000005150                 ADRP            X1, #unk_10DEC@PAGE
.text:0000000000005154                 ADD             X1, X1, #unk_10DEC@PAGEOFF
.text:0000000000005158                 CMP             W0, #1
.text:000000000000515C                 B.NE            loc_51D0
.text:0000000000005160                 ADRP            X2, #aLccmSwp@PAGE ; "LCCM SWP"
.text:0000000000005164                 ADD             X2, X2, #aLccmSwp@PAGEOFF ; "LCCM SWP"
.text:0000000000005168                 MOV             W0, #4
.text:000000000000516C                 BL              .__android_log_print
.text:0000000000005170                 LDR             W26, [SP,#0x680+var_64C]
.text:0000000000005174                 CMP             W26, #1
.text:0000000000005178                 B.LT            loc_51E4
.text:000000000000517C                 CMP             W26, W25
.text:0000000000005180                 B.GE            loc_51E4
.text:0000000000005184                 ADD             X0, SP, #0x680+s ; s
.text:0000000000005188                 MOV             W2, #0x1FA ; n
.text:000000000000518C                 MOV             W1, WZR ; c
.text:0000000000005190                 STR             WZR, [SP,#0x680+var_650]
.text:0000000000005194                 BL              .memset
.text:0000000000005198                 MOV             W24, WZR
.text:000000000000519C                 MOV             W8, #0xFFFFFFFF
.text:00000000000051A0                 CBZ             X28, loc_5204
.text:00000000000051A4                 STR             W23, [SP,#0x680+var_660]
.text:00000000000051A8                 CMP             W26, #1
.text:00000000000051AC                 B.LT            loc_52D0
.text:00000000000051B0                 LDRSB           W9, [X28,#1]
.text:00000000000051B4                 MOV             W8, #2
.text:00000000000051B8                 AND             W10, W9, #0xFF
.text:00000000000051BC                 TBNZ            W9, #0x1F, loc_520C
.text:00000000000051C0                 MOV             X9, X10
.text:00000000000051C4                 MOV             W24, WZR
.text:00000000000051C8                 MOV             W23, #1
.text:00000000000051CC                 B               loc_52A0
.text:00000000000051D0 ; ---------------------------------------------------------------------------
.text:00000000000051D0 loc_51D0                                ; CODE XREF: Java_com_android_server_SemService_handleCCM+1DC↑j
.text:00000000000051D0                 ADRP            X2, #aLccmSpi@PAGE ; "LCCM SPI"
.text:00000000000051D4                 ADD             X2, X2, #aLccmSpi@PAGEOFF ; "LCCM SPI"
.text:00000000000051D8                 MOV             W0, #4
.text:00000000000051DC                 BL              .__android_log_print
.text:00000000000051E0                 B               loc_547C
.text:00000000000051E4 ; ---------------------------------------------------------------------------
.text:00000000000051E4 loc_51E4                                ; CODE XREF: Java_com_android_server_SemService_handleCCM+1F8↑j
.text:00000000000051E4                                         ; Java_com_android_server_SemService_handleCCM+200↑j
.text:00000000000051E4                 ADRP            X1, #unk_10DEC@PAGE
.text:00000000000051E8                 ADRP            X2, #aLccmReturnedEm@PAGE ; "LCCM returned empty or too big : %d"
.text:00000000000051EC                 ADD             X1, X1, #unk_10DEC@PAGEOFF
.text:00000000000051F0                 ADD             X2, X2, #aLccmReturnedEm@PAGEOFF ; "LCCM returned empty or too big : %d"
.text:00000000000051F4                 MOV             W0, #6
.text:00000000000051F8                 MOV             W3, W26
.text:00000000000051FC                 BL              .__android_log_print
.text:0000000000005200                 B               loc_547C
.text:0000000000005204 ; ---------------------------------------------------------------------------
.text:0000000000005204 loc_5204                                ; CODE XREF: Java_com_android_server_SemService_handleCCM+220↑j
.text:0000000000005204                 STR             W23, [SP,#0x680+var_660]
.text:0000000000005208                 B               loc_52D0
.text:000000000000520C ; ---------------------------------------------------------------------------
.text:000000000000520C loc_520C                                ; CODE XREF: Java_com_android_server_SemService_handleCCM+23C↑j
.text:000000000000520C                 MOV             W8, #3
.text:0000000000005210                 CMP             W10, #0x81
.text:0000000000005214                 B.CS            loc_5220
.text:0000000000005218                 MOV             X9, X10
.text:000000000000521C                 B               loc_5254
.text:0000000000005220 ; ---------------------------------------------------------------------------
.text:0000000000005220 loc_5220                                ; CODE XREF: Java_com_android_server_SemService_handleCCM+294↑j
.text:0000000000005220                 MOV             W8, #3
.text:0000000000005224                 CMP             W10, #0x83
.text:0000000000005228                 B.EQ            loc_527C
.text:000000000000522C                 CMP             W10, #0x82
.text:0000000000005230                 B.EQ            loc_5260
.text:0000000000005234                 CMP             W10, #0x81
.text:0000000000005238                 MOV             X9, X10
.text:000000000000523C                 B.NE            loc_5254
.text:0000000000005240                 LDRB            W9, [X28,#2]
.text:0000000000005244                 MOV             W24, WZR
.text:0000000000005248                 MOV             W23, WZR
.text:000000000000524C                 MOV             W8, #3
.text:0000000000005250                 B               loc_52A0
.text:0000000000005254 ; ---------------------------------------------------------------------------
.text:0000000000005254 loc_5254                                ; CODE XREF: Java_com_android_server_SemService_handleCCM+29C↑j
.text:0000000000005254                                         ; Java_com_android_server_SemService_handleCCM+2BC↑j
.text:0000000000005254                 MOV             W24, WZR
.text:0000000000005258                 MOV             W23, WZR
.text:000000000000525C                 B               loc_52A0
.text:0000000000005260 ; ---------------------------------------------------------------------------
.text:0000000000005260 loc_5260                                ; CODE XREF: Java_com_android_server_SemService_handleCCM+2B0↑j
.text:0000000000005260                 LDRB            W8, [X28,#2]
.text:0000000000005264                 LDRB            W9, [X28,#3]
.text:0000000000005268                 MOV             W23, WZR
.text:000000000000526C                 MOV             W24, #1
.text:0000000000005270                 BFI             W9, W8, #8, #8
.text:0000000000005274                 MOV             W8, #4
.text:0000000000005278                 B               loc_52A0
.text:000000000000527C ; ---------------------------------------------------------------------------
.text:000000000000527C loc_527C                                ; CODE XREF: Java_com_android_server_SemService_handleCCM+2A8↑j
.text:000000000000527C                 LDRB            W8, [X28,#2]
.text:0000000000005280                 LDRB            W9, [X28,#3]
.text:0000000000005284                 LDRB            W10, [X28,#4]
.text:0000000000005288                 MOV             W23, WZR
.text:000000000000528C                 LSL             W8, W8, #0x10
.text:0000000000005290                 BFI             W8, W9, #8, #8
.text:0000000000005294                 MOV             W24, #2
.text:0000000000005298                 ORR             W9, W8, W10
.text:000000000000529C                 MOV             W8, #5
.text:00000000000052A0 loc_52A0                                ; CODE XREF: Java_com_android_server_SemService_handleCCM+24C↑j
.text:00000000000052A0                                         ; Java_com_android_server_SemService_handleCCM+2D0↑j ...
.text:00000000000052A0                 MOV             X25, X9
.text:00000000000052A4                 ADD             X1, X28, X8 ; src
.text:00000000000052A8                 SXTW            X2, W25 ; n
.text:00000000000052AC                 ADD             X0, SP, #0x680+s ; dest
.text:00000000000052B0                 BL              .memcpy
.text:00000000000052B4                 ADD             W8, W25, W24
.text:00000000000052B8                 CMP             W23, #0
.text:00000000000052BC                 CSINC           W8, W25, W8, NE
.text:00000000000052C0                 MOV             X24, X25
.text:00000000000052C4                 STR             W25, [SP,#0x680+var_650]
.text:00000000000052C8                 CMN             W8, #1
.text:00000000000052CC                 B.LT            loc_5460
.text:00000000000052D0 loc_52D0                                ; CODE XREF: Java_com_android_server_SemService_handleCCM+22C↑j
.text:00000000000052D0                                         ; Java_com_android_server_SemService_handleCCM+288↑j
.text:00000000000052D0                 ADD             X0, SP, #0x680+var_646 ; s
.text:00000000000052D4                 MOV             W2, #0x3F4 ; n
.text:00000000000052D8                 MOV             W1, WZR ; c
.text:00000000000052DC                 STP             X21, X27, [SP,#0x680+var_670]
.text:00000000000052E0                 ADD             W25, W8, #2
.text:00000000000052E4                 ADD             X23, SP, #0x680+var_646
.text:00000000000052E8                 BL              .memset
.text:00000000000052EC                 MOV             X22, X24
.text:00000000000052F0                 CMP             W22, #1
.text:00000000000052F4                 B.LT            loc_5338
.text:00000000000052F8                 ADRP            X26, #a02x@PAGE ; "%02X"
.text:00000000000052FC                 MOV             W24, WZR
.text:0000000000005300                 ADD             X27, SP, #0x680+s
.text:0000000000005304                 ADD             X26, X26, #a02x@PAGEOFF ; "%02X"
.text:0000000000005308                 MOV             W21, W22
.text:000000000000530C loc_530C                                ; CODE XREF: Java_com_android_server_SemService_handleCCM+3A8↓j
.text:000000000000530C                 LDRB            W3, [X27],#1
.text:0000000000005310                 ADD             X0, X23, W24,SXTW ; s
.text:0000000000005314                 MOV             W1, #3  ; maxlen
.text:0000000000005318                 MOV             X2, X26 ; format
.text:000000000000531C                 BL              .snprintf
.text:0000000000005320                 SUB             W21, W21, #1
.text:0000000000005324                 ADD             W24, W24, #2
.text:0000000000005328                 CBNZ            W21, loc_530C
.text:000000000000532C                 SBFIZ           X8, X22, #1, #0x20 ; ' '
.text:0000000000005330                 ADD             X9, SP, #0x680+var_646
.text:0000000000005334                 STRB            WZR, [X9,X8]
.text:0000000000005338 loc_5338                                ; CODE XREF: Java_com_android_server_SemService_handleCCM+374↑j
.text:0000000000005338                 LDR             X8, [X19]
.text:000000000000533C                 ADD             X1, SP, #0x680+var_646
.text:0000000000005340                 MOV             X0, X19
.text:0000000000005344                 ADD             X23, SP, #0x680+var_646
.text:0000000000005348                 LDR             X21, [X8,#0x570]
.text:000000000000534C                 LDR             X8, [X8,#0x538]
.text:0000000000005350                 BLR             X8
.text:0000000000005354                 MOV             X3, X0
.text:0000000000005358                 MOV             W2, WZR
.text:000000000000535C                 MOV             X0, X19
.text:0000000000005360                 MOV             X1, X20
.text:0000000000005364                 BLR             X21
.text:0000000000005368                 LDR             W2, [SP,#0x680+var_64C]
.text:000000000000536C                 CMP             W25, W2
.text:0000000000005370                 B.GE            loc_5434
.text:0000000000005374                 ADRP            X27, #a02x@PAGE ; "%02X"
.text:0000000000005378                 MOV             W26, #1
.text:000000000000537C                 ADD             X27, X27, #a02x@PAGEOFF ; "%02X"
.text:0000000000005380 loc_5380                                ; CODE XREF: Java_com_android_server_SemService_handleCCM+4B0↓j
.text:0000000000005380                 ADD             X3, SP, #0x680+s
.text:0000000000005384                 ADD             X4, SP, #0x680+var_650
.text:0000000000005388                 MOV             X0, X28
.text:000000000000538C                 MOV             W1, W25
.text:0000000000005390                 ADD             X24, SP, #0x680+s
.text:0000000000005394                 BL              .nextApduOffset
.text:0000000000005398                 LDR             W22, [SP,#0x680+var_650]
.text:000000000000539C                 ADD             W8, W25, W0
.text:00000000000053A0                 ADD             W25, W8, #2
.text:00000000000053A4                 CMP             W22, #1
.text:00000000000053A8                 B.LT            loc_53F8
.text:00000000000053AC                 STR             W25, [SP,#0x680+var_65C]
.text:00000000000053B0                 MOV             X25, X22
.text:00000000000053B4                 STR             X28, [SP,#0x680+var_658]
.text:00000000000053B8                 MOV             W21, WZR
.text:00000000000053BC                 SXTW            X22, W25
.text:00000000000053C0                 MOV             W28, W25
.text:00000000000053C4 loc_53C4                                ; CODE XREF: Java_com_android_server_SemService_handleCCM+460↓j
.text:00000000000053C4                 LDRB            W3, [X24],#1
.text:00000000000053C8                 ADD             X0, X23, W21,SXTW ; s
.text:00000000000053CC                 MOV             W1, #3  ; maxlen
.text:00000000000053D0                 MOV             X2, X27 ; format
.text:00000000000053D4                 BL              .snprintf
.text:00000000000053D8                 SUB             W28, W28, #1
.text:00000000000053DC                 ADD             W21, W21, #2
.text:00000000000053E0                 CBNZ            W28, loc_53C4
.text:00000000000053E4                 LSL             X8, X22, #1
.text:00000000000053E8                 LDR             X28, [SP,#0x680+var_658]
.text:00000000000053EC                 MOV             X22, X25
.text:00000000000053F0                 LDR             W25, [SP,#0x680+var_65C]
.text:00000000000053F4                 STRB            WZR, [X23,X8]
.text:00000000000053F8 loc_53F8                                ; CODE XREF: Java_com_android_server_SemService_handleCCM+428↑j
.text:00000000000053F8                 LDR             X8, [X19]
.text:00000000000053FC                 ADD             X1, SP, #0x680+var_646
.text:0000000000005400                 MOV             X0, X19
.text:0000000000005404                 LDR             X21, [X8,#0x570]
.text:0000000000005408                 LDR             X8, [X8,#0x538]
.text:000000000000540C                 BLR             X8
.text:0000000000005410                 MOV             X3, X0
.text:0000000000005414                 MOV             X0, X19
.text:0000000000005418                 MOV             X1, X20
.text:000000000000541C                 MOV             W2, W26
.text:0000000000005420                 BLR             X21
.text:0000000000005424                 LDR             W2, [SP,#0x680+var_64C]
.text:0000000000005428                 ADD             W26, W26, #1
.text:000000000000542C                 CMP             W25, W2
.text:0000000000005430                 B.LT            loc_5380
.text:0000000000005434 loc_5434                                ; CODE XREF: Java_com_android_server_SemService_handleCCM+3F0↑j
.text:0000000000005434                 SXTW            X2, W22 ; n
.text:0000000000005438                 MOV             W1, WZR ; c
.text:000000000000543C                 ADD             X0, SP, #0x680+s ; s
.text:0000000000005440                 BL              .memset
.text:0000000000005444                 ADRP            X22, #__stack_chk_guard_ptr@PAGE
.text:0000000000005448                 STR             WZR, [SP,#0x680+var_650]
.text:000000000000544C                 LDR             X22, [X22,#__stack_chk_guard_ptr@PAGEOFF]
.text:0000000000005450                 LDP             X21, X27, [SP,#0x680+var_670]
.text:0000000000005454                 LDR             W23, [SP,#0x680+var_660]
.text:0000000000005458                 LDR             X22, [X22]
.text:000000000000545C                 B               loc_547C
.text:0000000000005460 ; ---------------------------------------------------------------------------
.text:0000000000005460 loc_5460                                ; CODE XREF: Java_com_android_server_SemService_handleCCM+34C↑j
.text:0000000000005460                 ADRP            X1, #unk_10DEC@PAGE
.text:0000000000005464                 ADRP            X2, #aLccmWrongIndex@PAGE ; "LCCM Wrong index!"
.text:0000000000005468                 ADD             X1, X1, #unk_10DEC@PAGEOFF
.text:000000000000546C                 ADD             X2, X2, #aLccmWrongIndex@PAGEOFF ; "LCCM Wrong index!"
.text:0000000000005470                 MOV             W0, #6
.text:0000000000005474                 BL              .__android_log_print
.text:0000000000005478                 LDR             W23, [SP,#0x680+var_660]
.text:000000000000547C loc_547C                                ; CODE XREF: Java_com_android_server_SemService_handleCCM+260↑j
.text:000000000000547C                                         ; Java_com_android_server_SemService_handleCCM+280↑j ...
.text:000000000000547C                 MOV             W26, WZR
.text:0000000000005480 loc_5480                                ; CODE XREF: Java_com_android_server_SemService_handleCCM+1C8↑j
.text:0000000000005480                 CBZ             X28, loc_548C
.text:0000000000005484                 MOV             X0, X28 ; ptr
.text:0000000000005488                 BL              .free
.text:000000000000548C loc_548C                                ; CODE XREF: Java_com_android_server_SemService_handleCCM:loc_5480↑j
.text:000000000000548C                 CBZ             X21, loc_54AC
.text:0000000000005490                 LDR             X8, [X19]
.text:0000000000005494                 MOV             W3, #2
.text:0000000000005498                 MOV             X0, X19
.text:000000000000549C                 MOV             X1, X27
.text:00000000000054A0                 LDR             X8, [X8,#0x600]
.text:00000000000054A4                 MOV             X2, X21
.text:00000000000054A8                 BLR             X8
.text:00000000000054AC loc_54AC                                ; CODE XREF: Java_com_android_server_SemService_handleCCM:loc_548C↑j
.text:00000000000054AC                 CMP             W23, #1
.text:00000000000054B0                 B.EQ            loc_54B8
.text:00000000000054B4 loc_54B4                                ; CODE XREF: Java_com_android_server_SemService_handleCCM+190↑j
.text:00000000000054B4                 BL              .closeSecureSpi
.text:00000000000054B8 loc_54B8                                ; CODE XREF: Java_com_android_server_SemService_handleCCM+100↑j
.text:00000000000054B8                                         ; Java_com_android_server_SemService_handleCCM+530↑j
.text:00000000000054B8                 ADRP            X1, #unk_10DEC@PAGE
.text:00000000000054BC                 ADRP            X2, #aJniLccmEndD@PAGE ; "JNI, LCCM end: %d"
.text:00000000000054C0                 ADD             X1, X1, #unk_10DEC@PAGEOFF
.text:00000000000054C4                 ADD             X2, X2, #aJniLccmEndD@PAGEOFF ; "JNI, LCCM end: %d"
.text:00000000000054C8                 MOV             W0, #4
.text:00000000000054CC                 MOV             W3, W26
.text:00000000000054D0                 BL              .__android_log_print
.text:00000000000054D4                 BL              .isLccmSwpProp
.text:00000000000054D8                 CMP             W0, #1
.text:00000000000054DC                 B.NE            loc_54EC
.text:00000000000054E0                 CMP             W26, #0
.text:00000000000054E4                 CSEL            X20, X20, XZR, EQ
.text:00000000000054E8                 B               loc_5540
.text:00000000000054EC ; ---------------------------------------------------------------------------
.text:00000000000054EC loc_54EC                                ; CODE XREF: Java_com_android_server_SemService_handleCCM+55C↑j
.text:00000000000054EC                 ADRP            X1, #unk_10DEC@PAGE
.text:00000000000054F0                 ADRP            X2, #aLccmSpiReturnN@PAGE ; "LCCM SPI return NULL"
.text:00000000000054F4                 ADD             X1, X1, #unk_10DEC@PAGEOFF
.text:00000000000054F8                 ADD             X2, X2, #aLccmSpiReturnN@PAGEOFF ; "LCCM SPI return NULL"
.text:00000000000054FC                 MOV             W0, #4
.text:0000000000005500                 BL              .__android_log_print
.text:0000000000005504                 CBZ             W26, loc_5510
.text:0000000000005508                 MOV             X20, XZR
.text:000000000000550C                 B               loc_5540
.text:0000000000005510 ; ---------------------------------------------------------------------------
.text:0000000000005510 loc_5510                                ; CODE XREF: Java_com_android_server_SemService_handleCCM+584↑j
.text:0000000000005510                 LDR             X8, [X19]
.text:0000000000005514                 ADRP            X1, #aPass@PAGE ; "PASS"
.text:0000000000005518                 ADD             X1, X1, #aPass@PAGEOFF ; "PASS"
.text:000000000000551C                 MOV             X0, X19
.text:0000000000005520                 LDR             X21, [X8,#0x570]
.text:0000000000005524                 LDR             X8, [X8,#0x538]
.text:0000000000005528                 BLR             X8
.text:000000000000552C                 MOV             X3, X0
.text:0000000000005530                 MOV             W2, WZR
.text:0000000000005534                 MOV             X0, X19
.text:0000000000005538                 MOV             X1, X20
.text:000000000000553C                 BLR             X21
.text:0000000000005540 loc_5540                                ; CODE XREF: Java_com_android_server_SemService_handleCCM+568↑j
.text:0000000000005540                                         ; Java_com_android_server_SemService_handleCCM+58C↑j
.text:0000000000005540                 LDUR            X8, [X29,#var_58]
.text:0000000000005544                 SUB             X8, X22, X8
.text:0000000000005548                 CBNZ            X8, loc_5570
.text:000000000000554C                 MOV             X0, X20
.text:0000000000005550                 SUB             SP, X29, #0x50 ; 'P'
.text:0000000000005554                 LDP             X29, X30, [SP,#0x50+var_s0]
.text:0000000000005558                 LDP             X20, X19, [SP,#0x50+var_10]
.text:000000000000555C                 LDP             X22, X21, [SP,#0x50+var_20]
.text:0000000000005560                 LDP             X24, X23, [SP,#0x50+var_30]
.text:0000000000005564                 LDP             X26, X25, [SP,#0x50+var_40]
.text:0000000000005568                 LDP             X28, X27, [SP+0x50+var_50],#0x60
.text:000000000000556C                 RET
.text:0000000000005570 ; ---------------------------------------------------------------------------
.text:0000000000005570 loc_5570                                ; CODE XREF: Java_com_android_server_SemService_handleCCM+5C8↑j
.text:0000000000005570                 BL              .__stack_chk_fail
.text:0000000000005570 ; } // starts at 4F80
.text:0000000000005570 ; End of function Java_com_android_server_SemService_handleCCM
.text:0000000000005574 ; =============== S U B R O U T I N E =======================================
.text:0000000000005574 ; Attributes: bp-based frame
.text:0000000000005574                 EXPORT Java_com_android_server_SemService_handleCCMCB
.text:0000000000005574 Java_com_android_server_SemService_handleCCMCB
.text:0000000000005574                                         ; DATA XREF: LOAD:0000000000001630↑o
.text:0000000000005574 var_16E88       = -0x16E88
.text:0000000000005574 var_16E80       = -0x16E80
.text:0000000000005574 var_16E74       = -0x16E74
.text:0000000000005574 var_16E70       = -0x16E70
.text:0000000000005574 var_16E64       = -0x16E64
.text:0000000000005574 var_16E60       = -0x16E60
.text:0000000000005574 var_16E58       = -0x16E58
.text:0000000000005574 var_16E50       = -0x16E50
.text:0000000000005574 var_16E4C       = -0x16E4C
.text:0000000000005574 var_16E46       = -0x16E46
.text:0000000000005574 dest            = -0x16A52
.text:0000000000005574 s               = -0x16858
.text:0000000000005574 var_50          = -0x50
.text:0000000000005574 var_40          = -0x40
.text:0000000000005574 var_30          = -0x30
.text:0000000000005574 var_20          = -0x20
.text:0000000000005574 var_10          = -0x10
.text:0000000000005574 var_s0          =  0
.text:0000000000005574 ; __unwind {
.text:0000000000005574                 STP             X28, X27, [SP,#-0x10+var_50]!
.text:0000000000005578                 STP             X26, X25, [SP,#0x50+var_40]
.text:000000000000557C                 STP             X24, X23, [SP,#0x50+var_30]
.text:0000000000005580                 STP             X22, X21, [SP,#0x50+var_20]
.text:0000000000005584                 STP             X20, X19, [SP,#0x50+var_10]
.text:0000000000005588                 STP             X29, X30, [SP,#0x50+var_s0]
.text:000000000000558C                 ADD             X29, SP, #0x50
.text:0000000000005590                 SUB             SP, SP, #0x16,LSL#12
.text:0000000000005594                 SUB             SP, SP, #0xE40
.text:0000000000005598                 ADRP            X23, #__stack_chk_guard_ptr@PAGE
.text:000000000000559C                 LDR             X23, [X23,#__stack_chk_guard_ptr@PAGEOFF]
.text:00000000000055A0                 MOV             X22, X2
.text:00000000000055A4                 MOV             W2, #0x10000
.text:00000000000055A8                 MOV             X19, X0
.text:00000000000055AC                 LDR             X23, [X23]
.text:00000000000055B0                 ADD             X28, SP, #0x16E90+var_16E58
.text:00000000000055B4                 ADD             X0, SP, #0x16E90+s ; s
.text:00000000000055B8                 MOVK            W2, #0x6800 ; n
.text:00000000000055BC                 MOV             W1, WZR ; c
.text:00000000000055C0                 MOV             X25, X4
.text:00000000000055C4                 MOV             W26, W3
.text:00000000000055C8                 STR             X23, [X28]
.text:00000000000055CC                 STR             WZR, [SP,#0x16E90+var_16E4C]
.text:00000000000055D0                 BL              .memset
.text:00000000000055D4                 LDR             X8, [X19]
.text:00000000000055D8                 ADRP            X1, #aJavaLangString@PAGE ; "java/lang/String"
.text:00000000000055DC                 ADD             X1, X1, #aJavaLangString@PAGEOFF ; "java/lang/String"
.text:00000000000055E0                 MOV             X0, X19
.text:00000000000055E4                 LDR             X21, [X8,#0x560]
.text:00000000000055E8                 LDR             X8, [X8,#0x30]
.text:00000000000055EC                 BLR             X8
.text:00000000000055F0                 LDR             X8, [X19]
.text:00000000000055F4                 ADRP            X1, #(aPrintsestate00+0x12)@PAGE ; ""
.text:00000000000055F8                 MOV             X20, X0
.text:00000000000055FC                 ADD             X1, X1, #(aPrintsestate00+0x12)@PAGEOFF ; ""
.text:0000000000005600                 LDR             X8, [X8,#0x538]
.text:0000000000005604                 MOV             X0, X19
.text:0000000000005608                 BLR             X8
.text:000000000000560C                 MOV             X3, X0
.text:0000000000005610                 MOV             W1, #0x3E8
.text:0000000000005614                 MOV             X0, X19
.text:0000000000005618                 MOV             X2, X20
.text:000000000000561C                 BLR             X21
.text:0000000000005620                 ADRP            X1, #unk_10DEC@PAGE
.text:0000000000005624                 ADD             X1, X1, #unk_10DEC@PAGEOFF
.text:0000000000005628                 MOV             X20, X0
.text:000000000000562C                 CBZ             X20, loc_5670
.text:0000000000005630                 ADRP            X2, #aJniLccmStart@PAGE ; "JNI, LCCM start"
.text:0000000000005634                 ADD             X2, X2, #aJniLccmStart@PAGEOFF ; "JNI, LCCM start"
.text:0000000000005638                 MOV             W0, #4
.text:000000000000563C                 BL              .__android_log_print
.text:0000000000005640                 BL              .openSecureSpi
.text:0000000000005644                 CMP             W0, #1
.text:0000000000005648                 B.NE            loc_567C
.text:000000000000564C                 SUB             W21, W26, #1
.text:0000000000005650                 LSR             W8, W21, #0xB
.text:0000000000005654                 CMP             W8, #0x2D ; '-'
.text:0000000000005658                 B.CC            loc_569C
.text:000000000000565C                 ADRP            X1, #unk_10DEC@PAGE
.text:0000000000005660                 ADRP            X2, #aNotSupportingC@PAGE ; "Not supporting CCM data length."
.text:0000000000005664                 ADD             X1, X1, #unk_10DEC@PAGEOFF
.text:0000000000005668                 ADD             X2, X2, #aNotSupportingC@PAGEOFF ; "Not supporting CCM data length."
.text:000000000000566C                 B               loc_5724
.text:0000000000005670 ; ---------------------------------------------------------------------------
.text:0000000000005670 loc_5670                                ; CODE XREF: Java_com_android_server_SemService_handleCCMCB+B8↑j
.text:0000000000005670                 ADRP            X2, #aLccmAllocation@PAGE ; "LCCM allocation failed"
.text:0000000000005674                 ADD             X2, X2, #aLccmAllocation@PAGEOFF ; "LCCM allocation failed"
.text:0000000000005678                 B               loc_568C
.text:000000000000567C ; ---------------------------------------------------------------------------
.text:000000000000567C loc_567C                                ; CODE XREF: Java_com_android_server_SemService_handleCCMCB+D4↑j
.text:000000000000567C                 ADRP            X1, #unk_10DEC@PAGE
.text:0000000000005680                 ADRP            X2, #aLccmFailedDueT@PAGE ; "LCCM failed due to openSecureSpi fail"
.text:0000000000005684                 ADD             X1, X1, #unk_10DEC@PAGEOFF
.text:0000000000005688                 ADD             X2, X2, #aLccmFailedDueT@PAGEOFF ; "LCCM failed due to openSecureSpi fail"
.text:000000000000568C loc_568C                                ; CODE XREF: Java_com_android_server_SemService_handleCCMCB+104↑j
.text:000000000000568C                 MOV             W0, #6
.text:0000000000005690                 BL              .__android_log_print
.text:0000000000005694                 MOV             W27, #0xFFFFFFFF
.text:0000000000005698                 B               loc_5B34
.text:000000000000569C ; ---------------------------------------------------------------------------
.text:000000000000569C loc_569C                                ; CODE XREF: Java_com_android_server_SemService_handleCCMCB+E4↑j
.text:000000000000569C                 SXTW            X24, W26
.text:00000000000056A0                 MOV             X0, X24 ; size
.text:00000000000056A4                 STR             W26, [SP,#0x16E90+var_16E4C]
.text:00000000000056A8                 BL              .malloc
.text:00000000000056AC                 MOV             X27, X0
.text:00000000000056B0                 CBZ             X27, loc_5714
.text:00000000000056B4                 LDR             X8, [X19]
.text:00000000000056B8                 MOV             X2, XZR
.text:00000000000056BC                 MOV             X0, X19
.text:00000000000056C0                 MOV             X1, X22
.text:00000000000056C4                 LDR             X8, [X8,#0x5C0]
.text:00000000000056C8                 BLR             X8
.text:00000000000056CC                 MOV             X8, X0
.text:00000000000056D0                 MOV             X0, X27 ; dest
.text:00000000000056D4                 MOV             X1, X8  ; src
.text:00000000000056D8                 MOV             X2, X24 ; n
.text:00000000000056DC                 STR             X8, [SP,#0x16E90+var_16E60]
.text:00000000000056E0                 BL              .memcpy
.text:00000000000056E4                 LDRB            W0, [X27]
.text:00000000000056E8                 CMP             W0, #0xB
.text:00000000000056EC                 MOV             X24, X27
.text:00000000000056F0                 B.CC            loc_5734
.text:00000000000056F4                 CMP             W0, #0x37 ; '7'
.text:00000000000056F8                 B.EQ            loc_5734
.text:00000000000056FC                 ADD             X24, X24, #1
.text:0000000000005700                 ADD             X2, SP, #0x16E90+var_16E4C
.text:0000000000005704                 MOV             X1, X24
.text:0000000000005708                 STR             W21, [SP,#0x16E90+var_16E4C]
.text:000000000000570C                 BL              .handleCCM_version
.text:0000000000005710                 B               loc_5740
.text:0000000000005714 ; ---------------------------------------------------------------------------
.text:0000000000005714 loc_5714                                ; CODE XREF: Java_com_android_server_SemService_handleCCMCB+13C↑j
.text:0000000000005714                 ADRP            X1, #unk_10DEC@PAGE
.text:0000000000005718                 ADRP            X2, #aLccmMemAllocFa@PAGE ; "LCCM MEM ALLOC failed"
.text:000000000000571C                 ADD             X1, X1, #unk_10DEC@PAGEOFF
.text:0000000000005720                 ADD             X2, X2, #aLccmMemAllocFa@PAGEOFF ; "LCCM MEM ALLOC failed"
.text:0000000000005724 loc_5724                                ; CODE XREF: Java_com_android_server_SemService_handleCCMCB+F8↑j
.text:0000000000005724                 MOV             W0, #6
.text:0000000000005728                 BL              .__android_log_print
.text:000000000000572C                 MOV             W27, #0xFFFFFFFF
.text:0000000000005730                 B               loc_5B30
.text:0000000000005734 ; ---------------------------------------------------------------------------
.text:0000000000005734 loc_5734                                ; CODE XREF: Java_com_android_server_SemService_handleCCMCB+17C↑j
.text:0000000000005734                                         ; Java_com_android_server_SemService_handleCCMCB+184↑j
.text:0000000000005734                 ADD             X1, SP, #0x16E90+var_16E4C
.text:0000000000005738                 MOV             X0, X24
.text:000000000000573C                 BL              .handleCCM
.text:0000000000005740 loc_5740                                ; CODE XREF: Java_com_android_server_SemService_handleCCMCB+19C↑j
.text:0000000000005740                 MOV             W27, W0
.text:0000000000005744                 BL              .closeSecureSpi
.text:0000000000005748                 MOV             W21, W0
.text:000000000000574C                 CBZ             W27, loc_5770
.text:0000000000005750                 ADRP            X1, #unk_10DEC@PAGE
.text:0000000000005754                 ADRP            X2, #aLccmReturnedFa@PAGE ; "LCCM returned fail"
.text:0000000000005758                 ADD             X1, X1, #unk_10DEC@PAGEOFF
.text:000000000000575C                 ADD             X2, X2, #aLccmReturnedFa@PAGEOFF ; "LCCM returned fail"
.text:0000000000005760                 MOV             W0, #6
.text:0000000000005764                 STR             W21, [SP,#0x16E90+var_16E64]
.text:0000000000005768                 BL              .__android_log_print
.text:000000000000576C                 B               loc_5AF4
.text:0000000000005770 ; ---------------------------------------------------------------------------
.text:0000000000005770 loc_5770                                ; CODE XREF: Java_com_android_server_SemService_handleCCMCB+1D8↑j
.text:0000000000005770                 BL              .isLccmSwpProp
.text:0000000000005774                 CMP             W0, #1
.text:0000000000005778                 B.NE            loc_57F4
.text:000000000000577C                 ADRP            X1, #unk_10DEC@PAGE
.text:0000000000005780                 ADRP            X2, #aLccmSwp@PAGE ; "LCCM SWP"
.text:0000000000005784                 ADD             X1, X1, #unk_10DEC@PAGEOFF
.text:0000000000005788                 ADD             X2, X2, #aLccmSwp@PAGEOFF ; "LCCM SWP"
.text:000000000000578C                 MOV             W0, #4
.text:0000000000005790                 BL              .__android_log_print
.text:0000000000005794                 LDR             W25, [SP,#0x16E90+var_16E4C]
.text:0000000000005798                 CMP             W25, #1
.text:000000000000579C                 B.LT            loc_5848
.text:00000000000057A0                 CMP             W25, W26
.text:00000000000057A4                 B.GE            loc_5848
.text:00000000000057A8                 ADD             X0, SP, #0x16E90+dest ; s
.text:00000000000057AC                 MOV             W2, #0x1FA ; n
.text:00000000000057B0                 MOV             W1, WZR ; c
.text:00000000000057B4                 STR             W21, [SP,#0x16E90+var_16E64]
.text:00000000000057B8                 STR             WZR, [SP,#0x16E90+var_16E50]
.text:00000000000057BC                 BL              .memset
.text:00000000000057C0                 MOV             W26, WZR
.text:00000000000057C4                 MOV             W8, #0xFFFFFFFF
.text:00000000000057C8                 CBZ             X24, loc_5934
.text:00000000000057CC                 CMP             W25, #1
.text:00000000000057D0                 B.LT            loc_5934
.text:00000000000057D4                 LDRSB           W9, [X24,#1]
.text:00000000000057D8                 MOV             W8, #2
.text:00000000000057DC                 AND             W26, W9, #0xFF
.text:00000000000057E0                 TBNZ            W9, #0x1F, loc_586C
.text:00000000000057E4                 MOV             X11, X24
.text:00000000000057E8                 MOV             W24, WZR
.text:00000000000057EC                 MOV             W21, #1
.text:00000000000057F0                 B               loc_5904
.text:00000000000057F4 ; ---------------------------------------------------------------------------
.text:00000000000057F4 loc_57F4                                ; CODE XREF: Java_com_android_server_SemService_handleCCMCB+204↑j
.text:00000000000057F4                 ADRP            X1, #unk_10DEC@PAGE
.text:00000000000057F8                 ADRP            X2, #aLccmSpi@PAGE ; "LCCM SPI"
.text:00000000000057FC                 ADD             X1, X1, #unk_10DEC@PAGEOFF
.text:0000000000005800                 ADD             X2, X2, #aLccmSpi@PAGEOFF ; "LCCM SPI"
.text:0000000000005804                 MOV             W0, #4
.text:0000000000005808                 STR             W21, [SP,#0x16E90+var_16E64]
.text:000000000000580C                 BL              .__android_log_print
.text:0000000000005810                 LDR             W26, [SP,#0x16E90+var_16E4C]
.text:0000000000005814                 ADD             X0, SP, #0x16E90+s ; dest
.text:0000000000005818                 MOV             X1, X24 ; src
.text:000000000000581C                 SXTW            X2, W26 ; n
.text:0000000000005820                 BL              .memcpy
.text:0000000000005824                 LDR             X8, [X19]
.text:0000000000005828                 MOV             W2, WZR
.text:000000000000582C                 ADD             X4, SP, #0x16E90+s
.text:0000000000005830                 MOV             X0, X19
.text:0000000000005834                 LDR             X8, [X8,#0x680]
.text:0000000000005838                 MOV             X1, X25
.text:000000000000583C                 MOV             W3, W26
.text:0000000000005840                 BLR             X8
.text:0000000000005844                 B               loc_5AF0
.text:0000000000005848 ; ---------------------------------------------------------------------------
.text:0000000000005848 loc_5848                                ; CODE XREF: Java_com_android_server_SemService_handleCCMCB+228↑j
.text:0000000000005848                                         ; Java_com_android_server_SemService_handleCCMCB+230↑j
.text:0000000000005848                 ADRP            X1, #unk_10DEC@PAGE
.text:000000000000584C                 ADRP            X2, #aLccmReturnedEm@PAGE ; "LCCM returned empty or too big : %d"
.text:0000000000005850                 ADD             X1, X1, #unk_10DEC@PAGEOFF
.text:0000000000005854                 ADD             X2, X2, #aLccmReturnedEm@PAGEOFF ; "LCCM returned empty or too big : %d"
.text:0000000000005858                 MOV             W0, #6
.text:000000000000585C                 MOV             W3, W25
.text:0000000000005860                 STR             W21, [SP,#0x16E90+var_16E64]
.text:0000000000005864                 BL              .__android_log_print
.text:0000000000005868                 B               loc_5AF0
.text:000000000000586C ; ---------------------------------------------------------------------------
.text:000000000000586C loc_586C                                ; CODE XREF: Java_com_android_server_SemService_handleCCMCB+26C↑j
.text:000000000000586C                 MOV             W8, #3
.text:0000000000005870                 CMP             W26, #0x81
.text:0000000000005874                 B.CC            loc_58AC
.text:0000000000005878                 MOV             W8, #3
.text:000000000000587C                 CMP             W26, #0x83
.text:0000000000005880                 B.EQ            loc_58DC
.text:0000000000005884                 CMP             W26, #0x82
.text:0000000000005888                 B.EQ            loc_58BC
.text:000000000000588C                 CMP             W26, #0x81
.text:0000000000005890                 B.NE            loc_58AC
.text:0000000000005894                 LDRB            W26, [X24,#2]
.text:0000000000005898                 MOV             X11, X24
.text:000000000000589C                 MOV             W24, WZR
.text:00000000000058A0                 MOV             W21, WZR
.text:00000000000058A4                 MOV             W8, #3
.text:00000000000058A8                 B               loc_5904
.text:00000000000058AC ; ---------------------------------------------------------------------------
.text:00000000000058AC loc_58AC                                ; CODE XREF: Java_com_android_server_SemService_handleCCMCB+300↑j
.text:00000000000058AC                                         ; Java_com_android_server_SemService_handleCCMCB+31C↑j
.text:00000000000058AC                 MOV             X11, X24
.text:00000000000058B0                 MOV             W24, WZR
.text:00000000000058B4                 MOV             W21, WZR
.text:00000000000058B8                 B               loc_5904
.text:00000000000058BC ; ---------------------------------------------------------------------------
.text:00000000000058BC loc_58BC                                ; CODE XREF: Java_com_android_server_SemService_handleCCMCB+314↑j
.text:00000000000058BC                 LDRB            W8, [X24,#2]
.text:00000000000058C0                 LDRB            W26, [X24,#3]
.text:00000000000058C4                 MOV             X11, X24
.text:00000000000058C8                 MOV             W21, WZR
.text:00000000000058CC                 MOV             W24, #1
.text:00000000000058D0                 BFI             W26, W8, #8, #8
.text:00000000000058D4                 MOV             W8, #4
.text:00000000000058D8                 B               loc_5904
.text:00000000000058DC ; ---------------------------------------------------------------------------
.text:00000000000058DC loc_58DC                                ; CODE XREF: Java_com_android_server_SemService_handleCCMCB+30C↑j
.text:00000000000058DC                 LDRB            W8, [X24,#2]
.text:00000000000058E0                 LDRB            W9, [X24,#3]
.text:00000000000058E4                 LDRB            W10, [X24,#4]
.text:00000000000058E8                 MOV             W21, WZR
.text:00000000000058EC                 LSL             W8, W8, #0x10
.text:00000000000058F0                 BFI             W8, W9, #8, #8
.text:00000000000058F4                 MOV             X11, X24
.text:00000000000058F8                 MOV             W24, #2
.text:00000000000058FC                 ORR             W26, W8, W10
.text:0000000000005900                 MOV             W8, #5
.text:0000000000005904 loc_5904                                ; CODE XREF: Java_com_android_server_SemService_handleCCMCB+27C↑j
.text:0000000000005904                                         ; Java_com_android_server_SemService_handleCCMCB+334↑j ...
.text:0000000000005904                 MOV             X25, X11
.text:0000000000005908                 ADD             X1, X25, X8 ; src
.text:000000000000590C                 SXTW            X2, W26 ; n
.text:0000000000005910                 ADD             X0, SP, #0x16E90+dest ; dest
.text:0000000000005914                 BL              .memcpy
.text:0000000000005918                 ADD             W8, W26, W24
.text:000000000000591C                 MOV             X24, X25
.text:0000000000005920                 CMP             W21, #0
.text:0000000000005924                 CSINC           W8, W26, W8, NE
.text:0000000000005928                 STR             W26, [SP,#0x16E90+var_16E50]
.text:000000000000592C                 CMN             W8, #1
.text:0000000000005930                 B.LT            loc_5AD8
.text:0000000000005934 loc_5934                                ; CODE XREF: Java_com_android_server_SemService_handleCCMCB+254↑j
.text:0000000000005934                                         ; Java_com_android_server_SemService_handleCCMCB+25C↑j
.text:0000000000005934                 ADD             W8, W8, #2
.text:0000000000005938                 ADD             X0, SP, #0x16E90+var_16E46 ; s
.text:000000000000593C                 MOV             W2, #0x3F4 ; n
.text:0000000000005940                 MOV             W1, WZR ; c
.text:0000000000005944                 STR             X24, [SP,#0x16E90+var_16E88]
.text:0000000000005948                 STR             W8, [SP,#0x16E90+var_16E74]
.text:000000000000594C                 ADD             X21, SP, #0x16E90+var_16E46
.text:0000000000005950                 BL              .memset
.text:0000000000005954                 CMP             W26, #1
.text:0000000000005958                 MOV             X25, X26
.text:000000000000595C                 B.LT            loc_59A8
.text:0000000000005960                 ADRP            X26, #a02x@PAGE ; "%02X"
.text:0000000000005964                 STR             X22, [SP,#0x16E90+var_16E80]
.text:0000000000005968                 MOV             W24, WZR
.text:000000000000596C                 ADD             X27, SP, #0x16E90+dest
.text:0000000000005970                 ADD             X26, X26, #a02x@PAGEOFF ; "%02X"
.text:0000000000005974                 MOV             W22, W25
.text:0000000000005978 loc_5978                                ; CODE XREF: Java_com_android_server_SemService_handleCCMCB+420↓j
.text:0000000000005978                 LDRB            W3, [X27],#1
.text:000000000000597C                 ADD             X0, X21, W24,SXTW ; s
.text:0000000000005980                 MOV             W1, #3  ; maxlen
.text:0000000000005984                 MOV             X2, X26 ; format
.text:0000000000005988                 BL              .snprintf
.text:000000000000598C                 SUB             W22, W22, #1
.text:0000000000005990                 ADD             W24, W24, #2
.text:0000000000005994                 CBNZ            W22, loc_5978
.text:0000000000005998                 LDR             X22, [SP,#0x16E90+var_16E80]
.text:000000000000599C                 SBFIZ           X8, X25, #1, #0x20 ; ' '
.text:00000000000059A0                 ADD             X9, SP, #0x16E90+var_16E46
.text:00000000000059A4                 STRB            WZR, [X9,X8]
.text:00000000000059A8 loc_59A8                                ; CODE XREF: Java_com_android_server_SemService_handleCCMCB+3E8↑j
.text:00000000000059A8                 LDR             X8, [X19]
.text:00000000000059AC                 ADD             X1, SP, #0x16E90+var_16E46
.text:00000000000059B0                 MOV             X0, X19
.text:00000000000059B4                 STR             X25, [SP,#0x16E90+var_16E70]
.text:00000000000059B8                 LDR             X21, [X8,#0x570]
.text:00000000000059BC                 LDR             X8, [X8,#0x538]
.text:00000000000059C0                 ADD             X24, SP, #0x16E90+var_16E46
.text:00000000000059C4                 BLR             X8
.text:00000000000059C8                 MOV             X3, X0
.text:00000000000059CC                 MOV             W2, WZR
.text:00000000000059D0                 MOV             X0, X19
.text:00000000000059D4                 MOV             X1, X20
.text:00000000000059D8                 BLR             X21
.text:00000000000059DC                 LDR             W2, [SP,#0x16E90+var_16E4C]
.text:00000000000059E0                 LDR             W25, [SP,#0x16E90+var_16E74]
.text:00000000000059E4                 CMP             W25, W2
.text:00000000000059E8                 B.GE            loc_5AB8
.text:00000000000059EC                 ADRP            X27, #a02x@PAGE ; "%02X"
.text:00000000000059F0                 MOV             W26, #1
.text:00000000000059F4                 ADD             X27, X27, #a02x@PAGEOFF ; "%02X"
.text:00000000000059F8 loc_59F8                                ; CODE XREF: Java_com_android_server_SemService_handleCCMCB+540↓j
.text:00000000000059F8                 LDR             X0, [SP,#0x16E90+var_16E88]
.text:00000000000059FC                 ADD             X3, SP, #0x16E90+dest
.text:0000000000005A00                 ADD             X4, SP, #0x16E90+var_16E50
.text:0000000000005A04                 MOV             W1, W25
.text:0000000000005A08                 ADD             X21, SP, #0x16E90+dest
.text:0000000000005A0C                 BL              .nextApduOffset
.text:0000000000005A10                 LDR             W9, [SP,#0x16E90+var_16E50]
.text:0000000000005A14                 ADD             W8, W25, W0
.text:0000000000005A18                 ADD             W25, W8, #2
.text:0000000000005A1C                 STR             X9, [SP,#0x16E90+var_16E70]
.text:0000000000005A20                 CMP             W9, #1
.text:0000000000005A24                 B.LT            loc_5A7C
.text:0000000000005A28                 LDR             X8, [SP,#0x16E90+var_16E70]
.text:0000000000005A2C                 STR             W25, [SP,#0x16E90+var_16E74]
.text:0000000000005A30                 STR             X22, [SP,#0x16E90+var_16E80]
.text:0000000000005A34                 MOV             X25, X23
.text:0000000000005A38                 MOV             W28, WZR
.text:0000000000005A3C                 SXTW            X22, W8
.text:0000000000005A40                 MOV             W23, W8
.text:0000000000005A44 loc_5A44                                ; CODE XREF: Java_com_android_server_SemService_handleCCMCB+4EC↓j
.text:0000000000005A44                 LDRB            W3, [X21],#1
.text:0000000000005A48                 ADD             X0, X24, W28,SXTW ; s
.text:0000000000005A4C                 MOV             W1, #3  ; maxlen
.text:0000000000005A50                 MOV             X2, X27 ; format
.text:0000000000005A54                 BL              .snprintf
.text:0000000000005A58                 SUB             W23, W23, #1
.text:0000000000005A5C                 ADD             W28, W28, #2
.text:0000000000005A60                 CBNZ            W23, loc_5A44
.text:0000000000005A64                 LSL             X8, X22, #1
.text:0000000000005A68                 MOV             X23, X25
.text:0000000000005A6C                 LDR             X22, [SP,#0x16E90+var_16E80]
.text:0000000000005A70                 LDR             W25, [SP,#0x16E90+var_16E74]
.text:0000000000005A74                 ADD             X28, SP, #0x16E90+var_16E58
.text:0000000000005A78                 STRB            WZR, [X24,X8]
.text:0000000000005A7C loc_5A7C                                ; CODE XREF: Java_com_android_server_SemService_handleCCMCB+4B0↑j
.text:0000000000005A7C                 LDR             X8, [X19]
.text:0000000000005A80                 ADD             X1, SP, #0x16E90+var_16E46
.text:0000000000005A84                 MOV             X0, X19
.text:0000000000005A88                 LDR             X21, [X8,#0x570]
.text:0000000000005A8C                 LDR             X8, [X8,#0x538]
.text:0000000000005A90                 BLR             X8
.text:0000000000005A94                 MOV             X3, X0
.text:0000000000005A98                 MOV             X0, X19
.text:0000000000005A9C                 MOV             X1, X20
.text:0000000000005AA0                 MOV             W2, W26
.text:0000000000005AA4                 BLR             X21
.text:0000000000005AA8                 LDR             W2, [SP,#0x16E90+var_16E4C]
.text:0000000000005AAC                 ADD             W26, W26, #1
.text:0000000000005AB0                 CMP             W25, W2
.text:0000000000005AB4                 B.LT            loc_59F8
.text:0000000000005AB8 loc_5AB8                                ; CODE XREF: Java_com_android_server_SemService_handleCCMCB+474↑j
.text:0000000000005AB8                 LDR             X8, [SP,#0x16E90+var_16E70]
.text:0000000000005ABC                 MOV             W1, WZR ; c
.text:0000000000005AC0                 ADD             X0, SP, #0x16E90+dest ; s
.text:0000000000005AC4                 SXTW            X2, W8  ; n
.text:0000000000005AC8                 BL              .memset
.text:0000000000005ACC                 LDR             X24, [SP,#0x16E90+var_16E88]
.text:0000000000005AD0                 STR             WZR, [SP,#0x16E90+var_16E50]
.text:0000000000005AD4                 B               loc_5AF0
.text:0000000000005AD8 ; ---------------------------------------------------------------------------
.text:0000000000005AD8 loc_5AD8                                ; CODE XREF: Java_com_android_server_SemService_handleCCMCB+3BC↑j
.text:0000000000005AD8                 ADRP            X1, #unk_10DEC@PAGE
.text:0000000000005ADC                 ADRP            X2, #aLccmWrongIndex@PAGE ; "LCCM Wrong index!"
.text:0000000000005AE0                 ADD             X1, X1, #unk_10DEC@PAGEOFF
.text:0000000000005AE4                 ADD             X2, X2, #aLccmWrongIndex@PAGEOFF ; "LCCM Wrong index!"
.text:0000000000005AE8                 MOV             W0, #6
.text:0000000000005AEC                 BL              .__android_log_print
.text:0000000000005AF0 loc_5AF0                                ; CODE XREF: Java_com_android_server_SemService_handleCCMCB+2D0↑j
.text:0000000000005AF0                                         ; Java_com_android_server_SemService_handleCCMCB+2F4↑j ...
.text:0000000000005AF0                 MOV             W27, WZR
.text:0000000000005AF4 loc_5AF4                                ; CODE XREF: Java_com_android_server_SemService_handleCCMCB+1F8↑j
.text:0000000000005AF4                 LDR             X21, [SP,#0x16E90+var_16E60]
.text:0000000000005AF8                 CBZ             X24, loc_5B04
.text:0000000000005AFC                 MOV             X0, X24 ; ptr
.text:0000000000005B00                 BL              .free
.text:0000000000005B04 loc_5B04                                ; CODE XREF: Java_com_android_server_SemService_handleCCMCB+584↑j
.text:0000000000005B04                 CBZ             X21, loc_5B24
.text:0000000000005B08                 LDR             X8, [X19]
.text:0000000000005B0C                 MOV             W3, #2
.text:0000000000005B10                 MOV             X0, X19
.text:0000000000005B14                 MOV             X1, X22
.text:0000000000005B18                 LDR             X8, [X8,#0x600]
.text:0000000000005B1C                 MOV             X2, X21
.text:0000000000005B20                 BLR             X8
.text:0000000000005B24 loc_5B24                                ; CODE XREF: Java_com_android_server_SemService_handleCCMCB:loc_5B04↑j
.text:0000000000005B24                 LDR             W8, [SP,#0x16E90+var_16E64]
.text:0000000000005B28                 CMP             W8, #1
.text:0000000000005B2C                 B.EQ            loc_5B34
.text:0000000000005B30 loc_5B30                                ; CODE XREF: Java_com_android_server_SemService_handleCCMCB+1BC↑j
.text:0000000000005B30                 BL              .closeSecureSpi
.text:0000000000005B34 loc_5B34                                ; CODE XREF: Java_com_android_server_SemService_handleCCMCB+124↑j
.text:0000000000005B34                                         ; Java_com_android_server_SemService_handleCCMCB+5B8↑j
.text:0000000000005B34                 ADRP            X1, #unk_10DEC@PAGE
.text:0000000000005B38                 ADRP            X2, #aJniLccmEndD@PAGE ; "JNI, LCCM end: %d"
.text:0000000000005B3C                 ADD             X1, X1, #unk_10DEC@PAGEOFF
.text:0000000000005B40                 ADD             X2, X2, #aJniLccmEndD@PAGEOFF ; "JNI, LCCM end: %d"
.text:0000000000005B44                 MOV             W0, #4
.text:0000000000005B48                 MOV             W3, W27
.text:0000000000005B4C                 BL              .__android_log_print
.text:0000000000005B50                 BL              .isLccmSwpProp
.text:0000000000005B54                 CMP             W0, #1
.text:0000000000005B58                 B.NE            loc_5B68
.text:0000000000005B5C                 CMP             W27, #0
.text:0000000000005B60                 CSEL            X20, X20, XZR, EQ
.text:0000000000005B64                 B               loc_5BBC
.text:0000000000005B68 ; ---------------------------------------------------------------------------
.text:0000000000005B68 loc_5B68                                ; CODE XREF: Java_com_android_server_SemService_handleCCMCB+5E4↑j
.text:0000000000005B68                 ADRP            X1, #unk_10DEC@PAGE
.text:0000000000005B6C                 ADRP            X2, #aLccmSpiReturnN@PAGE ; "LCCM SPI return NULL"
.text:0000000000005B70                 ADD             X1, X1, #unk_10DEC@PAGEOFF
.text:0000000000005B74                 ADD             X2, X2, #aLccmSpiReturnN@PAGEOFF ; "LCCM SPI return NULL"
.text:0000000000005B78                 MOV             W0, #4
.text:0000000000005B7C                 BL              .__android_log_print
.text:0000000000005B80                 CBZ             W27, loc_5B8C
.text:0000000000005B84                 MOV             X20, XZR
.text:0000000000005B88                 B               loc_5BBC
.text:0000000000005B8C ; ---------------------------------------------------------------------------
.text:0000000000005B8C loc_5B8C                                ; CODE XREF: Java_com_android_server_SemService_handleCCMCB+60C↑j
.text:0000000000005B8C                 LDR             X8, [X19]
.text:0000000000005B90                 ADRP            X1, #aPass@PAGE ; "PASS"
.text:0000000000005B94                 ADD             X1, X1, #aPass@PAGEOFF ; "PASS"
.text:0000000000005B98                 MOV             X0, X19
.text:0000000000005B9C                 LDR             X21, [X8,#0x570]
.text:0000000000005BA0                 LDR             X8, [X8,#0x538]
.text:0000000000005BA4                 BLR             X8
.text:0000000000005BA8                 MOV             X3, X0
.text:0000000000005BAC                 MOV             W2, WZR
.text:0000000000005BB0                 MOV             X0, X19
.text:0000000000005BB4                 MOV             X1, X20
.text:0000000000005BB8                 BLR             X21
.text:0000000000005BBC loc_5BBC                                ; CODE XREF: Java_com_android_server_SemService_handleCCMCB+5F0↑j
.text:0000000000005BBC                                         ; Java_com_android_server_SemService_handleCCMCB+614↑j
.text:0000000000005BBC                 LDR             X8, [X28]
.text:0000000000005BC0                 SUB             X8, X23, X8
.text:0000000000005BC4                 CBNZ            X8, loc_5BEC
.text:0000000000005BC8                 MOV             X0, X20
.text:0000000000005BCC                 SUB             SP, X29, #0x50 ; 'P'
.text:0000000000005BD0                 LDP             X29, X30, [SP,#0x50+var_s0]
.text:0000000000005BD4                 LDP             X20, X19, [SP,#0x50+var_10]
.text:0000000000005BD8                 LDP             X22, X21, [SP,#0x50+var_20]
.text:0000000000005BDC                 LDP             X24, X23, [SP,#0x50+var_30]
.text:0000000000005BE0                 LDP             X26, X25, [SP,#0x50+var_40]
.text:0000000000005BE4                 LDP             X28, X27, [SP+0x50+var_50],#0x60
.text:0000000000005BE8                 RET
.text:0000000000005BEC ; ---------------------------------------------------------------------------
.text:0000000000005BEC loc_5BEC                                ; CODE XREF: Java_com_android_server_SemService_handleCCMCB+650↑j
.text:0000000000005BEC                 BL              .__stack_chk_fail
.text:0000000000005BEC ; } // starts at 5574
.text:0000000000005BEC ; End of function Java_com_android_server_SemService_handleCCMCB
.text:0000000000005BF0 ; =============== S U B R O U T I N E =======================================
.text:0000000000005BF0 ; Attributes: bp-based frame
.text:0000000000005BF0                 EXPORT Java_com_android_server_SemService_getHWParamData
.text:0000000000005BF0 Java_com_android_server_SemService_getHWParamData
.text:0000000000005BF0                                         ; DATA XREF: LOAD:0000000000001618↑o
.text:0000000000005BF0 var_440         = -0x440
.text:0000000000005BF0 var_434         = -0x434
.text:0000000000005BF0 var_430         = -0x430
.text:0000000000005BF0 s               = -0x23C
.text:0000000000005BF0 var_40          = -0x40
.text:0000000000005BF0 var_30          = -0x30
.text:0000000000005BF0 var_20          = -0x20
.text:0000000000005BF0 var_10          = -0x10
.text:0000000000005BF0 var_s0          =  0
.text:0000000000005BF0 ; __unwind {
.text:0000000000005BF0                 STP             X28, X27, [SP,#-0x10+var_40]!
.text:0000000000005BF4                 STP             X24, X23, [SP,#0x40+var_30]
.text:0000000000005BF8                 STP             X22, X21, [SP,#0x40+var_20]
.text:0000000000005BFC                 STP             X20, X19, [SP,#0x40+var_10]
.text:0000000000005C00                 STP             X29, X30, [SP,#0x40+var_s0]
.text:0000000000005C04                 ADD             X29, SP, #0x40
.text:0000000000005C08                 SUB             SP, SP, #0x400
.text:0000000000005C0C                 ADRP            X23, #__stack_chk_guard_ptr@PAGE
.text:0000000000005C10                 LDR             X23, [X23,#__stack_chk_guard_ptr@PAGEOFF]
.text:0000000000005C14                 MOV             X20, X2
.text:0000000000005C18                 MOV             X21, X0
.text:0000000000005C1C                 MOV             X24, SP
.text:0000000000005C20                 LDR             X23, [X23]
.text:0000000000005C24                 ADD             X0, SP, #0x440+s ; s
.text:0000000000005C28                 MOV             W2, #0x1F4 ; n
.text:0000000000005C2C                 MOV             W1, WZR ; c
.text:0000000000005C30                 MOV             W22, W3
.text:0000000000005C34                 STR             X23, [X24,#0x440+var_440]
.text:0000000000005C38                 STR             WZR, [SP,#0x440+var_434]
.text:0000000000005C3C                 BL              .memset
.text:0000000000005C40                 ADD             X0, SP, #0x440+var_430 ; s
.text:0000000000005C44                 MOV             W2, #0x1F4 ; n
.text:0000000000005C48                 MOV             W1, WZR ; c
.text:0000000000005C4C                 BL              .memset
.text:0000000000005C50                 ADRP            X1, #unk_10DEC@PAGE
.text:0000000000005C54                 ADRP            X2, #aJniGetHwParamS@PAGE ; "JNI, Get HW Param start"
.text:0000000000005C58                 ADD             X1, X1, #unk_10DEC@PAGEOFF
.text:0000000000005C5C                 ADD             X2, X2, #aJniGetHwParamS@PAGEOFF ; "JNI, Get HW Param start"
.text:0000000000005C60                 MOV             W0, #4
.text:0000000000005C64                 BL              .__android_log_print
.text:0000000000005C68                 BL              .openSecureSpi
.text:0000000000005C6C                 MOV             W19, W0
.text:0000000000005C70                 CMN             W19, #0xC8
.text:0000000000005C74                 B.EQ            loc_5CC0
.text:0000000000005C78                 CMP             W19, #1
.text:0000000000005C7C                 B.NE            loc_5CC8
.text:0000000000005C80                 CMP             W22, #2
.text:0000000000005C84                 B.EQ            loc_5CE4
.text:0000000000005C88                 CMP             W22, #1
.text:0000000000005C8C                 B.NE            loc_5D50
.text:0000000000005C90                 ADD             X0, SP, #0x440+s
.text:0000000000005C94                 ADD             X1, SP, #0x440+var_434
.text:0000000000005C98                 BL              .getHWParamData
.text:0000000000005C9C                 CMP             W0, #1
.text:0000000000005CA0                 B.NE            loc_5D24
.text:0000000000005CA4                 LDR             W19, [SP,#0x440+var_434]
.text:0000000000005CA8                 CBZ             W19, loc_5D38
.text:0000000000005CAC                 LDR             X8, [X21]
.text:0000000000005CB0                 MOV             W2, WZR
.text:0000000000005CB4                 ADD             X4, SP, #0x440+s
.text:0000000000005CB8                 LDR             X8, [X8,#0x680]
.text:0000000000005CBC                 B               loc_5D10
.text:0000000000005CC0 ; ---------------------------------------------------------------------------
.text:0000000000005CC0 loc_5CC0                                ; CODE XREF: Java_com_android_server_SemService_getHWParamData+84↑j
.text:0000000000005CC0                 MOV             W19, #0xFFFFFF38
.text:0000000000005CC4                 B               loc_5D58
.text:0000000000005CC8 ; ---------------------------------------------------------------------------
.text:0000000000005CC8 loc_5CC8                                ; CODE XREF: Java_com_android_server_SemService_getHWParamData+8C↑j
.text:0000000000005CC8                 ADRP            X1, #unk_10DEC@PAGE
.text:0000000000005CCC                 ADRP            X2, #aGetHwParamFail@PAGE ; "Get HW Param failed due to openSecureSp"...
.text:0000000000005CD0                 ADD             X1, X1, #unk_10DEC@PAGEOFF
.text:0000000000005CD4                 ADD             X2, X2, #aGetHwParamFail@PAGEOFF ; "Get HW Param failed due to openSecureSp"...
.text:0000000000005CD8                 MOV             W0, #6
.text:0000000000005CDC                 BL              .__android_log_print
.text:0000000000005CE0                 B               loc_5D54
.text:0000000000005CE4 ; ---------------------------------------------------------------------------
.text:0000000000005CE4 loc_5CE4                                ; CODE XREF: Java_com_android_server_SemService_getHWParamData+94↑j
.text:0000000000005CE4                 ADD             X0, SP, #0x440+var_430
.text:0000000000005CE8                 ADD             X1, SP, #0x440+var_434
.text:0000000000005CEC                 BL              .getHWParamDataNoCPLC
.text:0000000000005CF0                 CMP             W0, #1
.text:0000000000005CF4                 B.NE            loc_5D24
.text:0000000000005CF8                 LDR             W19, [SP,#0x440+var_434]
.text:0000000000005CFC                 CBZ             W19, loc_5D38
.text:0000000000005D00                 LDR             X8, [X21]
.text:0000000000005D04                 MOV             W2, WZR
.text:0000000000005D08                 ADD             X4, SP, #0x440+var_430
.text:0000000000005D0C                 LDR             X8, [X8,#0x680]
.text:0000000000005D10 loc_5D10                                ; CODE XREF: Java_com_android_server_SemService_getHWParamData+CC↑j
.text:0000000000005D10                 MOV             X0, X21
.text:0000000000005D14                 MOV             X1, X20
.text:0000000000005D18                 MOV             W3, W19
.text:0000000000005D1C                 BLR             X8
.text:0000000000005D20                 B               loc_5D54
.text:0000000000005D24 ; ---------------------------------------------------------------------------
.text:0000000000005D24 loc_5D24                                ; CODE XREF: Java_com_android_server_SemService_getHWParamData+B0↑j
.text:0000000000005D24                                         ; Java_com_android_server_SemService_getHWParamData+104↑j
.text:0000000000005D24                 ADRP            X1, #unk_10DEC@PAGE
.text:0000000000005D28                 ADRP            X2, #aNoNeedToSend@PAGE ; "no need to send"
.text:0000000000005D2C                 ADD             X1, X1, #unk_10DEC@PAGEOFF
.text:0000000000005D30                 ADD             X2, X2, #aNoNeedToSend@PAGEOFF ; "no need to send"
.text:0000000000005D34                 B               loc_5D48
.text:0000000000005D38 ; ---------------------------------------------------------------------------
.text:0000000000005D38 loc_5D38                                ; CODE XREF: Java_com_android_server_SemService_getHWParamData+B8↑j
.text:0000000000005D38                                         ; Java_com_android_server_SemService_getHWParamData+10C↑j
.text:0000000000005D38                 ADRP            X1, #unk_10DEC@PAGE
.text:0000000000005D3C                 ADRP            X2, #aNoNeedToSendNo@PAGE ; "no need to send, not restricted mode"
.text:0000000000005D40                 ADD             X1, X1, #unk_10DEC@PAGEOFF
.text:0000000000005D44                 ADD             X2, X2, #aNoNeedToSendNo@PAGEOFF ; "no need to send, not restricted mode"
.text:0000000000005D48 loc_5D48                                ; CODE XREF: Java_com_android_server_SemService_getHWParamData+144↑j
.text:0000000000005D48                 MOV             W0, #4
.text:0000000000005D4C                 BL              .__android_log_print
.text:0000000000005D50 loc_5D50                                ; CODE XREF: Java_com_android_server_SemService_getHWParamData+9C↑j
.text:0000000000005D50                 MOV             W19, #1
.text:0000000000005D54 loc_5D54                                ; CODE XREF: Java_com_android_server_SemService_getHWParamData+F0↑j
.text:0000000000005D54                                         ; Java_com_android_server_SemService_getHWParamData+130↑j
.text:0000000000005D54                 BL              .closeSecureSpi
.text:0000000000005D58 loc_5D58                                ; CODE XREF: Java_com_android_server_SemService_getHWParamData+D4↑j
.text:0000000000005D58                 ADRP            X1, #unk_10DEC@PAGE
.text:0000000000005D5C                 ADRP            X2, #aJniGetHwParamE@PAGE ; "JNI, Get HW Param end"
.text:0000000000005D60                 ADD             X1, X1, #unk_10DEC@PAGEOFF
.text:0000000000005D64                 ADD             X2, X2, #aJniGetHwParamE@PAGEOFF ; "JNI, Get HW Param end"
.text:0000000000005D68                 MOV             W0, #4
.text:0000000000005D6C                 BL              .__android_log_print
.text:0000000000005D70                 LDR             X8, [X24]
.text:0000000000005D74                 CMP             W19, #0
.text:0000000000005D78                 CSEL            W0, W19, WZR, GT
.text:0000000000005D7C                 SUB             X8, X23, X8
.text:0000000000005D80                 CBNZ            X8, loc_5DA0
.text:0000000000005D84                 SUB             SP, X29, #0x40 ; '@'
.text:0000000000005D88                 LDP             X29, X30, [SP,#0x40+var_s0]
.text:0000000000005D8C                 LDP             X20, X19, [SP,#0x40+var_10]
.text:0000000000005D90                 LDP             X22, X21, [SP,#0x40+var_20]
.text:0000000000005D94                 LDP             X24, X23, [SP,#0x40+var_30]
.text:0000000000005D98                 LDP             X28, X27, [SP+0x40+var_40],#0x50
.text:0000000000005D9C                 RET
.text:0000000000005DA0 ; ---------------------------------------------------------------------------
.text:0000000000005DA0 loc_5DA0                                ; CODE XREF: Java_com_android_server_SemService_getHWParamData+190↑j
.text:0000000000005DA0                 BL              .__stack_chk_fail
.text:0000000000005DA0 ; } // starts at 5BF0
.text:0000000000005DA0 ; End of function Java_com_android_server_SemService_getHWParamData
.text:0000000000005DA4 ; =============== S U B R O U T I N E =======================================
.text:0000000000005DA4 ; Attributes: bp-based frame
.text:0000000000005DA4                 EXPORT Java_com_android_server_SemService_getAttackCountCheck
.text:0000000000005DA4 Java_com_android_server_SemService_getAttackCountCheck
.text:0000000000005DA4                                         ; DATA XREF: LOAD:0000000000000988↑o
.text:0000000000005DA4 var_430         = -0x430
.text:0000000000005DA4 var_424         = -0x424
.text:0000000000005DA4 s               = -0x420
.text:0000000000005DA4 var_30          = -0x30
.text:0000000000005DA4 var_20          = -0x20
.text:0000000000005DA4 var_10          = -0x10
.text:0000000000005DA4 var_s0          =  0
.text:0000000000005DA4 ; __unwind {
.text:0000000000005DA4                 STP             X24, X23, [SP,#-0x10+var_30]!
.text:0000000000005DA8                 STP             X22, X21, [SP,#0x30+var_20]
.text:0000000000005DAC                 STP             X20, X19, [SP,#0x30+var_10]
.text:0000000000005DB0                 STP             X29, X30, [SP,#0x30+var_s0]
.text:0000000000005DB4                 ADD             X29, SP, #0x30
.text:0000000000005DB8                 SUB             SP, SP, #0x400
.text:0000000000005DBC                 ADRP            X22, #__stack_chk_guard_ptr@PAGE
.text:0000000000005DC0                 LDR             X22, [X22,#__stack_chk_guard_ptr@PAGEOFF]
.text:0000000000005DC4                 MOV             X19, X2
.text:0000000000005DC8                 MOV             X20, X0
.text:0000000000005DCC                 MOV             X23, SP
.text:0000000000005DD0                 LDR             X22, [X22]
.text:0000000000005DD4                 ADD             X0, SP, #0x430+s ; s
.text:0000000000005DD8                 MOV             W2, #0x3E8 ; n
.text:0000000000005DDC                 MOV             W1, WZR ; c
.text:0000000000005DE0                 STR             X22, [X23,#0x430+var_430]
.text:0000000000005DE4                 STR             WZR, [SP,#0x430+var_424]
.text:0000000000005DE8                 BL              .memset
.text:0000000000005DEC                 ADRP            X1, #unk_10DEC@PAGE
.text:0000000000005DF0                 ADRP            X2, #aJniGetHwParamA@PAGE ; "JNI, Get HW Param Attack Count start"
.text:0000000000005DF4                 ADD             X1, X1, #unk_10DEC@PAGEOFF
.text:0000000000005DF8                 ADD             X2, X2, #aJniGetHwParamA@PAGEOFF ; "JNI, Get HW Param Attack Count start"
.text:0000000000005DFC                 MOV             W0, #4
.text:0000000000005E00                 BL              .__android_log_print
.text:0000000000005E04                 ADD             X0, SP, #0x430+s
.text:0000000000005E08                 ADD             X1, SP, #0x430+var_424
.text:0000000000005E0C                 BL              .getAttackCountCheck
.text:0000000000005E10                 LDR             W3, [SP,#0x430+var_424]
.text:0000000000005E14                 CBZ             W3, loc_5E58
.text:0000000000005E18                 ADRP            X1, #unk_10DEC@PAGE
.text:0000000000005E1C                 ADRP            X2, #aDataLenD@PAGE ; "data len: %d"
.text:0000000000005E20                 ADD             X1, X1, #unk_10DEC@PAGEOFF
.text:0000000000005E24                 ADD             X2, X2, #aDataLenD@PAGEOFF ; "data len: %d"
.text:0000000000005E28                 MOV             W0, #4
.text:0000000000005E2C                 BL              .__android_log_print
.text:0000000000005E30                 LDR             X8, [X20]
.text:0000000000005E34                 LDR             W21, [SP,#0x430+var_424]
.text:0000000000005E38                 MOV             W2, WZR
.text:0000000000005E3C                 ADD             X4, SP, #0x430+s
.text:0000000000005E40                 LDR             X8, [X8,#0x680]
.text:0000000000005E44                 MOV             X0, X20
.text:0000000000005E48                 MOV             X1, X19
.text:0000000000005E4C                 MOV             W3, W21
.text:0000000000005E50                 BLR             X8
.text:0000000000005E54                 B               loc_5E74
.text:0000000000005E58 ; ---------------------------------------------------------------------------
.text:0000000000005E58 loc_5E58                                ; CODE XREF: Java_com_android_server_SemService_getAttackCountCheck+70↑j
.text:0000000000005E58                 ADRP            X1, #unk_10DEC@PAGE
.text:0000000000005E5C                 ADRP            X2, #aGetHwParamAtta@PAGE ; "Get HW Param Attack Count dataLen == 0"
.text:0000000000005E60                 ADD             X1, X1, #unk_10DEC@PAGEOFF
.text:0000000000005E64                 ADD             X2, X2, #aGetHwParamAtta@PAGEOFF ; "Get HW Param Attack Count dataLen == 0"
.text:0000000000005E68                 MOV             W0, #4
.text:0000000000005E6C                 BL              .__android_log_print
.text:0000000000005E70                 MOV             W21, WZR
.text:0000000000005E74 loc_5E74                                ; CODE XREF: Java_com_android_server_SemService_getAttackCountCheck+B0↑j
.text:0000000000005E74                 ADRP            X1, #unk_10DEC@PAGE
.text:0000000000005E78                 ADRP            X2, #aJniGetHwParamA_0@PAGE ; "JNI, Get HW Param Attack Count end"
.text:0000000000005E7C                 ADD             X1, X1, #unk_10DEC@PAGEOFF
.text:0000000000005E80                 ADD             X2, X2, #aJniGetHwParamA_0@PAGEOFF ; "JNI, Get HW Param Attack Count end"
.text:0000000000005E84                 MOV             W0, #4
.text:0000000000005E88                 BL              .__android_log_print
.text:0000000000005E8C                 LDR             W8, [SP,#0x430+var_424]
.text:0000000000005E90                 LDR             X9, [X23]
.text:0000000000005E94                 CMP             W8, #1
.text:0000000000005E98                 CSEL            W0, W21, WZR, HI
.text:0000000000005E9C                 SUB             X8, X22, X9
.text:0000000000005EA0                 CBNZ            X8, loc_5EBC
.text:0000000000005EA4                 SUB             SP, X29, #0x30 ; '0'
.text:0000000000005EA8                 LDP             X29, X30, [SP,#0x30+var_s0]
.text:0000000000005EAC                 LDP             X20, X19, [SP,#0x30+var_10]
.text:0000000000005EB0                 LDP             X22, X21, [SP,#0x30+var_20]
.text:0000000000005EB4                 LDP             X24, X23, [SP+0x30+var_30],#0x40
.text:0000000000005EB8                 RET
.text:0000000000005EBC ; ---------------------------------------------------------------------------
.text:0000000000005EBC loc_5EBC                                ; CODE XREF: Java_com_android_server_SemService_getAttackCountCheck+FC↑j
.text:0000000000005EBC                 BL              .__stack_chk_fail
.text:0000000000005EBC ; } // starts at 5DA4
.text:0000000000005EBC ; End of function Java_com_android_server_SemService_getAttackCountCheck
.text:0000000000005EC0 ; =============== S U B R O U T I N E =======================================
.text:0000000000005EC0 ; Attributes: bp-based frame
.text:0000000000005EC0                 EXPORT Java_com_android_server_SemService_printSeState
.text:0000000000005EC0 Java_com_android_server_SemService_printSeState
.text:0000000000005EC0                                         ; DATA XREF: LOAD:0000000000000D90↑o
.text:0000000000005EC0 var_s0          =  0
.text:0000000000005EC0 ; __unwind {
.text:0000000000005EC0                 STP             X29, X30, [SP,#-0x10+var_s0]!
.text:0000000000005EC4                 MOV             X29, SP
.text:0000000000005EC8                 ADRP            X1, #unk_10DEC@PAGE
.text:0000000000005ECC                 ADRP            X2, #aJniPrintStart@PAGE ; "JNI, Print Start"
.text:0000000000005ED0                 ADD             X1, X1, #unk_10DEC@PAGEOFF
.text:0000000000005ED4                 ADD             X2, X2, #aJniPrintStart@PAGEOFF ; "JNI, Print Start"
.text:0000000000005ED8                 MOV             W0, #4
.text:0000000000005EDC                 BL              .__android_log_print
.text:0000000000005EE0                 BL              .openSecureSpi
.text:0000000000005EE4                 CMN             W0, #0xC8
.text:0000000000005EE8                 B.EQ            loc_5F18
.text:0000000000005EEC                 CMP             W0, #1
.text:0000000000005EF0                 B.NE            loc_5EFC
.text:0000000000005EF4                 BL              .printSeState
.text:0000000000005EF8                 B               loc_5F14
.text:0000000000005EFC ; ---------------------------------------------------------------------------
.text:0000000000005EFC loc_5EFC                                ; CODE XREF: Java_com_android_server_SemService_printSeState+30↑j
.text:0000000000005EFC                 ADRP            X1, #unk_10DEC@PAGE
.text:0000000000005F00                 ADRP            X2, #aDefaultCardDel@PAGE ; "Default Card Delete failed due to openS"...
.text:0000000000005F04                 ADD             X1, X1, #unk_10DEC@PAGEOFF
.text:0000000000005F08                 ADD             X2, X2, #aDefaultCardDel@PAGEOFF ; "Default Card Delete failed due to openS"...
.text:0000000000005F0C                 MOV             W0, #6
.text:0000000000005F10                 BL              .__android_log_print
.text:0000000000005F14 loc_5F14                                ; CODE XREF: Java_com_android_server_SemService_printSeState+38↑j
.text:0000000000005F14                 BL              .closeSecureSpi
.text:0000000000005F18 loc_5F18                                ; CODE XREF: Java_com_android_server_SemService_printSeState+28↑j
.text:0000000000005F18                 ADRP            X1, #unk_10DEC@PAGE
.text:0000000000005F1C                 ADRP            X2, #aJniPrintEnd@PAGE ; "JNI, Print End"
.text:0000000000005F20                 ADD             X1, X1, #unk_10DEC@PAGEOFF
.text:0000000000005F24                 ADD             X2, X2, #aJniPrintEnd@PAGEOFF ; "JNI, Print End"
.text:0000000000005F28                 MOV             W0, #4
.text:0000000000005F2C                 LDP             X29, X30, [SP+var_s0],#0x10
.text:0000000000005F30                 B               .__android_log_print
.text:0000000000005F30 ; } // starts at 5EC0
.text:0000000000005F30 ; End of function Java_com_android_server_SemService_printSeState
.text:0000000000005F34 ; =============== S U B R O U T I N E =======================================
.text:0000000000005F34 ; Attributes: bp-based frame
.text:0000000000005F34                 EXPORT Java_com_android_server_SemService_deactivateCards
.text:0000000000005F34 Java_com_android_server_SemService_deactivateCards
.text:0000000000005F34                                         ; DATA XREF: LOAD:0000000000001240↑o
.text:0000000000005F34 var_6A4         = -0x6A4
.text:0000000000005F34 var_6A0         = -0x6A0
.text:0000000000005F34 s               = -0x698
.text:0000000000005F34 var_58          = -0x58
.text:0000000000005F34 var_50          = -0x50
.text:0000000000005F34 var_40          = -0x40
.text:0000000000005F34 var_30          = -0x30
.text:0000000000005F34 var_20          = -0x20
.text:0000000000005F34 var_10          = -0x10
.text:0000000000005F34 var_s0          =  0
.text:0000000000005F34 ; __unwind {
.text:0000000000005F34                 STP             X28, X27, [SP,#-0x10+var_50]!
.text:0000000000005F38                 STP             X26, X25, [SP,#0x50+var_40]
.text:0000000000005F3C                 STP             X24, X23, [SP,#0x50+var_30]
.text:0000000000005F40                 STP             X22, X21, [SP,#0x50+var_20]
.text:0000000000005F44                 STP             X20, X19, [SP,#0x50+var_10]
.text:0000000000005F48                 STP             X29, X30, [SP,#0x50+var_s0]
.text:0000000000005F4C                 ADD             X29, SP, #0x50
.text:0000000000005F50                 SUB             SP, SP, #0x660
.text:0000000000005F54                 ADRP            X21, #__stack_chk_guard_ptr@PAGE
.text:0000000000005F58                 LDR             X21, [X21,#__stack_chk_guard_ptr@PAGEOFF]
.text:0000000000005F5C                 MOV             W26, W2
.text:0000000000005F60                 MOV             X19, X0
.text:0000000000005F64                 ADD             X0, SP, #0x6B0+s ; s
.text:0000000000005F68                 LDR             X21, [X21]
.text:0000000000005F6C                 MOV             W2, #0x640 ; n
.text:0000000000005F70                 MOV             W1, WZR ; c
.text:0000000000005F74                 MOV             W20, W5
.text:0000000000005F78                 MOV             X23, X4
.text:0000000000005F7C                 MOV             X22, X3
.text:0000000000005F80                 STUR            X21, [X29,#var_58]
.text:0000000000005F84                 BL              .memset
.text:0000000000005F88                 ADRP            X1, #unk_10DEC@PAGE
.text:0000000000005F8C                 ADRP            X2, #aJniDefaultCard@PAGE ; "JNI, Default Card Delete Start"
.text:0000000000005F90                 ADD             X1, X1, #unk_10DEC@PAGEOFF
.text:0000000000005F94                 ADD             X2, X2, #aJniDefaultCard@PAGEOFF ; "JNI, Default Card Delete Start"
.text:0000000000005F98                 MOV             W0, #4
.text:0000000000005F9C                 BL              .__android_log_print
.text:0000000000005FA0                 BL              .openSecureSpi
.text:0000000000005FA4                 MOV             W25, WZR
.text:0000000000005FA8                 CMN             W0, #0xC8
.text:0000000000005FAC                 B.EQ            loc_6004
.text:0000000000005FB0                 ADRP            X1, #unk_10DEC@PAGE
.text:0000000000005FB4                 ADD             X1, X1, #unk_10DEC@PAGEOFF
.text:0000000000005FB8                 CMP             W0, #1
.text:0000000000005FBC                 B.NE            loc_5FEC
.text:0000000000005FC0                 ADRP            X2, #aSecureSpiIsOpe@PAGE ; "SECURE SPI is opened"
.text:0000000000005FC4                 ADD             X2, X2, #aSecureSpiIsOpe@PAGEOFF ; "SECURE SPI is opened"
.text:0000000000005FC8                 MOV             W0, #4
.text:0000000000005FCC                 BL              .__android_log_print
.text:0000000000005FD0                 CMP             W20, #0xC8
.text:0000000000005FD4                 B.LT            loc_604C
.text:0000000000005FD8                 ADRP            X1, #unk_10DEC@PAGE
.text:0000000000005FDC                 ADRP            X2, #aReceiveArraySi@PAGE ; "Receive Array Size Overflow"
.text:0000000000005FE0                 ADD             X1, X1, #unk_10DEC@PAGEOFF
.text:0000000000005FE4                 ADD             X2, X2, #aReceiveArraySi@PAGEOFF ; "Receive Array Size Overflow"
.text:0000000000005FE8                 B               loc_5FF4
.text:0000000000005FEC ; ---------------------------------------------------------------------------
.text:0000000000005FEC loc_5FEC                                ; CODE XREF: Java_com_android_server_SemService_deactivateCards+88↑j
.text:0000000000005FEC                 ADRP            X2, #aDefaultCardDel@PAGE ; "Default Card Delete failed due to openS"...
.text:0000000000005FF0                 ADD             X2, X2, #aDefaultCardDel@PAGEOFF ; "Default Card Delete failed due to openS"...
.text:0000000000005FF4 loc_5FF4                                ; CODE XREF: Java_com_android_server_SemService_deactivateCards+B4↑j
.text:0000000000005FF4                                         ; Java_com_android_server_SemService_deactivateCards+1F8↓j
.text:0000000000005FF4                 MOV             W0, #6
.text:0000000000005FF8                 BL              .__android_log_print
.text:0000000000005FFC                 BL              .closeSecureSpi
.text:0000000000006000                 MOV             W25, WZR
.text:0000000000006004 loc_6004                                ; CODE XREF: Java_com_android_server_SemService_deactivateCards+78↑j
.text:0000000000006004                                         ; Java_com_android_server_SemService_deactivateCards+284↓j ...
.text:0000000000006004                 ADRP            X1, #unk_10DEC@PAGE
.text:0000000000006008                 ADRP            X2, #aJniDefaultCard_0@PAGE ; "JNI, Default Card Delete End"
.text:000000000000600C                 ADD             X1, X1, #unk_10DEC@PAGEOFF
.text:0000000000006010                 ADD             X2, X2, #aJniDefaultCard_0@PAGEOFF ; "JNI, Default Card Delete End"
.text:0000000000006014                 MOV             W0, #4
.text:0000000000006018                 BL              .__android_log_print
.text:000000000000601C                 LDUR            X8, [X29,#var_58]
.text:0000000000006020                 SUB             X8, X21, X8
.text:0000000000006024                 CBNZ            X8, loc_61DC
.text:0000000000006028                 MOV             W0, W25
.text:000000000000602C                 SUB             SP, X29, #0x50 ; 'P'
.text:0000000000006030                 LDP             X29, X30, [SP,#0x50+var_s0]
.text:0000000000006034                 LDP             X20, X19, [SP,#0x50+var_10]
.text:0000000000006038                 LDP             X22, X21, [SP,#0x50+var_20]
.text:000000000000603C                 LDP             X24, X23, [SP,#0x50+var_30]
.text:0000000000006040                 LDP             X26, X25, [SP,#0x50+var_40]
.text:0000000000006044                 LDP             X28, X27, [SP+0x50+var_50],#0x60
.text:0000000000006048                 RET
.text:000000000000604C ; ---------------------------------------------------------------------------
.text:000000000000604C loc_604C                                ; CODE XREF: Java_com_android_server_SemService_deactivateCards+A0↑j
.text:000000000000604C                 LDR             X8, [X19]
.text:0000000000006050                 MOV             X2, XZR
.text:0000000000006054                 MOV             X0, X19
.text:0000000000006058                 MOV             X1, X23
.text:000000000000605C                 LDR             X8, [X8,#0x5D8]
.text:0000000000006060                 BLR             X8
.text:0000000000006064                 MOV             X25, X0
.text:0000000000006068                 LDRSW           X0, [X25] ; size
.text:000000000000606C                 CMP             W0, #1
.text:0000000000006070                 B.LT            loc_611C
.text:0000000000006074                 CMP             W20, #1
.text:0000000000006078                 B.LT            loc_6130
.text:000000000000607C                 BL              .malloc
.text:0000000000006080                 MOV             X27, X0
.text:0000000000006084                 STR             X27, [SP,#0x6B0+s]
.text:0000000000006088                 CBZ             X27, loc_6138
.text:000000000000608C                 SXTW            X8, W20
.text:0000000000006090                 STR             X8, [SP,#0x6B0+var_6A0]
.text:0000000000006094                 ADD             X8, SP, #0x6B0+s
.text:0000000000006098                 MOV             X28, XZR
.text:000000000000609C                 ADD             X21, X8, #8
.text:00000000000060A0                 STR             W26, [SP,#0x6B0+var_6A4]
.text:00000000000060A4 loc_60A4                                ; CODE XREF: Java_com_android_server_SemService_deactivateCards+1E0↓j
.text:00000000000060A4                 LDR             X8, [X19]
.text:00000000000060A8                 MOV             X0, X19
.text:00000000000060AC                 MOV             X1, X22
.text:00000000000060B0                 MOV             W2, W28
.text:00000000000060B4                 LDR             X8, [X8,#0x568]
.text:00000000000060B8                 BLR             X8
.text:00000000000060BC                 LDR             X8, [X19]
.text:00000000000060C0                 MOV             X23, X0
.text:00000000000060C4                 MOV             X2, XZR
.text:00000000000060C8                 MOV             X0, X19
.text:00000000000060CC                 LDR             X8, [X8,#0x5C0]
.text:00000000000060D0                 MOV             X1, X23
.text:00000000000060D4                 BLR             X8
.text:00000000000060D8                 LDRSW           X2, [X25,X28,LSL#2] ; n
.text:00000000000060DC                 MOV             X24, X0
.text:00000000000060E0                 MOV             X0, X27 ; dest
.text:00000000000060E4                 MOV             X1, X24 ; src
.text:00000000000060E8                 BL              .memcpy
.text:00000000000060EC                 LDR             X8, [SP,#0x6B0+var_6A0]
.text:00000000000060F0                 ADD             X26, X28, #1
.text:00000000000060F4                 CMP             X26, X8
.text:00000000000060F8                 B.GE            loc_6168
.text:00000000000060FC                 ADD             X8, X25, X28,LSL#2
.text:0000000000006100                 LDRSW           X0, [X8,#4] ; size
.text:0000000000006104                 BL              .malloc
.text:0000000000006108                 MOV             X27, X0
.text:000000000000610C                 STR             X27, [X21,X28,LSL#3]
.text:0000000000006110                 MOV             X28, X26
.text:0000000000006114                 CBNZ            X27, loc_60A4
.text:0000000000006118                 B               loc_613C
.text:000000000000611C ; ---------------------------------------------------------------------------
.text:000000000000611C loc_611C                                ; CODE XREF: Java_com_android_server_SemService_deactivateCards+13C↑j
.text:000000000000611C                 ADRP            X1, #unk_10DEC@PAGE
.text:0000000000006120                 ADRP            X2, #aCheckFailRecei@PAGE ; "Check Fail Receive Package Name Length"
.text:0000000000006124                 ADD             X1, X1, #unk_10DEC@PAGEOFF
.text:0000000000006128                 ADD             X2, X2, #aCheckFailRecei@PAGEOFF ; "Check Fail Receive Package Name Length"
.text:000000000000612C                 B               loc_5FF4
.text:0000000000006130 ; ---------------------------------------------------------------------------
.text:0000000000006130 loc_6130                                ; CODE XREF: Java_com_android_server_SemService_deactivateCards+144↑j
.text:0000000000006130                 MOV             X24, XZR
.text:0000000000006134                 B               loc_6178
.text:0000000000006138 ; ---------------------------------------------------------------------------
.text:0000000000006138 loc_6138                                ; CODE XREF: Java_com_android_server_SemService_deactivateCards+154↑j
.text:0000000000006138                 MOV             X24, XZR
.text:000000000000613C loc_613C                                ; CODE XREF: Java_com_android_server_SemService_deactivateCards+1E4↑j
.text:000000000000613C                 ADRP            X1, #unk_10DEC@PAGE
.text:0000000000006140                 ADRP            X2, #aDefaultCardDel_0@PAGE ; "Default Card Delete MEM ALLOC failed"
.text:0000000000006144                 ADD             X1, X1, #unk_10DEC@PAGEOFF
.text:0000000000006148                 ADD             X2, X2, #aDefaultCardDel_0@PAGEOFF ; "Default Card Delete MEM ALLOC failed"
.text:000000000000614C                 MOV             W0, #6
.text:0000000000006150                 BL              .__android_log_print
.text:0000000000006154                 ADRP            X21, #__stack_chk_guard_ptr@PAGE
.text:0000000000006158                 LDR             X21, [X21,#__stack_chk_guard_ptr@PAGEOFF]
.text:000000000000615C                 MOV             W25, WZR
.text:0000000000006160                 LDR             X21, [X21]
.text:0000000000006164                 B               loc_61B4
.text:0000000000006168 ; ---------------------------------------------------------------------------
.text:0000000000006168 loc_6168                                ; CODE XREF: Java_com_android_server_SemService_deactivateCards+1C4↑j
.text:0000000000006168                 ADRP            X21, #__stack_chk_guard_ptr@PAGE
.text:000000000000616C                 LDR             X21, [X21,#__stack_chk_guard_ptr@PAGEOFF]
.text:0000000000006170                 LDR             W26, [SP,#0x6B0+var_6A4]
.text:0000000000006174                 LDR             X21, [X21]
.text:0000000000006178 loc_6178                                ; CODE XREF: Java_com_android_server_SemService_deactivateCards+200↑j
.text:0000000000006178                 ADD             X1, SP, #0x6B0+s
.text:000000000000617C                 MOV             W0, W26
.text:0000000000006180                 MOV             X2, X25
.text:0000000000006184                 MOV             W3, W20
.text:0000000000006188                 BL              .deactivateCards
.text:000000000000618C                 MOV             W25, W0
.text:0000000000006190                 CBZ             W25, loc_61B0
.text:0000000000006194                 ADRP            X1, #unk_10DEC@PAGE
.text:0000000000006198                 ADRP            X2, #aDefaultCardDel_1@PAGE ; "Default Card Delete ERROR"
.text:000000000000619C                 ADD             X1, X1, #unk_10DEC@PAGEOFF
.text:00000000000061A0                 ADD             X2, X2, #aDefaultCardDel_1@PAGEOFF ; "Default Card Delete ERROR"
.text:00000000000061A4                 MOV             W0, #6
.text:00000000000061A8                 BL              .__android_log_print
.text:00000000000061AC                 B               loc_61B4
.text:00000000000061B0 ; ---------------------------------------------------------------------------
.text:00000000000061B0 loc_61B0                                ; CODE XREF: Java_com_android_server_SemService_deactivateCards+25C↑j
.text:00000000000061B0                 MOV             W25, WZR
.text:00000000000061B4 loc_61B4                                ; CODE XREF: Java_com_android_server_SemService_deactivateCards+230↑j
.text:00000000000061B4                                         ; Java_com_android_server_SemService_deactivateCards+278↑j
.text:00000000000061B4                 BL              .closeSecureSpi
.text:00000000000061B8                 CBZ             X24, loc_6004
.text:00000000000061BC                 LDR             X8, [X19]
.text:00000000000061C0                 MOV             W3, #2
.text:00000000000061C4                 MOV             X0, X19
.text:00000000000061C8                 MOV             X1, X23
.text:00000000000061CC                 LDR             X8, [X8,#0x600]
.text:00000000000061D0                 MOV             X2, X24
.text:00000000000061D4                 BLR             X8
.text:00000000000061D8                 B               loc_6004
.text:00000000000061DC ; ---------------------------------------------------------------------------
.text:00000000000061DC loc_61DC                                ; CODE XREF: Java_com_android_server_SemService_deactivateCards+F0↑j
.text:00000000000061DC                 BL              .__stack_chk_fail
.text:00000000000061DC ; } // starts at 5F34
.text:00000000000061DC ; End of function Java_com_android_server_SemService_deactivateCards
.text:00000000000061E0 ; =============== S U B R O U T I N E =======================================
.text:00000000000061E0 ; Attributes: bp-based frame
.text:00000000000061E0 ; __int64 __fastcall Java_com_android_server_SemService_deactivateCardsAID(int, int, int, int, int, int, int, int, __int64, int, int, __int64, __int64, int)
.text:00000000000061E0                 EXPORT Java_com_android_server_SemService_deactivateCardsAID
.text:00000000000061E0 Java_com_android_server_SemService_deactivateCardsAID
.text:00000000000061E0                                         ; DATA XREF: LOAD:0000000000001588↑o
.text:00000000000061E0 var_1360        = -0x1360
.text:00000000000061E0 var_1350        = -0x1350
.text:00000000000061E0 var_1340        = -0x1340
.text:00000000000061E0 var_133C        = -0x133C
.text:00000000000061E0 var_1338        = -0x1338
.text:00000000000061E0 var_1330        = -0x1330
.text:00000000000061E0 var_1328        = -0x1328
.text:00000000000061E0 var_1320        = -0x1320
.text:00000000000061E0 var_1318        = -0x1318
.text:00000000000061E0 var_CD8         = -0xCD8
.text:00000000000061E0 s               = -0x698
.text:00000000000061E0 var_58          = -0x58
.text:00000000000061E0 var_50          = -0x50
.text:00000000000061E0 var_40          = -0x40
.text:00000000000061E0 var_30          = -0x30
.text:00000000000061E0 var_20          = -0x20
.text:00000000000061E0 var_10          = -0x10
.text:00000000000061E0 var_s0          =  0
.text:00000000000061E0 arg_0           =  0x10
.text:00000000000061E0 arg_8           =  0x18
.text:00000000000061E0 arg_10          =  0x20
.text:00000000000061E0 arg_18          =  0x28
.text:00000000000061E0 arg_20          =  0x30
.text:00000000000061E0 ; __unwind {
.text:00000000000061E0                 STP             X28, X27, [SP,#-0x10+var_50]!
.text:00000000000061E4                 STP             X26, X25, [SP,#0x50+var_40]
.text:00000000000061E8                 STP             X24, X23, [SP,#0x50+var_30]
.text:00000000000061EC                 STP             X22, X21, [SP,#0x50+var_20]
.text:00000000000061F0                 STP             X20, X19, [SP,#0x50+var_10]
.text:00000000000061F4                 STP             X29, X30, [SP,#0x50+var_s0]
.text:00000000000061F8                 ADD             X29, SP, #0x50
.text:00000000000061FC                 SUB             SP, SP, #1,LSL#12
.text:0000000000006200                 SUB             SP, SP, #0x310
.text:0000000000006204                 ADRP            X20, #__stack_chk_guard_ptr@PAGE
.text:0000000000006208                 LDR             X20, [X20,#__stack_chk_guard_ptr@PAGEOFF]
.text:000000000000620C                 MOV             W24, W2
.text:0000000000006210                 MOV             X19, X0
.text:0000000000006214                 ADD             X0, SP, #0x1360+s ; s
.text:0000000000006218                 LDR             X20, [X20]
.text:000000000000621C                 MOV             W2, #0x640 ; n
.text:0000000000006220                 MOV             W1, WZR ; c
.text:0000000000006224                 MOV             X28, X7
.text:0000000000006228                 MOV             W25, W6
.text:000000000000622C                 MOV             X23, X5
.text:0000000000006230                 MOV             X21, X4
.text:0000000000006234                 MOV             W22, W3
.text:0000000000006238                 STUR            X20, [X29,#var_58]
.text:000000000000623C                 BL              .memset
.text:0000000000006240                 ADD             X0, SP, #0x1360+var_CD8 ; s
.text:0000000000006244                 MOV             W2, #0x640 ; n
.text:0000000000006248                 MOV             W1, WZR ; c
.text:000000000000624C                 BL              .memset
.text:0000000000006250                 ADD             X0, SP, #0x1360+var_1318 ; s
.text:0000000000006254                 MOV             W2, #0x640 ; n
.text:0000000000006258                 MOV             W1, WZR ; c
.text:000000000000625C                 BL              .memset
.text:0000000000006260                 ADRP            X1, #unk_10DEC@PAGE
.text:0000000000006264                 ADRP            X2, #aJniDefaultCard@PAGE ; "JNI, Default Card Delete Start"
.text:0000000000006268                 ADD             X1, X1, #unk_10DEC@PAGEOFF
.text:000000000000626C                 ADD             X2, X2, #aJniDefaultCard@PAGEOFF ; "JNI, Default Card Delete Start"
.text:0000000000006270                 MOV             W0, #4
.text:0000000000006274                 BL              .__android_log_print
.text:0000000000006278                 BL              .openSecureSpi
.text:000000000000627C                 MOV             W26, WZR
.text:0000000000006280                 CMN             W0, #0xC8
.text:0000000000006284                 B.EQ            loc_65F8
.text:0000000000006288                 ADRP            X1, #unk_10DEC@PAGE
.text:000000000000628C                 ADD             X1, X1, #unk_10DEC@PAGEOFF
.text:0000000000006290                 CMP             W0, #1
.text:0000000000006294                 B.NE            loc_62C4
.text:0000000000006298                 ADRP            X2, #aSecureSpiIsOpe@PAGE ; "SECURE SPI is opened"
.text:000000000000629C                 ADD             X2, X2, #aSecureSpiIsOpe@PAGEOFF ; "SECURE SPI is opened"
.text:00000000000062A0                 MOV             W0, #4
.text:00000000000062A4                 BL              .__android_log_print
.text:00000000000062A8                 CMP             W25, #0xC8
.text:00000000000062AC                 B.LT            loc_62E0
.text:00000000000062B0                 ADRP            X1, #unk_10DEC@PAGE
.text:00000000000062B4                 ADRP            X2, #aReceiveArraySi@PAGE ; "Receive Array Size Overflow"
.text:00000000000062B8                 ADD             X1, X1, #unk_10DEC@PAGEOFF
.text:00000000000062BC                 ADD             X2, X2, #aReceiveArraySi@PAGEOFF ; "Receive Array Size Overflow"
.text:00000000000062C0                 B               loc_62CC
.text:00000000000062C4 ; ---------------------------------------------------------------------------
.text:00000000000062C4 loc_62C4                                ; CODE XREF: Java_com_android_server_SemService_deactivateCardsAID+B4↑j
.text:00000000000062C4                 ADRP            X2, #aDefaultCardDel@PAGE ; "Default Card Delete failed due to openS"...
.text:00000000000062C8                 ADD             X2, X2, #aDefaultCardDel@PAGEOFF ; "Default Card Delete failed due to openS"...
.text:00000000000062CC loc_62CC                                ; CODE XREF: Java_com_android_server_SemService_deactivateCardsAID+E0↑j
.text:00000000000062CC                 MOV             W0, #6
.text:00000000000062D0                 BL              .__android_log_print
.text:00000000000062D4                 BL              .closeSecureSpi
.text:00000000000062D8                 MOV             W26, WZR
.text:00000000000062DC                 B               loc_65F8
.text:00000000000062E0 ; ---------------------------------------------------------------------------
.text:00000000000062E0 loc_62E0                                ; CODE XREF: Java_com_android_server_SemService_deactivateCardsAID+CC↑j
.text:00000000000062E0                 LDR             X8, [X19]
.text:00000000000062E4                 STR             W22, [SP,#0x1360+var_133C]
.text:00000000000062E8                 LDR             X20, [X29,#arg_18]
.text:00000000000062EC                 LDR             X22, [X29,#arg_0]
.text:00000000000062F0                 LDR             X8, [X8,#0x5D8]
.text:00000000000062F4                 MOV             X2, XZR
.text:00000000000062F8                 MOV             X0, X19
.text:00000000000062FC                 MOV             X1, X23
.text:0000000000006300                 BLR             X8
.text:0000000000006304                 LDR             X8, [X19]
.text:0000000000006308                 MOV             X26, X0
.text:000000000000630C                 MOV             X2, XZR
.text:0000000000006310                 MOV             X0, X19
.text:0000000000006314                 LDR             X8, [X8,#0x5D8]
.text:0000000000006318                 MOV             X1, X22
.text:000000000000631C                 BLR             X8
.text:0000000000006320                 LDR             X8, [X19]
.text:0000000000006324                 MOV             X27, X0
.text:0000000000006328                 MOV             X2, XZR
.text:000000000000632C                 MOV             X0, X19
.text:0000000000006330                 LDR             X8, [X8,#0x5D8]
.text:0000000000006334                 MOV             X1, X20
.text:0000000000006338                 BLR             X8
.text:000000000000633C                 LDR             W8, [X26]
.text:0000000000006340                 MOV             X20, X0
.text:0000000000006344                 CMP             W8, #0
.text:0000000000006348                 B.GT            loc_6364
.text:000000000000634C                 ADRP            X1, #unk_10DEC@PAGE
.text:0000000000006350                 ADRP            X2, #aCheckFailRecei@PAGE ; "Check Fail Receive Package Name Length"
.text:0000000000006354                 ADD             X1, X1, #unk_10DEC@PAGEOFF
.text:0000000000006358                 ADD             X2, X2, #aCheckFailRecei@PAGEOFF ; "Check Fail Receive Package Name Length"
.text:000000000000635C                 MOV             W0, #4
.text:0000000000006360                 BL              .__android_log_print
.text:0000000000006364 loc_6364                                ; CODE XREF: Java_com_android_server_SemService_deactivateCardsAID+168↑j
.text:0000000000006364                 LDR             W8, [X27]
.text:0000000000006368                 CMP             W8, #0
.text:000000000000636C                 B.GT            loc_6388
.text:0000000000006370                 ADRP            X1, #unk_10DEC@PAGE
.text:0000000000006374                 ADRP            X2, #aCheckFailRecei_0@PAGE ; "Check Fail Receive *Package Name Length"
.text:0000000000006378                 ADD             X1, X1, #unk_10DEC@PAGEOFF
.text:000000000000637C                 ADD             X2, X2, #aCheckFailRecei_0@PAGEOFF ; "Check Fail Receive *Package Name Length"
.text:0000000000006380                 MOV             W0, #4
.text:0000000000006384                 BL              .__android_log_print
.text:0000000000006388 loc_6388                                ; CODE XREF: Java_com_android_server_SemService_deactivateCardsAID+18C↑j
.text:0000000000006388                 LDR             W8, [X20]
.text:000000000000638C                 CMP             W8, #0
.text:0000000000006390                 B.GT            loc_63AC
.text:0000000000006394                 ADRP            X1, #unk_10DEC@PAGE
.text:0000000000006398                 ADRP            X2, #aCheckFailRecei_1@PAGE ; "Check Fail Receive #Package Name Length"
.text:000000000000639C                 ADD             X1, X1, #unk_10DEC@PAGEOFF
.text:00000000000063A0                 ADD             X2, X2, #aCheckFailRecei_1@PAGEOFF ; "Check Fail Receive #Package Name Length"
.text:00000000000063A4                 MOV             W0, #4
.text:00000000000063A8                 BL              .__android_log_print
.text:00000000000063AC loc_63AC                                ; CODE XREF: Java_com_android_server_SemService_deactivateCardsAID+1B0↑j
.text:00000000000063AC                 STP             X20, X28, [SP,#0x1360+var_1328]
.text:00000000000063B0                 STR             W24, [SP,#0x1360+var_1340]
.text:00000000000063B4                 CMP             W25, #1
.text:00000000000063B8                 B.LT            loc_643C
.text:00000000000063BC                 MOV             X22, XZR
.text:00000000000063C0                 MOV             X24, XZR
.text:00000000000063C4                 STR             X25, [SP,#0x1360+var_1338]
.text:00000000000063C8                 SXTW            X25, W25
.text:00000000000063CC                 ADD             X28, SP, #0x1360+s
.text:00000000000063D0 loc_63D0                                ; CODE XREF: Java_com_android_server_SemService_deactivateCardsAID+254↓j
.text:00000000000063D0                 LDRSW           X0, [X26,X22,LSL#2] ; size
.text:00000000000063D4                 BL              .malloc
.text:00000000000063D8                 MOV             X20, X0
.text:00000000000063DC                 STR             X20, [X28,X22,LSL#3]
.text:00000000000063E0                 CBZ             X20, loc_65AC
.text:00000000000063E4                 LDR             X8, [X19]
.text:00000000000063E8                 MOV             X0, X19
.text:00000000000063EC                 MOV             X1, X21
.text:00000000000063F0                 MOV             W2, W22
.text:00000000000063F4                 LDR             X8, [X8,#0x568]
.text:00000000000063F8                 BLR             X8
.text:00000000000063FC                 LDR             X8, [X19]
.text:0000000000006400                 MOV             X23, X0
.text:0000000000006404                 MOV             X2, XZR
.text:0000000000006408                 MOV             X0, X19
.text:000000000000640C                 LDR             X8, [X8,#0x5C0]
.text:0000000000006410                 MOV             X1, X23
.text:0000000000006414                 BLR             X8
.text:0000000000006418                 LDRSW           X2, [X26,X22,LSL#2] ; n
.text:000000000000641C                 MOV             X24, X0
.text:0000000000006420                 MOV             X0, X20 ; dest
.text:0000000000006424                 MOV             X1, X24 ; src
.text:0000000000006428                 BL              .memcpy
.text:000000000000642C                 ADD             X22, X22, #1
.text:0000000000006430                 CMP             X22, X25
.text:0000000000006434                 B.LT            loc_63D0
.text:0000000000006438                 B               loc_6444
.text:000000000000643C ; ---------------------------------------------------------------------------
.text:000000000000643C loc_643C                                ; CODE XREF: Java_com_android_server_SemService_deactivateCardsAID+1D8↑j
.text:000000000000643C                 MOV             X24, XZR
.text:0000000000006440                 STR             X25, [SP,#0x1360+var_1338]
.text:0000000000006444 loc_6444                                ; CODE XREF: Java_com_android_server_SemService_deactivateCardsAID+258↑j
.text:0000000000006444                 LDR             W8, [X29,#arg_8]
.text:0000000000006448                 LDR             X28, [SP,#0x1360+var_1320]
.text:000000000000644C                 STR             X8, [SP,#0x1360+var_1330]
.text:0000000000006450                 CMP             W8, #1
.text:0000000000006454                 B.LT            loc_64C8
.text:0000000000006458                 LDR             X8, [SP,#0x1360+var_1330]
.text:000000000000645C                 MOV             X22, XZR
.text:0000000000006460                 ADD             X25, SP, #0x1360+var_CD8
.text:0000000000006464                 SXTW            X21, W8
.text:0000000000006468 loc_6468                                ; CODE XREF: Java_com_android_server_SemService_deactivateCardsAID+2E4↓j
.text:0000000000006468                 LDRSW           X0, [X27,X22,LSL#2] ; size
.text:000000000000646C                 BL              .malloc
.text:0000000000006470                 MOV             X20, X0
.text:0000000000006474                 STR             X20, [X25,X22,LSL#3]
.text:0000000000006478                 CBZ             X20, loc_65AC
.text:000000000000647C                 LDR             X8, [X19]
.text:0000000000006480                 MOV             X0, X19
.text:0000000000006484                 MOV             X1, X28
.text:0000000000006488                 MOV             W2, W22
.text:000000000000648C                 LDR             X8, [X8,#0x568]
.text:0000000000006490                 BLR             X8
.text:0000000000006494                 LDR             X8, [X19]
.text:0000000000006498                 MOV             X1, X0
.text:000000000000649C                 MOV             X2, XZR
.text:00000000000064A0                 MOV             X0, X19
.text:00000000000064A4                 LDR             X8, [X8,#0x5C0]
.text:00000000000064A8                 BLR             X8
.text:00000000000064AC                 LDRSW           X2, [X27,X22,LSL#2] ; n
.text:00000000000064B0                 MOV             X1, X0  ; src
.text:00000000000064B4                 MOV             X0, X20 ; dest
.text:00000000000064B8                 BL              .memcpy
.text:00000000000064BC                 ADD             X22, X22, #1
.text:00000000000064C0                 CMP             X22, X21
.text:00000000000064C4                 B.LT            loc_6468
.text:00000000000064C8 loc_64C8                                ; CODE XREF: Java_com_android_server_SemService_deactivateCardsAID+274↑j
.text:00000000000064C8                 LDR             W8, [X29,#arg_20]
.text:00000000000064CC                 LDR             X21, [SP,#0x1360+var_1328]
.text:00000000000064D0                 STR             X8, [SP,#0x1360+var_1320]
.text:00000000000064D4                 CMP             W8, #1
.text:00000000000064D8                 B.LT            loc_6550
.text:00000000000064DC                 LDR             X8, [SP,#0x1360+var_1320]
.text:00000000000064E0                 LDR             X22, [X29,#arg_10]
.text:00000000000064E4                 MOV             X25, XZR
.text:00000000000064E8                 SXTW            X28, W8
.text:00000000000064EC loc_64EC                                ; CODE XREF: Java_com_android_server_SemService_deactivateCardsAID+36C↓j
.text:00000000000064EC                 LDRSW           X0, [X21,X25,LSL#2] ; size
.text:00000000000064F0                 BL              .malloc
.text:00000000000064F4                 MOV             X20, X0
.text:00000000000064F8                 ADD             X8, SP, #0x1360+var_1318
.text:00000000000064FC                 STR             X20, [X8,X25,LSL#3]
.text:0000000000006500                 CBZ             X20, loc_65AC
.text:0000000000006504                 LDR             X8, [X19]
.text:0000000000006508                 MOV             X0, X19
.text:000000000000650C                 MOV             X1, X22
.text:0000000000006510                 MOV             W2, W25
.text:0000000000006514                 LDR             X8, [X8,#0x568]
.text:0000000000006518                 BLR             X8
.text:000000000000651C                 LDR             X8, [X19]
.text:0000000000006520                 MOV             X1, X0
.text:0000000000006524                 MOV             X2, XZR
.text:0000000000006528                 MOV             X0, X19
.text:000000000000652C                 LDR             X8, [X8,#0x5C0]
.text:0000000000006530                 BLR             X8
.text:0000000000006534                 LDRSW           X2, [X21,X25,LSL#2] ; n
.text:0000000000006538                 MOV             X1, X0  ; src
.text:000000000000653C                 MOV             X0, X20 ; dest
.text:0000000000006540                 BL              .memcpy
.text:0000000000006544                 ADD             X25, X25, #1
.text:0000000000006548                 CMP             X25, X28
.text:000000000000654C                 B.LT            loc_64EC
.text:0000000000006550 loc_6550                                ; CODE XREF: Java_com_android_server_SemService_deactivateCardsAID+2F8↑j
.text:0000000000006550                 LDR             X8, [SP,#0x1360+var_1320]
.text:0000000000006554                 ADD             X2, SP, #0x1360+s ; int
.text:0000000000006558                 ADD             X5, SP, #0x1360+var_CD8 ; int
.text:000000000000655C                 MOV             X3, X26 ; int
.text:0000000000006560                 STR             W8, [SP,#0x1360+var_1350] ; int
.text:0000000000006564                 ADD             X8, SP, #0x1360+var_1318
.text:0000000000006568                 STP             X8, X21, [SP,#0x1360+var_1360] ; __int64
.text:000000000000656C                 LDP             W0, W1, [SP,#0x1360+var_1340] ; int
.text:0000000000006570                 LDP             X4, X7, [SP,#0x1360+var_1338] ; int
.text:0000000000006574                 MOV             X6, X27 ; int
.text:0000000000006578                 BL              .deactivateCardsAID
.text:000000000000657C                 MOV             W26, W0
.text:0000000000006580                 CMN             W26, #0x16
.text:0000000000006584                 B.EQ            loc_658C
.text:0000000000006588                 CBNZ            W26, loc_6640
.text:000000000000658C loc_658C                                ; CODE XREF: Java_com_android_server_SemService_deactivateCardsAID+3A4↑j
.text:000000000000658C                 ADRP            X1, #unk_10DEC@PAGE
.text:0000000000006590                 ADRP            X2, #aDefaultCardRet@PAGE ; "Default Card Ret %d"
.text:0000000000006594                 ADD             X1, X1, #unk_10DEC@PAGEOFF
.text:0000000000006598                 ADD             X2, X2, #aDefaultCardRet@PAGEOFF ; "Default Card Ret %d"
.text:000000000000659C                 MOV             W0, #4
.text:00000000000065A0                 MOV             W3, W26
.text:00000000000065A4                 BL              .__android_log_print
.text:00000000000065A8                 B               loc_65C8
.text:00000000000065AC ; ---------------------------------------------------------------------------
.text:00000000000065AC loc_65AC                                ; CODE XREF: Java_com_android_server_SemService_deactivateCardsAID+200↑j
.text:00000000000065AC                                         ; Java_com_android_server_SemService_deactivateCardsAID+298↑j ...
.text:00000000000065AC                 ADRP            X1, #unk_10DEC@PAGE
.text:00000000000065B0                 ADRP            X2, #aDefaultCardDel_0@PAGE ; "Default Card Delete MEM ALLOC failed"
.text:00000000000065B4                 ADD             X1, X1, #unk_10DEC@PAGEOFF
.text:00000000000065B8                 ADD             X2, X2, #aDefaultCardDel_0@PAGEOFF ; "Default Card Delete MEM ALLOC failed"
.text:00000000000065BC                 MOV             W0, #6
.text:00000000000065C0                 BL              .__android_log_print
.text:00000000000065C4                 MOV             W26, WZR
.text:00000000000065C8 loc_65C8                                ; CODE XREF: Java_com_android_server_SemService_deactivateCardsAID+3C8↑j
.text:00000000000065C8                                         ; Java_com_android_server_SemService_deactivateCardsAID+478↓j
.text:00000000000065C8                 ADRP            X20, #__stack_chk_guard_ptr@PAGE
.text:00000000000065CC                 LDR             X20, [X20,#__stack_chk_guard_ptr@PAGEOFF]
.text:00000000000065D0                 LDR             X20, [X20]
.text:00000000000065D4                 BL              .closeSecureSpi
.text:00000000000065D8                 CBZ             X24, loc_65F8
.text:00000000000065DC                 LDR             X8, [X19]
.text:00000000000065E0                 MOV             W3, #2
.text:00000000000065E4                 MOV             X0, X19
.text:00000000000065E8                 MOV             X1, X23
.text:00000000000065EC                 LDR             X8, [X8,#0x600]
.text:00000000000065F0                 MOV             X2, X24
.text:00000000000065F4                 BLR             X8
.text:00000000000065F8 loc_65F8                                ; CODE XREF: Java_com_android_server_SemService_deactivateCardsAID+A4↑j
.text:00000000000065F8                                         ; Java_com_android_server_SemService_deactivateCardsAID+FC↑j ...
.text:00000000000065F8                 ADRP            X1, #unk_10DEC@PAGE
.text:00000000000065FC                 ADRP            X2, #aJniDefaultCard_0@PAGE ; "JNI, Default Card Delete End"
.text:0000000000006600                 ADD             X1, X1, #unk_10DEC@PAGEOFF
.text:0000000000006604                 ADD             X2, X2, #aJniDefaultCard_0@PAGEOFF ; "JNI, Default Card Delete End"
.text:0000000000006608                 MOV             W0, #4
.text:000000000000660C                 BL              .__android_log_print
.text:0000000000006610                 LDUR            X8, [X29,#var_58]
.text:0000000000006614                 SUB             X8, X20, X8
.text:0000000000006618                 CBNZ            X8, loc_665C
.text:000000000000661C                 MOV             W0, W26
.text:0000000000006620                 SUB             SP, X29, #0x50 ; 'P'
.text:0000000000006624                 LDP             X29, X30, [SP,#0x50+var_s0]
.text:0000000000006628                 LDP             X20, X19, [SP,#0x50+var_10]
.text:000000000000662C                 LDP             X22, X21, [SP,#0x50+var_20]
.text:0000000000006630                 LDP             X24, X23, [SP,#0x50+var_30]
.text:0000000000006634                 LDP             X26, X25, [SP,#0x50+var_40]
.text:0000000000006638                 LDP             X28, X27, [SP+0x50+var_50],#0x60
.text:000000000000663C                 RET
.text:0000000000006640 ; ---------------------------------------------------------------------------
.text:0000000000006640 loc_6640                                ; CODE XREF: Java_com_android_server_SemService_deactivateCardsAID+3A8↑j
.text:0000000000006640                 ADRP            X1, #unk_10DEC@PAGE
.text:0000000000006644                 ADRP            X2, #aDefaultCardDel_1@PAGE ; "Default Card Delete ERROR"
.text:0000000000006648                 ADD             X1, X1, #unk_10DEC@PAGEOFF
.text:000000000000664C                 ADD             X2, X2, #aDefaultCardDel_1@PAGEOFF ; "Default Card Delete ERROR"
.text:0000000000006650                 MOV             W0, #6
.text:0000000000006654                 BL              .__android_log_print
.text:0000000000006658                 B               loc_65C8
.text:000000000000665C ; ---------------------------------------------------------------------------
.text:000000000000665C loc_665C                                ; CODE XREF: Java_com_android_server_SemService_deactivateCardsAID+438↑j
.text:000000000000665C                 BL              .__stack_chk_fail
.text:000000000000665C ; } // starts at 61E0
.text:000000000000665C ; End of function Java_com_android_server_SemService_deactivateCardsAID
.text:0000000000006660 ; =============== S U B R O U T I N E =======================================
.text:0000000000006660 ; Attributes: bp-based frame
.text:0000000000006660                 EXPORT Java_com_android_server_SemService_jniICD
.text:0000000000006660 Java_com_android_server_SemService_jniICD
.text:0000000000006660                                         ; DATA XREF: LOAD:00000000000016A8↑o
.text:0000000000006660 var_38          = -0x38
.text:0000000000006660 var_30          = -0x30
.text:0000000000006660 var_28          = -0x28
.text:0000000000006660 var_20          = -0x20
.text:0000000000006660 var_10          = -0x10
.text:0000000000006660 var_s0          =  0
.text:0000000000006660 ; __unwind {
.text:0000000000006660                 STP             X22, X21, [SP,#-0x10+var_20]!
.text:0000000000006664                 STP             X20, X19, [SP,#0x20+var_10]
.text:0000000000006668                 STP             X29, X30, [SP,#0x20+var_s0]
.text:000000000000666C                 ADD             X29, SP, #0x20
.text:0000000000006670                 SUB             SP, SP, #0x20
.text:0000000000006674                 ADRP            X21, #__stack_chk_guard_ptr@PAGE
.text:0000000000006678                 LDR             X21, [X21,#__stack_chk_guard_ptr@PAGEOFF]
.text:000000000000667C                 ADRP            X0, #aDevTzic@PAGE ; "/dev/tzic"
.text:0000000000006680                 ADD             X0, X0, #aDevTzic@PAGEOFF ; "/dev/tzic"
.text:0000000000006684                 MOV             W1, #2  ; oflag
.text:0000000000006688                 LDR             X21, [X21]
.text:000000000000668C                 STR             X21, [SP,#0x40+var_28]
.text:0000000000006690                 BL              .open
.text:0000000000006694                 MOV             W19, W0
.text:0000000000006698                 TBNZ            W19, #0x1F, loc_66F0
.text:000000000000669C                 ADRP            X8, #qword_11DB8@PAGE
.text:00000000000066A0                 ADD             X8, X8, #qword_11DB8@PAGEOFF
.text:00000000000066A4                 LDR             W9, [X8,#(dword_11DC0 - 0x11DB8)]
.text:00000000000066A8                 LDR             X8, [X8]
.text:00000000000066AC                 MOV             W1, #0xC00C6801 ; request
.text:00000000000066B4                 ADD             X2, SP, #0x40+var_38
.text:00000000000066B8                 MOV             W0, W19 ; fd
.text:00000000000066BC                 STR             W9, [SP,#0x40+var_30]
.text:00000000000066C0                 STR             X8, [SP,#0x40+var_38]
.text:00000000000066C4                 BL              .ioctl
.text:00000000000066C8                 LDR             W8, [SP,#0x40+var_30]
.text:00000000000066CC                 CMP             W0, #1
.text:00000000000066D0                 CSET            W9, EQ
.text:00000000000066D4                 CMP             W8, #1
.text:00000000000066D8                 CSET            W8, EQ
.text:00000000000066DC                 ORR             W8, W9, W8
.text:00000000000066E0                 MOV             W0, W19 ; fd
.text:00000000000066E4                 EOR             W20, W8, #1
.text:00000000000066E8                 BL              .close
.text:00000000000066EC                 B               loc_670C
.text:00000000000066F0 ; ---------------------------------------------------------------------------
.text:00000000000066F0 loc_66F0                                ; CODE XREF: Java_com_android_server_SemService_jniICD+38↑j
.text:00000000000066F0                 ADRP            X1, #unk_10DEC@PAGE
.text:00000000000066F4                 ADRP            X2, #aFailedOpenTheD@PAGE ; "Failed open the /dev/tzic file"
.text:00000000000066F8                 ADD             X1, X1, #unk_10DEC@PAGEOFF
.text:00000000000066FC                 ADD             X2, X2, #aFailedOpenTheD@PAGEOFF ; "Failed open the /dev/tzic file"
.text:0000000000006700                 MOV             W0, #6
.text:0000000000006704                 BL              .__android_log_print
.text:0000000000006708                 MOV             W20, WZR
.text:000000000000670C loc_670C                                ; CODE XREF: Java_com_android_server_SemService_jniICD+8C↑j
.text:000000000000670C                 LDR             X8, [SP,#0x40+var_28]
.text:0000000000006710                 SUB             X8, X21, X8
.text:0000000000006714                 CBNZ            X8, loc_6730
.text:0000000000006718                 MOV             W0, W20
.text:000000000000671C                 SUB             SP, X29, #0x20 ; ' '
.text:0000000000006720                 LDP             X29, X30, [SP,#0x20+var_s0]
.text:0000000000006724                 LDP             X20, X19, [SP,#0x20+var_10]
.text:0000000000006728                 LDP             X22, X21, [SP+0x20+var_20],#0x30
.text:000000000000672C                 RET
.text:0000000000006730 ; ---------------------------------------------------------------------------
.text:0000000000006730 loc_6730                                ; CODE XREF: Java_com_android_server_SemService_jniICD+B4↑j
.text:0000000000006730                 BL              .__stack_chk_fail
.text:0000000000006730 ; } // starts at 6660
.text:0000000000006730 ; End of function Java_com_android_server_SemService_jniICD
.text:0000000000006734 ; =============== S U B R O U T I N E =======================================
.text:0000000000006734 ; Attributes: bp-based frame
.text:0000000000006734                 EXPORT Java_com_android_server_SemService_openSpi
.text:0000000000006734 Java_com_android_server_SemService_openSpi
.text:0000000000006734                                         ; DATA XREF: LOAD:00000000000009D0↑o
.text:0000000000006734 var_10          = -0x10
.text:0000000000006734 var_s0          =  0
.text:0000000000006734 ; __unwind {
.text:0000000000006734                 STP             X20, X19, [SP,#-0x10+var_10]!
.text:0000000000006738                 STP             X29, X30, [SP,#0x10+var_s0]
.text:000000000000673C                 ADD             X29, SP, #0x10
.text:0000000000006740                 MOV             W19, W2
.text:0000000000006744                 ADRP            X1, #unk_10DEC@PAGE
.text:0000000000006748                 ADRP            X2, #aJniOpenspiStar@PAGE ; "JNI, openSpi start[%d]"
.text:000000000000674C                 ADD             X1, X1, #unk_10DEC@PAGEOFF
.text:0000000000006750                 ADD             X2, X2, #aJniOpenspiStar@PAGEOFF ; "JNI, openSpi start[%d]"
.text:0000000000006754                 MOV             W0, #4
.text:0000000000006758                 MOV             W3, W19
.text:000000000000675C                 BL              .__android_log_print
.text:0000000000006760                 MOV             W0, W19
.text:0000000000006764                 BL              .spiOpen
.text:0000000000006768                 MOV             W20, W0
.text:000000000000676C                 CMN             W20, #0xC8
.text:0000000000006770                 B.EQ            loc_67C8
.text:0000000000006774                 CMP             W19, #1
.text:0000000000006778                 B.NE            loc_6798
.text:000000000000677C                 CMP             W20, #1
.text:0000000000006780                 B.EQ            loc_6798
.text:0000000000006784                 ADRP            X1, #unk_10DEC@PAGE
.text:0000000000006788                 ADRP            X2, #aSecureOpenFail@PAGE ; "secure open fail"
.text:000000000000678C                 ADD             X1, X1, #unk_10DEC@PAGEOFF
.text:0000000000006790                 ADD             X2, X2, #aSecureOpenFail@PAGEOFF ; "secure open fail"
.text:0000000000006794                 B               loc_67B8
.text:0000000000006798 ; ---------------------------------------------------------------------------
.text:0000000000006798 loc_6798                                ; CODE XREF: Java_com_android_server_SemService_openSpi+44↑j
.text:0000000000006798                                         ; Java_com_android_server_SemService_openSpi+4C↑j
.text:0000000000006798                 MOV             W0, WZR
.text:000000000000679C                 CBNZ            W19, loc_67E4
.text:00000000000067A0                 CMP             W20, #1
.text:00000000000067A4                 B.EQ            loc_67E4
.text:00000000000067A8                 ADRP            X1, #unk_10DEC@PAGE
.text:00000000000067AC                 ADRP            X2, #aNormalOpenFail@PAGE ; "normal open fail"
.text:00000000000067B0                 ADD             X1, X1, #unk_10DEC@PAGEOFF
.text:00000000000067B4                 ADD             X2, X2, #aNormalOpenFail@PAGEOFF ; "normal open fail"
.text:00000000000067B8 loc_67B8                                ; CODE XREF: Java_com_android_server_SemService_openSpi+60↑j
.text:00000000000067B8                 MOV             W0, #6
.text:00000000000067BC                 BL              .__android_log_print
.text:00000000000067C0                 MOV             W0, W19
.text:00000000000067C4                 BL              .spiClose
.text:00000000000067C8 loc_67C8                                ; CODE XREF: Java_com_android_server_SemService_openSpi+3C↑j
.text:00000000000067C8                 ADRP            X1, #unk_10DEC@PAGE
.text:00000000000067CC                 ADRP            X2, #aJniOpenspiEnd@PAGE ; "JNI, openSpi end"
.text:00000000000067D0                 ADD             X1, X1, #unk_10DEC@PAGEOFF
.text:00000000000067D4                 ADD             X2, X2, #aJniOpenspiEnd@PAGEOFF ; "JNI, openSpi end"
.text:00000000000067D8                 MOV             W0, #4
.text:00000000000067DC                 BL              .__android_log_print
.text:00000000000067E0                 MOV             W0, W20
.text:00000000000067E4 loc_67E4                                ; CODE XREF: Java_com_android_server_SemService_openSpi+68↑j
.text:00000000000067E4                                         ; Java_com_android_server_SemService_openSpi+70↑j
.text:00000000000067E4                 LDP             X29, X30, [SP,#0x10+var_s0]
.text:00000000000067E8                 LDP             X20, X19, [SP+0x10+var_10],#0x20
.text:00000000000067EC                 RET
.text:00000000000067EC ; } // starts at 6734
.text:00000000000067EC ; End of function Java_com_android_server_SemService_openSpi
.text:00000000000067F0 ; =============== S U B R O U T I N E =======================================
.text:00000000000067F0 ; Attributes: bp-based frame
.text:00000000000067F0                 EXPORT Java_com_android_server_SemService_closeSpi
.text:00000000000067F0 Java_com_android_server_SemService_closeSpi
.text:00000000000067F0                                         ; DATA XREF: LOAD:0000000000001558↑o
.text:00000000000067F0 var_10          = -0x10
.text:00000000000067F0 var_s0          =  0
.text:00000000000067F0 ; __unwind {
.text:00000000000067F0                 STP             X20, X19, [SP,#-0x10+var_10]!
.text:00000000000067F4                 STP             X29, X30, [SP,#0x10+var_s0]
.text:00000000000067F8                 ADD             X29, SP, #0x10
.text:00000000000067FC                 MOV             W19, W2
.text:0000000000006800                 ADRP            X1, #unk_10DEC@PAGE
.text:0000000000006804                 ADRP            X2, #aJniClosespiSta@PAGE ; "JNI, closeSpi start[%d]"
.text:0000000000006808                 ADD             X1, X1, #unk_10DEC@PAGEOFF
.text:000000000000680C                 ADD             X2, X2, #aJniClosespiSta@PAGEOFF ; "JNI, closeSpi start[%d]"
.text:0000000000006810                 MOV             W0, #4
.text:0000000000006814                 MOV             W3, W19
.text:0000000000006818                 BL              .__android_log_print
.text:000000000000681C                 MOV             W0, W19
.text:0000000000006820                 BL              .spiClose
.text:0000000000006824                 MOV             W8, W0
.text:0000000000006828                 CMP             W19, #1
.text:000000000000682C                 B.NE            loc_684C
.text:0000000000006830                 CMP             W8, #1
.text:0000000000006834                 B.EQ            loc_684C
.text:0000000000006838                 ADRP            X1, #unk_10DEC@PAGE
.text:000000000000683C                 ADRP            X2, #aSecureCloseFai@PAGE ; "secure close fail"
.text:0000000000006840                 ADD             X1, X1, #unk_10DEC@PAGEOFF
.text:0000000000006844                 ADD             X2, X2, #aSecureCloseFai@PAGEOFF ; "secure close fail"
.text:0000000000006848                 B               loc_686C
.text:000000000000684C ; ---------------------------------------------------------------------------
.text:000000000000684C loc_684C                                ; CODE XREF: Java_com_android_server_SemService_closeSpi+3C↑j
.text:000000000000684C                                         ; Java_com_android_server_SemService_closeSpi+44↑j
.text:000000000000684C                 MOV             W0, WZR
.text:0000000000006850                 CBNZ            W19, loc_6878
.text:0000000000006854                 CMP             W8, #1
.text:0000000000006858                 B.EQ            loc_6878
.text:000000000000685C                 ADRP            X1, #unk_10DEC@PAGE
.text:0000000000006860                 ADRP            X2, #aNormalCloseFai@PAGE ; "normal close fail"
.text:0000000000006864                 ADD             X1, X1, #unk_10DEC@PAGEOFF
.text:0000000000006868                 ADD             X2, X2, #aNormalCloseFai@PAGEOFF ; "normal close fail"
.text:000000000000686C loc_686C                                ; CODE XREF: Java_com_android_server_SemService_closeSpi+58↑j
.text:000000000000686C                 MOV             W0, #6
.text:0000000000006870                 BL              .__android_log_print
.text:0000000000006874                 MOV             W0, #0xFFFFFFFF
.text:0000000000006878 loc_6878                                ; CODE XREF: Java_com_android_server_SemService_closeSpi+60↑j
.text:0000000000006878                                         ; Java_com_android_server_SemService_closeSpi+68↑j
.text:0000000000006878                 LDP             X29, X30, [SP,#0x10+var_s0]
.text:000000000000687C                 LDP             X20, X19, [SP+0x10+var_10],#0x20
.text:0000000000006880                 RET
.text:0000000000006880 ; } // starts at 67F0
.text:0000000000006880 ; End of function Java_com_android_server_SemService_closeSpi
.text:0000000000006884 ; =============== S U B R O U T I N E =======================================
.text:0000000000006884 ; Attributes: bp-based frame
.text:0000000000006884                 EXPORT Java_com_android_server_SemService_getAtr
.text:0000000000006884 Java_com_android_server_SemService_getAtr
.text:0000000000006884                                         ; DATA XREF: LOAD:00000000000018A0↑o
.text:0000000000006884 var_s0          =  0
.text:0000000000006884 ; __unwind {
.text:0000000000006884                 STP             X29, X30, [SP,#-0x10+var_s0]!
.text:0000000000006888                 MOV             X29, SP
.text:000000000000688C                 ADRP            X1, #unk_10DEC@PAGE
.text:0000000000006890                 ADRP            X2, #aJniGetatrStart@PAGE ; "JNI, getAtr start"
.text:0000000000006894                 ADD             X1, X1, #unk_10DEC@PAGEOFF
.text:0000000000006898                 ADD             X2, X2, #aJniGetatrStart@PAGEOFF ; "JNI, getAtr start"
.text:000000000000689C                 MOV             W0, #4
.text:00000000000068A0                 BL              .__android_log_print
.text:00000000000068A4                 BL              .getAtr
.text:00000000000068A8                 ADRP            X1, #unk_10DEC@PAGE
.text:00000000000068AC                 ADD             X1, X1, #unk_10DEC@PAGEOFF
.text:00000000000068B0                 CMP             W0, #1
.text:00000000000068B4                 B.NE            loc_68D4
.text:00000000000068B8                 ADRP            X2, #aJniGetatrEnd@PAGE ; "JNI, getAtr end"
.text:00000000000068BC                 ADD             X2, X2, #aJniGetatrEnd@PAGEOFF ; "JNI, getAtr end"
.text:00000000000068C0                 MOV             W0, #4
.text:00000000000068C4                 BL              .__android_log_print
.text:00000000000068C8                 MOV             W0, WZR
.text:00000000000068CC                 LDP             X29, X30, [SP+var_s0],#0x10
.text:00000000000068D0                 RET
.text:00000000000068D4 ; ---------------------------------------------------------------------------
.text:00000000000068D4 loc_68D4                                ; CODE XREF: Java_com_android_server_SemService_getAtr+30↑j
.text:00000000000068D4                 ADRP            X2, #aGetatrFail@PAGE ; "getAtr fail"
.text:00000000000068D8                 ADD             X2, X2, #aGetatrFail@PAGEOFF ; "getAtr fail"
.text:00000000000068DC                 MOV             W0, #6
.text:00000000000068E0                 BL              .__android_log_print
.text:00000000000068E4                 MOV             W0, #0xFFFFFFFF
.text:00000000000068E8                 LDP             X29, X30, [SP+var_s0],#0x10
.text:00000000000068EC                 RET
.text:00000000000068EC ; } // starts at 6884
.text:00000000000068EC ; End of function Java_com_android_server_SemService_getAtr
.text:00000000000068F0 ; =============== S U B R O U T I N E =======================================
.text:00000000000068F0 ; Attributes: bp-based frame
.text:00000000000068F0                 EXPORT Java_com_android_server_SemService_coldReset
.text:00000000000068F0 Java_com_android_server_SemService_coldReset
.text:00000000000068F0                                         ; DATA XREF: LOAD:00000000000011E0↑o
.text:00000000000068F0 var_s0          =  0
.text:00000000000068F0 ; __unwind {
.text:00000000000068F0                 STP             X29, X30, [SP,#-0x10+var_s0]!
.text:00000000000068F4                 MOV             X29, SP
.text:00000000000068F8                 BL              .coldReset
.text:00000000000068FC                 ADRP            X1, #unk_10DEC@PAGE
.text:0000000000006900                 ADD             X1, X1, #unk_10DEC@PAGEOFF
.text:0000000000006904                 CMP             W0, #1
.text:0000000000006908                 B.NE            loc_6928
.text:000000000000690C                 ADRP            X2, #aJniColdresetEn@PAGE ; "JNI, coldreset end"
.text:0000000000006910                 ADD             X2, X2, #aJniColdresetEn@PAGEOFF ; "JNI, coldreset end"
.text:0000000000006914                 MOV             W0, #4
.text:0000000000006918                 BL              .__android_log_print
.text:000000000000691C                 MOV             W0, WZR
.text:0000000000006920                 LDP             X29, X30, [SP+var_s0],#0x10
.text:0000000000006924                 RET
.text:0000000000006928 ; ---------------------------------------------------------------------------
.text:0000000000006928 loc_6928                                ; CODE XREF: Java_com_android_server_SemService_coldReset+18↑j
.text:0000000000006928                 ADRP            X2, #aColdresetFail@PAGE ; "coldreset fail"
.text:000000000000692C                 ADD             X2, X2, #aColdresetFail@PAGEOFF ; "coldreset fail"
.text:0000000000006930                 MOV             W0, #6
.text:0000000000006934                 BL              .__android_log_print
.text:0000000000006938                 MOV             W0, #0xFFFFFFFF
.text:000000000000693C                 LDP             X29, X30, [SP+var_s0],#0x10
.text:0000000000006940                 RET
.text:0000000000006940 ; } // starts at 68F0
.text:0000000000006940 ; End of function Java_com_android_server_SemService_coldReset
.text:0000000000006944 ; =============== S U B R O U T I N E =======================================
.text:0000000000006944 ; Attributes: bp-based frame
.text:0000000000006944                 EXPORT Java_com_android_server_SemService_semFactory
.text:0000000000006944 Java_com_android_server_SemService_semFactory
.text:0000000000006944                                         ; DATA XREF: LOAD:0000000000000C58↑o
.text:0000000000006944 var_s0          =  0
.text:0000000000006944 ; __unwind {
.text:0000000000006944                 STP             X29, X30, [SP,#-0x10+var_s0]!
.text:0000000000006948                 MOV             X29, SP
.text:000000000000694C                 ADRP            X1, #unk_10DEC@PAGE
.text:0000000000006950                 ADRP            X2, #aJniSemfactoryS@PAGE ; "JNI, semFactory start"
.text:0000000000006954                 ADD             X1, X1, #unk_10DEC@PAGEOFF
.text:0000000000006958                 ADD             X2, X2, #aJniSemfactoryS@PAGEOFF ; "JNI, semFactory start"
.text:000000000000695C                 MOV             W0, #4
.text:0000000000006960                 BL              .__android_log_print
.text:0000000000006964                 LDP             X29, X30, [SP+var_s0],#0x10
.text:0000000000006968                 B               .semFactory
.text:0000000000006968 ; } // starts at 6944
.text:0000000000006968 ; End of function Java_com_android_server_SemService_semFactory
.text:000000000000696C ; =============== S U B R O U T I N E =======================================
.text:000000000000696C ; Attributes: bp-based frame
.text:000000000000696C                 EXPORT Java_com_android_server_SemService_sendData
.text:000000000000696C Java_com_android_server_SemService_sendData
.text:000000000000696C                                         ; DATA XREF: LOAD:0000000000001828↑o
.text:000000000000696C var_8078        = -0x8078
.text:000000000000696C src             = -0x8070
.text:000000000000696C var_8068        = -0x8068
.text:000000000000696C n               = -0x805C
.text:000000000000696C var_50          = -0x50
.text:000000000000696C var_40          = -0x40
.text:000000000000696C var_30          = -0x30
.text:000000000000696C var_20          = -0x20
.text:000000000000696C var_10          = -0x10
.text:000000000000696C var_s0          =  0
.text:000000000000696C ; __unwind {
.text:000000000000696C                 STP             X28, X27, [SP,#-0x10+var_50]!
.text:0000000000006970                 STP             X26, X25, [SP,#0x50+var_40]
.text:0000000000006974                 STP             X24, X23, [SP,#0x50+var_30]
.text:0000000000006978                 STP             X22, X21, [SP,#0x50+var_20]
.text:000000000000697C                 STP             X20, X19, [SP,#0x50+var_10]
.text:0000000000006980                 STP             X29, X30, [SP,#0x50+var_s0]
.text:0000000000006984                 ADD             X29, SP, #0x50
.text:0000000000006988                 SUB             SP, SP, #8,LSL#12
.text:000000000000698C                 SUB             SP, SP, #0x30
.text:0000000000006990                 ADRP            X28, #__stack_chk_guard_ptr@PAGE
.text:0000000000006994                 LDR             X28, [X28,#__stack_chk_guard_ptr@PAGEOFF]
.text:0000000000006998                 MOV             X21, X2
.text:000000000000699C                 MOV             X20, X0
.text:00000000000069A0                 ADD             X23, SP, #0x8080+var_8068
.text:00000000000069A4                 LDR             X28, [X28]
.text:00000000000069A8                 ADD             X0, SP, #0x8080+n+2 ; s
.text:00000000000069AC                 MOV             W2, #0x8002 ; n
.text:00000000000069B0                 MOV             W1, WZR ; c
.text:00000000000069B4                 MOV             W26, W5
.text:00000000000069B8                 MOV             X19, X4
.text:00000000000069BC                 MOV             W25, W3
.text:00000000000069C0                 STR             X28, [X23]
.text:00000000000069C4                 STRH            WZR, [SP,#0x8080+n]
.text:00000000000069C8                 BL              .memset
.text:00000000000069CC                 ADRP            X1, #unk_10DEC@PAGE
.text:00000000000069D0                 ADRP            X2, #aJniSenddataSta@PAGE ; "JNI, sendData start"
.text:00000000000069D4                 ADD             X1, X1, #unk_10DEC@PAGEOFF
.text:00000000000069D8                 ADD             X2, X2, #aJniSenddataSta@PAGEOFF ; "JNI, sendData start"
.text:00000000000069DC                 MOV             W0, #4
.text:00000000000069E0                 BL              .__android_log_print
.text:00000000000069E4                 CBZ             X21, loc_6A24
.text:00000000000069E8                 CBZ             X19, loc_6A24
.text:00000000000069EC                 SUB             W8, W25, #4
.text:00000000000069F0                 MOV             W9, #0x8005
.text:00000000000069F4                 CMP             W8, W9
.text:00000000000069F8                 B.CC            loc_6A74
.text:00000000000069FC                 ADRP            X1, #unk_10DEC@PAGE
.text:0000000000006A00                 ADRP            X2, #aCommandLengthI@PAGE ; "command length is out of scope %d, %d"
.text:0000000000006A04                 ADD             X1, X1, #unk_10DEC@PAGEOFF
.text:0000000000006A08                 ADD             X2, X2, #aCommandLengthI@PAGEOFF ; "command length is out of scope %d, %d"
.text:0000000000006A0C                 MOV             W0, #6
.text:0000000000006A10                 MOV             W4, #0x386
.text:0000000000006A14                 MOV             W3, W25
.text:0000000000006A18                 BL              .__android_log_print
.text:0000000000006A1C                 MOV             W25, #0xFFFFFFFE
.text:0000000000006A20                 B               loc_6A44
.text:0000000000006A24 ; ---------------------------------------------------------------------------
.text:0000000000006A24 loc_6A24                                ; CODE XREF: Java_com_android_server_SemService_sendData+78↑j
.text:0000000000006A24                                         ; Java_com_android_server_SemService_sendData+7C↑j
.text:0000000000006A24                 ADRP            X1, #unk_10DEC@PAGE
.text:0000000000006A28                 ADRP            X2, #aInvalidParamet@PAGE ; "Invalid parameters %d"
.text:0000000000006A2C                 ADD             X1, X1, #unk_10DEC@PAGEOFF
.text:0000000000006A30                 ADD             X2, X2, #aInvalidParamet@PAGEOFF ; "Invalid parameters %d"
.text:0000000000006A34                 MOV             W0, #6
.text:0000000000006A38                 MOV             W3, #0x380
.text:0000000000006A3C                 BL              .__android_log_print
.text:0000000000006A40                 MOV             W25, #0xFFFFFFFF
.text:0000000000006A44 loc_6A44                                ; CODE XREF: Java_com_android_server_SemService_sendData+B4↑j
.text:0000000000006A44                                         ; Java_com_android_server_SemService_sendData+1FC↓j ...
.text:0000000000006A44                 LDR             X8, [X23]
.text:0000000000006A48                 SUB             X8, X28, X8
.text:0000000000006A4C                 CBNZ            X8, loc_6D10
.text:0000000000006A50                 MOV             W0, W25
.text:0000000000006A54                 SUB             SP, X29, #0x50 ; 'P'
.text:0000000000006A58                 LDP             X29, X30, [SP,#0x50+var_s0]
.text:0000000000006A5C                 LDP             X20, X19, [SP,#0x50+var_10]
.text:0000000000006A60                 LDP             X22, X21, [SP,#0x50+var_20]
.text:0000000000006A64                 LDP             X24, X23, [SP,#0x50+var_30]
.text:0000000000006A68                 LDP             X26, X25, [SP,#0x50+var_40]
.text:0000000000006A6C                 LDP             X28, X27, [SP+0x50+var_50],#0x60
.text:0000000000006A70                 RET
.text:0000000000006A74 ; ---------------------------------------------------------------------------
.text:0000000000006A74 loc_6A74                                ; CODE XREF: Java_com_android_server_SemService_sendData+8C↑j
.text:0000000000006A74                 SXTW            X27, W25
.text:0000000000006A78                 MOV             X0, X27 ; size
.text:0000000000006A7C                 BL              .malloc
.text:0000000000006A80                 MOV             X22, X0
.text:0000000000006A84                 CBZ             X22, loc_6B6C
.text:0000000000006A88                 LDR             X8, [X20]
.text:0000000000006A8C                 MOV             X0, X20
.text:0000000000006A90                 MOV             X1, X19
.text:0000000000006A94                 LDR             X8, [X8,#0x558]
.text:0000000000006A98                 BLR             X8
.text:0000000000006A9C                 CMP             W0, #0x10,LSL#12
.text:0000000000006AA0                 MOV             W8, #0x8002
.text:0000000000006AA4                 CSEL            W24, W8, W0, GT
.text:0000000000006AA8                 STRH            W24, [SP,#0x8080+n]
.text:0000000000006AAC                 CMP             W24, #0
.text:0000000000006AB0                 B.LE            loc_6B90
.text:0000000000006AB4                 AND             W2, W24, #0xFFFF ; n
.text:0000000000006AB8                 MOV             W1, WZR ; c
.text:0000000000006ABC                 ADD             X0, SP, #0x8080+n+2 ; s
.text:0000000000006AC0                 BL              .memset
.text:0000000000006AC4                 LDR             X8, [X20]
.text:0000000000006AC8                 MOV             X2, XZR
.text:0000000000006ACC                 MOV             X0, X20
.text:0000000000006AD0                 MOV             X1, X21
.text:0000000000006AD4                 LDR             X8, [X8,#0x5C0]
.text:0000000000006AD8                 BLR             X8
.text:0000000000006ADC                 LDR             X8, [X20]
.text:0000000000006AE0                 MOV             X28, X0
.text:0000000000006AE4                 MOV             X2, XZR
.text:0000000000006AE8                 MOV             X0, X20
.text:0000000000006AEC                 LDR             X8, [X8,#0x5C0]
.text:0000000000006AF0                 MOV             X1, X19
.text:0000000000006AF4                 BLR             X8
.text:0000000000006AF8                 MOV             X8, X0
.text:0000000000006AFC                 STR             X28, [SP,#0x8080+src]
.text:0000000000006B00                 CBZ             X28, loc_6BB8
.text:0000000000006B04                 CBZ             X8, loc_6BB8
.text:0000000000006B08                 LDR             X1, [SP,#0x8080+src] ; src
.text:0000000000006B0C                 MOV             X0, X22 ; dest
.text:0000000000006B10                 MOV             X2, X27 ; n
.text:0000000000006B14                 STR             X22, [SP,#0x8080+var_8078]
.text:0000000000006B18                 MOV             X22, X8
.text:0000000000006B1C                 BL              .memcpy
.text:0000000000006B20                 AND             W2, W24, #0xFFFF ; n
.text:0000000000006B24                 MOV             W1, WZR ; c
.text:0000000000006B28                 MOV             X0, X22 ; s
.text:0000000000006B2C                 BL              .memset
.text:0000000000006B30                 ADRP            X28, #__stack_chk_guard_ptr@PAGE
.text:0000000000006B34                 LDR             X28, [X28,#__stack_chk_guard_ptr@PAGEOFF]
.text:0000000000006B38                 CMP             W26, #1
.text:0000000000006B3C                 LDR             X28, [X28]
.text:0000000000006B40                 B.NE            loc_6BF4
.text:0000000000006B44                 ADRP            X1, #unk_10DEC@PAGE
.text:0000000000006B48                 ADRP            X2, #aSInvalidInputD@PAGE ; "%s, invalid input data"
.text:0000000000006B4C                 ADRP            X3, #aJavaComAndroid_29@PAGE ; "Java_com_android_server_SemService_send"...
.text:0000000000006B50                 ADD             X1, X1, #unk_10DEC@PAGEOFF
.text:0000000000006B54                 ADD             X2, X2, #aSInvalidInputD@PAGEOFF ; "%s, invalid input data"
.text:0000000000006B58                 ADD             X3, X3, #aJavaComAndroid_29@PAGEOFF ; "Java_com_android_server_SemService_send"...
.text:0000000000006B5C                 MOV             W0, #6
.text:0000000000006B60                 BL              .__android_log_print
.text:0000000000006B64                 MOV             W25, #0xFFFFFF9C
.text:0000000000006B68                 B               loc_6A44
.text:0000000000006B6C ; ---------------------------------------------------------------------------
.text:0000000000006B6C loc_6B6C                                ; CODE XREF: Java_com_android_server_SemService_sendData+118↑j
.text:0000000000006B6C                 ADRP            X1, #unk_10DEC@PAGE
.text:0000000000006B70                 ADRP            X2, #aFailedToAlloca@PAGE ; "failed to allocate memory %d"
.text:0000000000006B74                 ADD             X1, X1, #unk_10DEC@PAGEOFF
.text:0000000000006B78                 ADD             X2, X2, #aFailedToAlloca@PAGEOFF ; "failed to allocate memory %d"
.text:0000000000006B7C                 MOV             W0, #6
.text:0000000000006B80                 MOV             W3, #0x38E
.text:0000000000006B84                 BL              .__android_log_print
.text:0000000000006B88                 MOV             W25, #0xFFFFFFFD
.text:0000000000006B8C                 B               loc_6A44
.text:0000000000006B90 ; ---------------------------------------------------------------------------
.text:0000000000006B90 loc_6B90                                ; CODE XREF: Java_com_android_server_SemService_sendData+144↑j
.text:0000000000006B90                 ADRP            X1, #unk_10DEC@PAGE
.text:0000000000006B94                 ADRP            X2, #aInvalidParamsC@PAGE ; "invalid params, check data baRsp"
.text:0000000000006B98                 ADD             X1, X1, #unk_10DEC@PAGEOFF
.text:0000000000006B9C                 ADD             X2, X2, #aInvalidParamsC@PAGEOFF ; "invalid params, check data baRsp"
.text:0000000000006BA0                 MOV             W0, #6
.text:0000000000006BA4                 BL              .__android_log_print
.text:0000000000006BA8                 MOV             X0, X22 ; ptr
.text:0000000000006BAC                 BL              .free
.text:0000000000006BB0                 MOV             W25, #0xFFFFFFFC
.text:0000000000006BB4                 B               loc_6A44
.text:0000000000006BB8 ; ---------------------------------------------------------------------------
.text:0000000000006BB8 loc_6BB8                                ; CODE XREF: Java_com_android_server_SemService_sendData+194↑j
.text:0000000000006BB8                                         ; Java_com_android_server_SemService_sendData+198↑j
.text:0000000000006BB8                 ADRP            X1, #unk_10DEC@PAGE
.text:0000000000006BBC                 ADRP            X2, #aDMemAllocError@PAGE ; "%d: mem alloc error"
.text:0000000000006BC0                 ADD             X1, X1, #unk_10DEC@PAGEOFF
.text:0000000000006BC4                 ADD             X2, X2, #aDMemAllocError@PAGEOFF ; "%d: mem alloc error"
.text:0000000000006BC8                 MOV             W0, #6
.text:0000000000006BCC                 MOV             W3, #0x3A7
.text:0000000000006BD0                 MOV             X26, X22
.text:0000000000006BD4                 MOV             X22, X8
.text:0000000000006BD8                 BL              .__android_log_print
.text:0000000000006BDC                 ADRP            X28, #__stack_chk_guard_ptr@PAGE
.text:0000000000006BE0                 LDR             X24, [SP,#0x8080+src]
.text:0000000000006BE4                 LDR             X28, [X28,#__stack_chk_guard_ptr@PAGEOFF]
.text:0000000000006BE8                 MOV             W25, #0xFFFFFFFF
.text:0000000000006BEC                 LDR             X28, [X28]
.text:0000000000006BF0                 B               loc_6CC4
.text:0000000000006BF4 ; ---------------------------------------------------------------------------
.text:0000000000006BF4 loc_6BF4                                ; CODE XREF: Java_com_android_server_SemService_sendData+1D4↑j
.text:0000000000006BF4                 LDR             X0, [SP,#0x8080+var_8078]
.text:0000000000006BF8                 ADD             X2, SP, #0x8080+n+2
.text:0000000000006BFC                 ADD             X3, SP, #0x8080+n
.text:0000000000006C00                 MOV             W1, W25
.text:0000000000006C04                 MOV             X26, X0
.text:0000000000006C08                 BL              .sendDataNwd
.text:0000000000006C0C                 MOV             W8, W0
.text:0000000000006C10                 CBZ             W8, loc_6C38
.text:0000000000006C14                 ADRP            X1, #unk_10DEC@PAGE
.text:0000000000006C18                 ADRP            X2, #aSenddataFailed@PAGE ; "sendData failed : %d"
.text:0000000000006C1C                 ADD             X1, X1, #unk_10DEC@PAGEOFF
.text:0000000000006C20                 ADD             X2, X2, #aSenddataFailed@PAGEOFF ; "sendData failed : %d"
.text:0000000000006C24                 MOV             W0, #6
.text:0000000000006C28                 MOV             W3, W8
.text:0000000000006C2C                 BL              .__android_log_print
.text:0000000000006C30                 MOV             W25, #0xFFFFFFFB
.text:0000000000006C34                 B               loc_6CC0
.text:0000000000006C38 ; ---------------------------------------------------------------------------
.text:0000000000006C38 loc_6C38                                ; CODE XREF: Java_com_android_server_SemService_sendData+2A4↑j
.text:0000000000006C38                 LDRH            W2, [SP,#0x8080+n] ; n
.text:0000000000006C3C                 CBZ             W2, loc_6C6C
.text:0000000000006C40                 CMP             W2, W24
.text:0000000000006C44                 B.LE            loc_6C90
.text:0000000000006C48                 ADRP            X1, #unk_10DEC@PAGE
.text:0000000000006C4C                 ADRP            X2, #aOverflowD@PAGE ; "overflow %d"
.text:0000000000006C50                 ADD             X1, X1, #unk_10DEC@PAGEOFF
.text:0000000000006C54                 ADD             X2, X2, #aOverflowD@PAGEOFF ; "overflow %d"
.text:0000000000006C58                 MOV             W0, #6
.text:0000000000006C5C                 MOV             W3, #0x3CE
.text:0000000000006C60                 BL              .__android_log_print
.text:0000000000006C64                 MOV             W25, #0xFFFFFFF9
.text:0000000000006C68                 B               loc_6CC0
.text:0000000000006C6C ; ---------------------------------------------------------------------------
.text:0000000000006C6C loc_6C6C                                ; CODE XREF: Java_com_android_server_SemService_sendData+2D0↑j
.text:0000000000006C6C                 ADRP            X1, #unk_10DEC@PAGE
.text:0000000000006C70                 ADRP            X2, #aFailedToSendAp@PAGE ; "failed to send apdu %d"
.text:0000000000006C74                 ADD             X1, X1, #unk_10DEC@PAGEOFF
.text:0000000000006C78                 ADD             X2, X2, #aFailedToSendAp@PAGEOFF ; "failed to send apdu %d"
.text:0000000000006C7C                 MOV             W0, #6
.text:0000000000006C80                 MOV             W3, #0x3C9
.text:0000000000006C84                 BL              .__android_log_print
.text:0000000000006C88                 MOV             W25, #0xFFFFFFFA
.text:0000000000006C8C                 B               loc_6CC0
.text:0000000000006C90 ; ---------------------------------------------------------------------------
.text:0000000000006C90 loc_6C90                                ; CODE XREF: Java_com_android_server_SemService_sendData+2D8↑j
.text:0000000000006C90                 ADD             X1, SP, #0x8080+n+2 ; src
.text:0000000000006C94                 MOV             X0, X22 ; dest
.text:0000000000006C98                 BL              .memcpy
.text:0000000000006C9C                 LDR             X8, [X20]
.text:0000000000006CA0                 LDRH            W3, [SP,#0x8080+n]
.text:0000000000006CA4                 MOV             W2, WZR
.text:0000000000006CA8                 MOV             X0, X20
.text:0000000000006CAC                 LDR             X8, [X8,#0x680]
.text:0000000000006CB0                 MOV             X1, X19
.text:0000000000006CB4                 MOV             X4, X22
.text:0000000000006CB8                 BLR             X8
.text:0000000000006CBC                 LDRH            W25, [SP,#0x8080+n]
.text:0000000000006CC0 loc_6CC0                                ; CODE XREF: Java_com_android_server_SemService_sendData+2C8↑j
.text:0000000000006CC0                                         ; Java_com_android_server_SemService_sendData+2FC↑j ...
.text:0000000000006CC0                 LDR             X24, [SP,#0x8080+src]
.text:0000000000006CC4 loc_6CC4                                ; CODE XREF: Java_com_android_server_SemService_sendData+284↑j
.text:0000000000006CC4                 MOV             X0, X26 ; ptr
.text:0000000000006CC8                 BL              .free
.text:0000000000006CCC                 CBZ             X24, loc_6CEC
.text:0000000000006CD0                 LDR             X8, [X20]
.text:0000000000006CD4                 MOV             W3, #2
.text:0000000000006CD8                 MOV             X0, X20
.text:0000000000006CDC                 MOV             X1, X21
.text:0000000000006CE0                 LDR             X8, [X8,#0x600]
.text:0000000000006CE4                 MOV             X2, X24
.text:0000000000006CE8                 BLR             X8
.text:0000000000006CEC loc_6CEC                                ; CODE XREF: Java_com_android_server_SemService_sendData+360↑j
.text:0000000000006CEC                 CBZ             X22, loc_6A44
.text:0000000000006CF0                 LDR             X8, [X20]
.text:0000000000006CF4                 MOV             W3, #2
.text:0000000000006CF8                 MOV             X0, X20
.text:0000000000006CFC                 MOV             X1, X19
.text:0000000000006D00                 LDR             X8, [X8,#0x600]
.text:0000000000006D04                 MOV             X2, X22
.text:0000000000006D08                 BLR             X8
.text:0000000000006D0C                 B               loc_6A44
.text:0000000000006D10 ; ---------------------------------------------------------------------------
.text:0000000000006D10 loc_6D10                                ; CODE XREF: Java_com_android_server_SemService_sendData+E0↑j
.text:0000000000006D10                 BL              .__stack_chk_fail
.text:0000000000006D10 ; } // starts at 696C
.text:0000000000006D10 ; End of function Java_com_android_server_SemService_sendData
.text:0000000000006D14 ; =============== S U B R O U T I N E =======================================
.text:0000000000006D14 ; Attributes: bp-based frame
.text:0000000000006D14                 EXPORT Java_com_android_server_SemService_openDriverSpi
.text:0000000000006D14 Java_com_android_server_SemService_openDriverSpi
.text:0000000000006D14                                         ; DATA XREF: LOAD:0000000000001678↑o
.text:0000000000006D14 var_10          = -0x10
.text:0000000000006D14 var_s0          =  0
.text:0000000000006D14 ; __unwind {
.text:0000000000006D14                 STP             X20, X19, [SP,#-0x10+var_10]!
.text:0000000000006D18                 STP             X29, X30, [SP,#0x10+var_s0]
.text:0000000000006D1C                 ADD             X29, SP, #0x10
.text:0000000000006D20                 ADRP            X1, #unk_10DEC@PAGE
.text:0000000000006D24                 ADRP            X2, #aJniOpenspidriv@PAGE ; "JNI, openSpiDriver start"
.text:0000000000006D28                 ADD             X1, X1, #unk_10DEC@PAGEOFF
.text:0000000000006D2C                 ADD             X2, X2, #aJniOpenspidriv@PAGEOFF ; "JNI, openSpiDriver start"
.text:0000000000006D30                 MOV             W0, #4
.text:0000000000006D34                 BL              .__android_log_print
.text:0000000000006D38                 MOV             W0, WZR
.text:0000000000006D3C                 BL              .spiOpen
.text:0000000000006D40                 MOV             W19, W0
.text:0000000000006D44                 CMN             W19, #0xC8
.text:0000000000006D48                 B.EQ            loc_6D78
.text:0000000000006D4C                 MOV             W0, WZR
.text:0000000000006D50                 CMP             W19, #1
.text:0000000000006D54                 B.EQ            loc_6D94
.text:0000000000006D58                 ADRP            X1, #unk_10DEC@PAGE
.text:0000000000006D5C                 ADRP            X2, #aOpenspidriverF@PAGE ; "openSpiDriver fail"
.text:0000000000006D60                 ADD             X1, X1, #unk_10DEC@PAGEOFF
.text:0000000000006D64                 ADD             X2, X2, #aOpenspidriverF@PAGEOFF ; "openSpiDriver fail"
.text:0000000000006D68                 MOV             W0, #6
.text:0000000000006D6C                 BL              .__android_log_print
.text:0000000000006D70                 MOV             W0, WZR
.text:0000000000006D74                 BL              .spiClose
.text:0000000000006D78 loc_6D78                                ; CODE XREF: Java_com_android_server_SemService_openDriverSpi+34↑j
.text:0000000000006D78                 ADRP            X1, #unk_10DEC@PAGE
.text:0000000000006D7C                 ADRP            X2, #aJniOpenspidriv_0@PAGE ; "JNI, openSpiDriver end"
.text:0000000000006D80                 ADD             X1, X1, #unk_10DEC@PAGEOFF
.text:0000000000006D84                 ADD             X2, X2, #aJniOpenspidriv_0@PAGEOFF ; "JNI, openSpiDriver end"
.text:0000000000006D88                 MOV             W0, #4
.text:0000000000006D8C                 BL              .__android_log_print
.text:0000000000006D90                 MOV             W0, W19
.text:0000000000006D94 loc_6D94                                ; CODE XREF: Java_com_android_server_SemService_openDriverSpi+40↑j
.text:0000000000006D94                 LDP             X29, X30, [SP,#0x10+var_s0]
.text:0000000000006D98                 LDP             X20, X19, [SP+0x10+var_10],#0x20
.text:0000000000006D9C                 RET
.text:0000000000006D9C ; } // starts at 6D14
.text:0000000000006D9C ; End of function Java_com_android_server_SemService_openDriverSpi
.text:0000000000006DA0 ; =============== S U B R O U T I N E =======================================
.text:0000000000006DA0 ; Attributes: bp-based frame
.text:0000000000006DA0                 EXPORT Java_com_android_server_SemService_closeDriverSpi
.text:0000000000006DA0 Java_com_android_server_SemService_closeDriverSpi
.text:0000000000006DA0                                         ; DATA XREF: LOAD:0000000000001600↑o
.text:0000000000006DA0 var_10          = -0x10
.text:0000000000006DA0 var_s0          =  0
.text:0000000000006DA0 ; __unwind {
.text:0000000000006DA0                 STP             X20, X19, [SP,#-0x10+var_10]!
.text:0000000000006DA4                 STP             X29, X30, [SP,#0x10+var_s0]
.text:0000000000006DA8                 ADD             X29, SP, #0x10
.text:0000000000006DAC                 ADRP            X1, #unk_10DEC@PAGE
.text:0000000000006DB0                 ADRP            X2, #aJniClosespidri@PAGE ; "JNI, closeSpiDriver start"
.text:0000000000006DB4                 ADD             X1, X1, #unk_10DEC@PAGEOFF
.text:0000000000006DB8                 ADD             X2, X2, #aJniClosespidri@PAGEOFF ; "JNI, closeSpiDriver start"
.text:0000000000006DBC                 MOV             W0, #4
.text:0000000000006DC0                 BL              .__android_log_print
.text:0000000000006DC4                 MOV             W0, WZR
.text:0000000000006DC8                 BL              .spiClose
.text:0000000000006DCC                 MOV             W19, W0
.text:0000000000006DD0                 MOV             W0, WZR
.text:0000000000006DD4                 CMP             W19, #1
.text:0000000000006DD8                 B.EQ            loc_6E18
.text:0000000000006DDC                 ADRP            X20, #unk_10DEC@PAGE
.text:0000000000006DE0                 ADD             X20, X20, #unk_10DEC@PAGEOFF
.text:0000000000006DE4                 ADRP            X2, #aClosespidriver@PAGE ; "closeSpiDriver fail"
.text:0000000000006DE8                 ADD             X2, X2, #aClosespidriver@PAGEOFF ; "closeSpiDriver fail"
.text:0000000000006DEC                 MOV             W0, #6
.text:0000000000006DF0                 MOV             X1, X20
.text:0000000000006DF4                 BL              .__android_log_print
.text:0000000000006DF8                 MOV             W0, WZR
.text:0000000000006DFC                 BL              .spiClose
.text:0000000000006E00                 ADRP            X2, #aJniClosespidri_0@PAGE ; "JNI, closeSpiDriver end"
.text:0000000000006E04                 ADD             X2, X2, #aJniClosespidri_0@PAGEOFF ; "JNI, closeSpiDriver end"
.text:0000000000006E08                 MOV             W0, #4
.text:0000000000006E0C                 MOV             X1, X20
.text:0000000000006E10                 BL              .__android_log_print
.text:0000000000006E14                 MOV             W0, W19
.text:0000000000006E18 loc_6E18                                ; CODE XREF: Java_com_android_server_SemService_closeDriverSpi+38↑j
.text:0000000000006E18                 LDP             X29, X30, [SP,#0x10+var_s0]
.text:0000000000006E1C                 LDP             X20, X19, [SP+0x10+var_10],#0x20
.text:0000000000006E20                 RET
.text:0000000000006E20 ; } // starts at 6DA0
.text:0000000000006E20 ; End of function Java_com_android_server_SemService_closeDriverSpi
.text:0000000000006E24 ; =============== S U B R O U T I N E =======================================
.text:0000000000006E24 ; Attributes: bp-based frame
.text:0000000000006E24                 EXPORT Java_com_android_server_SemService_getEnhancedACDumpGemalto
.text:0000000000006E24 Java_com_android_server_SemService_getEnhancedACDumpGemalto
.text:0000000000006E24                                         ; DATA XREF: LOAD:00000000000014B0↑o
.text:0000000000006E24 var_1F88        = -0x1F88
.text:0000000000006E24 var_1F7C        = -0x1F7C
.text:0000000000006E24 s               = -0x1F78
.text:0000000000006E24 var_30          = -0x30
.text:0000000000006E24 var_20          = -0x20
.text:0000000000006E24 var_10          = -0x10
.text:0000000000006E24 var_s0          =  0
.text:0000000000006E24 ; __unwind {
.text:0000000000006E24                 STP             X24, X23, [SP,#-0x10+var_30]!
.text:0000000000006E28                 STP             X22, X21, [SP,#0x30+var_20]
.text:0000000000006E2C                 STP             X20, X19, [SP,#0x30+var_10]
.text:0000000000006E30                 STP             X29, X30, [SP,#0x30+var_s0]
.text:0000000000006E34                 ADD             X29, SP, #0x30
.text:0000000000006E38                 SUB             SP, SP, #1,LSL#12
.text:0000000000006E3C                 SUB             SP, SP, #0xF60
.text:0000000000006E40                 ADRP            X22, #__stack_chk_guard_ptr@PAGE
.text:0000000000006E44                 LDR             X22, [X22,#__stack_chk_guard_ptr@PAGEOFF]
.text:0000000000006E48                 MOV             X19, X2
.text:0000000000006E4C                 MOV             X20, X0
.text:0000000000006E50                 ADD             X23, SP, #0x1F90+var_1F88
.text:0000000000006E54                 LDR             X22, [X22]
.text:0000000000006E58                 ADD             X0, SP, #0x1F90+s ; s
.text:0000000000006E5C                 MOV             W2, #0x1F40 ; n
.text:0000000000006E60                 MOV             W1, WZR ; c
.text:0000000000006E64                 STR             X22, [X23]
.text:0000000000006E68                 STR             WZR, [SP,#0x1F90+var_1F7C]
.text:0000000000006E6C                 BL              .memset
.text:0000000000006E70                 ADRP            X1, #unk_10DEC@PAGE
.text:0000000000006E74                 ADRP            X2, #aJniGetenhanced@PAGE ; "JNI, getEnhancedACDump_Gemalto Start"
.text:0000000000006E78                 ADD             X1, X1, #unk_10DEC@PAGEOFF
.text:0000000000006E7C                 ADD             X2, X2, #aJniGetenhanced@PAGEOFF ; "JNI, getEnhancedACDump_Gemalto Start"
.text:0000000000006E80                 MOV             W0, #4
.text:0000000000006E84                 BL              .__android_log_print
.text:0000000000006E88                 BL              .isFactoryBinary
.text:0000000000006E8C                 ADRP            X1, #unk_10DEC@PAGE
.text:0000000000006E90                 ADD             X1, X1, #unk_10DEC@PAGEOFF
.text:0000000000006E94                 CBZ             W0, loc_6EC4
.text:0000000000006E98                 ADRP            X2, #aGetenhancedacd_3@PAGE ; "getEnhancedACDump_Gemalto, Factory Bina"...
.text:0000000000006E9C                 ADD             X2, X2, #aGetenhancedacd_3@PAGEOFF ; "getEnhancedACDump_Gemalto, Factory Bina"...
.text:0000000000006EA0                 MOV             W0, #4
.text:0000000000006EA4                 BL              .__android_log_print
.text:0000000000006EA8                 BL              .isSWDFactory
.text:0000000000006EAC                 ADRP            X1, #unk_10DEC@PAGE
.text:0000000000006EB0                 ADD             X1, X1, #unk_10DEC@PAGEOFF
.text:0000000000006EB4                 CBZ             W0, loc_6EDC
.text:0000000000006EB8                 ADRP            X2, #aGetenhancedacd_4@PAGE ; "getEnhancedACDump_Gemalto, Swd Factory"
.text:0000000000006EBC                 ADD             X2, X2, #aGetenhancedacd_4@PAGEOFF ; "getEnhancedACDump_Gemalto, Swd Factory"
.text:0000000000006EC0                 B               loc_6ECC
.text:0000000000006EC4 ; ---------------------------------------------------------------------------
.text:0000000000006EC4 loc_6EC4                                ; CODE XREF: Java_com_android_server_SemService_getEnhancedACDumpGemalto+70↑j
.text:0000000000006EC4                 ADRP            X2, #aGetenhancedacd_5@PAGE ; "getEnhancedACDump_Gemalto, Normal Binar"...
.text:0000000000006EC8                 ADD             X2, X2, #aGetenhancedacd_5@PAGEOFF ; "getEnhancedACDump_Gemalto, Normal Binar"...
.text:0000000000006ECC loc_6ECC                                ; CODE XREF: Java_com_android_server_SemService_getEnhancedACDumpGemalto+9C↑j
.text:0000000000006ECC                 MOV             W0, #4
.text:0000000000006ED0                 BL              .__android_log_print
.text:0000000000006ED4                 MOV             W21, #1
.text:0000000000006ED8                 B               loc_6EF0
.text:0000000000006EDC ; ---------------------------------------------------------------------------
.text:0000000000006EDC loc_6EDC                                ; CODE XREF: Java_com_android_server_SemService_getEnhancedACDumpGemalto+90↑j
.text:0000000000006EDC                 ADRP            X2, #aGetenhancedacd_6@PAGE ; "getEnhancedACDump_Gemalto, Nwd Factory"
.text:0000000000006EE0                 ADD             X2, X2, #aGetenhancedacd_6@PAGEOFF ; "getEnhancedACDump_Gemalto, Nwd Factory"
.text:0000000000006EE4                 MOV             W0, #4
.text:0000000000006EE8                 BL              .__android_log_print
.text:0000000000006EEC                 MOV             W21, WZR
.text:0000000000006EF0 loc_6EF0                                ; CODE XREF: Java_com_android_server_SemService_getEnhancedACDumpGemalto+B4↑j
.text:0000000000006EF0                 MOV             W0, W21
.text:0000000000006EF4                 BL              .spiOpen
.text:0000000000006EF8                 CMP             W0, #1
.text:0000000000006EFC                 B.NE            loc_6F24
.text:0000000000006F00                 ADD             X0, SP, #0x1F90+s
.text:0000000000006F04                 ADD             X1, SP, #0x1F90+var_1F7C
.text:0000000000006F08                 BL              .getEnhancedACDump_Gemalto
.text:0000000000006F0C                 CBZ             W0, loc_6FA4
.text:0000000000006F10                 ADRP            X1, #unk_10DEC@PAGE
.text:0000000000006F14                 ADRP            X2, #aGetenhancedacd_7@PAGE ; "getEnhancedACDump_Gemalto failed"
.text:0000000000006F18                 ADD             X1, X1, #unk_10DEC@PAGEOFF
.text:0000000000006F1C                 ADD             X2, X2, #aGetenhancedacd_7@PAGEOFF ; "getEnhancedACDump_Gemalto failed"
.text:0000000000006F20                 B               loc_6F34
.text:0000000000006F24 ; ---------------------------------------------------------------------------
.text:0000000000006F24 loc_6F24                                ; CODE XREF: Java_com_android_server_SemService_getEnhancedACDumpGemalto+D8↑j
.text:0000000000006F24                 ADRP            X1, #unk_10DEC@PAGE
.text:0000000000006F28                 ADRP            X2, #aGetenhancedacd_8@PAGE ; "getEnhancedACDump_Gemalto, spi open fai"...
.text:0000000000006F2C                 ADD             X1, X1, #unk_10DEC@PAGEOFF
.text:0000000000006F30                 ADD             X2, X2, #aGetenhancedacd_8@PAGEOFF ; "getEnhancedACDump_Gemalto, spi open fai"...
.text:0000000000006F34 loc_6F34                                ; CODE XREF: Java_com_android_server_SemService_getEnhancedACDumpGemalto+FC↑j
.text:0000000000006F34                                         ; Java_com_android_server_SemService_getEnhancedACDumpGemalto+1D4↓j
.text:0000000000006F34                 MOV             W0, #6
.text:0000000000006F38                 BL              .__android_log_print
.text:0000000000006F3C loc_6F3C                                ; CODE XREF: Java_com_android_server_SemService_getEnhancedACDumpGemalto+1C0↓j
.text:0000000000006F3C                 MOV             W0, W21
.text:0000000000006F40                 BL              .spiClose
.text:0000000000006F44                 CMP             W0, #1
.text:0000000000006F48                 B.EQ            loc_6F64
.text:0000000000006F4C                 ADRP            X1, #unk_10DEC@PAGE
.text:0000000000006F50                 ADRP            X2, #aGetenhancedacd_9@PAGE ; "getEnhancedACDump_Gemalto, spi close fa"...
.text:0000000000006F54                 ADD             X1, X1, #unk_10DEC@PAGEOFF
.text:0000000000006F58                 ADD             X2, X2, #aGetenhancedacd_9@PAGEOFF ; "getEnhancedACDump_Gemalto, spi close fa"...
.text:0000000000006F5C                 MOV             W0, #6
.text:0000000000006F60                 BL              .__android_log_print
.text:0000000000006F64 loc_6F64                                ; CODE XREF: Java_com_android_server_SemService_getEnhancedACDumpGemalto+124↑j
.text:0000000000006F64                 ADRP            X1, #unk_10DEC@PAGE
.text:0000000000006F68                 ADRP            X2, #aJniGetenhanced_0@PAGE ; "JNI, getEnhancedACDump_Gemalto End"
.text:0000000000006F6C                 ADD             X1, X1, #unk_10DEC@PAGEOFF
.text:0000000000006F70                 ADD             X2, X2, #aJniGetenhanced_0@PAGEOFF ; "JNI, getEnhancedACDump_Gemalto End"
.text:0000000000006F74                 MOV             W0, #4
.text:0000000000006F78                 BL              .__android_log_print
.text:0000000000006F7C                 LDR             W0, [SP,#0x1F90+var_1F7C]
.text:0000000000006F80                 LDR             X8, [X23]
.text:0000000000006F84                 SUB             X8, X22, X8
.text:0000000000006F88                 CBNZ            X8, loc_6FFC
.text:0000000000006F8C                 SUB             SP, X29, #0x30 ; '0'
.text:0000000000006F90                 LDP             X29, X30, [SP,#0x30+var_s0]
.text:0000000000006F94                 LDP             X20, X19, [SP,#0x30+var_10]
.text:0000000000006F98                 LDP             X22, X21, [SP,#0x30+var_20]
.text:0000000000006F9C                 LDP             X24, X23, [SP+0x30+var_30],#0x40
.text:0000000000006FA0                 RET
.text:0000000000006FA4 ; ---------------------------------------------------------------------------
.text:0000000000006FA4 loc_6FA4                                ; CODE XREF: Java_com_android_server_SemService_getEnhancedACDumpGemalto+E8↑j
.text:0000000000006FA4                 LDR             W3, [SP,#0x1F90+var_1F7C]
.text:0000000000006FA8                 CBZ             W3, loc_6FE8
.text:0000000000006FAC                 ADRP            X1, #unk_10DEC@PAGE
.text:0000000000006FB0                 ADRP            X2, #aGetenhancedacd_10@PAGE ; "getEnhancedACDump len: %d"
.text:0000000000006FB4                 ADD             X1, X1, #unk_10DEC@PAGEOFF
.text:0000000000006FB8                 ADD             X2, X2, #aGetenhancedacd_10@PAGEOFF ; "getEnhancedACDump len: %d"
.text:0000000000006FBC                 MOV             W0, #4
.text:0000000000006FC0                 BL              .__android_log_print
.text:0000000000006FC4                 LDR             X8, [X20]
.text:0000000000006FC8                 LDR             W3, [SP,#0x1F90+var_1F7C]
.text:0000000000006FCC                 MOV             W2, WZR
.text:0000000000006FD0                 ADD             X4, SP, #0x1F90+s
.text:0000000000006FD4                 LDR             X8, [X8,#0x680]
.text:0000000000006FD8                 MOV             X0, X20
.text:0000000000006FDC                 MOV             X1, X19
.text:0000000000006FE0                 BLR             X8
.text:0000000000006FE4                 B               loc_6F3C
.text:0000000000006FE8 ; ---------------------------------------------------------------------------
.text:0000000000006FE8 loc_6FE8                                ; CODE XREF: Java_com_android_server_SemService_getEnhancedACDumpGemalto+184↑j
.text:0000000000006FE8                 ADRP            X1, #unk_10DEC@PAGE
.text:0000000000006FEC                 ADRP            X2, #aGetenhancedacd_11@PAGE ; "getEnhancedACDump dataLen == 0"
.text:0000000000006FF0                 ADD             X1, X1, #unk_10DEC@PAGEOFF
.text:0000000000006FF4                 ADD             X2, X2, #aGetenhancedacd_11@PAGEOFF ; "getEnhancedACDump dataLen == 0"
.text:0000000000006FF8                 B               loc_6F34
.text:0000000000006FFC ; ---------------------------------------------------------------------------
.text:0000000000006FFC loc_6FFC                                ; CODE XREF: Java_com_android_server_SemService_getEnhancedACDumpGemalto+164↑j
.text:0000000000006FFC                 BL              .__stack_chk_fail
.text:0000000000006FFC ; } // starts at 6E24
.text:0000000000006FFC ; End of function Java_com_android_server_SemService_getEnhancedACDumpGemalto
.text:0000000000007000 ; =============== S U B R O U T I N E =======================================
.text:0000000000007000 ; Attributes: bp-based frame
.text:0000000000007000                 EXPORT Java_com_android_server_SemService_getHQMMemory
.text:0000000000007000 Java_com_android_server_SemService_getHQMMemory
.text:0000000000007000                                         ; DATA XREF: LOAD:00000000000016D8↑o
.text:0000000000007000 var_430         = -0x430
.text:0000000000007000 var_424         = -0x424
.text:0000000000007000 s               = -0x420
.text:0000000000007000 var_30          = -0x30
.text:0000000000007000 var_20          = -0x20
.text:0000000000007000 var_10          = -0x10
.text:0000000000007000 var_s0          =  0
.text:0000000000007000 ; __unwind {
.text:0000000000007000                 STP             X24, X23, [SP,#-0x10+var_30]!
.text:0000000000007004                 STP             X22, X21, [SP,#0x30+var_20]
.text:0000000000007008                 STP             X20, X19, [SP,#0x30+var_10]
.text:000000000000700C                 STP             X29, X30, [SP,#0x30+var_s0]
.text:0000000000007010                 ADD             X29, SP, #0x30
.text:0000000000007014                 SUB             SP, SP, #0x400
.text:0000000000007018                 ADRP            X22, #__stack_chk_guard_ptr@PAGE
.text:000000000000701C                 LDR             X22, [X22,#__stack_chk_guard_ptr@PAGEOFF]
.text:0000000000007020                 MOV             X19, X2
.text:0000000000007024                 MOV             X20, X0
.text:0000000000007028                 MOV             X23, SP
.text:000000000000702C                 LDR             X22, [X22]
.text:0000000000007030                 ADD             X0, SP, #0x430+s ; s
.text:0000000000007034                 MOV             W2, #0x3E8 ; n
.text:0000000000007038                 MOV             W1, WZR ; c
.text:000000000000703C                 STR             X22, [X23,#0x430+var_430]
.text:0000000000007040                 STR             WZR, [SP,#0x430+var_424]
.text:0000000000007044                 BL              .memset
.text:0000000000007048                 ADRP            X1, #unk_10DEC@PAGE
.text:000000000000704C                 ADRP            X2, #aJniGethqmmemor@PAGE ; "JNI, getHQMMemory start"
.text:0000000000007050                 ADD             X1, X1, #unk_10DEC@PAGEOFF
.text:0000000000007054                 ADD             X2, X2, #aJniGethqmmemor@PAGEOFF ; "JNI, getHQMMemory start"
.text:0000000000007058                 MOV             W0, #4
.text:000000000000705C                 BL              .__android_log_print
.text:0000000000007060                 BL              .openSecureSpi
.text:0000000000007064                 MOV             W21, W0
.text:0000000000007068                 CMN             W21, #0xC8
.text:000000000000706C                 B.EQ            loc_70A8
.text:0000000000007070                 CMP             W21, #1
.text:0000000000007074                 B.NE            loc_70B0
.text:0000000000007078                 ADD             X0, SP, #0x430+s
.text:000000000000707C                 ADD             X1, SP, #0x430+var_424
.text:0000000000007080                 BL              .getHQMMemory
.text:0000000000007084                 CBZ             W0, loc_70CC
.text:0000000000007088                 ADRP            X1, #unk_10DEC@PAGE
.text:000000000000708C                 ADRP            X2, #aGethqmmemoryRe@PAGE ; "getHQMMemory, received an abnormal resp"...
.text:0000000000007090                 ADD             X1, X1, #unk_10DEC@PAGEOFF
.text:0000000000007094                 ADD             X2, X2, #aGethqmmemoryRe@PAGEOFF ; "getHQMMemory, received an abnormal resp"...
.text:0000000000007098                 MOV             W0, #6
.text:000000000000709C                 BL              .__android_log_print
.text:00000000000070A0                 MOV             W21, WZR
.text:00000000000070A4                 B               loc_710C
.text:00000000000070A8 ; ---------------------------------------------------------------------------
.text:00000000000070A8 loc_70A8                                ; CODE XREF: Java_com_android_server_SemService_getHQMMemory+6C↑j
.text:00000000000070A8                 MOV             W21, #0xFFFFFF38
.text:00000000000070AC                 B               loc_7110
.text:00000000000070B0 ; ---------------------------------------------------------------------------
.text:00000000000070B0 loc_70B0                                ; CODE XREF: Java_com_android_server_SemService_getHQMMemory+74↑j
.text:00000000000070B0                 ADRP            X1, #unk_10DEC@PAGE
.text:00000000000070B4                 ADRP            X2, #aGethqmmemoryFa@PAGE ; "getHQMMemory failed due to openSecureSp"...
.text:00000000000070B8                 ADD             X1, X1, #unk_10DEC@PAGEOFF
.text:00000000000070BC                 ADD             X2, X2, #aGethqmmemoryFa@PAGEOFF ; "getHQMMemory failed due to openSecureSp"...
.text:00000000000070C0                 MOV             W0, #6
.text:00000000000070C4                 BL              .__android_log_print
.text:00000000000070C8                 B               loc_710C
.text:00000000000070CC ; ---------------------------------------------------------------------------
.text:00000000000070CC loc_70CC                                ; CODE XREF: Java_com_android_server_SemService_getHQMMemory+84↑j
.text:00000000000070CC                 LDR             W3, [SP,#0x430+var_424]
.text:00000000000070D0                 ADRP            X1, #unk_10DEC@PAGE
.text:00000000000070D4                 ADRP            X2, #aDataLenD@PAGE ; "data len: %d"
.text:00000000000070D8                 ADD             X1, X1, #unk_10DEC@PAGEOFF
.text:00000000000070DC                 ADD             X2, X2, #aDataLenD@PAGEOFF ; "data len: %d"
.text:00000000000070E0                 MOV             W0, #4
.text:00000000000070E4                 BL              .__android_log_print
.text:00000000000070E8                 LDR             X8, [X20]
.text:00000000000070EC                 LDR             W21, [SP,#0x430+var_424]
.text:00000000000070F0                 MOV             W2, WZR
.text:00000000000070F4                 ADD             X4, SP, #0x430+s
.text:00000000000070F8                 LDR             X8, [X8,#0x680]
.text:00000000000070FC                 MOV             X0, X20
.text:0000000000007100                 MOV             X1, X19
.text:0000000000007104                 MOV             W3, W21
.text:0000000000007108                 BLR             X8
.text:000000000000710C loc_710C                                ; CODE XREF: Java_com_android_server_SemService_getHQMMemory+A4↑j
.text:000000000000710C                                         ; Java_com_android_server_SemService_getHQMMemory+C8↑j
.text:000000000000710C                 BL              .closeSecureSpi
.text:0000000000007110 loc_7110                                ; CODE XREF: Java_com_android_server_SemService_getHQMMemory+AC↑j
.text:0000000000007110                 ADRP            X1, #unk_10DEC@PAGE
.text:0000000000007114                 ADRP            X2, #aJniGethqmmemor_0@PAGE ; "JNI, getHQMMemory end"
.text:0000000000007118                 ADD             X1, X1, #unk_10DEC@PAGEOFF
.text:000000000000711C                 ADD             X2, X2, #aJniGethqmmemor_0@PAGEOFF ; "JNI, getHQMMemory end"
.text:0000000000007120                 MOV             W0, #4
.text:0000000000007124                 BL              .__android_log_print
.text:0000000000007128                 LDR             X8, [X23]
.text:000000000000712C                 SUB             X8, X22, X8
.text:0000000000007130                 CBNZ            X8, loc_7150
.text:0000000000007134                 MOV             W0, W21
.text:0000000000007138                 SUB             SP, X29, #0x30 ; '0'
.text:000000000000713C                 LDP             X29, X30, [SP,#0x30+var_s0]
.text:0000000000007140                 LDP             X20, X19, [SP,#0x30+var_10]
.text:0000000000007144                 LDP             X22, X21, [SP,#0x30+var_20]
.text:0000000000007148                 LDP             X24, X23, [SP+0x30+var_30],#0x40
.text:000000000000714C                 RET
.text:0000000000007150 ; ---------------------------------------------------------------------------
.text:0000000000007150 loc_7150                                ; CODE XREF: Java_com_android_server_SemService_getHQMMemory+130↑j
.text:0000000000007150                 BL              .__stack_chk_fail
.text:0000000000007150 ; } // starts at 7000
.text:0000000000007150 ; End of function Java_com_android_server_SemService_getHQMMemory
.text:0000000000007154 ; =============== S U B R O U T I N E =======================================
.text:0000000000007154                 EXPORT Java_com_android_server_SemService_jniIsLccmSwp
.text:0000000000007154 Java_com_android_server_SemService_jniIsLccmSwp
.text:0000000000007154                                         ; DATA XREF: LOAD:0000000000001228↑o
.text:0000000000007154 ; __unwind {
.text:0000000000007154                 B               .isLccmSwpProp
.text:0000000000007154 ; } // starts at 7154
.text:0000000000007154 ; End of function Java_com_android_server_SemService_jniIsLccmSwp
.text:0000000000007158 ; =============== S U B R O U T I N E =======================================
.text:0000000000007158 ; Attributes: bp-based frame
.text:0000000000007158                 EXPORT Java_com_android_server_SemService_checkSeStatus
.text:0000000000007158 Java_com_android_server_SemService_checkSeStatus
.text:0000000000007158                                         ; DATA XREF: LOAD:0000000000000A30↑o
.text:0000000000007158 var_E8          = -0xE8
.text:0000000000007158 var_DC          = -0xDC
.text:0000000000007158 var_D8          = -0xD8
.text:0000000000007158 var_C8          = -0xC8
.text:0000000000007158 s               = -0xB8
.text:0000000000007158 var_30          = -0x30
.text:0000000000007158 var_20          = -0x20
.text:0000000000007158 var_10          = -0x10
.text:0000000000007158 var_s0          =  0
.text:0000000000007158 ; __unwind {
.text:0000000000007158                 STP             X24, X23, [SP,#-0x10+var_30]!
.text:000000000000715C                 STP             X22, X21, [SP,#0x30+var_20]
.text:0000000000007160                 STP             X20, X19, [SP,#0x30+var_10]
.text:0000000000007164                 STP             X29, X30, [SP,#0x30+var_s0]
.text:0000000000007168                 ADD             X29, SP, #0x30
.text:000000000000716C                 SUB             SP, SP, #0xC0
.text:0000000000007170                 ADRP            X23, #__stack_chk_guard_ptr@PAGE
.text:0000000000007174                 LDR             X23, [X23,#__stack_chk_guard_ptr@PAGEOFF]
.text:0000000000007178                 MOV             X22, X2
.text:000000000000717C                 ADRP            X1, #unk_10DEC@PAGE
.text:0000000000007180                 ADRP            X2, #aJniCheckSeStat@PAGE ; "JNI, Check SE Status start"
.text:0000000000007184                 LDR             X23, [X23]
.text:0000000000007188                 MOV             X19, X0
.text:000000000000718C                 ADD             X24, SP, #0xF0+var_E8
.text:0000000000007190                 ADD             X1, X1, #unk_10DEC@PAGEOFF
.text:0000000000007194                 ADD             X2, X2, #aJniCheckSeStat@PAGEOFF ; "JNI, Check SE Status start"
.text:0000000000007198                 MOV             W0, #4
.text:000000000000719C                 MOV             X20, X3
.text:00000000000071A0                 STR             X23, [X24]
.text:00000000000071A4                 STP             XZR, XZR, [SP,#0xF0+var_C8]
.text:00000000000071A8                 STP             XZR, XZR, [SP,#0xF0+var_D8]
.text:00000000000071AC                 BL              .__android_log_print
.text:00000000000071B0                 CBZ             X22, loc_71E8
.text:00000000000071B4                 LDR             X8, [X19]
.text:00000000000071B8                 MOV             X0, X19
.text:00000000000071BC                 MOV             X1, X22
.text:00000000000071C0                 LDR             X8, [X8,#0x558]
.text:00000000000071C4                 BLR             X8
.text:00000000000071C8                 MOV             W21, W0
.text:00000000000071CC                 CMP             W21, #0x11
.text:00000000000071D0                 B.CC            loc_71FC
.text:00000000000071D4                 ADRP            X1, #unk_10DEC@PAGE
.text:00000000000071D8                 ADRP            X2, #aAppletAidSizeI@PAGE ; "applet_aid_size is over the buffer"
.text:00000000000071DC                 ADD             X1, X1, #unk_10DEC@PAGEOFF
.text:00000000000071E0                 ADD             X2, X2, #aAppletAidSizeI@PAGEOFF ; "applet_aid_size is over the buffer"
.text:00000000000071E4                 B               loc_7250
.text:00000000000071E8 ; ---------------------------------------------------------------------------
.text:00000000000071E8 loc_71E8                                ; CODE XREF: Java_com_android_server_SemService_checkSeStatus+58↑j
.text:00000000000071E8                 ADRP            X1, #unk_10DEC@PAGE
.text:00000000000071EC                 ADRP            X2, #aAppletaidIsNul@PAGE ; "appletAid is NULL"
.text:00000000000071F0                 ADD             X1, X1, #unk_10DEC@PAGEOFF
.text:00000000000071F4                 ADD             X2, X2, #aAppletaidIsNul@PAGEOFF ; "appletAid is NULL"
.text:00000000000071F8                 B               loc_72C4
.text:00000000000071FC ; ---------------------------------------------------------------------------
.text:00000000000071FC loc_71FC                                ; CODE XREF: Java_com_android_server_SemService_checkSeStatus+78↑j
.text:00000000000071FC                 LDR             X8, [X19]
.text:0000000000007200                 MOV             W2, WZR
.text:0000000000007204                 ADD             X4, SP, #0xF0+var_C8
.text:0000000000007208                 MOV             X0, X19
.text:000000000000720C                 LDR             X8, [X8,#0x640]
.text:0000000000007210                 MOV             X1, X22
.text:0000000000007214                 MOV             W3, W21
.text:0000000000007218                 BLR             X8
.text:000000000000721C                 CBZ             X20, loc_72B4
.text:0000000000007220                 LDR             X8, [X19]
.text:0000000000007224                 MOV             X0, X19
.text:0000000000007228                 MOV             X1, X20
.text:000000000000722C                 LDR             X8, [X8,#0x558]
.text:0000000000007230                 BLR             X8
.text:0000000000007234                 MOV             W22, W0
.text:0000000000007238                 CMP             W22, #0x11
.text:000000000000723C                 B.CC            loc_72D4
.text:0000000000007240                 ADRP            X1, #unk_10DEC@PAGE
.text:0000000000007244                 ADRP            X2, #aAssociatedAidS@PAGE ; "associated_aid_size is over the buffer"
.text:0000000000007248                 ADD             X1, X1, #unk_10DEC@PAGEOFF
.text:000000000000724C                 ADD             X2, X2, #aAssociatedAidS@PAGEOFF ; "associated_aid_size is over the buffer"
.text:0000000000007250 loc_7250                                ; CODE XREF: Java_com_android_server_SemService_checkSeStatus+8C↑j
.text:0000000000007250                 MOV             W0, #6
.text:0000000000007254                 BL              .__android_log_print
.text:0000000000007258                 ADD             X0, SP, #0xF0+s ; s
.text:000000000000725C                 MOV             W2, #0x80 ; n
.text:0000000000007260                 MOV             W1, WZR ; c
.text:0000000000007264                 BL              .memset
.text:0000000000007268                 ADRP            X2, #aJniExceptionEr@PAGE ; "JNI exception : error code=[%d]"
.text:000000000000726C                 ADD             X2, X2, #aJniExceptionEr@PAGEOFF ; "JNI exception : error code=[%d]"
.text:0000000000007270                 ADD             X0, SP, #0xF0+s ; s
.text:0000000000007274                 MOV             W1, #0x80 ; maxlen
.text:0000000000007278                 MOV             W3, #0xFFFFFFE7
.text:000000000000727C                 MOV             W20, #0xFFFFFFE7
.text:0000000000007280                 BL              .snprintf
.text:0000000000007284                 LDR             X8, [X19]
.text:0000000000007288                 ADRP            X1, #aJavaLangExcept@PAGE ; "java/lang/Exception"
.text:000000000000728C                 ADD             X1, X1, #aJavaLangExcept@PAGEOFF ; "java/lang/Exception"
.text:0000000000007290                 MOV             X0, X19
.text:0000000000007294                 LDR             X21, [X8,#0x70]
.text:0000000000007298                 LDR             X8, [X8,#0x30]
.text:000000000000729C                 BLR             X8
.text:00000000000072A0                 MOV             X1, X0
.text:00000000000072A4                 ADD             X2, SP, #0xF0+s
.text:00000000000072A8                 MOV             X0, X19
.text:00000000000072AC                 BLR             X21
.text:00000000000072B0                 B               loc_7318
.text:00000000000072B4 ; ---------------------------------------------------------------------------
.text:00000000000072B4 loc_72B4                                ; CODE XREF: Java_com_android_server_SemService_checkSeStatus+C4↑j
.text:00000000000072B4                 ADRP            X1, #unk_10DEC@PAGE
.text:00000000000072B8                 ADRP            X2, #aAssociatedaidI@PAGE ; "associatedAid is NULL"
.text:00000000000072BC                 ADD             X1, X1, #unk_10DEC@PAGEOFF
.text:00000000000072C0                 ADD             X2, X2, #aAssociatedaidI@PAGEOFF ; "associatedAid is NULL"
.text:00000000000072C4 loc_72C4                                ; CODE XREF: Java_com_android_server_SemService_checkSeStatus+A0↑j
.text:00000000000072C4                 MOV             W0, #6
.text:00000000000072C8                 BL              .__android_log_print
.text:00000000000072CC                 MOV             W20, #0xFFFFFF6E
.text:00000000000072D0                 B               loc_7334
.text:00000000000072D4 ; ---------------------------------------------------------------------------
.text:00000000000072D4 loc_72D4                                ; CODE XREF: Java_com_android_server_SemService_checkSeStatus+E4↑j
.text:00000000000072D4                 LDR             X8, [X19]
.text:00000000000072D8                 MOV             W2, WZR
.text:00000000000072DC                 ADD             X4, SP, #0xF0+var_D8
.text:00000000000072E0                 MOV             X0, X19
.text:00000000000072E4                 LDR             X8, [X8,#0x640]
.text:00000000000072E8                 MOV             X1, X20
.text:00000000000072EC                 MOV             W3, W22
.text:00000000000072F0                 BLR             X8
.text:00000000000072F4                 ADD             X0, SP, #0xF0+var_C8
.text:00000000000072F8                 ADD             X2, SP, #0xF0+var_D8
.text:00000000000072FC                 ADD             X4, SP, #0xF0+var_DC
.text:0000000000007300                 MOV             W1, W21
.text:0000000000007304                 MOV             W3, W22
.text:0000000000007308                 BL              .checkSeState
.text:000000000000730C                 LDR             W8, [SP,#0xF0+var_DC]
.text:0000000000007310                 CMP             W0, #0
.text:0000000000007314                 CSEL            W20, W8, W0, EQ
.text:0000000000007318 loc_7318                                ; CODE XREF: Java_com_android_server_SemService_checkSeStatus+158↑j
.text:0000000000007318                 ADRP            X1, #unk_10DEC@PAGE
.text:000000000000731C                 ADRP            X2, #aJniCheckSeStat_0@PAGE ; "JNI, Check SE Status end, ret = %d"
.text:0000000000007320                 ADD             X1, X1, #unk_10DEC@PAGEOFF
.text:0000000000007324                 ADD             X2, X2, #aJniCheckSeStat_0@PAGEOFF ; "JNI, Check SE Status end, ret = %d"
.text:0000000000007328                 MOV             W0, #4
.text:000000000000732C                 MOV             W3, W20
.text:0000000000007330                 BL              .__android_log_print
.text:0000000000007334 loc_7334                                ; CODE XREF: Java_com_android_server_SemService_checkSeStatus+178↑j
.text:0000000000007334                 LDR             X8, [X24]
.text:0000000000007338                 SUB             X8, X23, X8
.text:000000000000733C                 CBNZ            X8, loc_735C
.text:0000000000007340                 MOV             W0, W20
.text:0000000000007344                 SUB             SP, X29, #0x30 ; '0'
.text:0000000000007348                 LDP             X29, X30, [SP,#0x30+var_s0]
.text:000000000000734C                 LDP             X20, X19, [SP,#0x30+var_10]
.text:0000000000007350                 LDP             X22, X21, [SP,#0x30+var_20]
.text:0000000000007354                 LDP             X24, X23, [SP+0x30+var_30],#0x40
.text:0000000000007358                 RET
.text:000000000000735C ; ---------------------------------------------------------------------------
.text:000000000000735C loc_735C                                ; CODE XREF: Java_com_android_server_SemService_checkSeStatus+1E4↑j
.text:000000000000735C                 BL              .__stack_chk_fail
.text:000000000000735C ; } // starts at 7158
.text:000000000000735C ; End of function Java_com_android_server_SemService_checkSeStatus
.text:0000000000007360 ; =============== S U B R O U T I N E =======================================
.text:0000000000007360 ; Attributes: bp-based frame
.text:0000000000007360                 EXPORT Java_com_android_server_SemService_startRequestCredentials
.text:0000000000007360 Java_com_android_server_SemService_startRequestCredentials
.text:0000000000007360                                         ; DATA XREF: LOAD:0000000000001180↑o
.text:0000000000007360 var_228         = -0x228
.text:0000000000007360 var_224         = -0x224
.text:0000000000007360 var_F8          = -0xF8
.text:0000000000007360 var_E8          = -0xE8
.text:0000000000007360 s               = -0xD8
.text:0000000000007360 var_58          = -0x58
.text:0000000000007360 var_50          = -0x50
.text:0000000000007360 var_40          = -0x40
.text:0000000000007360 var_30          = -0x30
.text:0000000000007360 var_20          = -0x20
.text:0000000000007360 var_10          = -0x10
.text:0000000000007360 var_s0          =  0
.text:0000000000007360 ; __unwind {
.text:0000000000007360                 STP             X28, X27, [SP,#-0x10+var_50]!
.text:0000000000007364                 STP             X26, X25, [SP,#0x50+var_40]
.text:0000000000007368                 STP             X24, X23, [SP,#0x50+var_30]
.text:000000000000736C                 STP             X22, X21, [SP,#0x50+var_20]
.text:0000000000007370                 STP             X20, X19, [SP,#0x50+var_10]
.text:0000000000007374                 STP             X29, X30, [SP,#0x50+var_s0]
.text:0000000000007378                 ADD             X29, SP, #0x50
.text:000000000000737C                 SUB             SP, SP, #0x1E0
.text:0000000000007380                 ADRP            X26, #__stack_chk_guard_ptr@PAGE
.text:0000000000007384                 LDR             X26, [X26,#__stack_chk_guard_ptr@PAGEOFF]
.text:0000000000007388                 MOV             X24, X2
.text:000000000000738C                 ADRP            X1, #unk_10DEC@PAGE
.text:0000000000007390                 ADRP            X2, #aJniStartreques@PAGE ; "JNI, startRequestCredentials start"
.text:0000000000007394                 LDR             X26, [X26]
.text:0000000000007398                 MOV             X19, X0
.text:000000000000739C                 MOV             W8, #0x12C
.text:00000000000073A0                 ADD             X1, X1, #unk_10DEC@PAGEOFF
.text:00000000000073A4                 ADD             X2, X2, #aJniStartreques@PAGEOFF ; "JNI, startRequestCredentials start"
.text:00000000000073A8                 MOV             W0, #4
.text:00000000000073AC                 MOV             X20, X5
.text:00000000000073B0                 MOV             X22, X4
.text:00000000000073B4                 MOV             X21, X3
.text:00000000000073B8                 STUR            X26, [X29,#var_58]
.text:00000000000073BC                 STP             XZR, XZR, [X29,#var_E8]
.text:00000000000073C0                 STP             XZR, XZR, [X29,#var_F8]
.text:00000000000073C4                 STR             W8, [SP,#0x230+var_228]
.text:00000000000073C8                 BL              .__android_log_print
.text:00000000000073CC                 CBZ             X20, loc_740C
.text:00000000000073D0                 CBZ             X22, loc_7420
.text:00000000000073D4                 CBZ             X24, loc_7434
.text:00000000000073D8                 LDR             X8, [X19]
.text:00000000000073DC                 MOV             X0, X19
.text:00000000000073E0                 MOV             X1, X24
.text:00000000000073E4                 LDR             X8, [X8,#0x558]
.text:00000000000073E8                 BLR             X8
.text:00000000000073EC                 MOV             W23, W0
.text:00000000000073F0                 CMP             W23, #0x11
.text:00000000000073F4                 B.CC            loc_7448
.text:00000000000073F8                 ADRP            X1, #unk_10DEC@PAGE
.text:00000000000073FC                 ADRP            X2, #aAppletAidSizeI@PAGE ; "applet_aid_size is over the buffer"
.text:0000000000007400                 ADD             X1, X1, #unk_10DEC@PAGEOFF
.text:0000000000007404                 ADD             X2, X2, #aAppletAidSizeI@PAGEOFF ; "applet_aid_size is over the buffer"
.text:0000000000007408                 B               loc_749C
.text:000000000000740C ; ---------------------------------------------------------------------------
.text:000000000000740C loc_740C                                ; CODE XREF: Java_com_android_server_SemService_startRequestCredentials+6C↑j
.text:000000000000740C                 ADRP            X1, #unk_10DEC@PAGE
.text:0000000000007410                 ADRP            X2, #aKeyBlobIsNull@PAGE ; "key_blob is NULL"
.text:0000000000007414                 ADD             X1, X1, #unk_10DEC@PAGEOFF
.text:0000000000007418                 ADD             X2, X2, #aKeyBlobIsNull@PAGEOFF ; "key_blob is NULL"
.text:000000000000741C                 B               loc_753C
.text:0000000000007420 ; ---------------------------------------------------------------------------
.text:0000000000007420 loc_7420                                ; CODE XREF: Java_com_android_server_SemService_startRequestCredentials+70↑j
.text:0000000000007420                 ADRP            X1, #unk_10DEC@PAGE
.text:0000000000007424                 ADRP            X2, #aServiceNameIsN@PAGE ; "service_name is NULL"
.text:0000000000007428                 ADD             X1, X1, #unk_10DEC@PAGEOFF
.text:000000000000742C                 ADD             X2, X2, #aServiceNameIsN@PAGEOFF ; "service_name is NULL"
.text:0000000000007430                 B               loc_753C
.text:0000000000007434 ; ---------------------------------------------------------------------------
.text:0000000000007434 loc_7434                                ; CODE XREF: Java_com_android_server_SemService_startRequestCredentials+74↑j
.text:0000000000007434                 ADRP            X1, #unk_10DEC@PAGE
.text:0000000000007438                 ADRP            X2, #aAppletaidIsNul@PAGE ; "appletAid is NULL"
.text:000000000000743C                 ADD             X1, X1, #unk_10DEC@PAGEOFF
.text:0000000000007440                 ADD             X2, X2, #aAppletaidIsNul@PAGEOFF ; "appletAid is NULL"
.text:0000000000007444                 B               loc_753C
.text:0000000000007448 ; ---------------------------------------------------------------------------
.text:0000000000007448 loc_7448                                ; CODE XREF: Java_com_android_server_SemService_startRequestCredentials+94↑j
.text:0000000000007448                 LDR             X8, [X19]
.text:000000000000744C                 MOV             W2, WZR
.text:0000000000007450                 SUB             X4, X29, #-var_E8
.text:0000000000007454                 MOV             X0, X19
.text:0000000000007458                 LDR             X8, [X8,#0x640]
.text:000000000000745C                 MOV             X1, X24
.text:0000000000007460                 MOV             W3, W23
.text:0000000000007464                 BLR             X8
.text:0000000000007468                 CBZ             X21, loc_752C
.text:000000000000746C                 LDR             X8, [X19]
.text:0000000000007470                 MOV             X0, X19
.text:0000000000007474                 MOV             X1, X21
.text:0000000000007478                 LDR             X8, [X8,#0x558]
.text:000000000000747C                 BLR             X8
.text:0000000000007480                 MOV             W24, W0
.text:0000000000007484                 CMP             W24, #0x11
.text:0000000000007488                 B.CC            loc_7578
.text:000000000000748C                 ADRP            X1, #unk_10DEC@PAGE
.text:0000000000007490                 ADRP            X2, #aAssociatedAidS@PAGE ; "associated_aid_size is over the buffer"
.text:0000000000007494                 ADD             X1, X1, #unk_10DEC@PAGEOFF
.text:0000000000007498                 ADD             X2, X2, #aAssociatedAidS@PAGEOFF ; "associated_aid_size is over the buffer"
.text:000000000000749C loc_749C                                ; CODE XREF: Java_com_android_server_SemService_startRequestCredentials+A8↑j
.text:000000000000749C                 MOV             W0, #6
.text:00000000000074A0                 BL              .__android_log_print
.text:00000000000074A4                 MOV             X21, XZR
.text:00000000000074A8 loc_74A8                                ; CODE XREF: Java_com_android_server_SemService_startRequestCredentials+2AC↓j
.text:00000000000074A8                 SUB             X0, X29, #-s ; s
.text:00000000000074AC                 MOV             W2, #0x80 ; n
.text:00000000000074B0                 MOV             W1, WZR ; c
.text:00000000000074B4                 BL              .memset
.text:00000000000074B8                 ADRP            X2, #aJniExceptionEr@PAGE ; "JNI exception : error code=[%d]"
.text:00000000000074BC                 ADD             X2, X2, #aJniExceptionEr@PAGEOFF ; "JNI exception : error code=[%d]"
.text:00000000000074C0                 SUB             X0, X29, #-s ; s
.text:00000000000074C4                 MOV             W1, #0x80 ; maxlen
.text:00000000000074C8                 MOV             W3, #0xFFFFFFE7
.text:00000000000074CC                 MOV             W22, #0xFFFFFFE7
.text:00000000000074D0                 BL              .snprintf
.text:00000000000074D4                 LDR             X8, [X19]
.text:00000000000074D8                 ADRP            X1, #aJavaLangExcept@PAGE ; "java/lang/Exception"
.text:00000000000074DC                 ADD             X1, X1, #aJavaLangExcept@PAGEOFF ; "java/lang/Exception"
.text:00000000000074E0                 MOV             X0, X19
.text:00000000000074E4                 LDR             X20, [X8,#0x70]
.text:00000000000074E8                 LDR             X8, [X8,#0x30]
.text:00000000000074EC                 BLR             X8
.text:00000000000074F0                 MOV             X1, X0
.text:00000000000074F4                 SUB             X2, X29, #-s
.text:00000000000074F8                 MOV             X0, X19
.text:00000000000074FC                 BLR             X20
.text:0000000000007500 loc_7500                                ; CODE XREF: Java_com_android_server_SemService_startRequestCredentials+2D4↓j
.text:0000000000007500                                         ; Java_com_android_server_SemService_startRequestCredentials+314↓j ...
.text:0000000000007500                 CBZ             X21, loc_750C
.text:0000000000007504                 MOV             X0, X21 ; ptr
.text:0000000000007508                 BL              .free
.text:000000000000750C loc_750C                                ; CODE XREF: Java_com_android_server_SemService_startRequestCredentials:loc_7500↑j
.text:000000000000750C                 ADRP            X1, #unk_10DEC@PAGE
.text:0000000000007510                 ADRP            X2, #aJniStartreques_0@PAGE ; "JNI, startRequestCredentials end, ret ="...
.text:0000000000007514                 ADD             X1, X1, #unk_10DEC@PAGEOFF
.text:0000000000007518                 ADD             X2, X2, #aJniStartreques_0@PAGEOFF ; "JNI, startRequestCredentials end, ret ="...
.text:000000000000751C                 MOV             W0, #4
.text:0000000000007520                 MOV             W3, W22
.text:0000000000007524                 BL              .__android_log_print
.text:0000000000007528                 B               loc_7548
.text:000000000000752C ; ---------------------------------------------------------------------------
.text:000000000000752C loc_752C                                ; CODE XREF: Java_com_android_server_SemService_startRequestCredentials+108↑j
.text:000000000000752C                 ADRP            X1, #unk_10DEC@PAGE
.text:0000000000007530                 ADRP            X2, #aAssociatedaidI@PAGE ; "associatedAid is NULL"
.text:0000000000007534                 ADD             X1, X1, #unk_10DEC@PAGEOFF
.text:0000000000007538                 ADD             X2, X2, #aAssociatedaidI@PAGEOFF ; "associatedAid is NULL"
.text:000000000000753C loc_753C                                ; CODE XREF: Java_com_android_server_SemService_startRequestCredentials+BC↑j
.text:000000000000753C                                         ; Java_com_android_server_SemService_startRequestCredentials+D0↑j ...
.text:000000000000753C                 MOV             W0, #6
.text:0000000000007540                 BL              .__android_log_print
.text:0000000000007544                 MOV             W22, #0xFFFFFF6E
.text:0000000000007548 loc_7548                                ; CODE XREF: Java_com_android_server_SemService_startRequestCredentials+1C8↑j
.text:0000000000007548                 LDUR            X8, [X29,#var_58]
.text:000000000000754C                 SUB             X8, X26, X8
.text:0000000000007550                 CBNZ            X8, loc_76A0
.text:0000000000007554                 MOV             W0, W22
.text:0000000000007558                 SUB             SP, X29, #0x50 ; 'P'
.text:000000000000755C                 LDP             X29, X30, [SP,#0x50+var_s0]
.text:0000000000007560                 LDP             X20, X19, [SP,#0x50+var_10]
.text:0000000000007564                 LDP             X22, X21, [SP,#0x50+var_20]
.text:0000000000007568                 LDP             X24, X23, [SP,#0x50+var_30]
.text:000000000000756C                 LDP             X26, X25, [SP,#0x50+var_40]
.text:0000000000007570                 LDP             X28, X27, [SP+0x50+var_50],#0x60
.text:0000000000007574                 RET
.text:0000000000007578 ; ---------------------------------------------------------------------------
.text:0000000000007578 loc_7578                                ; CODE XREF: Java_com_android_server_SemService_startRequestCredentials+128↑j
.text:0000000000007578                 LDR             X8, [X19]
.text:000000000000757C                 MOV             W2, WZR
.text:0000000000007580                 SUB             X4, X29, #-var_F8
.text:0000000000007584                 MOV             X0, X19
.text:0000000000007588                 LDR             X8, [X8,#0x640]
.text:000000000000758C                 MOV             X1, X21
.text:0000000000007590                 MOV             W3, W24
.text:0000000000007594                 BLR             X8
.text:0000000000007598                 LDR             X8, [X19]
.text:000000000000759C                 MOV             X2, XZR
.text:00000000000075A0                 MOV             X0, X19
.text:00000000000075A4                 MOV             X1, X22
.text:00000000000075A8                 LDR             X8, [X8,#0x548]
.text:00000000000075AC                 BLR             X8
.text:00000000000075B0                 MOV             X25, X0
.text:00000000000075B4                 MOV             X21, XZR
.text:00000000000075B8                 CBZ             X25, loc_75E0
.text:00000000000075BC                 MOV             X0, X25 ; s
.text:00000000000075C0                 BL              .strdup
.text:00000000000075C4                 LDR             X8, [X19]
.text:00000000000075C8                 MOV             X21, X0
.text:00000000000075CC                 MOV             X0, X19
.text:00000000000075D0                 MOV             X1, X22
.text:00000000000075D4                 LDR             X8, [X8,#0x550]
.text:00000000000075D8                 MOV             X2, X25
.text:00000000000075DC                 BLR             X8
.text:00000000000075E0 loc_75E0                                ; CODE XREF: Java_com_android_server_SemService_startRequestCredentials+258↑j
.text:00000000000075E0                 MOV             X0, X21 ; s
.text:00000000000075E4                 BL              .strlen
.text:00000000000075E8                 ADD             X8, X0, #1
.text:00000000000075EC                 CMP             X8, #0x10
.text:00000000000075F0                 B.LS            loc_7610
.text:00000000000075F4                 ADRP            X1, #unk_10DEC@PAGE
.text:00000000000075F8                 ADRP            X2, #aServiceNameIsO@PAGE ; "service_name is over the buffer"
.text:00000000000075FC                 ADD             X1, X1, #unk_10DEC@PAGEOFF
.text:0000000000007600                 ADD             X2, X2, #aServiceNameIsO@PAGEOFF ; "service_name is over the buffer"
.text:0000000000007604                 MOV             W0, #6
.text:0000000000007608                 BL              .__android_log_print
.text:000000000000760C                 B               loc_74A8
.text:0000000000007610 ; ---------------------------------------------------------------------------
.text:0000000000007610 loc_7610                                ; CODE XREF: Java_com_android_server_SemService_startRequestCredentials+290↑j
.text:0000000000007610                 SUB             X0, X29, #-var_E8
.text:0000000000007614                 SUB             X2, X29, #-var_F8
.text:0000000000007618                 ADD             X5, SP, #0x230+var_224
.text:000000000000761C                 ADD             X6, SP, #0x230+var_228
.text:0000000000007620                 MOV             W1, W23
.text:0000000000007624                 MOV             W3, W24
.text:0000000000007628                 MOV             X4, X21
.text:000000000000762C                 BL              .startRequestCredentials
.text:0000000000007630                 MOV             W22, W0
.text:0000000000007634                 CBNZ            W22, loc_7500
.text:0000000000007638                 LDR             X8, [X19]
.text:000000000000763C                 LDR             W22, [SP,#0x230+var_228]
.text:0000000000007640                 MOV             X0, X19
.text:0000000000007644                 MOV             X1, X20
.text:0000000000007648                 LDR             X8, [X8,#0x558]
.text:000000000000764C                 BLR             X8
.text:0000000000007650                 CMP             W22, W0
.text:0000000000007654                 B.LS            loc_7678
.text:0000000000007658                 ADRP            X1, #unk_10DEC@PAGE
.text:000000000000765C                 ADRP            X2, #aKeyBlobIsNotEn@PAGE ; "key_blob is not enough buffer size"
.text:0000000000007660                 ADD             X1, X1, #unk_10DEC@PAGEOFF
.text:0000000000007664                 ADD             X2, X2, #aKeyBlobIsNotEn@PAGEOFF ; "key_blob is not enough buffer size"
.text:0000000000007668                 MOV             W0, #6
.text:000000000000766C                 BL              .__android_log_print
.text:0000000000007670                 MOV             W22, #0xFFFFFFE7
.text:0000000000007674                 B               loc_7500
.text:0000000000007678 ; ---------------------------------------------------------------------------
.text:0000000000007678 loc_7678                                ; CODE XREF: Java_com_android_server_SemService_startRequestCredentials+2F4↑j
.text:0000000000007678                 LDR             X8, [X19]
.text:000000000000767C                 LDR             W22, [SP,#0x230+var_228]
.text:0000000000007680                 MOV             W2, WZR
.text:0000000000007684                 ADD             X4, SP, #0x230+var_224
.text:0000000000007688                 LDR             X8, [X8,#0x680]
.text:000000000000768C                 MOV             X0, X19
.text:0000000000007690                 MOV             X1, X20
.text:0000000000007694                 MOV             W3, W22
.text:0000000000007698                 BLR             X8
.text:000000000000769C                 B               loc_7500
.text:00000000000076A0 ; ---------------------------------------------------------------------------
.text:00000000000076A0 loc_76A0                                ; CODE XREF: Java_com_android_server_SemService_startRequestCredentials+1F0↑j
.text:00000000000076A0                 BL              .__stack_chk_fail
.text:00000000000076A0 ; } // starts at 7360
.text:00000000000076A0 ; End of function Java_com_android_server_SemService_startRequestCredentials
.text:00000000000076A4 ; =============== S U B R O U T I N E =======================================
.text:00000000000076A4 ; Attributes: bp-based frame
.text:00000000000076A4                 EXPORT Java_com_android_server_SemService_stopRequestCredentials
.text:00000000000076A4 Java_com_android_server_SemService_stopRequestCredentials
.text:00000000000076A4                                         ; DATA XREF: LOAD:0000000000000A18↑o
.text:00000000000076A4 var_10          = -0x10
.text:00000000000076A4 var_s0          =  0
.text:00000000000076A4 ; __unwind {
.text:00000000000076A4                 STP             X20, X19, [SP,#-0x10+var_10]!
.text:00000000000076A8                 STP             X29, X30, [SP,#0x10+var_s0]
.text:00000000000076AC                 ADD             X29, SP, #0x10
.text:00000000000076B0                 ADRP            X19, #unk_10DEC@PAGE
.text:00000000000076B4                 ADD             X19, X19, #unk_10DEC@PAGEOFF
.text:00000000000076B8                 ADRP            X2, #aJniStoprequest@PAGE ; "JNI, stopRequestCredentials start"
.text:00000000000076BC                 ADD             X2, X2, #aJniStoprequest@PAGEOFF ; "JNI, stopRequestCredentials start"
.text:00000000000076C0                 MOV             W0, #4
.text:00000000000076C4                 MOV             X1, X19
.text:00000000000076C8                 BL              .__android_log_print
.text:00000000000076CC                 BL              .endRequestCredentials
.text:00000000000076D0                 LDP             X29, X30, [SP,#0x10+var_s0]
.text:00000000000076D4                 ADRP            X2, #aJniStoprequest_0@PAGE ; "JNI, stopRequestCredentials end"
.text:00000000000076D8                 ADD             X2, X2, #aJniStoprequest_0@PAGEOFF ; "JNI, stopRequestCredentials end"
.text:00000000000076DC                 MOV             W0, #4
.text:00000000000076E0                 MOV             X1, X19
.text:00000000000076E4                 LDP             X20, X19, [SP+0x10+var_10],#0x20
.text:00000000000076E8                 B               .__android_log_print
.text:00000000000076E8 ; } // starts at 76A4
.text:00000000000076E8 ; End of function Java_com_android_server_SemService_stopRequestCredentials
.text:00000000000076EC ; =============== S U B R O U T I N E =======================================
.text:00000000000076EC ; Attributes: bp-based frame
.text:00000000000076EC                 EXPORT Java_com_android_server_SemService_grdmGetSession
.text:00000000000076EC Java_com_android_server_SemService_grdmGetSession
.text:00000000000076EC                                         ; DATA XREF: LOAD:0000000000001780↑o
.text:00000000000076EC var_s0          =  0
.text:00000000000076EC ; __unwind {
.text:00000000000076EC                 STP             X29, X30, [SP,#-0x10+var_s0]!
.text:00000000000076F0                 MOV             X29, SP
.text:00000000000076F4                 ADRP            X1, #unk_10DEC@PAGE
.text:00000000000076F8                 ADRP            X2, #aJniGrdmgetsess@PAGE ; "JNI, grdmGetSession start"
.text:00000000000076FC                 ADD             X1, X1, #unk_10DEC@PAGEOFF
.text:0000000000007700                 ADD             X2, X2, #aJniGrdmgetsess@PAGEOFF ; "JNI, grdmGetSession start"
.text:0000000000007704                 MOV             W0, #4
.text:0000000000007708                 BL              .__android_log_print
.text:000000000000770C                 MOV             W0, WZR
.text:0000000000007710                 LDP             X29, X30, [SP+var_s0],#0x10
.text:0000000000007714                 RET
.text:0000000000007714 ; } // starts at 76EC
.text:0000000000007714 ; End of function Java_com_android_server_SemService_grdmGetSession
.text:0000000000007718 ; =============== S U B R O U T I N E =======================================
.text:0000000000007718 ; Attributes: bp-based frame
.text:0000000000007718                 EXPORT Java_com_android_server_SemService_grdmRequestKey
.text:0000000000007718 Java_com_android_server_SemService_grdmRequestKey
.text:0000000000007718                                         ; DATA XREF: LOAD:0000000000000F10↑o
.text:0000000000007718 var_s0          =  0
.text:0000000000007718 ; __unwind {
.text:0000000000007718                 STP             X29, X30, [SP,#-0x10+var_s0]!
.text:000000000000771C                 MOV             X29, SP
.text:0000000000007720                 ADRP            X1, #unk_10DEC@PAGE
.text:0000000000007724                 ADRP            X2, #aJniGrdmrequest@PAGE ; "JNI, grdmRequestKey start"
.text:0000000000007728                 ADD             X1, X1, #unk_10DEC@PAGEOFF
.text:000000000000772C                 ADD             X2, X2, #aJniGrdmrequest@PAGEOFF ; "JNI, grdmRequestKey start"
.text:0000000000007730                 MOV             W0, #4
.text:0000000000007734                 BL              .__android_log_print
.text:0000000000007738                 MOV             W0, WZR
.text:000000000000773C                 LDP             X29, X30, [SP+var_s0],#0x10
.text:0000000000007740                 RET
.text:0000000000007740 ; } // starts at 7718
.text:0000000000007740 ; End of function Java_com_android_server_SemService_grdmRequestKey
.text:0000000000007744 ; =============== S U B R O U T I N E =======================================
.text:0000000000007744 ; Attributes: bp-based frame
.text:0000000000007744                 EXPORT Java_com_android_server_SemService_grdmReleaseSession
.text:0000000000007744 Java_com_android_server_SemService_grdmReleaseSession
.text:0000000000007744                                         ; DATA XREF: LOAD:0000000000001528↑o
.text:0000000000007744 var_s0          =  0
.text:0000000000007744 ; __unwind {
.text:0000000000007744                 STP             X29, X30, [SP,#-0x10+var_s0]!
.text:0000000000007748                 MOV             X29, SP
.text:000000000000774C                 ADRP            X1, #unk_10DEC@PAGE
.text:0000000000007750                 ADRP            X2, #aJniGrdmrelease@PAGE ; "JNI, grdmReleaseSession start"
.text:0000000000007754                 ADD             X1, X1, #unk_10DEC@PAGEOFF
.text:0000000000007758                 ADD             X2, X2, #aJniGrdmrelease@PAGEOFF ; "JNI, grdmReleaseSession start"
.text:000000000000775C                 MOV             W0, #4
.text:0000000000007760                 BL              .__android_log_print
.text:0000000000007764                 MOV             W0, WZR
.text:0000000000007768                 LDP             X29, X30, [SP+var_s0],#0x10
.text:000000000000776C                 RET
.text:000000000000776C ; } // starts at 7744
.text:000000000000776C ; End of function Java_com_android_server_SemService_grdmReleaseSession
.text:0000000000007770 ; =============== S U B R O U T I N E =======================================
.text:0000000000007770 ; Attributes: bp-based frame
.text:0000000000007770                 EXPORT Java_com_android_server_SemService_startattestation
.text:0000000000007770 Java_com_android_server_SemService_startattestation
.text:0000000000007770                                         ; DATA XREF: LOAD:0000000000000C28↑o
.text:0000000000007770 var_17C0        = -0x17C0
.text:0000000000007770 var_17BC        = -0x17BC
.text:0000000000007770 var_17B8        = -0x17B8
.text:0000000000007770 s               = -0xC00
.text:0000000000007770 var_48          = -0x48
.text:0000000000007770 var_40          = -0x40
.text:0000000000007770 var_30          = -0x30
.text:0000000000007770 var_20          = -0x20
.text:0000000000007770 var_10          = -0x10
.text:0000000000007770 var_s0          =  0
.text:0000000000007770 ; __unwind {
.text:0000000000007770                 STP             X26, X25, [SP,#-0x10+var_40]!
.text:0000000000007774                 STP             X24, X23, [SP,#0x40+var_30]
.text:0000000000007778                 STP             X22, X21, [SP,#0x40+var_20]
.text:000000000000777C                 STP             X20, X19, [SP,#0x40+var_10]
.text:0000000000007780                 STP             X29, X30, [SP,#0x40+var_s0]
.text:0000000000007784                 ADD             X29, SP, #0x40
.text:0000000000007788                 SUB             SP, SP, #1,LSL#12
.text:000000000000778C                 SUB             SP, SP, #0x780
.text:0000000000007790                 ADRP            X25, #__stack_chk_guard_ptr@PAGE
.text:0000000000007794                 LDR             X25, [X25,#__stack_chk_guard_ptr@PAGEOFF]
.text:0000000000007798                 MOV             X22, X2
.text:000000000000779C                 MOV             X21, X0
.text:00000000000077A0                 ADD             X0, SP, #0x17C0+s ; s
.text:00000000000077A4                 LDR             X25, [X25]
.text:00000000000077A8                 MOV             W2, #0xBB8 ; n
.text:00000000000077AC                 MOV             W1, WZR ; c
.text:00000000000077B0                 MOV             W23, W5
.text:00000000000077B4                 MOV             X20, X4
.text:00000000000077B8                 MOV             W24, W3
.text:00000000000077BC                 STUR            X25, [X29,#var_48]
.text:00000000000077C0                 BL              .memset
.text:00000000000077C4                 ADD             X0, SP, #0x17C0+var_17B8 ; s
.text:00000000000077C8                 MOV             W2, #0xBB8 ; n
.text:00000000000077CC                 MOV             W1, WZR ; c
.text:00000000000077D0                 BL              .memset
.text:00000000000077D4                 ADRP            X1, #unk_10DEC@PAGE
.text:00000000000077D8                 ADRP            X2, #aJniGetStaStart@PAGE ; "JNI, Get STA start"
.text:00000000000077DC                 ADD             X1, X1, #unk_10DEC@PAGEOFF
.text:00000000000077E0                 ADD             X2, X2, #aJniGetStaStart@PAGEOFF ; "JNI, Get STA start"
.text:00000000000077E4                 MOV             W0, #4
.text:00000000000077E8                 STP             WZR, WZR, [SP,#0x17C0+var_17C0]
.text:00000000000077EC                 BL              .__android_log_print
.text:00000000000077F0                 BL              .openSecureSpi
.text:00000000000077F4                 MOV             W19, W0
.text:00000000000077F8                 CMN             W19, #0xC8
.text:00000000000077FC                 B.EQ            loc_788C
.text:0000000000007800                 CMP             W19, #1
.text:0000000000007804                 B.NE            loc_7894
.text:0000000000007808                 ADD             X0, SP, #0x17C0+s
.text:000000000000780C                 ADD             X1, SP, #0x17C0+var_17BC
.text:0000000000007810                 ADD             X2, SP, #0x17C0+var_17B8
.text:0000000000007814                 MOV             X3, SP
.text:0000000000007818                 STP             W23, W24, [SP,#0x17C0+var_17C0]
.text:000000000000781C                 BL              .startAttestation
.text:0000000000007820                 MOV             W19, W0
.text:0000000000007824                 TBNZ            W19, #0x1F, loc_78B0
.text:0000000000007828                 LDP             W4, W3, [SP,#0x17C0+var_17C0]
.text:000000000000782C                 ORR             W8, W4, W3
.text:0000000000007830                 CBZ             W8, loc_78D0
.text:0000000000007834                 CMP             W3, #0xBB8
.text:0000000000007838                 B.HI            loc_78F0
.text:000000000000783C                 CMP             W4, #0xBB9
.text:0000000000007840                 B.CS            loc_78F0
.text:0000000000007844                 LDR             X8, [X21]
.text:0000000000007848                 ADD             W3, W3, #2
.text:000000000000784C                 MOV             W2, WZR
.text:0000000000007850                 ADD             X4, SP, #0x17C0+s
.text:0000000000007854                 LDR             X8, [X8,#0x680]
.text:0000000000007858                 MOV             X0, X21
.text:000000000000785C                 MOV             X1, X22
.text:0000000000007860                 BLR             X8
.text:0000000000007864                 LDR             X8, [X21]
.text:0000000000007868                 LDR             W9, [SP,#0x17C0+var_17C0]
.text:000000000000786C                 MOV             W2, WZR
.text:0000000000007870                 ADD             X4, SP, #0x17C0+var_17B8
.text:0000000000007874                 LDR             X8, [X8,#0x680]
.text:0000000000007878                 ADD             W3, W9, #2
.text:000000000000787C                 MOV             X0, X21
.text:0000000000007880                 MOV             X1, X20
.text:0000000000007884                 BLR             X8
.text:0000000000007888                 B               loc_790C
.text:000000000000788C ; ---------------------------------------------------------------------------
.text:000000000000788C loc_788C                                ; CODE XREF: Java_com_android_server_SemService_startattestation+8C↑j
.text:000000000000788C                 MOV             W19, #0xFFFFFF38
.text:0000000000007890                 B               loc_7910
.text:0000000000007894 ; ---------------------------------------------------------------------------
.text:0000000000007894 loc_7894                                ; CODE XREF: Java_com_android_server_SemService_startattestation+94↑j
.text:0000000000007894                 ADRP            X1, #unk_10DEC@PAGE
.text:0000000000007898                 ADRP            X2, #aStaFailedDueTo@PAGE ; "STA failed due to openSecureSpi fail"
.text:000000000000789C                 ADD             X1, X1, #unk_10DEC@PAGEOFF
.text:00000000000078A0                 ADD             X2, X2, #aStaFailedDueTo@PAGEOFF ; "STA failed due to openSecureSpi fail"
.text:00000000000078A4                 MOV             W0, #6
.text:00000000000078A8                 BL              .__android_log_print
.text:00000000000078AC                 B               loc_790C
.text:00000000000078B0 ; ---------------------------------------------------------------------------
.text:00000000000078B0 loc_78B0                                ; CODE XREF: Java_com_android_server_SemService_startattestation+B4↑j
.text:00000000000078B0                 ADRP            X1, #unk_10DEC@PAGE
.text:00000000000078B4                 ADRP            X2, #aStaErrorD@PAGE ; "STA Error %d"
.text:00000000000078B8                 ADD             X1, X1, #unk_10DEC@PAGEOFF
.text:00000000000078BC                 ADD             X2, X2, #aStaErrorD@PAGEOFF ; "STA Error %d"
.text:00000000000078C0                 MOV             W0, #6
.text:00000000000078C4                 MOV             W3, W19
.text:00000000000078C8                 BL              .__android_log_print
.text:00000000000078CC                 B               loc_790C
.text:00000000000078D0 ; ---------------------------------------------------------------------------
.text:00000000000078D0 loc_78D0                                ; CODE XREF: Java_com_android_server_SemService_startattestation+C0↑j
.text:00000000000078D0                 ADRP            X1, #unk_10DEC@PAGE
.text:00000000000078D4                 ADRP            X2, #aStaDatalen0@PAGE ; "STA dataLen <= 0"
.text:00000000000078D8                 ADD             X1, X1, #unk_10DEC@PAGEOFF
.text:00000000000078DC                 ADD             X2, X2, #aStaDatalen0@PAGEOFF ; "STA dataLen <= 0"
.text:00000000000078E0                 MOV             W0, #6
.text:00000000000078E4                 BL              .__android_log_print
.text:00000000000078E8                 MOV             W19, #0xFFFFFFFF
.text:00000000000078EC                 B               loc_790C
.text:00000000000078F0 ; ---------------------------------------------------------------------------
.text:00000000000078F0 loc_78F0                                ; CODE XREF: Java_com_android_server_SemService_startattestation+C8↑j
.text:00000000000078F0                                         ; Java_com_android_server_SemService_startattestation+D0↑j
.text:00000000000078F0                 ADRP            X1, #unk_10DEC@PAGE
.text:00000000000078F4                 ADRP            X2, #aStaOverDD@PAGE ; "STA Over %d %d"
.text:00000000000078F8                 ADD             X1, X1, #unk_10DEC@PAGEOFF
.text:00000000000078FC                 ADD             X2, X2, #aStaOverDD@PAGEOFF ; "STA Over %d %d"
.text:0000000000007900                 MOV             W0, #6
.text:0000000000007904                 BL              .__android_log_print
.text:0000000000007908                 MOV             W19, #0xFFFFFFE7
.text:000000000000790C loc_790C                                ; CODE XREF: Java_com_android_server_SemService_startattestation+118↑j
.text:000000000000790C                                         ; Java_com_android_server_SemService_startattestation+13C↑j ...
.text:000000000000790C                 BL              .closeSecureSpi
.text:0000000000007910 loc_7910                                ; CODE XREF: Java_com_android_server_SemService_startattestation+120↑j
.text:0000000000007910                 ADRP            X1, #unk_10DEC@PAGE
.text:0000000000007914                 ADRP            X2, #aJniCheckStarta@PAGE ; "JNI, Check StartAttestation end"
.text:0000000000007918                 ADD             X1, X1, #unk_10DEC@PAGEOFF
.text:000000000000791C                 ADD             X2, X2, #aJniCheckStarta@PAGEOFF ; "JNI, Check StartAttestation end"
.text:0000000000007920                 MOV             W0, #4
.text:0000000000007924                 BL              .__android_log_print
.text:0000000000007928                 LDUR            X8, [X29,#var_48]
.text:000000000000792C                 SUB             X8, X25, X8
.text:0000000000007930                 CBNZ            X8, loc_7954
.text:0000000000007934                 MOV             W0, W19
.text:0000000000007938                 SUB             SP, X29, #0x40 ; '@'
.text:000000000000793C                 LDP             X29, X30, [SP,#0x40+var_s0]
.text:0000000000007940                 LDP             X20, X19, [SP,#0x40+var_10]
.text:0000000000007944                 LDP             X22, X21, [SP,#0x40+var_20]
.text:0000000000007948                 LDP             X24, X23, [SP,#0x40+var_30]
.text:000000000000794C                 LDP             X26, X25, [SP+0x40+var_40],#0x50
.text:0000000000007950                 RET
.text:0000000000007954 ; ---------------------------------------------------------------------------
.text:0000000000007954 loc_7954                                ; CODE XREF: Java_com_android_server_SemService_startattestation+1C0↑j
.text:0000000000007954                 BL              .__stack_chk_fail
.text:0000000000007954 ; } // starts at 7770
.text:0000000000007954 ; End of function Java_com_android_server_SemService_startattestation
.text:0000000000007958 ; =============== S U B R O U T I N E =======================================
.text:0000000000007958 ; Attributes: bp-based frame
.text:0000000000007958                 EXPORT Java_com_android_server_SemService_continueattestation
.text:0000000000007958 Java_com_android_server_SemService_continueattestation
.text:0000000000007958                                         ; DATA XREF: LOAD:0000000000001018↑o
.text:0000000000007958 var_C10         = -0xC10
.text:0000000000007958 var_C04         = -0xC04
.text:0000000000007958 s               = -0xC00
.text:0000000000007958 var_40          = -0x40
.text:0000000000007958 var_30          = -0x30
.text:0000000000007958 var_20          = -0x20
.text:0000000000007958 var_10          = -0x10
.text:0000000000007958 var_s0          =  0
.text:0000000000007958 ; __unwind {
.text:0000000000007958                 STP             X26, X25, [SP,#-0x10+var_40]!
.text:000000000000795C                 STP             X24, X23, [SP,#0x40+var_30]
.text:0000000000007960                 STP             X22, X21, [SP,#0x40+var_20]
.text:0000000000007964                 STP             X20, X19, [SP,#0x40+var_10]
.text:0000000000007968                 STP             X29, X30, [SP,#0x40+var_s0]
.text:000000000000796C                 ADD             X29, SP, #0x40
.text:0000000000007970                 SUB             SP, SP, #0xBD0
.text:0000000000007974                 ADRP            X24, #__stack_chk_guard_ptr@PAGE
.text:0000000000007978                 LDR             X24, [X24,#__stack_chk_guard_ptr@PAGEOFF]
.text:000000000000797C                 MOV             X22, X2
.text:0000000000007980                 MOV             X21, X0
.text:0000000000007984                 MOV             X25, SP
.text:0000000000007988                 LDR             X24, [X24]
.text:000000000000798C                 ADD             X0, SP, #0xC10+s ; s
.text:0000000000007990                 MOV             W2, #0xBB8 ; n
.text:0000000000007994                 MOV             W1, WZR ; c
.text:0000000000007998                 MOV             X20, X4
.text:000000000000799C                 STR             X24, [X25,#0xC10+var_C10]
.text:00000000000079A0                 STR             W3, [SP,#0xC10+var_C04]
.text:00000000000079A4                 BL              .memset
.text:00000000000079A8                 ADRP            X1, #unk_10DEC@PAGE
.text:00000000000079AC                 ADRP            X2, #aJniGetContStar@PAGE ; "JNI, Get CONT start"
.text:00000000000079B0                 ADD             X1, X1, #unk_10DEC@PAGEOFF
.text:00000000000079B4                 ADD             X2, X2, #aJniGetContStar@PAGEOFF ; "JNI, Get CONT start"
.text:00000000000079B8                 MOV             W0, #4
.text:00000000000079BC                 BL              .__android_log_print
.text:00000000000079C0                 BL              .openSecureSpi
.text:00000000000079C4                 MOV             W19, W0
.text:00000000000079C8                 CMN             W19, #0xC8
.text:00000000000079CC                 B.EQ            loc_7A54
.text:00000000000079D0                 CMP             W19, #1
.text:00000000000079D4                 B.NE            loc_7A5C
.text:00000000000079D8                 LDR             X8, [X21]
.text:00000000000079DC                 MOV             X2, XZR
.text:00000000000079E0                 MOV             X0, X21
.text:00000000000079E4                 MOV             X1, X22
.text:00000000000079E8                 LDR             X8, [X8,#0x548]
.text:00000000000079EC                 BLR             X8
.text:00000000000079F0                 ADD             X1, SP, #0xC10+var_C04
.text:00000000000079F4                 MOV             X22, X0
.text:00000000000079F8                 BL              .contAttestation
.text:00000000000079FC                 MOV             W19, W0
.text:0000000000007A00                 ADRP            X1, #unk_10DEC@PAGE
.text:0000000000007A04                 ADRP            X2, #aContRetD@PAGE ; "CONT Ret : %d"
.text:0000000000007A08                 ADD             X1, X1, #unk_10DEC@PAGEOFF
.text:0000000000007A0C                 ADD             X2, X2, #aContRetD@PAGEOFF ; "CONT Ret : %d"
.text:0000000000007A10                 MOV             W0, #4
.text:0000000000007A14                 MOV             W3, W19
.text:0000000000007A18                 BL              .__android_log_print
.text:0000000000007A1C                 LDR             W8, [SP,#0xC10+var_C04]
.text:0000000000007A20                 TBNZ            W19, #0x1F, loc_7A78
.text:0000000000007A24                 CBZ             W8, loc_7A78
.text:0000000000007A28                 SXTW            X23, W8
.text:0000000000007A2C                 CMP             W23, #0xBB9
.text:0000000000007A30                 B.LT            loc_7A98
.text:0000000000007A34                 ADRP            X1, #unk_10DEC@PAGE
.text:0000000000007A38                 ADRP            X2, #aContOverD@PAGE ; "CONT Over %d"
.text:0000000000007A3C                 ADD             X1, X1, #unk_10DEC@PAGEOFF
.text:0000000000007A40                 ADD             X2, X2, #aContOverD@PAGEOFF ; "CONT Over %d"
.text:0000000000007A44                 MOV             W0, #6
.text:0000000000007A48                 MOV             W3, W23
.text:0000000000007A4C                 BL              .__android_log_print
.text:0000000000007A50                 B               loc_7ACC
.text:0000000000007A54 ; ---------------------------------------------------------------------------
.text:0000000000007A54 loc_7A54                                ; CODE XREF: Java_com_android_server_SemService_continueattestation+74↑j
.text:0000000000007A54                 MOV             W19, #0xFFFFFF38
.text:0000000000007A58                 B               loc_7AD0
.text:0000000000007A5C ; ---------------------------------------------------------------------------
.text:0000000000007A5C loc_7A5C                                ; CODE XREF: Java_com_android_server_SemService_continueattestation+7C↑j
.text:0000000000007A5C                 ADRP            X1, #unk_10DEC@PAGE
.text:0000000000007A60                 ADRP            X2, #aContFailedDueT@PAGE ; "CONT failed due to openSecureSpi fail"
.text:0000000000007A64                 ADD             X1, X1, #unk_10DEC@PAGEOFF
.text:0000000000007A68                 ADD             X2, X2, #aContFailedDueT@PAGEOFF ; "CONT failed due to openSecureSpi fail"
.text:0000000000007A6C                 MOV             W0, #6
.text:0000000000007A70                 BL              .__android_log_print
.text:0000000000007A74                 B               loc_7ACC
.text:0000000000007A78 ; ---------------------------------------------------------------------------
.text:0000000000007A78 loc_7A78                                ; CODE XREF: Java_com_android_server_SemService_continueattestation+C8↑j
.text:0000000000007A78                                         ; Java_com_android_server_SemService_continueattestation+CC↑j
.text:0000000000007A78                 ADRP            X1, #unk_10DEC@PAGE
.text:0000000000007A7C                 ADRP            X2, #aGetContErrorD@PAGE ; "Get CONT Error : %d"
.text:0000000000007A80                 ADD             X1, X1, #unk_10DEC@PAGEOFF
.text:0000000000007A84                 ADD             X2, X2, #aGetContErrorD@PAGEOFF ; "Get CONT Error : %d"
.text:0000000000007A88                 MOV             W0, #6
.text:0000000000007A8C                 MOV             W3, W19
.text:0000000000007A90                 BL              .__android_log_print
.text:0000000000007A94                 B               loc_7ACC
.text:0000000000007A98 ; ---------------------------------------------------------------------------
.text:0000000000007A98 loc_7A98                                ; CODE XREF: Java_com_android_server_SemService_continueattestation+D8↑j
.text:0000000000007A98                 ADD             X0, SP, #0xC10+s ; dest
.text:0000000000007A9C                 MOV             X1, X22 ; src
.text:0000000000007AA0                 MOV             X2, X23 ; n
.text:0000000000007AA4                 BL              .memcpy
.text:0000000000007AA8                 LDR             X8, [X21]
.text:0000000000007AAC                 MOV             W2, WZR
.text:0000000000007AB0                 ADD             X4, SP, #0xC10+s
.text:0000000000007AB4                 MOV             X0, X21
.text:0000000000007AB8                 LDR             X8, [X8,#0x680]
.text:0000000000007ABC                 MOV             X1, X20
.text:0000000000007AC0                 MOV             W3, W23
.text:0000000000007AC4                 BLR             X8
.text:0000000000007AC8                 LDR             W19, [SP,#0xC10+var_C04]
.text:0000000000007ACC loc_7ACC                                ; CODE XREF: Java_com_android_server_SemService_continueattestation+F8↑j
.text:0000000000007ACC                                         ; Java_com_android_server_SemService_continueattestation+11C↑j ...
.text:0000000000007ACC                 BL              .closeSecureSpi
.text:0000000000007AD0 loc_7AD0                                ; CODE XREF: Java_com_android_server_SemService_continueattestation+100↑j
.text:0000000000007AD0                 ADRP            X1, #unk_10DEC@PAGE
.text:0000000000007AD4                 ADRP            X2, #aJniCheckContin@PAGE ; "JNI, Check ContinueAttestation end"
.text:0000000000007AD8                 ADD             X1, X1, #unk_10DEC@PAGEOFF
.text:0000000000007ADC                 ADD             X2, X2, #aJniCheckContin@PAGEOFF ; "JNI, Check ContinueAttestation end"
.text:0000000000007AE0                 MOV             W0, #4
.text:0000000000007AE4                 BL              .__android_log_print
.text:0000000000007AE8                 LDR             X8, [X25]
.text:0000000000007AEC                 SUB             X8, X24, X8
.text:0000000000007AF0                 CBNZ            X8, loc_7B14
.text:0000000000007AF4                 MOV             W0, W19
.text:0000000000007AF8                 SUB             SP, X29, #0x40 ; '@'
.text:0000000000007AFC                 LDP             X29, X30, [SP,#0x40+var_s0]
.text:0000000000007B00                 LDP             X20, X19, [SP,#0x40+var_10]
.text:0000000000007B04                 LDP             X22, X21, [SP,#0x40+var_20]
.text:0000000000007B08                 LDP             X24, X23, [SP,#0x40+var_30]
.text:0000000000007B0C                 LDP             X26, X25, [SP+0x40+var_40],#0x50
.text:0000000000007B10                 RET
.text:0000000000007B14 ; ---------------------------------------------------------------------------
.text:0000000000007B14 loc_7B14                                ; CODE XREF: Java_com_android_server_SemService_continueattestation+198↑j
.text:0000000000007B14                 BL              .__stack_chk_fail
.text:0000000000007B14 ; } // starts at 7958
.text:0000000000007B14 ; End of function Java_com_android_server_SemService_continueattestation
.text:0000000000007B18 ; =============== S U B R O U T I N E =======================================
.text:0000000000007B18 ; Attributes: bp-based frame
.text:0000000000007B18                 EXPORT Java_com_android_server_SemService_getpk
.text:0000000000007B18 Java_com_android_server_SemService_getpk
.text:0000000000007B18                                         ; DATA XREF: LOAD:0000000000001468↑o
.text:0000000000007B18 var_168         = -0x168
.text:0000000000007B18 dest            = -0x15E
.text:0000000000007B18 var_30          = -0x30
.text:0000000000007B18 var_20          = -0x20
.text:0000000000007B18 var_10          = -0x10
.text:0000000000007B18 var_s0          =  0
.text:0000000000007B18 ; __unwind {
.text:0000000000007B18                 STP             X24, X23, [SP,#-0x10+var_30]!
.text:0000000000007B1C                 STP             X22, X21, [SP,#0x30+var_20]
.text:0000000000007B20                 STP             X20, X19, [SP,#0x30+var_10]
.text:0000000000007B24                 STP             X29, X30, [SP,#0x30+var_s0]
.text:0000000000007B28                 ADD             X29, SP, #0x30
.text:0000000000007B2C                 SUB             SP, SP, #0x140
.text:0000000000007B30                 ADRP            X22, #__stack_chk_guard_ptr@PAGE
.text:0000000000007B34                 LDR             X22, [X22,#__stack_chk_guard_ptr@PAGEOFF]
.text:0000000000007B38                 ADRP            X1, #unk_11DC4@PAGE
.text:0000000000007B3C                 MOV             X19, X2
.text:0000000000007B40                 MOV             X20, X0
.text:0000000000007B44                 LDR             X22, [X22]
.text:0000000000007B48                 ADD             X23, SP, #0x170+var_168
.text:0000000000007B4C                 ADD             X1, X1, #unk_11DC4@PAGEOFF ; src
.text:0000000000007B50                 ADD             X0, SP, #0x170+dest ; dest
.text:0000000000007B54                 MOV             W2, #0x126 ; n
.text:0000000000007B58                 STR             X22, [X23]
.text:0000000000007B5C                 BL              .memcpy
.text:0000000000007B60                 ADRP            X21, #unk_10DEC@PAGE
.text:0000000000007B64                 ADD             X21, X21, #unk_10DEC@PAGEOFF
.text:0000000000007B68                 ADRP            X2, #aJniGetPkStart@PAGE ; "JNI, Get PK start"
.text:0000000000007B6C                 ADD             X2, X2, #aJniGetPkStart@PAGEOFF ; "JNI, Get PK start"
.text:0000000000007B70                 MOV             W0, #4
.text:0000000000007B74                 MOV             X1, X21
.text:0000000000007B78                 BL              .__android_log_print
.text:0000000000007B7C                 LDR             X8, [X20]
.text:0000000000007B80                 MOV             W2, WZR
.text:0000000000007B84                 MOV             W3, #0x126
.text:0000000000007B88                 ADD             X4, SP, #0x170+dest
.text:0000000000007B8C                 LDR             X8, [X8,#0x680]
.text:0000000000007B90                 MOV             X0, X20
.text:0000000000007B94                 MOV             X1, X19
.text:0000000000007B98                 BLR             X8
.text:0000000000007B9C                 ADRP            X2, #aJniCheckPkEnd@PAGE ; "JNI, Check PK end"
.text:0000000000007BA0                 ADD             X2, X2, #aJniCheckPkEnd@PAGEOFF ; "JNI, Check PK end"
.text:0000000000007BA4                 MOV             W0, #4
.text:0000000000007BA8                 MOV             X1, X21
.text:0000000000007BAC                 BL              .__android_log_print
.text:0000000000007BB0                 LDR             X8, [X23]
.text:0000000000007BB4                 SUB             X8, X22, X8
.text:0000000000007BB8                 CBNZ            X8, loc_7BD8
.text:0000000000007BBC                 MOV             W0, #0x126
.text:0000000000007BC0                 SUB             SP, X29, #0x30 ; '0'
.text:0000000000007BC4                 LDP             X29, X30, [SP,#0x30+var_s0]
.text:0000000000007BC8                 LDP             X20, X19, [SP,#0x30+var_10]
.text:0000000000007BCC                 LDP             X22, X21, [SP,#0x30+var_20]
.text:0000000000007BD0                 LDP             X24, X23, [SP+0x30+var_30],#0x40
.text:0000000000007BD4                 RET
.text:0000000000007BD8 ; ---------------------------------------------------------------------------
.text:0000000000007BD8 loc_7BD8                                ; CODE XREF: Java_com_android_server_SemService_getpk+A0↑j
.text:0000000000007BD8                 BL              .__stack_chk_fail
.text:0000000000007BD8 ; } // starts at 7B18
.text:0000000000007BD8 ; End of function Java_com_android_server_SemService_getpk
.text:0000000000007BDC ; =============== S U B R O U T I N E =======================================
.text:0000000000007BDC ; Attributes: bp-based frame
.text:0000000000007BDC                 EXPORT ssp_openSecureSession_public
.text:0000000000007BDC ssp_openSecureSession_public            ; DATA XREF: LOAD:0000000000001960↑o
.text:0000000000007BDC var_16A38       = -0x16A38
.text:0000000000007BDC var_16A2C       = -0x16A2C
.text:0000000000007BDC src             = -0x16930
.text:0000000000007BDC s               = -0x16868
.text:0000000000007BDC var_16864       = -0x16864
.text:0000000000007BDC var_50          = -0x50
.text:0000000000007BDC var_40          = -0x40
.text:0000000000007BDC var_30          = -0x30
.text:0000000000007BDC var_20          = -0x20
.text:0000000000007BDC var_10          = -0x10
.text:0000000000007BDC var_s0          =  0
.text:0000000000007BDC ; __unwind {
.text:0000000000007BDC                 STP             X28, X27, [SP,#-0x10+var_50]!
.text:0000000000007BE0                 STP             X26, X25, [SP,#0x50+var_40]
.text:0000000000007BE4                 STP             X24, X23, [SP,#0x50+var_30]
.text:0000000000007BE8                 STP             X22, X21, [SP,#0x50+var_20]
.text:0000000000007BEC                 STP             X20, X19, [SP,#0x50+var_10]
.text:0000000000007BF0                 STP             X29, X30, [SP,#0x50+var_s0]
.text:0000000000007BF4                 ADD             X29, SP, #0x50
.text:0000000000007BF8                 SUB             SP, SP, #0x16,LSL#12
.text:0000000000007BFC                 SUB             SP, SP, #0x9F0
.text:0000000000007C00                 ADRP            X26, #__stack_chk_guard_ptr@PAGE
.text:0000000000007C04                 LDR             X26, [X26,#__stack_chk_guard_ptr@PAGEOFF]
.text:0000000000007C08                 MOV             X22, X2
.text:0000000000007C0C                 MOV             W2, #0x10000
.text:0000000000007C10                 MOV             W24, W1
.text:0000000000007C14                 LDR             X26, [X26]
.text:0000000000007C18                 MOV             X25, X0
.text:0000000000007C1C                 ADD             X27, SP, #0x16A40+var_16A38
.text:0000000000007C20                 ADD             X0, SP, #0x16A40+s ; s
.text:0000000000007C24                 MOVK            W2, #0x680C ; n
.text:0000000000007C28                 MOV             W1, WZR ; c
.text:0000000000007C2C                 MOV             X19, X5
.text:0000000000007C30                 MOV             X20, X4
.text:0000000000007C34                 MOV             W21, W3
.text:0000000000007C38                 STR             X26, [X27]
.text:0000000000007C3C                 BL              .memset
.text:0000000000007C40                 ADRP            X0, #aEfsSecEfsSspDa@PAGE ; "/efs/sec_efs/ssp_data"
.text:0000000000007C44                 MOV             W28, #0xFFFFFFFF
.text:0000000000007C48                 ADD             X0, X0, #aEfsSecEfsSspDa@PAGEOFF ; "/efs/sec_efs/ssp_data"
.text:0000000000007C4C                 ADD             X1, SP, #0x16A40+src
.text:0000000000007C50                 MOV             W2, #0xC8
.text:0000000000007C54                 STR             W28, [SP,#0x16A40+var_16864]
.text:0000000000007C58                 BL              .c_readFile
.text:0000000000007C5C                 MOV             W23, W0
.text:0000000000007C60                 TBNZ            W23, #0x1F, loc_7D40
.text:0000000000007C64                 ADD             X28, SP, #0x16A40+var_16A2C
.text:0000000000007C68                 ADD             X0, X28, #4 ; dest
.text:0000000000007C6C                 MOV             W2, W24 ; n
.text:0000000000007C70                 MOV             X1, X25 ; src
.text:0000000000007C74                 STR             W24, [SP,#0x16A40+var_16A2C]
.text:0000000000007C78                 BL              .memcpy
.text:0000000000007C7C                 ADD             W8, W24, #4
.text:0000000000007C80                 ADD             W24, W24, #8
.text:0000000000007C84                 ADD             X0, X28, W24,UXTW ; dest
.text:0000000000007C88                 MOV             W2, W21 ; n
.text:0000000000007C8C                 MOV             X1, X22 ; src
.text:0000000000007C90                 STR             W21, [X28,W8,UXTW]
.text:0000000000007C94                 BL              .memcpy
.text:0000000000007C98                 ADD             W8, W24, W21
.text:0000000000007C9C                 ADD             W21, W8, #4
.text:0000000000007CA0                 ADD             X0, X28, W21,UXTW ; dest
.text:0000000000007CA4                 MOV             W2, W23 ; n
.text:0000000000007CA8                 ADD             X1, SP, #0x16A40+src ; src
.text:0000000000007CAC                 STR             W23, [X28,W8,UXTW]
.text:0000000000007CB0                 BL              .memcpy
.text:0000000000007CB4                 ADD             W21, W23, W21
.text:0000000000007CB8                 MOV             W0, #0x1E
.text:0000000000007CBC                 ADD             X1, SP, #0x16A40+var_16A2C
.text:0000000000007CC0                 ADD             X3, SP, #0x16A40+s
.text:0000000000007CC4                 MOV             W2, W21
.text:0000000000007CC8                 BL              .invokeCommand
.text:0000000000007CCC                 LDR             W8, [SP,#0x16A40+var_16864]
.text:0000000000007CD0                 CMN             W8, #0xD
.text:0000000000007CD4                 B.EQ            loc_7D58
.text:0000000000007CD8                 CBZ             W8, loc_7D1C
.text:0000000000007CDC                 ADRP            X1, #aSemPublic@PAGE ; "SEM_PUBLIC"
.text:0000000000007CE0                 ADRP            X2, #aRetryCmdSspOpe@PAGE ; "Retry CMD_SSP_OPEN_SECURE_SESSION_PUBLI"...
.text:0000000000007CE4                 ADD             X1, X1, #aSemPublic@PAGEOFF ; "SEM_PUBLIC"
.text:0000000000007CE8                 ADD             X2, X2, #aRetryCmdSspOpe@PAGEOFF ; "Retry CMD_SSP_OPEN_SECURE_SESSION_PUBLI"...
.text:0000000000007CEC                 MOV             W0, #6
.text:0000000000007CF0                 MOV             W3, #1
.text:0000000000007CF4                 BL              .__android_log_print
.text:0000000000007CF8                 MOV             W0, #0x1E
.text:0000000000007CFC                 ADD             X1, SP, #0x16A40+var_16A2C
.text:0000000000007D00                 ADD             X3, SP, #0x16A40+s
.text:0000000000007D04                 MOV             W2, W21
.text:0000000000007D08                 BL              .invokeCommand
.text:0000000000007D0C                 LDR             W8, [SP,#0x16A40+var_16864]
.text:0000000000007D10                 CMN             W8, #0xD
.text:0000000000007D14                 B.EQ            loc_7D58
.text:0000000000007D18                 CBNZ            W8, loc_7DA0
.text:0000000000007D1C loc_7D1C                                ; CODE XREF: ssp_openSecureSession_public+FC↑j
.text:0000000000007D1C                 MOV             W8, #0x16808
.text:0000000000007D24                 ADD             X9, SP, #0x16A40+s
.text:0000000000007D28                 LDR             W2, [X9,X8] ; n
.text:0000000000007D2C                 ADD             X1, X9, #8 ; src
.text:0000000000007D30                 MOV             X0, X20 ; dest
.text:0000000000007D34                 STR             W2, [X19]
.text:0000000000007D38                 BL              .memcpy
.text:0000000000007D3C                 B               loc_7D70
.text:0000000000007D40 ; ---------------------------------------------------------------------------
.text:0000000000007D40 loc_7D40                                ; CODE XREF: ssp_openSecureSession_public+84↑j
.text:0000000000007D40                 ADRP            X1, #aSemPublic@PAGE ; "SEM_PUBLIC"
.text:0000000000007D44                 ADRP            X2, #aReadkotpFailed@PAGE ; "readKotp() failed!"
.text:0000000000007D48                 STR             W28, [SP,#0x16A40+var_16864]
.text:0000000000007D4C                 ADD             X1, X1, #aSemPublic@PAGEOFF ; "SEM_PUBLIC"
.text:0000000000007D50                 ADD             X2, X2, #aReadkotpFailed@PAGEOFF ; "readKotp() failed!"
.text:0000000000007D54                 B               loc_7D68
.text:0000000000007D58 ; ---------------------------------------------------------------------------
.text:0000000000007D58 loc_7D58                                ; CODE XREF: ssp_openSecureSession_public+F8↑j
.text:0000000000007D58                                         ; ssp_openSecureSession_public+138↑j
.text:0000000000007D58                 ADRP            X1, #aSemPublic@PAGE ; "SEM_PUBLIC"
.text:0000000000007D5C                 ADRP            X2, #aTaIsNotPermitt@PAGE ; "TA is not permitted"
.text:0000000000007D60                 ADD             X1, X1, #aSemPublic@PAGEOFF ; "SEM_PUBLIC"
.text:0000000000007D64                 ADD             X2, X2, #aTaIsNotPermitt@PAGEOFF ; "TA is not permitted"
.text:0000000000007D68 loc_7D68                                ; CODE XREF: ssp_openSecureSession_public+178↑j
.text:0000000000007D68                 MOV             W0, #6
.text:0000000000007D6C                 BL              .__android_log_print
.text:0000000000007D70 loc_7D70                                ; CODE XREF: ssp_openSecureSession_public+160↑j
.text:0000000000007D70                                         ; ssp_openSecureSession_public+1E0↓j
.text:0000000000007D70                 LDR             W0, [SP,#0x16A40+var_16864]
.text:0000000000007D74                 LDR             X8, [X27]
.text:0000000000007D78                 SUB             X8, X26, X8
.text:0000000000007D7C                 CBNZ            X8, loc_7DC0
.text:0000000000007D80                 SUB             SP, X29, #0x50 ; 'P'
.text:0000000000007D84                 LDP             X29, X30, [SP,#0x50+var_s0]
.text:0000000000007D88                 LDP             X20, X19, [SP,#0x50+var_10]
.text:0000000000007D8C                 LDP             X22, X21, [SP,#0x50+var_20]
.text:0000000000007D90                 LDP             X24, X23, [SP,#0x50+var_30]
.text:0000000000007D94                 LDP             X26, X25, [SP,#0x50+var_40]
.text:0000000000007D98                 LDP             X28, X27, [SP+0x50+var_50],#0x60
.text:0000000000007D9C                 RET
.text:0000000000007DA0 ; ---------------------------------------------------------------------------
.text:0000000000007DA0 loc_7DA0                                ; CODE XREF: ssp_openSecureSession_public+13C↑j
.text:0000000000007DA0                 ADRP            X1, #aSemPublic@PAGE ; "SEM_PUBLIC"
.text:0000000000007DA4                 ADRP            X2, #aRetryCmdSspOpe@PAGE ; "Retry CMD_SSP_OPEN_SECURE_SESSION_PUBLI"...
.text:0000000000007DA8                 ADD             X1, X1, #aSemPublic@PAGEOFF ; "SEM_PUBLIC"
.text:0000000000007DAC                 ADD             X2, X2, #aRetryCmdSspOpe@PAGEOFF ; "Retry CMD_SSP_OPEN_SECURE_SESSION_PUBLI"...
.text:0000000000007DB0                 MOV             W0, #6
.text:0000000000007DB4                 MOV             W3, #2
.text:0000000000007DB8                 BL              .__android_log_print
.text:0000000000007DBC                 B               loc_7D70
.text:0000000000007DC0 ; ---------------------------------------------------------------------------
.text:0000000000007DC0 loc_7DC0                                ; CODE XREF: ssp_openSecureSession_public+1A0↑j
.text:0000000000007DC0                 BL              .__stack_chk_fail
.text:0000000000007DC0 ; } // starts at 7BDC
.text:0000000000007DC0 ; End of function ssp_openSecureSession_public
.text:0000000000007DC4 ; =============== S U B R O U T I N E =======================================
.text:0000000000007DC4 ; Attributes: bp-based frame
.text:0000000000007DC4                 EXPORT semWriteFile
.text:0000000000007DC4 semWriteFile                            ; CODE XREF: .semWriteFile+C↑j
.text:0000000000007DC4                                         ; DATA XREF: LOAD:0000000000000AA8↑o ...
.text:0000000000007DC4 var_20          = -0x20
.text:0000000000007DC4 var_10          = -0x10
.text:0000000000007DC4 var_s0          =  0
.text:0000000000007DC4 ; __unwind {
.text:0000000000007DC4                 STP             X22, X21, [SP,#-0x10+var_20]!
.text:0000000000007DC8                 STP             X20, X19, [SP,#0x20+var_10]
.text:0000000000007DCC                 STP             X29, X30, [SP,#0x20+var_s0]
.text:0000000000007DD0                 ADD             X29, SP, #0x20
.text:0000000000007DD4                 MOV             W22, W2
.text:0000000000007DD8                 MOV             X21, X1
.text:0000000000007DDC                 MOV             W1, #0x241 ; oflag
.text:0000000000007DE0                 MOV             W2, #0x1A4
.text:0000000000007DE4                 MOV             X19, X0
.text:0000000000007DE8                 BL              .open
.text:0000000000007DEC                 MOV             W20, W0
.text:0000000000007DF0                 CMN             W20, #1
.text:0000000000007DF4                 B.EQ            loc_7E30
.text:0000000000007DF8                 MOV             W2, W22 ; n
.text:0000000000007DFC                 MOV             W0, W20 ; fd
.text:0000000000007E00                 MOV             X1, X21 ; buf
.text:0000000000007E04                 BL              .write
.text:0000000000007E08                 MOV             X19, X0
.text:0000000000007E0C                 MOV             W0, W20 ; fd
.text:0000000000007E10                 BL              .fsync
.text:0000000000007E14                 MOV             W21, W0
.text:0000000000007E18                 MOV             W0, W20 ; fd
.text:0000000000007E1C                 BL              .close
.text:0000000000007E20                 CMP             W21, #0
.text:0000000000007E24                 MOV             W8, #0xFFFFFFFF
.text:0000000000007E28                 CSEL            W0, W19, W8, EQ
.text:0000000000007E2C                 B               loc_7E50
.text:0000000000007E30 ; ---------------------------------------------------------------------------
.text:0000000000007E30 loc_7E30                                ; CODE XREF: semWriteFile+30↑j
.text:0000000000007E30                 ADRP            X1, #unk_10DEC@PAGE
.text:0000000000007E34                 ADRP            X2, #aFailedToOpenFi@PAGE ; "failed to open file : %s"
.text:0000000000007E38                 ADD             X1, X1, #unk_10DEC@PAGEOFF
.text:0000000000007E3C                 ADD             X2, X2, #aFailedToOpenFi@PAGEOFF ; "failed to open file : %s"
.text:0000000000007E40                 MOV             W0, #6
.text:0000000000007E44                 MOV             X3, X19
.text:0000000000007E48                 BL              .__android_log_print
.text:0000000000007E4C                 MOV             W0, #0xFFFFFFFF
.text:0000000000007E50 loc_7E50                                ; CODE XREF: semWriteFile+68↑j
.text:0000000000007E50                 LDP             X29, X30, [SP,#0x20+var_s0]
.text:0000000000007E54                 LDP             X20, X19, [SP,#0x20+var_10]
.text:0000000000007E58                 LDP             X22, X21, [SP+0x20+var_20],#0x30
.text:0000000000007E5C                 RET
.text:0000000000007E5C ; } // starts at 7DC4
.text:0000000000007E5C ; End of function semWriteFile
.text:0000000000007E60 ; =============== S U B R O U T I N E =======================================
.text:0000000000007E60 ; Attributes: bp-based frame
.text:0000000000007E60                 EXPORT semReadFile
.text:0000000000007E60 semReadFile                             ; DATA XREF: LOAD:0000000000001198↑o
.text:0000000000007E60 var_20          = -0x20
.text:0000000000007E60 var_10          = -0x10
.text:0000000000007E60 var_s0          =  0
.text:0000000000007E60 ; __unwind {
.text:0000000000007E60                 STP             X22, X21, [SP,#-0x10+var_20]!
.text:0000000000007E64                 STP             X20, X19, [SP,#0x20+var_10]
.text:0000000000007E68                 STP             X29, X30, [SP,#0x20+var_s0]
.text:0000000000007E6C                 ADD             X29, SP, #0x20
.text:0000000000007E70                 MOV             X20, X1
.text:0000000000007E74                 MOV             W1, WZR ; oflag
.text:0000000000007E78                 MOV             W22, W2
.text:0000000000007E7C                 MOV             X19, X0
.text:0000000000007E80                 BL              .open
.text:0000000000007E84                 MOV             W21, W0
.text:0000000000007E88                 CMN             W21, #1
.text:0000000000007E8C                 B.EQ            loc_7EB0
.text:0000000000007E90                 MOV             W2, W22 ; nbytes
.text:0000000000007E94                 MOV             W0, W21 ; fd
.text:0000000000007E98                 MOV             X1, X20 ; buf
.text:0000000000007E9C                 BL              .read
.text:0000000000007EA0                 MOV             X19, X0
.text:0000000000007EA4                 MOV             W0, W21 ; fd
.text:0000000000007EA8                 BL              .close
.text:0000000000007EAC                 B               loc_7ED0
.text:0000000000007EB0 ; ---------------------------------------------------------------------------
.text:0000000000007EB0 loc_7EB0                                ; CODE XREF: semReadFile+2C↑j
.text:0000000000007EB0                 ADRP            X1, #unk_10DEC@PAGE
.text:0000000000007EB4                 ADRP            X2, #aFailedToOpenFi@PAGE ; "failed to open file : %s"
.text:0000000000007EB8                 ADD             X1, X1, #unk_10DEC@PAGEOFF
.text:0000000000007EBC                 ADD             X2, X2, #aFailedToOpenFi@PAGEOFF ; "failed to open file : %s"
.text:0000000000007EC0                 MOV             W0, #6
.text:0000000000007EC4                 MOV             X3, X19
.text:0000000000007EC8                 BL              .__android_log_print
.text:0000000000007ECC                 MOV             W19, #0xFFFFFFFF
.text:0000000000007ED0 loc_7ED0                                ; CODE XREF: semReadFile+4C↑j
.text:0000000000007ED0                 MOV             W0, W19
.text:0000000000007ED4                 LDP             X29, X30, [SP,#0x20+var_s0]
.text:0000000000007ED8                 LDP             X20, X19, [SP,#0x20+var_10]
.text:0000000000007EDC                 LDP             X22, X21, [SP+0x20+var_20],#0x30
.text:0000000000007EE0                 RET
.text:0000000000007EE0 ; } // starts at 7E60
.text:0000000000007EE0 ; End of function semReadFile
.text:0000000000007EE4 ; =============== S U B R O U T I N E =======================================
.text:0000000000007EE4 ; Attributes: bp-based frame
.text:0000000000007EE4 ; __int64 __fastcall semGetFileSize(char *file)
.text:0000000000007EE4                 EXPORT semGetFileSize
.text:0000000000007EE4 semGetFileSize                          ; CODE XREF: .semGetFileSize+C↑j
.text:0000000000007EE4                                         ; DATA XREF: LOAD:0000000000001270↑o ...
.text:0000000000007EE4 buf             = -0xA8
.text:0000000000007EE4 var_10          = -0x10
.text:0000000000007EE4 var_s0          =  0
.text:0000000000007EE4 ; __unwind {
.text:0000000000007EE4                 STP             X22, X21, [SP,#-0x10+buf.__unused+0x10]!
.text:0000000000007EE8                 STP             X20, X19, [SP,#0x20+var_10]
.text:0000000000007EEC                 STP             X29, X30, [SP,#0x20+var_s0]
.text:0000000000007EF0                 ADD             X29, SP, #0x20
.text:0000000000007EF4                 SUB             SP, SP, #0x90
.text:0000000000007EF8                 ADRP            X21, #__stack_chk_guard_ptr@PAGE
.text:0000000000007EFC                 LDR             X21, [X21,#__stack_chk_guard_ptr@PAGEOFF]
.text:0000000000007F00                 MOV             X19, X0
.text:0000000000007F04                 LDR             X21, [X21]
.text:0000000000007F08                 STUR            X21, [X29,#buf.__unused+8]
.text:0000000000007F0C                 CBZ             X19, loc_7F54
.text:0000000000007F10                 MOV             W1, WZR ; oflag
.text:0000000000007F14                 MOV             X0, X19 ; file
.text:0000000000007F18                 BL              .open
.text:0000000000007F1C                 MOV             W20, W0
.text:0000000000007F20                 CMN             W20, #1
.text:0000000000007F24                 B.EQ            loc_7F74
.text:0000000000007F28                 ADD             X1, SP, #0xB0+buf ; buf
.text:0000000000007F2C                 MOV             W0, W20 ; fd
.text:0000000000007F30                 BL              .fstat
.text:0000000000007F34                 CMN             W0, #1
.text:0000000000007F38                 B.EQ            loc_7F98
.text:0000000000007F3C                 MOV             W0, W20 ; fd
.text:0000000000007F40                 BL              .close
.text:0000000000007F44                 CMN             W0, #1
.text:0000000000007F48                 B.EQ            loc_7FC4
.text:0000000000007F4C                 LDR             W0, [SP,#0xB0+buf.st_size]
.text:0000000000007F50                 B               loc_7FE4
.text:0000000000007F54 ; ---------------------------------------------------------------------------
.text:0000000000007F54 loc_7F54                                ; CODE XREF: semGetFileSize+28↑j
.text:0000000000007F54                 ADRP            X1, #unk_10DEC@PAGE
.text:0000000000007F58                 ADRP            X2, #(aCanTSetSInvali+0x11)@PAGE ; "invalid parameter"
.text:0000000000007F5C                 ADD             X1, X1, #unk_10DEC@PAGEOFF
.text:0000000000007F60                 ADD             X2, X2, #(aCanTSetSInvali+0x11)@PAGEOFF ; "invalid parameter"
.text:0000000000007F64                 MOV             W0, #6
.text:0000000000007F68                 BL              .__android_log_print
.text:0000000000007F6C                 MOV             W0, #0xFFFFFFFF
.text:0000000000007F70                 B               loc_7FE4
.text:0000000000007F74 ; ---------------------------------------------------------------------------
.text:0000000000007F74 loc_7F74                                ; CODE XREF: semGetFileSize+40↑j
.text:0000000000007F74                 ADRP            X1, #unk_10DEC@PAGE
.text:0000000000007F78                 ADRP            X2, #aFailedToOpenAF@PAGE ; "failed to open a file : %s"
.text:0000000000007F7C                 ADD             X1, X1, #unk_10DEC@PAGEOFF
.text:0000000000007F80                 ADD             X2, X2, #aFailedToOpenAF@PAGEOFF ; "failed to open a file : %s"
.text:0000000000007F84                 MOV             W0, #6
.text:0000000000007F88                 MOV             X3, X19
.text:0000000000007F8C                 BL              .__android_log_print
.text:0000000000007F90                 MOV             W0, #0xFFFFFFFF
.text:0000000000007F94                 B               loc_7FE4
.text:0000000000007F98 ; ---------------------------------------------------------------------------
.text:0000000000007F98 loc_7F98                                ; CODE XREF: semGetFileSize+54↑j
.text:0000000000007F98                 ADRP            X1, #unk_10DEC@PAGE
.text:0000000000007F9C                 ADRP            X2, #aFailedToGetInf@PAGE ; "failed to get information about a file:"...
.text:0000000000007FA0                 ADD             X1, X1, #unk_10DEC@PAGEOFF
.text:0000000000007FA4                 ADD             X2, X2, #aFailedToGetInf@PAGEOFF ; "failed to get information about a file:"...
.text:0000000000007FA8                 MOV             W0, #6
.text:0000000000007FAC                 MOV             X3, X19
.text:0000000000007FB0                 BL              .__android_log_print
.text:0000000000007FB4                 MOV             W0, W20 ; fd
.text:0000000000007FB8                 BL              .close
.text:0000000000007FBC                 CMN             W0, #1
.text:0000000000007FC0                 B.NE            loc_7FE0
.text:0000000000007FC4 loc_7FC4                                ; CODE XREF: semGetFileSize+64↑j
.text:0000000000007FC4                 ADRP            X1, #unk_10DEC@PAGE
.text:0000000000007FC8                 ADRP            X2, #aFailedToCloseA@PAGE ; "failed to close a descriptor of a file:"...
.text:0000000000007FCC                 ADD             X1, X1, #unk_10DEC@PAGEOFF
.text:0000000000007FD0                 ADD             X2, X2, #aFailedToCloseA@PAGEOFF ; "failed to close a descriptor of a file:"...
.text:0000000000007FD4                 MOV             W0, #6
.text:0000000000007FD8                 MOV             X3, X19
.text:0000000000007FDC                 BL              .__android_log_print
.text:0000000000007FE0 loc_7FE0                                ; CODE XREF: semGetFileSize+DC↑j
.text:0000000000007FE0                 MOV             W0, #0xFFFFFFFF
.text:0000000000007FE4 loc_7FE4                                ; CODE XREF: semGetFileSize+6C↑j
.text:0000000000007FE4                                         ; semGetFileSize+8C↑j ...
.text:0000000000007FE4                 LDUR            X8, [X29,#buf.__unused+8]
.text:0000000000007FE8                 SUB             X8, X21, X8
.text:0000000000007FEC                 CBNZ            X8, loc_8004
.text:0000000000007FF0                 SUB             SP, X29, #0x20 ; ' '
.text:0000000000007FF4                 LDP             X29, X30, [SP,#0x20+var_s0]
.text:0000000000007FF8                 LDP             X20, X19, [SP,#0x20+var_10]
.text:0000000000007FFC                 LDP             X22, X21, [SP+0x20+buf.__unused+0x10],#0x30
.text:0000000000008000                 RET
.text:0000000000008004 ; ---------------------------------------------------------------------------
.text:0000000000008004 loc_8004                                ; CODE XREF: semGetFileSize+108↑j
.text:0000000000008004                 BL              .__stack_chk_fail
.text:0000000000008004 ; } // starts at 7EE4
.text:0000000000008004 ; End of function semGetFileSize
.text:0000000000008008 ; =============== S U B R O U T I N E =======================================
.text:0000000000008008 ; Attributes: bp-based frame
.text:0000000000008008                 EXPORT c_writeFile
.text:0000000000008008 c_writeFile                             ; CODE XREF: .c_writeFile+C↑j
.text:0000000000008008                                         ; DATA XREF: LOAD:0000000000001690↑o ...
.text:0000000000008008 var_20          = -0x20
.text:0000000000008008 var_10          = -0x10
.text:0000000000008008 var_s0          =  0
.text:0000000000008008 ; __unwind {
.text:0000000000008008                 STP             X22, X21, [SP,#-0x10+var_20]!
.text:000000000000800C                 STP             X20, X19, [SP,#0x20+var_10]
.text:0000000000008010                 STP             X29, X30, [SP,#0x20+var_s0]
.text:0000000000008014                 ADD             X29, SP, #0x20
.text:0000000000008018                 MOV             W22, W2
.text:000000000000801C                 MOV             X21, X1
.text:0000000000008020                 MOV             W1, #0x241 ; oflag
.text:0000000000008024                 MOV             W2, #0x1A4
.text:0000000000008028                 MOV             X19, X0
.text:000000000000802C                 BL              .open
.text:0000000000008030                 MOV             W20, W0
.text:0000000000008034                 CMN             W20, #1
.text:0000000000008038                 B.EQ            loc_8074
.text:000000000000803C                 MOV             W2, W22 ; n
.text:0000000000008040                 MOV             W0, W20 ; fd
.text:0000000000008044                 MOV             X1, X21 ; buf
.text:0000000000008048                 BL              .write
.text:000000000000804C                 MOV             X19, X0
.text:0000000000008050                 MOV             W0, W20 ; fd
.text:0000000000008054                 BL              .fsync
.text:0000000000008058                 MOV             W21, W0
.text:000000000000805C                 MOV             W0, W20 ; fd
.text:0000000000008060                 BL              .close
.text:0000000000008064                 CMP             W21, #0
.text:0000000000008068                 MOV             W8, #0xFFFFFFFF
.text:000000000000806C                 CSEL            W0, W19, W8, EQ
.text:0000000000008070                 B               loc_8094
.text:0000000000008074 ; ---------------------------------------------------------------------------
.text:0000000000008074 loc_8074                                ; CODE XREF: c_writeFile+30↑j
.text:0000000000008074                 ADRP            X1, #unk_10DEC@PAGE
.text:0000000000008078                 ADRP            X2, #aFailedToOpenFi@PAGE ; "failed to open file : %s"
.text:000000000000807C                 ADD             X1, X1, #unk_10DEC@PAGEOFF
.text:0000000000008080                 ADD             X2, X2, #aFailedToOpenFi@PAGEOFF ; "failed to open file : %s"
.text:0000000000008084                 MOV             W0, #6
.text:0000000000008088                 MOV             X3, X19
.text:000000000000808C                 BL              .__android_log_print
.text:0000000000008090                 MOV             W0, #0xFFFFFFFF
.text:0000000000008094 loc_8094                                ; CODE XREF: c_writeFile+68↑j
.text:0000000000008094                 LDP             X29, X30, [SP,#0x20+var_s0]
.text:0000000000008098                 LDP             X20, X19, [SP,#0x20+var_10]
.text:000000000000809C                 LDP             X22, X21, [SP+0x20+var_20],#0x30
.text:00000000000080A0                 RET
.text:00000000000080A0 ; } // starts at 8008
.text:00000000000080A0 ; End of function c_writeFile
.text:00000000000080A4 ; =============== S U B R O U T I N E =======================================
.text:00000000000080A4 ; Attributes: bp-based frame
.text:00000000000080A4                 EXPORT c_readFile
.text:00000000000080A4 c_readFile                              ; CODE XREF: .c_readFile+C↑j
.text:00000000000080A4                                         ; DATA XREF: LOAD:00000000000013D8↑o ...
.text:00000000000080A4 var_20          = -0x20
.text:00000000000080A4 var_10          = -0x10
.text:00000000000080A4 var_s0          =  0
.text:00000000000080A4 ; __unwind {
.text:00000000000080A4                 STP             X22, X21, [SP,#-0x10+var_20]!
.text:00000000000080A8                 STP             X20, X19, [SP,#0x20+var_10]
.text:00000000000080AC                 STP             X29, X30, [SP,#0x20+var_s0]
.text:00000000000080B0                 ADD             X29, SP, #0x20
.text:00000000000080B4                 MOV             X20, X1
.text:00000000000080B8                 MOV             W1, WZR ; oflag
.text:00000000000080BC                 MOV             W22, W2
.text:00000000000080C0                 MOV             X19, X0
.text:00000000000080C4                 BL              .open
.text:00000000000080C8                 MOV             W21, W0
.text:00000000000080CC                 CMN             W21, #1
.text:00000000000080D0                 B.EQ            loc_80F4
.text:00000000000080D4                 MOV             W2, W22 ; nbytes
.text:00000000000080D8                 MOV             W0, W21 ; fd
.text:00000000000080DC                 MOV             X1, X20 ; buf
.text:00000000000080E0                 BL              .read
.text:00000000000080E4                 MOV             X19, X0
.text:00000000000080E8                 MOV             W0, W21 ; fd
.text:00000000000080EC                 BL              .close
.text:00000000000080F0                 B               loc_8114
.text:00000000000080F4 ; ---------------------------------------------------------------------------
.text:00000000000080F4 loc_80F4                                ; CODE XREF: c_readFile+2C↑j
.text:00000000000080F4                 ADRP            X1, #unk_10DEC@PAGE
.text:00000000000080F8                 ADRP            X2, #aFailedToOpenFi@PAGE ; "failed to open file : %s"
.text:00000000000080FC                 ADD             X1, X1, #unk_10DEC@PAGEOFF
.text:0000000000008100                 ADD             X2, X2, #aFailedToOpenFi@PAGEOFF ; "failed to open file : %s"
.text:0000000000008104                 MOV             W0, #6
.text:0000000000008108                 MOV             X3, X19
.text:000000000000810C                 BL              .__android_log_print
.text:0000000000008110                 MOV             W19, #0xFFFFFFFF
.text:0000000000008114 loc_8114                                ; CODE XREF: c_readFile+4C↑j
.text:0000000000008114                 MOV             W0, W19
.text:0000000000008118                 LDP             X29, X30, [SP,#0x20+var_s0]
.text:000000000000811C                 LDP             X20, X19, [SP,#0x20+var_10]
.text:0000000000008120                 LDP             X22, X21, [SP+0x20+var_20],#0x30
.text:0000000000008124                 RET
.text:0000000000008124 ; } // starts at 80A4
.text:0000000000008124 ; End of function c_readFile
.text:0000000000008128 ; =============== S U B R O U T I N E =======================================
.text:0000000000008128                 EXPORT c_access
.text:0000000000008128 c_access                                ; CODE XREF: .c_access+C↑j
.text:0000000000008128                                         ; DATA XREF: LOAD:0000000000000DC0↑o ...
.text:0000000000008128 ; __unwind {
.text:0000000000008128                 MOV             W1, WZR ; type
.text:000000000000812C                 B               .access
.text:000000000000812C ; } // starts at 8128
.text:000000000000812C ; End of function c_access
.text:0000000000008130 ; =============== S U B R O U T I N E =======================================
.text:0000000000008130 ; int c_remove(const char *filename)
.text:0000000000008130                 EXPORT c_remove
.text:0000000000008130 c_remove                                ; CODE XREF: .c_remove+C↑j
.text:0000000000008130                                         ; DATA XREF: LOAD:00000000000013C0↑o ...
.text:0000000000008130 ; __unwind {
.text:0000000000008130                 B               .remove
.text:0000000000008130 ; } // starts at 8130
.text:0000000000008130 ; End of function c_remove
.text:0000000000008134 ; =============== S U B R O U T I N E =======================================
.text:0000000000008134                 EXPORT c_getFileSize
.text:0000000000008134 c_getFileSize                           ; DATA XREF: LOAD:0000000000000E98↑o
.text:0000000000008134 ; __unwind {
.text:0000000000008134                 B               .semGetFileSize
.text:0000000000008134 ; } // starts at 8134
.text:0000000000008134 ; End of function c_getFileSize
.text:0000000000008138 ; =============== S U B R O U T I N E =======================================
.text:0000000000008138 ; Attributes: bp-based frame
.text:0000000000008138                 EXPORT openSecureSpi
.text:0000000000008138 openSecureSpi                           ; CODE XREF: .openSecureSpi+C↑j
.text:0000000000008138                                         ; DATA XREF: LOAD:00000000000011B0↑o ...
.text:0000000000008138 var_16840       = -0x16840
.text:0000000000008138 s               = -0x16838
.text:0000000000008138 var_16834       = -0x16834
.text:0000000000008138 var_20          = -0x20
.text:0000000000008138 var_10          = -0x10
.text:0000000000008138 var_s0          =  0
.text:0000000000008138 ; __unwind {
.text:0000000000008138                 STP             X22, X21, [SP,#-0x10+var_20]!
.text:000000000000813C                 STP             X20, X19, [SP,#0x20+var_10]
.text:0000000000008140                 STP             X29, X30, [SP,#0x20+var_s0]
.text:0000000000008144                 ADD             X29, SP, #0x20
.text:0000000000008148                 SUB             SP, SP, #0x16,LSL#12
.text:000000000000814C                 SUB             SP, SP, #0x820
.text:0000000000008150                 ADRP            X20, #__stack_chk_guard_ptr@PAGE
.text:0000000000008154                 LDR             X20, [X20,#__stack_chk_guard_ptr@PAGEOFF]
.text:0000000000008158                 MOV             X21, SP
.text:000000000000815C                 LDR             X20, [X20]
.text:0000000000008160                 STR             X20, [X21,#0x16840+var_16840]
.text:0000000000008164                 BL              ._openSecureSpi
.text:0000000000008168                 MOV             W19, W0
.text:000000000000816C                 CMN             W19, #0xC8
.text:0000000000008170                 B.EQ            loc_8180
.text:0000000000008174                 CBZ             W19, loc_8180
.text:0000000000008178                 CMN             W19, #0x64 ; 'd'
.text:000000000000817C                 B.NE            loc_819C
.text:0000000000008180 loc_8180                                ; CODE XREF: openSecureSpi+38↑j
.text:0000000000008180                                         ; openSecureSpi+3C↑j
.text:0000000000008180                 ADRP            X1, #unk_10DEC@PAGE
.text:0000000000008184                 ADRP            X2, #aOpensecurespiF@PAGE ; "_openSecureSpi failed!"
.text:0000000000008188                 ADD             X1, X1, #unk_10DEC@PAGEOFF
.text:000000000000818C                 ADD             X2, X2, #aOpensecurespiF@PAGEOFF ; "_openSecureSpi failed!"
.text:0000000000008190                 MOV             W0, #6
.text:0000000000008194                 BL              .__android_log_print
.text:0000000000008198                 B               loc_81F0
.text:000000000000819C ; ---------------------------------------------------------------------------
.text:000000000000819C loc_819C                                ; CODE XREF: openSecureSpi+44↑j
.text:000000000000819C                 MOV             W2, #0x10000
.text:00000000000081A0                 ADD             X0, SP, #0x16840+s ; s
.text:00000000000081A4                 MOVK            W2, #0x680C ; n
.text:00000000000081A8                 MOV             W1, WZR ; c
.text:00000000000081AC                 BL              .memset
.text:00000000000081B0                 MOV             W8, #0xFFFFFFFF
.text:00000000000081B4                 MOV             X1, XZR
.text:00000000000081B8                 MOV             W0, #0xA
.text:00000000000081BC                 ADD             X3, SP, #0x16840+s
.text:00000000000081C0                 MOV             W2, WZR
.text:00000000000081C4                 STR             W8, [SP,#0x16840+var_16834]
.text:00000000000081C8                 BL              .invokeCommand
.text:00000000000081CC                 LDR             W8, [SP,#0x16840+var_16834]
.text:00000000000081D0                 CBZ             W8, loc_81F0
.text:00000000000081D4                 ADRP            X1, #unk_10DEC@PAGE
.text:00000000000081D8                 ADRP            X2, #aSpiinitFailed@PAGE ; "spiInit failed!"
.text:00000000000081DC                 ADD             X1, X1, #unk_10DEC@PAGEOFF
.text:00000000000081E0                 ADD             X2, X2, #aSpiinitFailed@PAGEOFF ; "spiInit failed!"
.text:00000000000081E4                 MOV             W0, #6
.text:00000000000081E8                 BL              .__android_log_print
.text:00000000000081EC                 MOV             W19, WZR
.text:00000000000081F0 loc_81F0                                ; CODE XREF: openSecureSpi+60↑j
.text:00000000000081F0                                         ; openSecureSpi+98↑j
.text:00000000000081F0                 LDR             X8, [X21]
.text:00000000000081F4                 SUB             X8, X20, X8
.text:00000000000081F8                 CBNZ            X8, loc_8214
.text:00000000000081FC                 MOV             W0, W19
.text:0000000000008200                 SUB             SP, X29, #0x20 ; ' '
.text:0000000000008204                 LDP             X29, X30, [SP,#0x20+var_s0]
.text:0000000000008208                 LDP             X20, X19, [SP,#0x20+var_10]
.text:000000000000820C                 LDP             X22, X21, [SP+0x20+var_20],#0x30
.text:0000000000008210                 RET
.text:0000000000008214 ; ---------------------------------------------------------------------------
.text:0000000000008214 loc_8214                                ; CODE XREF: openSecureSpi+C0↑j
.text:0000000000008214                 BL              .__stack_chk_fail
.text:0000000000008214 ; } // starts at 8138
.text:0000000000008214 ; End of function openSecureSpi
.text:0000000000008218 ; =============== S U B R O U T I N E =======================================
.text:0000000000008218 ; Attributes: bp-based frame
.text:0000000000008218                 EXPORT _openSecureSpi
.text:0000000000008218 _openSecureSpi                          ; CODE XREF: ._openSecureSpi+C↑j
.text:0000000000008218                                         ; DATA XREF: LOAD:0000000000001108↑o ...
.text:0000000000008218 var_10          = -0x10
.text:0000000000008218 var_s0          =  0
.text:0000000000008218 ; __unwind {
.text:0000000000008218                 STP             X20, X19, [SP,#-0x10+var_10]!
.text:000000000000821C                 STP             X29, X30, [SP,#0x10+var_s0]
.text:0000000000008220                 ADD             X29, SP, #0x10
.text:0000000000008224                 BL              .secEseSPI_open
.text:0000000000008228                 AND             W8, W0, #0xFFFF
.text:000000000000822C                 CBZ             W8, loc_8260
.text:0000000000008230                 CMP             W8, #0x33 ; '3'
.text:0000000000008234                 B.EQ            loc_826C
.text:0000000000008238                 CMP             W8, #0x6F ; 'o'
.text:000000000000823C                 B.NE            loc_828C
.text:0000000000008240                 ADRP            X1, #unk_10DEC@PAGE
.text:0000000000008244                 ADRP            X2, #aOpenspidrvSece@PAGE ; "_openSpiDrv secEseSPI_open failed : Alr"...
.text:0000000000008248                 ADD             X1, X1, #unk_10DEC@PAGEOFF
.text:000000000000824C                 ADD             X2, X2, #aOpenspidrvSece@PAGEOFF ; "_openSpiDrv secEseSPI_open failed : Alr"...
.text:0000000000008250                 MOV             W0, #6
.text:0000000000008254                 BL              .__android_log_print
.text:0000000000008258                 MOV             W19, #0xFFFFFF38
.text:000000000000825C                 B               loc_82AC
.text:0000000000008260 ; ---------------------------------------------------------------------------
.text:0000000000008260 loc_8260                                ; CODE XREF: _openSecureSpi+14↑j
.text:0000000000008260                 LDP             X29, X30, [SP,#0x10+var_s0]
.text:0000000000008264                 LDP             X20, X19, [SP+0x10+var_10],#0x20
.text:0000000000008268                 B               ._openSecureSpiTa
.text:000000000000826C ; ---------------------------------------------------------------------------
.text:000000000000826C loc_826C                                ; CODE XREF: _openSecureSpi+1C↑j
.text:000000000000826C                 ADRP            X1, #unk_10DEC@PAGE
.text:0000000000008270                 ADRP            X2, #aOpenspidrvSece_0@PAGE ; "_openSpiDrv secEseSPI_open failed : Not"...
.text:0000000000008274                 ADD             X1, X1, #unk_10DEC@PAGEOFF
.text:0000000000008278                 ADD             X2, X2, #aOpenspidrvSece_0@PAGEOFF ; "_openSpiDrv secEseSPI_open failed : Not"...
.text:000000000000827C                 MOV             W0, #6
.text:0000000000008280                 BL              .__android_log_print
.text:0000000000008284                 MOV             W19, #0xFFFFFF9C
.text:0000000000008288                 B               loc_82AC
.text:000000000000828C ; ---------------------------------------------------------------------------
.text:000000000000828C loc_828C                                ; CODE XREF: _openSecureSpi+24↑j
.text:000000000000828C                 ADRP            X1, #unk_10DEC@PAGE
.text:0000000000008290                 ADRP            X2, #aFailedToOpenSp@PAGE ; "failed to open spi: %x"
.text:0000000000008294                 AND             W3, W0, #0xFFFF
.text:0000000000008298                 ADD             X1, X1, #unk_10DEC@PAGEOFF
.text:000000000000829C                 ADD             X2, X2, #aFailedToOpenSp@PAGEOFF ; "failed to open spi: %x"
.text:00000000000082A0                 MOV             W0, #6
.text:00000000000082A4                 BL              .__android_log_print
.text:00000000000082A8                 MOV             W19, WZR
.text:00000000000082AC loc_82AC                                ; CODE XREF: _openSecureSpi+44↑j
.text:00000000000082AC                                         ; _openSecureSpi+70↑j
.text:00000000000082AC                 ADRP            X1, #unk_10DEC@PAGE
.text:00000000000082B0                 ADRP            X2, #aOpenspidrvFail@PAGE ; "_openSpiDrv() failed!"
.text:00000000000082B4                 ADD             X1, X1, #unk_10DEC@PAGEOFF
.text:00000000000082B8                 ADD             X2, X2, #aOpenspidrvFail@PAGEOFF ; "_openSpiDrv() failed!"
.text:00000000000082BC                 MOV             W0, #6
.text:00000000000082C0                 BL              .__android_log_print
.text:00000000000082C4                 LDP             X29, X30, [SP,#0x10+var_s0]
.text:00000000000082C8                 MOV             W0, W19
.text:00000000000082CC                 LDP             X20, X19, [SP+0x10+var_10],#0x20
.text:00000000000082D0                 RET
.text:00000000000082D0 ; } // starts at 8218
.text:00000000000082D0 ; End of function _openSecureSpi
.text:00000000000082D4 ; =============== S U B R O U T I N E =======================================
.text:00000000000082D4 ; Attributes: bp-based frame
.text:00000000000082D4                 EXPORT closeSecureSpi
.text:00000000000082D4 closeSecureSpi                          ; CODE XREF: .closeSecureSpi+C↑j
.text:00000000000082D4                                         ; DATA XREF: LOAD:00000000000009E8↑o ...
.text:00000000000082D4 var_16840       = -0x16840
.text:00000000000082D4 s               = -0x16838
.text:00000000000082D4 var_16834       = -0x16834
.text:00000000000082D4 var_20          = -0x20
.text:00000000000082D4 var_10          = -0x10
.text:00000000000082D4 var_s0          =  0
.text:00000000000082D4 ; __unwind {
.text:00000000000082D4                 STP             X22, X21, [SP,#-0x10+var_20]!
.text:00000000000082D8                 STP             X20, X19, [SP,#0x20+var_10]
.text:00000000000082DC                 STP             X29, X30, [SP,#0x20+var_s0]
.text:00000000000082E0                 ADD             X29, SP, #0x20
.text:00000000000082E4                 SUB             SP, SP, #0x16,LSL#12
.text:00000000000082E8                 SUB             SP, SP, #0x820
.text:00000000000082EC                 ADRP            X20, #__stack_chk_guard_ptr@PAGE
.text:00000000000082F0                 LDR             X20, [X20,#__stack_chk_guard_ptr@PAGEOFF]
.text:00000000000082F4                 MOV             X21, SP
.text:00000000000082F8                 LDR             X20, [X20]
.text:00000000000082FC                 STR             X20, [X21,#0x16840+var_16840]
.text:0000000000008300                 BL              ._openSecureSpiTa
.text:0000000000008304                 MOV             W2, #0x10000
.text:0000000000008308                 ADD             X0, SP, #0x16840+s ; s
.text:000000000000830C                 MOVK            W2, #0x680C ; n
.text:0000000000008310                 MOV             W1, WZR ; c
.text:0000000000008314                 BL              .memset
.text:0000000000008318                 MOV             W8, #0xFFFFFFFF
.text:000000000000831C                 MOV             X1, XZR
.text:0000000000008320                 MOV             W0, #0xB
.text:0000000000008324                 ADD             X3, SP, #0x16840+s
.text:0000000000008328                 MOV             W2, WZR
.text:000000000000832C                 STR             W8, [SP,#0x16840+var_16834]
.text:0000000000008330                 BL              .invokeCommand
.text:0000000000008334                 LDR             W8, [SP,#0x16840+var_16834]
.text:0000000000008338                 CBZ             W8, loc_8354
.text:000000000000833C                 ADRP            X1, #unk_10DEC@PAGE
.text:0000000000008340                 ADRP            X2, #aSpideinitFaile@PAGE ; "spiDeInit failed!"
.text:0000000000008344                 ADD             X1, X1, #unk_10DEC@PAGEOFF
.text:0000000000008348                 ADD             X2, X2, #aSpideinitFaile@PAGEOFF ; "spiDeInit failed!"
.text:000000000000834C                 MOV             W0, #6
.text:0000000000008350                 BL              .__android_log_print
.text:0000000000008354 loc_8354                                ; CODE XREF: closeSecureSpi+64↑j
.text:0000000000008354                 BL              ._closeSecureSpiTa
.text:0000000000008358                 BL              .secEseSPI_close
.text:000000000000835C                 AND             W3, W0, #0xFFFF
.text:0000000000008360                 CBZ             W3, loc_8398
.text:0000000000008364                 ADRP            X19, #unk_10DEC@PAGE
.text:0000000000008368                 ADD             X19, X19, #unk_10DEC@PAGEOFF
.text:000000000000836C                 ADRP            X2, #aFailedToCloseS@PAGE ; "failed to close spi: %x"
.text:0000000000008370                 ADD             X2, X2, #aFailedToCloseS@PAGEOFF ; "failed to close spi: %x"
.text:0000000000008374                 MOV             W0, #6
.text:0000000000008378                 MOV             X1, X19
.text:000000000000837C                 BL              .__android_log_print
.text:0000000000008380                 ADRP            X2, #aClosespidrvFai@PAGE ; "_closeSpiDrv() failed with ret = %x"
.text:0000000000008384                 MOV             W3, WZR
.text:0000000000008388                 ADD             X2, X2, #aClosespidrvFai@PAGEOFF ; "_closeSpiDrv() failed with ret = %x"
.text:000000000000838C                 MOV             W0, #6
.text:0000000000008390                 MOV             X1, X19
.text:0000000000008394                 BL              .__android_log_print
.text:0000000000008398 loc_8398                                ; CODE XREF: closeSecureSpi+8C↑j
.text:0000000000008398                 LDR             X8, [X21]
.text:000000000000839C                 SUB             X8, X20, X8
.text:00000000000083A0                 CBNZ            X8, loc_83BC
.text:00000000000083A4                 MOV             W0, #1
.text:00000000000083A8                 SUB             SP, X29, #0x20 ; ' '
.text:00000000000083AC                 LDP             X29, X30, [SP,#0x20+var_s0]
.text:00000000000083B0                 LDP             X20, X19, [SP,#0x20+var_10]
.text:00000000000083B4                 LDP             X22, X21, [SP+0x20+var_20],#0x30
.text:00000000000083B8                 RET
.text:00000000000083BC ; ---------------------------------------------------------------------------
.text:00000000000083BC loc_83BC                                ; CODE XREF: closeSecureSpi+CC↑j
.text:00000000000083BC                 BL              .__stack_chk_fail
.text:00000000000083BC ; } // starts at 82D4
.text:00000000000083BC ; End of function closeSecureSpi
.text:00000000000083C0 ; =============== S U B R O U T I N E =======================================
.text:00000000000083C0 ; Attributes: bp-based frame
.text:00000000000083C0                 EXPORT spiDeInit
.text:00000000000083C0 spiDeInit                               ; DATA XREF: LOAD:00000000000014F8↑o
.text:00000000000083C0 var_16840       = -0x16840
.text:00000000000083C0 s               = -0x16838
.text:00000000000083C0 var_16834       = -0x16834
.text:00000000000083C0 var_20          = -0x20
.text:00000000000083C0 var_10          = -0x10
.text:00000000000083C0 var_s0          =  0
.text:00000000000083C0 ; __unwind {
.text:00000000000083C0                 STP             X28, X27, [SP,#-0x10+var_20]!
.text:00000000000083C4                 STP             X20, X19, [SP,#0x20+var_10]
.text:00000000000083C8                 STP             X29, X30, [SP,#0x20+var_s0]
.text:00000000000083CC                 ADD             X29, SP, #0x20
.text:00000000000083D0                 SUB             SP, SP, #0x16,LSL#12
.text:00000000000083D4                 SUB             SP, SP, #0x820
.text:00000000000083D8                 ADRP            X19, #__stack_chk_guard_ptr@PAGE
.text:00000000000083DC                 LDR             X19, [X19,#__stack_chk_guard_ptr@PAGEOFF]
.text:00000000000083E0                 MOV             W2, #0x10000
.text:00000000000083E4                 MOV             X20, SP
.text:00000000000083E8                 ADD             X0, SP, #0x16840+s ; s
.text:00000000000083EC                 LDR             X19, [X19]
.text:00000000000083F0                 MOVK            W2, #0x680C ; n
.text:00000000000083F4                 MOV             W1, WZR ; c
.text:00000000000083F8                 STR             X19, [X20,#0x16840+var_16840]
.text:00000000000083FC                 BL              .memset
.text:0000000000008400                 MOV             W8, #0xFFFFFFFF
.text:0000000000008404                 MOV             X1, XZR
.text:0000000000008408                 MOV             W0, #0xB
.text:000000000000840C                 ADD             X3, SP, #0x16840+s
.text:0000000000008410                 MOV             W2, WZR
.text:0000000000008414                 STR             W8, [SP,#0x16840+var_16834]
.text:0000000000008418                 BL              .invokeCommand
.text:000000000000841C                 LDR             W0, [SP,#0x16840+var_16834]
.text:0000000000008420                 LDR             X8, [X20,#0x16840+var_16840]
.text:0000000000008424                 SUB             X8, X19, X8
.text:0000000000008428                 CBNZ            X8, loc_8440
.text:000000000000842C                 SUB             SP, X29, #0x20 ; ' '
.text:0000000000008430                 LDP             X29, X30, [SP,#0x20+var_s0]
.text:0000000000008434                 LDP             X20, X19, [SP,#0x20+var_10]
.text:0000000000008438                 LDP             X28, X27, [SP+0x20+var_20],#0x30
.text:000000000000843C                 RET
.text:0000000000008440 ; ---------------------------------------------------------------------------
.text:0000000000008440 loc_8440                                ; CODE XREF: spiDeInit+68↑j
.text:0000000000008440                 BL              .__stack_chk_fail
.text:0000000000008440 ; } // starts at 83C0
.text:0000000000008440 ; End of function spiDeInit
.text:0000000000008444 ; =============== S U B R O U T I N E =======================================
.text:0000000000008444 ; Attributes: bp-based frame
.text:0000000000008444                 EXPORT _closeSecureSpi
.text:0000000000008444 _closeSecureSpi                         ; DATA XREF: LOAD:00000000000015D0↑o
.text:0000000000008444 var_10          = -0x10
.text:0000000000008444 var_s0          =  0
.text:0000000000008444 ; __unwind {
.text:0000000000008444                 STP             X20, X19, [SP,#-0x10+var_10]!
.text:0000000000008448                 STP             X29, X30, [SP,#0x10+var_s0]
.text:000000000000844C                 ADD             X29, SP, #0x10
.text:0000000000008450                 BL              ._closeSecureSpiTa
.text:0000000000008454                 BL              .secEseSPI_close
.text:0000000000008458                 AND             W3, W0, #0xFFFF
.text:000000000000845C                 CBZ             W3, loc_8494
.text:0000000000008460                 ADRP            X19, #unk_10DEC@PAGE
.text:0000000000008464                 ADD             X19, X19, #unk_10DEC@PAGEOFF
.text:0000000000008468                 ADRP            X2, #aFailedToCloseS@PAGE ; "failed to close spi: %x"
.text:000000000000846C                 ADD             X2, X2, #aFailedToCloseS@PAGEOFF ; "failed to close spi: %x"
.text:0000000000008470                 MOV             W0, #6
.text:0000000000008474                 MOV             X1, X19
.text:0000000000008478                 BL              .__android_log_print
.text:000000000000847C                 ADRP            X2, #aClosespidrvFai@PAGE ; "_closeSpiDrv() failed with ret = %x"
.text:0000000000008480                 MOV             W3, WZR
.text:0000000000008484                 ADD             X2, X2, #aClosespidrvFai@PAGEOFF ; "_closeSpiDrv() failed with ret = %x"
.text:0000000000008488                 MOV             W0, #6
.text:000000000000848C                 MOV             X1, X19
.text:0000000000008490                 BL              .__android_log_print
.text:0000000000008494 loc_8494                                ; CODE XREF: _closeSecureSpi+18↑j
.text:0000000000008494                 LDP             X29, X30, [SP,#0x10+var_s0]
.text:0000000000008498                 MOV             W0, #1
.text:000000000000849C                 LDP             X20, X19, [SP+0x10+var_10],#0x20
.text:00000000000084A0                 RET
.text:00000000000084A0 ; } // starts at 8444
.text:00000000000084A0 ; End of function _closeSecureSpi
.text:00000000000084A4 ; =============== S U B R O U T I N E =======================================
.text:00000000000084A4 ; Attributes: bp-based frame
.text:00000000000084A4                 EXPORT getAtr
.text:00000000000084A4 getAtr                                  ; CODE XREF: .getAtr+C↑j
.text:00000000000084A4                                         ; DATA XREF: LOAD:00000000000009A0↑o ...
.text:00000000000084A4 var_10          = -0x10
.text:00000000000084A4 var_s0          =  0
.text:00000000000084A4 ; __unwind {
.text:00000000000084A4                 STP             X20, X19, [SP,#-0x10+var_10]!
.text:00000000000084A8                 STP             X29, X30, [SP,#0x10+var_s0]
.text:00000000000084AC                 ADD             X29, SP, #0x10
.text:00000000000084B0                 BL              .secEseSPI_atr
.text:00000000000084B4                 AND             W3, W0, #0xFFFF
.text:00000000000084B8                 CBZ             W3, loc_84F8
.text:00000000000084BC                 ADRP            X19, #unk_10DEC@PAGE
.text:00000000000084C0                 ADD             X19, X19, #unk_10DEC@PAGEOFF
.text:00000000000084C4                 ADRP            X2, #aFailedToGetatr@PAGE ; "failed to _getAtr: %x"
.text:00000000000084C8                 ADD             X2, X2, #aFailedToGetatr@PAGEOFF ; "failed to _getAtr: %x"
.text:00000000000084CC                 MOV             W0, #6
.text:00000000000084D0                 MOV             X1, X19
.text:00000000000084D4                 BL              .__android_log_print
.text:00000000000084D8                 ADRP            X2, #aGetatrFailedD@PAGE ; "getAtr failed! %d"
.text:00000000000084DC                 MOV             W3, WZR
.text:00000000000084E0                 ADD             X2, X2, #aGetatrFailedD@PAGEOFF ; "getAtr failed! %d"
.text:00000000000084E4                 MOV             W0, #6
.text:00000000000084E8                 MOV             X1, X19
.text:00000000000084EC                 BL              .__android_log_print
.text:00000000000084F0                 MOV             W0, WZR
.text:00000000000084F4                 B               loc_84FC
.text:00000000000084F8 ; ---------------------------------------------------------------------------
.text:00000000000084F8 loc_84F8                                ; CODE XREF: getAtr+14↑j
.text:00000000000084F8                 MOV             W0, #1
.text:00000000000084FC loc_84FC                                ; CODE XREF: getAtr+50↑j
.text:00000000000084FC                 LDP             X29, X30, [SP,#0x10+var_s0]
.text:0000000000008500                 LDP             X20, X19, [SP+0x10+var_10],#0x20
.text:0000000000008504                 RET
.text:0000000000008504 ; } // starts at 84A4
.text:0000000000008504 ; End of function getAtr
.text:0000000000008508 ; =============== S U B R O U T I N E =======================================
.text:0000000000008508 ; Attributes: bp-based frame
.text:0000000000008508                 EXPORT _getAtr
.text:0000000000008508 _getAtr                                 ; DATA XREF: LOAD:00000000000008E0↑o
.text:0000000000008508 var_s0          =  0
.text:0000000000008508 ; __unwind {
.text:0000000000008508                 STP             X29, X30, [SP,#-0x10+var_s0]!
.text:000000000000850C                 MOV             X29, SP
.text:0000000000008510                 BL              .secEseSPI_atr
.text:0000000000008514                 AND             W3, W0, #0xFFFF
.text:0000000000008518                 CBZ             W3, loc_8540
.text:000000000000851C                 ADRP            X1, #unk_10DEC@PAGE
.text:0000000000008520                 ADRP            X2, #aFailedToGetatr@PAGE ; "failed to _getAtr: %x"
.text:0000000000008524                 ADD             X1, X1, #unk_10DEC@PAGEOFF
.text:0000000000008528                 ADD             X2, X2, #aFailedToGetatr@PAGEOFF ; "failed to _getAtr: %x"
.text:000000000000852C                 MOV             W0, #6
.text:0000000000008530                 BL              .__android_log_print
.text:0000000000008534                 MOV             W0, WZR
.text:0000000000008538                 LDP             X29, X30, [SP+var_s0],#0x10
.text:000000000000853C                 RET
.text:0000000000008540 ; ---------------------------------------------------------------------------
.text:0000000000008540 loc_8540                                ; CODE XREF: _getAtr+10↑j
.text:0000000000008540                 MOV             W0, #1
.text:0000000000008544                 LDP             X29, X30, [SP+var_s0],#0x10
.text:0000000000008548                 RET
.text:0000000000008548 ; } // starts at 8508
.text:0000000000008548 ; End of function _getAtr
.text:000000000000854C ; =============== S U B R O U T I N E =======================================
.text:000000000000854C ; Attributes: bp-based frame
.text:000000000000854C                 EXPORT _openSpiDrv
.text:000000000000854C _openSpiDrv                             ; DATA XREF: LOAD:0000000000000EC8↑o
.text:000000000000854C var_s0          =  0
.text:000000000000854C ; __unwind {
.text:000000000000854C                 STP             X29, X30, [SP,#-0x10+var_s0]!
.text:0000000000008550                 MOV             X29, SP
.text:0000000000008554                 BL              .secEseSPI_open
.text:0000000000008558                 AND             W8, W0, #0xFFFF
.text:000000000000855C                 CBZ             W8, loc_8594
.text:0000000000008560                 CMP             W8, #0x33 ; '3'
.text:0000000000008564                 B.EQ            loc_85A0
.text:0000000000008568                 CMP             W8, #0x6F ; 'o'
.text:000000000000856C                 B.NE            loc_85C4
.text:0000000000008570                 ADRP            X1, #unk_10DEC@PAGE
.text:0000000000008574                 ADRP            X2, #aOpenspidrvSece@PAGE ; "_openSpiDrv secEseSPI_open failed : Alr"...
.text:0000000000008578                 ADD             X1, X1, #unk_10DEC@PAGEOFF
.text:000000000000857C                 ADD             X2, X2, #aOpenspidrvSece@PAGEOFF ; "_openSpiDrv secEseSPI_open failed : Alr"...
.text:0000000000008580                 MOV             W0, #6
.text:0000000000008584                 BL              .__android_log_print
.text:0000000000008588                 MOV             W0, #0xFFFFFF38
.text:000000000000858C                 LDP             X29, X30, [SP+var_s0],#0x10
.text:0000000000008590                 RET
.text:0000000000008594 ; ---------------------------------------------------------------------------
.text:0000000000008594 loc_8594                                ; CODE XREF: _openSpiDrv+10↑j
.text:0000000000008594                 MOV             W0, #1
.text:0000000000008598                 LDP             X29, X30, [SP+var_s0],#0x10
.text:000000000000859C                 RET
.text:00000000000085A0 ; ---------------------------------------------------------------------------
.text:00000000000085A0 loc_85A0                                ; CODE XREF: _openSpiDrv+18↑j
.text:00000000000085A0                 ADRP            X1, #unk_10DEC@PAGE
.text:00000000000085A4                 ADRP            X2, #aOpenspidrvSece_0@PAGE ; "_openSpiDrv secEseSPI_open failed : Not"...
.text:00000000000085A8                 ADD             X1, X1, #unk_10DEC@PAGEOFF
.text:00000000000085AC                 ADD             X2, X2, #aOpenspidrvSece_0@PAGEOFF ; "_openSpiDrv secEseSPI_open failed : Not"...
.text:00000000000085B0                 MOV             W0, #6
.text:00000000000085B4                 BL              .__android_log_print
.text:00000000000085B8                 MOV             W0, #0xFFFFFF9C
.text:00000000000085BC                 LDP             X29, X30, [SP+var_s0],#0x10
.text:00000000000085C0                 RET
.text:00000000000085C4 ; ---------------------------------------------------------------------------
.text:00000000000085C4 loc_85C4                                ; CODE XREF: _openSpiDrv+20↑j
.text:00000000000085C4                 ADRP            X1, #unk_10DEC@PAGE
.text:00000000000085C8                 ADRP            X2, #aFailedToOpenSp@PAGE ; "failed to open spi: %x"
.text:00000000000085CC                 AND             W3, W0, #0xFFFF
.text:00000000000085D0                 ADD             X1, X1, #unk_10DEC@PAGEOFF
.text:00000000000085D4                 ADD             X2, X2, #aFailedToOpenSp@PAGEOFF ; "failed to open spi: %x"
.text:00000000000085D8                 MOV             W0, #6
.text:00000000000085DC                 BL              .__android_log_print
.text:00000000000085E0                 MOV             W0, WZR
.text:00000000000085E4                 LDP             X29, X30, [SP+var_s0],#0x10
.text:00000000000085E8                 RET
.text:00000000000085E8 ; } // starts at 854C
.text:00000000000085E8 ; End of function _openSpiDrv
.text:00000000000085EC ; =============== S U B R O U T I N E =======================================
.text:00000000000085EC ; Attributes: bp-based frame
.text:00000000000085EC                 EXPORT _closeSpiDrv
.text:00000000000085EC _closeSpiDrv                            ; DATA XREF: LOAD:0000000000001300↑o
.text:00000000000085EC var_s0          =  0
.text:00000000000085EC ; __unwind {
.text:00000000000085EC                 STP             X29, X30, [SP,#-0x10+var_s0]!
.text:00000000000085F0                 MOV             X29, SP
.text:00000000000085F4                 BL              .secEseSPI_close
.text:00000000000085F8                 AND             W3, W0, #0xFFFF
.text:00000000000085FC                 CBZ             W3, loc_8624
.text:0000000000008600                 ADRP            X1, #unk_10DEC@PAGE
.text:0000000000008604                 ADRP            X2, #aFailedToCloseS@PAGE ; "failed to close spi: %x"
.text:0000000000008608                 ADD             X1, X1, #unk_10DEC@PAGEOFF
.text:000000000000860C                 ADD             X2, X2, #aFailedToCloseS@PAGEOFF ; "failed to close spi: %x"
.text:0000000000008610                 MOV             W0, #6
.text:0000000000008614                 BL              .__android_log_print
.text:0000000000008618                 MOV             W0, WZR
.text:000000000000861C                 LDP             X29, X30, [SP+var_s0],#0x10
.text:0000000000008620                 RET
.text:0000000000008624 ; ---------------------------------------------------------------------------
.text:0000000000008624 loc_8624                                ; CODE XREF: _closeSpiDrv+10↑j
.text:0000000000008624                 MOV             W0, #1
.text:0000000000008628                 LDP             X29, X30, [SP+var_s0],#0x10
.text:000000000000862C                 RET
.text:000000000000862C ; } // starts at 85EC
.text:000000000000862C ; End of function _closeSpiDrv
.text:0000000000008630 ; =============== S U B R O U T I N E =======================================
.text:0000000000008630 ; Attributes: bp-based frame
.text:0000000000008630                 EXPORT spiInit
.text:0000000000008630 spiInit                                 ; DATA XREF: LOAD:00000000000015E8↑o
.text:0000000000008630 var_16840       = -0x16840
.text:0000000000008630 s               = -0x16838
.text:0000000000008630 var_16834       = -0x16834
.text:0000000000008630 var_20          = -0x20
.text:0000000000008630 var_10          = -0x10
.text:0000000000008630 var_s0          =  0
.text:0000000000008630 ; __unwind {
.text:0000000000008630                 STP             X28, X27, [SP,#-0x10+var_20]!
.text:0000000000008634                 STP             X20, X19, [SP,#0x20+var_10]
.text:0000000000008638                 STP             X29, X30, [SP,#0x20+var_s0]
.text:000000000000863C                 ADD             X29, SP, #0x20
.text:0000000000008640                 SUB             SP, SP, #0x16,LSL#12
.text:0000000000008644                 SUB             SP, SP, #0x820
.text:0000000000008648                 ADRP            X19, #__stack_chk_guard_ptr@PAGE
.text:000000000000864C                 LDR             X19, [X19,#__stack_chk_guard_ptr@PAGEOFF]
.text:0000000000008650                 MOV             W2, #0x10000
.text:0000000000008654                 MOV             X20, SP
.text:0000000000008658                 ADD             X0, SP, #0x16840+s ; s
.text:000000000000865C                 LDR             X19, [X19]
.text:0000000000008660                 MOVK            W2, #0x680C ; n
.text:0000000000008664                 MOV             W1, WZR ; c
.text:0000000000008668                 STR             X19, [X20,#0x16840+var_16840]
.text:000000000000866C                 BL              .memset
.text:0000000000008670                 MOV             W8, #0xFFFFFFFF
.text:0000000000008674                 MOV             X1, XZR
.text:0000000000008678                 MOV             W0, #0xA
.text:000000000000867C                 ADD             X3, SP, #0x16840+s
.text:0000000000008680                 MOV             W2, WZR
.text:0000000000008684                 STR             W8, [SP,#0x16840+var_16834]
.text:0000000000008688                 BL              .invokeCommand
.text:000000000000868C                 LDR             W0, [SP,#0x16840+var_16834]
.text:0000000000008690                 LDR             X8, [X20,#0x16840+var_16840]
.text:0000000000008694                 SUB             X8, X19, X8
.text:0000000000008698                 CBNZ            X8, loc_86B0
.text:000000000000869C                 SUB             SP, X29, #0x20 ; ' '
.text:00000000000086A0                 LDP             X29, X30, [SP,#0x20+var_s0]
.text:00000000000086A4                 LDP             X20, X19, [SP,#0x20+var_10]
.text:00000000000086A8                 LDP             X28, X27, [SP+0x20+var_20],#0x30
.text:00000000000086AC                 RET
.text:00000000000086B0 ; ---------------------------------------------------------------------------
.text:00000000000086B0 loc_86B0                                ; CODE XREF: spiInit+68↑j
.text:00000000000086B0                 BL              .__stack_chk_fail
.text:00000000000086B0 ; } // starts at 8630
.text:00000000000086B0 ; End of function spiInit
.text:00000000000086B4 ; =============== S U B R O U T I N E =======================================
.text:00000000000086B4 ; Attributes: bp-based frame
.text:00000000000086B4                 EXPORT isDRKExists
.text:00000000000086B4 isDRKExists                             ; DATA XREF: LOAD:0000000000001438↑o
.text:00000000000086B4 var_10          = -0x10
.text:00000000000086B4 var_s0          =  0
.text:00000000000086B4 ; __unwind {
.text:00000000000086B4                 STP             X20, X19, [SP,#-0x10+var_10]!
.text:00000000000086B8                 STP             X29, X30, [SP,#0x10+var_s0]
.text:00000000000086BC                 ADD             X29, SP, #0x10
.text:00000000000086C0                 MOV             W0, #1
.text:00000000000086C4                 MOV             W19, #1
.text:00000000000086C8                 BL              .isExistDeviceRootKey
.text:00000000000086CC                 CMP             W0, #1
.text:00000000000086D0                 B.EQ            loc_8708
.text:00000000000086D4                 CBNZ            W0, loc_86EC
.text:00000000000086D8                 ADRP            X1, #unk_10DEC@PAGE
.text:00000000000086DC                 ADRP            X2, #aDrkIsNotExist@PAGE ; "DRK is not exist."
.text:00000000000086E0                 ADD             X1, X1, #unk_10DEC@PAGEOFF
.text:00000000000086E4                 ADD             X2, X2, #aDrkIsNotExist@PAGEOFF ; "DRK is not exist."
.text:00000000000086E8                 B               loc_86FC
.text:00000000000086EC ; ---------------------------------------------------------------------------
.text:00000000000086EC loc_86EC                                ; CODE XREF: isDRKExists+20↑j
.text:00000000000086EC                 ADRP            X1, #unk_10DEC@PAGE
.text:00000000000086F0                 ADRP            X2, #aFailedToCheckD@PAGE ; "Failed to check DRK."
.text:00000000000086F4                 ADD             X1, X1, #unk_10DEC@PAGEOFF
.text:00000000000086F8                 ADD             X2, X2, #aFailedToCheckD@PAGEOFF ; "Failed to check DRK."
.text:00000000000086FC loc_86FC                                ; CODE XREF: isDRKExists+34↑j
.text:00000000000086FC                 MOV             W0, #6
.text:0000000000008700                 BL              .__android_log_print
.text:0000000000008704                 MOV             W19, #0xFFFFFFFC
.text:0000000000008708 loc_8708                                ; CODE XREF: isDRKExists+1C↑j
.text:0000000000008708                 LDP             X29, X30, [SP,#0x10+var_s0]
.text:000000000000870C                 MOV             W0, W19
.text:0000000000008710                 LDP             X20, X19, [SP+0x10+var_10],#0x20
.text:0000000000008714                 RET
.text:0000000000008714 ; } // starts at 86B4
.text:0000000000008714 ; End of function isDRKExists
.text:0000000000008718 ; =============== S U B R O U T I N E =======================================
.text:0000000000008718 ; Attributes: bp-based frame
.text:0000000000008718                 EXPORT deactivateCards
.text:0000000000008718 deactivateCards                         ; CODE XREF: .deactivateCards+C↑j
.text:0000000000008718                                         ; DATA XREF: LOAD:0000000000001030↑o ...
.text:0000000000008718 var_16870       = -0x16870
.text:0000000000008718 s               = -0x16868
.text:0000000000008718 var_16864       = -0x16864
.text:0000000000008718 var_50          = -0x50
.text:0000000000008718 var_40          = -0x40
.text:0000000000008718 var_30          = -0x30
.text:0000000000008718 var_20          = -0x20
.text:0000000000008718 var_10          = -0x10
.text:0000000000008718 var_s0          =  0
.text:0000000000008718 ; __unwind {
.text:0000000000008718                 STP             X28, X27, [SP,#-0x10+var_50]!
.text:000000000000871C                 STP             X26, X25, [SP,#0x50+var_40]
.text:0000000000008720                 STP             X24, X23, [SP,#0x50+var_30]
.text:0000000000008724                 STP             X22, X21, [SP,#0x50+var_20]
.text:0000000000008728                 STP             X20, X19, [SP,#0x50+var_10]
.text:000000000000872C                 STP             X29, X30, [SP,#0x50+var_s0]
.text:0000000000008730                 ADD             X29, SP, #0x50
.text:0000000000008734                 SUB             SP, SP, #0x16,LSL#12
.text:0000000000008738                 SUB             SP, SP, #0x830
.text:000000000000873C                 ADRP            X23, #__stack_chk_guard_ptr@PAGE
.text:0000000000008740                 LDR             X23, [X23,#__stack_chk_guard_ptr@PAGEOFF]
.text:0000000000008744                 MOV             X19, X2
.text:0000000000008748                 MOV             W2, #0x10000
.text:000000000000874C                 MOV             X20, X1
.text:0000000000008750                 LDR             X23, [X23]
.text:0000000000008754                 MOV             W22, W0
.text:0000000000008758                 ADD             X26, SP, #0x16880+var_16870
.text:000000000000875C                 ADD             X0, SP, #0x16880+s ; s
.text:0000000000008760                 MOVK            W2, #0x680C ; n
.text:0000000000008764                 MOV             W1, WZR ; c
.text:0000000000008768                 MOV             W21, W3
.text:000000000000876C                 STR             X23, [X26]
.text:0000000000008770                 BL              .memset
.text:0000000000008774                 ADRP            X1, #unk_10DEC@PAGE
.text:0000000000008778                 ADRP            X2, #aDcRequesttypeD@PAGE ; "[DC]RequestType : %d"
.text:000000000000877C                 MOV             W8, #0xFFFFFFFF
.text:0000000000008780                 ADD             X1, X1, #unk_10DEC@PAGEOFF
.text:0000000000008784                 ADD             X2, X2, #aDcRequesttypeD@PAGEOFF ; "[DC]RequestType : %d"
.text:0000000000008788                 MOV             W0, #4
.text:000000000000878C                 MOV             W3, W22
.text:0000000000008790                 STR             W8, [SP,#0x16880+var_16864]
.text:0000000000008794                 BL              .__android_log_print
.text:0000000000008798                 CBZ             W22, loc_8828
.text:000000000000879C                 CMP             W22, #3
.text:00000000000087A0                 B.NE            loc_88F8
.text:00000000000087A4                 ADRP            X22, #unk_10DEC@PAGE
.text:00000000000087A8                 ADD             X22, X22, #unk_10DEC@PAGEOFF
.text:00000000000087AC                 ADRP            X2, #aStartDefaultWa@PAGE ; "Start Default Wallet CRS_REQUEST_BOOT"
.text:00000000000087B0                 ADD             X2, X2, #aStartDefaultWa@PAGEOFF ; "Start Default Wallet CRS_REQUEST_BOOT"
.text:00000000000087B4                 MOV             W0, #4
.text:00000000000087B8                 MOV             X1, X22
.text:00000000000087BC                 BL              .__android_log_print
.text:00000000000087C0                 ADRP            X2, #aGetDefaultWall@PAGE ; "Get Default Wallet List"
.text:00000000000087C4                 ADD             X2, X2, #aGetDefaultWall@PAGEOFF ; "Get Default Wallet List"
.text:00000000000087C8                 MOV             W0, #4
.text:00000000000087CC                 MOV             X1, X22
.text:00000000000087D0                 BL              .__android_log_print
.text:00000000000087D4                 MOV             W0, #0x23 ; '#'
.text:00000000000087D8                 ADD             X3, SP, #0x16880+s
.text:00000000000087DC                 MOV             X1, XZR
.text:00000000000087E0                 MOV             W2, WZR
.text:00000000000087E4                 ADD             X22, SP, #0x16880+s
.text:00000000000087E8                 BL              .invokeCommand
.text:00000000000087EC                 MOV             W8, #0x16808
.text:00000000000087F4                 ADD             X22, X22, X8
.text:00000000000087F8                 LDR             W3, [SP,#0x16880+var_16864]
.text:00000000000087FC                 LDR             W8, [X22]
.text:0000000000008800                 CBZ             W8, loc_891C
.text:0000000000008804                 CBZ             W3, loc_893C
.text:0000000000008808                 ADRP            X1, #unk_10DEC@PAGE
.text:000000000000880C                 ADRP            X2, #aDcFailGetWalle@PAGE ; "[DC]Fail Get Wallet List : %d"
.text:0000000000008810                 ADD             X1, X1, #unk_10DEC@PAGEOFF
.text:0000000000008814                 ADD             X2, X2, #aDcFailGetWalle@PAGEOFF ; "[DC]Fail Get Wallet List : %d"
.text:0000000000008818                 MOV             W0, #6
.text:000000000000881C                 BL              .__android_log_print
.text:0000000000008820                 MOV             W0, #0xFFFFFFED
.text:0000000000008824                 B               loc_8B24
.text:0000000000008828 ; ---------------------------------------------------------------------------
.text:0000000000008828 loc_8828                                ; CODE XREF: deactivateCards+80↑j
.text:0000000000008828                 ADRP            X1, #unk_10DEC@PAGE
.text:000000000000882C                 ADRP            X2, #aDcStartDdc@PAGE ; "[DC]Start DDC"
.text:0000000000008830                 ADD             X1, X1, #unk_10DEC@PAGEOFF
.text:0000000000008834                 ADD             X2, X2, #aDcStartDdc@PAGEOFF ; "[DC]Start DDC"
.text:0000000000008838                 MOV             W0, #4
.text:000000000000883C                 BL              .__android_log_print
.text:0000000000008840                 CBZ             W21, loc_8914
.text:0000000000008844                 MOV             W8, #0x16808
.text:000000000000884C                 ADD             X9, SP, #0x16880+s
.text:0000000000008850                 MOV             W28, W21
.text:0000000000008854                 ADRP            X21, #unk_10DEC@PAGE
.text:0000000000008858                 ADRP            X22, #aDcGetDca@PAGE ; "[DC]Get DCA"
.text:000000000000885C                 ADRP            X24, #aDcStartDdc@PAGE ; "[DC]Start DDC"
.text:0000000000008860                 MOV             X27, XZR
.text:0000000000008864                 ADD             X21, X21, #unk_10DEC@PAGEOFF
.text:0000000000008868                 ADD             X22, X22, #aDcGetDca@PAGEOFF ; "[DC]Get DCA"
.text:000000000000886C                 ADD             X25, X9, X8
.text:0000000000008870                 ADD             X23, X9, #8
.text:0000000000008874                 ADD             X24, X24, #aDcStartDdc@PAGEOFF ; "[DC]Start DDC"
.text:0000000000008878 loc_8878                                ; CODE XREF: deactivateCards+1C8↓j
.text:0000000000008878                 MOV             W0, #4
.text:000000000000887C                 MOV             X1, X21
.text:0000000000008880                 MOV             X2, X22
.text:0000000000008884                 BL              .__android_log_print
.text:0000000000008888                 LDR             X1, [X20,X27,LSL#3]
.text:000000000000888C                 LDR             W2, [X19,X27,LSL#2]
.text:0000000000008890                 MOV             W0, #0x24 ; '$'
.text:0000000000008894                 ADD             X3, SP, #0x16880+s
.text:0000000000008898                 BL              .invokeCommand
.text:000000000000889C                 LDR             W3, [SP,#0x16880+var_16864]
.text:00000000000088A0                 LDR             W8, [X25]
.text:00000000000088A4                 CBZ             W8, loc_8A4C
.text:00000000000088A8                 CBNZ            W3, loc_8A78
.text:00000000000088AC                 MOV             W0, #4
.text:00000000000088B0                 MOV             X1, X21
.text:00000000000088B4                 MOV             X2, X24
.text:00000000000088B8                 BL              .__android_log_print
.text:00000000000088BC                 LDR             W2, [X25]
.text:00000000000088C0                 MOV             W0, #0x25 ; '%'
.text:00000000000088C4                 ADD             X3, SP, #0x16880+s
.text:00000000000088C8                 MOV             X1, X23
.text:00000000000088CC                 BL              .invokeCommand
.text:00000000000088D0                 LDR             W3, [SP,#0x16880+var_16864]
.text:00000000000088D4                 CBNZ            W3, loc_8AA4
.text:00000000000088D8                 ADD             X27, X27, #1
.text:00000000000088DC                 CMP             X27, X28
.text:00000000000088E0                 B.CC            loc_8878
.text:00000000000088E4                 ADRP            X23, #__stack_chk_guard_ptr@PAGE
.text:00000000000088E8                 LDR             X23, [X23,#__stack_chk_guard_ptr@PAGEOFF]
.text:00000000000088EC                 MOV             W0, WZR
.text:00000000000088F0                 LDR             X23, [X23]
.text:00000000000088F4                 B               loc_8B24
.text:00000000000088F8 ; ---------------------------------------------------------------------------
.text:00000000000088F8 loc_88F8                                ; CODE XREF: deactivateCards+88↑j
.text:00000000000088F8                 ADRP            X1, #unk_10DEC@PAGE
.text:00000000000088FC                 ADRP            X2, #aDcRequesttypeD@PAGE ; "[DC]RequestType : %d"
.text:0000000000008900                 ADD             X1, X1, #unk_10DEC@PAGEOFF
.text:0000000000008904                 ADD             X2, X2, #aDcRequesttypeD@PAGEOFF ; "[DC]RequestType : %d"
.text:0000000000008908                 MOV             W0, #6
.text:000000000000890C                 MOV             W3, W22
.text:0000000000008910                 BL              .__android_log_print
.text:0000000000008914 loc_8914                                ; CODE XREF: deactivateCards+128↑j
.text:0000000000008914                 MOV             W0, #0xFFFFFFFF
.text:0000000000008918                 B               loc_8B24
.text:000000000000891C ; ---------------------------------------------------------------------------
.text:000000000000891C loc_891C                                ; CODE XREF: deactivateCards+E8↑j
.text:000000000000891C                 ADRP            X1, #unk_10DEC@PAGE
.text:0000000000008920                 ADRP            X2, #aDcDonTHaveDcD@PAGE ; "[DC]Don't have DC : %d"
.text:0000000000008924                 ADD             X1, X1, #unk_10DEC@PAGEOFF
.text:0000000000008928                 ADD             X2, X2, #aDcDonTHaveDcD@PAGEOFF ; "[DC]Don't have DC : %d"
.text:000000000000892C                 MOV             W0, #6
.text:0000000000008930                 BL              .__android_log_print
.text:0000000000008934                 MOV             W0, #0xFFFFFFE9
.text:0000000000008938                 B               loc_8B24
.text:000000000000893C ; ---------------------------------------------------------------------------
.text:000000000000893C loc_893C                                ; CODE XREF: deactivateCards+EC↑j
.text:000000000000893C                 ADRP            X1, #unk_10DEC@PAGE
.text:0000000000008940                 ADRP            X2, #aDcPackageListC@PAGE ; "[DC] Package List Count : %d"
.text:0000000000008944                 ADD             X1, X1, #unk_10DEC@PAGEOFF
.text:0000000000008948                 ADD             X2, X2, #aDcPackageListC@PAGEOFF ; "[DC] Package List Count : %d"
.text:000000000000894C                 MOV             W0, #4
.text:0000000000008950                 MOV             W3, W21
.text:0000000000008954                 BL              .__android_log_print
.text:0000000000008958                 CBZ             W21, loc_8AD0
.text:000000000000895C                 LDR             W10, [X22]
.text:0000000000008960                 ADD             X11, SP, #0x16880+s
.text:0000000000008964                 MOV             X8, XZR
.text:0000000000008968                 MOV             W9, W21
.text:000000000000896C                 ADD             X11, X11, #8
.text:0000000000008970                 MOV             W12, #1
.text:0000000000008974 loc_8974                                ; CODE XREF: deactivateCards+2B0↓j
.text:0000000000008974                 LDR             W13, [X19,X8,LSL#2]
.text:0000000000008978                 MOV             W21, WZR
.text:000000000000897C                 CBZ             W13, loc_89C0
.text:0000000000008980                 CBZ             W10, loc_89C0
.text:0000000000008984                 CMP             W13, W10
.text:0000000000008988                 B.NE            loc_89BC
.text:000000000000898C                 LDR             X14, [X20,X8,LSL#3]
.text:0000000000008990                 MOV             X13, XZR
.text:0000000000008994                 MOV             W21, WZR
.text:0000000000008998 loc_8998                                ; CODE XREF: deactivateCards+298↓j
.text:0000000000008998                 LDRB            W15, [X14,X13]
.text:000000000000899C                 LDRB            W16, [X11,X13]
.text:00000000000089A0                 ADD             X13, X13, #1
.text:00000000000089A4                 CMP             W15, W16
.text:00000000000089A8                 CSEL            W21, W21, W12, EQ
.text:00000000000089AC                 CMP             X13, X10
.text:00000000000089B0                 B.CC            loc_8998
.text:00000000000089B4                 CBNZ            W21, loc_89C0
.text:00000000000089B8                 B               loc_8AEC
.text:00000000000089BC ; ---------------------------------------------------------------------------
.text:00000000000089BC loc_89BC                                ; CODE XREF: deactivateCards+270↑j
.text:00000000000089BC                 MOV             W21, #1
.text:00000000000089C0 loc_89C0                                ; CODE XREF: deactivateCards+264↑j
.text:00000000000089C0                                         ; deactivateCards+268↑j ...
.text:00000000000089C0                 ADD             X8, X8, #1
.text:00000000000089C4                 CMP             X8, X9
.text:00000000000089C8                 B.CC            loc_8974
.text:00000000000089CC                 ADRP            X1, #unk_10DEC@PAGE
.text:00000000000089D0                 ADRP            X2, #aDcCompareDefau@PAGE ; "[DC] Compare Default Card List : %d"
.text:00000000000089D4                 ADD             X1, X1, #unk_10DEC@PAGEOFF
.text:00000000000089D8                 ADD             X2, X2, #aDcCompareDefau@PAGEOFF ; "[DC] Compare Default Card List : %d"
.text:00000000000089DC                 MOV             W0, #4
.text:00000000000089E0                 MOV             W3, W21
.text:00000000000089E4                 BL              .__android_log_print
.text:00000000000089E8                 CMP             W21, #0
.text:00000000000089EC                 B.LE            loc_8B08
.text:00000000000089F0                 ADRP            X1, #unk_10DEC@PAGE
.text:00000000000089F4                 ADRP            X2, #aDeactivatecard@PAGE ; "[DeactivateCard]Get default card AID"
.text:00000000000089F8                 ADD             X1, X1, #unk_10DEC@PAGEOFF
.text:00000000000089FC                 ADD             X2, X2, #aDeactivatecard@PAGEOFF ; "[DeactivateCard]Get default card AID"
.text:0000000000008A00                 MOV             W0, #4
.text:0000000000008A04                 BL              .__android_log_print
.text:0000000000008A08                 LDR             W2, [X22]
.text:0000000000008A0C                 ADD             X8, SP, #0x16880+s
.text:0000000000008A10                 ADD             X19, X8, #8
.text:0000000000008A14                 MOV             W0, #0x24 ; '$'
.text:0000000000008A18                 ADD             X3, SP, #0x16880+s
.text:0000000000008A1C                 MOV             X1, X19
.text:0000000000008A20                 BL              .invokeCommand
.text:0000000000008A24                 LDR             W3, [SP,#0x16880+var_16864]
.text:0000000000008A28                 CBZ             W3, loc_8B50
.text:0000000000008A2C                 ADRP            X1, #unk_10DEC@PAGE
.text:0000000000008A30                 ADRP            X2, #aDcFailGetDcaD@PAGE ; "[DC]Fail get DCA : %d"
.text:0000000000008A34                 ADD             X1, X1, #unk_10DEC@PAGEOFF
.text:0000000000008A38                 ADD             X2, X2, #aDcFailGetDcaD@PAGEOFF ; "[DC]Fail get DCA : %d"
.text:0000000000008A3C                 MOV             W0, #6
.text:0000000000008A40                 BL              .__android_log_print
.text:0000000000008A44                 MOV             W0, #0xFFFFFFEC
.text:0000000000008A48                 B               loc_8B24
.text:0000000000008A4C ; ---------------------------------------------------------------------------
.text:0000000000008A4C loc_8A4C                                ; CODE XREF: deactivateCards+18C↑j
.text:0000000000008A4C                 ADRP            X1, #unk_10DEC@PAGE
.text:0000000000008A50                 ADRP            X2, #aDcDonTHaveDcD@PAGE ; "[DC]Don't have DC : %d"
.text:0000000000008A54                 ADD             X1, X1, #unk_10DEC@PAGEOFF
.text:0000000000008A58                 ADD             X2, X2, #aDcDonTHaveDcD@PAGEOFF ; "[DC]Don't have DC : %d"
.text:0000000000008A5C                 MOV             W0, #6
.text:0000000000008A60                 BL              .__android_log_print
.text:0000000000008A64                 ADRP            X23, #__stack_chk_guard_ptr@PAGE
.text:0000000000008A68                 LDR             X23, [X23,#__stack_chk_guard_ptr@PAGEOFF]
.text:0000000000008A6C                 MOV             W0, #0xFFFFFFE9
.text:0000000000008A70                 LDR             X23, [X23]
.text:0000000000008A74                 B               loc_8B24
.text:0000000000008A78 ; ---------------------------------------------------------------------------
.text:0000000000008A78 loc_8A78                                ; CODE XREF: deactivateCards+190↑j
.text:0000000000008A78                 ADRP            X1, #unk_10DEC@PAGE
.text:0000000000008A7C                 ADRP            X2, #aDcFailGetDcaD@PAGE ; "[DC]Fail get DCA : %d"
.text:0000000000008A80                 ADD             X1, X1, #unk_10DEC@PAGEOFF
.text:0000000000008A84                 ADD             X2, X2, #aDcFailGetDcaD@PAGEOFF ; "[DC]Fail get DCA : %d"
.text:0000000000008A88                 MOV             W0, #6
.text:0000000000008A8C                 BL              .__android_log_print
.text:0000000000008A90                 ADRP            X23, #__stack_chk_guard_ptr@PAGE
.text:0000000000008A94                 LDR             X23, [X23,#__stack_chk_guard_ptr@PAGEOFF]
.text:0000000000008A98                 MOV             W0, #0xFFFFFFEC
.text:0000000000008A9C                 LDR             X23, [X23]
.text:0000000000008AA0                 B               loc_8B24
.text:0000000000008AA4 ; ---------------------------------------------------------------------------
.text:0000000000008AA4 loc_8AA4                                ; CODE XREF: deactivateCards+1BC↑j
.text:0000000000008AA4                 ADRP            X1, #unk_10DEC@PAGE
.text:0000000000008AA8                 ADRP            X2, #aDcFailDdcD@PAGE ; "[DC]Fail DDC : %d"
.text:0000000000008AAC                 ADD             X1, X1, #unk_10DEC@PAGEOFF
.text:0000000000008AB0                 ADD             X2, X2, #aDcFailDdcD@PAGEOFF ; "[DC]Fail DDC : %d"
.text:0000000000008AB4                 MOV             W0, #6
.text:0000000000008AB8                 BL              .__android_log_print
.text:0000000000008ABC                 ADRP            X23, #__stack_chk_guard_ptr@PAGE
.text:0000000000008AC0                 LDR             X23, [X23,#__stack_chk_guard_ptr@PAGEOFF]
.text:0000000000008AC4                 MOV             W0, #0xFFFFFFEB
.text:0000000000008AC8                 LDR             X23, [X23]
.text:0000000000008ACC                 B               loc_8B24
.text:0000000000008AD0 ; ---------------------------------------------------------------------------
.text:0000000000008AD0 loc_8AD0                                ; CODE XREF: deactivateCards+240↑j
.text:0000000000008AD0                 ADRP            X1, #unk_10DEC@PAGE
.text:0000000000008AD4                 ADRP            X2, #aDcCompareDefau@PAGE ; "[DC] Compare Default Card List : %d"
.text:0000000000008AD8                 MOV             W3, WZR
.text:0000000000008ADC                 ADD             X1, X1, #unk_10DEC@PAGEOFF
.text:0000000000008AE0                 ADD             X2, X2, #aDcCompareDefau@PAGEOFF ; "[DC] Compare Default Card List : %d"
.text:0000000000008AE4                 MOV             W0, #4
.text:0000000000008AE8                 B               loc_8B04
.text:0000000000008AEC ; ---------------------------------------------------------------------------
.text:0000000000008AEC loc_8AEC                                ; CODE XREF: deactivateCards+2A0↑j
.text:0000000000008AEC                 ADRP            X1, #unk_10DEC@PAGE
.text:0000000000008AF0                 ADRP            X2, #aDcCompareDefau@PAGE ; "[DC] Compare Default Card List : %d"
.text:0000000000008AF4                 ADD             X1, X1, #unk_10DEC@PAGEOFF
.text:0000000000008AF8                 ADD             X2, X2, #aDcCompareDefau@PAGEOFF ; "[DC] Compare Default Card List : %d"
.text:0000000000008AFC                 MOV             W0, #4
.text:0000000000008B00                 MOV             W3, #0xFFFFFFFF
.text:0000000000008B04 loc_8B04                                ; CODE XREF: deactivateCards+3D0↑j
.text:0000000000008B04                 BL              .__android_log_print
.text:0000000000008B08 loc_8B08                                ; CODE XREF: deactivateCards+2D4↑j
.text:0000000000008B08                 ADRP            X1, #unk_10DEC@PAGE
.text:0000000000008B0C                 ADRP            X2, #aDcDoNotNeedDdc@PAGE ; "[DC]Do not need DDC"
.text:0000000000008B10                 ADD             X1, X1, #unk_10DEC@PAGEOFF
.text:0000000000008B14                 ADD             X2, X2, #aDcDoNotNeedDdc@PAGEOFF ; "[DC]Do not need DDC"
.text:0000000000008B18                 MOV             W0, #6
.text:0000000000008B1C                 BL              .__android_log_print
.text:0000000000008B20                 MOV             W0, #0xFFFFFFEA
.text:0000000000008B24 loc_8B24                                ; CODE XREF: deactivateCards+10C↑j
.text:0000000000008B24                                         ; deactivateCards+1DC↑j ...
.text:0000000000008B24                 LDR             X8, [X26]
.text:0000000000008B28                 SUB             X8, X23, X8
.text:0000000000008B2C                 CBNZ            X8, loc_8BAC
.text:0000000000008B30                 SUB             SP, X29, #0x50 ; 'P'
.text:0000000000008B34                 LDP             X29, X30, [SP,#0x50+var_s0]
.text:0000000000008B38                 LDP             X20, X19, [SP,#0x50+var_10]
.text:0000000000008B3C                 LDP             X22, X21, [SP,#0x50+var_20]
.text:0000000000008B40                 LDP             X24, X23, [SP,#0x50+var_30]
.text:0000000000008B44                 LDP             X26, X25, [SP,#0x50+var_40]
.text:0000000000008B48                 LDP             X28, X27, [SP+0x50+var_50],#0x60
.text:0000000000008B4C                 RET
.text:0000000000008B50 ; ---------------------------------------------------------------------------
.text:0000000000008B50 loc_8B50                                ; CODE XREF: deactivateCards+310↑j
.text:0000000000008B50                 ADRP            X1, #unk_10DEC@PAGE
.text:0000000000008B54                 ADRP            X2, #aDcStartDdc@PAGE ; "[DC]Start DDC"
.text:0000000000008B58                 ADD             X1, X1, #unk_10DEC@PAGEOFF
.text:0000000000008B5C                 ADD             X2, X2, #aDcStartDdc@PAGEOFF ; "[DC]Start DDC"
.text:0000000000008B60                 MOV             W0, #4
.text:0000000000008B64                 BL              .__android_log_print
.text:0000000000008B68                 LDR             W2, [X22]
.text:0000000000008B6C                 MOV             W0, #0x25 ; '%'
.text:0000000000008B70                 ADD             X3, SP, #0x16880+s
.text:0000000000008B74                 MOV             X1, X19
.text:0000000000008B78                 BL              .invokeCommand
.text:0000000000008B7C                 LDR             W3, [SP,#0x16880+var_16864]
.text:0000000000008B80                 CBZ             W3, loc_8BA4
.text:0000000000008B84                 ADRP            X1, #unk_10DEC@PAGE
.text:0000000000008B88                 ADRP            X2, #aDcFailDdcD@PAGE ; "[DC]Fail DDC : %d"
.text:0000000000008B8C                 ADD             X1, X1, #unk_10DEC@PAGEOFF
.text:0000000000008B90                 ADD             X2, X2, #aDcFailDdcD@PAGEOFF ; "[DC]Fail DDC : %d"
.text:0000000000008B94                 MOV             W0, #6
.text:0000000000008B98                 BL              .__android_log_print
.text:0000000000008B9C                 MOV             W0, #0xFFFFFFEB
.text:0000000000008BA0                 B               loc_8B24
.text:0000000000008BA4 ; ---------------------------------------------------------------------------
.text:0000000000008BA4 loc_8BA4                                ; CODE XREF: deactivateCards+468↑j
.text:0000000000008BA4                 MOV             W0, WZR
.text:0000000000008BA8                 B               loc_8B24
.text:0000000000008BAC ; ---------------------------------------------------------------------------
.text:0000000000008BAC loc_8BAC                                ; CODE XREF: deactivateCards+414↑j
.text:0000000000008BAC                 BL              .__stack_chk_fail
.text:0000000000008BAC ; } // starts at 8718
.text:0000000000008BAC ; End of function deactivateCards
.text:0000000000008BB0 ; =============== S U B R O U T I N E =======================================
.text:0000000000008BB0 ; Attributes: bp-based frame
.text:0000000000008BB0 ; __int64 __fastcall deactivateCardsAID(int, int, int, int, int, int, int, int, __int64, int, int, int)
.text:0000000000008BB0                 EXPORT deactivateCardsAID
.text:0000000000008BB0 deactivateCardsAID                      ; CODE XREF: .deactivateCardsAID+C↑j
.text:0000000000008BB0                                         ; DATA XREF: LOAD:0000000000001138↑o ...
.text:0000000000008BB0 var_22F1B       = -0x22F1B
.text:0000000000008BB0 var_22F1A       = -0x22F1A
.text:0000000000008BB0 var_22F14       = -0x22F14
.text:0000000000008BB0 var_22F10       = -0x22F10
.text:0000000000008BB0 var_22F08       = -0x22F08
.text:0000000000008BB0 var_22F00       = -0x22F00
.text:0000000000008BB0 var_22EF4       = -0x22EF4
.text:0000000000008BB0 var_22EF0       = -0x22EF0
.text:0000000000008BB0 var_22EE4       = -0x22EE4
.text:0000000000008BB0 var_22EE0       = -0x22EE0
.text:0000000000008BB0 var_22ED8       = -0x22ED8
.text:0000000000008BB0 s               = -0x22D48
.text:0000000000008BB0 var_22D47       = -0x22D47
.text:0000000000008BB0 var_50          = -0x50
.text:0000000000008BB0 var_40          = -0x40
.text:0000000000008BB0 var_30          = -0x30
.text:0000000000008BB0 var_20          = -0x20
.text:0000000000008BB0 var_10          = -0x10
.text:0000000000008BB0 var_s0          =  0
.text:0000000000008BB0 arg_0           =  0x10
.text:0000000000008BB0 arg_10          =  0x20
.text:0000000000008BB0 ; __unwind {
.text:0000000000008BB0                 STP             X28, X27, [SP,#-0x10+var_50]!
.text:0000000000008BB4                 STP             X26, X25, [SP,#0x50+var_40]
.text:0000000000008BB8                 STP             X24, X23, [SP,#0x50+var_30]
.text:0000000000008BBC                 STP             X22, X21, [SP,#0x50+var_20]
.text:0000000000008BC0                 STP             X20, X19, [SP,#0x50+var_10]
.text:0000000000008BC4                 STP             X29, X30, [SP,#0x50+var_s0]
.text:0000000000008BC8                 ADD             X29, SP, #0x50
.text:0000000000008BCC                 SUB             SP, SP, #0x22,LSL#12
.text:0000000000008BD0                 SUB             SP, SP, #0xED0
.text:0000000000008BD4                 ADRP            X26, #__stack_chk_guard_ptr@PAGE
.text:0000000000008BD8                 LDR             X26, [X26,#__stack_chk_guard_ptr@PAGEOFF]
.text:0000000000008BDC                 MOV             X25, X2
.text:0000000000008BE0                 MOV             W28, W0
.text:0000000000008BE4                 ADD             X0, SP, #0x22F20+var_22F14,LSL#12
.text:0000000000008BE8                 LDR             X26, [X26]
.text:0000000000008BEC                 MOV             W2, #0x10000
.text:0000000000008BF0                 STR             W1, [SP,#0x22F20+var_22EE4]
.text:0000000000008BF4                 ADD             X8, SP, #0x22F20+var_22EE0
.text:0000000000008BF8                 ADD             X19, SP, #0x22F20+var_22F14,LSL#12
.text:0000000000008BFC                 ADD             X0, X0, #0x6B8 ; s
.text:0000000000008C00                 MOVK            W2, #0x680C ; n
.text:0000000000008C04                 MOV             W1, WZR ; c
.text:0000000000008C08                 MOV             W20, W7
.text:0000000000008C0C                 MOV             X21, X6
.text:0000000000008C10                 MOV             X22, X5
.text:0000000000008C14                 MOV             W23, W4
.text:0000000000008C18                 MOV             X24, X3
.text:0000000000008C1C                 STR             W28, [SP,#0x22F20+var_22EF4]
.text:0000000000008C20                 ADD             X19, X19, #0x6B8
.text:0000000000008C24                 STR             X26, [X8]
.text:0000000000008C28                 BL              .memset
.text:0000000000008C2C                 ADD             X0, SP, #0x22F20+var_22F1A,LSL#12
.text:0000000000008C30                 MOV             W8, #0xFFFFFFFF
.text:0000000000008C34                 ADD             X0, X0, #0x510 ; s
.text:0000000000008C38                 MOV             W2, #0x61A8 ; n
.text:0000000000008C3C                 MOV             W1, WZR ; c
.text:0000000000008C40                 STR             W8, [X19,#4]
.text:0000000000008C44                 BL              .memset
.text:0000000000008C48                 ADD             X27, SP, #0x22F20+var_22F1B,LSL#12
.text:0000000000008C4C                 ADD             X0, SP, #0x22F20+var_22F1A,LSL#12
.text:0000000000008C50                 MOV             W19, #0xFF
.text:0000000000008C54                 ADD             X27, X27, #0x512
.text:0000000000008C58                 ADD             X0, X0, #0x380 ; s
.text:0000000000008C5C                 MOV             W2, #0x190 ; n
.text:0000000000008C60                 MOV             W1, WZR ; c
.text:0000000000008C64                 STRB            W19, [X27,#0xFFF]
.text:0000000000008C68                 BL              .memset
.text:0000000000008C6C                 ADD             X0, SP, #0x22F20+s ; s
.text:0000000000008C70                 MOV             W2, #0x61A8 ; n
.text:0000000000008C74                 MOV             W1, WZR ; c
.text:0000000000008C78                 BL              .memset
.text:0000000000008C7C                 ADD             X0, SP, #0x22F20+var_22ED8 ; s
.text:0000000000008C80                 MOV             W2, #0x190 ; n
.text:0000000000008C84                 MOV             W1, WZR ; c
.text:0000000000008C88                 STRB            W19, [SP,#0x22F20+var_22D47]
.text:0000000000008C8C                 BL              .memset
.text:0000000000008C90                 ADRP            X27, #unk_10DEC@PAGE
.text:0000000000008C94                 ADD             X27, X27, #unk_10DEC@PAGEOFF
.text:0000000000008C98                 ADRP            X2, #aDcaRequesttype@PAGE ; "[DCA]RequestType : %d"
.text:0000000000008C9C                 ADD             X2, X2, #aDcaRequesttype@PAGEOFF ; "[DCA]RequestType : %d"
.text:0000000000008CA0                 MOV             W0, #4
.text:0000000000008CA4                 MOV             X1, X27
.text:0000000000008CA8                 MOV             W3, W28
.text:0000000000008CAC                 BL              .__android_log_print
.text:0000000000008CB0                 ADRP            X2, #aDcaStartDca@PAGE ; "[DCA] Start DCA"
.text:0000000000008CB4                 ADD             X2, X2, #aDcaStartDca@PAGEOFF ; "[DCA] Start DCA"
.text:0000000000008CB8                 MOV             W0, #4
.text:0000000000008CBC                 MOV             X1, X27
.text:0000000000008CC0                 BL              .__android_log_print
.text:0000000000008CC4                 ADRP            X2, #aGetRfa@PAGE ; "Get RFA"
.text:0000000000008CC8                 ADD             X2, X2, #aGetRfa@PAGEOFF ; "Get RFA"
.text:0000000000008CCC                 MOV             W0, #4
.text:0000000000008CD0                 MOV             X1, X27
.text:0000000000008CD4                 BL              .__android_log_print
.text:0000000000008CD8                 ADD             X3, SP, #0x22F20+var_22F14,LSL#12
.text:0000000000008CDC                 MOV             X1, XZR
.text:0000000000008CE0                 MOV             W0, #0x26 ; '&'
.text:0000000000008CE4                 ADD             X3, X3, #0x6B8
.text:0000000000008CE8                 MOV             W2, WZR
.text:0000000000008CEC                 BL              .invokeCommand
.text:0000000000008CF0                 ADD             X9, SP, #0x22F20+var_22F14,LSL#12
.text:0000000000008CF4                 MOV             W8, #0x10000
.text:0000000000008CF8                 ADD             X9, X9, #0x6B8
.text:0000000000008CFC                 MOVK            W8, #0x6808
.text:0000000000008D00                 ADD             X19, X9, X8
.text:0000000000008D04                 LDR             W8, [X19]
.text:0000000000008D08                 CBZ             W8, loc_8D7C
.text:0000000000008D0C                 ADRP            X1, #unk_10DEC@PAGE
.text:0000000000008D10                 ADRP            X2, #aDcaReceiveAidL@PAGE ; "[DCA]Receive AID List CNT : %d"
.text:0000000000008D14                 ADD             X1, X1, #unk_10DEC@PAGEOFF
.text:0000000000008D18                 ADD             X2, X2, #aDcaReceiveAidL@PAGEOFF ; "[DCA]Receive AID List CNT : %d"
.text:0000000000008D1C                 MOV             W0, #4
.text:0000000000008D20                 MOV             W3, W23
.text:0000000000008D24                 BL              .__android_log_print
.text:0000000000008D28                 LDR             W8, [X19]
.text:0000000000008D2C                 CBZ             W8, loc_91F0
.text:0000000000008D30                 STR             X19, [SP,#0x22F20+var_22F00]
.text:0000000000008D34                 LDR             W27, [X29,#arg_10]
.text:0000000000008D38                 LDR             X19, [X29,#arg_0]
.text:0000000000008D3C                 ADD             X0, SP, #0x22F20+var_22F1A,LSL#12
.text:0000000000008D40                 ADD             X0, X0, #0x510
.text:0000000000008D44                 ADD             X26, SP, #0x22F20+var_22F14,LSL#12
.text:0000000000008D48                 ADD             X14, SP, #0x22F20+var_22F1A,LSL#12
.text:0000000000008D4C                 ADRP            X1, #unk_10DEC@PAGE
.text:0000000000008D50                 ADRP            X2, #aDcaMaxSizeErro@PAGE ; "[DCA]MAX Size Error : %d"
.text:0000000000008D54                 MOV             W18, WZR
.text:0000000000008D58                 MOV             W9, WZR
.text:0000000000008D5C                 ADD             X26, X26, #0x6B8
.text:0000000000008D60                 ADD             X14, X14, #0x380
.text:0000000000008D64                 ADD             X4, X0, #1
.text:0000000000008D68                 ADD             X1, X1, #unk_10DEC@PAGEOFF
.text:0000000000008D6C                 ADD             X2, X2, #aDcaMaxSizeErro@PAGEOFF ; "[DCA]MAX Size Error : %d"
.text:0000000000008D70                 MOV             W5, #0xFA
.text:0000000000008D74                 STR             X19, [SP,#0x22F20+var_22EF0]
.text:0000000000008D78                 B               loc_8E54
.text:0000000000008D7C ; ---------------------------------------------------------------------------
.text:0000000000008D7C loc_8D7C                                ; CODE XREF: deactivateCardsAID+158↑j
.text:0000000000008D7C                 LDR             W3, [X9,#4]
.text:0000000000008D80                 ADRP            X1, #unk_10DEC@PAGE
.text:0000000000008D84                 ADRP            X2, #aDcaErrGetRacD@PAGE ; "[DCA]Err Get RAC : %d"
.text:0000000000008D88                 ADD             X1, X1, #unk_10DEC@PAGEOFF
.text:0000000000008D8C                 ADD             X2, X2, #aDcaErrGetRacD@PAGEOFF ; "[DCA]Err Get RAC : %d"
.text:0000000000008D90                 MOV             W0, #6
.text:0000000000008D94                 BL              .__android_log_print
.text:0000000000008D98                 MOV             W0, #0xFFFFFFE6
.text:0000000000008D9C                 B               loc_95D4
.text:0000000000008DA0 ; ---------------------------------------------------------------------------
.text:0000000000008DA0 loc_8DA0                                ; CODE XREF: deactivateCardsAID+350↓j
.text:0000000000008DA0                 CBZ             W3, loc_8DE0
.text:0000000000008DA4                 CMP             W3, #1
.text:0000000000008DA8                 B.LS            loc_8DB8
.text:0000000000008DAC                 AND             W11, W3, #1
.text:0000000000008DB0                 CMP             W3, W11
.text:0000000000008DB4                 B.NE            loc_8E08
.text:0000000000008DB8 loc_8DB8                                ; CODE XREF: deactivateCardsAID+1F8↑j
.text:0000000000008DB8                 MOV             X9, XZR
.text:0000000000008DBC loc_8DBC                                ; CODE XREF: deactivateCardsAID+29C↓j
.text:0000000000008DBC                 MOV             W11, W18
.text:0000000000008DC0                 MADD            X11, X11, X5, X0
.text:0000000000008DC4 loc_8DC4                                ; CODE XREF: deactivateCardsAID+22C↓j
.text:0000000000008DC4                 ADD             X12, X26, W10,UXTW
.text:0000000000008DC8                 LDRB            W12, [X12,#8]
.text:0000000000008DCC                 ADD             W10, W10, #1
.text:0000000000008DD0                 STRB            W12, [X11,X9]
.text:0000000000008DD4                 ADD             X9, X9, #1
.text:0000000000008DD8                 CMP             X9, X3
.text:0000000000008DDC                 B.CC            loc_8DC4
.text:0000000000008DE0 loc_8DE0                                ; CODE XREF: deactivateCardsAID:loc_8DA0↑j
.text:0000000000008DE0                                         ; deactivateCardsAID+2A0↓j
.text:0000000000008DE0                 ADD             W18, W18, #1
.text:0000000000008DE4 loc_8DE4                                ; CODE XREF: deactivateCardsAID+380↓j
.text:0000000000008DE4                 ADD             W9, W28, W19
.text:0000000000008DE8                 LDR             X19, [SP,#0x22F20+var_22EF0]
.text:0000000000008DEC                 ADD             X14, SP, #0x22F20+var_22F1A,LSL#12
.text:0000000000008DF0                 ADRP            X1, #unk_10DEC@PAGE
.text:0000000000008DF4                 ADRP            X2, #aDcaMaxSizeErro@PAGE ; "[DCA]MAX Size Error : %d"
.text:0000000000008DF8                 ADD             X14, X14, #0x380
.text:0000000000008DFC                 ADD             X1, X1, #unk_10DEC@PAGEOFF
.text:0000000000008E00                 ADD             X2, X2, #aDcaMaxSizeErro@PAGEOFF ; "[DCA]MAX Size Error : %d"
.text:0000000000008E04                 B               loc_8F3C
.text:0000000000008E08 ; ---------------------------------------------------------------------------
.text:0000000000008E08 loc_8E08                                ; CODE XREF: deactivateCardsAID+204↑j
.text:0000000000008E08                 AND             X13, X3, #1
.text:0000000000008E0C                 MOV             W14, W18
.text:0000000000008E10                 ADD             W12, W9, #4
.text:0000000000008E14                 AND             W15, W3, #1
.text:0000000000008E18                 SUB             X9, X3, X13
.text:0000000000008E1C                 MADD            X13, X14, X5, X4
.text:0000000000008E20                 ADD             W10, W10, W9
.text:0000000000008E24                 SUB             X14, X3, W15,UXTW
.text:0000000000008E28 loc_8E28                                ; CODE XREF: deactivateCardsAID+298↓j
.text:0000000000008E28                 ADD             W15, W12, #1
.text:0000000000008E2C                 ADD             X16, X26, #8
.text:0000000000008E30                 LDRB            W17, [X16,W12,UXTW]
.text:0000000000008E34                 LDRB            W15, [X16,W15,UXTW]
.text:0000000000008E38                 ADD             W12, W12, #2
.text:0000000000008E3C                 SUB             X14, X14, #2
.text:0000000000008E40                 STURB           W17, [X13,#-1]
.text:0000000000008E44                 STRB            W15, [X13],#2
.text:0000000000008E48                 CBNZ            X14, loc_8E28
.text:0000000000008E4C                 CBNZ            W11, loc_8DBC
.text:0000000000008E50                 B               loc_8DE0
.text:0000000000008E54 ; ---------------------------------------------------------------------------
.text:0000000000008E54 loc_8E54                                ; CODE XREF: deactivateCardsAID+1C8↑j
.text:0000000000008E54                                         ; deactivateCardsAID+394↓j
.text:0000000000008E54                 ADD             W10, W9, #3
.text:0000000000008E58                 CMP             W8, W10
.text:0000000000008E5C                 B.LS            loc_8F3C
.text:0000000000008E60                 ADD             X11, X26, W9,UXTW
.text:0000000000008E64                 LDRB            W11, [X11,#8]
.text:0000000000008E68                 CMP             W11, #0x61 ; 'a'
.text:0000000000008E6C                 B.NE            loc_8F3C
.text:0000000000008E70                 ADD             W11, W9, #2
.text:0000000000008E74                 ADD             X11, X26, W11,UXTW
.text:0000000000008E78                 LDRB            W11, [X11,#8]
.text:0000000000008E7C                 CMP             W11, #0x4F ; 'O'
.text:0000000000008E80                 B.NE            loc_8F3C
.text:0000000000008E84                 ADD             X11, X26, #8
.text:0000000000008E88                 LDRB            W3, [X11,W10,UXTW]
.text:0000000000008E8C                 ADD             W28, W9, #1
.text:0000000000008E90                 LDRB            W19, [X11,W28,UXTW]
.text:0000000000008E94                 ADD             W10, W9, W3
.text:0000000000008E98                 ADD             W11, W10, #8
.text:0000000000008E9C                 CMP             W8, W11
.text:0000000000008EA0                 B.LS            loc_8F34
.text:0000000000008EA4                 ADD             W10, W9, #4
.text:0000000000008EA8                 ADD             W12, W3, W10
.text:0000000000008EAC                 ADD             X12, X26, W12,UXTW
.text:0000000000008EB0                 LDRB            W12, [X12,#8]
.text:0000000000008EB4                 CMP             W12, #0x9F
.text:0000000000008EB8                 B.NE            loc_8F34
.text:0000000000008EBC                 ADD             W12, W9, W3
.text:0000000000008EC0                 ADD             W13, W12, #5
.text:0000000000008EC4                 ADD             X13, X26, W13,UXTW
.text:0000000000008EC8                 LDRB            W13, [X13,#8]
.text:0000000000008ECC                 CMP             W13, #0x70 ; 'p'
.text:0000000000008ED0                 B.NE            loc_8F34
.text:0000000000008ED4                 ADD             W12, W12, #6
.text:0000000000008ED8                 ADD             X12, X26, W12,UXTW
.text:0000000000008EDC                 LDRB            W12, [X12,#8]
.text:0000000000008EE0                 CMP             W12, #2
.text:0000000000008EE4                 B.NE            loc_8F34
.text:0000000000008EE8                 ADD             X11, X26, W11,UXTW
.text:0000000000008EEC                 LDRB            W11, [X11,#8]
.text:0000000000008EF0                 CMP             W11, #1
.text:0000000000008EF4                 B.NE            loc_8F34
.text:0000000000008EF8                 STR             W3, [X14,W18,UXTW#2]
.text:0000000000008EFC                 CMP             W3, #0xFA
.text:0000000000008F00                 B.LS            loc_8DA0
.text:0000000000008F04                 MOV             W0, #6
.text:0000000000008F08                 STR             X4, [SP,#0x22F20+var_22F10]
.text:0000000000008F0C                 STR             W18, [SP,#0x22F20+var_22F08]
.text:0000000000008F10                 BL              .__android_log_print
.text:0000000000008F14                 LDR             X8, [SP,#0x22F20+var_22F00]
.text:0000000000008F18                 LDR             X4, [SP,#0x22F20+var_22F10]
.text:0000000000008F1C                 LDR             W18, [SP,#0x22F20+var_22F08]
.text:0000000000008F20                 ADD             X0, SP, #0x22F20+var_22F1A,LSL#12
.text:0000000000008F24                 LDR             W8, [X8]
.text:0000000000008F28                 MOV             W5, #0xFA
.text:0000000000008F2C                 ADD             X0, X0, #0x510
.text:0000000000008F30                 B               loc_8DE4
.text:0000000000008F34 ; ---------------------------------------------------------------------------
.text:0000000000008F34 loc_8F34                                ; CODE XREF: deactivateCardsAID+2F0↑j
.text:0000000000008F34                                         ; deactivateCardsAID+308↑j ...
.text:0000000000008F34                 ADD             W9, W28, W19
.text:0000000000008F38                 LDR             X19, [SP,#0x22F20+var_22EF0]
.text:0000000000008F3C loc_8F3C                                ; CODE XREF: deactivateCardsAID+254↑j
.text:0000000000008F3C                                         ; deactivateCardsAID+2AC↑j ...
.text:0000000000008F3C                 ADD             W9, W9, #1
.text:0000000000008F40                 CMP             W9, W8
.text:0000000000008F44                 B.CC            loc_8E54
.text:0000000000008F48                 ADRP            X26, #__stack_chk_guard_ptr@PAGE
.text:0000000000008F4C                 LDR             X26, [X26,#__stack_chk_guard_ptr@PAGEOFF]
.text:0000000000008F50                 LDR             X26, [X26]
.text:0000000000008F54                 CBZ             W18, loc_91F0
.text:0000000000008F58                 LDR             W3, [SP,#0x22F20+var_22EF4]
.text:0000000000008F5C                 MOV             W28, W18
.text:0000000000008F60                 CBZ             W3, loc_921C
.text:0000000000008F64                 ADRP            X1, #unk_10DEC@PAGE
.text:0000000000008F68                 ADD             X1, X1, #unk_10DEC@PAGEOFF
.text:0000000000008F6C                 CMP             W3, #3
.text:0000000000008F70                 B.NE            loc_94A4
.text:0000000000008F74                 ADRP            X2, #aDcaStartBootDc@PAGE ; "[DCA] Start boot DCA"
.text:0000000000008F78                 ADD             X2, X2, #aDcaStartBootDc@PAGEOFF ; "[DCA] Start boot DCA"
.text:0000000000008F7C                 MOV             W0, #4
.text:0000000000008F80                 BL              .__android_log_print
.text:0000000000008F84                 ADD             X10, SP, #0x22F20+var_22F1A,LSL#12
.text:0000000000008F88                 ADD             X11, SP, #0x22F20+var_22F1A,LSL#12
.text:0000000000008F8C                 ADD             X16, SP, #0x22F20+var_22F1A,LSL#12
.text:0000000000008F90                 MOV             X8, XZR
.text:0000000000008F94                 MOV             W26, WZR
.text:0000000000008F98                 MOV             W9, W28
.text:0000000000008F9C                 ADD             X10, X10, #0x510
.text:0000000000008FA0                 ADD             X11, X11, #0x380
.text:0000000000008FA4                 ADD             X12, SP, #0x22F20+var_22ED8
.text:0000000000008FA8                 MOV             W13, #0xFA
.text:0000000000008FAC                 ADD             X14, SP, #0x22F20+s
.text:0000000000008FB0                 MOV             W15, #0x4F ; 'O'
.text:0000000000008FB4                 ADD             X16, X16, #0x510
.text:0000000000008FB8 loc_8FB8                                ; CODE XREF: deactivateCardsAID+5EC↓j
.text:0000000000008FB8                 CBZ             W23, loc_9030
.text:0000000000008FBC                 LDR             W0, [X11,X8,LSL#2]
.text:0000000000008FC0                 MOV             X18, XZR
.text:0000000000008FC4                 MOV             W17, WZR
.text:0000000000008FC8 loc_8FC8                                ; CODE XREF: deactivateCardsAID+470↓j
.text:0000000000008FC8                 LDR             W1, [X24,X18,LSL#2]
.text:0000000000008FCC                 CMP             W0, W1
.text:0000000000008FD0                 B.NE            loc_9018
.text:0000000000008FD4                 CMP             W17, #2
.text:0000000000008FD8                 B.EQ            loc_9018
.text:0000000000008FDC                 CBZ             W0, loc_9018
.text:0000000000008FE0                 LDR             X17, [X25,X18,LSL#3]
.text:0000000000008FE4                 MOV             X1, XZR
.text:0000000000008FE8                 MOV             X2, X16
.text:0000000000008FEC loc_8FEC                                ; CODE XREF: deactivateCardsAID+458↓j
.text:0000000000008FEC                 LDRB            W3, [X2]
.text:0000000000008FF0                 LDRB            W4, [X17,X1]
.text:0000000000008FF4                 CMP             W3, W4
.text:0000000000008FF8                 B.NE            loc_9014
.text:0000000000008FFC                 ADD             X2, X2, #1
.text:0000000000009000                 ADD             X1, X1, #1
.text:0000000000009004                 CMP             W1, W0
.text:0000000000009008                 B.CC            loc_8FEC
.text:000000000000900C                 MOV             W17, #2
.text:0000000000009010                 B               loc_9018
.text:0000000000009014 ; ---------------------------------------------------------------------------
.text:0000000000009014 loc_9014                                ; CODE XREF: deactivateCardsAID+448↑j
.text:0000000000009014                 MOV             W17, #1
.text:0000000000009018 loc_9018                                ; CODE XREF: deactivateCardsAID+420↑j
.text:0000000000009018                                         ; deactivateCardsAID+428↑j ...
.text:0000000000009018                 ADD             X18, X18, #1
.text:000000000000901C                 CMP             W18, W23
.text:0000000000009020                 B.NE            loc_8FC8
.text:0000000000009024                 CMP             W17, #2
.text:0000000000009028                 B.EQ            loc_9190
.text:000000000000902C                 B               loc_9034
.text:0000000000009030 ; ---------------------------------------------------------------------------
.text:0000000000009030 loc_9030                                ; CODE XREF: deactivateCardsAID:loc_8FB8↑j
.text:0000000000009030                 MOV             W17, WZR
.text:0000000000009034 loc_9034                                ; CODE XREF: deactivateCardsAID+47C↑j
.text:0000000000009034                 CBZ             W20, loc_90A4
.text:0000000000009038                 MOV             X18, XZR
.text:000000000000903C                 MOV             W0, WZR
.text:0000000000009040 loc_9040                                ; CODE XREF: deactivateCardsAID+4E8↓j
.text:0000000000009040                 AND             W0, W0, #1
.text:0000000000009044                 TBZ             W0, #0, loc_9050
.text:0000000000009048                 MOV             W17, #2
.text:000000000000904C                 B               loc_9088
.text:0000000000009050 ; ---------------------------------------------------------------------------
.text:0000000000009050 loc_9050                                ; CODE XREF: deactivateCardsAID+494↑j
.text:0000000000009050                 LDR             W0, [X21,X18,LSL#2]
.text:0000000000009054                 CBZ             W0, loc_9088
.text:0000000000009058                 LDR             X17, [X22,X18,LSL#3]
.text:000000000000905C                 MOV             X1, XZR
.text:0000000000009060 loc_9060                                ; CODE XREF: deactivateCardsAID+4C8↓j
.text:0000000000009060                 LDRB            W2, [X16,X1]
.text:0000000000009064                 LDRB            W3, [X17,X1]
.text:0000000000009068                 CMP             W2, W3
.text:000000000000906C                 B.NE            loc_9084
.text:0000000000009070                 ADD             X1, X1, #1
.text:0000000000009074                 CMP             W1, W0
.text:0000000000009078                 B.CC            loc_9060
.text:000000000000907C                 MOV             W17, #2
.text:0000000000009080                 B               loc_9088
.text:0000000000009084 ; ---------------------------------------------------------------------------
.text:0000000000009084 loc_9084                                ; CODE XREF: deactivateCardsAID+4BC↑j
.text:0000000000009084                 MOV             W17, #1
.text:0000000000009088 loc_9088                                ; CODE XREF: deactivateCardsAID+49C↑j
.text:0000000000009088                                         ; deactivateCardsAID+4A4↑j ...
.text:0000000000009088                 CMP             W17, #2
.text:000000000000908C                 ADD             X18, X18, #1
.text:0000000000009090                 CSET            W0, EQ
.text:0000000000009094                 CMP             W18, W20
.text:0000000000009098                 B.NE            loc_9040
.text:000000000000909C                 CMP             W17, #2
.text:00000000000090A0                 B.EQ            loc_9190
.text:00000000000090A4 loc_90A4                                ; CODE XREF: deactivateCardsAID:loc_9034↑j
.text:00000000000090A4                 CMP             W17, #2
.text:00000000000090A8                 CSET            W0, EQ
.text:00000000000090AC                 CBZ             W27, loc_9110
.text:00000000000090B0                 MOV             X18, XZR
.text:00000000000090B4 loc_90B4                                ; CODE XREF: deactivateCardsAID+55C↓j
.text:00000000000090B4                 AND             W0, W0, #1
.text:00000000000090B8                 TBZ             W0, #0, loc_90C4
.text:00000000000090BC                 MOV             W17, #2
.text:00000000000090C0                 B               loc_90FC
.text:00000000000090C4 ; ---------------------------------------------------------------------------
.text:00000000000090C4 loc_90C4                                ; CODE XREF: deactivateCardsAID+508↑j
.text:00000000000090C4                 LDR             W0, [X11,X8,LSL#2]
.text:00000000000090C8                 CBZ             W0, loc_90FC
.text:00000000000090CC                 LDR             X17, [X19,X18,LSL#3]
.text:00000000000090D0                 MOV             X1, XZR
.text:00000000000090D4 loc_90D4                                ; CODE XREF: deactivateCardsAID+53C↓j
.text:00000000000090D4                 LDRB            W2, [X16,X1]
.text:00000000000090D8                 LDRB            W3, [X17,X1]
.text:00000000000090DC                 CMP             W2, W3
.text:00000000000090E0                 B.NE            loc_90F8
.text:00000000000090E4                 ADD             X1, X1, #1
.text:00000000000090E8                 CMP             W1, W0
.text:00000000000090EC                 B.CC            loc_90D4
.text:00000000000090F0                 MOV             W17, #2
.text:00000000000090F4                 B               loc_90FC
.text:00000000000090F8 ; ---------------------------------------------------------------------------
.text:00000000000090F8 loc_90F8                                ; CODE XREF: deactivateCardsAID+530↑j
.text:00000000000090F8                 MOV             W17, #1
.text:00000000000090FC loc_90FC                                ; CODE XREF: deactivateCardsAID+510↑j
.text:00000000000090FC                                         ; deactivateCardsAID+518↑j ...
.text:00000000000090FC                 CMP             W17, #2
.text:0000000000009100                 ADD             X18, X18, #1
.text:0000000000009104                 CSET            W0, EQ
.text:0000000000009108                 CMP             W18, W27
.text:000000000000910C                 B.NE            loc_90B4
.text:0000000000009110 loc_9110                                ; CODE XREF: deactivateCardsAID+4FC↑j
.text:0000000000009110                 TBNZ            W0, #0, loc_9190
.text:0000000000009114                 LDR             W0, [X11,X8,LSL#2]
.text:0000000000009118                 CBZ             W0, loc_9190
.text:000000000000911C                 ADD             W18, W0, #2
.text:0000000000009120                 MOV             W17, W26
.text:0000000000009124                 CBZ             W18, loc_917C
.text:0000000000009128                 MADD            X2, X17, X13, X14
.text:000000000000912C                 MOV             W5, W26
.text:0000000000009130                 MOV             X1, XZR
.text:0000000000009134                 MOV             W3, W18
.text:0000000000009138                 ADD             X4, X2, #1
.text:000000000000913C                 MADD            X5, X5, X13, X14
.text:0000000000009140 loc_9140                                ; CODE XREF: deactivateCardsAID+5C4↓j
.text:0000000000009140                 CMP             W1, #1
.text:0000000000009144                 B.EQ            loc_9154
.text:0000000000009148                 CBNZ            W1, loc_915C
.text:000000000000914C                 STRB            W15, [X2]
.text:0000000000009150                 B               loc_916C
.text:0000000000009154 ; ---------------------------------------------------------------------------
.text:0000000000009154 loc_9154                                ; CODE XREF: deactivateCardsAID+594↑j
.text:0000000000009154                 STRB            W0, [X4]
.text:0000000000009158                 B               loc_916C
.text:000000000000915C ; ---------------------------------------------------------------------------
.text:000000000000915C loc_915C                                ; CODE XREF: deactivateCardsAID+598↑j
.text:000000000000915C                 SUB             W6, W1, #2
.text:0000000000009160                 MADD            X7, X8, X13, X10
.text:0000000000009164                 LDRB            W6, [X7,W6,UXTW]
.text:0000000000009168                 STRB            W6, [X5,X1]
.text:000000000000916C loc_916C                                ; CODE XREF: deactivateCardsAID+5A0↑j
.text:000000000000916C                                         ; deactivateCardsAID+5A8↑j
.text:000000000000916C                 ADD             X1, X1, #1
.text:0000000000009170                 CMP             X1, X3
.text:0000000000009174                 B.CC            loc_9140
.text:0000000000009178                 B               loc_9180
.text:000000000000917C ; ---------------------------------------------------------------------------
.text:000000000000917C loc_917C                                ; CODE XREF: deactivateCardsAID+574↑j
.text:000000000000917C                 MOV             W18, WZR
.text:0000000000009180 loc_9180                                ; CODE XREF: deactivateCardsAID+5C8↑j
.text:0000000000009180                 ADD             W26, W26, #1
.text:0000000000009184                 STR             W18, [X12,X17,LSL#2]
.text:0000000000009188                 CMP             W26, #0x65 ; 'e'
.text:000000000000918C                 B.CS            loc_9604
.text:0000000000009190 loc_9190                                ; CODE XREF: deactivateCardsAID+478↑j
.text:0000000000009190                                         ; deactivateCardsAID+4F0↑j ...
.text:0000000000009190                 ADD             X8, X8, #1
.text:0000000000009194                 ADD             X16, X16, #0xFA
.text:0000000000009198                 CMP             X8, X9
.text:000000000000919C                 B.CC            loc_8FB8
.text:00000000000091A0                 ADRP            X1, #unk_10DEC@PAGE
.text:00000000000091A4                 ADRP            X2, #aDcaDcaD@PAGE ; "[DCA] DCA %d"
.text:00000000000091A8                 ADD             X1, X1, #unk_10DEC@PAGEOFF
.text:00000000000091AC                 ADD             X2, X2, #aDcaDcaD@PAGEOFF ; "[DCA] DCA %d"
.text:00000000000091B0                 MOV             W0, #4
.text:00000000000091B4                 MOV             W3, W26
.text:00000000000091B8                 BL              .__android_log_print
.text:00000000000091BC                 CBNZ            W26, loc_9638
.text:00000000000091C0                 ADRP            X1, #unk_10DEC@PAGE
.text:00000000000091C4                 ADRP            X2, #aDcaDoNotNeedDd@PAGE ; "[DCA] Do not need DDA"
.text:00000000000091C8                 ADD             X1, X1, #unk_10DEC@PAGEOFF
.text:00000000000091CC                 ADD             X2, X2, #aDcaDoNotNeedDd@PAGEOFF ; "[DCA] Do not need DDA"
.text:00000000000091D0                 MOV             W0, #4
.text:00000000000091D4                 BL              .__android_log_print
.text:00000000000091D8                 ADD             X20, SP, #0x22F20+var_22F14,LSL#12
.text:00000000000091DC                 MOV             W8, #0xFFFFFFEA
.text:00000000000091E0                 ADD             X20, X20, #0x6B8
.text:00000000000091E4                 STR             W8, [X20,#4]
.text:00000000000091E8                 LDR             W3, [X20,#4]
.text:00000000000091EC                 B               loc_9728
.text:00000000000091F0 ; ---------------------------------------------------------------------------
.text:00000000000091F0 loc_91F0                                ; CODE XREF: deactivateCardsAID+17C↑j
.text:00000000000091F0                                         ; deactivateCardsAID+3A4↑j
.text:00000000000091F0                 ADD             X8, SP, #0x22F20+var_22F14,LSL#12
.text:00000000000091F4                 ADD             X8, X8, #0x6B8
.text:00000000000091F8                 LDR             W3, [X8,#4]
.text:00000000000091FC                 ADRP            X1, #unk_10DEC@PAGE
.text:0000000000009200                 ADRP            X2, #aDcaDonTHaveRac@PAGE ; "[DCA]Don't have RAC : %d"
.text:0000000000009204                 ADD             X1, X1, #unk_10DEC@PAGEOFF
.text:0000000000009208                 ADD             X2, X2, #aDcaDonTHaveRac@PAGEOFF ; "[DCA]Don't have RAC : %d"
.text:000000000000920C                 MOV             W0, #6
.text:0000000000009210                 BL              .__android_log_print
.text:0000000000009214                 MOV             W0, #0xFFFFFFE9
.text:0000000000009218                 B               loc_95D4
.text:000000000000921C ; ---------------------------------------------------------------------------
.text:000000000000921C loc_921C                                ; CODE XREF: deactivateCardsAID+3B0↑j
.text:000000000000921C                 ADRP            X1, #unk_10DEC@PAGE
.text:0000000000009220                 ADRP            X2, #aDcaStartDca@PAGE ; "[DCA] Start DCA"
.text:0000000000009224                 ADD             X1, X1, #unk_10DEC@PAGEOFF
.text:0000000000009228                 ADD             X2, X2, #aDcaStartDca@PAGEOFF ; "[DCA] Start DCA"
.text:000000000000922C                 MOV             W0, #4
.text:0000000000009230                 BL              .__android_log_print
.text:0000000000009234                 ADD             X10, SP, #0x22F20+var_22F1A,LSL#12
.text:0000000000009238                 ADD             X11, SP, #0x22F20+var_22F1A,LSL#12
.text:000000000000923C                 ADD             X16, SP, #0x22F20+var_22F1A,LSL#12
.text:0000000000009240                 MOV             X8, XZR
.text:0000000000009244                 MOV             W26, WZR
.text:0000000000009248                 MOV             W9, W28
.text:000000000000924C                 ADD             X10, X10, #0x510
.text:0000000000009250                 ADD             X11, X11, #0x380
.text:0000000000009254                 ADD             X12, SP, #0x22F20+var_22ED8
.text:0000000000009258                 MOV             W13, #0xFA
.text:000000000000925C                 ADD             X14, SP, #0x22F20+s
.text:0000000000009260                 MOV             W15, #0x4F ; 'O'
.text:0000000000009264                 ADD             X16, X16, #0x510
.text:0000000000009268 loc_9268                                ; CODE XREF: deactivateCardsAID+8A4↓j
.text:0000000000009268                 CBZ             W23, loc_92E0
.text:000000000000926C                 LDR             W0, [X11,X8,LSL#2]
.text:0000000000009270                 MOV             X18, XZR
.text:0000000000009274                 MOV             W17, WZR
.text:0000000000009278 loc_9278                                ; CODE XREF: deactivateCardsAID+720↓j
.text:0000000000009278                 LDR             W1, [X24,X18,LSL#2]
.text:000000000000927C                 CMP             W0, W1
.text:0000000000009280                 B.NE            loc_92C8
.text:0000000000009284                 CMP             W17, #2
.text:0000000000009288                 B.EQ            loc_92C8
.text:000000000000928C                 CBZ             W0, loc_92C8
.text:0000000000009290                 LDR             X17, [X25,X18,LSL#3]
.text:0000000000009294                 MOV             X1, XZR
.text:0000000000009298                 MOV             X2, X16
.text:000000000000929C loc_929C                                ; CODE XREF: deactivateCardsAID+708↓j
.text:000000000000929C                 LDRB            W3, [X2]
.text:00000000000092A0                 LDRB            W4, [X17,X1]
.text:00000000000092A4                 CMP             W3, W4
.text:00000000000092A8                 B.NE            loc_92C4
.text:00000000000092AC                 ADD             X2, X2, #1
.text:00000000000092B0                 ADD             X1, X1, #1
.text:00000000000092B4                 CMP             W1, W0
.text:00000000000092B8                 B.CC            loc_929C
.text:00000000000092BC                 MOV             W17, #2
.text:00000000000092C0                 B               loc_92C8
.text:00000000000092C4 ; ---------------------------------------------------------------------------
.text:00000000000092C4 loc_92C4                                ; CODE XREF: deactivateCardsAID+6F8↑j
.text:00000000000092C4                 MOV             W17, #1
.text:00000000000092C8 loc_92C8                                ; CODE XREF: deactivateCardsAID+6D0↑j
.text:00000000000092C8                                         ; deactivateCardsAID+6D8↑j ...
.text:00000000000092C8                 ADD             X18, X18, #1
.text:00000000000092CC                 CMP             W18, W23
.text:00000000000092D0                 B.NE            loc_9278
.text:00000000000092D4                 CMP             W17, #2
.text:00000000000092D8                 B.EQ            loc_93C4
.text:00000000000092DC                 B               loc_92E4
.text:00000000000092E0 ; ---------------------------------------------------------------------------
.text:00000000000092E0 loc_92E0                                ; CODE XREF: deactivateCardsAID:loc_9268↑j
.text:00000000000092E0                 MOV             W17, WZR
.text:00000000000092E4 loc_92E4                                ; CODE XREF: deactivateCardsAID+72C↑j
.text:00000000000092E4                 CBZ             W20, loc_9354
.text:00000000000092E8                 MOV             X18, XZR
.text:00000000000092EC                 MOV             W0, WZR
.text:00000000000092F0 loc_92F0                                ; CODE XREF: deactivateCardsAID+798↓j
.text:00000000000092F0                 AND             W0, W0, #1
.text:00000000000092F4                 TBZ             W0, #0, loc_9300
.text:00000000000092F8                 MOV             W17, #2
.text:00000000000092FC                 B               loc_9338
.text:0000000000009300 ; ---------------------------------------------------------------------------
.text:0000000000009300 loc_9300                                ; CODE XREF: deactivateCardsAID+744↑j
.text:0000000000009300                 LDR             W0, [X21,X18,LSL#2]
.text:0000000000009304                 CBZ             W0, loc_9338
.text:0000000000009308                 LDR             X17, [X22,X18,LSL#3]
.text:000000000000930C                 MOV             X1, XZR
.text:0000000000009310 loc_9310                                ; CODE XREF: deactivateCardsAID+778↓j
.text:0000000000009310                 LDRB            W2, [X16,X1]
.text:0000000000009314                 LDRB            W3, [X17,X1]
.text:0000000000009318                 CMP             W2, W3
.text:000000000000931C                 B.NE            loc_9334
.text:0000000000009320                 ADD             X1, X1, #1
.text:0000000000009324                 CMP             W1, W0
.text:0000000000009328                 B.CC            loc_9310
.text:000000000000932C                 MOV             W17, #2
.text:0000000000009330                 B               loc_9338
.text:0000000000009334 ; ---------------------------------------------------------------------------
.text:0000000000009334 loc_9334                                ; CODE XREF: deactivateCardsAID+76C↑j
.text:0000000000009334                 MOV             W17, #1
.text:0000000000009338 loc_9338                                ; CODE XREF: deactivateCardsAID+74C↑j
.text:0000000000009338                                         ; deactivateCardsAID+754↑j ...
.text:0000000000009338                 CMP             W17, #2
.text:000000000000933C                 ADD             X18, X18, #1
.text:0000000000009340                 CSET            W0, EQ
.text:0000000000009344                 CMP             W18, W20
.text:0000000000009348                 B.NE            loc_92F0
.text:000000000000934C                 CMP             W17, #2
.text:0000000000009350                 B.EQ            loc_93C4
.text:0000000000009354 loc_9354                                ; CODE XREF: deactivateCardsAID:loc_92E4↑j
.text:0000000000009354                 CMP             W17, #2
.text:0000000000009358                 CSET            W0, EQ
.text:000000000000935C                 CBZ             W27, loc_93C0
.text:0000000000009360                 MOV             X18, XZR
.text:0000000000009364 loc_9364                                ; CODE XREF: deactivateCardsAID+80C↓j
.text:0000000000009364                 AND             W0, W0, #1
.text:0000000000009368                 TBZ             W0, #0, loc_9374
.text:000000000000936C                 MOV             W17, #2
.text:0000000000009370                 B               loc_93AC
.text:0000000000009374 ; ---------------------------------------------------------------------------
.text:0000000000009374 loc_9374                                ; CODE XREF: deactivateCardsAID+7B8↑j
.text:0000000000009374                 LDR             W0, [X11,X8,LSL#2]
.text:0000000000009378                 CBZ             W0, loc_93AC
.text:000000000000937C                 LDR             X17, [X19,X18,LSL#3]
.text:0000000000009380                 MOV             X1, XZR
.text:0000000000009384 loc_9384                                ; CODE XREF: deactivateCardsAID+7EC↓j
.text:0000000000009384                 LDRB            W2, [X16,X1]
.text:0000000000009388                 LDRB            W3, [X17,X1]
.text:000000000000938C                 CMP             W2, W3
.text:0000000000009390                 B.NE            loc_93A8
.text:0000000000009394                 ADD             X1, X1, #1
.text:0000000000009398                 CMP             W1, W0
.text:000000000000939C                 B.CC            loc_9384
.text:00000000000093A0                 MOV             W17, #2
.text:00000000000093A4                 B               loc_93AC
.text:00000000000093A8 ; ---------------------------------------------------------------------------
.text:00000000000093A8 loc_93A8                                ; CODE XREF: deactivateCardsAID+7E0↑j
.text:00000000000093A8                 MOV             W17, #1
.text:00000000000093AC loc_93AC                                ; CODE XREF: deactivateCardsAID+7C0↑j
.text:00000000000093AC                                         ; deactivateCardsAID+7C8↑j ...
.text:00000000000093AC                 CMP             W17, #2
.text:00000000000093B0                 ADD             X18, X18, #1
.text:00000000000093B4                 CSET            W0, EQ
.text:00000000000093B8                 CMP             W18, W27
.text:00000000000093BC                 B.NE            loc_9364
.text:00000000000093C0 loc_93C0                                ; CODE XREF: deactivateCardsAID+7AC↑j
.text:00000000000093C0                 CBZ             W0, loc_9448
.text:00000000000093C4 loc_93C4                                ; CODE XREF: deactivateCardsAID+728↑j
.text:00000000000093C4                                         ; deactivateCardsAID+7A0↑j
.text:00000000000093C4                 LDR             W0, [X11,X8,LSL#2]
.text:00000000000093C8                 SUB             W17, W0, #1
.text:00000000000093CC                 CMP             W17, #0xF6
.text:00000000000093D0                 B.HI            loc_9448
.text:00000000000093D4                 ADD             W18, W0, #2
.text:00000000000093D8                 MOV             W17, W26
.text:00000000000093DC                 CBZ             W18, loc_9434
.text:00000000000093E0                 MADD            X2, X17, X13, X14
.text:00000000000093E4                 MOV             W5, W26
.text:00000000000093E8                 MOV             X1, XZR
.text:00000000000093EC                 MOV             W3, W18
.text:00000000000093F0                 ADD             X4, X2, #1
.text:00000000000093F4                 MADD            X5, X5, X13, X14
.text:00000000000093F8 loc_93F8                                ; CODE XREF: deactivateCardsAID+87C↓j
.text:00000000000093F8                 CMP             W1, #1
.text:00000000000093FC                 B.EQ            loc_940C
.text:0000000000009400                 CBNZ            W1, loc_9414
.text:0000000000009404                 STRB            W15, [X2]
.text:0000000000009408                 B               loc_9424
.text:000000000000940C ; ---------------------------------------------------------------------------
.text:000000000000940C loc_940C                                ; CODE XREF: deactivateCardsAID+84C↑j
.text:000000000000940C                 STRB            W0, [X4]
.text:0000000000009410                 B               loc_9424
.text:0000000000009414 ; ---------------------------------------------------------------------------
.text:0000000000009414 loc_9414                                ; CODE XREF: deactivateCardsAID+850↑j
.text:0000000000009414                 SUB             W6, W1, #2
.text:0000000000009418                 MADD            X7, X8, X13, X10
.text:000000000000941C                 LDRB            W6, [X7,W6,UXTW]
.text:0000000000009420                 STRB            W6, [X5,X1]
.text:0000000000009424 loc_9424                                ; CODE XREF: deactivateCardsAID+858↑j
.text:0000000000009424                                         ; deactivateCardsAID+860↑j
.text:0000000000009424                 ADD             X1, X1, #1
.text:0000000000009428                 CMP             X1, X3
.text:000000000000942C                 B.CC            loc_93F8
.text:0000000000009430                 B               loc_9438
.text:0000000000009434 ; ---------------------------------------------------------------------------
.text:0000000000009434 loc_9434                                ; CODE XREF: deactivateCardsAID+82C↑j
.text:0000000000009434                 MOV             W18, WZR
.text:0000000000009438 loc_9438                                ; CODE XREF: deactivateCardsAID+880↑j
.text:0000000000009438                 ADD             W26, W26, #1
.text:000000000000943C                 STR             W18, [X12,X17,LSL#2]
.text:0000000000009440                 CMP             W26, #0x65 ; 'e'
.text:0000000000009444                 B.CS            loc_94C0
.text:0000000000009448 loc_9448                                ; CODE XREF: deactivateCardsAID:loc_93C0↑j
.text:0000000000009448                                         ; deactivateCardsAID+820↑j
.text:0000000000009448                 ADD             X8, X8, #1
.text:000000000000944C                 ADD             X16, X16, #0xFA
.text:0000000000009450                 CMP             X8, X9
.text:0000000000009454                 B.CC            loc_9268
.text:0000000000009458                 ADRP            X1, #unk_10DEC@PAGE
.text:000000000000945C                 ADRP            X2, #aDcaDcaCD@PAGE ; "[DCA] DCA C : %d"
.text:0000000000009460                 ADD             X1, X1, #unk_10DEC@PAGEOFF
.text:0000000000009464                 ADD             X2, X2, #aDcaDcaCD@PAGEOFF ; "[DCA] DCA C : %d"
.text:0000000000009468                 MOV             W0, #4
.text:000000000000946C                 MOV             W3, W26
.text:0000000000009470                 BL              .__android_log_print
.text:0000000000009474                 CBNZ            W26, loc_94F4
.text:0000000000009478                 ADRP            X1, #unk_10DEC@PAGE
.text:000000000000947C                 ADRP            X2, #aDcaDoNotNeedDd@PAGE ; "[DCA] Do not need DDA"
.text:0000000000009480                 ADD             X1, X1, #unk_10DEC@PAGEOFF
.text:0000000000009484                 ADD             X2, X2, #aDcaDoNotNeedDd@PAGEOFF ; "[DCA] Do not need DDA"
.text:0000000000009488                 MOV             W0, #4
.text:000000000000948C                 BL              .__android_log_print
.text:0000000000009490                 ADD             X25, SP, #0x22F20+var_22F14,LSL#12
.text:0000000000009494                 MOV             W8, #0xFFFFFFEA
.text:0000000000009498                 ADD             X25, X25, #0x6B8
.text:000000000000949C                 STR             W8, [X25,#4]
.text:00000000000094A0                 B               loc_95A8
.text:00000000000094A4 ; ---------------------------------------------------------------------------
.text:00000000000094A4 loc_94A4                                ; CODE XREF: deactivateCardsAID+3C0↑j
.text:00000000000094A4                 ADRP            X2, #aDcaReqeustType@PAGE ; "[DCA] Reqeust Type Error : %d"
.text:00000000000094A8                 ADD             X2, X2, #aDcaReqeustType@PAGEOFF ; "[DCA] Reqeust Type Error : %d"
.text:00000000000094AC                 MOV             W0, #6
.text:00000000000094B0                 BL              .__android_log_print
.text:00000000000094B4                 ADD             X25, SP, #0x22F20+var_22F14,LSL#12
.text:00000000000094B8                 ADD             X25, X25, #0x6B8
.text:00000000000094BC                 B               loc_95D0
.text:00000000000094C0 ; ---------------------------------------------------------------------------
.text:00000000000094C0 loc_94C0                                ; CODE XREF: deactivateCardsAID+894↑j
.text:00000000000094C0                 ADRP            X20, #unk_10DEC@PAGE
.text:00000000000094C4                 ADD             X20, X20, #unk_10DEC@PAGEOFF
.text:00000000000094C8                 ADRP            X2, #aDcaDaaCntMax@PAGE ; "[DCA] DAA CNT MAX"
.text:00000000000094CC                 ADD             X2, X2, #aDcaDaaCntMax@PAGEOFF ; "[DCA] DAA CNT MAX"
.text:00000000000094D0                 MOV             W0, #6
.text:00000000000094D4                 MOV             X1, X20
.text:00000000000094D8                 BL              .__android_log_print
.text:00000000000094DC                 ADRP            X2, #aDcaDcaCD@PAGE ; "[DCA] DCA C : %d"
.text:00000000000094E0                 ADD             X2, X2, #aDcaDcaCD@PAGEOFF ; "[DCA] DCA C : %d"
.text:00000000000094E4                 MOV             W0, #4
.text:00000000000094E8                 MOV             X1, X20
.text:00000000000094EC                 MOV             W3, W26
.text:00000000000094F0                 BL              .__android_log_print
.text:00000000000094F4 loc_94F4                                ; CODE XREF: deactivateCardsAID+8C4↑j
.text:00000000000094F4                 ADRP            X21, #unk_10DEC@PAGE
.text:00000000000094F8                 ADRP            X22, #aDcaD@PAGE ; "[DCA] D"
.text:00000000000094FC                 ADRP            X23, #aDcaFailDdcaD@PAGE ; "[DCA]Fail DDCA : %d"
.text:0000000000009500                 ADRP            X24, #aDcaNd@PAGE ; "[DCA] ND"
.text:0000000000009504                 MOV             W27, #0xFFFFFFFF
.text:0000000000009508                 ADD             X19, SP, #0x22F20+var_22ED8
.text:000000000000950C                 ADD             X20, SP, #0x22F20+s
.text:0000000000009510                 ADD             X21, X21, #unk_10DEC@PAGEOFF
.text:0000000000009514                 ADD             X22, X22, #aDcaD@PAGEOFF ; "[DCA] D"
.text:0000000000009518                 ADD             X23, X23, #aDcaFailDdcaD@PAGEOFF ; "[DCA]Fail DDCA : %d"
.text:000000000000951C                 ADD             X24, X24, #aDcaNd@PAGEOFF ; "[DCA] ND"
.text:0000000000009520 loc_9520                                ; CODE XREF: deactivateCardsAID+9F4↓j
.text:0000000000009520                 LDR             W25, [X19]
.text:0000000000009524                 LDR             W8, [SP,#0x22F20+var_22EE4]
.text:0000000000009528                 MOV             W0, #4
.text:000000000000952C                 MOV             X1, X21
.text:0000000000009530                 CMN             W8, #1
.text:0000000000009534                 B.EQ            loc_9548
.text:0000000000009538                 MOV             X2, X24
.text:000000000000953C                 BL              .__android_log_print
.text:0000000000009540                 MOV             W0, #0x27 ; '''
.text:0000000000009544                 B               loc_9554
.text:0000000000009548 ; ---------------------------------------------------------------------------
.text:0000000000009548 loc_9548                                ; CODE XREF: deactivateCardsAID+984↑j
.text:0000000000009548                 MOV             X2, X22
.text:000000000000954C                 BL              .__android_log_print
.text:0000000000009550                 MOV             W0, #0x31 ; '1'
.text:0000000000009554 loc_9554                                ; CODE XREF: deactivateCardsAID+994↑j
.text:0000000000009554                 ADD             X3, SP, #0x22F20+var_22F14,LSL#12
.text:0000000000009558                 ADD             X3, X3, #0x6B8
.text:000000000000955C                 MOV             X1, X20
.text:0000000000009560                 MOV             W2, W25
.text:0000000000009564                 BL              .invokeCommand
.text:0000000000009568                 ADD             X25, SP, #0x22F20+var_22F14,LSL#12
.text:000000000000956C                 ADD             X25, X25, #0x6B8
.text:0000000000009570                 LDR             W3, [X25,#4]
.text:0000000000009574                 CBZ             W3, loc_9590
.text:0000000000009578                 MOV             W0, #6
.text:000000000000957C                 MOV             X1, X21
.text:0000000000009580                 MOV             X2, X23
.text:0000000000009584                 BL              .__android_log_print
.text:0000000000009588                 CMP             W27, #1
.text:000000000000958C                 B.NE            loc_9598
.text:0000000000009590 loc_9590                                ; CODE XREF: deactivateCardsAID+9C4↑j
.text:0000000000009590                 MOV             W27, #1
.text:0000000000009594                 STR             WZR, [X25,#4]
.text:0000000000009598 loc_9598                                ; CODE XREF: deactivateCardsAID+9DC↑j
.text:0000000000009598                 ADD             X19, X19, #4
.text:000000000000959C                 ADD             X20, X20, #0xFA
.text:00000000000095A0                 SUB             W26, W26, #1
.text:00000000000095A4                 CBNZ            W26, loc_9520
.text:00000000000095A8 loc_95A8                                ; CODE XREF: deactivateCardsAID+8F0↑j
.text:00000000000095A8                 LDR             W3, [X25,#4]
.text:00000000000095AC                 ADRP            X1, #unk_10DEC@PAGE
.text:00000000000095B0                 ADRP            X2, #aDcaRetD@PAGE ; "[DCA] RET : %d"
.text:00000000000095B4                 ADD             X1, X1, #unk_10DEC@PAGEOFF
.text:00000000000095B8                 ADD             X2, X2, #aDcaRetD@PAGEOFF ; "[DCA] RET : %d"
.text:00000000000095BC                 MOV             W0, #4
.text:00000000000095C0                 BL              .__android_log_print
.text:00000000000095C4                 ADRP            X26, #__stack_chk_guard_ptr@PAGE
.text:00000000000095C8                 LDR             X26, [X26,#__stack_chk_guard_ptr@PAGEOFF]
.text:00000000000095CC                 LDR             X26, [X26]
.text:00000000000095D0 loc_95D0                                ; CODE XREF: deactivateCardsAID+90C↑j
.text:00000000000095D0                 LDR             W0, [X25,#4]
.text:00000000000095D4 loc_95D4                                ; CODE XREF: deactivateCardsAID+1EC↑j
.text:00000000000095D4                                         ; deactivateCardsAID+668↑j
.text:00000000000095D4                 ADD             X19, SP, #0x22F20+var_22EE0
.text:00000000000095D8 loc_95D8                                ; CODE XREF: deactivateCardsAID+BA4↓j
.text:00000000000095D8                 LDR             X8, [X19]
.text:00000000000095DC                 SUB             X8, X26, X8
.text:00000000000095E0                 CBNZ            X8, loc_9758
.text:00000000000095E4                 SUB             SP, X29, #0x50 ; 'P'
.text:00000000000095E8                 LDP             X29, X30, [SP,#0x50+var_s0]
.text:00000000000095EC                 LDP             X20, X19, [SP,#0x50+var_10]
.text:00000000000095F0                 LDP             X22, X21, [SP,#0x50+var_20]
.text:00000000000095F4                 LDP             X24, X23, [SP,#0x50+var_30]
.text:00000000000095F8                 LDP             X26, X25, [SP,#0x50+var_40]
.text:00000000000095FC                 LDP             X28, X27, [SP+0x50+var_50],#0x60
.text:0000000000009600                 RET
.text:0000000000009604 ; ---------------------------------------------------------------------------
.text:0000000000009604 loc_9604                                ; CODE XREF: deactivateCardsAID+5DC↑j
.text:0000000000009604                 ADRP            X20, #unk_10DEC@PAGE
.text:0000000000009608                 ADD             X20, X20, #unk_10DEC@PAGEOFF
.text:000000000000960C                 ADRP            X2, #aDcaDaaCntMax@PAGE ; "[DCA] DAA CNT MAX"
.text:0000000000009610                 ADD             X2, X2, #aDcaDaaCntMax@PAGEOFF ; "[DCA] DAA CNT MAX"
.text:0000000000009614                 MOV             W0, #6
.text:0000000000009618                 MOV             X1, X20
.text:000000000000961C                 BL              .__android_log_print
.text:0000000000009620                 ADRP            X2, #aDcaDcaD@PAGE ; "[DCA] DCA %d"
.text:0000000000009624                 ADD             X2, X2, #aDcaDcaD@PAGEOFF ; "[DCA] DCA %d"
.text:0000000000009628                 MOV             W0, #4
.text:000000000000962C                 MOV             X1, X20
.text:0000000000009630                 MOV             W3, W26
.text:0000000000009634                 BL              .__android_log_print
.text:0000000000009638 loc_9638                                ; CODE XREF: deactivateCardsAID+60C↑j
.text:0000000000009638                 ADRP            X21, #unk_10DEC@PAGE
.text:000000000000963C                 ADRP            X23, #aDcaSuccDdcaD@PAGE ; "[DCA]Succ DDCA : %d"
.text:0000000000009640                 ADRP            X24, #aDcaFailDdcaD@PAGE ; "[DCA]Fail DDCA : %d"
.text:0000000000009644                 ADRP            X25, #aDcaNd@PAGE ; "[DCA] ND"
.text:0000000000009648                 MOV             W28, #0xFFFFFFFF
.text:000000000000964C                 ADD             X19, SP, #0x22F20+var_22ED8
.text:0000000000009650                 ADD             X20, SP, #0x22F20+s
.text:0000000000009654                 ADD             X21, X21, #unk_10DEC@PAGEOFF
.text:0000000000009658                 ADD             X23, X23, #aDcaSuccDdcaD@PAGEOFF ; "[DCA]Succ DDCA : %d"
.text:000000000000965C                 MOV             W22, #0xFFFFFFE5
.text:0000000000009660                 ADD             X24, X24, #aDcaFailDdcaD@PAGEOFF ; "[DCA]Fail DDCA : %d"
.text:0000000000009664                 ADD             X25, X25, #aDcaNd@PAGEOFF ; "[DCA] ND"
.text:0000000000009668 loc_9668                                ; CODE XREF: deactivateCardsAID+B54↓j
.text:0000000000009668                 LDR             W27, [X19]
.text:000000000000966C                 LDR             W8, [SP,#0x22F20+var_22EE4]
.text:0000000000009670                 MOV             W0, #4
.text:0000000000009674                 MOV             X1, X21
.text:0000000000009678                 CMN             W8, #1
.text:000000000000967C                 B.EQ            loc_9690
.text:0000000000009680                 MOV             X2, X25
.text:0000000000009684                 BL              .__android_log_print
.text:0000000000009688                 MOV             W0, #0x27 ; '''
.text:000000000000968C                 B               loc_96A0
.text:0000000000009690 ; ---------------------------------------------------------------------------
.text:0000000000009690 loc_9690                                ; CODE XREF: deactivateCardsAID+ACC↑j
.text:0000000000009690                 ADRP            X2, #aDcaD@PAGE ; "[DCA] D"
.text:0000000000009694                 ADD             X2, X2, #aDcaD@PAGEOFF ; "[DCA] D"
.text:0000000000009698                 BL              .__android_log_print
.text:000000000000969C                 MOV             W0, #0x31 ; '1'
.text:00000000000096A0 loc_96A0                                ; CODE XREF: deactivateCardsAID+ADC↑j
.text:00000000000096A0                 ADD             X3, SP, #0x22F20+var_22F14,LSL#12
.text:00000000000096A4                 ADD             X3, X3, #0x6B8
.text:00000000000096A8                 MOV             X1, X20
.text:00000000000096AC                 MOV             W2, W27
.text:00000000000096B0                 BL              .invokeCommand
.text:00000000000096B4                 ADD             X9, SP, #0x22F20+var_22F14,LSL#12
.text:00000000000096B8                 ADD             X9, X9, #0x6B8
.text:00000000000096BC                 LDR             W8, [X9,#4]
.text:00000000000096C0                 CBZ             W8, loc_96E0
.text:00000000000096C4                 MOV             W0, #6
.text:00000000000096C8                 MOV             W3, #0xFFFFFFE5
.text:00000000000096CC                 MOV             X1, X21
.text:00000000000096D0                 MOV             X2, X24
.text:00000000000096D4                 STR             W22, [X9,#4]
.text:00000000000096D8                 BL              .__android_log_print
.text:00000000000096DC                 B               loc_96F8
.text:00000000000096E0 ; ---------------------------------------------------------------------------
.text:00000000000096E0 loc_96E0                                ; CODE XREF: deactivateCardsAID+B10↑j
.text:00000000000096E0                 MOV             W3, WZR
.text:00000000000096E4                 MOV             W0, #4
.text:00000000000096E8                 MOV             X1, X21
.text:00000000000096EC                 MOV             X2, X23
.text:00000000000096F0                 BL              .__android_log_print
.text:00000000000096F4                 MOV             W28, #1
.text:00000000000096F8 loc_96F8                                ; CODE XREF: deactivateCardsAID+B2C↑j
.text:00000000000096F8                 ADD             X19, X19, #4
.text:00000000000096FC                 ADD             X20, X20, #0xFA
.text:0000000000009700                 SUB             W26, W26, #1
.text:0000000000009704                 CBNZ            W26, loc_9668
.text:0000000000009708                 ADD             X20, SP, #0x22F20+var_22F14,LSL#12
.text:000000000000970C                 ADD             X20, X20, #0x6B8
.text:0000000000009710                 CMP             W28, #1
.text:0000000000009714                 B.NE            loc_9724
.text:0000000000009718                 MOV             W3, WZR
.text:000000000000971C                 STR             WZR, [X20,#4]
.text:0000000000009720                 B               loc_9728
.text:0000000000009724 ; ---------------------------------------------------------------------------
.text:0000000000009724 loc_9724                                ; CODE XREF: deactivateCardsAID+B64↑j
.text:0000000000009724                 LDR             W3, [X20,#4]
.text:0000000000009728 loc_9728                                ; CODE XREF: deactivateCardsAID+63C↑j
.text:0000000000009728                                         ; deactivateCardsAID+B70↑j
.text:0000000000009728                 ADRP            X26, #__stack_chk_guard_ptr@PAGE
.text:000000000000972C                 LDR             X26, [X26,#__stack_chk_guard_ptr@PAGEOFF]
.text:0000000000009730                 ADRP            X1, #unk_10DEC@PAGE
.text:0000000000009734                 ADRP            X2, #aDcaRetD@PAGE ; "[DCA] RET : %d"
.text:0000000000009738                 ADD             X1, X1, #unk_10DEC@PAGEOFF
.text:000000000000973C                 LDR             X26, [X26]
.text:0000000000009740                 ADD             X2, X2, #aDcaRetD@PAGEOFF ; "[DCA] RET : %d"
.text:0000000000009744                 MOV             W0, #4
.text:0000000000009748                 ADD             X19, SP, #0x22F20+var_22EE0
.text:000000000000974C                 BL              .__android_log_print
.text:0000000000009750                 LDR             W0, [X20,#4]
.text:0000000000009754                 B               loc_95D8
.text:0000000000009758 ; ---------------------------------------------------------------------------
.text:0000000000009758 loc_9758                                ; CODE XREF: deactivateCardsAID+A30↑j
.text:0000000000009758                 BL              .__stack_chk_fail
.text:0000000000009758 ; } // starts at 8BB0
.text:0000000000009758 ; End of function deactivateCardsAID
.text:000000000000975C ; =============== S U B R O U T I N E =======================================
.text:000000000000975C ; Attributes: bp-based frame
.text:000000000000975C                 EXPORT checkHWParamPrecondition
.text:000000000000975C checkHWParamPrecondition                ; DATA XREF: LOAD:0000000000000F88↑o
.text:000000000000975C var_10          = -0x10
.text:000000000000975C var_s0          =  0
.text:000000000000975C ; __unwind {
.text:000000000000975C                 STP             X20, X19, [SP,#-0x10+var_10]!
.text:0000000000009760                 STP             X29, X30, [SP,#0x10+var_s0]
.text:0000000000009764                 ADD             X29, SP, #0x10
.text:0000000000009768                 MOV             W0, #1
.text:000000000000976C                 MOV             W19, #1
.text:0000000000009770                 BL              .isExistDeviceRootKey
.text:0000000000009774                 CMP             W0, #1
.text:0000000000009778                 B.EQ            loc_97B0
.text:000000000000977C                 CBNZ            W0, loc_9794
.text:0000000000009780                 ADRP            X1, #unk_10DEC@PAGE
.text:0000000000009784                 ADRP            X2, #aDrkIsNotExist@PAGE ; "DRK is not exist."
.text:0000000000009788                 ADD             X1, X1, #unk_10DEC@PAGEOFF
.text:000000000000978C                 ADD             X2, X2, #aDrkIsNotExist@PAGEOFF ; "DRK is not exist."
.text:0000000000009790                 B               loc_97A4
.text:0000000000009794 ; ---------------------------------------------------------------------------
.text:0000000000009794 loc_9794                                ; CODE XREF: checkHWParamPrecondition+20↑j
.text:0000000000009794                 ADRP            X1, #unk_10DEC@PAGE
.text:0000000000009798                 ADRP            X2, #aFailedToCheckD@PAGE ; "Failed to check DRK."
.text:000000000000979C                 ADD             X1, X1, #unk_10DEC@PAGEOFF
.text:00000000000097A0                 ADD             X2, X2, #aFailedToCheckD@PAGEOFF ; "Failed to check DRK."
.text:00000000000097A4 loc_97A4                                ; CODE XREF: checkHWParamPrecondition+34↑j
.text:00000000000097A4                 MOV             W0, #6
.text:00000000000097A8                 BL              .__android_log_print
.text:00000000000097AC                 MOV             W19, #0xFFFFFFFC
.text:00000000000097B0 loc_97B0                                ; CODE XREF: checkHWParamPrecondition+1C↑j
.text:00000000000097B0                 LDP             X29, X30, [SP,#0x10+var_s0]
.text:00000000000097B4                 MOV             W0, W19
.text:00000000000097B8                 LDP             X20, X19, [SP+0x10+var_10],#0x20
.text:00000000000097BC                 RET
.text:00000000000097BC ; } // starts at 975C
.text:00000000000097BC ; End of function checkHWParamPrecondition
.text:00000000000097C0 ; =============== S U B R O U T I N E =======================================
.text:00000000000097C0 ; Attributes: bp-based frame
.text:00000000000097C0                 EXPORT getVendor
.text:00000000000097C0 getVendor                               ; CODE XREF: .getVendor+C↑j
.text:00000000000097C0                                         ; DATA XREF: LOAD:0000000000000838↑o ...
.text:00000000000097C0 var_75          = -0x75
.text:00000000000097C0 s               = -0x74
.text:00000000000097C0 var_18          = -0x18
.text:00000000000097C0 var_10          = -0x10
.text:00000000000097C0 var_s0          =  0
.text:00000000000097C0 ; __unwind {
.text:00000000000097C0                 STP             X20, X19, [SP,#-0x10+var_10]!
.text:00000000000097C4                 STP             X29, X30, [SP,#0x10+var_s0]
.text:00000000000097C8                 ADD             X29, SP, #0x10
.text:00000000000097CC                 SUB             SP, SP, #0x70
.text:00000000000097D0                 ADRP            X20, #__stack_chk_guard_ptr@PAGE
.text:00000000000097D4                 LDR             X20, [X20,#__stack_chk_guard_ptr@PAGEOFF]
.text:00000000000097D8                 ADD             X0, SP, #0x80+s ; s
.text:00000000000097DC                 MOV             W2, #0x5C ; '\' ; n
.text:00000000000097E0                 MOV             W1, WZR ; c
.text:00000000000097E4                 LDR             X20, [X20]
.text:00000000000097E8                 MOV             W19, #0x5C ; '\'
.text:00000000000097EC                 STUR            X20, [X29,#var_18]
.text:00000000000097F0                 BL              .memset
.text:00000000000097F4                 ADD             X0, SP, #0x80+s
.text:00000000000097F8                 ADD             X1, SP, #0x80+var_75
.text:00000000000097FC                 STRB            W19, [SP,#0x80+var_75]
.text:0000000000009800                 BL              .getCosNameStr
.text:0000000000009804                 ADRP            X1, #unk_10DEC@PAGE
.text:0000000000009808                 ADRP            X2, #aGetvendorCosNa@PAGE ; "getVendor() cos name is %s"
.text:000000000000980C                 ADD             X1, X1, #unk_10DEC@PAGEOFF
.text:0000000000009810                 ADD             X2, X2, #aGetvendorCosNa@PAGEOFF ; "getVendor() cos name is %s"
.text:0000000000009814                 MOV             W0, #4
.text:0000000000009818                 ADD             X3, SP, #0x80+s
.text:000000000000981C                 BL              .__android_log_print
.text:0000000000009820                 ADD             X0, SP, #0x80+s ; s
.text:0000000000009824                 BL              .strlen
.text:0000000000009828                 CMP             X0, #6
.text:000000000000982C                 B.CC            loc_9878
.text:0000000000009830                 ADRP            X1, #aPearl@PAGE ; "PEARL"
.text:0000000000009834                 ADD             X1, X1, #aPearl@PAGEOFF ; "PEARL"
.text:0000000000009838                 ADD             X0, SP, #0x80+s ; s1
.text:000000000000983C                 MOV             W2, #5  ; n
.text:0000000000009840                 BL              .strncmp
.text:0000000000009844                 CBZ             W0, loc_98B8
.text:0000000000009848                 ADRP            X1, #aUt@PAGE ; "UT"
.text:000000000000984C                 ADD             X1, X1, #aUt@PAGEOFF ; "UT"
.text:0000000000009850                 ADD             X0, SP, #0x80+s ; s1
.text:0000000000009854                 MOV             W2, #2  ; n
.text:0000000000009858                 BL              .strncmp
.text:000000000000985C                 CBZ             W0, loc_98F8
.text:0000000000009860                 ADRP            X1, #aJcop@PAGE ; "JCOP"
.text:0000000000009864                 ADD             X1, X1, #aJcop@PAGEOFF ; "JCOP"
.text:0000000000009868                 ADD             X0, SP, #0x80+s ; s1
.text:000000000000986C                 MOV             W2, #4  ; n
.text:0000000000009870                 BL              .strncmp
.text:0000000000009874                 CBZ             W0, loc_999C
.text:0000000000009878 loc_9878                                ; CODE XREF: getVendor+6C↑j
.text:0000000000009878                 ADRP            X1, #unk_10DEC@PAGE
.text:000000000000987C                 ADRP            X2, #aCheckrestricte@PAGE ; "[checkRestricted] Unknown cosname : %s"
.text:0000000000009880                 ADD             X1, X1, #unk_10DEC@PAGEOFF
.text:0000000000009884                 ADD             X2, X2, #aCheckrestricte@PAGEOFF ; "[checkRestricted] Unknown cosname : %s"
.text:0000000000009888                 MOV             W0, #6
.text:000000000000988C                 ADD             X3, SP, #0x80+s
.text:0000000000009890                 BL              .__android_log_print
.text:0000000000009894                 MOV             W19, WZR
.text:0000000000009898 loc_9898                                ; CODE XREF: getVendor+134↓j
.text:0000000000009898                                         ; getVendor+1B0↓j ...
.text:0000000000009898                 LDUR            X8, [X29,#var_18]
.text:000000000000989C                 SUB             X8, X20, X8
.text:00000000000098A0                 CBNZ            X8, loc_9A6C
.text:00000000000098A4                 MOV             W0, W19
.text:00000000000098A8                 SUB             SP, X29, #0x10
.text:00000000000098AC                 LDP             X29, X30, [SP,#0x10+var_s0]
.text:00000000000098B0                 LDP             X20, X19, [SP+0x10+var_10],#0x20
.text:00000000000098B4                 RET
.text:00000000000098B8 ; ---------------------------------------------------------------------------
.text:00000000000098B8 loc_98B8                                ; CODE XREF: getVendor+84↑j
.text:00000000000098B8                 ADRP            X1, #aPearl30@PAGE ; "PEARL3.0"
.text:00000000000098BC                 ADD             X1, X1, #aPearl30@PAGEOFF ; "PEARL3.0"
.text:00000000000098C0                 ADD             X0, SP, #0x80+s ; s1
.text:00000000000098C4                 MOV             W2, #8  ; n
.text:00000000000098C8                 BL              .strncmp
.text:00000000000098CC                 CBZ             W0, loc_9A24
.text:00000000000098D0                 ADRP            X1, #aPearl31@PAGE ; "PEARL3.1"
.text:00000000000098D4                 ADD             X1, X1, #aPearl31@PAGEOFF ; "PEARL3.1"
.text:00000000000098D8                 ADD             X0, SP, #0x80+s ; s1
.text:00000000000098DC                 MOV             W2, #8  ; n
.text:00000000000098E0                 BL              .strncmp
.text:00000000000098E4                 CMP             W0, #0
.text:00000000000098E8                 MOV             W8, #2
.text:00000000000098EC                 MOV             W9, #7
.text:00000000000098F0                 CSEL            W19, W9, W8, EQ
.text:00000000000098F4                 B               loc_9898
.text:00000000000098F8 ; ---------------------------------------------------------------------------
.text:00000000000098F8 loc_98F8                                ; CODE XREF: getVendor+9C↑j
.text:00000000000098F8                 ADRP            X1, #aUt60u@PAGE ; "UT6.0U"
.text:00000000000098FC                 ADD             X1, X1, #aUt60u@PAGEOFF ; "UT6.0U"
.text:0000000000009900                 ADD             X0, SP, #0x80+s ; s1
.text:0000000000009904                 MOV             W2, #6  ; n
.text:0000000000009908                 BL              .strncmp
.text:000000000000990C                 CBZ             W0, loc_9A2C
.text:0000000000009910                 ADRP            X1, #aUt60t@PAGE ; "UT6.0T"
.text:0000000000009914                 ADD             X1, X1, #aUt60t@PAGEOFF ; "UT6.0T"
.text:0000000000009918                 ADD             X0, SP, #0x80+s ; s1
.text:000000000000991C                 MOV             W2, #6  ; n
.text:0000000000009920                 BL              .strncmp
.text:0000000000009924                 CBZ             W0, loc_9A34
.text:0000000000009928                 ADRP            X1, #aUt50@PAGE ; "UT5.0"
.text:000000000000992C                 ADD             X1, X1, #aUt50@PAGEOFF ; "UT5.0"
.text:0000000000009930                 ADD             X0, SP, #0x80+s ; s1
.text:0000000000009934                 MOV             W2, #5  ; n
.text:0000000000009938                 BL              .strncmp
.text:000000000000993C                 CBZ             W0, loc_9A44
.text:0000000000009940                 ADRP            X1, #aUt40@PAGE ; "UT4.0"
.text:0000000000009944                 ADD             X1, X1, #aUt40@PAGEOFF ; "UT4.0"
.text:0000000000009948                 ADD             X0, SP, #0x80+s ; s1
.text:000000000000994C                 MOV             W2, #5  ; n
.text:0000000000009950                 BL              .strncmp
.text:0000000000009954                 CBZ             W0, loc_9A54
.text:0000000000009958                 ADRP            X1, #aUt30@PAGE ; "UT3.0"
.text:000000000000995C                 ADD             X1, X1, #aUt30@PAGEOFF ; "UT3.0"
.text:0000000000009960                 ADD             X0, SP, #0x80+s ; s1
.text:0000000000009964                 MOV             W2, #5  ; n
.text:0000000000009968                 MOV             W19, #5
.text:000000000000996C                 BL              .strncmp
.text:0000000000009970                 CBZ             W0, loc_9898
.text:0000000000009974                 ADRP            X1, #aUt51@PAGE ; "UT5.1"
.text:0000000000009978                 ADD             X1, X1, #aUt51@PAGEOFF ; "UT5.1"
.text:000000000000997C                 ADD             X0, SP, #0x80+s ; s1
.text:0000000000009980                 MOV             W2, #6  ; n
.text:0000000000009984                 BL              .strncmp
.text:0000000000009988                 CMP             W0, #0
.text:000000000000998C                 MOV             W8, #3
.text:0000000000009990                 MOV             W9, #0xE
.text:0000000000009994                 CSEL            W19, W9, W8, EQ
.text:0000000000009998                 B               loc_9898
.text:000000000000999C ; ---------------------------------------------------------------------------
.text:000000000000999C loc_999C                                ; CODE XREF: getVendor+B4↑j
.text:000000000000999C                 ADRP            X1, #aJcop53u@PAGE ; "JCOP5.3U"
.text:00000000000099A0                 ADD             X1, X1, #aJcop53u@PAGEOFF ; "JCOP5.3U"
.text:00000000000099A4                 ADD             X0, SP, #0x80+s ; s1
.text:00000000000099A8                 MOV             W2, #8  ; n
.text:00000000000099AC                 BL              .strncmp
.text:00000000000099B0                 CBZ             W0, loc_9A3C
.text:00000000000099B4                 ADRP            X1, #aJcop53t@PAGE ; "JCOP5.3T"
.text:00000000000099B8                 ADD             X1, X1, #aJcop53t@PAGEOFF ; "JCOP5.3T"
.text:00000000000099BC                 ADD             X0, SP, #0x80+s ; s1
.text:00000000000099C0                 MOV             W2, #8  ; n
.text:00000000000099C4                 BL              .strncmp
.text:00000000000099C8                 CBZ             W0, loc_9A4C
.text:00000000000099CC                 ADRP            X1, #aJcop52u@PAGE ; "JCOP5.2U"
.text:00000000000099D0                 ADD             X1, X1, #aJcop52u@PAGEOFF ; "JCOP5.2U"
.text:00000000000099D4                 ADD             X0, SP, #0x80+s ; s1
.text:00000000000099D8                 MOV             W2, #8  ; n
.text:00000000000099DC                 BL              .strncmp
.text:00000000000099E0                 CBZ             W0, loc_9A5C
.text:00000000000099E4                 ADRP            X1, #aJcop52t@PAGE ; "JCOP5.2T"
.text:00000000000099E8                 ADD             X1, X1, #aJcop52t@PAGEOFF ; "JCOP5.2T"
.text:00000000000099EC                 ADD             X0, SP, #0x80+s ; s1
.text:00000000000099F0                 MOV             W2, #8  ; n
.text:00000000000099F4                 BL              .strncmp
.text:00000000000099F8                 CBZ             W0, loc_9A64
.text:00000000000099FC                 ADRP            X1, #aJcop40@PAGE ; "JCOP4.0"
.text:0000000000009A00                 ADD             X1, X1, #aJcop40@PAGEOFF ; "JCOP4.0"
.text:0000000000009A04                 ADD             X0, SP, #0x80+s ; s1
.text:0000000000009A08                 MOV             W2, #7  ; n
.text:0000000000009A0C                 BL              .strncmp
.text:0000000000009A10                 CMP             W0, #0
.text:0000000000009A14                 MOV             W8, #1
.text:0000000000009A18                 MOV             W9, #4
.text:0000000000009A1C                 CSEL            W19, W9, W8, EQ
.text:0000000000009A20                 B               loc_9898
.text:0000000000009A24 ; ---------------------------------------------------------------------------
.text:0000000000009A24 loc_9A24                                ; CODE XREF: getVendor+10C↑j
.text:0000000000009A24                 MOV             W19, #6
.text:0000000000009A28                 B               loc_9898
.text:0000000000009A2C ; ---------------------------------------------------------------------------
.text:0000000000009A2C loc_9A2C                                ; CODE XREF: getVendor+14C↑j
.text:0000000000009A2C                 MOV             W19, #0xA
.text:0000000000009A30                 B               loc_9898
.text:0000000000009A34 ; ---------------------------------------------------------------------------
.text:0000000000009A34 loc_9A34                                ; CODE XREF: getVendor+164↑j
.text:0000000000009A34                 MOV             W19, #0xB
.text:0000000000009A38                 B               loc_9898
.text:0000000000009A3C ; ---------------------------------------------------------------------------
.text:0000000000009A3C loc_9A3C                                ; CODE XREF: getVendor+1F0↑j
.text:0000000000009A3C                 MOV             W19, #0xF
.text:0000000000009A40                 B               loc_9898
.text:0000000000009A44 ; ---------------------------------------------------------------------------
.text:0000000000009A44 loc_9A44                                ; CODE XREF: getVendor+17C↑j
.text:0000000000009A44                 MOV             W19, #9
.text:0000000000009A48                 B               loc_9898
.text:0000000000009A4C ; ---------------------------------------------------------------------------
.text:0000000000009A4C loc_9A4C                                ; CODE XREF: getVendor+208↑j
.text:0000000000009A4C                 MOV             W19, #0x10
.text:0000000000009A50                 B               loc_9898
.text:0000000000009A54 ; ---------------------------------------------------------------------------
.text:0000000000009A54 loc_9A54                                ; CODE XREF: getVendor+194↑j
.text:0000000000009A54                 MOV             W19, #8
.text:0000000000009A58                 B               loc_9898
.text:0000000000009A5C ; ---------------------------------------------------------------------------
.text:0000000000009A5C loc_9A5C                                ; CODE XREF: getVendor+220↑j
.text:0000000000009A5C                 MOV             W19, #0xC
.text:0000000000009A60                 B               loc_9898
.text:0000000000009A64 ; ---------------------------------------------------------------------------
.text:0000000000009A64 loc_9A64                                ; CODE XREF: getVendor+238↑j
.text:0000000000009A64                 MOV             W19, #0xD
.text:0000000000009A68                 B               loc_9898
.text:0000000000009A6C ; ---------------------------------------------------------------------------
.text:0000000000009A6C loc_9A6C                                ; CODE XREF: getVendor+E0↑j
.text:0000000000009A6C                 BL              .__stack_chk_fail
.text:0000000000009A6C ; } // starts at 97C0
.text:0000000000009A6C ; End of function getVendor
.text:0000000000009A70 ; =============== S U B R O U T I N E =======================================
.text:0000000000009A70 ; Attributes: bp-based frame
.text:0000000000009A70                 EXPORT isAvailableSEApiByVendor
.text:0000000000009A70 isAvailableSEApiByVendor                ; DATA XREF: LOAD:0000000000000CE8↑o
.text:0000000000009A70 var_s0          =  0
.text:0000000000009A70 ; __unwind {
.text:0000000000009A70                 STP             X29, X30, [SP,#-0x10+var_s0]!
.text:0000000000009A74                 MOV             X29, SP
.text:0000000000009A78                 BL              .getVendor
.text:0000000000009A7C                 ORR             W8, W0, #1
.text:0000000000009A80                 SUB             W9, W0, #0xF
.text:0000000000009A84                 CMP             W8, #0xD
.text:0000000000009A88                 CSET            W10, EQ
.text:0000000000009A8C                 CMP             W9, #2
.text:0000000000009A90                 CSET            W9, CC
.text:0000000000009A94                 CMP             W8, #0xB
.text:0000000000009A98                 ORR             W8, W9, W10
.text:0000000000009A9C                 CSET            W9, EQ
.text:0000000000009AA0                 CMP             W0, #0xE
.text:0000000000009AA4                 ORR             W8, W9, W8
.text:0000000000009AA8                 CSET            W9, EQ
.text:0000000000009AAC                 ORR             W0, W9, W8
.text:0000000000009AB0                 LDP             X29, X30, [SP+var_s0],#0x10
.text:0000000000009AB4                 RET
.text:0000000000009AB4 ; } // starts at 9A70
.text:0000000000009AB4 ; End of function isAvailableSEApiByVendor
.text:0000000000009AB8 ; =============== S U B R O U T I N E =======================================
.text:0000000000009AB8 ; Attributes: bp-based frame
.text:0000000000009AB8                 EXPORT isRestricted
.text:0000000000009AB8 isRestricted                            ; CODE XREF: .isRestricted+C↑j
.text:0000000000009AB8                                         ; DATA XREF: LOAD:0000000000000BF8↑o ...
.text:0000000000009AB8 var_16840       = -0x16840
.text:0000000000009AB8 s               = -0x16838
.text:0000000000009AB8 var_16834       = -0x16834
.text:0000000000009AB8 var_16830       = -0x16830
.text:0000000000009AB8 var_20          = -0x20
.text:0000000000009AB8 var_10          = -0x10
.text:0000000000009AB8 var_s0          =  0
.text:0000000000009AB8 ; __unwind {
.text:0000000000009AB8                 STP             X22, X21, [SP,#-0x10+var_20]!
.text:0000000000009ABC                 STP             X20, X19, [SP,#0x20+var_10]
.text:0000000000009AC0                 STP             X29, X30, [SP,#0x20+var_s0]
.text:0000000000009AC4                 ADD             X29, SP, #0x20
.text:0000000000009AC8                 SUB             SP, SP, #0x16,LSL#12
.text:0000000000009ACC                 SUB             SP, SP, #0x820
.text:0000000000009AD0                 ADRP            X20, #__stack_chk_guard_ptr@PAGE
.text:0000000000009AD4                 LDR             X20, [X20,#__stack_chk_guard_ptr@PAGEOFF]
.text:0000000000009AD8                 MOV             W2, #0x10000
.text:0000000000009ADC                 MOV             X21, SP
.text:0000000000009AE0                 ADD             X0, SP, #0x16840+s ; s
.text:0000000000009AE4                 LDR             X20, [X20]
.text:0000000000009AE8                 MOVK            W2, #0x680C ; n
.text:0000000000009AEC                 MOV             W1, WZR ; c
.text:0000000000009AF0                 STR             X20, [X21,#0x16840+var_16840]
.text:0000000000009AF4                 BL              .memset
.text:0000000000009AF8                 MOV             W19, #0xFFFFFFFF
.text:0000000000009AFC                 MOV             X1, XZR
.text:0000000000009B00                 MOV             W0, #0x20 ; ' '
.text:0000000000009B04                 ADD             X3, SP, #0x16840+s
.text:0000000000009B08                 MOV             W2, WZR
.text:0000000000009B0C                 STR             W19, [SP,#0x16840+var_16834]
.text:0000000000009B10                 BL              .invokeCommand
.text:0000000000009B14                 LDR             W3, [SP,#0x16840+var_16834]
.text:0000000000009B18                 CBZ             W0, loc_9B3C
.text:0000000000009B1C                 ADRP            X1, #unk_10DEC@PAGE
.text:0000000000009B20                 ADRP            X2, #(aCmdHandleCcmDa+0x18)@PAGE ; "invokeCommand() failed! [%d]"
.text:0000000000009B24                 ADD             X1, X1, #unk_10DEC@PAGEOFF
.text:0000000000009B28                 ADD             X2, X2, #(aCmdHandleCcmDa+0x18)@PAGEOFF ; "invokeCommand() failed! [%d]"
.text:0000000000009B2C                 MOV             W0, #6
.text:0000000000009B30                 BL              .__android_log_print
.text:0000000000009B34                 STR             W19, [SP,#0x16840+var_16834]
.text:0000000000009B38                 B               loc_9B40
.text:0000000000009B3C ; ---------------------------------------------------------------------------
.text:0000000000009B3C loc_9B3C                                ; CODE XREF: isRestricted+60↑j
.text:0000000000009B3C                 CBZ             W3, loc_9BC4
.text:0000000000009B40 loc_9B40                                ; CODE XREF: isRestricted+80↑j
.text:0000000000009B40                 ADRP            X1, #unk_10DEC@PAGE
.text:0000000000009B44                 ADRP            X2, #aHwparamSemfact@PAGE ; "HWParam:SEMFactory :: Retry CMD_CHECK_E"...
.text:0000000000009B48                 ADD             X1, X1, #unk_10DEC@PAGEOFF
.text:0000000000009B4C                 ADD             X2, X2, #aHwparamSemfact@PAGEOFF ; "HWParam:SEMFactory :: Retry CMD_CHECK_E"...
.text:0000000000009B50                 MOV             W0, #6
.text:0000000000009B54                 MOV             W3, #1
.text:0000000000009B58                 BL              .__android_log_print
.text:0000000000009B5C                 MOV             X1, XZR
.text:0000000000009B60                 MOV             W0, #0x20 ; ' '
.text:0000000000009B64                 ADD             X3, SP, #0x16840+s
.text:0000000000009B68                 MOV             W2, WZR
.text:0000000000009B6C                 BL              .invokeCommand
.text:0000000000009B70                 LDR             W3, [SP,#0x16840+var_16834]
.text:0000000000009B74                 CBZ             W0, loc_9B9C
.text:0000000000009B78                 ADRP            X1, #unk_10DEC@PAGE
.text:0000000000009B7C                 ADRP            X2, #(aCmdHandleCcmDa+0x18)@PAGE ; "invokeCommand() failed! [%d]"
.text:0000000000009B80                 ADD             X1, X1, #unk_10DEC@PAGEOFF
.text:0000000000009B84                 ADD             X2, X2, #(aCmdHandleCcmDa+0x18)@PAGEOFF ; "invokeCommand() failed! [%d]"
.text:0000000000009B88                 MOV             W0, #6
.text:0000000000009B8C                 BL              .__android_log_print
.text:0000000000009B90                 MOV             W8, #0xFFFFFFFF
.text:0000000000009B94                 STR             W8, [SP,#0x16840+var_16834]
.text:0000000000009B98                 B               loc_9BA0
.text:0000000000009B9C ; ---------------------------------------------------------------------------
.text:0000000000009B9C loc_9B9C                                ; CODE XREF: isRestricted+BC↑j
.text:0000000000009B9C                 CBZ             W3, loc_9BC4
.text:0000000000009BA0 loc_9BA0                                ; CODE XREF: isRestricted+E0↑j
.text:0000000000009BA0                 ADRP            X1, #unk_10DEC@PAGE
.text:0000000000009BA4                 ADRP            X2, #aHwparamSemfact@PAGE ; "HWParam:SEMFactory :: Retry CMD_CHECK_E"...
.text:0000000000009BA8                 ADD             X1, X1, #unk_10DEC@PAGEOFF
.text:0000000000009BAC                 ADD             X2, X2, #aHwparamSemfact@PAGEOFF ; "HWParam:SEMFactory :: Retry CMD_CHECK_E"...
.text:0000000000009BB0                 MOV             W0, #6
.text:0000000000009BB4                 MOV             W3, #2
.text:0000000000009BB8                 MOV             W19, #2
.text:0000000000009BBC                 BL              .__android_log_print
.text:0000000000009BC0                 B               loc_9D00
.text:0000000000009BC4 ; ---------------------------------------------------------------------------
.text:0000000000009BC4 loc_9BC4                                ; CODE XREF: isRestricted:loc_9B3C↑j
.text:0000000000009BC4                                         ; isRestricted:loc_9B9C↑j
.text:0000000000009BC4                 BL              .getVendor
.text:0000000000009BC8                 MOV             W8, W0
.text:0000000000009BCC                 CMP             W8, #0x10
.text:0000000000009BD0                 B.EQ            loc_9C38
.text:0000000000009BD4                 ORR             W9, W8, #2
.text:0000000000009BD8                 CMP             W9, #0xF
.text:0000000000009BDC                 B.EQ            loc_9C38
.text:0000000000009BE0                 CMP             W8, #1
.text:0000000000009BE4                 B.EQ            loc_9C38
.text:0000000000009BE8                 ORR             W9, W8, #8
.text:0000000000009BEC                 CMP             W9, #0xC
.text:0000000000009BF0                 B.EQ            loc_9C38
.text:0000000000009BF4                 CMP             W8, #2
.text:0000000000009BF8                 B.NE            loc_9C74
.text:0000000000009BFC                 MOV             W8, #0x16808
.text:0000000000009C04                 ADD             X9, SP, #0x16840+s
.text:0000000000009C08                 LDR             W8, [X9,X8]
.text:0000000000009C0C                 CMP             W8, #2
.text:0000000000009C10                 B.NE            loc_9CE4
.text:0000000000009C14                 LDRH            W8, [SP,#0x16840+var_16830]
.text:0000000000009C18                 MOV             W9, #0x826A
.text:0000000000009C1C                 CMP             W8, W9
.text:0000000000009C20                 B.NE            loc_9CE4
.text:0000000000009C24                 ADRP            X1, #unk_10DEC@PAGE
.text:0000000000009C28                 ADRP            X2, #aHwparamSemfact_0@PAGE ; "HWParam:SEMFactory :: OT ESE is RESTRIC"...
.text:0000000000009C2C                 ADD             X1, X1, #unk_10DEC@PAGEOFF
.text:0000000000009C30                 ADD             X2, X2, #aHwparamSemfact_0@PAGEOFF ; "HWParam:SEMFactory :: OT ESE is RESTRIC"...
.text:0000000000009C34                 B               loc_9CD4
.text:0000000000009C38 ; ---------------------------------------------------------------------------
.text:0000000000009C38 loc_9C38                                ; CODE XREF: isRestricted+118↑j
.text:0000000000009C38                                         ; isRestricted+124↑j ...
.text:0000000000009C38                 MOV             W8, #0x16808
.text:0000000000009C40                 ADD             X9, SP, #0x16840+s
.text:0000000000009C44                 LDR             W8, [X9,X8]
.text:0000000000009C48                 CMP             W8, #2
.text:0000000000009C4C                 B.NE            loc_9CE4
.text:0000000000009C50                 LDRH            W8, [SP,#0x16840+var_16830]
.text:0000000000009C54                 MOV             W9, #0xA566
.text:0000000000009C58                 CMP             W8, W9
.text:0000000000009C5C                 B.NE            loc_9CE4
.text:0000000000009C60                 ADRP            X1, #unk_10DEC@PAGE
.text:0000000000009C64                 ADRP            X2, #aHwparamSemfact_1@PAGE ; "HWParam:SEMFactory :: NXP ESE is RESTRI"...
.text:0000000000009C68                 ADD             X1, X1, #unk_10DEC@PAGEOFF
.text:0000000000009C6C                 ADD             X2, X2, #aHwparamSemfact_1@PAGEOFF ; "HWParam:SEMFactory :: NXP ESE is RESTRI"...
.text:0000000000009C70                 B               loc_9CD4
.text:0000000000009C74 ; ---------------------------------------------------------------------------
.text:0000000000009C74 loc_9C74                                ; CODE XREF: isRestricted+140↑j
.text:0000000000009C74                 ORR             W9, W8, #3
.text:0000000000009C78                 CMP             W9, #0xB
.text:0000000000009C7C                 B.EQ            loc_9C9C
.text:0000000000009C80                 CMP             W8, #0xE
.text:0000000000009C84                 B.HI            loc_9D24
.text:0000000000009C88                 MOV             W9, #1
.text:0000000000009C8C                 LSL             W9, W9, W8
.text:0000000000009C90                 MOV             W10, #0x4028
.text:0000000000009C94                 AND             W9, W9, W10
.text:0000000000009C98                 CBZ             W9, loc_9D24
.text:0000000000009C9C loc_9C9C                                ; CODE XREF: isRestricted+1C4↑j
.text:0000000000009C9C                 MOV             W8, #0x16808
.text:0000000000009CA4                 ADD             X9, SP, #0x16840+s
.text:0000000000009CA8                 LDR             W8, [X9,X8]
.text:0000000000009CAC                 CMP             W8, #2
.text:0000000000009CB0                 B.NE            loc_9CE4
.text:0000000000009CB4                 LDRH            W8, [SP,#0x16840+var_16830]
.text:0000000000009CB8                 MOV             W9, #0x826A
.text:0000000000009CBC                 CMP             W8, W9
.text:0000000000009CC0                 B.NE            loc_9CE4
.text:0000000000009CC4                 ADRP            X1, #unk_10DEC@PAGE
.text:0000000000009CC8                 ADRP            X2, #aHwparamSemfact_2@PAGE ; "HWParam:SEMFactory :: GEMALTO ESE is RE"...
.text:0000000000009CCC                 ADD             X1, X1, #unk_10DEC@PAGEOFF
.text:0000000000009CD0                 ADD             X2, X2, #aHwparamSemfact_2@PAGEOFF ; "HWParam:SEMFactory :: GEMALTO ESE is RE"...
.text:0000000000009CD4 loc_9CD4                                ; CODE XREF: isRestricted+17C↑j
.text:0000000000009CD4                                         ; isRestricted+1B8↑j
.text:0000000000009CD4                 MOV             W0, #6
.text:0000000000009CD8                 BL              .__android_log_print
.text:0000000000009CDC                 MOV             W19, WZR
.text:0000000000009CE0                 B               loc_9D00
.text:0000000000009CE4 ; ---------------------------------------------------------------------------
.text:0000000000009CE4 loc_9CE4                                ; CODE XREF: isRestricted+158↑j
.text:0000000000009CE4                                         ; isRestricted+168↑j ...
.text:0000000000009CE4                 ADRP            X1, #unk_10DEC@PAGE
.text:0000000000009CE8                 ADRP            X2, #aHwparamSemfact_3@PAGE ; "HWParam:SEMFactory :: ESE is not restri"...
.text:0000000000009CEC                 ADD             X1, X1, #unk_10DEC@PAGEOFF
.text:0000000000009CF0                 ADD             X2, X2, #aHwparamSemfact_3@PAGEOFF ; "HWParam:SEMFactory :: ESE is not restri"...
.text:0000000000009CF4                 MOV             W0, #4
.text:0000000000009CF8                 BL              .__android_log_print
.text:0000000000009CFC                 MOV             W19, #1
.text:0000000000009D00 loc_9D00                                ; CODE XREF: isRestricted+108↑j
.text:0000000000009D00                                         ; isRestricted+228↑j ...
.text:0000000000009D00                 LDR             X8, [X21]
.text:0000000000009D04                 SUB             X8, X20, X8
.text:0000000000009D08                 CBNZ            X8, loc_9D48
.text:0000000000009D0C                 MOV             W0, W19
.text:0000000000009D10                 SUB             SP, X29, #0x20 ; ' '
.text:0000000000009D14                 LDP             X29, X30, [SP,#0x20+var_s0]
.text:0000000000009D18                 LDP             X20, X19, [SP,#0x20+var_10]
.text:0000000000009D1C                 LDP             X22, X21, [SP+0x20+var_20],#0x30
.text:0000000000009D20                 RET
.text:0000000000009D24 ; ---------------------------------------------------------------------------
.text:0000000000009D24 loc_9D24                                ; CODE XREF: isRestricted+1CC↑j
.text:0000000000009D24                                         ; isRestricted+1E0↑j
.text:0000000000009D24                 ADRP            X1, #unk_10DEC@PAGE
.text:0000000000009D28                 ADRP            X2, #aHwparamSemfact_4@PAGE ; "HWParam:SEMFactory :: UNKNOWN ESE. Chec"...
.text:0000000000009D2C                 ADD             X1, X1, #unk_10DEC@PAGEOFF
.text:0000000000009D30                 ADD             X2, X2, #aHwparamSemfact_4@PAGEOFF ; "HWParam:SEMFactory :: UNKNOWN ESE. Chec"...
.text:0000000000009D34                 MOV             W0, #6
.text:0000000000009D38                 MOV             W3, W8
.text:0000000000009D3C                 BL              .__android_log_print
.text:0000000000009D40                 MOV             W19, #2
.text:0000000000009D44                 B               loc_9D00
.text:0000000000009D48 ; ---------------------------------------------------------------------------
.text:0000000000009D48 loc_9D48                                ; CODE XREF: isRestricted+250↑j
.text:0000000000009D48                 BL              .__stack_chk_fail
.text:0000000000009D48 ; } // starts at 9AB8
.text:0000000000009D48 ; End of function isRestricted
.text:0000000000009D4C ; =============== S U B R O U T I N E =======================================
.text:0000000000009D4C ; Attributes: bp-based frame
.text:0000000000009D4C                 EXPORT isAttacked
.text:0000000000009D4C isAttacked                              ; CODE XREF: .isAttacked+C↑j
.text:0000000000009D4C                                         ; DATA XREF: LOAD:0000000000000D18↑o ...
.text:0000000000009D4C var_16850       = -0x16850
.text:0000000000009D4C s               = -0x16848
.text:0000000000009D4C var_16844       = -0x16844
.text:0000000000009D4C var_16840       = -0x16840
.text:0000000000009D4C var_30          = -0x30
.text:0000000000009D4C var_20          = -0x20
.text:0000000000009D4C var_10          = -0x10
.text:0000000000009D4C var_s0          =  0
.text:0000000000009D4C ; __unwind {
.text:0000000000009D4C                 STP             X28, X27, [SP,#-0x10+var_30]!
.text:0000000000009D50                 STP             X22, X21, [SP,#0x30+var_20]
.text:0000000000009D54                 STP             X20, X19, [SP,#0x30+var_10]
.text:0000000000009D58                 STP             X29, X30, [SP,#0x30+var_s0]
.text:0000000000009D5C                 ADD             X29, SP, #0x30
.text:0000000000009D60                 SUB             SP, SP, #0x16,LSL#12
.text:0000000000009D64                 SUB             SP, SP, #0x820
.text:0000000000009D68                 ADRP            X20, #__stack_chk_guard_ptr@PAGE
.text:0000000000009D6C                 LDR             X20, [X20,#__stack_chk_guard_ptr@PAGEOFF]
.text:0000000000009D70                 MOV             W2, #0x10000
.text:0000000000009D74                 MOV             X21, SP
.text:0000000000009D78                 ADD             X0, SP, #0x16850+s ; s
.text:0000000000009D7C                 LDR             X20, [X20]
.text:0000000000009D80                 MOVK            W2, #0x680C ; n
.text:0000000000009D84                 MOV             W1, WZR ; c
.text:0000000000009D88                 ADD             X19, SP, #0x16850+s
.text:0000000000009D8C                 STR             X20, [X21,#0x16850+var_16850]
.text:0000000000009D90                 BL              .memset
.text:0000000000009D94                 MOV             W9, #0x10000
.text:0000000000009D98                 MOV             W8, #0xFFFFFFFF
.text:0000000000009D9C                 MOVK            W9, #0x6808
.text:0000000000009DA0                 MOV             X1, XZR
.text:0000000000009DA4                 MOV             W0, #0x22 ; '"'
.text:0000000000009DA8                 ADD             X3, SP, #0x16850+s
.text:0000000000009DAC                 MOV             W2, WZR
.text:0000000000009DB0                 STR             W8, [SP,#0x16850+var_16844]
.text:0000000000009DB4                 ADD             X22, X19, X9
.text:0000000000009DB8                 BL              .invokeCommand
.text:0000000000009DBC                 CBZ             W0, loc_9DDC
.text:0000000000009DC0                 LDR             W3, [SP,#0x16850+var_16844]
.text:0000000000009DC4                 ADRP            X1, #unk_10DEC@PAGE
.text:0000000000009DC8                 ADRP            X2, #(aCmdHandleCcmDa+0x18)@PAGE ; "invokeCommand() failed! [%d]"
.text:0000000000009DCC                 ADD             X1, X1, #unk_10DEC@PAGEOFF
.text:0000000000009DD0                 ADD             X2, X2, #(aCmdHandleCcmDa+0x18)@PAGEOFF ; "invokeCommand() failed! [%d]"
.text:0000000000009DD4                 MOV             W0, #6
.text:0000000000009DD8                 BL              .__android_log_print
.text:0000000000009DDC loc_9DDC                                ; CODE XREF: isAttacked+70↑j
.text:0000000000009DDC                 LDR             W3, [X22]
.text:0000000000009DE0                 ADRP            X19, #unk_10DEC@PAGE
.text:0000000000009DE4                 ADD             X19, X19, #unk_10DEC@PAGEOFF
.text:0000000000009DE8                 ADRP            X2, #aResponseDatale@PAGE ; "response.dataLen = 0x%08X"
.text:0000000000009DEC                 ADD             X2, X2, #aResponseDatale@PAGEOFF ; "response.dataLen = 0x%08X"
.text:0000000000009DF0                 MOV             W0, #4
.text:0000000000009DF4                 MOV             X1, X19
.text:0000000000009DF8                 BL              .__android_log_print
.text:0000000000009DFC                 LDR             W3, [SP,#0x16850+var_16844]
.text:0000000000009E00                 ADRP            X2, #aResponseRet0x0@PAGE ; "response.ret = 0x%08X"
.text:0000000000009E04                 ADD             X2, X2, #aResponseRet0x0@PAGEOFF ; "response.ret = 0x%08X"
.text:0000000000009E08                 MOV             W0, #4
.text:0000000000009E0C                 MOV             X1, X19
.text:0000000000009E10                 BL              .__android_log_print
.text:0000000000009E14                 LDR             W8, [SP,#0x16850+var_16844]
.text:0000000000009E18                 CBNZ            W8, loc_9E24
.text:0000000000009E1C                 LDR             W8, [X22]
.text:0000000000009E20                 CBNZ            W8, loc_9EBC
.text:0000000000009E24 loc_9E24                                ; CODE XREF: isAttacked+CC↑j
.text:0000000000009E24                 ADRP            X1, #unk_10DEC@PAGE
.text:0000000000009E28                 ADRP            X2, #aRetryCmdGetAtt@PAGE ; "Retry CMD_GET_ATTACKED : Count = %d"
.text:0000000000009E2C                 ADD             X1, X1, #unk_10DEC@PAGEOFF
.text:0000000000009E30                 ADD             X2, X2, #aRetryCmdGetAtt@PAGEOFF ; "Retry CMD_GET_ATTACKED : Count = %d"
.text:0000000000009E34                 MOV             W0, #6
.text:0000000000009E38                 MOV             W3, #1
.text:0000000000009E3C                 BL              .__android_log_print
.text:0000000000009E40                 MOV             X1, XZR
.text:0000000000009E44                 MOV             W0, #0x22 ; '"'
.text:0000000000009E48                 ADD             X3, SP, #0x16850+s
.text:0000000000009E4C                 MOV             W2, WZR
.text:0000000000009E50                 BL              .invokeCommand
.text:0000000000009E54                 CBZ             W0, loc_9E74
.text:0000000000009E58                 LDR             W3, [SP,#0x16850+var_16844]
.text:0000000000009E5C                 ADRP            X1, #unk_10DEC@PAGE
.text:0000000000009E60                 ADRP            X2, #(aCmdHandleCcmDa+0x18)@PAGE ; "invokeCommand() failed! [%d]"
.text:0000000000009E64                 ADD             X1, X1, #unk_10DEC@PAGEOFF
.text:0000000000009E68                 ADD             X2, X2, #(aCmdHandleCcmDa+0x18)@PAGEOFF ; "invokeCommand() failed! [%d]"
.text:0000000000009E6C                 MOV             W0, #6
.text:0000000000009E70                 BL              .__android_log_print
.text:0000000000009E74 loc_9E74                                ; CODE XREF: isAttacked+108↑j
.text:0000000000009E74                 LDR             W3, [X22]
.text:0000000000009E78                 ADRP            X19, #unk_10DEC@PAGE
.text:0000000000009E7C                 ADD             X19, X19, #unk_10DEC@PAGEOFF
.text:0000000000009E80                 ADRP            X2, #aResponseDatale@PAGE ; "response.dataLen = 0x%08X"
.text:0000000000009E84                 ADD             X2, X2, #aResponseDatale@PAGEOFF ; "response.dataLen = 0x%08X"
.text:0000000000009E88                 MOV             W0, #4
.text:0000000000009E8C                 MOV             X1, X19
.text:0000000000009E90                 BL              .__android_log_print
.text:0000000000009E94                 LDR             W3, [SP,#0x16850+var_16844]
.text:0000000000009E98                 ADRP            X2, #aResponseRet0x0@PAGE ; "response.ret = 0x%08X"
.text:0000000000009E9C                 ADD             X2, X2, #aResponseRet0x0@PAGEOFF ; "response.ret = 0x%08X"
.text:0000000000009EA0                 MOV             W0, #4
.text:0000000000009EA4                 MOV             X1, X19
.text:0000000000009EA8                 BL              .__android_log_print
.text:0000000000009EAC                 LDR             W8, [SP,#0x16850+var_16844]
.text:0000000000009EB0                 CBNZ            W8, loc_9FA8
.text:0000000000009EB4                 LDR             W8, [X22]
.text:0000000000009EB8                 CBZ             W8, loc_9FA8
.text:0000000000009EBC loc_9EBC                                ; CODE XREF: isAttacked+D4↑j
.text:0000000000009EBC                 MOV             W9, WZR
.text:0000000000009EC0 loc_9EC0                                ; CODE XREF: isAttacked+180↓j
.text:0000000000009EC0                 ADD             W10, W9, #1
.text:0000000000009EC4                 CMP             W8, W9,UXTH
.text:0000000000009EC8                 MOV             W9, W10
.text:0000000000009ECC                 B.HI            loc_9EC0
.text:0000000000009ED0                 BL              .getVendor
.text:0000000000009ED4                 LDRH            W9, [SP,#0x16850+var_16840]
.text:0000000000009ED8                 MOV             W8, W0
.text:0000000000009EDC                 MOV             W10, #0x8569
.text:0000000000009EE0                 CMP             W9, W10
.text:0000000000009EE4                 B.NE            loc_9F08
.text:0000000000009EE8                 ADRP            X1, #unk_10DEC@PAGE
.text:0000000000009EEC                 ADRP            X2, #aUnableToGetAtt@PAGE ; "Unable to get attacked. ISDk rotate or "...
.text:0000000000009EF0                 ADD             X1, X1, #unk_10DEC@PAGEOFF
.text:0000000000009EF4                 ADD             X2, X2, #aUnableToGetAtt@PAGEOFF ; "Unable to get attacked. ISDk rotate or "...
.text:0000000000009EF8                 MOV             W0, #6
.text:0000000000009EFC                 BL              .__android_log_print
.text:0000000000009F00                 MOV             W19, #3
.text:0000000000009F04                 B               loc_A04C
.text:0000000000009F08 ; ---------------------------------------------------------------------------
.text:0000000000009F08 loc_9F08                                ; CODE XREF: isAttacked+198↑j
.text:0000000000009F08                 CMP             W8, #0x10
.text:0000000000009F0C                 B.EQ            loc_9FCC
.text:0000000000009F10                 ORR             W10, W8, #2
.text:0000000000009F14                 CMP             W10, #0xF
.text:0000000000009F18                 B.EQ            loc_9FCC
.text:0000000000009F1C                 ORR             W10, W8, #8
.text:0000000000009F20                 CMP             W10, #0xC
.text:0000000000009F24                 B.EQ            loc_9FCC
.text:0000000000009F28                 ORR             W10, W8, #3
.text:0000000000009F2C                 CMP             W10, #0xB
.text:0000000000009F30                 B.EQ            loc_9F44
.text:0000000000009F34                 CMP             W8, #0xE
.text:0000000000009F38                 B.EQ            loc_9F44
.text:0000000000009F3C                 CMP             W8, #5
.text:0000000000009F40                 B.NE            loc_A02C
.text:0000000000009F44 loc_9F44                                ; CODE XREF: isAttacked+1E4↑j
.text:0000000000009F44                                         ; isAttacked+1EC↑j
.text:0000000000009F44                 LDR             W3, [X22]
.text:0000000000009F48                 ADD             X8, SP, #0x16850+s
.text:0000000000009F4C                 SUBS            W10, W3, #2
.text:0000000000009F50                 ADD             X10, X8, W10,UXTW
.text:0000000000009F54                 ADD             X10, X10, #8
.text:0000000000009F58                 B.CC            loc_9F7C
.text:0000000000009F5C                 LDRB            W11, [X10]
.text:0000000000009F60                 CMP             W11, #0x90
.text:0000000000009F64                 B.NE            loc_9F7C
.text:0000000000009F68                 SUB             W11, W3, #1
.text:0000000000009F6C                 ADD             X12, SP, #0x16850+s
.text:0000000000009F70                 ADD             X11, X12, W11,UXTW
.text:0000000000009F74                 LDRB            W11, [X11,#8]
.text:0000000000009F78                 CBZ             W11, loc_A074
.text:0000000000009F7C loc_9F7C                                ; CODE XREF: isAttacked+20C↑j
.text:0000000000009F7C                                         ; isAttacked+218↑j
.text:0000000000009F7C                 SUB             W9, W3, #1
.text:0000000000009F80                 ADD             X8, X8, W9,UXTW
.text:0000000000009F84                 LDRB            W4, [X10]
.text:0000000000009F88                 LDRB            W5, [X8,#8]
.text:0000000000009F8C                 ADRP            X1, #unk_10DEC@PAGE
.text:0000000000009F90                 ADRP            X2, #aIsattackedResp@PAGE ; "isAttacked() response.dataLen = 0x%02X,"...
.text:0000000000009F94                 ADD             X1, X1, #unk_10DEC@PAGEOFF
.text:0000000000009F98                 ADD             X2, X2, #aIsattackedResp@PAGEOFF ; "isAttacked() response.dataLen = 0x%02X,"...
.text:0000000000009F9C                 MOV             W0, #6
.text:0000000000009FA0                 BL              .__android_log_print
.text:0000000000009FA4                 B               loc_A048
.text:0000000000009FA8 ; ---------------------------------------------------------------------------
.text:0000000000009FA8 loc_9FA8                                ; CODE XREF: isAttacked+164↑j
.text:0000000000009FA8                                         ; isAttacked+16C↑j
.text:0000000000009FA8                 ADRP            X1, #unk_10DEC@PAGE
.text:0000000000009FAC                 ADRP            X2, #aRetryCmdGetAtt@PAGE ; "Retry CMD_GET_ATTACKED : Count = %d"
.text:0000000000009FB0                 ADD             X1, X1, #unk_10DEC@PAGEOFF
.text:0000000000009FB4                 ADD             X2, X2, #aRetryCmdGetAtt@PAGEOFF ; "Retry CMD_GET_ATTACKED : Count = %d"
.text:0000000000009FB8                 MOV             W0, #6
.text:0000000000009FBC                 MOV             W3, #2
.text:0000000000009FC0                 MOV             W19, #2
.text:0000000000009FC4                 BL              .__android_log_print
.text:0000000000009FC8                 B               loc_A04C
.text:0000000000009FCC ; ---------------------------------------------------------------------------
.text:0000000000009FCC loc_9FCC                                ; CODE XREF: isAttacked+1C0↑j
.text:0000000000009FCC                                         ; isAttacked+1CC↑j ...
.text:0000000000009FCC                 LDR             W8, [X22]
.text:0000000000009FD0                 SUBS            W8, W8, #3
.text:0000000000009FD4                 B.CC            loc_A00C
.text:0000000000009FD8                 ADD             X9, SP, #0x16850+s
.text:0000000000009FDC                 ADD             X8, X9, W8,UXTW
.text:0000000000009FE0                 LDRB            W8, [X8,#8]
.text:0000000000009FE4                 CMP             W8, #0x5A ; 'Z'
.text:0000000000009FE8                 B.NE            loc_A00C
.text:0000000000009FEC                 ADRP            X1, #unk_10DEC@PAGE
.text:0000000000009FF0                 ADRP            X2, #aNxpEseIsAttack@PAGE ; "NXP ESE is ATTACKED"
.text:0000000000009FF4                 ADD             X1, X1, #unk_10DEC@PAGEOFF
.text:0000000000009FF8                 ADD             X2, X2, #aNxpEseIsAttack@PAGEOFF ; "NXP ESE is ATTACKED"
.text:0000000000009FFC loc_9FFC                                ; CODE XREF: isAttacked+344↓j
.text:0000000000009FFC                 MOV             W0, #6
.text:000000000000A000                 BL              .__android_log_print
.text:000000000000A004                 MOV             W19, WZR
.text:000000000000A008                 B               loc_A04C
.text:000000000000A00C ; ---------------------------------------------------------------------------
.text:000000000000A00C loc_A00C                                ; CODE XREF: isAttacked+288↑j
.text:000000000000A00C                                         ; isAttacked+29C↑j
.text:000000000000A00C                 ADRP            X1, #unk_10DEC@PAGE
.text:000000000000A010                 ADRP            X2, #aEseIsNotAttack@PAGE ; "ESE is not attacked"
.text:000000000000A014                 ADD             X1, X1, #unk_10DEC@PAGEOFF
.text:000000000000A018                 ADD             X2, X2, #aEseIsNotAttack@PAGEOFF ; "ESE is not attacked"
.text:000000000000A01C loc_A01C                                ; CODE XREF: isAttacked+350↓j
.text:000000000000A01C                 MOV             W0, #4
.text:000000000000A020                 BL              .__android_log_print
.text:000000000000A024                 MOV             W19, #1
.text:000000000000A028                 B               loc_A04C
.text:000000000000A02C ; ---------------------------------------------------------------------------
.text:000000000000A02C loc_A02C                                ; CODE XREF: isAttacked+1F4↑j
.text:000000000000A02C                 ADRP            X1, #unk_10DEC@PAGE
.text:000000000000A030                 ADRP            X2, #aUnknownEseChec@PAGE ; "UNKNOWN ESE. Check attacked failed. ven"...
.text:000000000000A034                 ADD             X1, X1, #unk_10DEC@PAGEOFF
.text:000000000000A038                 ADD             X2, X2, #aUnknownEseChec@PAGEOFF ; "UNKNOWN ESE. Check attacked failed. ven"...
.text:000000000000A03C                 MOV             W0, #6
.text:000000000000A040                 MOV             W3, W8
.text:000000000000A044                 BL              .__android_log_print
.text:000000000000A048 loc_A048                                ; CODE XREF: isAttacked+258↑j
.text:000000000000A048                 MOV             W19, #2
.text:000000000000A04C loc_A04C                                ; CODE XREF: isAttacked+1B8↑j
.text:000000000000A04C                                         ; isAttacked+27C↑j ...
.text:000000000000A04C                 LDR             X8, [X21]
.text:000000000000A050                 SUB             X8, X20, X8
.text:000000000000A054                 CBNZ            X8, loc_A0A0
.text:000000000000A058                 MOV             W0, W19
.text:000000000000A05C                 SUB             SP, X29, #0x30 ; '0'
.text:000000000000A060                 LDP             X29, X30, [SP,#0x30+var_s0]
.text:000000000000A064                 LDP             X20, X19, [SP,#0x30+var_10]
.text:000000000000A068                 LDP             X22, X21, [SP,#0x30+var_20]
.text:000000000000A06C                 LDP             X28, X27, [SP+0x30+var_30],#0x40
.text:000000000000A070                 RET
.text:000000000000A074 ; ---------------------------------------------------------------------------
.text:000000000000A074 loc_A074                                ; CODE XREF: isAttacked+22C↑j
.text:000000000000A074                 ADRP            X1, #unk_10DEC@PAGE
.text:000000000000A078                 AND             W8, W9, #0xFF
.text:000000000000A07C                 ADD             X1, X1, #unk_10DEC@PAGEOFF
.text:000000000000A080                 CMP             W8, #0x64 ; 'd'
.text:000000000000A084                 B.NE            loc_A094
.text:000000000000A088                 ADRP            X2, #aGemaltoEseIsAt@PAGE ; "GEMALTO ESE is ATTACKED"
.text:000000000000A08C                 ADD             X2, X2, #aGemaltoEseIsAt@PAGEOFF ; "GEMALTO ESE is ATTACKED"
.text:000000000000A090                 B               loc_9FFC
.text:000000000000A094 ; ---------------------------------------------------------------------------
.text:000000000000A094 loc_A094                                ; CODE XREF: isAttacked+338↑j
.text:000000000000A094                 ADRP            X2, #aEseIsNotAttack_0@PAGE ; "ESE is NOT Attacked"
.text:000000000000A098                 ADD             X2, X2, #aEseIsNotAttack_0@PAGEOFF ; "ESE is NOT Attacked"
.text:000000000000A09C                 B               loc_A01C
.text:000000000000A0A0 ; ---------------------------------------------------------------------------
.text:000000000000A0A0 loc_A0A0                                ; CODE XREF: isAttacked+308↑j
.text:000000000000A0A0                 BL              .__stack_chk_fail
.text:000000000000A0A0 ; } // starts at 9D4C
.text:000000000000A0A0 ; End of function isAttacked
.text:000000000000A0A4 ; =============== S U B R O U T I N E =======================================
.text:000000000000A0A4 ; Attributes: bp-based frame
.text:000000000000A0A4                 EXPORT getACDump
.text:000000000000A0A4 getACDump                               ; CODE XREF: .getACDump+C↑j
.text:000000000000A0A4                                         ; DATA XREF: LOAD:0000000000001480↑o ...
.text:000000000000A0A4 var_16878       = -0x16878
.text:000000000000A0A4 src             = -0x1686C
.text:000000000000A0A4 var_1686A       = -0x1686A
.text:000000000000A0A4 s               = -0x16868
.text:000000000000A0A4 var_16864       = -0x16864
.text:000000000000A0A4 var_50          = -0x50
.text:000000000000A0A4 var_40          = -0x40
.text:000000000000A0A4 var_30          = -0x30
.text:000000000000A0A4 var_20          = -0x20
.text:000000000000A0A4 var_10          = -0x10
.text:000000000000A0A4 var_s0          =  0
.text:000000000000A0A4 ; __unwind {
.text:000000000000A0A4                 STP             X28, X27, [SP,#-0x10+var_50]!
.text:000000000000A0A8                 STP             X26, X25, [SP,#0x50+var_40]
.text:000000000000A0AC                 STP             X24, X23, [SP,#0x50+var_30]
.text:000000000000A0B0                 STP             X22, X21, [SP,#0x50+var_20]
.text:000000000000A0B4                 STP             X20, X19, [SP,#0x50+var_10]
.text:000000000000A0B8                 STP             X29, X30, [SP,#0x50+var_s0]
.text:000000000000A0BC                 ADD             X29, SP, #0x50
.text:000000000000A0C0                 SUB             SP, SP, #0x16,LSL#12
.text:000000000000A0C4                 SUB             SP, SP, #0x830
.text:000000000000A0C8                 ADRP            X8, #__stack_chk_guard_ptr@PAGE
.text:000000000000A0CC                 LDR             X8, [X8,#__stack_chk_guard_ptr@PAGEOFF]
.text:000000000000A0D0                 MOV             W2, #0x10000
.text:000000000000A0D4                 MOV             X19, X1
.text:000000000000A0D8                 MOV             X20, X0
.text:000000000000A0DC                 LDR             X8, [X8]
.text:000000000000A0E0                 ADD             X9, SP, #0x16880+var_16878
.text:000000000000A0E4                 ADD             X0, SP, #0x16880+s ; s
.text:000000000000A0E8                 MOVK            W2, #0x680C ; n
.text:000000000000A0EC                 MOV             W1, WZR ; c
.text:000000000000A0F0                 STR             X8, [X9]
.text:000000000000A0F4                 ADD             X27, SP, #0x16880+s
.text:000000000000A0F8                 BL              .memset
.text:000000000000A0FC                 MOV             W8, #0x16808
.text:000000000000A104                 ADRP            X21, #unk_10DEC@PAGE
.text:000000000000A108                 ADRP            X23, #a02x@PAGE ; "%02X"
.text:000000000000A10C                 ADRP            X24, #(aCmdHandleCcmDa+0x18)@PAGE ; "invokeCommand() failed! [%d]"
.text:000000000000A110                 MOV             W28, WZR
.text:000000000000A114                 MOV             W25, #0xFFFFFFFF
.text:000000000000A118                 ADD             X21, X21, #unk_10DEC@PAGEOFF
.text:000000000000A11C                 ADD             X23, X23, #a02x@PAGEOFF ; "%02X"
.text:000000000000A120                 ADD             X26, X27, X8
.text:000000000000A124                 ADD             X24, X24, #(aCmdHandleCcmDa+0x18)@PAGEOFF ; "invokeCommand() failed! [%d]"
.text:000000000000A128                 STR             W25, [SP,#0x16880+var_16864]
.text:000000000000A12C loc_A12C                                ; CODE XREF: getACDump+134↓j
.text:000000000000A12C                 MOV             X1, XZR
.text:000000000000A130                 MOV             W0, #0x21 ; '!'
.text:000000000000A134                 ADD             X3, SP, #0x16880+s
.text:000000000000A138                 MOV             W2, WZR
.text:000000000000A13C                 BL              .invokeCommand
.text:000000000000A140                 CBZ             W0, loc_A15C
.text:000000000000A144                 LDR             W3, [SP,#0x16880+var_16864]
.text:000000000000A148                 MOV             W0, #6
.text:000000000000A14C                 MOV             X1, X21
.text:000000000000A150                 MOV             X2, X24
.text:000000000000A154                 BL              .__android_log_print
.text:000000000000A158                 STR             W25, [SP,#0x16880+var_16864]
.text:000000000000A15C loc_A15C                                ; CODE XREF: getACDump+9C↑j
.text:000000000000A15C                 LDR             W8, [X26]
.text:000000000000A160                 CBZ             W8, loc_A1A4
.text:000000000000A164                 MOV             W22, WZR
.text:000000000000A168 loc_A168                                ; CODE XREF: getACDump+FC↓j
.text:000000000000A168                 ADD             X8, X27, W22,UXTW
.text:000000000000A16C                 LDRB            W3, [X8,#8]
.text:000000000000A170                 ADD             X0, SP, #0x16880+src ; s
.text:000000000000A174                 MOV             W1, #3  ; maxlen
.text:000000000000A178                 MOV             X2, X23 ; format
.text:000000000000A17C                 STRB            WZR, [SP,#0x16880+var_1686A]
.text:000000000000A180                 STRH            WZR, [SP,#0x16880+src]
.text:000000000000A184                 BL              .snprintf
.text:000000000000A188                 ADD             X1, SP, #0x16880+src ; src
.text:000000000000A18C                 MOV             X0, X20 ; dest
.text:000000000000A190                 BL              .strcat
.text:000000000000A194                 LDR             W8, [X26]
.text:000000000000A198                 ADD             W22, W22, #1
.text:000000000000A19C                 CMP             W22, W8
.text:000000000000A1A0                 B.CC            loc_A168
.text:000000000000A1A4 loc_A1A4                                ; CODE XREF: getACDump+BC↑j
.text:000000000000A1A4                 MOV             X0, X20 ; s
.text:000000000000A1A8                 BL              .strlen
.text:000000000000A1AC                 STR             W0, [X19]
.text:000000000000A1B0                 LDR             W8, [SP,#0x16880+var_16864]
.text:000000000000A1B4                 CBZ             W8, loc_A1E0
.text:000000000000A1B8                 ADRP            X2, #aHwparamSemfact_5@PAGE ; "HWParam:SEMFactory :: Retry CMD_GET_ACD"...
.text:000000000000A1BC                 ADD             W3, W28, #1
.text:000000000000A1C0                 MOV             W0, #6
.text:000000000000A1C4                 MOV             X1, X21
.text:000000000000A1C8                 ADD             X2, X2, #aHwparamSemfact_5@PAGEOFF ; "HWParam:SEMFactory :: Retry CMD_GET_ACD"...
.text:000000000000A1CC                 BL              .__android_log_print
.text:000000000000A1D0 loc_A1D0                                ; CODE XREF: getACDump+190↓j
.text:000000000000A1D0                                         ; getACDump+1A0↓j ...
.text:000000000000A1D0                 ADD             W28, W28, #1
.text:000000000000A1D4                 CMP             W28, #2
.text:000000000000A1D8                 B.CC            loc_A12C
.text:000000000000A1DC                 B               loc_A2DC
.text:000000000000A1E0 ; ---------------------------------------------------------------------------
.text:000000000000A1E0 loc_A1E0                                ; CODE XREF: getACDump+110↑j
.text:000000000000A1E0                 BL              .getVendor
.text:000000000000A1E4                 MOV             W8, W0
.text:000000000000A1E8                 CMP             W8, #0x10
.text:000000000000A1EC                 B.EQ            loc_A25C
.text:000000000000A1F0                 ORR             W9, W8, #2
.text:000000000000A1F4                 CMP             W9, #0xF
.text:000000000000A1F8                 B.EQ            loc_A25C
.text:000000000000A1FC                 CMP             W8, #1
.text:000000000000A200                 B.EQ            loc_A25C
.text:000000000000A204                 ORR             W9, W8, #8
.text:000000000000A208                 CMP             W9, #0xC
.text:000000000000A20C                 B.EQ            loc_A25C
.text:000000000000A210                 SUB             W9, W8, #9
.text:000000000000A214                 CMP             W9, #3
.text:000000000000A218                 B.CC            loc_A28C
.text:000000000000A21C                 CMP             W8, #0xE
.text:000000000000A220                 B.EQ            loc_A28C
.text:000000000000A224                 CMP             W8, #2
.text:000000000000A228                 B.NE            loc_A2C0
.text:000000000000A22C                 LDR             W8, [X26]
.text:000000000000A230                 SUBS            W9, W8, #2
.text:000000000000A234                 B.CC            loc_A1D0
.text:000000000000A238                 ADD             X9, X27, W9,UXTW
.text:000000000000A23C                 LDRB            W9, [X9,#8]
.text:000000000000A240                 CMP             W9, #0x90
.text:000000000000A244                 B.NE            loc_A1D0
.text:000000000000A248                 SUB             W8, W8, #1
.text:000000000000A24C                 ADD             X8, X27, W8,UXTW
.text:000000000000A250                 LDRB            W8, [X8,#8]
.text:000000000000A254                 CBNZ            W8, loc_A1D0
.text:000000000000A258                 B               loc_A324
.text:000000000000A25C ; ---------------------------------------------------------------------------
.text:000000000000A25C loc_A25C                                ; CODE XREF: getACDump+148↑j
.text:000000000000A25C                                         ; getACDump+154↑j ...
.text:000000000000A25C                 LDR             W8, [X26]
.text:000000000000A260                 SUBS            W9, W8, #2
.text:000000000000A264                 B.CC            loc_A1D0
.text:000000000000A268                 ADD             X9, X27, W9,UXTW
.text:000000000000A26C                 LDRB            W9, [X9,#8]
.text:000000000000A270                 CMP             W9, #0x90
.text:000000000000A274                 B.NE            loc_A1D0
.text:000000000000A278                 SUB             W8, W8, #1
.text:000000000000A27C                 ADD             X8, X27, W8,UXTW
.text:000000000000A280                 LDRB            W8, [X8,#8]
.text:000000000000A284                 CBNZ            W8, loc_A1D0
.text:000000000000A288                 B               loc_A31C
.text:000000000000A28C ; ---------------------------------------------------------------------------
.text:000000000000A28C loc_A28C                                ; CODE XREF: getACDump+174↑j
.text:000000000000A28C                                         ; getACDump+17C↑j
.text:000000000000A28C                 LDR             W8, [X26]
.text:000000000000A290                 SUBS            W9, W8, #2
.text:000000000000A294                 B.CC            loc_A1D0
.text:000000000000A298                 ADD             X9, X27, W9,UXTW
.text:000000000000A29C                 LDRB            W9, [X9,#8]
.text:000000000000A2A0                 CMP             W9, #0x90
.text:000000000000A2A4                 B.NE            loc_A1D0
.text:000000000000A2A8                 SUB             W8, W8, #1
.text:000000000000A2AC                 ADD             X8, X27, W8,UXTW
.text:000000000000A2B0                 LDRB            W8, [X8,#8]
.text:000000000000A2B4                 CBNZ            W8, loc_A1D0
.text:000000000000A2B8                 MOV             W0, WZR
.text:000000000000A2BC                 B               loc_A2E0
.text:000000000000A2C0 ; ---------------------------------------------------------------------------
.text:000000000000A2C0 loc_A2C0                                ; CODE XREF: getACDump+184↑j
.text:000000000000A2C0                 ADRP            X1, #unk_10DEC@PAGE
.text:000000000000A2C4                 ADRP            X2, #aHwparamSemfact_6@PAGE ; "HWParam:SEMFactory :: UNKNOWN ESE. getA"...
.text:000000000000A2C8                 ADD             X1, X1, #unk_10DEC@PAGEOFF
.text:000000000000A2CC                 ADD             X2, X2, #aHwparamSemfact_6@PAGEOFF ; "HWParam:SEMFactory :: UNKNOWN ESE. getA"...
.text:000000000000A2D0                 MOV             W0, #6
.text:000000000000A2D4                 MOV             W3, W8
.text:000000000000A2D8                 BL              .__android_log_print
.text:000000000000A2DC loc_A2DC                                ; CODE XREF: getACDump+138↑j
.text:000000000000A2DC                 MOV             W0, #1
.text:000000000000A2E0 loc_A2E0                                ; CODE XREF: getACDump+218↑j
.text:000000000000A2E0                                         ; getACDump+27C↓j ...
.text:000000000000A2E0                 ADD             X8, SP, #0x16880+var_16878
.text:000000000000A2E4                 ADRP            X9, #__stack_chk_guard_ptr@PAGE
.text:000000000000A2E8                 LDR             X8, [X8]
.text:000000000000A2EC                 LDR             X9, [X9,#__stack_chk_guard_ptr@PAGEOFF]
.text:000000000000A2F0                 LDR             X9, [X9]
.text:000000000000A2F4                 SUB             X8, X9, X8
.text:000000000000A2F8                 CBNZ            X8, loc_A32C
.text:000000000000A2FC                 SUB             SP, X29, #0x50 ; 'P'
.text:000000000000A300                 LDP             X29, X30, [SP,#0x50+var_s0]
.text:000000000000A304                 LDP             X20, X19, [SP,#0x50+var_10]
.text:000000000000A308                 LDP             X22, X21, [SP,#0x50+var_20]
.text:000000000000A30C                 LDP             X24, X23, [SP,#0x50+var_30]
.text:000000000000A310                 LDP             X26, X25, [SP,#0x50+var_40]
.text:000000000000A314                 LDP             X28, X27, [SP+0x50+var_50],#0x60
.text:000000000000A318                 RET
.text:000000000000A31C ; ---------------------------------------------------------------------------
.text:000000000000A31C loc_A31C                                ; CODE XREF: getACDump+1E4↑j
.text:000000000000A31C                 MOV             W0, WZR
.text:000000000000A320                 B               loc_A2E0
.text:000000000000A324 ; ---------------------------------------------------------------------------
.text:000000000000A324 loc_A324                                ; CODE XREF: getACDump+1B4↑j
.text:000000000000A324                 MOV             W0, WZR
.text:000000000000A328                 B               loc_A2E0
.text:000000000000A32C ; ---------------------------------------------------------------------------
.text:000000000000A32C loc_A32C                                ; CODE XREF: getACDump+254↑j
.text:000000000000A32C                 BL              .__stack_chk_fail
.text:000000000000A32C ; } // starts at A0A4
.text:000000000000A32C ; End of function getACDump
.text:000000000000A330 ; =============== S U B R O U T I N E =======================================
.text:000000000000A330 ; Attributes: bp-based frame
.text:000000000000A330                 EXPORT getEnhancedACDumpPart
.text:000000000000A330 getEnhancedACDumpPart                   ; CODE XREF: .getEnhancedACDumpPart+C↑j
.text:000000000000A330                                         ; DATA XREF: LOAD:0000000000000C40↑o ...
.text:000000000000A330 var_16C60       = -0x16C60
.text:000000000000A330 src             = -0x16C54
.text:000000000000A330 var_16C52       = -0x16C52
.text:000000000000A330 var_16C50       = -0x16C50
.text:000000000000A330 s               = -0x16868
.text:000000000000A330 var_16864       = -0x16864
.text:000000000000A330 var_50          = -0x50
.text:000000000000A330 var_40          = -0x40
.text:000000000000A330 var_30          = -0x30
.text:000000000000A330 var_20          = -0x20
.text:000000000000A330 var_10          = -0x10
.text:000000000000A330 var_s0          =  0
.text:000000000000A330 ; __unwind {
.text:000000000000A330                 STP             X28, X27, [SP,#-0x10+var_50]!
.text:000000000000A334                 STP             X26, X25, [SP,#0x50+var_40]
.text:000000000000A338                 STP             X24, X23, [SP,#0x50+var_30]
.text:000000000000A33C                 STP             X22, X21, [SP,#0x50+var_20]
.text:000000000000A340                 STP             X20, X19, [SP,#0x50+var_10]
.text:000000000000A344                 STP             X29, X30, [SP,#0x50+var_s0]
.text:000000000000A348                 ADD             X29, SP, #0x50
.text:000000000000A34C                 SUB             SP, SP, #0x16,LSL#12
.text:000000000000A350                 SUB             SP, SP, #0xC20
.text:000000000000A354                 ADRP            X24, #__stack_chk_guard_ptr@PAGE
.text:000000000000A358                 LDR             X24, [X24,#__stack_chk_guard_ptr@PAGEOFF]
.text:000000000000A35C                 MOV             W22, W2
.text:000000000000A360                 MOV             W2, #0x10000
.text:000000000000A364                 MOV             X19, X1
.text:000000000000A368                 LDR             X24, [X24]
.text:000000000000A36C                 MOV             X20, X0
.text:000000000000A370                 ADD             X25, SP, #0x16C70+var_16C60
.text:000000000000A374                 ADD             X0, SP, #0x16C70+s ; s
.text:000000000000A378                 MOVK            W2, #0x680C ; n
.text:000000000000A37C                 MOV             W1, WZR ; c
.text:000000000000A380                 STR             X24, [X25]
.text:000000000000A384                 BL              .memset
.text:000000000000A388                 MOV             W8, #0xFFFFFFFF
.text:000000000000A38C                 STR             W8, [SP,#0x16C70+var_16864]
.text:000000000000A390                 BL              .getVendor
.text:000000000000A394                 AND             W21, W22, #0xFF
.text:000000000000A398                 ADRP            X1, #unk_10DEC@PAGE
.text:000000000000A39C                 ADRP            X2, #aHwparamSemfact_7@PAGE ; "HWParam:SEMFactory :: getEnhancedACDump"...
.text:000000000000A3A0                 MOV             W23, W0
.text:000000000000A3A4                 ADD             X1, X1, #unk_10DEC@PAGEOFF
.text:000000000000A3A8                 ADD             X2, X2, #aHwparamSemfact_7@PAGEOFF ; "HWParam:SEMFactory :: getEnhancedACDump"...
.text:000000000000A3AC                 MOV             W0, #4
.text:000000000000A3B0                 MOV             W3, W21
.text:000000000000A3B4                 BL              .__android_log_print
.text:000000000000A3B8                 CMP             W23, #0x10
.text:000000000000A3BC                 B.HI            loc_A52C
.text:000000000000A3C0                 MOV             W8, #1
.text:000000000000A3C4                 MOV             W9, #0x10000
.text:000000000000A3C8                 LSL             W8, W8, W23
.text:000000000000A3CC                 MOVK            W9, #0xB012
.text:000000000000A3D0                 AND             W8, W8, W9
.text:000000000000A3D4                 CBZ             W8, loc_A52C
.text:000000000000A3D8                 ADD             X0, SP, #0x16C70+var_16C50 ; s
.text:000000000000A3DC                 MOV             W2, #0x3E8 ; n
.text:000000000000A3E0                 MOV             W1, WZR ; c
.text:000000000000A3E4                 BL              .memset
.text:000000000000A3E8                 MOV             W2, #0x10000
.text:000000000000A3EC                 MOV             W23, #0x10000
.text:000000000000A3F0                 SUB             W8, W22, #1
.text:000000000000A3F4                 ADD             X0, SP, #0x16C70+s ; s
.text:000000000000A3F8                 MOVK            W2, #0x680C ; n
.text:000000000000A3FC                 MOV             W1, WZR ; c
.text:000000000000A400                 MOVK            W23, #0x6808
.text:000000000000A404                 ADD             X26, SP, #0x16C70+s
.text:000000000000A408                 AND             W27, W8, #0xFF
.text:000000000000A40C                 BL              .memset
.text:000000000000A410                 CMP             W27, #7
.text:000000000000A414                 B.CS            loc_A494
.text:000000000000A418                 ADD             W0, W27, #0x29 ; ')'
.text:000000000000A41C                 MOV             X1, XZR
.text:000000000000A420                 MOV             W2, WZR
.text:000000000000A424                 ADD             X3, SP, #0x16C70+s
.text:000000000000A428                 ADD             X22, X26, X23
.text:000000000000A42C                 BL              .invokeCommand
.text:000000000000A430                 CBZ             W0, loc_A458
.text:000000000000A434                 LDR             W3, [SP,#0x16C70+var_16864]
.text:000000000000A438                 ADRP            X1, #unk_10DEC@PAGE
.text:000000000000A43C                 ADRP            X2, #(aCmdHandleCcmDa+0x18)@PAGE ; "invokeCommand() failed! [%d]"
.text:000000000000A440                 ADD             X1, X1, #unk_10DEC@PAGEOFF
.text:000000000000A444                 ADD             X2, X2, #(aCmdHandleCcmDa+0x18)@PAGEOFF ; "invokeCommand() failed! [%d]"
.text:000000000000A448                 MOV             W0, #6
.text:000000000000A44C                 BL              .__android_log_print
.text:000000000000A450                 MOV             W8, #0xFFFFFFFF
.text:000000000000A454                 STR             W8, [SP,#0x16C70+var_16864]
.text:000000000000A458 loc_A458                                ; CODE XREF: getEnhancedACDumpPart+100↑j
.text:000000000000A458                 LDR             W8, [X22]
.text:000000000000A45C                 MOV             W9, WZR
.text:000000000000A460 loc_A460                                ; CODE XREF: getEnhancedACDumpPart+13C↓j
.text:000000000000A460                 AND             W10, W9, #0xFF
.text:000000000000A464                 ADD             W9, W9, #1
.text:000000000000A468                 CMP             W10, W8
.text:000000000000A46C                 B.CC            loc_A460
.text:000000000000A470                 LDR             W4, [SP,#0x16C70+var_16864]
.text:000000000000A474                 CBZ             W4, loc_A4B4
.text:000000000000A478                 ADRP            X1, #unk_10DEC@PAGE
.text:000000000000A47C                 ADRP            X2, #aHwparamSemfact_8@PAGE ; "HWParam:SEMFactory :: CMD_GET_ENHANCED_"...
.text:000000000000A480                 ADD             X1, X1, #unk_10DEC@PAGEOFF
.text:000000000000A484                 ADD             X2, X2, #aHwparamSemfact_8@PAGEOFF ; "HWParam:SEMFactory :: CMD_GET_ENHANCED_"...
.text:000000000000A488                 MOV             W0, #6
.text:000000000000A48C                 MOV             W3, W21
.text:000000000000A490                 B               loc_A50C
.text:000000000000A494 ; ---------------------------------------------------------------------------
.text:000000000000A494 loc_A494                                ; CODE XREF: getEnhancedACDumpPart+E4↑j
.text:000000000000A494                 ADRP            X1, #unk_10DEC@PAGE
.text:000000000000A498                 ADRP            X2, #aHwparamSemfact_9@PAGE ; "HWParam:SEMFactory :: getEnhancedACDump"...
.text:000000000000A49C                 ADD             X1, X1, #unk_10DEC@PAGEOFF
.text:000000000000A4A0                 ADD             X2, X2, #aHwparamSemfact_9@PAGEOFF ; "HWParam:SEMFactory :: getEnhancedACDump"...
.text:000000000000A4A4 loc_A4A4                                ; CODE XREF: getEnhancedACDumpPart+2F4↓j
.text:000000000000A4A4                 MOV             W0, #6
.text:000000000000A4A8                 BL              .__android_log_print
.text:000000000000A4AC                 MOV             W0, #1
.text:000000000000A4B0                 B               loc_A54C
.text:000000000000A4B4 ; ---------------------------------------------------------------------------
.text:000000000000A4B4 loc_A4B4                                ; CODE XREF: getEnhancedACDumpPart+144↑j
.text:000000000000A4B4                 SUBS            W10, W8, #2
.text:000000000000A4B8                 ADD             X9, SP, #0x16C70+s
.text:000000000000A4BC                 ADD             X10, X9, W10,UXTW
.text:000000000000A4C0                 ADD             X10, X10, #8
.text:000000000000A4C4                 B.CC            loc_A4E8
.text:000000000000A4C8                 LDRB            W11, [X10]
.text:000000000000A4CC                 CMP             W11, #0x90
.text:000000000000A4D0                 B.NE            loc_A4E8
.text:000000000000A4D4                 SUB             W11, W8, #1
.text:000000000000A4D8                 ADD             X23, SP, #0x16C70+s
.text:000000000000A4DC                 ADD             X11, X23, W11,UXTW
.text:000000000000A4E0                 LDRB            W11, [X11,#8]
.text:000000000000A4E4                 CBZ             W11, loc_A578
.text:000000000000A4E8 loc_A4E8                                ; CODE XREF: getEnhancedACDumpPart+194↑j
.text:000000000000A4E8                                         ; getEnhancedACDumpPart+1A0↑j
.text:000000000000A4E8                 SUB             W8, W8, #1
.text:000000000000A4EC                 ADD             X8, X9, W8,UXTW
.text:000000000000A4F0                 LDRB            W3, [X10]
.text:000000000000A4F4                 LDRB            W4, [X8,#8]
.text:000000000000A4F8                 ADRP            X1, #unk_10DEC@PAGE
.text:000000000000A4FC                 ADRP            X2, #aHwparamSemfact_10@PAGE ; "HWParam:SEMFactory :: ESE getEnhancedAC"...
.text:000000000000A500                 ADD             X1, X1, #unk_10DEC@PAGEOFF
.text:000000000000A504                 ADD             X2, X2, #aHwparamSemfact_10@PAGEOFF ; "HWParam:SEMFactory :: ESE getEnhancedAC"...
.text:000000000000A508                 MOV             W0, #6
.text:000000000000A50C loc_A50C                                ; CODE XREF: getEnhancedACDumpPart+160↑j
.text:000000000000A50C                 BL              .__android_log_print
.text:000000000000A510                 ADRP            X1, #unk_10DEC@PAGE
.text:000000000000A514                 ADRP            X2, #aHwparamSemfact_11@PAGE ; "HWParam:SEMFactory :: CMD_GET_ENHANCED_"...
.text:000000000000A518                 ADD             X1, X1, #unk_10DEC@PAGEOFF
.text:000000000000A51C                 ADD             X2, X2, #aHwparamSemfact_11@PAGEOFF ; "HWParam:SEMFactory :: CMD_GET_ENHANCED_"...
.text:000000000000A520                 MOV             W0, #6
.text:000000000000A524                 MOV             W3, W21
.text:000000000000A528                 B               loc_A544
.text:000000000000A52C ; ---------------------------------------------------------------------------
.text:000000000000A52C loc_A52C                                ; CODE XREF: getEnhancedACDumpPart+8C↑j
.text:000000000000A52C                                         ; getEnhancedACDumpPart+A4↑j
.text:000000000000A52C                 ADRP            X1, #unk_10DEC@PAGE
.text:000000000000A530                 ADRP            X2, #aHwparamSemfact_12@PAGE ; "HWParam:SEMFactory :: UNKNOWN ESE. get "...
.text:000000000000A534                 ADD             X1, X1, #unk_10DEC@PAGEOFF
.text:000000000000A538                 ADD             X2, X2, #aHwparamSemfact_12@PAGEOFF ; "HWParam:SEMFactory :: UNKNOWN ESE. get "...
.text:000000000000A53C                 MOV             W0, #6
.text:000000000000A540                 MOV             W3, W23
.text:000000000000A544 loc_A544                                ; CODE XREF: getEnhancedACDumpPart+1F8↑j
.text:000000000000A544                 BL              .__android_log_print
.text:000000000000A548                 MOV             W0, #1
.text:000000000000A54C loc_A54C                                ; CODE XREF: getEnhancedACDumpPart+180↑j
.text:000000000000A54C                                         ; getEnhancedACDumpPart+2E0↓j
.text:000000000000A54C                 LDR             X8, [X25]
.text:000000000000A550                 SUB             X8, X24, X8
.text:000000000000A554                 CBNZ            X8, loc_A628
.text:000000000000A558                 SUB             SP, X29, #0x50 ; 'P'
.text:000000000000A55C                 LDP             X29, X30, [SP,#0x50+var_s0]
.text:000000000000A560                 LDP             X20, X19, [SP,#0x50+var_10]
.text:000000000000A564                 LDP             X22, X21, [SP,#0x50+var_20]
.text:000000000000A568                 LDP             X24, X23, [SP,#0x50+var_30]
.text:000000000000A56C                 LDP             X26, X25, [SP,#0x50+var_40]
.text:000000000000A570                 LDP             X28, X27, [SP+0x50+var_50],#0x60
.text:000000000000A574                 RET
.text:000000000000A578 ; ---------------------------------------------------------------------------
.text:000000000000A578 loc_A578                                ; CODE XREF: getEnhancedACDumpPart+1B4↑j
.text:000000000000A578                 ADRP            X21, #a02x@PAGE ; "%02X"
.text:000000000000A57C                 MOV             X26, XZR
.text:000000000000A580                 MOV             W27, WZR
.text:000000000000A584                 ADD             X21, X21, #a02x@PAGEOFF ; "%02X"
.text:000000000000A588                 ADD             X28, SP, #0x16C70+var_16C50
.text:000000000000A58C loc_A58C                                ; CODE XREF: getEnhancedACDumpPart+2AC↓j
.text:000000000000A58C                 CMP             X26, #0x3E8
.text:000000000000A590                 B.CS            loc_A614
.text:000000000000A594                 AND             W8, W27, #0xFF
.text:000000000000A598                 ADD             X8, X23, W8,UXTW
.text:000000000000A59C                 LDRB            W3, [X8,#8]
.text:000000000000A5A0                 ADD             X0, SP, #0x16C70+src ; s
.text:000000000000A5A4                 MOV             W1, #3  ; maxlen
.text:000000000000A5A8                 MOV             X2, X21 ; format
.text:000000000000A5AC                 STRB            WZR, [SP,#0x16C70+var_16C52]
.text:000000000000A5B0                 STRH            WZR, [SP,#0x16C70+src]
.text:000000000000A5B4                 BL              .snprintf
.text:000000000000A5B8                 ADD             X0, X28, X26 ; dest
.text:000000000000A5BC                 ADD             X1, SP, #0x16C70+src ; src
.text:000000000000A5C0                 MOV             W2, #2  ; n
.text:000000000000A5C4                 BL              .strncpy
.text:000000000000A5C8                 LDR             W8, [X22]
.text:000000000000A5CC                 ADD             W27, W27, #1
.text:000000000000A5D0                 ADD             X26, X26, #2
.text:000000000000A5D4                 AND             W9, W27, #0xFF
.text:000000000000A5D8                 CMP             W9, W8
.text:000000000000A5DC                 B.CC            loc_A58C
.text:000000000000A5E0                 AND             X2, X26, #0xFFFFFFFE ; n
.text:000000000000A5E4                 ADD             X1, SP, #0x16C70+var_16C50 ; src
.text:000000000000A5E8                 MOV             X0, X20 ; dest
.text:000000000000A5EC                 BL              .memcpy
.text:000000000000A5F0                 ADRP            X1, #unk_10DEC@PAGE
.text:000000000000A5F4                 ADRP            X2, #aHwparamSemfact_13@PAGE ; "HWParam:SEMFactory :: getEnahcedACDumpP"...
.text:000000000000A5F8                 ADD             X1, X1, #unk_10DEC@PAGEOFF
.text:000000000000A5FC                 ADD             X2, X2, #aHwparamSemfact_13@PAGEOFF ; "HWParam:SEMFactory :: getEnahcedACDumpP"...
.text:000000000000A600                 MOV             W0, #4
.text:000000000000A604                 STR             W26, [X19]
.text:000000000000A608                 BL              .__android_log_print
.text:000000000000A60C                 MOV             W0, WZR
.text:000000000000A610                 B               loc_A54C
.text:000000000000A614 ; ---------------------------------------------------------------------------
.text:000000000000A614 loc_A614                                ; CODE XREF: getEnhancedACDumpPart+260↑j
.text:000000000000A614                 ADRP            X1, #unk_10DEC@PAGE
.text:000000000000A618                 ADRP            X2, #aHwparamSemfact_14@PAGE ; "HWParam:SEMFactory :: Buffer Full. Dump"...
.text:000000000000A61C                 ADD             X1, X1, #unk_10DEC@PAGEOFF
.text:000000000000A620                 ADD             X2, X2, #aHwparamSemfact_14@PAGEOFF ; "HWParam:SEMFactory :: Buffer Full. Dump"...
.text:000000000000A624                 B               loc_A4A4
.text:000000000000A628 ; ---------------------------------------------------------------------------
.text:000000000000A628 loc_A628                                ; CODE XREF: getEnhancedACDumpPart+224↑j
.text:000000000000A628                 BL              .__stack_chk_fail
.text:000000000000A628 ; } // starts at A330
.text:000000000000A628 ; End of function getEnhancedACDumpPart
.text:000000000000A62C ; =============== S U B R O U T I N E =======================================
.text:000000000000A62C ; Attributes: bp-based frame
.text:000000000000A62C                 EXPORT getEnhancedACDump_GemaltoNwd
.text:000000000000A62C getEnhancedACDump_GemaltoNwd            ; CODE XREF: .getEnhancedACDump_GemaltoNwd+C↑j
.text:000000000000A62C                                         ; DATA XREF: LOAD:0000000000001900↑o ...
.text:000000000000A62C var_1A0         = -0x1A0
.text:000000000000A62C src             = -0x198
.text:000000000000A62C n               = -0x190
.text:000000000000A62C var_188         = -0x188
.text:000000000000A62C var_180         = -0x180
.text:000000000000A62C var_178         = -0x178
.text:000000000000A62C var_170         = -0x170
.text:000000000000A62C var_16F         = -0x16F
.text:000000000000A62C var_16E         = -0x16E
.text:000000000000A62C var_16D         = -0x16D
.text:000000000000A62C var_16C         = -0x16C
.text:000000000000A62C var_16A         = -0x16A
.text:000000000000A62C var_168         = -0x168
.text:000000000000A62C var_160         = -0x160
.text:000000000000A62C var_15C         = -0x15C
.text:000000000000A62C var_158         = -0x158
.text:000000000000A62C var_153         = -0x153
.text:000000000000A62C s               = -0x148
.text:000000000000A62C var_48          = -0x48
.text:000000000000A62C var_40          = -0x40
.text:000000000000A62C var_30          = -0x30
.text:000000000000A62C var_20          = -0x20
.text:000000000000A62C var_10          = -0x10
.text:000000000000A62C var_s0          =  0
.text:000000000000A62C ; __unwind {
.text:000000000000A62C                 STP             X26, X25, [SP,#-0x10+var_40]!
.text:000000000000A630                 STP             X24, X23, [SP,#0x40+var_30]
.text:000000000000A634                 STP             X22, X21, [SP,#0x40+var_20]
.text:000000000000A638                 STP             X20, X19, [SP,#0x40+var_10]
.text:000000000000A63C                 STP             X29, X30, [SP,#0x40+var_s0]
.text:000000000000A640                 ADD             X29, SP, #0x40
.text:000000000000A644                 SUB             SP, SP, #0x160
.text:000000000000A648                 ADRP            X22, #__stack_chk_guard_ptr@PAGE
.text:000000000000A64C                 LDR             X22, [X22,#__stack_chk_guard_ptr@PAGEOFF]
.text:000000000000A650                 MOV             X19, X1
.text:000000000000A654                 MOV             X20, X0
.text:000000000000A658                 ADD             X0, SP, #0x1A0+s ; s
.text:000000000000A65C                 LDR             X22, [X22]
.text:000000000000A660                 MOV             W2, #0x100 ; n
.text:000000000000A664                 MOV             W1, WZR ; c
.text:000000000000A668                 MOV             W21, #0x100
.text:000000000000A66C                 STUR            X22, [X29,#var_48]
.text:000000000000A670                 ADD             X24, SP, #0x1A0+s
.text:000000000000A674                 BL              .memset
.text:000000000000A678                 ADRP            X8, #qword_14716@PAGE
.text:000000000000A67C                 ADD             X8, X8, #qword_14716@PAGEOFF
.text:000000000000A680                 LDUR            X9, [X8,#5]
.text:000000000000A684                 LDR             X8, [X8]
.text:000000000000A688                 STUR            X9, [SP,#0x1A0+var_153]
.text:000000000000A68C                 STR             X8, [SP,#0x48]
.text:000000000000A690                 BL              .isFactoryBinary
.text:000000000000A694                 CMP             W0, #1
.text:000000000000A698                 B.NE            loc_A758
.text:000000000000A69C                 MOV             X8, SP
.text:000000000000A6A0                 ADD             X0, SP, #0x1A0+s ; s
.text:000000000000A6A4                 MOV             W2, #0x100 ; n
.text:000000000000A6A8                 MOV             W1, WZR ; c
.text:000000000000A6AC                 STP             XZR, XZR, [SP,#0x1A0+var_168]
.text:000000000000A6B0                 STP             XZR, XZR, [SP,#0x1A0+var_178]
.text:000000000000A6B4                 STP             XZR, XZR, [SP,#0x1A0+var_188]
.text:000000000000A6B8                 STP             XZR, XZR, [SP,#0x1A0+src]
.text:000000000000A6BC                 STR             XZR, [SP,#0x1A0+var_1A0]
.text:000000000000A6C0                 ADD             X23, X8, #0x10
.text:000000000000A6C4                 BL              .memset
.text:000000000000A6C8                 MOV             W9, #4
.text:000000000000A6CC                 MOV             W8, #0xA4
.text:000000000000A6D0                 STRH            W21, [SP,#0x1A0+n]
.text:000000000000A6D4                 MOV             W10, #1
.text:000000000000A6D8                 STRB            W9, [SP,#0x1A0+var_16E]
.text:000000000000A6DC                 MOV             W9, #0x80
.text:000000000000A6E0                 MOV             W11, #0xD
.text:000000000000A6E4                 STRB            W8, [SP,#0x1A0+var_16F]
.text:000000000000A6E8                 ADD             X8, SP, #0x1A0+var_158
.text:000000000000A6EC                 STRB            W10, [SP,#0x1A0+var_160]
.text:000000000000A6F0                 MOV             W10, #7
.text:000000000000A6F4                 STRB            W9, [SP,#0x1A0+var_188]
.text:000000000000A6F8                 MOV             W9, #0x12
.text:000000000000A6FC                 ADD             X0, SP, #0x1A0+var_170
.text:000000000000A700                 MOV             X1, SP
.text:000000000000A704                 STRB            WZR, [SP,#0x1A0+var_170]
.text:000000000000A708                 STR             X24, [SP,#0x1A0+src]
.text:000000000000A70C                 STRB            WZR, [SP,#0x1A0+var_16D]
.text:000000000000A710                 STR             WZR, [SP,#0x1A0+var_15C]
.text:000000000000A714                 STRB            WZR, [SP,#0x1A0+var_16A]
.text:000000000000A718                 STRH            W11, [SP,#0x1A0+var_16C]
.text:000000000000A71C                 STR             X8, [SP,#0x1A0+var_168]
.text:000000000000A720                 STRB            W10, [SP,#0x1A0+var_188+1]
.text:000000000000A724                 STRB            WZR, [SP,#0x1A0+var_188+2]
.text:000000000000A728                 STRB            W9, [SP,#0x1A0+var_188+3]
.text:000000000000A72C                 STRH            W11, [SP,#0x1A0+var_188+4]
.text:000000000000A730                 STR             X8, [SP,#0x1A0+var_180]
.text:000000000000A734                 STR             WZR, [SP,#0x1A0+var_178+4]
.text:000000000000A738                 BL              .secEseSPI_transceive
.text:000000000000A73C                 AND             W3, W0, #0xFFFF
.text:000000000000A740                 CBZ             W3, loc_A77C
.text:000000000000A744                 ADRP            X1, #unk_10DEC@PAGE
.text:000000000000A748                 ADRP            X2, #aGetenhancedacd_12@PAGE ; "getEnhancedACDump_GemaltoNwd(), failed "...
.text:000000000000A74C                 ADD             X1, X1, #unk_10DEC@PAGEOFF
.text:000000000000A750                 ADD             X2, X2, #aGetenhancedacd_12@PAGEOFF ; "getEnhancedACDump_GemaltoNwd(), failed "...
.text:000000000000A754                 B               loc_A814
.text:000000000000A758 ; ---------------------------------------------------------------------------
.text:000000000000A758 loc_A758                                ; CODE XREF: getEnhancedACDump_GemaltoNwd+6C↑j
.text:000000000000A758                 ADRP            X1, #unk_10DEC@PAGE
.text:000000000000A75C                 ADRP            X2, #aInvalidApiNotF@PAGE ; "Invalid API, not factory bianry"
.text:000000000000A760                 ADD             X1, X1, #unk_10DEC@PAGEOFF
.text:000000000000A764                 ADD             X2, X2, #aInvalidApiNotF@PAGEOFF ; "Invalid API, not factory bianry"
.text:000000000000A768                 MOV             W0, #6
.text:000000000000A76C                 BL              .__android_log_print
.text:000000000000A770                 MOV             X8, SP
.text:000000000000A774                 ADD             X23, X8, #0x10
.text:000000000000A778                 B               loc_A81C
.text:000000000000A77C ; ---------------------------------------------------------------------------
.text:000000000000A77C loc_A77C                                ; CODE XREF: getEnhancedACDump_GemaltoNwd+114↑j
.text:000000000000A77C                 MOV             W25, WZR
.text:000000000000A780                 MOV             W24, #0x100
.text:000000000000A784 loc_A784                                ; CODE XREF: getEnhancedACDump_GemaltoNwd+1D0↓j
.text:000000000000A784                 ADD             X0, SP, #0x1A0+s ; s
.text:000000000000A788                 MOV             W2, #0x100 ; n
.text:000000000000A78C                 MOV             W1, WZR ; c
.text:000000000000A790                 STRH            W24, [SP,#0x1A0+n]
.text:000000000000A794                 BL              .memset
.text:000000000000A798                 ADD             X0, SP, #0x1A0+var_188
.text:000000000000A79C                 MOV             X1, SP
.text:000000000000A7A0                 BL              .secEseSPI_transceive
.text:000000000000A7A4                 AND             W3, W0, #0xFFFF
.text:000000000000A7A8                 CBNZ            W3, loc_A804
.text:000000000000A7AC                 LDRH            W21, [SP,#0x1A0+n]
.text:000000000000A7B0                 LDR             X1, [SP,#0x1A0+src] ; src
.text:000000000000A7B4                 ADD             X0, X20, W25,UXTW ; dest
.text:000000000000A7B8                 MOV             X2, X21 ; n
.text:000000000000A7BC                 BL              .memcpy
.text:000000000000A7C0                 LDRH            W8, [SP,#0x1A0+var_1A0]
.text:000000000000A7C4                 ADD             W9, W21, W25
.text:000000000000A7C8                 ADD             W10, W9, #1
.text:000000000000A7CC                 ADD             W25, W9, #2
.text:000000000000A7D0                 STRB            W8, [X20,W9,UXTW]
.text:000000000000A7D4                 LSR             W8, W8, #8
.text:000000000000A7D8                 STRB            W8, [X20,W10,UXTW]
.text:000000000000A7DC                 LDR             W8, [X19]
.text:000000000000A7E0                 ADD             W8, W21, W8
.text:000000000000A7E4                 ADD             W8, W8, #2
.text:000000000000A7E8                 STR             W8, [X19]
.text:000000000000A7EC                 LDRB            W8, [SP,#0x1A0+var_188+3]
.text:000000000000A7F0                 SUB             W8, W8, #1
.text:000000000000A7F4                 AND             W9, W8, #0xFF
.text:000000000000A7F8                 STRB            W8, [SP,#0x1A0+var_188+3]
.text:000000000000A7FC                 CBNZ            W9, loc_A784
.text:000000000000A800                 B               loc_A81C
.text:000000000000A804 ; ---------------------------------------------------------------------------
.text:000000000000A804 loc_A804                                ; CODE XREF: getEnhancedACDump_GemaltoNwd+17C↑j
.text:000000000000A804                 ADRP            X1, #unk_10DEC@PAGE
.text:000000000000A808                 ADRP            X2, #aGetenhancedacd_13@PAGE ; "getEnhancedACDump_GemaltoNwd(), GTO fai"...
.text:000000000000A80C                 ADD             X1, X1, #unk_10DEC@PAGEOFF
.text:000000000000A810                 ADD             X2, X2, #aGetenhancedacd_13@PAGEOFF ; "getEnhancedACDump_GemaltoNwd(), GTO fai"...
.text:000000000000A814 loc_A814                                ; CODE XREF: getEnhancedACDump_GemaltoNwd+128↑j
.text:000000000000A814                 MOV             W0, #6
.text:000000000000A818                 BL              .__android_log_print
.text:000000000000A81C loc_A81C                                ; CODE XREF: getEnhancedACDump_GemaltoNwd+14C↑j
.text:000000000000A81C                                         ; getEnhancedACDump_GemaltoNwd+1D4↑j
.text:000000000000A81C                 LDRH            W8, [SP,#0x1A0+var_1A0]
.text:000000000000A820                 ADRP            X20, #unk_10DEC@PAGE
.text:000000000000A824                 ADD             X20, X20, #unk_10DEC@PAGEOFF
.text:000000000000A828                 ADRP            X2, #aGetenhancedacd_14@PAGE ; "getEnhancedACDump_GemaltoNwd(),  pRsp.s"...
.text:000000000000A82C                 AND             W3, W8, #0xFF
.text:000000000000A830                 LSR             W4, W8, #8
.text:000000000000A834                 ADD             X2, X2, #aGetenhancedacd_14@PAGEOFF ; "getEnhancedACDump_GemaltoNwd(),  pRsp.s"...
.text:000000000000A838                 MOV             W0, #4
.text:000000000000A83C                 MOV             X1, X20
.text:000000000000A840                 BL              .__android_log_print
.text:000000000000A844                 LDRH            W3, [X23]
.text:000000000000A848                 ADRP            X2, #aGetenhancedacd_15@PAGE ; "getEnhancedACDump_GemaltoNwd(),  pRsp.l"...
.text:000000000000A84C                 ADD             X2, X2, #aGetenhancedacd_15@PAGEOFF ; "getEnhancedACDump_GemaltoNwd(),  pRsp.l"...
.text:000000000000A850                 MOV             W0, #4
.text:000000000000A854                 MOV             X1, X20
.text:000000000000A858                 BL              .__android_log_print
.text:000000000000A85C                 LDR             W8, [X19]
.text:000000000000A860                 CMP             W8, #2
.text:000000000000A864                 B.CC            loc_A884
.text:000000000000A868                 LDRH            W8, [SP,#0x1A0+var_1A0]
.text:000000000000A86C                 AND             W9, W8, #0xFF
.text:000000000000A870                 CMP             W9, #0x90
.text:000000000000A874                 B.NE            loc_A884
.text:000000000000A878                 MOV             W19, WZR
.text:000000000000A87C                 CMP             W8, #0x100
.text:000000000000A880                 B.CC            loc_A8A0
.text:000000000000A884 loc_A884                                ; CODE XREF: getEnhancedACDump_GemaltoNwd+238↑j
.text:000000000000A884                                         ; getEnhancedACDump_GemaltoNwd+248↑j
.text:000000000000A884                 ADRP            X1, #unk_10DEC@PAGE
.text:000000000000A888                 ADRP            X2, #aHwparamSemfact_15@PAGE ; "HWParam:SEMFactory :: CMD_GET_ENHANCED_"...
.text:000000000000A88C                 ADD             X1, X1, #unk_10DEC@PAGEOFF
.text:000000000000A890                 ADD             X2, X2, #aHwparamSemfact_15@PAGEOFF ; "HWParam:SEMFactory :: CMD_GET_ENHANCED_"...
.text:000000000000A894                 MOV             W0, #6
.text:000000000000A898                 BL              .__android_log_print
.text:000000000000A89C                 MOV             W19, #1
.text:000000000000A8A0 loc_A8A0                                ; CODE XREF: getEnhancedACDump_GemaltoNwd+254↑j
.text:000000000000A8A0                 ADRP            X1, #unk_10DEC@PAGE
.text:000000000000A8A4                 ADRP            X2, #aGetenhancedacd_16@PAGE ; "getEnhancedACDump_GemaltoNwd() END"
.text:000000000000A8A8                 ADD             X1, X1, #unk_10DEC@PAGEOFF
.text:000000000000A8AC                 ADD             X2, X2, #aGetenhancedacd_16@PAGEOFF ; "getEnhancedACDump_GemaltoNwd() END"
.text:000000000000A8B0                 MOV             W0, #4
.text:000000000000A8B4                 BL              .__android_log_print
.text:000000000000A8B8                 LDUR            X8, [X29,#var_48]
.text:000000000000A8BC                 SUB             X8, X22, X8
.text:000000000000A8C0                 CBNZ            X8, loc_A8E4
.text:000000000000A8C4                 MOV             W0, W19
.text:000000000000A8C8                 SUB             SP, X29, #0x40 ; '@'
.text:000000000000A8CC                 LDP             X29, X30, [SP,#0x40+var_s0]
.text:000000000000A8D0                 LDP             X20, X19, [SP,#0x40+var_10]
.text:000000000000A8D4                 LDP             X22, X21, [SP,#0x40+var_20]
.text:000000000000A8D8                 LDP             X24, X23, [SP,#0x40+var_30]
.text:000000000000A8DC                 LDP             X26, X25, [SP+0x40+var_40],#0x50
.text:000000000000A8E0                 RET
.text:000000000000A8E4 ; ---------------------------------------------------------------------------
.text:000000000000A8E4 loc_A8E4                                ; CODE XREF: getEnhancedACDump_GemaltoNwd+294↑j
.text:000000000000A8E4                 BL              .__stack_chk_fail
.text:000000000000A8E4 ; } // starts at A62C
.text:000000000000A8E4 ; End of function getEnhancedACDump_GemaltoNwd
.text:000000000000A8E8 ; =============== S U B R O U T I N E =======================================
.text:000000000000A8E8 ; Attributes: bp-based frame
.text:000000000000A8E8                 EXPORT getEnhancedACDump_GemaltoSwd
.text:000000000000A8E8 getEnhancedACDump_GemaltoSwd            ; CODE XREF: .getEnhancedACDump_GemaltoSwd+C↑j
.text:000000000000A8E8                                         ; DATA XREF: LOAD:00000000000010A8↑o ...
.text:000000000000A8E8 var_16850       = -0x16850
.text:000000000000A8E8 s               = -0x16848
.text:000000000000A8E8 var_16844       = -0x16844
.text:000000000000A8E8 var_30          = -0x30
.text:000000000000A8E8 var_20          = -0x20
.text:000000000000A8E8 var_10          = -0x10
.text:000000000000A8E8 var_s0          =  0
.text:000000000000A8E8 ; __unwind {
.text:000000000000A8E8                 STP             X24, X23, [SP,#-0x10+var_30]!
.text:000000000000A8EC                 STP             X22, X21, [SP,#0x30+var_20]
.text:000000000000A8F0                 STP             X20, X19, [SP,#0x30+var_10]
.text:000000000000A8F4                 STP             X29, X30, [SP,#0x30+var_s0]
.text:000000000000A8F8                 ADD             X29, SP, #0x30
.text:000000000000A8FC                 SUB             SP, SP, #0x16,LSL#12
.text:000000000000A900                 SUB             SP, SP, #0x820
.text:000000000000A904                 ADRP            X21, #__stack_chk_guard_ptr@PAGE
.text:000000000000A908                 LDR             X21, [X21,#__stack_chk_guard_ptr@PAGEOFF]
.text:000000000000A90C                 MOV             W2, #0x10000
.text:000000000000A910                 MOV             X20, X1
.text:000000000000A914                 MOV             X19, X0
.text:000000000000A918                 LDR             X21, [X21]
.text:000000000000A91C                 MOV             X22, SP
.text:000000000000A920                 ADD             X0, SP, #0x16850+s ; s
.text:000000000000A924                 MOVK            W2, #0x680C ; n
.text:000000000000A928                 MOV             W1, WZR ; c
.text:000000000000A92C                 STR             X21, [X22,#0x16850+var_16850]
.text:000000000000A930                 BL              .memset
.text:000000000000A934                 ADRP            X1, #unk_10DEC@PAGE
.text:000000000000A938                 ADRP            X2, #aGetenhancedacd_17@PAGE ; "getEnhancedACDump_GemaltoSwd() start"
.text:000000000000A93C                 MOV             W23, #0xFFFFFFFF
.text:000000000000A940                 ADD             X1, X1, #unk_10DEC@PAGEOFF
.text:000000000000A944                 ADD             X2, X2, #aGetenhancedacd_17@PAGEOFF ; "getEnhancedACDump_GemaltoSwd() start"
.text:000000000000A948                 MOV             W0, #4
.text:000000000000A94C                 STR             W23, [SP,#0x16850+var_16844]
.text:000000000000A950                 BL              .__android_log_print
.text:000000000000A954                 MOV             X1, XZR
.text:000000000000A958                 MOV             W0, #0x30 ; '0'
.text:000000000000A95C                 ADD             X3, SP, #0x16850+s
.text:000000000000A960                 MOV             W2, WZR
.text:000000000000A964                 BL              .invokeCommand
.text:000000000000A968                 LDR             W3, [SP,#0x16850+var_16844]
.text:000000000000A96C                 CBZ             W0, loc_A994
.text:000000000000A970                 ADRP            X1, #unk_10DEC@PAGE
.text:000000000000A974                 ADRP            X2, #(aCmdHandleCcmDa+0x18)@PAGE ; "invokeCommand() failed! [%d]"
.text:000000000000A978                 ADD             X1, X1, #unk_10DEC@PAGEOFF
.text:000000000000A97C                 ADD             X2, X2, #(aCmdHandleCcmDa+0x18)@PAGEOFF ; "invokeCommand() failed! [%d]"
.text:000000000000A980                 MOV             W0, #6
.text:000000000000A984                 BL              .__android_log_print
.text:000000000000A988                 MOV             W3, #0xFFFFFFFF
.text:000000000000A98C                 STR             W23, [SP,#0x16850+var_16844]
.text:000000000000A990                 B               loc_AA08
.text:000000000000A994 ; ---------------------------------------------------------------------------
.text:000000000000A994 loc_A994                                ; CODE XREF: getEnhancedACDump_GemaltoSwd+84↑j
.text:000000000000A994                 CBNZ            W3, loc_AA08
.text:000000000000A998                 MOV             W9, #0x16808
.text:000000000000A9A0                 ADD             X8, SP, #0x16850+s
.text:000000000000A9A4                 LDR             W2, [X8,X9] ; n
.text:000000000000A9A8                 SUBS            W9, W2, #2
.text:000000000000A9AC                 B.CC            loc_A9FC
.text:000000000000A9B0                 ADD             X8, X8, W9,UXTW
.text:000000000000A9B4                 LDRB            W8, [X8,#8]
.text:000000000000A9B8                 CMP             W8, #0x90
.text:000000000000A9BC                 B.NE            loc_AA04
.text:000000000000A9C0                 MOV             W3, WZR
.text:000000000000A9C4                 CMP             W2, #0xF9F
.text:000000000000A9C8                 B.HI            loc_AA08
.text:000000000000A9CC                 SUB             W8, W2, #1
.text:000000000000A9D0                 ADD             X9, SP, #0x16850+s
.text:000000000000A9D4                 ADD             X8, X9, W8,UXTW
.text:000000000000A9D8                 LDRB            W8, [X8,#8]
.text:000000000000A9DC                 CBNZ            W8, loc_AA08
.text:000000000000A9E0                 ADD             X8, SP, #0x16850+s
.text:000000000000A9E4                 ADD             X1, X8, #8 ; src
.text:000000000000A9E8                 MOV             X0, X19 ; dest
.text:000000000000A9EC                 STR             W2, [X20]
.text:000000000000A9F0                 BL              .memcpy
.text:000000000000A9F4                 MOV             W19, WZR
.text:000000000000A9F8                 B               loc_AA24
.text:000000000000A9FC ; ---------------------------------------------------------------------------
.text:000000000000A9FC loc_A9FC                                ; CODE XREF: getEnhancedACDump_GemaltoSwd+C4↑j
.text:000000000000A9FC                 MOV             W3, WZR
.text:000000000000AA00                 B               loc_AA08
.text:000000000000AA04 ; ---------------------------------------------------------------------------
.text:000000000000AA04 loc_AA04                                ; CODE XREF: getEnhancedACDump_GemaltoSwd+D4↑j
.text:000000000000AA04                 MOV             W3, WZR
.text:000000000000AA08 loc_AA08                                ; CODE XREF: getEnhancedACDump_GemaltoSwd+A8↑j
.text:000000000000AA08                                         ; getEnhancedACDump_GemaltoSwd:loc_A994↑j ...
.text:000000000000AA08                 ADRP            X1, #unk_10DEC@PAGE
.text:000000000000AA0C                 ADRP            X2, #aHwparamSemfact_16@PAGE ; "HWParam:SEMFactory :: CMD_GET_ENHANCED_"...
.text:000000000000AA10                 ADD             X1, X1, #unk_10DEC@PAGEOFF
.text:000000000000AA14                 ADD             X2, X2, #aHwparamSemfact_16@PAGEOFF ; "HWParam:SEMFactory :: CMD_GET_ENHANCED_"...
.text:000000000000AA18                 MOV             W0, #6
.text:000000000000AA1C                 BL              .__android_log_print
.text:000000000000AA20                 MOV             W19, #1
.text:000000000000AA24 loc_AA24                                ; CODE XREF: getEnhancedACDump_GemaltoSwd+110↑j
.text:000000000000AA24                 ADRP            X1, #unk_10DEC@PAGE
.text:000000000000AA28                 ADRP            X2, #aGetenhancedacd_18@PAGE ; "getEnhancedACDump_GemaltoSwd() END"
.text:000000000000AA2C                 ADD             X1, X1, #unk_10DEC@PAGEOFF
.text:000000000000AA30                 ADD             X2, X2, #aGetenhancedacd_18@PAGEOFF ; "getEnhancedACDump_GemaltoSwd() END"
.text:000000000000AA34                 MOV             W0, #4
.text:000000000000AA38                 BL              .__android_log_print
.text:000000000000AA3C                 LDR             X8, [X22]
.text:000000000000AA40                 SUB             X8, X21, X8
.text:000000000000AA44                 CBNZ            X8, loc_AA64
.text:000000000000AA48                 MOV             W0, W19
.text:000000000000AA4C                 SUB             SP, X29, #0x30 ; '0'
.text:000000000000AA50                 LDP             X29, X30, [SP,#0x30+var_s0]
.text:000000000000AA54                 LDP             X20, X19, [SP,#0x30+var_10]
.text:000000000000AA58                 LDP             X22, X21, [SP,#0x30+var_20]
.text:000000000000AA5C                 LDP             X24, X23, [SP+0x30+var_30],#0x40
.text:000000000000AA60                 RET
.text:000000000000AA64 ; ---------------------------------------------------------------------------
.text:000000000000AA64 loc_AA64                                ; CODE XREF: getEnhancedACDump_GemaltoSwd+15C↑j
.text:000000000000AA64                 BL              .__stack_chk_fail
.text:000000000000AA64 ; } // starts at A8E8
.text:000000000000AA64 ; End of function getEnhancedACDump_GemaltoSwd
.text:000000000000AA68 ; =============== S U B R O U T I N E =======================================
.text:000000000000AA68 ; Attributes: bp-based frame
.text:000000000000AA68                 EXPORT getEnhancedACDump_Gemalto
.text:000000000000AA68 getEnhancedACDump_Gemalto               ; CODE XREF: .getEnhancedACDump_Gemalto+C↑j
.text:000000000000AA68                                         ; DATA XREF: LOAD:0000000000000E38↑o ...
.text:000000000000AA68 var_10          = -0x10
.text:000000000000AA68 var_s0          =  0
.text:000000000000AA68 ; __unwind {
.text:000000000000AA68                 STP             X20, X19, [SP,#-0x10+var_10]!
.text:000000000000AA6C                 STP             X29, X30, [SP,#0x10+var_s0]
.text:000000000000AA70                 ADD             X29, SP, #0x10
.text:000000000000AA74                 MOV             X19, X1
.text:000000000000AA78                 ADRP            X1, #unk_10DEC@PAGE
.text:000000000000AA7C                 ADRP            X2, #aGetenhancedacd_19@PAGE ; "getEnhancedACDump_Gemalto() START"
.text:000000000000AA80                 MOV             X20, X0
.text:000000000000AA84                 ADD             X1, X1, #unk_10DEC@PAGEOFF
.text:000000000000AA88                 ADD             X2, X2, #aGetenhancedacd_19@PAGEOFF ; "getEnhancedACDump_Gemalto() START"
.text:000000000000AA8C                 MOV             W0, #4
.text:000000000000AA90                 BL              .__android_log_print
.text:000000000000AA94                 BL              .isFactoryBinary
.text:000000000000AA98                 ADRP            X1, #unk_10DEC@PAGE
.text:000000000000AA9C                 ADD             X1, X1, #unk_10DEC@PAGEOFF
.text:000000000000AAA0                 CBZ             W0, loc_AAD0
.text:000000000000AAA4                 ADRP            X2, #aIssecurecommun@PAGE ; "isSecureCommunicate, Factory Binary"
.text:000000000000AAA8                 ADD             X2, X2, #aIssecurecommun@PAGEOFF ; "isSecureCommunicate, Factory Binary"
.text:000000000000AAAC                 MOV             W0, #4
.text:000000000000AAB0                 BL              .__android_log_print
.text:000000000000AAB4                 BL              .isSWDFactory
.text:000000000000AAB8                 ADRP            X1, #unk_10DEC@PAGE
.text:000000000000AABC                 ADD             X1, X1, #unk_10DEC@PAGEOFF
.text:000000000000AAC0                 CBZ             W0, loc_AAF0
.text:000000000000AAC4                 ADRP            X2, #aIssecurecommun_0@PAGE ; "isSecureCommunicate, Swd Factory"
.text:000000000000AAC8                 ADD             X2, X2, #aIssecurecommun_0@PAGEOFF ; "isSecureCommunicate, Swd Factory"
.text:000000000000AACC                 B               loc_AAD8
.text:000000000000AAD0 ; ---------------------------------------------------------------------------
.text:000000000000AAD0 loc_AAD0                                ; CODE XREF: getEnhancedACDump_Gemalto+38↑j
.text:000000000000AAD0                 ADRP            X2, #aIssecurecommun_1@PAGE ; "isSecureCommunicate, Normal Binary"
.text:000000000000AAD4                 ADD             X2, X2, #aIssecurecommun_1@PAGEOFF ; "isSecureCommunicate, Normal Binary"
.text:000000000000AAD8 loc_AAD8                                ; CODE XREF: getEnhancedACDump_Gemalto+64↑j
.text:000000000000AAD8                 MOV             W0, #4
.text:000000000000AADC                 BL              .__android_log_print
.text:000000000000AAE0                 MOV             X0, X20
.text:000000000000AAE4                 MOV             X1, X19
.text:000000000000AAE8                 BL              .getEnhancedACDump_GemaltoSwd
.text:000000000000AAEC                 B               loc_AB0C
.text:000000000000AAF0 ; ---------------------------------------------------------------------------
.text:000000000000AAF0 loc_AAF0                                ; CODE XREF: getEnhancedACDump_Gemalto+58↑j
.text:000000000000AAF0                 ADRP            X2, #aIssecurecommun_2@PAGE ; "isSecureCommunicate, Nwd Factory"
.text:000000000000AAF4                 ADD             X2, X2, #aIssecurecommun_2@PAGEOFF ; "isSecureCommunicate, Nwd Factory"
.text:000000000000AAF8                 MOV             W0, #4
.text:000000000000AAFC                 BL              .__android_log_print
.text:000000000000AB00                 MOV             X0, X20
.text:000000000000AB04                 MOV             X1, X19
.text:000000000000AB08                 BL              .getEnhancedACDump_GemaltoNwd
.text:000000000000AB0C loc_AB0C                                ; CODE XREF: getEnhancedACDump_Gemalto+84↑j
.text:000000000000AB0C                 ADRP            X1, #unk_10DEC@PAGE
.text:000000000000AB10                 ADRP            X2, #aGetenhancedacd_20@PAGE ; "getEnhancedACDump_Gemalto() END"
.text:000000000000AB14                 MOV             W19, W0
.text:000000000000AB18                 ADD             X1, X1, #unk_10DEC@PAGEOFF
.text:000000000000AB1C                 ADD             X2, X2, #aGetenhancedacd_20@PAGEOFF ; "getEnhancedACDump_Gemalto() END"
.text:000000000000AB20                 MOV             W0, #4
.text:000000000000AB24                 BL              .__android_log_print
.text:000000000000AB28                 LDP             X29, X30, [SP,#0x10+var_s0]
.text:000000000000AB2C                 MOV             W0, W19
.text:000000000000AB30                 LDP             X20, X19, [SP+0x10+var_10],#0x20
.text:000000000000AB34                 RET
.text:000000000000AB34 ; } // starts at AA68
.text:000000000000AB34 ; End of function getEnhancedACDump_Gemalto
.text:000000000000AB38 ; =============== S U B R O U T I N E =======================================
.text:000000000000AB38 ; Attributes: bp-based frame
.text:000000000000AB38                 EXPORT isSecureSPI
.text:000000000000AB38 isSecureSPI                             ; DATA XREF: LOAD:00000000000007C0↑o
.text:000000000000AB38 var_s0          =  0
.text:000000000000AB38 ; __unwind {
.text:000000000000AB38                 STP             X29, X30, [SP,#-0x10+var_s0]!
.text:000000000000AB3C                 MOV             X29, SP
.text:000000000000AB40                 BL              .isFactoryBinary
.text:000000000000AB44                 ADRP            X1, #unk_10DEC@PAGE
.text:000000000000AB48                 ADD             X1, X1, #unk_10DEC@PAGEOFF
.text:000000000000AB4C                 CBZ             W0, loc_AB7C
.text:000000000000AB50                 ADRP            X2, #aIssecurecommun@PAGE ; "isSecureCommunicate, Factory Binary"
.text:000000000000AB54                 ADD             X2, X2, #aIssecurecommun@PAGEOFF ; "isSecureCommunicate, Factory Binary"
.text:000000000000AB58                 MOV             W0, #4
.text:000000000000AB5C                 BL              .__android_log_print
.text:000000000000AB60                 BL              .isSWDFactory
.text:000000000000AB64                 ADRP            X1, #unk_10DEC@PAGE
.text:000000000000AB68                 ADD             X1, X1, #unk_10DEC@PAGEOFF
.text:000000000000AB6C                 CBZ             W0, loc_AB98
.text:000000000000AB70                 ADRP            X2, #aIssecurecommun_0@PAGE ; "isSecureCommunicate, Swd Factory"
.text:000000000000AB74                 ADD             X2, X2, #aIssecurecommun_0@PAGEOFF ; "isSecureCommunicate, Swd Factory"
.text:000000000000AB78                 B               loc_AB84
.text:000000000000AB7C ; ---------------------------------------------------------------------------
.text:000000000000AB7C loc_AB7C                                ; CODE XREF: isSecureSPI+14↑j
.text:000000000000AB7C                 ADRP            X2, #aIssecurecommun_1@PAGE ; "isSecureCommunicate, Normal Binary"
.text:000000000000AB80                 ADD             X2, X2, #aIssecurecommun_1@PAGEOFF ; "isSecureCommunicate, Normal Binary"
.text:000000000000AB84 loc_AB84                                ; CODE XREF: isSecureSPI+40↑j
.text:000000000000AB84                 MOV             W0, #4
.text:000000000000AB88                 BL              .__android_log_print
.text:000000000000AB8C                 MOV             W0, #1
.text:000000000000AB90                 LDP             X29, X30, [SP+var_s0],#0x10
.text:000000000000AB94                 RET
.text:000000000000AB98 ; ---------------------------------------------------------------------------
.text:000000000000AB98 loc_AB98                                ; CODE XREF: isSecureSPI+34↑j
.text:000000000000AB98                 ADRP            X2, #aIssecurecommun_2@PAGE ; "isSecureCommunicate, Nwd Factory"
.text:000000000000AB9C                 ADD             X2, X2, #aIssecurecommun_2@PAGEOFF ; "isSecureCommunicate, Nwd Factory"
.text:000000000000ABA0                 MOV             W0, #4
.text:000000000000ABA4                 BL              .__android_log_print
.text:000000000000ABA8                 MOV             W0, WZR
.text:000000000000ABAC                 LDP             X29, X30, [SP+var_s0],#0x10
.text:000000000000ABB0                 RET
.text:000000000000ABB0 ; } // starts at AB38
.text:000000000000ABB0 ; End of function isSecureSPI
.text:000000000000ABB4 ; =============== S U B R O U T I N E =======================================
.text:000000000000ABB4 ; Attributes: bp-based frame
.text:000000000000ABB4                 EXPORT getCPLC
.text:000000000000ABB4 getCPLC                                 ; DATA XREF: LOAD:0000000000001000↑o
.text:000000000000ABB4 var_16860       = -0x16860
.text:000000000000ABB4 var_16858       = -0x16858
.text:000000000000ABB4 var_16854       = -0x16854
.text:000000000000ABB4 var_40          = -0x40
.text:000000000000ABB4 var_30          = -0x30
.text:000000000000ABB4 var_20          = -0x20
.text:000000000000ABB4 var_10          = -0x10
.text:000000000000ABB4 var_s0          =  0
.text:000000000000ABB4 ; __unwind {
.text:000000000000ABB4                 STP             X28, X27, [SP,#-0x10+var_40]!
.text:000000000000ABB8                 STP             X24, X23, [SP,#0x40+var_30]
.text:000000000000ABBC                 STP             X22, X21, [SP,#0x40+var_20]
.text:000000000000ABC0                 STP             X20, X19, [SP,#0x40+var_10]
.text:000000000000ABC4                 STP             X29, X30, [SP,#0x40+var_s0]
.text:000000000000ABC8                 ADD             X29, SP, #0x40
.text:000000000000ABCC                 SUB             SP, SP, #0x16,LSL#12
.text:000000000000ABD0                 SUB             SP, SP, #0x820
.text:000000000000ABD4                 ADRP            X22, #__stack_chk_guard_ptr@PAGE
.text:000000000000ABD8                 LDR             X22, [X22,#__stack_chk_guard_ptr@PAGEOFF]
.text:000000000000ABDC                 MOV             X19, X1
.text:000000000000ABE0                 MOV             X20, X0
.text:000000000000ABE4                 MOV             X23, SP
.text:000000000000ABE8                 LDR             X22, [X22]
.text:000000000000ABEC                 MOV             W0, #0x18
.text:000000000000ABF0                 ADD             X3, SP, #0x16860+var_16858
.text:000000000000ABF4                 MOV             X1, XZR
.text:000000000000ABF8                 MOV             W2, WZR
.text:000000000000ABFC                 STR             X22, [X23,#0x16860+var_16860]
.text:000000000000AC00                 ADD             X24, SP, #0x16860+var_16858
.text:000000000000AC04                 BL              .invokeCommand
.text:000000000000AC08                 CBZ             W0, loc_AC34
.text:000000000000AC0C                 LDR             W3, [SP,#0x16860+var_16854]
.text:000000000000AC10                 ADRP            X1, #unk_10DEC@PAGE
.text:000000000000AC14                 ADRP            X2, #(aCmdHandleCcmDa+0x18)@PAGE ; "invokeCommand() failed! [%d]"
.text:000000000000AC18                 ADD             X1, X1, #unk_10DEC@PAGEOFF
.text:000000000000AC1C                 ADD             X2, X2, #(aCmdHandleCcmDa+0x18)@PAGEOFF ; "invokeCommand() failed! [%d]"
.text:000000000000AC20                 MOV             W0, #6
.text:000000000000AC24                 BL              .__android_log_print
.text:000000000000AC28                 MOV             W0, #0xFFFFFFFF
.text:000000000000AC2C                 STR             W0, [SP,#0x16860+var_16854]
.text:000000000000AC30                 B               loc_AC5C
.text:000000000000AC34 ; ---------------------------------------------------------------------------
.text:000000000000AC34 loc_AC34                                ; CODE XREF: getCPLC+54↑j
.text:000000000000AC34                 MOV             W8, #0x10000
.text:000000000000AC38                 STR             WZR, [SP,#0x16860+var_16854]
.text:000000000000AC3C                 MOVK            W8, #0x6808
.text:000000000000AC40                 LDR             W21, [X24,X8]
.text:000000000000AC44                 ADD             X1, X24, #8 ; src
.text:000000000000AC48                 MOV             X0, X20 ; dest
.text:000000000000AC4C                 MOV             X2, X21 ; n
.text:000000000000AC50                 BL              .memcpy
.text:000000000000AC54                 MOV             W0, WZR
.text:000000000000AC58                 STR             W21, [X19]
.text:000000000000AC5C loc_AC5C                                ; CODE XREF: getCPLC+7C↑j
.text:000000000000AC5C                 LDR             X8, [X23]
.text:000000000000AC60                 SUB             X8, X22, X8
.text:000000000000AC64                 CBNZ            X8, loc_AC84
.text:000000000000AC68                 SUB             SP, X29, #0x40 ; '@'
.text:000000000000AC6C                 LDP             X29, X30, [SP,#0x40+var_s0]
.text:000000000000AC70                 LDP             X20, X19, [SP,#0x40+var_10]
.text:000000000000AC74                 LDP             X22, X21, [SP,#0x40+var_20]
.text:000000000000AC78                 LDP             X24, X23, [SP,#0x40+var_30]
.text:000000000000AC7C                 LDP             X28, X27, [SP+0x40+var_40],#0x50
.text:000000000000AC80                 RET
.text:000000000000AC84 ; ---------------------------------------------------------------------------
.text:000000000000AC84 loc_AC84                                ; CODE XREF: getCPLC+B0↑j
.text:000000000000AC84                 BL              .__stack_chk_fail
.text:000000000000AC84 ; } // starts at ABB4
.text:000000000000AC84 ; End of function getCPLC
.text:000000000000AC88 ; =============== S U B R O U T I N E =======================================
.text:000000000000AC88 ; Attributes: bp-based frame
.text:000000000000AC88                 EXPORT getCPLCNwd
.text:000000000000AC88 getCPLCNwd                              ; CODE XREF: .getCPLCNwd+C↑j
.text:000000000000AC88                                         ; DATA XREF: LOAD:0000000000000928↑o ...
.text:000000000000AC88 var_188         = -0x188
.text:000000000000AC88 src             = -0x180
.text:000000000000AC88 n               = -0x178
.text:000000000000AC88 var_170         = -0x170
.text:000000000000AC88 var_16F         = -0x16F
.text:000000000000AC88 var_16E         = -0x16E
.text:000000000000AC88 var_16D         = -0x16D
.text:000000000000AC88 var_16C         = -0x16C
.text:000000000000AC88 var_16A         = -0x16A
.text:000000000000AC88 var_168         = -0x168
.text:000000000000AC88 var_160         = -0x160
.text:000000000000AC88 var_15C         = -0x15C
.text:000000000000AC88 var_158         = -0x158
.text:000000000000AC88 s               = -0x14A
.text:000000000000AC88 var_48          = -0x48
.text:000000000000AC88 var_40          = -0x40
.text:000000000000AC88 var_30          = -0x30
.text:000000000000AC88 var_20          = -0x20
.text:000000000000AC88 var_10          = -0x10
.text:000000000000AC88 var_s0          =  0
.text:000000000000AC88 ; __unwind {
.text:000000000000AC88                 STP             X28, X27, [SP,#-0x10+var_40]!
.text:000000000000AC8C                 STP             X24, X23, [SP,#0x40+var_30]
.text:000000000000AC90                 STP             X22, X21, [SP,#0x40+var_20]
.text:000000000000AC94                 STP             X20, X19, [SP,#0x40+var_10]
.text:000000000000AC98                 STP             X29, X30, [SP,#0x40+var_s0]
.text:000000000000AC9C                 ADD             X29, SP, #0x40
.text:000000000000ACA0                 SUB             SP, SP, #0x150
.text:000000000000ACA4                 ADRP            X22, #__stack_chk_guard_ptr@PAGE
.text:000000000000ACA8                 LDR             X22, [X22,#__stack_chk_guard_ptr@PAGEOFF]
.text:000000000000ACAC                 MOV             X8, #0x5101000000
.text:000000000000ACB4                 MOV             X20, X1
.text:000000000000ACB8                 LDR             X22, [X22]
.text:000000000000ACBC                 MOV             X19, X0
.text:000000000000ACC0                 MOVK            X8, #0xA0
.text:000000000000ACC4                 ADD             X0, SP, #0x190+s ; s
.text:000000000000ACC8                 MOV             W2, #0x102 ; n
.text:000000000000ACCC                 MOV             W1, WZR ; c
.text:000000000000ACD0                 STUR            X22, [X29,#var_48]
.text:000000000000ACD4                 STR             X8, [SP,#0x190+var_158]
.text:000000000000ACD8                 ADD             X21, SP, #0x190+s
.text:000000000000ACDC                 BL              .memset
.text:000000000000ACE0                 ADRP            X1, #unk_10DEC@PAGE
.text:000000000000ACE4                 ADRP            X2, #aGetCplcNwd@PAGE ; "GET CPLC Nwd"
.text:000000000000ACE8                 ADD             X1, X1, #unk_10DEC@PAGEOFF
.text:000000000000ACEC                 ADD             X2, X2, #aGetCplcNwd@PAGEOFF ; "GET CPLC Nwd"
.text:000000000000ACF0                 MOV             W0, #4
.text:000000000000ACF4                 MOV             W23, #4
.text:000000000000ACF8                 BL              .__android_log_print
.text:000000000000ACFC                 BL              .isFactoryBinary
.text:000000000000AD00                 CMP             W0, #1
.text:000000000000AD04                 B.NE            loc_AD7C
.text:000000000000AD08                 MOV             W8, #0xA4
.text:000000000000AD0C                 STP             XZR, XZR, [SP,#0x190+var_168]
.text:000000000000AD10                 STP             XZR, XZR, [SP,#0x190+n]
.text:000000000000AD14                 STP             XZR, XZR, [SP,#0x190+var_188]
.text:000000000000AD18                 STRB            W8, [SP,#0x190+var_16F]
.text:000000000000AD1C                 MOV             W8, #8
.text:000000000000AD20                 STRB            W23, [SP,#0x190+var_16E]
.text:000000000000AD24                 MOV             W23, #1
.text:000000000000AD28                 STRH            W8, [SP,#0x190+var_16C]
.text:000000000000AD2C                 ADD             X8, SP, #0x190+var_158
.text:000000000000AD30                 MOV             W24, #0x100
.text:000000000000AD34                 ADD             X0, SP, #0x190+var_170
.text:000000000000AD38                 ADD             X1, SP, #0x190+var_188
.text:000000000000AD3C                 STRB            WZR, [SP,#0x190+var_170]
.text:000000000000AD40                 STRB            WZR, [SP,#0x190+var_16D]
.text:000000000000AD44                 STR             WZR, [SP,#0x190+var_15C]
.text:000000000000AD48                 STRB            WZR, [SP,#0x190+var_16A]
.text:000000000000AD4C                 STRB            W23, [SP,#0x190+var_160]
.text:000000000000AD50                 STR             X8, [SP,#0x190+var_168]
.text:000000000000AD54                 STRH            W24, [SP,#0x190+n]
.text:000000000000AD58                 STR             X21, [SP,#0x190+src]
.text:000000000000AD5C                 BL              .secEseSPI_transceive
.text:000000000000AD60                 AND             W21, W0, #0xFFFF
.text:000000000000AD64                 CBZ             W21, loc_AD9C
.text:000000000000AD68                 ADRP            X1, #unk_10DEC@PAGE
.text:000000000000AD6C                 ADRP            X2, #aFailedSelectIs@PAGE ; " FAILED SELECT ISD : 0x%x\n"
.text:000000000000AD70                 ADD             X1, X1, #unk_10DEC@PAGEOFF
.text:000000000000AD74                 ADD             X2, X2, #aFailedSelectIs@PAGEOFF ; " FAILED SELECT ISD : 0x%x\n"
.text:000000000000AD78                 B               loc_AE28
.text:000000000000AD7C ; ---------------------------------------------------------------------------
.text:000000000000AD7C loc_AD7C                                ; CODE XREF: getCPLCNwd+7C↑j
.text:000000000000AD7C                 ADRP            X1, #unk_10DEC@PAGE
.text:000000000000AD80                 ADRP            X2, #aInvalidApiNotF@PAGE ; "Invalid API, not factory bianry"
.text:000000000000AD84                 ADD             X1, X1, #unk_10DEC@PAGEOFF
.text:000000000000AD88                 ADD             X2, X2, #aInvalidApiNotF@PAGEOFF ; "Invalid API, not factory bianry"
.text:000000000000AD8C                 MOV             W0, #6
.text:000000000000AD90                 BL              .__android_log_print
.text:000000000000AD94                 MOV             W21, #0xFF
.text:000000000000AD98                 B               loc_AE34
.text:000000000000AD9C ; ---------------------------------------------------------------------------
.text:000000000000AD9C loc_AD9C                                ; CODE XREF: getCPLCNwd+DC↑j
.text:000000000000AD9C                 ADD             X0, SP, #0x190+s ; s
.text:000000000000ADA0                 MOV             W2, #0x102 ; n
.text:000000000000ADA4                 MOV             W1, WZR ; c
.text:000000000000ADA8                 STP             XZR, XZR, [SP,#0x190+var_168]
.text:000000000000ADAC                 STP             XZR, XZR, [SP,#0x190+n]
.text:000000000000ADB0                 STP             XZR, XZR, [SP,#0x190+var_188]
.text:000000000000ADB4                 ADD             X21, SP, #0x190+s
.text:000000000000ADB8                 BL              .memset
.text:000000000000ADBC                 MOV             W8, #0x80
.text:000000000000ADC0                 MOV             W9, #0xCA
.text:000000000000ADC4                 MOV             W10, #0x9F
.text:000000000000ADC8                 MOV             W11, #0x7F
.text:000000000000ADCC                 ADD             X0, SP, #0x190+var_170
.text:000000000000ADD0                 ADD             X1, SP, #0x190+var_188
.text:000000000000ADD4                 STRH            W24, [SP,#0x190+n]
.text:000000000000ADD8                 STRB            W8, [SP,#0x190+var_170]
.text:000000000000ADDC                 STRB            W9, [SP,#0x190+var_16F]
.text:000000000000ADE0                 STRB            W10, [SP,#0x190+var_16E]
.text:000000000000ADE4                 STRB            W11, [SP,#0x190+var_16D]
.text:000000000000ADE8                 STR             WZR, [SP,#0x190+var_15C]
.text:000000000000ADEC                 STRB            WZR, [SP,#0x190+var_16A]
.text:000000000000ADF0                 STRB            W23, [SP,#0x190+var_160]
.text:000000000000ADF4                 STR             X21, [SP,#0x190+src]
.text:000000000000ADF8                 BL              .secEseSPI_transceive
.text:000000000000ADFC                 LDRH            W2, [SP,#0x190+n] ; n
.text:000000000000AE00                 AND             W21, W0, #0xFFFF
.text:000000000000AE04                 MOV             X0, X19 ; dest
.text:000000000000AE08                 STR             W2, [X20]
.text:000000000000AE0C                 LDR             X1, [SP,#0x190+src] ; src
.text:000000000000AE10                 BL              .memcpy
.text:000000000000AE14                 CBZ             W21, loc_AE34
.text:000000000000AE18                 ADRP            X1, #unk_10DEC@PAGE
.text:000000000000AE1C                 ADRP            X2, #aFailedGetcplc0@PAGE ; " FAILED GETCPLC : 0x%x\n"
.text:000000000000AE20                 ADD             X1, X1, #unk_10DEC@PAGEOFF
.text:000000000000AE24                 ADD             X2, X2, #aFailedGetcplc0@PAGEOFF ; " FAILED GETCPLC : 0x%x\n"
.text:000000000000AE28 loc_AE28                                ; CODE XREF: getCPLCNwd+F0↑j
.text:000000000000AE28                 MOV             W0, #6
.text:000000000000AE2C                 MOV             W3, W21
.text:000000000000AE30                 BL              .__android_log_print
.text:000000000000AE34 loc_AE34                                ; CODE XREF: getCPLCNwd+110↑j
.text:000000000000AE34                                         ; getCPLCNwd+18C↑j
.text:000000000000AE34                 LDUR            X8, [X29,#var_48]
.text:000000000000AE38                 SUB             X8, X22, X8
.text:000000000000AE3C                 CBNZ            X8, loc_AE60
.text:000000000000AE40                 MOV             W0, W21
.text:000000000000AE44                 SUB             SP, X29, #0x40 ; '@'
.text:000000000000AE48                 LDP             X29, X30, [SP,#0x40+var_s0]
.text:000000000000AE4C                 LDP             X20, X19, [SP,#0x40+var_10]
.text:000000000000AE50                 LDP             X22, X21, [SP,#0x40+var_20]
.text:000000000000AE54                 LDP             X24, X23, [SP,#0x40+var_30]
.text:000000000000AE58                 LDP             X28, X27, [SP+0x40+var_40],#0x50
.text:000000000000AE5C                 RET
.text:000000000000AE60 ; ---------------------------------------------------------------------------
.text:000000000000AE60 loc_AE60                                ; CODE XREF: getCPLCNwd+1B4↑j
.text:000000000000AE60                 BL              .__stack_chk_fail
.text:000000000000AE60 ; } // starts at AC88
.text:000000000000AE60 ; End of function getCPLCNwd
.text:000000000000AE64 ; =============== S U B R O U T I N E =======================================
.text:000000000000AE64 ; Attributes: bp-based frame
.text:000000000000AE64                 EXPORT readCPLCFile
.text:000000000000AE64 readCPLCFile                            ; DATA XREF: LOAD:0000000000000DA8↑o
.text:000000000000AE64 var_20          = -0x20
.text:000000000000AE64 var_10          = -0x10
.text:000000000000AE64 var_s0          =  0
.text:000000000000AE64 ; __unwind {
.text:000000000000AE64                 STP             X22, X21, [SP,#-0x10+var_20]!
.text:000000000000AE68                 STP             X20, X19, [SP,#0x20+var_10]
.text:000000000000AE6C                 STP             X29, X30, [SP,#0x20+var_s0]
.text:000000000000AE70                 ADD             X29, SP, #0x20
.text:000000000000AE74                 MOV             X20, X0
.text:000000000000AE78                 ADRP            X0, #aEfsSecEfsSemDa@PAGE ; "/efs/sec_efs/sem_data"
.text:000000000000AE7C                 MOV             X19, X1
.text:000000000000AE80                 MOV             W1, WZR ; oflag
.text:000000000000AE84                 ADD             X0, X0, #aEfsSecEfsSemDa@PAGEOFF ; "/efs/sec_efs/sem_data"
.text:000000000000AE88                 BL              .open
.text:000000000000AE8C                 MOV             W21, W0
.text:000000000000AE90                 CMN             W21, #1
.text:000000000000AE94                 B.EQ            loc_AEB8
.text:000000000000AE98                 MOV             W2, #0x2A ; '*' ; nbytes
.text:000000000000AE9C                 MOV             W0, W21 ; fd
.text:000000000000AEA0                 MOV             X1, X20 ; buf
.text:000000000000AEA4                 BL              .read
.text:000000000000AEA8                 MOV             X20, X0
.text:000000000000AEAC                 MOV             W0, W21 ; fd
.text:000000000000AEB0                 BL              .close
.text:000000000000AEB4                 B               loc_AEDC
.text:000000000000AEB8 ; ---------------------------------------------------------------------------
.text:000000000000AEB8 loc_AEB8                                ; CODE XREF: readCPLCFile+30↑j
.text:000000000000AEB8                 ADRP            X1, #unk_10DEC@PAGE
.text:000000000000AEBC                 ADRP            X2, #aFailedToOpenFi@PAGE ; "failed to open file : %s"
.text:000000000000AEC0                 ADRP            X3, #aEfsSecEfsSemDa@PAGE ; "/efs/sec_efs/sem_data"
.text:000000000000AEC4                 ADD             X1, X1, #unk_10DEC@PAGEOFF
.text:000000000000AEC8                 ADD             X2, X2, #aFailedToOpenFi@PAGEOFF ; "failed to open file : %s"
.text:000000000000AECC                 ADD             X3, X3, #aEfsSecEfsSemDa@PAGEOFF ; "/efs/sec_efs/sem_data"
.text:000000000000AED0                 MOV             W0, #6
.text:000000000000AED4                 BL              .__android_log_print
.text:000000000000AED8                 MOV             W20, #0xFFFFFFFF
.text:000000000000AEDC loc_AEDC                                ; CODE XREF: readCPLCFile+50↑j
.text:000000000000AEDC                 STR             W20, [X19]
.text:000000000000AEE0                 LDP             X29, X30, [SP,#0x20+var_s0]
.text:000000000000AEE4                 LDP             X20, X19, [SP,#0x20+var_10]
.text:000000000000AEE8                 LDP             X22, X21, [SP+0x20+var_20],#0x30
.text:000000000000AEEC                 RET
.text:000000000000AEEC ; } // starts at AE64
.text:000000000000AEEC ; End of function readCPLCFile
.text:000000000000AEF0 ; =============== S U B R O U T I N E =======================================
.text:000000000000AEF0 ; Attributes: bp-based frame
.text:000000000000AEF0                 EXPORT getHWParamData
.text:000000000000AEF0 getHWParamData                          ; CODE XREF: .getHWParamData+C↑j
.text:000000000000AEF0                                         ; DATA XREF: LOAD:0000000000001210↑o ...
.text:000000000000AEF0 n               = -0x37A
.text:000000000000AEF0 var_318         = -0x318
.text:000000000000AEF0 buf             = -0x2B4
.text:000000000000AEF0 s               = -0x250
.text:000000000000AEF0 var_248         = -0x248
.text:000000000000AEF0 var_246         = -0x246
.text:000000000000AEF0 var_50          = -0x50
.text:000000000000AEF0 var_40          = -0x40
.text:000000000000AEF0 var_30          = -0x30
.text:000000000000AEF0 var_20          = -0x20
.text:000000000000AEF0 var_10          = -0x10
.text:000000000000AEF0 var_s0          =  0
.text:000000000000AEF0 ; __unwind {
.text:000000000000AEF0                 STP             X28, X27, [SP,#-0x10+var_50]!
.text:000000000000AEF4                 STP             X26, X25, [SP,#0x50+var_40]
.text:000000000000AEF8                 STP             X24, X23, [SP,#0x50+var_30]
.text:000000000000AEFC                 STP             X22, X21, [SP,#0x50+var_20]
.text:000000000000AF00                 STP             X20, X19, [SP,#0x50+var_10]
.text:000000000000AF04                 STP             X29, X30, [SP,#0x50+var_s0]
.text:000000000000AF08                 ADD             X29, SP, #0x50
.text:000000000000AF0C                 SUB             SP, SP, #0x340
.text:000000000000AF10                 ADRP            X23, #__stack_chk_guard_ptr@PAGE
.text:000000000000AF14                 LDR             X23, [X23,#__stack_chk_guard_ptr@PAGEOFF]
.text:000000000000AF18                 MOV             X19, X1
.text:000000000000AF1C                 MOV             X20, X0
.text:000000000000AF20                 ADD             X24, SP, #0x390+s
.text:000000000000AF24                 LDR             X23, [X23]
.text:000000000000AF28                 ADD             X0, SP, #0x390+s ; s
.text:000000000000AF2C                 MOV             W2, #0x1F4 ; n
.text:000000000000AF30                 MOV             W1, WZR ; c
.text:000000000000AF34                 STR             X23, [X24,#0x1F8]
.text:000000000000AF38                 STRB            WZR, [SP,#0x390+n+1]
.text:000000000000AF3C                 STRB            WZR, [SP,#0x390+n]
.text:000000000000AF40                 BL              .memset
.text:000000000000AF44                 ADD             X0, SP, #0x390+buf ; s
.text:000000000000AF48                 MOV             W2, #0x64 ; 'd' ; n
.text:000000000000AF4C                 MOV             W1, WZR ; c
.text:000000000000AF50                 BL              .memset
.text:000000000000AF54                 ADD             X0, SP, #0x390+var_318 ; s
.text:000000000000AF58                 MOV             W2, #0x64 ; 'd' ; n
.text:000000000000AF5C                 MOV             W1, WZR ; c
.text:000000000000AF60                 BL              .memset
.text:000000000000AF64                 ADD             X0, SP, #0x390+n+6 ; s
.text:000000000000AF68                 MOV             W2, #0x5C ; '\' ; n
.text:000000000000AF6C                 MOV             W1, WZR ; c
.text:000000000000AF70                 STRB            WZR, [SP,#0x390+n+4]
.text:000000000000AF74                 STRH            WZR, [SP,#0x390+n+2]
.text:000000000000AF78                 BL              .memset
.text:000000000000AF7C                 MOV             W0, #1
.text:000000000000AF80                 BL              .isExistDeviceRootKey
.text:000000000000AF84                 CMP             W0, #1
.text:000000000000AF88                 B.EQ            loc_AFBC
.text:000000000000AF8C                 CBNZ            W0, loc_AFA4
.text:000000000000AF90                 ADRP            X1, #unk_10DEC@PAGE
.text:000000000000AF94                 ADRP            X2, #aDrkIsNotExist@PAGE ; "DRK is not exist."
.text:000000000000AF98                 ADD             X1, X1, #unk_10DEC@PAGEOFF
.text:000000000000AF9C                 ADD             X2, X2, #aDrkIsNotExist@PAGEOFF ; "DRK is not exist."
.text:000000000000AFA0                 B               loc_AFB4
.text:000000000000AFA4 ; ---------------------------------------------------------------------------
.text:000000000000AFA4 loc_AFA4                                ; CODE XREF: getHWParamData+9C↑j
.text:000000000000AFA4                 ADRP            X1, #unk_10DEC@PAGE
.text:000000000000AFA8                 ADRP            X2, #aFailedToCheckD@PAGE ; "Failed to check DRK."
.text:000000000000AFAC                 ADD             X1, X1, #unk_10DEC@PAGEOFF
.text:000000000000AFB0                 ADD             X2, X2, #aFailedToCheckD@PAGEOFF ; "Failed to check DRK."
.text:000000000000AFB4 loc_AFB4                                ; CODE XREF: getHWParamData+B0↑j
.text:000000000000AFB4                 MOV             W0, #6
.text:000000000000AFB8                 BL              .__android_log_print
.text:000000000000AFBC loc_AFBC                                ; CODE XREF: getHWParamData+98↑j
.text:000000000000AFBC                 BL              .isRestricted
.text:000000000000AFC0                 CMP             W0, #1
.text:000000000000AFC4                 B.EQ            loc_AFF4
.text:000000000000AFC8                 CMP             W0, #2
.text:000000000000AFCC                 B.NE            loc_AFFC
.text:000000000000AFD0                 ADRP            X8, #aNotTested@PAGE ; "NOT_TESTED"
.text:000000000000AFD4                 ADD             X8, X8, #aNotTested@PAGEOFF ; "NOT_TESTED"
.text:000000000000AFD8                 LDR             X8, [X8] ; "NOT_TESTED"
.text:000000000000AFDC                 MOV             W9, #0x4445
.text:000000000000AFE0                 MOV             W10, #0xA
.text:000000000000AFE4                 STRH            W9, [X20,#8]
.text:000000000000AFE8                 STR             X8, [X20]
.text:000000000000AFEC                 STR             W10, [X19]
.text:000000000000AFF0                 B               loc_B218
.text:000000000000AFF4 ; ---------------------------------------------------------------------------
.text:000000000000AFF4 loc_AFF4                                ; CODE XREF: getHWParamData+D4↑j
.text:000000000000AFF4                 STR             WZR, [X19]
.text:000000000000AFF8                 B               loc_B218
.text:000000000000AFFC ; ---------------------------------------------------------------------------
.text:000000000000AFFC loc_AFFC                                ; CODE XREF: getHWParamData+DC↑j
.text:000000000000AFFC                 ADRP            X9, #aRestricted@PAGE ; "Restricted_"
.text:000000000000B000                 ADD             X9, X9, #aRestricted@PAGEOFF ; "Restricted_"
.text:000000000000B004                 LDR             X9, [X9] ; "Restricted_"
.text:000000000000B008                 MOV             W8, #0x5F ; '_'
.text:000000000000B00C                 ADRP            X0, #aEfsSecEfsSemDa@PAGE ; "/efs/sec_efs/sem_data"
.text:000000000000B010                 STRB            W8, [SP,#0x390+var_246]
.text:000000000000B014                 MOV             W8, #0x6465
.text:000000000000B018                 MOV             W1, WZR ; oflag
.text:000000000000B01C                 ADD             X0, X0, #aEfsSecEfsSemDa@PAGEOFF ; "/efs/sec_efs/sem_data"
.text:000000000000B020                 STRH            W8, [SP,#0x390+var_248]
.text:000000000000B024                 STR             X9, [X24]
.text:000000000000B028                 BL              .open
.text:000000000000B02C                 MOV             W22, W0
.text:000000000000B030                 CMN             W22, #1
.text:000000000000B034                 B.EQ            loc_B0B0
.text:000000000000B038                 ADD             X1, SP, #0x390+buf ; buf
.text:000000000000B03C                 MOV             W2, #0x2A ; '*' ; nbytes
.text:000000000000B040                 MOV             W0, W22 ; fd
.text:000000000000B044                 BL              .read
.text:000000000000B048                 MOV             X21, X0
.text:000000000000B04C                 MOV             W0, W22 ; fd
.text:000000000000B050                 BL              .close
.text:000000000000B054                 SUB             W9, W21, #1
.text:000000000000B058                 MOV             W8, #0xB
.text:000000000000B05C                 CMP             W9, #0x30 ; '0'
.text:000000000000B060                 B.HI            loc_B0D4
.text:000000000000B064                 CBZ             W21, loc_B0D4
.text:000000000000B068                 ADRP            X22, #a02x@PAGE ; "%02X"
.text:000000000000B06C                 LSL             W25, W21, #1
.text:000000000000B070                 ADD             X26, SP, #0x390+buf
.text:000000000000B074                 ADD             X22, X22, #a02x@PAGEOFF ; "%02X"
.text:000000000000B078 loc_B078                                ; CODE XREF: getHWParamData+1B4↓j
.text:000000000000B078                 STRB            WZR, [SP,#0x390+n+4]
.text:000000000000B07C                 STRH            WZR, [SP,#0x390+n+2]
.text:000000000000B080                 LDRB            W3, [X26],#1
.text:000000000000B084                 ADD             X0, SP, #0x390+n+2 ; s
.text:000000000000B088                 MOV             W1, #3  ; maxlen
.text:000000000000B08C                 MOV             X2, X22 ; format
.text:000000000000B090                 BL              .snprintf
.text:000000000000B094                 ADD             X0, SP, #0x390+s ; dest
.text:000000000000B098                 ADD             X1, SP, #0x390+n+2 ; src
.text:000000000000B09C                 BL              .strcat
.text:000000000000B0A0                 SUB             W21, W21, #1
.text:000000000000B0A4                 CBNZ            W21, loc_B078
.text:000000000000B0A8                 ADD             W8, W25, #0xB
.text:000000000000B0AC                 B               loc_B0D4
.text:000000000000B0B0 ; ---------------------------------------------------------------------------
.text:000000000000B0B0 loc_B0B0                                ; CODE XREF: getHWParamData+144↑j
.text:000000000000B0B0                 ADRP            X1, #unk_10DEC@PAGE
.text:000000000000B0B4                 ADRP            X2, #aFailedToOpenFi@PAGE ; "failed to open file : %s"
.text:000000000000B0B8                 ADRP            X3, #aEfsSecEfsSemDa@PAGE ; "/efs/sec_efs/sem_data"
.text:000000000000B0BC                 ADD             X1, X1, #unk_10DEC@PAGEOFF
.text:000000000000B0C0                 ADD             X2, X2, #aFailedToOpenFi@PAGEOFF ; "failed to open file : %s"
.text:000000000000B0C4                 ADD             X3, X3, #aEfsSecEfsSemDa@PAGEOFF ; "/efs/sec_efs/sem_data"
.text:000000000000B0C8                 MOV             W0, #6
.text:000000000000B0CC                 BL              .__android_log_print
.text:000000000000B0D0                 MOV             W8, #0xB
.text:000000000000B0D4 loc_B0D4                                ; CODE XREF: getHWParamData+170↑j
.text:000000000000B0D4                                         ; getHWParamData+174↑j ...
.text:000000000000B0D4                 ADD             X22, SP, #0x390+s
.text:000000000000B0D8                 MOV             W25, #0x5F ; '_'
.text:000000000000B0DC                 ADD             X0, SP, #0x390+var_318
.text:000000000000B0E0                 ADD             X1, SP, #0x390+n+1
.text:000000000000B0E4                 STRB            W25, [X22,W8,UXTW]
.text:000000000000B0E8                 ADD             W21, W8, #1
.text:000000000000B0EC                 BL              .getESESTPropStr
.text:000000000000B0F0                 LDRB            W8, [SP,#0x390+n+1]
.text:000000000000B0F4                 CMP             W8, #0xA
.text:000000000000B0F8                 B.NE            loc_B11C
.text:000000000000B0FC                 ADD             X0, X22, W21,UXTW ; dest
.text:000000000000B100                 ADD             X1, SP, #0x390+var_318 ; src
.text:000000000000B104                 MOV             W2, #0xA ; n
.text:000000000000B108                 BL              .strncpy
.text:000000000000B10C                 LDRB            W8, [SP,#0x390+n+1]
.text:000000000000B110                 ADD             W8, W8, W21
.text:000000000000B114                 ADD             W21, W8, #1
.text:000000000000B118                 STRB            W25, [X22,W8,UXTW]
.text:000000000000B11C loc_B11C                                ; CODE XREF: getHWParamData+208↑j
.text:000000000000B11C                 ADRP            X0, #aEfsSecEfsSspDa@PAGE ; "/efs/sec_efs/ssp_data"
.text:000000000000B120                 ADD             X0, X0, #aEfsSecEfsSspDa@PAGEOFF ; "/efs/sec_efs/ssp_data"
.text:000000000000B124                 BL              .semGetFileSize
.text:000000000000B128                 ADD             X8, X22, W21,UXTW
.text:000000000000B12C                 MOV             W9, #0x70 ; 'p'
.text:000000000000B130                 MOV             W10, #0x746F
.text:000000000000B134                 AND             W3, W0, #0xFF
.text:000000000000B138                 ADD             W22, W21, #3
.text:000000000000B13C                 STRB            W9, [X8,#2]
.text:000000000000B140                 STRH            W10, [X8]
.text:000000000000B144                 SUB             W8, W3, #1
.text:000000000000B148                 CMP             W8, #0xC7
.text:000000000000B14C                 B.HI            loc_B188
.text:000000000000B150                 ADRP            X2, #a02x@PAGE ; "%02X"
.text:000000000000B154                 ADD             X2, X2, #a02x@PAGEOFF ; "%02X"
.text:000000000000B158                 ADD             X0, SP, #0x390+n+2 ; s
.text:000000000000B15C                 MOV             W1, #3  ; maxlen
.text:000000000000B160                 STRB            WZR, [SP,#0x390+n+4]
.text:000000000000B164                 STRH            WZR, [SP,#0x390+n+2]
.text:000000000000B168                 BL              .snprintf
.text:000000000000B16C                 ADD             X8, SP, #0x390+s
.text:000000000000B170                 ADD             X0, X8, W22,UXTW ; dest
.text:000000000000B174                 ADD             X1, SP, #0x390+n+2 ; src
.text:000000000000B178                 MOV             W2, #2  ; n
.text:000000000000B17C                 BL              .strncpy
.text:000000000000B180                 ADD             W8, W21, #5
.text:000000000000B184                 B               loc_B1C0
.text:000000000000B188 ; ---------------------------------------------------------------------------
.text:000000000000B188 loc_B188                                ; CODE XREF: getHWParamData+25C↑j
.text:000000000000B188                 ADD             X8, SP, #0x390+s
.text:000000000000B18C                 ADD             X8, X8, W22,UXTW
.text:000000000000B190                 CMP             W3, #0xC9
.text:000000000000B194                 B.CC            loc_B1B4
.text:000000000000B198                 MOV             W10, #0x626F0000
.text:000000000000B19C                 MOV             W9, #0x6769
.text:000000000000B1A0                 MOVK            W10, #0x6F74
.text:000000000000B1A4                 STRH            W9, [X8,#4]
.text:000000000000B1A8                 STR             W10, [X8]
.text:000000000000B1AC                 ADD             W8, W21, #9
.text:000000000000B1B0                 B               loc_B1C0
.text:000000000000B1B4 ; ---------------------------------------------------------------------------
.text:000000000000B1B4 loc_B1B4                                ; CODE XREF: getHWParamData+2A4↑j
.text:000000000000B1B4                 MOV             W9, #0x30 ; '0'
.text:000000000000B1B8                 STRB            W9, [X8]
.text:000000000000B1BC                 ADD             W8, W21, #4
.text:000000000000B1C0 loc_B1C0                                ; CODE XREF: getHWParamData+294↑j
.text:000000000000B1C0                                         ; getHWParamData+2C0↑j
.text:000000000000B1C0                 ADD             X22, SP, #0x390+s
.text:000000000000B1C4                 MOV             W9, #0x5F ; '_'
.text:000000000000B1C8                 ADD             X0, SP, #0x390+n+6
.text:000000000000B1CC                 ADD             X1, SP, #0x390+n
.text:000000000000B1D0                 STRB            W9, [X22,W8,UXTW]
.text:000000000000B1D4                 ADD             W21, W8, #1
.text:000000000000B1D8                 BL              .getCosNameStr
.text:000000000000B1DC                 LDRB            W2, [SP,#0x390+n] ; n
.text:000000000000B1E0                 SUB             W8, W2, #1
.text:000000000000B1E4                 AND             W8, W8, #0xFF
.text:000000000000B1E8                 CMP             W8, #0x5A ; 'Z'
.text:000000000000B1EC                 B.HI            loc_B204
.text:000000000000B1F0                 ADD             X0, X22, W21,UXTW ; dest
.text:000000000000B1F4                 ADD             X1, SP, #0x390+n+6 ; src
.text:000000000000B1F8                 BL              .strncpy
.text:000000000000B1FC                 LDRB            W8, [SP,#0x390+n]
.text:000000000000B200                 ADD             W21, W8, W21
.text:000000000000B204 loc_B204                                ; CODE XREF: getHWParamData+2FC↑j
.text:000000000000B204                 MOV             W2, W21 ; n
.text:000000000000B208                 ADD             X1, SP, #0x390+s ; src
.text:000000000000B20C                 MOV             X0, X20 ; dest
.text:000000000000B210                 BL              .strncpy
.text:000000000000B214                 STR             W21, [X19]
.text:000000000000B218 loc_B218                                ; CODE XREF: getHWParamData+100↑j
.text:000000000000B218                                         ; getHWParamData+108↑j
.text:000000000000B218                 LDR             X8, [X24,#0x1F8]
.text:000000000000B21C                 SUB             X8, X23, X8
.text:000000000000B220                 CBNZ            X8, loc_B248
.text:000000000000B224                 MOV             W0, #1
.text:000000000000B228                 SUB             SP, X29, #0x50 ; 'P'
.text:000000000000B22C                 LDP             X29, X30, [SP,#0x50+var_s0]
.text:000000000000B230                 LDP             X20, X19, [SP,#0x50+var_10]
.text:000000000000B234                 LDP             X22, X21, [SP,#0x50+var_20]
.text:000000000000B238                 LDP             X24, X23, [SP,#0x50+var_30]
.text:000000000000B23C                 LDP             X26, X25, [SP,#0x50+var_40]
.text:000000000000B240                 LDP             X28, X27, [SP+0x50+var_50],#0x60
.text:000000000000B244                 RET
.text:000000000000B248 ; ---------------------------------------------------------------------------
.text:000000000000B248 loc_B248                                ; CODE XREF: getHWParamData+330↑j
.text:000000000000B248                 BL              .__stack_chk_fail
.text:000000000000B248 ; } // starts at AEF0
.text:000000000000B248 ; End of function getHWParamData
.text:000000000000B24C ; =============== S U B R O U T I N E =======================================
.text:000000000000B24C ; Attributes: bp-based frame
.text:000000000000B24C                 EXPORT getHWParamDataNoCPLC
.text:000000000000B24C getHWParamDataNoCPLC                    ; CODE XREF: .getHWParamDataNoCPLC+C↑j
.text:000000000000B24C                                         ; DATA XREF: LOAD:0000000000000D30↑o ...
.text:000000000000B24C n               = -0x306
.text:000000000000B24C src             = -0x2A4
.text:000000000000B24C s               = -0x240
.text:000000000000B24C var_238         = -0x238
.text:000000000000B24C var_236         = -0x236
.text:000000000000B24C var_235         = -0x235
.text:000000000000B24C var_40          = -0x40
.text:000000000000B24C var_30          = -0x30
.text:000000000000B24C var_20          = -0x20
.text:000000000000B24C var_10          = -0x10
.text:000000000000B24C var_s0          =  0
.text:000000000000B24C ; __unwind {
.text:000000000000B24C                 STP             X26, X25, [SP,#-0x10+var_40]!
.text:000000000000B250                 STP             X24, X23, [SP,#0x40+var_30]
.text:000000000000B254                 STP             X22, X21, [SP,#0x40+var_20]
.text:000000000000B258                 STP             X20, X19, [SP,#0x40+var_10]
.text:000000000000B25C                 STP             X29, X30, [SP,#0x40+var_s0]
.text:000000000000B260                 ADD             X29, SP, #0x40
.text:000000000000B264                 SUB             SP, SP, #0x2D0
.text:000000000000B268                 ADRP            X21, #__stack_chk_guard_ptr@PAGE
.text:000000000000B26C                 LDR             X21, [X21,#__stack_chk_guard_ptr@PAGEOFF]
.text:000000000000B270                 MOV             X19, X1
.text:000000000000B274                 MOV             X20, X0
.text:000000000000B278                 ADD             X22, SP, #0x310+s
.text:000000000000B27C                 LDR             X21, [X21]
.text:000000000000B280                 ADD             X0, SP, #0x310+s ; s
.text:000000000000B284                 MOV             W2, #0x1F4 ; n
.text:000000000000B288                 MOV             W1, WZR ; c
.text:000000000000B28C                 STR             X21, [X22,#0x1F8]
.text:000000000000B290                 STRB            WZR, [SP,#0x310+n+1]
.text:000000000000B294                 STRB            WZR, [SP,#0x310+n]
.text:000000000000B298                 BL              .memset
.text:000000000000B29C                 ADD             X0, SP, #0x310+src ; s
.text:000000000000B2A0                 MOV             W2, #0x64 ; 'd' ; n
.text:000000000000B2A4                 MOV             W1, WZR ; c
.text:000000000000B2A8                 BL              .memset
.text:000000000000B2AC                 ADD             X0, SP, #0x310+n+6 ; s
.text:000000000000B2B0                 MOV             W2, #0x5C ; '\' ; n
.text:000000000000B2B4                 MOV             W1, WZR ; c
.text:000000000000B2B8                 STRB            WZR, [SP,#0x310+n+4]
.text:000000000000B2BC                 STRH            WZR, [SP,#0x310+n+2]
.text:000000000000B2C0                 BL              .memset
.text:000000000000B2C4                 MOV             W0, #1
.text:000000000000B2C8                 BL              .isExistDeviceRootKey
.text:000000000000B2CC                 CMP             W0, #1
.text:000000000000B2D0                 B.EQ            loc_B304
.text:000000000000B2D4                 CBNZ            W0, loc_B2EC
.text:000000000000B2D8                 ADRP            X1, #unk_10DEC@PAGE
.text:000000000000B2DC                 ADRP            X2, #aDrkIsNotExist@PAGE ; "DRK is not exist."
.text:000000000000B2E0                 ADD             X1, X1, #unk_10DEC@PAGEOFF
.text:000000000000B2E4                 ADD             X2, X2, #aDrkIsNotExist@PAGEOFF ; "DRK is not exist."
.text:000000000000B2E8                 B               loc_B2FC
.text:000000000000B2EC ; ---------------------------------------------------------------------------
.text:000000000000B2EC loc_B2EC                                ; CODE XREF: getHWParamDataNoCPLC+88↑j
.text:000000000000B2EC                 ADRP            X1, #unk_10DEC@PAGE
.text:000000000000B2F0                 ADRP            X2, #aFailedToCheckD@PAGE ; "Failed to check DRK."
.text:000000000000B2F4                 ADD             X1, X1, #unk_10DEC@PAGEOFF
.text:000000000000B2F8                 ADD             X2, X2, #aFailedToCheckD@PAGEOFF ; "Failed to check DRK."
.text:000000000000B2FC loc_B2FC                                ; CODE XREF: getHWParamDataNoCPLC+9C↑j
.text:000000000000B2FC                 MOV             W0, #6
.text:000000000000B300                 BL              .__android_log_print
.text:000000000000B304 loc_B304                                ; CODE XREF: getHWParamDataNoCPLC+84↑j
.text:000000000000B304                 BL              .isRestricted
.text:000000000000B308                 CMP             W0, #1
.text:000000000000B30C                 B.EQ            loc_B33C
.text:000000000000B310                 CMP             W0, #2
.text:000000000000B314                 B.NE            loc_B344
.text:000000000000B318                 ADRP            X8, #aNotTested@PAGE ; "NOT_TESTED"
.text:000000000000B31C                 ADD             X8, X8, #aNotTested@PAGEOFF ; "NOT_TESTED"
.text:000000000000B320                 LDR             X8, [X8] ; "NOT_TESTED"
.text:000000000000B324                 MOV             W9, #0x4445
.text:000000000000B328                 MOV             W10, #0xA
.text:000000000000B32C                 STRH            W9, [X20,#8]
.text:000000000000B330                 STR             X8, [X20]
.text:000000000000B334                 STR             W10, [X19]
.text:000000000000B338                 B               loc_B4BC
.text:000000000000B33C ; ---------------------------------------------------------------------------
.text:000000000000B33C loc_B33C                                ; CODE XREF: getHWParamDataNoCPLC+C0↑j
.text:000000000000B33C                 STR             WZR, [X19]
.text:000000000000B340                 B               loc_B4BC
.text:000000000000B344 ; ---------------------------------------------------------------------------
.text:000000000000B344 loc_B344                                ; CODE XREF: getHWParamDataNoCPLC+C8↑j
.text:000000000000B344                 ADRP            X8, #aRestricted@PAGE ; "Restricted_"
.text:000000000000B348                 ADD             X8, X8, #aRestricted@PAGEOFF ; "Restricted_"
.text:000000000000B34C                 LDR             X8, [X8] ; "Restricted_"
.text:000000000000B350                 ADRP            X1, #unk_10DEC@PAGE
.text:000000000000B354                 ADRP            X2, #a2CplcSkip@PAGE ; "===== 2. CPLC skip"
.text:000000000000B358                 MOV             W23, #0x5F ; '_'
.text:000000000000B35C                 MOV             W9, #0x6465
.text:000000000000B360                 ADD             X1, X1, #unk_10DEC@PAGEOFF
.text:000000000000B364                 ADD             X2, X2, #a2CplcSkip@PAGEOFF ; "===== 2. CPLC skip"
.text:000000000000B368                 MOV             W0, #4
.text:000000000000B36C                 STRB            W23, [SP,#0x310+var_236]
.text:000000000000B370                 STRH            W9, [SP,#0x310+var_238]
.text:000000000000B374                 STR             X8, [X22]
.text:000000000000B378                 STRB            W23, [SP,#0x310+var_235]
.text:000000000000B37C                 BL              .__android_log_print
.text:000000000000B380                 ADD             X0, SP, #0x310+src
.text:000000000000B384                 ADD             X1, SP, #0x310+n+1
.text:000000000000B388                 BL              .getESESTPropStr
.text:000000000000B38C                 LDRB            W8, [SP,#0x310+n+1]
.text:000000000000B390                 CMP             W8, #0xA
.text:000000000000B394                 B.NE            loc_B3C0
.text:000000000000B398                 ADD             X24, SP, #0x310+s
.text:000000000000B39C                 ADD             X0, X24, #0xC ; dest
.text:000000000000B3A0                 ADD             X1, SP, #0x310+src ; src
.text:000000000000B3A4                 MOV             W2, #0xA ; n
.text:000000000000B3A8                 BL              .strncpy
.text:000000000000B3AC                 LDRB            W8, [SP,#0x310+n+1]
.text:000000000000B3B0                 ADD             X9, X24, W8,UXTW
.text:000000000000B3B4                 STRB            W23, [X9,#0xC]
.text:000000000000B3B8                 ADD             W23, W8, #0xD
.text:000000000000B3BC                 B               loc_B3C4
.text:000000000000B3C0 ; ---------------------------------------------------------------------------
.text:000000000000B3C0 loc_B3C0                                ; CODE XREF: getHWParamDataNoCPLC+148↑j
.text:000000000000B3C0                 MOV             W23, #0xC
.text:000000000000B3C4 loc_B3C4                                ; CODE XREF: getHWParamDataNoCPLC+170↑j
.text:000000000000B3C4                 ADRP            X0, #aEfsSecEfsSspDa@PAGE ; "/efs/sec_efs/ssp_data"
.text:000000000000B3C8                 ADD             X0, X0, #aEfsSecEfsSspDa@PAGEOFF ; "/efs/sec_efs/ssp_data"
.text:000000000000B3CC                 BL              .semGetFileSize
.text:000000000000B3D0                 ADD             X24, SP, #0x310+s
.text:000000000000B3D4                 AND             W3, W0, #0xFF
.text:000000000000B3D8                 MOV             W8, #0x70 ; 'p'
.text:000000000000B3DC                 MOV             W9, #0x746F
.text:000000000000B3E0                 ADD             W25, W23, #3
.text:000000000000B3E4                 ADD             X10, X24, W23,UXTW
.text:000000000000B3E8                 SUB             W11, W3, #1
.text:000000000000B3EC                 STRB            W8, [X10,#2]
.text:000000000000B3F0                 STRH            W9, [X10]
.text:000000000000B3F4                 CMP             W11, #0xC7
.text:000000000000B3F8                 B.HI            loc_B430
.text:000000000000B3FC                 ADRP            X2, #a02x@PAGE ; "%02X"
.text:000000000000B400                 ADD             X2, X2, #a02x@PAGEOFF ; "%02X"
.text:000000000000B404                 ADD             X0, SP, #0x310+n+2 ; s
.text:000000000000B408                 MOV             W1, #3  ; maxlen
.text:000000000000B40C                 STRB            WZR, [SP,#0x310+n+4]
.text:000000000000B410                 STRH            WZR, [SP,#0x310+n+2]
.text:000000000000B414                 BL              .snprintf
.text:000000000000B418                 ADD             X0, X24, W25,UXTW ; dest
.text:000000000000B41C                 ADD             X1, SP, #0x310+n+2 ; src
.text:000000000000B420                 MOV             W2, #2  ; n
.text:000000000000B424                 BL              .strncpy
.text:000000000000B428                 ADD             W8, W23, #5
.text:000000000000B42C                 B               loc_B464
.text:000000000000B430 ; ---------------------------------------------------------------------------
.text:000000000000B430 loc_B430                                ; CODE XREF: getHWParamDataNoCPLC+1AC↑j
.text:000000000000B430                 ADD             X8, X24, W25,UXTW
.text:000000000000B434                 CMP             W3, #0xC9
.text:000000000000B438                 B.CC            loc_B458
.text:000000000000B43C                 MOV             W10, #0x626F0000
.text:000000000000B440                 MOV             W9, #0x6769
.text:000000000000B444                 MOVK            W10, #0x6F74
.text:000000000000B448                 STRH            W9, [X8,#4]
.text:000000000000B44C                 STR             W10, [X8]
.text:000000000000B450                 ADD             W8, W23, #9
.text:000000000000B454                 B               loc_B464
.text:000000000000B458 ; ---------------------------------------------------------------------------
.text:000000000000B458 loc_B458                                ; CODE XREF: getHWParamDataNoCPLC+1EC↑j
.text:000000000000B458                 MOV             W9, #0x30 ; '0'
.text:000000000000B45C                 STRB            W9, [X8]
.text:000000000000B460                 ADD             W8, W23, #4
.text:000000000000B464 loc_B464                                ; CODE XREF: getHWParamDataNoCPLC+1E0↑j
.text:000000000000B464                                         ; getHWParamDataNoCPLC+208↑j
.text:000000000000B464                 ADD             X24, SP, #0x310+s
.text:000000000000B468                 MOV             W9, #0x5F ; '_'
.text:000000000000B46C                 ADD             X0, SP, #0x310+n+6
.text:000000000000B470                 ADD             X1, SP, #0x310+n
.text:000000000000B474                 STRB            W9, [X24,W8,UXTW]
.text:000000000000B478                 ADD             W23, W8, #1
.text:000000000000B47C                 BL              .getCosNameStr
.text:000000000000B480                 LDRB            W2, [SP,#0x310+n] ; n
.text:000000000000B484                 SUB             W8, W2, #1
.text:000000000000B488                 AND             W8, W8, #0xFF
.text:000000000000B48C                 CMP             W8, #0x5A ; 'Z'
.text:000000000000B490                 B.HI            loc_B4A8
.text:000000000000B494                 ADD             X0, X24, W23,UXTW ; dest
.text:000000000000B498                 ADD             X1, SP, #0x310+n+6 ; src
.text:000000000000B49C                 BL              .strncpy
.text:000000000000B4A0                 LDRB            W8, [SP,#0x310+n]
.text:000000000000B4A4                 ADD             W23, W8, W23
.text:000000000000B4A8 loc_B4A8                                ; CODE XREF: getHWParamDataNoCPLC+244↑j
.text:000000000000B4A8                 MOV             W2, W23 ; n
.text:000000000000B4AC                 ADD             X1, SP, #0x310+s ; src
.text:000000000000B4B0                 MOV             X0, X20 ; dest
.text:000000000000B4B4                 BL              .strncpy
.text:000000000000B4B8                 STR             W23, [X19]
.text:000000000000B4BC loc_B4BC                                ; CODE XREF: getHWParamDataNoCPLC+EC↑j
.text:000000000000B4BC                                         ; getHWParamDataNoCPLC+F4↑j
.text:000000000000B4BC                 LDR             X8, [X22,#0x1F8]
.text:000000000000B4C0                 SUB             X8, X21, X8
.text:000000000000B4C4                 CBNZ            X8, loc_B4E8
.text:000000000000B4C8                 MOV             W0, #1
.text:000000000000B4CC                 SUB             SP, X29, #0x40 ; '@'
.text:000000000000B4D0                 LDP             X29, X30, [SP,#0x40+var_s0]
.text:000000000000B4D4                 LDP             X20, X19, [SP,#0x40+var_10]
.text:000000000000B4D8                 LDP             X22, X21, [SP,#0x40+var_20]
.text:000000000000B4DC                 LDP             X24, X23, [SP,#0x40+var_30]
.text:000000000000B4E0                 LDP             X26, X25, [SP+0x40+var_40],#0x50
.text:000000000000B4E4                 RET
.text:000000000000B4E8 ; ---------------------------------------------------------------------------
.text:000000000000B4E8 loc_B4E8                                ; CODE XREF: getHWParamDataNoCPLC+278↑j
.text:000000000000B4E8                 BL              .__stack_chk_fail
.text:000000000000B4E8 ; } // starts at B24C
.text:000000000000B4E8 ; End of function getHWParamDataNoCPLC
.text:000000000000B4EC ; =============== S U B R O U T I N E =======================================
.text:000000000000B4EC ; Attributes: bp-based frame
.text:000000000000B4EC                 EXPORT getCPLCSwd
.text:000000000000B4EC getCPLCSwd                              ; DATA XREF: LOAD:0000000000001660↑o
.text:000000000000B4EC var_16860       = -0x16860
.text:000000000000B4EC var_16858       = -0x16858
.text:000000000000B4EC var_16854       = -0x16854
.text:000000000000B4EC var_40          = -0x40
.text:000000000000B4EC var_30          = -0x30
.text:000000000000B4EC var_20          = -0x20
.text:000000000000B4EC var_10          = -0x10
.text:000000000000B4EC var_s0          =  0
.text:000000000000B4EC ; __unwind {
.text:000000000000B4EC                 STP             X28, X27, [SP,#-0x10+var_40]!
.text:000000000000B4F0                 STP             X24, X23, [SP,#0x40+var_30]
.text:000000000000B4F4                 STP             X22, X21, [SP,#0x40+var_20]
.text:000000000000B4F8                 STP             X20, X19, [SP,#0x40+var_10]
.text:000000000000B4FC                 STP             X29, X30, [SP,#0x40+var_s0]
.text:000000000000B500                 ADD             X29, SP, #0x40
.text:000000000000B504                 SUB             SP, SP, #0x16,LSL#12
.text:000000000000B508                 SUB             SP, SP, #0x820
.text:000000000000B50C                 ADRP            X22, #__stack_chk_guard_ptr@PAGE
.text:000000000000B510                 LDR             X22, [X22,#__stack_chk_guard_ptr@PAGEOFF]
.text:000000000000B514                 MOV             X19, X1
.text:000000000000B518                 MOV             X20, X0
.text:000000000000B51C                 MOV             X23, SP
.text:000000000000B520                 LDR             X22, [X22]
.text:000000000000B524                 MOV             W0, #0x18
.text:000000000000B528                 ADD             X3, SP, #0x16860+var_16858
.text:000000000000B52C                 MOV             X1, XZR
.text:000000000000B530                 MOV             W2, WZR
.text:000000000000B534                 STR             X22, [X23,#0x16860+var_16860]
.text:000000000000B538                 ADD             X24, SP, #0x16860+var_16858
.text:000000000000B53C                 BL              .invokeCommand
.text:000000000000B540                 CBZ             W0, loc_B56C
.text:000000000000B544                 LDR             W3, [SP,#0x16860+var_16854]
.text:000000000000B548                 ADRP            X1, #unk_10DEC@PAGE
.text:000000000000B54C                 ADRP            X2, #(aCmdHandleCcmDa+0x18)@PAGE ; "invokeCommand() failed! [%d]"
.text:000000000000B550                 ADD             X1, X1, #unk_10DEC@PAGEOFF
.text:000000000000B554                 ADD             X2, X2, #(aCmdHandleCcmDa+0x18)@PAGEOFF ; "invokeCommand() failed! [%d]"
.text:000000000000B558                 MOV             W0, #6
.text:000000000000B55C                 BL              .__android_log_print
.text:000000000000B560                 MOV             W0, #0xFFFFFFFF
.text:000000000000B564                 STR             W0, [SP,#0x16860+var_16854]
.text:000000000000B568                 B               loc_B594
.text:000000000000B56C ; ---------------------------------------------------------------------------
.text:000000000000B56C loc_B56C                                ; CODE XREF: getCPLCSwd+54↑j
.text:000000000000B56C                 MOV             W8, #0x10000
.text:000000000000B570                 STR             WZR, [SP,#0x16860+var_16854]
.text:000000000000B574                 MOVK            W8, #0x6808
.text:000000000000B578                 LDR             W21, [X24,X8]
.text:000000000000B57C                 ADD             X1, X24, #8 ; src
.text:000000000000B580                 MOV             X0, X20 ; dest
.text:000000000000B584                 MOV             X2, X21 ; n
.text:000000000000B588                 BL              .memcpy
.text:000000000000B58C                 MOV             W0, WZR
.text:000000000000B590                 STR             W21, [X19]
.text:000000000000B594 loc_B594                                ; CODE XREF: getCPLCSwd+7C↑j
.text:000000000000B594                 LDR             X8, [X23]
.text:000000000000B598                 SUB             X8, X22, X8
.text:000000000000B59C                 CBNZ            X8, loc_B5BC
.text:000000000000B5A0                 SUB             SP, X29, #0x40 ; '@'
.text:000000000000B5A4                 LDP             X29, X30, [SP,#0x40+var_s0]
.text:000000000000B5A8                 LDP             X20, X19, [SP,#0x40+var_10]
.text:000000000000B5AC                 LDP             X22, X21, [SP,#0x40+var_20]
.text:000000000000B5B0                 LDP             X24, X23, [SP,#0x40+var_30]
.text:000000000000B5B4                 LDP             X28, X27, [SP+0x40+var_40],#0x50
.text:000000000000B5B8                 RET
.text:000000000000B5BC ; ---------------------------------------------------------------------------
.text:000000000000B5BC loc_B5BC                                ; CODE XREF: getCPLCSwd+B0↑j
.text:000000000000B5BC                 BL              .__stack_chk_fail
.text:000000000000B5BC ; } // starts at B4EC
.text:000000000000B5BC ; End of function getCPLCSwd
.text:000000000000B5C0 ; =============== S U B R O U T I N E =======================================
.text:000000000000B5C0 ; Attributes: bp-based frame
.text:000000000000B5C0                 EXPORT spiOpen
.text:000000000000B5C0 spiOpen                                 ; CODE XREF: .spiOpen+C↑j
.text:000000000000B5C0                                         ; DATA XREF: LOAD:0000000000000F58↑o ...
.text:000000000000B5C0 var_16840       = -0x16840
.text:000000000000B5C0 s               = -0x16838
.text:000000000000B5C0 var_16834       = -0x16834
.text:000000000000B5C0 var_20          = -0x20
.text:000000000000B5C0 var_10          = -0x10
.text:000000000000B5C0 var_s0          =  0
.text:000000000000B5C0 ; __unwind {
.text:000000000000B5C0                 STP             X22, X21, [SP,#-0x10+var_20]!
.text:000000000000B5C4                 STP             X20, X19, [SP,#0x20+var_10]
.text:000000000000B5C8                 STP             X29, X30, [SP,#0x20+var_s0]
.text:000000000000B5CC                 ADD             X29, SP, #0x20
.text:000000000000B5D0                 SUB             SP, SP, #0x16,LSL#12
.text:000000000000B5D4                 SUB             SP, SP, #0x820
.text:000000000000B5D8                 ADRP            X20, #__stack_chk_guard_ptr@PAGE
.text:000000000000B5DC                 LDR             X20, [X20,#__stack_chk_guard_ptr@PAGEOFF]
.text:000000000000B5E0                 ADRP            X1, #unk_10DEC@PAGE
.text:000000000000B5E4                 MOV             X21, SP
.text:000000000000B5E8                 ADD             X1, X1, #unk_10DEC@PAGEOFF
.text:000000000000B5EC                 LDR             X20, [X20]
.text:000000000000B5F0                 STR             X20, [X21,#0x16840+var_16840]
.text:000000000000B5F4                 CBZ             W0, loc_B648
.text:000000000000B5F8                 CMP             W0, #1
.text:000000000000B5FC                 B.NE            loc_B69C
.text:000000000000B600                 ADRP            X2, #aSSwdOpen@PAGE ; "%s, SWD open"
.text:000000000000B604                 ADRP            X3, #aSpiopen_0@PAGE ; "spiOpen"
.text:000000000000B608                 ADD             X2, X2, #aSSwdOpen@PAGEOFF ; "%s, SWD open"
.text:000000000000B60C                 ADD             X3, X3, #aSpiopen_0@PAGEOFF ; "spiOpen"
.text:000000000000B610                 MOV             W0, #4
.text:000000000000B614                 BL              .__android_log_print
.text:000000000000B618                 BL              ._openSecureSpi
.text:000000000000B61C                 MOV             W19, W0
.text:000000000000B620                 CMN             W19, #0xC8
.text:000000000000B624                 B.EQ            loc_B634
.text:000000000000B628                 CBZ             W19, loc_B634
.text:000000000000B62C                 CMN             W19, #0x64 ; 'd'
.text:000000000000B630                 B.NE            loc_B6B8
.text:000000000000B634 loc_B634                                ; CODE XREF: spiOpen+64↑j
.text:000000000000B634                                         ; spiOpen+68↑j
.text:000000000000B634                 ADRP            X1, #unk_10DEC@PAGE
.text:000000000000B638                 ADRP            X2, #aOpensecurespiF@PAGE ; "_openSecureSpi failed!"
.text:000000000000B63C                 ADD             X1, X1, #unk_10DEC@PAGEOFF
.text:000000000000B640                 ADD             X2, X2, #aOpensecurespiF@PAGEOFF ; "_openSecureSpi failed!"
.text:000000000000B644                 B               loc_B700
.text:000000000000B648 ; ---------------------------------------------------------------------------
.text:000000000000B648 loc_B648                                ; CODE XREF: spiOpen+34↑j
.text:000000000000B648                 ADRP            X2, #aSSamsungSeApiO@PAGE ; "%s, Samsung SE API open"
.text:000000000000B64C                 ADRP            X3, #aSpiopen_0@PAGE ; "spiOpen"
.text:000000000000B650                 ADD             X2, X2, #aSSamsungSeApiO@PAGEOFF ; "%s, Samsung SE API open"
.text:000000000000B654                 ADD             X3, X3, #aSpiopen_0@PAGEOFF ; "spiOpen"
.text:000000000000B658                 MOV             W0, #4
.text:000000000000B65C                 BL              .__android_log_print
.text:000000000000B660                 BL              .secEseSPI_open
.text:000000000000B664                 AND             W8, W0, #0xFFFF
.text:000000000000B668                 CBZ             W8, loc_B734
.text:000000000000B66C                 CMP             W8, #0x33 ; '3'
.text:000000000000B670                 B.EQ            loc_B73C
.text:000000000000B674                 CMP             W8, #0x6F ; 'o'
.text:000000000000B678                 B.NE            loc_B75C
.text:000000000000B67C                 ADRP            X1, #unk_10DEC@PAGE
.text:000000000000B680                 ADRP            X2, #aOpenspidrvSece@PAGE ; "_openSpiDrv secEseSPI_open failed : Alr"...
.text:000000000000B684                 ADD             X1, X1, #unk_10DEC@PAGEOFF
.text:000000000000B688                 ADD             X2, X2, #aOpenspidrvSece@PAGEOFF ; "_openSpiDrv secEseSPI_open failed : Alr"...
.text:000000000000B68C                 MOV             W0, #6
.text:000000000000B690                 BL              .__android_log_print
.text:000000000000B694                 MOV             W0, #0xFFFFFF38
.text:000000000000B698                 B               loc_B77C
.text:000000000000B69C ; ---------------------------------------------------------------------------
.text:000000000000B69C loc_B69C                                ; CODE XREF: spiOpen+3C↑j
.text:000000000000B69C                 ADRP            X2, #aSInvalidInputD@PAGE ; "%s, invalid input data"
.text:000000000000B6A0                 ADRP            X3, #aSpiopen_0@PAGE ; "spiOpen"
.text:000000000000B6A4                 ADD             X2, X2, #aSInvalidInputD@PAGEOFF ; "%s, invalid input data"
.text:000000000000B6A8                 ADD             X3, X3, #aSpiopen_0@PAGEOFF ; "spiOpen"
.text:000000000000B6AC                 MOV             W0, #6
.text:000000000000B6B0                 BL              .__android_log_print
.text:000000000000B6B4                 B               loc_B754
.text:000000000000B6B8 ; ---------------------------------------------------------------------------
.text:000000000000B6B8 loc_B6B8                                ; CODE XREF: spiOpen+70↑j
.text:000000000000B6B8                 MOV             W2, #0x10000
.text:000000000000B6BC                 ADD             X0, SP, #0x16840+s ; s
.text:000000000000B6C0                 MOVK            W2, #0x680C ; n
.text:000000000000B6C4                 MOV             W1, WZR ; c
.text:000000000000B6C8                 BL              .memset
.text:000000000000B6CC                 MOV             W8, #0xFFFFFFFF
.text:000000000000B6D0                 MOV             X1, XZR
.text:000000000000B6D4                 MOV             W0, #0xA
.text:000000000000B6D8                 ADD             X3, SP, #0x16840+s
.text:000000000000B6DC                 MOV             W2, WZR
.text:000000000000B6E0                 STR             W8, [SP,#0x16840+var_16834]
.text:000000000000B6E4                 BL              .invokeCommand
.text:000000000000B6E8                 LDR             W8, [SP,#0x16840+var_16834]
.text:000000000000B6EC                 CBZ             W8, loc_B79C
.text:000000000000B6F0                 ADRP            X1, #unk_10DEC@PAGE
.text:000000000000B6F4                 ADRP            X2, #aSpiinitFailed@PAGE ; "spiInit failed!"
.text:000000000000B6F8                 ADD             X1, X1, #unk_10DEC@PAGEOFF
.text:000000000000B6FC                 ADD             X2, X2, #aSpiinitFailed@PAGEOFF ; "spiInit failed!"
.text:000000000000B700 loc_B700                                ; CODE XREF: spiOpen+84↑j
.text:000000000000B700                 MOV             W0, #6
.text:000000000000B704                 BL              .__android_log_print
.text:000000000000B708 loc_B708                                ; CODE XREF: spiOpen+1E0↓j
.text:000000000000B708                 ADRP            X1, #unk_10DEC@PAGE
.text:000000000000B70C                 ADRP            X2, #aSSwdOpen@PAGE ; "%s, SWD open"
.text:000000000000B710                 ADRP            X3, #aSpiopen_0@PAGE ; "spiOpen"
.text:000000000000B714                 ADD             X1, X1, #unk_10DEC@PAGEOFF
.text:000000000000B718                 ADD             X2, X2, #aSSwdOpen@PAGEOFF ; "%s, SWD open"
.text:000000000000B71C                 ADD             X3, X3, #aSpiopen_0@PAGEOFF ; "spiOpen"
.text:000000000000B720                 MOV             W0, #4
.text:000000000000B724                 BL              .__android_log_print
.text:000000000000B728                 BL              .closeSecureSpi
.text:000000000000B72C                 MOV             W0, #0xFFFFFFFF
.text:000000000000B730                 B               loc_B77C
.text:000000000000B734 ; ---------------------------------------------------------------------------
.text:000000000000B734 loc_B734                                ; CODE XREF: spiOpen+A8↑j
.text:000000000000B734                 MOV             W0, #1
.text:000000000000B738                 B               loc_B77C
.text:000000000000B73C ; ---------------------------------------------------------------------------
.text:000000000000B73C loc_B73C                                ; CODE XREF: spiOpen+B0↑j
.text:000000000000B73C                 ADRP            X1, #unk_10DEC@PAGE
.text:000000000000B740                 ADRP            X2, #aOpenspidrvSece_0@PAGE ; "_openSpiDrv secEseSPI_open failed : Not"...
.text:000000000000B744                 ADD             X1, X1, #unk_10DEC@PAGEOFF
.text:000000000000B748                 ADD             X2, X2, #aOpenspidrvSece_0@PAGEOFF ; "_openSpiDrv secEseSPI_open failed : Not"...
.text:000000000000B74C                 MOV             W0, #6
.text:000000000000B750                 BL              .__android_log_print
.text:000000000000B754 loc_B754                                ; CODE XREF: spiOpen+F4↑j
.text:000000000000B754                 MOV             W0, #0xFFFFFF9C
.text:000000000000B758                 B               loc_B77C
.text:000000000000B75C ; ---------------------------------------------------------------------------
.text:000000000000B75C loc_B75C                                ; CODE XREF: spiOpen+B8↑j
.text:000000000000B75C                 ADRP            X1, #unk_10DEC@PAGE
.text:000000000000B760                 ADRP            X2, #aFailedToOpenSp@PAGE ; "failed to open spi: %x"
.text:000000000000B764                 AND             W3, W0, #0xFFFF
.text:000000000000B768                 ADD             X1, X1, #unk_10DEC@PAGEOFF
.text:000000000000B76C                 ADD             X2, X2, #aFailedToOpenSp@PAGEOFF ; "failed to open spi: %x"
.text:000000000000B770                 MOV             W0, #6
.text:000000000000B774                 BL              .__android_log_print
.text:000000000000B778                 MOV             W0, WZR
.text:000000000000B77C loc_B77C                                ; CODE XREF: spiOpen+D8↑j
.text:000000000000B77C                                         ; spiOpen+170↑j ...
.text:000000000000B77C                 LDR             X8, [X21]
.text:000000000000B780                 SUB             X8, X20, X8
.text:000000000000B784                 CBNZ            X8, loc_B7CC
.text:000000000000B788                 SUB             SP, X29, #0x20 ; ' '
.text:000000000000B78C                 LDP             X29, X30, [SP,#0x20+var_s0]
.text:000000000000B790                 LDP             X20, X19, [SP,#0x20+var_10]
.text:000000000000B794                 LDP             X22, X21, [SP+0x20+var_20],#0x30
.text:000000000000B798                 RET
.text:000000000000B79C ; ---------------------------------------------------------------------------
.text:000000000000B79C loc_B79C                                ; CODE XREF: spiOpen+12C↑j
.text:000000000000B79C                 CMP             W19, #1
.text:000000000000B7A0                 B.NE            loc_B708
.text:000000000000B7A4                 ADRP            X1, #unk_10DEC@PAGE
.text:000000000000B7A8                 ADRP            X2, #aSSwdOpenSucc@PAGE ; "%s, SWD open succ"
.text:000000000000B7AC                 ADRP            X3, #aSpiopen_0@PAGE ; "spiOpen"
.text:000000000000B7B0                 ADD             X1, X1, #unk_10DEC@PAGEOFF
.text:000000000000B7B4                 ADD             X2, X2, #aSSwdOpenSucc@PAGEOFF ; "%s, SWD open succ"
.text:000000000000B7B8                 ADD             X3, X3, #aSpiopen_0@PAGEOFF ; "spiOpen"
.text:000000000000B7BC                 MOV             W0, #4
.text:000000000000B7C0                 BL              .__android_log_print
.text:000000000000B7C4                 MOV             W0, #1
.text:000000000000B7C8                 B               loc_B77C
.text:000000000000B7CC ; ---------------------------------------------------------------------------
.text:000000000000B7CC loc_B7CC                                ; CODE XREF: spiOpen+1C4↑j
.text:000000000000B7CC                 BL              .__stack_chk_fail
.text:000000000000B7CC ; } // starts at B5C0
.text:000000000000B7CC ; End of function spiOpen
.text:000000000000B7D0 ; =============== S U B R O U T I N E =======================================
.text:000000000000B7D0 ; Attributes: bp-based frame
.text:000000000000B7D0                 EXPORT spiClose
.text:000000000000B7D0 spiClose                                ; CODE XREF: .spiClose+C↑j
.text:000000000000B7D0                                         ; DATA XREF: LOAD:0000000000001360↑o ...
.text:000000000000B7D0 var_s0          =  0
.text:000000000000B7D0 ; __unwind {
.text:000000000000B7D0                 STP             X29, X30, [SP,#-0x10+var_s0]!
.text:000000000000B7D4                 MOV             X29, SP
.text:000000000000B7D8                 ADRP            X1, #unk_10DEC@PAGE
.text:000000000000B7DC                 ADD             X1, X1, #unk_10DEC@PAGEOFF
.text:000000000000B7E0                 CBZ             W0, loc_B814
.text:000000000000B7E4                 CMP             W0, #1
.text:000000000000B7E8                 B.NE            loc_B85C
.text:000000000000B7EC                 ADRP            X2, #aSSwdClose@PAGE ; "%s, SWD close"
.text:000000000000B7F0                 ADRP            X3, #aSpiclose_0@PAGE ; "spiClose"
.text:000000000000B7F4                 ADD             X2, X2, #aSSwdClose@PAGEOFF ; "%s, SWD close"
.text:000000000000B7F8                 ADD             X3, X3, #aSpiclose_0@PAGEOFF ; "spiClose"
.text:000000000000B7FC                 MOV             W0, #4
.text:000000000000B800                 BL              .__android_log_print
.text:000000000000B804                 BL              .closeSecureSpi
.text:000000000000B808                 MOV             W0, #1
.text:000000000000B80C                 LDP             X29, X30, [SP+var_s0],#0x10
.text:000000000000B810                 RET
.text:000000000000B814 ; ---------------------------------------------------------------------------
.text:000000000000B814 loc_B814                                ; CODE XREF: spiClose+10↑j
.text:000000000000B814                 ADRP            X2, #aSSamsungSeApiC@PAGE ; "%s, Samsung SE API close"
.text:000000000000B818                 ADRP            X3, #aSpiclose_0@PAGE ; "spiClose"
.text:000000000000B81C                 ADD             X2, X2, #aSSamsungSeApiC@PAGEOFF ; "%s, Samsung SE API close"
.text:000000000000B820                 ADD             X3, X3, #aSpiclose_0@PAGEOFF ; "spiClose"
.text:000000000000B824                 MOV             W0, #4
.text:000000000000B828                 BL              .__android_log_print
.text:000000000000B82C                 BL              .secEseSPI_close
.text:000000000000B830                 AND             W3, W0, #0xFFFF
.text:000000000000B834                 CBZ             W3, loc_B880
.text:000000000000B838                 ADRP            X1, #unk_10DEC@PAGE
.text:000000000000B83C                 ADRP            X2, #aFailedToCloseS@PAGE ; "failed to close spi: %x"
.text:000000000000B840                 ADD             X1, X1, #unk_10DEC@PAGEOFF
.text:000000000000B844                 ADD             X2, X2, #aFailedToCloseS@PAGEOFF ; "failed to close spi: %x"
.text:000000000000B848                 MOV             W0, #6
.text:000000000000B84C                 BL              .__android_log_print
.text:000000000000B850                 MOV             W0, WZR
.text:000000000000B854                 LDP             X29, X30, [SP+var_s0],#0x10
.text:000000000000B858                 RET
.text:000000000000B85C ; ---------------------------------------------------------------------------
.text:000000000000B85C loc_B85C                                ; CODE XREF: spiClose+18↑j
.text:000000000000B85C                 ADRP            X2, #aSInvalidInputD@PAGE ; "%s, invalid input data"
.text:000000000000B860                 ADRP            X3, #aSpiclose_0@PAGE ; "spiClose"
.text:000000000000B864                 ADD             X2, X2, #aSInvalidInputD@PAGEOFF ; "%s, invalid input data"
.text:000000000000B868                 ADD             X3, X3, #aSpiclose_0@PAGEOFF ; "spiClose"
.text:000000000000B86C                 MOV             W0, #6
.text:000000000000B870                 BL              .__android_log_print
.text:000000000000B874                 MOV             W0, #0xFFFFFF9C
.text:000000000000B878                 LDP             X29, X30, [SP+var_s0],#0x10
.text:000000000000B87C                 RET
.text:000000000000B880 ; ---------------------------------------------------------------------------
.text:000000000000B880 loc_B880                                ; CODE XREF: spiClose+64↑j
.text:000000000000B880                 MOV             W0, #1
.text:000000000000B884                 LDP             X29, X30, [SP+var_s0],#0x10
.text:000000000000B888                 RET
.text:000000000000B888 ; } // starts at B7D0
.text:000000000000B888 ; End of function spiClose
.text:000000000000B88C ; =============== S U B R O U T I N E =======================================
.text:000000000000B88C ; Attributes: bp-based frame
.text:000000000000B88C                 EXPORT isRestrictedNwd
.text:000000000000B88C isRestrictedNwd                         ; CODE XREF: .isRestrictedNwd+C↑j
.text:000000000000B88C                                         ; DATA XREF: LOAD:0000000000000808↑o ...
.text:000000000000B88C var_180         = -0x180
.text:000000000000B88C var_178         = -0x178
.text:000000000000B88C var_170         = -0x170
.text:000000000000B88C var_168         = -0x168
.text:000000000000B88C var_160         = -0x160
.text:000000000000B88C var_15C         = -0x15C
.text:000000000000B88C var_15A         = -0x15A
.text:000000000000B88C var_158         = -0x158
.text:000000000000B88C var_150         = -0x150
.text:000000000000B88C var_14C         = -0x14C
.text:000000000000B88C var_148         = -0x148
.text:000000000000B88C var_140         = -0x140
.text:000000000000B88C s               = -0x138
.text:000000000000B88C var_38          = -0x38
.text:000000000000B88C var_30          = -0x30
.text:000000000000B88C var_20          = -0x20
.text:000000000000B88C var_10          = -0x10
.text:000000000000B88C var_s0          =  0
.text:000000000000B88C ; __unwind {
.text:000000000000B88C                 STP             X24, X23, [SP,#-0x10+var_30]!
.text:000000000000B890                 STP             X22, X21, [SP,#0x30+var_20]
.text:000000000000B894                 STP             X20, X19, [SP,#0x30+var_10]
.text:000000000000B898                 STP             X29, X30, [SP,#0x30+var_s0]
.text:000000000000B89C                 ADD             X29, SP, #0x30
.text:000000000000B8A0                 SUB             SP, SP, #0x150
.text:000000000000B8A4                 ADRP            X21, #__stack_chk_guard_ptr@PAGE
.text:000000000000B8A8                 LDR             X21, [X21,#__stack_chk_guard_ptr@PAGEOFF]
.text:000000000000B8AC                 ADD             X0, SP, #0x180+s ; s
.text:000000000000B8B0                 MOV             W2, #0x100 ; n
.text:000000000000B8B4                 MOV             W1, WZR ; c
.text:000000000000B8B8                 LDR             X21, [X21]
.text:000000000000B8BC                 STUR            X21, [X29,#var_38]
.text:000000000000B8C0                 BL              .memset
.text:000000000000B8C4                 MOV             X10, #0x5101000000
.text:000000000000B8CC                 MOV             W8, #0xFFFFFFFF
.text:000000000000B8D0                 MOV             X9, #0xFFFFFFFFFFFFFFFF
.text:000000000000B8D4                 MOVK            X10, #0xA0
.text:000000000000B8D8                 STR             W8, [SP,#0x180+var_140]
.text:000000000000B8DC                 STR             X9, [SP,#0x180+var_148]
.text:000000000000B8E0                 STR             X10, [SP,#0x180+var_180]
.text:000000000000B8E4                 BL              .getVendor
.text:000000000000B8E8                 MOV             W19, W0
.text:000000000000B8EC                 BL              .isFactoryBinary
.text:000000000000B8F0                 CMP             W0, #1
.text:000000000000B8F4                 B.EQ            loc_B944
.text:000000000000B8F8                 BL              .getVendor
.text:000000000000B8FC                 CMP             W0, #0xE
.text:000000000000B900                 B.EQ            loc_B944
.text:000000000000B904                 ORR             W8, W0, #1
.text:000000000000B908                 CMP             W8, #0xB
.text:000000000000B90C                 B.EQ            loc_B944
.text:000000000000B910                 SUB             W9, W0, #0xF
.text:000000000000B914                 CMP             W9, #2
.text:000000000000B918                 B.CC            loc_B944
.text:000000000000B91C                 CMP             W8, #0xD
.text:000000000000B920                 B.EQ            loc_B944
.text:000000000000B924                 ADRP            X1, #unk_10DEC@PAGE
.text:000000000000B928                 ADRP            X2, #aInvalidApiNotF_0@PAGE ; "Invalid API, not factory binary and don"...
.text:000000000000B92C                 ADD             X1, X1, #unk_10DEC@PAGEOFF
.text:000000000000B930                 ADD             X2, X2, #aInvalidApiNotF_0@PAGEOFF ; "Invalid API, not factory binary and don"...
.text:000000000000B934                 MOV             W0, #6
.text:000000000000B938                 BL              .__android_log_print
.text:000000000000B93C                 MOV             W0, #0xFF
.text:000000000000B940                 B               loc_BB68
.text:000000000000B944 ; ---------------------------------------------------------------------------
.text:000000000000B944 loc_B944                                ; CODE XREF: isRestrictedNwd+68↑j
.text:000000000000B944                                         ; isRestrictedNwd+74↑j ...
.text:000000000000B944                 ADD             X0, SP, #0x180+s ; s
.text:000000000000B948                 MOV             W2, #0x100 ; n
.text:000000000000B94C                 MOV             W1, WZR ; c
.text:000000000000B950                 STP             XZR, XZR, [SP,#0x180+var_158]
.text:000000000000B954                 STP             XZR, XZR, [SP,#0x180+var_168]
.text:000000000000B958                 STP             XZR, XZR, [SP,#0x180+var_178]
.text:000000000000B95C                 MOV             W20, #0x100
.text:000000000000B960                 ADD             X23, SP, #0x180+s
.text:000000000000B964                 BL              .memset
.text:000000000000B968                 CMP             W19, #1
.text:000000000000B96C                 ORR             W8, W19, #8
.text:000000000000B970                 ORR             W9, W19, #2
.text:000000000000B974                 CSET            W10, EQ
.text:000000000000B978                 CMP             W8, #0xC
.text:000000000000B97C                 CSET            W8, EQ
.text:000000000000B980                 CMP             W9, #0xF
.text:000000000000B984                 ORR             W8, W10, W8
.text:000000000000B988                 CSET            W9, EQ
.text:000000000000B98C                 CMP             W19, #0x10
.text:000000000000B990                 ORR             W8, W9, W8
.text:000000000000B994                 CSET            W9, EQ
.text:000000000000B998                 ORR             W22, W9, W8
.text:000000000000B99C                 CMP             W22, #1
.text:000000000000B9A0                 B.NE            loc_BA0C
.text:000000000000B9A4                 MOV             W8, #0xA4
.text:000000000000B9A8                 MOV             W9, #4
.text:000000000000B9AC                 STRB            W8, [SP,#0x180+var_160+1]
.text:000000000000B9B0                 MOV             W8, #8
.text:000000000000B9B4                 STRH            W20, [SP,#0x180+var_168]
.text:000000000000B9B8                 STRB            W9, [SP,#0x180+var_160+2]
.text:000000000000B9BC                 MOV             W9, #1
.text:000000000000B9C0                 STRH            W8, [SP,#0x180+var_15C]
.text:000000000000B9C4                 MOV             X8, SP
.text:000000000000B9C8                 ADD             X0, SP, #0x180+var_160
.text:000000000000B9CC                 ADD             X1, SP, #0x180+var_178
.text:000000000000B9D0                 STRB            WZR, [SP,#0x180+var_160]
.text:000000000000B9D4                 STRB            WZR, [SP,#0x180+var_160+3]
.text:000000000000B9D8                 STR             WZR, [SP,#0x180+var_14C]
.text:000000000000B9DC                 STRB            WZR, [SP,#0x180+var_15A]
.text:000000000000B9E0                 STRB            W9, [SP,#0x180+var_150]
.text:000000000000B9E4                 STR             X8, [SP,#0x180+var_158]
.text:000000000000B9E8                 STR             X23, [SP,#0x180+var_170]
.text:000000000000B9EC                 BL              .secEseSPI_transceive
.text:000000000000B9F0                 AND             W3, W0, #0xFFFF
.text:000000000000B9F4                 CBZ             W3, loc_BB28
.text:000000000000B9F8                 ADRP            X1, #unk_10DEC@PAGE
.text:000000000000B9FC                 ADRP            X2, #aGetacdumpnwdNx@PAGE ; "getACDumpNwd, NXP failed to SELECT ISD,"...
.text:000000000000BA00                 ADD             X1, X1, #unk_10DEC@PAGEOFF
.text:000000000000BA04                 ADD             X2, X2, #aGetacdumpnwdNx@PAGEOFF ; "getACDumpNwd, NXP failed to SELECT ISD,"...
.text:000000000000BA08                 B               loc_BB5C
.text:000000000000BA0C ; ---------------------------------------------------------------------------
.text:000000000000BA0C loc_BA0C                                ; CODE XREF: isRestrictedNwd+114↑j
.text:000000000000BA0C                 CMP             W19, #7
.text:000000000000BA10                 B.EQ            loc_BAB8
.text:000000000000BA14                 ORR             W8, W19, #4
.text:000000000000BA18                 CMP             W8, #6
.text:000000000000BA1C                 B.EQ            loc_BAB8
.text:000000000000BA20                 ORR             W8, W19, #3
.text:000000000000BA24                 CMP             W8, #0xB
.text:000000000000BA28                 B.EQ            loc_BA48
.text:000000000000BA2C                 CMP             W19, #0xE
.text:000000000000BA30                 B.HI            loc_BB8C
.text:000000000000BA34                 MOV             W8, #1
.text:000000000000BA38                 LSL             W8, W8, W19
.text:000000000000BA3C                 MOV             W9, #0x4028
.text:000000000000BA40                 AND             W8, W8, W9
.text:000000000000BA44                 CBZ             W8, loc_BB8C
.text:000000000000BA48 loc_BA48                                ; CODE XREF: isRestrictedNwd+19C↑j
.text:000000000000BA48                 MOV             W8, #0xA4
.text:000000000000BA4C                 STRB            W8, [SP,#0x180+var_160+1]
.text:000000000000BA50                 MOV             W8, #4
.text:000000000000BA54                 STRB            W8, [SP,#0x180+var_160+2]
.text:000000000000BA58                 MOV             W8, #8
.text:000000000000BA5C                 STRH            W8, [SP,#0x180+var_15C]
.text:000000000000BA60                 MOV             W8, #1
.text:000000000000BA64                 STRB            W8, [SP,#0x180+var_150]
.text:000000000000BA68                 MOV             X8, SP
.text:000000000000BA6C                 STR             X8, [SP,#0x180+var_158]
.text:000000000000BA70                 MOV             W8, #0x100
.text:000000000000BA74                 STRH            W8, [SP,#0x180+var_168]
.text:000000000000BA78                 ADD             X8, SP, #0x180+s
.text:000000000000BA7C                 ADD             X0, SP, #0x180+var_160
.text:000000000000BA80                 ADD             X1, SP, #0x180+var_178
.text:000000000000BA84                 STRB            WZR, [SP,#0x180+var_160]
.text:000000000000BA88                 STRB            WZR, [SP,#0x180+var_160+3]
.text:000000000000BA8C                 STR             WZR, [SP,#0x180+var_14C]
.text:000000000000BA90                 STRB            WZR, [SP,#0x180+var_15A]
.text:000000000000BA94                 STR             X8, [SP,#0x180+var_170]
.text:000000000000BA98                 BL              .secEseSPI_transceive
.text:000000000000BA9C                 AND             W3, W0, #0xFFFF
.text:000000000000BAA0                 CBZ             W3, loc_BBA8
.text:000000000000BAA4                 ADRP            X1, #unk_10DEC@PAGE
.text:000000000000BAA8                 ADRP            X2, #aGetacdumpnwdGt@PAGE ; "getACDumpNwd, GTO failed to SELECT ISD,"...
.text:000000000000BAAC                 ADD             X1, X1, #unk_10DEC@PAGEOFF
.text:000000000000BAB0                 ADD             X2, X2, #aGetacdumpnwdGt@PAGEOFF ; "getACDumpNwd, GTO failed to SELECT ISD,"...
.text:000000000000BAB4                 B               loc_BB5C
.text:000000000000BAB8 ; ---------------------------------------------------------------------------
.text:000000000000BAB8 loc_BAB8                                ; CODE XREF: isRestrictedNwd+184↑j
.text:000000000000BAB8                                         ; isRestrictedNwd+190↑j
.text:000000000000BAB8                 MOV             W8, #0xA4
.text:000000000000BABC                 STRB            W8, [SP,#0x180+var_160+1]
.text:000000000000BAC0                 MOV             W8, #4
.text:000000000000BAC4                 STRB            W8, [SP,#0x180+var_160+2]
.text:000000000000BAC8                 MOV             W8, #0xC
.text:000000000000BACC                 STRH            W8, [SP,#0x180+var_15C]
.text:000000000000BAD0                 MOV             W8, #1
.text:000000000000BAD4                 STRB            W8, [SP,#0x180+var_150]
.text:000000000000BAD8                 ADD             X8, SP, #0x180+var_148
.text:000000000000BADC                 STR             X8, [SP,#0x180+var_158]
.text:000000000000BAE0                 MOV             W8, #0x100
.text:000000000000BAE4                 STRH            W8, [SP,#0x180+var_168]
.text:000000000000BAE8                 ADD             X8, SP, #0x180+s
.text:000000000000BAEC                 ADD             X0, SP, #0x180+var_160
.text:000000000000BAF0                 ADD             X1, SP, #0x180+var_178
.text:000000000000BAF4                 STRB            WZR, [SP,#0x180+var_160]
.text:000000000000BAF8                 STRB            WZR, [SP,#0x180+var_160+3]
.text:000000000000BAFC                 STR             WZR, [SP,#0x180+var_14C]
.text:000000000000BB00                 STRB            WZR, [SP,#0x180+var_15A]
.text:000000000000BB04                 STR             X8, [SP,#0x180+var_170]
.text:000000000000BB08                 BL              .secEseSPI_transceive
.text:000000000000BB0C                 AND             W3, W0, #0xFFFF
.text:000000000000BB10                 CBZ             W3, loc_BBA8
.text:000000000000BB14                 ADRP            X1, #unk_10DEC@PAGE
.text:000000000000BB18                 ADRP            X2, #aGetacdumpnwdOt@PAGE ; "getACDumpNwd, OT failed to SELECT FFFF,"...
.text:000000000000BB1C                 ADD             X1, X1, #unk_10DEC@PAGEOFF
.text:000000000000BB20                 ADD             X2, X2, #aGetacdumpnwdOt@PAGEOFF ; "getACDumpNwd, OT failed to SELECT FFFF,"...
.text:000000000000BB24                 B               loc_BB5C
.text:000000000000BB28 ; ---------------------------------------------------------------------------
.text:000000000000BB28 loc_BB28                                ; CODE XREF: isRestrictedNwd+168↑j
.text:000000000000BB28                 MOV             W8, #0x21FFCA80
.text:000000000000BB30                 ADD             X0, SP, #0x180+var_160
.text:000000000000BB34                 ADD             X1, SP, #0x180+var_178
.text:000000000000BB38                 STR             W8, [SP,#0x180+var_160]
.text:000000000000BB3C                 STRB            WZR, [SP,#0x180+var_150]
.text:000000000000BB40                 BL              .secEseSPI_transceive
.text:000000000000BB44                 AND             W3, W0, #0xFFFF
.text:000000000000BB48                 CBZ             W3, loc_BBA8
.text:000000000000BB4C                 ADRP            X1, #unk_10DEC@PAGE
.text:000000000000BB50                 ADRP            X2, #aGetacdumpnwdNx_0@PAGE ; "getACDumpNwd, NXP failed to GET MEMORY,"...
.text:000000000000BB54                 ADD             X1, X1, #unk_10DEC@PAGEOFF
.text:000000000000BB58                 ADD             X2, X2, #aGetacdumpnwdNx_0@PAGEOFF ; "getACDumpNwd, NXP failed to GET MEMORY,"...
.text:000000000000BB5C loc_BB5C                                ; CODE XREF: isRestrictedNwd+17C↑j
.text:000000000000BB5C                                         ; isRestrictedNwd+228↑j ...
.text:000000000000BB5C                 MOV             W0, #6
.text:000000000000BB60                 BL              .__android_log_print
.text:000000000000BB64                 MOV             W0, #0xFFFFFFF1
.text:000000000000BB68 loc_BB68                                ; CODE XREF: isRestrictedNwd+B4↑j
.text:000000000000BB68                                         ; isRestrictedNwd+440↓j ...
.text:000000000000BB68                 LDUR            X8, [X29,#var_38]
.text:000000000000BB6C                 SUB             X8, X21, X8
.text:000000000000BB70                 CBNZ            X8, loc_BD14
.text:000000000000BB74                 SUB             SP, X29, #0x30 ; '0'
.text:000000000000BB78                 LDP             X29, X30, [SP,#0x30+var_s0]
.text:000000000000BB7C                 LDP             X20, X19, [SP,#0x30+var_10]
.text:000000000000BB80                 LDP             X22, X21, [SP,#0x30+var_20]
.text:000000000000BB84                 LDP             X24, X23, [SP+0x30+var_30],#0x40
.text:000000000000BB88                 RET
.text:000000000000BB8C ; ---------------------------------------------------------------------------
.text:000000000000BB8C loc_BB8C                                ; CODE XREF: isRestrictedNwd+1A4↑j
.text:000000000000BB8C                                         ; isRestrictedNwd+1B8↑j
.text:000000000000BB8C                 ADRP            X1, #unk_10DEC@PAGE
.text:000000000000BB90                 ADRP            X2, #aGetacdumpnwdFa@PAGE ; "getACDumpNwd, Failed to identify which "...
.text:000000000000BB94                 ADD             X1, X1, #unk_10DEC@PAGEOFF
.text:000000000000BB98                 ADD             X2, X2, #aGetacdumpnwdFa@PAGEOFF ; "getACDumpNwd, Failed to identify which "...
.text:000000000000BB9C                 MOV             W0, #6
.text:000000000000BBA0                 MOV             W3, W19
.text:000000000000BBA4                 BL              .__android_log_print
.text:000000000000BBA8 loc_BBA8                                ; CODE XREF: isRestrictedNwd+214↑j
.text:000000000000BBA8                                         ; isRestrictedNwd+284↑j ...
.text:000000000000BBA8                 LDRH            W8, [SP,#0x180+var_178]
.text:000000000000BBAC                 ADRP            X20, #unk_10DEC@PAGE
.text:000000000000BBB0                 ADD             X20, X20, #unk_10DEC@PAGEOFF
.text:000000000000BBB4                 ADRP            X2, #aGetacdumpnwdPr@PAGE ; "getACDumpNwd,  pRsp.sw = %02X%02X"
.text:000000000000BBB8                 AND             W3, W8, #0xFF
.text:000000000000BBBC                 LSR             W4, W8, #8
.text:000000000000BBC0                 ADD             X2, X2, #aGetacdumpnwdPr@PAGEOFF ; "getACDumpNwd,  pRsp.sw = %02X%02X"
.text:000000000000BBC4                 MOV             W0, #4
.text:000000000000BBC8                 MOV             X1, X20
.text:000000000000BBCC                 BL              .__android_log_print
.text:000000000000BBD0                 LDR             X8, [SP,#0x180+var_170]
.text:000000000000BBD4                 ADRP            X2, #aGetacdumpnwdPr_0@PAGE ; "getACDumpNwd,  pRsp.pdata = %02X"
.text:000000000000BBD8                 ADD             X2, X2, #aGetacdumpnwdPr_0@PAGEOFF ; "getACDumpNwd,  pRsp.pdata = %02X"
.text:000000000000BBDC                 MOV             W0, #4
.text:000000000000BBE0                 LDRB            W3, [X8]
.text:000000000000BBE4                 MOV             X1, X20
.text:000000000000BBE8                 BL              .__android_log_print
.text:000000000000BBEC                 LDRH            W3, [SP,#0x180+var_168]
.text:000000000000BBF0                 ADRP            X2, #aGetacdumpnwdPr_1@PAGE ; "getACDumpNwd,  pRsp.len = %d"
.text:000000000000BBF4                 ADD             X2, X2, #aGetacdumpnwdPr_1@PAGEOFF ; "getACDumpNwd,  pRsp.len = %d"
.text:000000000000BBF8                 MOV             W0, #4
.text:000000000000BBFC                 MOV             X1, X20
.text:000000000000BC00                 BL              .__android_log_print
.text:000000000000BC04                 CBZ             W22, loc_BC34
.text:000000000000BC08                 LDRH            W8, [SP,#0x180+var_178]
.text:000000000000BC0C                 MOV             W9, #0xA566
.text:000000000000BC10                 CMP             W8, W9
.text:000000000000BC14                 B.NE            loc_BCD0
.text:000000000000BC18                 LDRH            W8, [SP,#0x180+var_168]
.text:000000000000BC1C                 CBNZ            W8, loc_BCD0
.text:000000000000BC20                 ADRP            X1, #unk_10DEC@PAGE
.text:000000000000BC24                 ADRP            X2, #aGetacdumpnwdNx_1@PAGE ; "getACDumpNwd, NXP ESE is RESTRICTED"
.text:000000000000BC28                 ADD             X1, X1, #unk_10DEC@PAGEOFF
.text:000000000000BC2C                 ADD             X2, X2, #aGetacdumpnwdNx_1@PAGEOFF ; "getACDumpNwd, NXP ESE is RESTRICTED"
.text:000000000000BC30                 B               loc_BCC0
.text:000000000000BC34 ; ---------------------------------------------------------------------------
.text:000000000000BC34 loc_BC34                                ; CODE XREF: isRestrictedNwd+378↑j
.text:000000000000BC34                 CMP             W19, #2
.text:000000000000BC38                 B.NE            loc_BC6C
.text:000000000000BC3C                 LDRH            W8, [SP,#0x180+var_178]
.text:000000000000BC40                 MOV             W9, #0x826A
.text:000000000000BC44                 CMP             W8, W9
.text:000000000000BC48                 B.NE            loc_BCD0
.text:000000000000BC4C                 LDRH            W8, [SP,#0x180+var_168]
.text:000000000000BC50                 CMP             W8, #2
.text:000000000000BC54                 B.NE            loc_BCD0
.text:000000000000BC58                 ADRP            X1, #unk_10DEC@PAGE
.text:000000000000BC5C                 ADRP            X2, #aGetacdumpnwdOt_0@PAGE ; "getACDumpNwd, OT ESE is RESTRICTED"
.text:000000000000BC60                 ADD             X1, X1, #unk_10DEC@PAGEOFF
.text:000000000000BC64                 ADD             X2, X2, #aGetacdumpnwdOt_0@PAGEOFF ; "getACDumpNwd, OT ESE is RESTRICTED"
.text:000000000000BC68                 B               loc_BCC0
.text:000000000000BC6C ; ---------------------------------------------------------------------------
.text:000000000000BC6C loc_BC6C                                ; CODE XREF: isRestrictedNwd+3AC↑j
.text:000000000000BC6C                 ORR             W8, W19, #3
.text:000000000000BC70                 CMP             W8, #0xB
.text:000000000000BC74                 B.EQ            loc_BC94
.text:000000000000BC78                 CMP             W19, #0xE
.text:000000000000BC7C                 B.HI            loc_BCF0
.text:000000000000BC80                 MOV             W8, #1
.text:000000000000BC84                 LSL             W8, W8, W19
.text:000000000000BC88                 MOV             W9, #0x4028
.text:000000000000BC8C                 AND             W8, W8, W9
.text:000000000000BC90                 CBZ             W8, loc_BCF0
.text:000000000000BC94 loc_BC94                                ; CODE XREF: isRestrictedNwd+3E8↑j
.text:000000000000BC94                 LDRH            W8, [SP,#0x180+var_178]
.text:000000000000BC98                 MOV             W9, #0x826A
.text:000000000000BC9C                 CMP             W8, W9
.text:000000000000BCA0                 B.NE            loc_BCD0
.text:000000000000BCA4                 LDRH            W8, [SP,#0x180+var_168]
.text:000000000000BCA8                 CMP             W8, #2
.text:000000000000BCAC                 B.NE            loc_BCD0
.text:000000000000BCB0                 ADRP            X1, #unk_10DEC@PAGE
.text:000000000000BCB4                 ADRP            X2, #aGetacdumpnwdGe@PAGE ; "getACDumpNwd, GEMALTO ESE is RESTRICTED"
.text:000000000000BCB8                 ADD             X1, X1, #unk_10DEC@PAGEOFF
.text:000000000000BCBC                 ADD             X2, X2, #aGetacdumpnwdGe@PAGEOFF ; "getACDumpNwd, GEMALTO ESE is RESTRICTED"
.text:000000000000BCC0 loc_BCC0                                ; CODE XREF: isRestrictedNwd+3A4↑j
.text:000000000000BCC0                                         ; isRestrictedNwd+3DC↑j
.text:000000000000BCC0                 MOV             W0, #6
.text:000000000000BCC4                 BL              .__android_log_print
.text:000000000000BCC8                 MOV             W0, WZR
.text:000000000000BCCC                 B               loc_BB68
.text:000000000000BCD0 ; ---------------------------------------------------------------------------
.text:000000000000BCD0 loc_BCD0                                ; CODE XREF: isRestrictedNwd+388↑j
.text:000000000000BCD0                                         ; isRestrictedNwd+390↑j ...
.text:000000000000BCD0                 ADRP            X1, #unk_10DEC@PAGE
.text:000000000000BCD4                 ADRP            X2, #aGetacdumpnwdEs@PAGE ; "getACDumpNwd, ESE is not restricted"
.text:000000000000BCD8                 ADD             X1, X1, #unk_10DEC@PAGEOFF
.text:000000000000BCDC                 ADD             X2, X2, #aGetacdumpnwdEs@PAGEOFF ; "getACDumpNwd, ESE is not restricted"
.text:000000000000BCE0                 MOV             W0, #4
.text:000000000000BCE4                 BL              .__android_log_print
.text:000000000000BCE8                 MOV             W0, #1
.text:000000000000BCEC                 B               loc_BB68
.text:000000000000BCF0 ; ---------------------------------------------------------------------------
.text:000000000000BCF0 loc_BCF0                                ; CODE XREF: isRestrictedNwd+3F0↑j
.text:000000000000BCF0                                         ; isRestrictedNwd+404↑j
.text:000000000000BCF0                 ADRP            X1, #unk_10DEC@PAGE
.text:000000000000BCF4                 ADRP            X2, #aGetacdumpnwdUn@PAGE ; "getACDumpNwd, UNKNOWN ESE. Check restri"...
.text:000000000000BCF8                 ADD             X1, X1, #unk_10DEC@PAGEOFF
.text:000000000000BCFC                 ADD             X2, X2, #aGetacdumpnwdUn@PAGEOFF ; "getACDumpNwd, UNKNOWN ESE. Check restri"...
.text:000000000000BD00                 MOV             W0, #6
.text:000000000000BD04                 MOV             W3, W19
.text:000000000000BD08                 BL              .__android_log_print
.text:000000000000BD0C                 MOV             W0, #2
.text:000000000000BD10                 B               loc_BB68
.text:000000000000BD14 ; ---------------------------------------------------------------------------
.text:000000000000BD14 loc_BD14                                ; CODE XREF: isRestrictedNwd+2E4↑j
.text:000000000000BD14                 BL              .__stack_chk_fail
.text:000000000000BD14 ; } // starts at B88C
.text:000000000000BD14 ; End of function isRestrictedNwd
.text:000000000000BD18 ; =============== S U B R O U T I N E =======================================
.text:000000000000BD18 ; Attributes: bp-based frame
.text:000000000000BD18                 EXPORT isAttackedNwd
.text:000000000000BD18 isAttackedNwd                           ; CODE XREF: .isAttackedNwd+C↑j
.text:000000000000BD18                                         ; DATA XREF: LOAD:0000000000000790↑o ...
.text:000000000000BD18 var_1A0         = -0x1A0
.text:000000000000BD18 var_198         = -0x198
.text:000000000000BD18 var_190         = -0x190
.text:000000000000BD18 var_188         = -0x188
.text:000000000000BD18 var_180         = -0x180
.text:000000000000BD18 var_178         = -0x178
.text:000000000000BD18 var_170         = -0x170
.text:000000000000BD18 var_16F         = -0x16F
.text:000000000000BD18 var_16E         = -0x16E
.text:000000000000BD18 var_16D         = -0x16D
.text:000000000000BD18 var_16C         = -0x16C
.text:000000000000BD18 var_16A         = -0x16A
.text:000000000000BD18 var_168         = -0x168
.text:000000000000BD18 var_160         = -0x160
.text:000000000000BD18 var_15C         = -0x15C
.text:000000000000BD18 var_158         = -0x158
.text:000000000000BD18 var_153         = -0x153
.text:000000000000BD18 s               = -0x148
.text:000000000000BD18 var_48          = -0x48
.text:000000000000BD18 var_40          = -0x40
.text:000000000000BD18 var_30          = -0x30
.text:000000000000BD18 var_20          = -0x20
.text:000000000000BD18 var_10          = -0x10
.text:000000000000BD18 var_s0          =  0
.text:000000000000BD18 ; __unwind {
.text:000000000000BD18                 STP             X28, X27, [SP,#-0x10+var_40]!
.text:000000000000BD1C                 STP             X24, X23, [SP,#0x40+var_30]
.text:000000000000BD20                 STP             X22, X21, [SP,#0x40+var_20]
.text:000000000000BD24                 STP             X20, X19, [SP,#0x40+var_10]
.text:000000000000BD28                 STP             X29, X30, [SP,#0x40+var_s0]
.text:000000000000BD2C                 ADD             X29, SP, #0x40
.text:000000000000BD30                 SUB             SP, SP, #0x160
.text:000000000000BD34                 ADRP            X21, #__stack_chk_guard_ptr@PAGE
.text:000000000000BD38                 LDR             X21, [X21,#__stack_chk_guard_ptr@PAGEOFF]
.text:000000000000BD3C                 ADD             X0, SP, #0x1A0+s ; s
.text:000000000000BD40                 MOV             W2, #0x100 ; n
.text:000000000000BD44                 MOV             W1, WZR ; c
.text:000000000000BD48                 LDR             X21, [X21]
.text:000000000000BD4C                 STUR            X21, [X29,#var_48]
.text:000000000000BD50                 BL              .memset
.text:000000000000BD54                 ADRP            X8, #qword_14716@PAGE
.text:000000000000BD58                 ADD             X8, X8, #qword_14716@PAGEOFF
.text:000000000000BD5C                 LDUR            X10, [X8,#5]
.text:000000000000BD60                 LDR             X8, [X8]
.text:000000000000BD64                 MOV             X9, #0x51010000A0
.text:000000000000BD70                 MOV             W11, #0x3CDF
.text:000000000000BD74                 STP             X11, X9, [SP,#0x1A0+var_198]
.text:000000000000BD78                 STUR            X10, [SP,#0x1A0+var_153]
.text:000000000000BD7C                 STR             X8, [SP,#0x48]
.text:000000000000BD80                 BL              .getVendor
.text:000000000000BD84                 MOV             W19, W0
.text:000000000000BD88                 BL              .isFactoryBinary
.text:000000000000BD8C                 CMP             W0, #1
.text:000000000000BD90                 B.EQ            loc_BDE0
.text:000000000000BD94                 BL              .getVendor
.text:000000000000BD98                 CMP             W0, #0xE
.text:000000000000BD9C                 B.EQ            loc_BDE0
.text:000000000000BDA0                 ORR             W8, W0, #1
.text:000000000000BDA4                 CMP             W8, #0xB
.text:000000000000BDA8                 B.EQ            loc_BDE0
.text:000000000000BDAC                 SUB             W9, W0, #0xF
.text:000000000000BDB0                 CMP             W9, #2
.text:000000000000BDB4                 B.CC            loc_BDE0
.text:000000000000BDB8                 CMP             W8, #0xD
.text:000000000000BDBC                 B.EQ            loc_BDE0
.text:000000000000BDC0                 ADRP            X1, #unk_10DEC@PAGE
.text:000000000000BDC4                 ADRP            X2, #aInvalidApiNotF_0@PAGE ; "Invalid API, not factory binary and don"...
.text:000000000000BDC8                 ADD             X1, X1, #unk_10DEC@PAGEOFF
.text:000000000000BDCC                 ADD             X2, X2, #aInvalidApiNotF_0@PAGEOFF ; "Invalid API, not factory binary and don"...
.text:000000000000BDD0                 MOV             W0, #6
.text:000000000000BDD4                 BL              .__android_log_print
.text:000000000000BDD8                 MOV             W0, #0xFF
.text:000000000000BDDC                 B               loc_C01C
.text:000000000000BDE0 ; ---------------------------------------------------------------------------
.text:000000000000BDE0 loc_BDE0                                ; CODE XREF: isAttackedNwd+78↑j
.text:000000000000BDE0                                         ; isAttackedNwd+84↑j ...
.text:000000000000BDE0                 ADD             X0, SP, #0x1A0+s ; s
.text:000000000000BDE4                 MOV             W2, #0x100 ; n
.text:000000000000BDE8                 MOV             W1, WZR ; c
.text:000000000000BDEC                 STP             XZR, XZR, [SP,#0x1A0+var_168]
.text:000000000000BDF0                 STP             XZR, XZR, [SP,#0x1A0+var_178]
.text:000000000000BDF4                 STP             XZR, XZR, [SP,#0x1A0+var_188]
.text:000000000000BDF8                 MOV             W20, #0x100
.text:000000000000BDFC                 ADD             X24, SP, #0x1A0+s
.text:000000000000BE00                 BL              .memset
.text:000000000000BE04                 ORR             W22, W19, #8
.text:000000000000BE08                 ORR             W23, W19, #2
.text:000000000000BE0C                 CMP             W19, #0x10
.text:000000000000BE10                 B.EQ            loc_BED8
.text:000000000000BE14                 CMP             W23, #0xF
.text:000000000000BE18                 B.EQ            loc_BED8
.text:000000000000BE1C                 CMP             W19, #1
.text:000000000000BE20                 B.EQ            loc_BED8
.text:000000000000BE24                 CMP             W22, #0xC
.text:000000000000BE28                 B.EQ            loc_BED8
.text:000000000000BE2C                 CMP             W19, #7
.text:000000000000BE30                 B.EQ            loc_BF40
.text:000000000000BE34                 ORR             W8, W19, #4
.text:000000000000BE38                 CMP             W8, #6
.text:000000000000BE3C                 B.EQ            loc_BF40
.text:000000000000BE40                 ORR             W8, W19, #3
.text:000000000000BE44                 CMP             W8, #0xB
.text:000000000000BE48                 B.EQ            loc_BE68
.text:000000000000BE4C                 CMP             W19, #0xE
.text:000000000000BE50                 B.HI            loc_C044
.text:000000000000BE54                 MOV             W8, #1
.text:000000000000BE58                 LSL             W8, W8, W19
.text:000000000000BE5C                 MOV             W9, #0x4028
.text:000000000000BE60                 AND             W8, W8, W9
.text:000000000000BE64                 CBZ             W8, loc_C044
.text:000000000000BE68 loc_BE68                                ; CODE XREF: isAttackedNwd+130↑j
.text:000000000000BE68                 MOV             W8, #0xA4
.text:000000000000BE6C                 STRB            W8, [SP,#0x1A0+var_16F]
.text:000000000000BE70                 MOV             W8, #0xD
.text:000000000000BE74                 STRH            W8, [SP,#0x1A0+var_16C]
.text:000000000000BE78                 ADD             X8, SP, #0x1A0+var_158
.text:000000000000BE7C                 STR             X8, [SP,#0x1A0+var_168]
.text:000000000000BE80                 MOV             W8, #0x100
.text:000000000000BE84                 MOV             W9, #4
.text:000000000000BE88                 MOV             W20, #1
.text:000000000000BE8C                 STRH            W8, [SP,#0x1A0+var_178]
.text:000000000000BE90                 ADD             X8, SP, #0x1A0+s
.text:000000000000BE94                 ADD             X0, SP, #0x1A0+var_170
.text:000000000000BE98                 ADD             X1, SP, #0x1A0+var_188
.text:000000000000BE9C                 STRB            WZR, [SP,#0x1A0+var_170]
.text:000000000000BEA0                 STRB            W9, [SP,#0x1A0+var_16E]
.text:000000000000BEA4                 STRB            WZR, [SP,#0x1A0+var_16D]
.text:000000000000BEA8                 STR             WZR, [SP,#0x1A0+var_15C]
.text:000000000000BEAC                 STRB            WZR, [SP,#0x1A0+var_16A]
.text:000000000000BEB0                 STRB            W20, [SP,#0x1A0+var_160]
.text:000000000000BEB4                 STR             X8, [SP,#0x1A0+var_180]
.text:000000000000BEB8                 BL              .secEseSPI_transceive
.text:000000000000BEBC                 AND             W3, W0, #0xFFFF
.text:000000000000BEC0                 CBZ             W3, loc_BFBC
.text:000000000000BEC4                 ADRP            X1, #unk_10DEC@PAGE
.text:000000000000BEC8                 ADRP            X2, #aIsattackednwdG@PAGE ; "isAttackedNwd, GTO failed to SELECT FDC"...
.text:000000000000BECC                 ADD             X1, X1, #unk_10DEC@PAGEOFF
.text:000000000000BED0                 ADD             X2, X2, #aIsattackednwdG@PAGEOFF ; "isAttackedNwd, GTO failed to SELECT FDC"...
.text:000000000000BED4                 B               loc_C010
.text:000000000000BED8 ; ---------------------------------------------------------------------------
.text:000000000000BED8 loc_BED8                                ; CODE XREF: isAttackedNwd+F8↑j
.text:000000000000BED8                                         ; isAttackedNwd+100↑j ...
.text:000000000000BED8                 MOV             W8, #0xA4
.text:000000000000BEDC                 MOV             W9, #4
.text:000000000000BEE0                 STRB            W8, [SP,#0x1A0+var_16F]
.text:000000000000BEE4                 MOV             W8, #8
.text:000000000000BEE8                 STRH            W20, [SP,#0x1A0+var_178]
.text:000000000000BEEC                 STRB            W9, [SP,#0x1A0+var_16E]
.text:000000000000BEF0                 MOV             W9, #1
.text:000000000000BEF4                 STRH            W8, [SP,#0x1A0+var_16C]
.text:000000000000BEF8                 ADD             X8, SP, #0x1A0+var_190
.text:000000000000BEFC                 ADD             X0, SP, #0x1A0+var_170
.text:000000000000BF00                 ADD             X1, SP, #0x1A0+var_188
.text:000000000000BF04                 STRB            WZR, [SP,#0x1A0+var_170]
.text:000000000000BF08                 STRB            WZR, [SP,#0x1A0+var_16D]
.text:000000000000BF0C                 STR             WZR, [SP,#0x1A0+var_15C]
.text:000000000000BF10                 STRB            WZR, [SP,#0x1A0+var_16A]
.text:000000000000BF14                 STRB            W9, [SP,#0x1A0+var_160]
.text:000000000000BF18                 STR             X8, [SP,#0x1A0+var_168]
.text:000000000000BF1C                 STR             X24, [SP,#0x1A0+var_180]
.text:000000000000BF20                 BL              .secEseSPI_transceive
.text:000000000000BF24                 AND             W3, W0, #0xFFFF
.text:000000000000BF28                 CBZ             W3, loc_BF64
.text:000000000000BF2C                 ADRP            X1, #unk_10DEC@PAGE
.text:000000000000BF30                 ADRP            X2, #aIsattackednwdN@PAGE ; "isAttackedNwd, NXP failed to SELECT FDC"...
.text:000000000000BF34                 ADD             X1, X1, #unk_10DEC@PAGEOFF
.text:000000000000BF38                 ADD             X2, X2, #aIsattackednwdN@PAGEOFF ; "isAttackedNwd, NXP failed to SELECT FDC"...
.text:000000000000BF3C                 B               loc_C010
.text:000000000000BF40 ; ---------------------------------------------------------------------------
.text:000000000000BF40 loc_BF40                                ; CODE XREF: isAttackedNwd+118↑j
.text:000000000000BF40                                         ; isAttackedNwd+124↑j
.text:000000000000BF40                 ADRP            X1, #unk_10DEC@PAGE
.text:000000000000BF44                 ADRP            X2, #aIsattackednwdO@PAGE ; "isAttackedNwd, OT is not supported GET "...
.text:000000000000BF48                 MOV             W3, WZR
.text:000000000000BF4C                 ADD             X1, X1, #unk_10DEC@PAGEOFF
.text:000000000000BF50                 ADD             X2, X2, #aIsattackednwdO@PAGEOFF ; "isAttackedNwd, OT is not supported GET "...
.text:000000000000BF54                 MOV             W0, #6
.text:000000000000BF58                 BL              .__android_log_print
.text:000000000000BF5C                 MOV             W0, WZR
.text:000000000000BF60                 B               loc_C01C
.text:000000000000BF64 ; ---------------------------------------------------------------------------
.text:000000000000BF64 loc_BF64                                ; CODE XREF: isAttackedNwd+210↑j
.text:000000000000BF64                 MOV             W8, #0x80
.text:000000000000BF68                 MOV             W9, #0xCA
.text:000000000000BF6C                 MOV             W10, #0xFE
.text:000000000000BF70                 MOV             W11, #2
.text:000000000000BF74                 ADD             X12, SP, #0x1A0+var_198
.text:000000000000BF78                 ADD             X0, SP, #0x1A0+var_170
.text:000000000000BF7C                 ADD             X1, SP, #0x1A0+var_188
.text:000000000000BF80                 STRB            W8, [SP,#0x1A0+var_170]
.text:000000000000BF84                 STRB            W9, [SP,#0x1A0+var_16F]
.text:000000000000BF88                 STRB            WZR, [SP,#0x1A0+var_16E]
.text:000000000000BF8C                 STRB            W10, [SP,#0x1A0+var_16D]
.text:000000000000BF90                 STRH            W11, [SP,#0x1A0+var_16C]
.text:000000000000BF94                 STR             X12, [SP,#0x1A0+var_168]
.text:000000000000BF98                 STR             WZR, [SP,#0x1A0+var_15C]
.text:000000000000BF9C                 BL              .secEseSPI_transceive
.text:000000000000BFA0                 AND             W3, W0, #0xFFFF
.text:000000000000BFA4                 CBZ             W3, loc_C060
.text:000000000000BFA8                 ADRP            X1, #unk_10DEC@PAGE
.text:000000000000BFAC                 ADRP            X2, #aIsattackednwdN_0@PAGE ; "isAttackedNwd, NXP failed to GET ATTACK"...
.text:000000000000BFB0                 ADD             X1, X1, #unk_10DEC@PAGEOFF
.text:000000000000BFB4                 ADD             X2, X2, #aIsattackednwdN_0@PAGEOFF ; "isAttackedNwd, NXP failed to GET ATTACK"...
.text:000000000000BFB8                 B               loc_C010
.text:000000000000BFBC ; ---------------------------------------------------------------------------
.text:000000000000BFBC loc_BFBC                                ; CODE XREF: isAttackedNwd+1A8↑j
.text:000000000000BFBC                 MOV             W8, #0x80
.text:000000000000BFC0                 MOV             W9, #3
.text:000000000000BFC4                 ADD             X0, SP, #0x1A0+var_170
.text:000000000000BFC8                 ADD             X1, SP, #0x1A0+var_188
.text:000000000000BFCC                 STRB            W8, [SP,#0x1A0+var_170]
.text:000000000000BFD0                 STRB            W9, [SP,#0x1A0+var_16F]
.text:000000000000BFD4                 STRB            WZR, [SP,#0x1A0+var_16E]
.text:000000000000BFD8                 STRB            WZR, [SP,#0x1A0+var_16D]
.text:000000000000BFDC                 STR             W20, [SP,#0x1A0+var_15C]
.text:000000000000BFE0                 STR             XZR, [SP,#0x1A0+var_168]
.text:000000000000BFE4                 STRB            WZR, [SP,#0x1A0+var_16A]
.text:000000000000BFE8                 STRH            WZR, [SP,#0x1A0+var_16C]
.text:000000000000BFEC                 STRB            W20, [SP,#0x1A0+var_160]
.text:000000000000BFF0                 STRH            W20, [SP,#0x1A0+var_178]
.text:000000000000BFF4                 BL              .secEseSPI_transceive
.text:000000000000BFF8                 AND             W3, W0, #0xFFFF
.text:000000000000BFFC                 CBZ             W3, loc_C060
.text:000000000000C000                 ADRP            X1, #unk_10DEC@PAGE
.text:000000000000C004                 ADRP            X2, #aIsattackednwdG_0@PAGE ; "isAttackedNwd, GTO failed to GET ATTACK"...
.text:000000000000C008                 ADD             X1, X1, #unk_10DEC@PAGEOFF
.text:000000000000C00C                 ADD             X2, X2, #aIsattackednwdG_0@PAGEOFF ; "isAttackedNwd, GTO failed to GET ATTACK"...
.text:000000000000C010 loc_C010                                ; CODE XREF: isAttackedNwd+1BC↑j
.text:000000000000C010                                         ; isAttackedNwd+224↑j ...
.text:000000000000C010                 MOV             W0, #6
.text:000000000000C014                 BL              .__android_log_print
.text:000000000000C018                 MOV             W0, #0xFFFFFFEE
.text:000000000000C01C loc_C01C                                ; CODE XREF: isAttackedNwd+C4↑j
.text:000000000000C01C                                         ; isAttackedNwd+248↑j ...
.text:000000000000C01C                 LDUR            X8, [X29,#var_48]
.text:000000000000C020                 SUB             X8, X21, X8
.text:000000000000C024                 CBNZ            X8, loc_C230
.text:000000000000C028                 SUB             SP, X29, #0x40 ; '@'
.text:000000000000C02C                 LDP             X29, X30, [SP,#0x40+var_s0]
.text:000000000000C030                 LDP             X20, X19, [SP,#0x40+var_10]
.text:000000000000C034                 LDP             X22, X21, [SP,#0x40+var_20]
.text:000000000000C038                 LDP             X24, X23, [SP,#0x40+var_30]
.text:000000000000C03C                 LDP             X28, X27, [SP+0x40+var_40],#0x50
.text:000000000000C040                 RET
.text:000000000000C044 ; ---------------------------------------------------------------------------
.text:000000000000C044 loc_C044                                ; CODE XREF: isAttackedNwd+138↑j
.text:000000000000C044                                         ; isAttackedNwd+14C↑j
.text:000000000000C044                 ADRP            X1, #unk_10DEC@PAGE
.text:000000000000C048                 ADRP            X2, #aIsattackednwdF@PAGE ; "isAttackedNwd, Failed to identify which"...
.text:000000000000C04C                 ADD             X1, X1, #unk_10DEC@PAGEOFF
.text:000000000000C050                 ADD             X2, X2, #aIsattackednwdF@PAGEOFF ; "isAttackedNwd, Failed to identify which"...
.text:000000000000C054                 MOV             W0, #6
.text:000000000000C058                 MOV             W3, W19
.text:000000000000C05C                 BL              .__android_log_print
.text:000000000000C060 loc_C060                                ; CODE XREF: isAttackedNwd+28C↑j
.text:000000000000C060                                         ; isAttackedNwd+2E4↑j
.text:000000000000C060                 LDRH            W8, [SP,#0x1A0+var_188]
.text:000000000000C064                 ADRP            X20, #unk_10DEC@PAGE
.text:000000000000C068                 ADD             X20, X20, #unk_10DEC@PAGEOFF
.text:000000000000C06C                 ADRP            X2, #aIsattackednwdP@PAGE ; "isAttackedNwd,  pRsp.sw = %02X%02X"
.text:000000000000C070                 AND             W3, W8, #0xFF
.text:000000000000C074                 LSR             W4, W8, #8
.text:000000000000C078                 ADD             X2, X2, #aIsattackednwdP@PAGEOFF ; "isAttackedNwd,  pRsp.sw = %02X%02X"
.text:000000000000C07C                 MOV             W0, #4
.text:000000000000C080                 MOV             X1, X20
.text:000000000000C084                 BL              .__android_log_print
.text:000000000000C088                 LDR             X8, [SP,#0x1A0+var_180]
.text:000000000000C08C                 ADRP            X2, #aIsattackednwdP_0@PAGE ; "isAttackedNwd,  pRsp.pdata = %02X%02X%0"...
.text:000000000000C090                 ADD             X2, X2, #aIsattackednwdP_0@PAGEOFF ; "isAttackedNwd,  pRsp.pdata = %02X%02X%0"...
.text:000000000000C094                 MOV             W0, #4
.text:000000000000C098                 LDRB            W3, [X8]
.text:000000000000C09C                 LDRB            W4, [X8,#1]
.text:000000000000C0A0                 LDRB            W5, [X8,#2]
.text:000000000000C0A4                 LDRB            W6, [X8,#3]
.text:000000000000C0A8                 LDRB            W7, [X8,#4]
.text:000000000000C0AC                 LDRB            W8, [X8,#5]
.text:000000000000C0B0                 MOV             X1, X20
.text:000000000000C0B4                 STR             W8, [SP,#0x1A0+var_1A0]
.text:000000000000C0B8                 BL              .__android_log_print
.text:000000000000C0BC                 LDRH            W3, [SP,#0x1A0+var_178]
.text:000000000000C0C0                 ADRP            X2, #aIsattackednwdP_1@PAGE ; "isAttackedNwd,  pRsp.len = %d"
.text:000000000000C0C4                 ADD             X2, X2, #aIsattackednwdP_1@PAGEOFF ; "isAttackedNwd,  pRsp.len = %d"
.text:000000000000C0C8                 MOV             W0, #4
.text:000000000000C0CC                 MOV             X1, X20
.text:000000000000C0D0                 BL              .__android_log_print
.text:000000000000C0D4                 LDRH            W8, [SP,#0x1A0+var_188]
.text:000000000000C0D8                 AND             W9, W8, #0xFF
.text:000000000000C0DC                 LSR             W4, W8, #8
.text:000000000000C0E0                 CMP             W9, #0x69 ; 'i'
.text:000000000000C0E4                 B.NE            loc_C110
.text:000000000000C0E8                 CMP             W4, #0x85
.text:000000000000C0EC                 B.NE            loc_C110
.text:000000000000C0F0                 ADRP            X1, #unk_10DEC@PAGE
.text:000000000000C0F4                 ADRP            X2, #aUnableToGetAtt@PAGE ; "Unable to get attacked. ISDk rotate or "...
.text:000000000000C0F8                 ADD             X1, X1, #unk_10DEC@PAGEOFF
.text:000000000000C0FC                 ADD             X2, X2, #aUnableToGetAtt@PAGEOFF ; "Unable to get attacked. ISDk rotate or "...
.text:000000000000C100                 MOV             W0, #6
.text:000000000000C104                 BL              .__android_log_print
.text:000000000000C108                 MOV             W0, #3
.text:000000000000C10C                 B               loc_C01C
.text:000000000000C110 ; ---------------------------------------------------------------------------
.text:000000000000C110 loc_C110                                ; CODE XREF: isAttackedNwd+3CC↑j
.text:000000000000C110                                         ; isAttackedNwd+3D4↑j
.text:000000000000C110                 CMP             W19, #0x10
.text:000000000000C114                 B.EQ            loc_C180
.text:000000000000C118                 CMP             W23, #0xF
.text:000000000000C11C                 B.EQ            loc_C180
.text:000000000000C120                 CMP             W22, #0xC
.text:000000000000C124                 B.EQ            loc_C180
.text:000000000000C128                 ORR             W9, W19, #3
.text:000000000000C12C                 CMP             W9, #0xB
.text:000000000000C130                 B.EQ            loc_C144
.text:000000000000C134                 CMP             W19, #0xE
.text:000000000000C138                 B.EQ            loc_C144
.text:000000000000C13C                 CMP             W19, #5
.text:000000000000C140                 B.NE            loc_C20C
.text:000000000000C144 loc_C144                                ; CODE XREF: isAttackedNwd+418↑j
.text:000000000000C144                                         ; isAttackedNwd+420↑j
.text:000000000000C144                 CBNZ            W4, loc_C1CC
.text:000000000000C148                 AND             W9, W8, #0xFF
.text:000000000000C14C                 CMP             W9, #0x90
.text:000000000000C150                 B.NE            loc_C1CC
.text:000000000000C154                 LDRH            W9, [SP,#0x1A0+var_178]
.text:000000000000C158                 CBZ             W9, loc_C1CC
.text:000000000000C15C                 LDR             X8, [SP,#0x1A0+var_180]
.text:000000000000C160                 ADRP            X1, #unk_10DEC@PAGE
.text:000000000000C164                 ADD             X1, X1, #unk_10DEC@PAGEOFF
.text:000000000000C168                 LDRB            W8, [X8]
.text:000000000000C16C                 CMP             W8, #0x64 ; 'd'
.text:000000000000C170                 B.NE            loc_C1F4
.text:000000000000C174                 ADRP            X2, #aGemaltoEseIsAt@PAGE ; "GEMALTO ESE is ATTACKED"
.text:000000000000C178                 ADD             X2, X2, #aGemaltoEseIsAt@PAGEOFF ; "GEMALTO ESE is ATTACKED"
.text:000000000000C17C                 B               loc_C1A8
.text:000000000000C180 ; ---------------------------------------------------------------------------
.text:000000000000C180 loc_C180                                ; CODE XREF: isAttackedNwd+3FC↑j
.text:000000000000C180                                         ; isAttackedNwd+404↑j ...
.text:000000000000C180                 LDRH            W8, [SP,#0x1A0+var_178]
.text:000000000000C184                 CBZ             W8, loc_C1B8
.text:000000000000C188                 LDR             X8, [SP,#0x1A0+var_180]
.text:000000000000C18C                 LDRB            W8, [X8]
.text:000000000000C190                 CMP             W8, #0x5A ; 'Z'
.text:000000000000C194                 B.NE            loc_C1B8
.text:000000000000C198                 ADRP            X1, #unk_10DEC@PAGE
.text:000000000000C19C                 ADRP            X2, #aNxpEseIsAttack@PAGE ; "NXP ESE is ATTACKED"
.text:000000000000C1A0                 ADD             X1, X1, #unk_10DEC@PAGEOFF
.text:000000000000C1A4                 ADD             X2, X2, #aNxpEseIsAttack@PAGEOFF ; "NXP ESE is ATTACKED"
.text:000000000000C1A8 loc_C1A8                                ; CODE XREF: isAttackedNwd+464↑j
.text:000000000000C1A8                 MOV             W0, #6
.text:000000000000C1AC                 BL              .__android_log_print
.text:000000000000C1B0                 MOV             W0, WZR
.text:000000000000C1B4                 B               loc_C01C
.text:000000000000C1B8 ; ---------------------------------------------------------------------------
.text:000000000000C1B8 loc_C1B8                                ; CODE XREF: isAttackedNwd+46C↑j
.text:000000000000C1B8                                         ; isAttackedNwd+47C↑j
.text:000000000000C1B8                 ADRP            X1, #unk_10DEC@PAGE
.text:000000000000C1BC                 ADRP            X2, #aEseIsNotAttack@PAGE ; "ESE is not attacked"
.text:000000000000C1C0                 ADD             X1, X1, #unk_10DEC@PAGEOFF
.text:000000000000C1C4                 ADD             X2, X2, #aEseIsNotAttack@PAGEOFF ; "ESE is not attacked"
.text:000000000000C1C8                 B               loc_C1FC
.text:000000000000C1CC ; ---------------------------------------------------------------------------
.text:000000000000C1CC loc_C1CC                                ; CODE XREF: isAttackedNwd:loc_C144↑j
.text:000000000000C1CC                                         ; isAttackedNwd+438↑j ...
.text:000000000000C1CC                 LDR             X9, [SP,#0x1A0+var_180]
.text:000000000000C1D0                 ADRP            X1, #unk_10DEC@PAGE
.text:000000000000C1D4                 ADRP            X2, #unk_13158@PAGE
.text:000000000000C1D8                 AND             W3, W8, #0xFF
.text:000000000000C1DC                 LDRB            W5, [X9]
.text:000000000000C1E0                 ADD             X1, X1, #unk_10DEC@PAGEOFF
.text:000000000000C1E4                 ADD             X2, X2, #unk_13158@PAGEOFF
.text:000000000000C1E8                 MOV             W0, #4
.text:000000000000C1EC                 BL              .__android_log_print
.text:000000000000C1F0                 B               loc_C228
.text:000000000000C1F4 ; ---------------------------------------------------------------------------
.text:000000000000C1F4 loc_C1F4                                ; CODE XREF: isAttackedNwd+458↑j
.text:000000000000C1F4                 ADRP            X2, #aEseIsNotAttack_0@PAGE ; "ESE is NOT Attacked"
.text:000000000000C1F8                 ADD             X2, X2, #aEseIsNotAttack_0@PAGEOFF ; "ESE is NOT Attacked"
.text:000000000000C1FC loc_C1FC                                ; CODE XREF: isAttackedNwd+4B0↑j
.text:000000000000C1FC                 MOV             W0, #4
.text:000000000000C200                 BL              .__android_log_print
.text:000000000000C204                 MOV             W0, #1
.text:000000000000C208                 B               loc_C01C
.text:000000000000C20C ; ---------------------------------------------------------------------------
.text:000000000000C20C loc_C20C                                ; CODE XREF: isAttackedNwd+428↑j
.text:000000000000C20C                 ADRP            X1, #unk_10DEC@PAGE
.text:000000000000C210                 ADRP            X2, #aUnknownEseChec@PAGE ; "UNKNOWN ESE. Check attacked failed. ven"...
.text:000000000000C214                 ADD             X1, X1, #unk_10DEC@PAGEOFF
.text:000000000000C218                 ADD             X2, X2, #aUnknownEseChec@PAGEOFF ; "UNKNOWN ESE. Check attacked failed. ven"...
.text:000000000000C21C                 MOV             W0, #6
.text:000000000000C220                 MOV             W3, W19
.text:000000000000C224                 BL              .__android_log_print
.text:000000000000C228 loc_C228                                ; CODE XREF: isAttackedNwd+4D8↑j
.text:000000000000C228                 MOV             W0, #2
.text:000000000000C22C                 B               loc_C01C
.text:000000000000C230 ; ---------------------------------------------------------------------------
.text:000000000000C230 loc_C230                                ; CODE XREF: isAttackedNwd+30C↑j
.text:000000000000C230                 BL              .__stack_chk_fail
.text:000000000000C230 ; } // starts at BD18
.text:000000000000C230 ; End of function isAttackedNwd
.text:000000000000C234 ; =============== S U B R O U T I N E =======================================
.text:000000000000C234 ; Attributes: bp-based frame
.text:000000000000C234                 EXPORT getACDumpNwd
.text:000000000000C234 getACDumpNwd                            ; CODE XREF: .getACDumpNwd+C↑j
.text:000000000000C234                                         ; DATA XREF: LOAD:0000000000001258↑o ...
.text:000000000000C234 var_2E0         = -0x2E0
.text:000000000000C234 var_2D4         = -0x2D4
.text:000000000000C234 var_2D2         = -0x2D2
.text:000000000000C234 var_2D0         = -0x2D0
.text:000000000000C234 var_2C8         = -0x2C8
.text:000000000000C234 var_2C0         = -0x2C0
.text:000000000000C234 var_2B8         = -0x2B8
.text:000000000000C234 var_2B0         = -0x2B0
.text:000000000000C234 var_2A8         = -0x2A8
.text:000000000000C234 var_2A0         = -0x2A0
.text:000000000000C234 var_29F         = -0x29F
.text:000000000000C234 var_29E         = -0x29E
.text:000000000000C234 var_29D         = -0x29D
.text:000000000000C234 var_29C         = -0x29C
.text:000000000000C234 var_29A         = -0x29A
.text:000000000000C234 var_298         = -0x298
.text:000000000000C234 var_290         = -0x290
.text:000000000000C234 var_28C         = -0x28C
.text:000000000000C234 src             = -0x284
.text:000000000000C234 var_282         = -0x282
.text:000000000000C234 var_280         = -0x280
.text:000000000000C234 var_261         = -0x261
.text:000000000000C234 s               = -0x258
.text:000000000000C234 var_50          = -0x50
.text:000000000000C234 var_40          = -0x40
.text:000000000000C234 var_30          = -0x30
.text:000000000000C234 var_20          = -0x20
.text:000000000000C234 var_10          = -0x10
.text:000000000000C234 var_s0          =  0
.text:000000000000C234 ; __unwind {
.text:000000000000C234                 STP             X28, X27, [SP,#-0x10+var_50]!
.text:000000000000C238                 STP             X26, X25, [SP,#0x50+var_40]
.text:000000000000C23C                 STP             X24, X23, [SP,#0x50+var_30]
.text:000000000000C240                 STP             X22, X21, [SP,#0x50+var_20]
.text:000000000000C244                 STP             X20, X19, [SP,#0x50+var_10]
.text:000000000000C248                 STP             X29, X30, [SP,#0x50+var_s0]
.text:000000000000C24C                 ADD             X29, SP, #0x50
.text:000000000000C250                 SUB             SP, SP, #0x2A0
.text:000000000000C254                 ADRP            X23, #__stack_chk_guard_ptr@PAGE
.text:000000000000C258                 LDR             X23, [X23,#__stack_chk_guard_ptr@PAGEOFF]
.text:000000000000C25C                 MOV             X19, X1
.text:000000000000C260                 MOV             X20, X0
.text:000000000000C264                 ADD             X24, SP, #0x2F0+var_2E0
.text:000000000000C268                 LDR             X23, [X23]
.text:000000000000C26C                 ADD             X0, SP, #0x2F0+s ; s
.text:000000000000C270                 MOV             W2, #0x200 ; n
.text:000000000000C274                 MOV             W1, WZR ; c
.text:000000000000C278                 STR             X23, [X24]
.text:000000000000C27C                 MOV             W22, #0x200
.text:000000000000C280                 ADD             X25, SP, #0x2F0+s
.text:000000000000C284                 BL              .memset
.text:000000000000C288                 ADRP            X8, #unk_14723@PAGE
.text:000000000000C28C                 ADD             X8, X8, #unk_14723@PAGEOFF
.text:000000000000C290                 LDUR            X10, [X8,#0x1F]
.text:000000000000C294                 LDP             Q0, Q1, [X8]
.text:000000000000C298                 ADRP            X1, #unk_10DEC@PAGE
.text:000000000000C29C                 ADRP            X2, #aGetacdumpnwdSt@PAGE ; "getACDumpNwd started"
.text:000000000000C2A0                 MOV             W9, #0x26DF
.text:000000000000C2A4                 MOV             W8, #0x52DF
.text:000000000000C2A8                 ADD             X1, X1, #unk_10DEC@PAGEOFF
.text:000000000000C2AC                 ADD             X2, X2, #aGetacdumpnwdSt@PAGEOFF ; "getACDumpNwd started"
.text:000000000000C2B0                 MOV             W0, #4
.text:000000000000C2B4                 STRH            W9, [SP,#0x2F0+var_2D2]
.text:000000000000C2B8                 STUR            X10, [SP,#0x2F0+var_261]
.text:000000000000C2BC                 STP             Q0, Q1, [SP,#0x2F0+var_280]
.text:000000000000C2C0                 STRH            W8, [SP,#0x2F0+var_2D4]
.text:000000000000C2C4                 MOV             W26, #4
.text:000000000000C2C8                 BL              .__android_log_print
.text:000000000000C2CC                 BL              .getVendor
.text:000000000000C2D0                 MOV             W21, W0
.text:000000000000C2D4                 BL              .isFactoryBinary
.text:000000000000C2D8                 CMP             W0, #1
.text:000000000000C2DC                 B.EQ            loc_C338
.text:000000000000C2E0                 BL              .getVendor
.text:000000000000C2E4                 CMP             W0, #0xE
.text:000000000000C2E8                 B.EQ            loc_C338
.text:000000000000C2EC                 ORR             W8, W0, #1
.text:000000000000C2F0                 CMP             W8, #0xB
.text:000000000000C2F4                 B.EQ            loc_C338
.text:000000000000C2F8                 SUB             W9, W0, #0xF
.text:000000000000C2FC                 CMP             W9, #2
.text:000000000000C300                 B.CC            loc_C338
.text:000000000000C304                 CMP             W8, #0xD
.text:000000000000C308                 B.EQ            loc_C338
.text:000000000000C30C                 ADRP            X1, #unk_10DEC@PAGE
.text:000000000000C310                 ADRP            X2, #aInvalidApiNotF_0@PAGE ; "Invalid API, not factory binary and don"...
.text:000000000000C314                 ADD             X1, X1, #unk_10DEC@PAGEOFF
.text:000000000000C318                 ADD             X2, X2, #aInvalidApiNotF_0@PAGEOFF ; "Invalid API, not factory binary and don"...
.text:000000000000C31C                 MOV             W0, #6
.text:000000000000C320                 BL              .__android_log_print
.text:000000000000C324                 ADD             X8, SP, #0x2F0+var_2D0
.text:000000000000C328                 ADD             X26, X8, #8
.text:000000000000C32C                 ADD             X25, X8, #0x10
.text:000000000000C330                 MOV             W20, #0xFF
.text:000000000000C334                 B               loc_C5C4
.text:000000000000C338 ; ---------------------------------------------------------------------------
.text:000000000000C338 loc_C338                                ; CODE XREF: getACDumpNwd+A8↑j
.text:000000000000C338                                         ; getACDumpNwd+B4↑j ...
.text:000000000000C338                 ADD             X0, SP, #0x2F0+s ; s
.text:000000000000C33C                 MOV             W2, #0x200 ; n
.text:000000000000C340                 MOV             W1, WZR ; c
.text:000000000000C344                 STP             XZR, XZR, [SP,#0x2F0+var_298]
.text:000000000000C348                 STP             XZR, XZR, [SP,#0x2F0+var_2A8]
.text:000000000000C34C                 STP             XZR, XZR, [SP,#0x2F0+var_2B8]
.text:000000000000C350                 STP             XZR, XZR, [SP,#0x2F0+var_2C8]
.text:000000000000C354                 STR             XZR, [SP,#0x2F0+var_2D0]
.text:000000000000C358                 BL              .memset
.text:000000000000C35C                 MOV             W8, #0xA4
.text:000000000000C360                 MOV             W27, #1
.text:000000000000C364                 STRB            WZR, [SP,#0x2F0+var_2A0]
.text:000000000000C368                 STRH            W22, [SP,#0x2F0+var_2C0]
.text:000000000000C36C                 STR             X25, [SP,#0x2F0+var_2C8]
.text:000000000000C370                 STRB            W8, [SP,#0x2F0+var_29F]
.text:000000000000C374                 STRB            W26, [SP,#0x2F0+var_29E]
.text:000000000000C378                 STRB            WZR, [SP,#0x2F0+var_29D]
.text:000000000000C37C                 STR             WZR, [SP,#0x2F0+var_28C]
.text:000000000000C380                 STRB            WZR, [SP,#0x2F0+var_29A]
.text:000000000000C384                 STRB            W27, [SP,#0x2F0+var_290]
.text:000000000000C388                 CMP             W21, #7
.text:000000000000C38C                 B.EQ            loc_C40C
.text:000000000000C390                 ORR             W8, W21, #4
.text:000000000000C394                 CMP             W8, #6
.text:000000000000C398                 B.EQ            loc_C40C
.text:000000000000C39C                 CMP             W21, #4
.text:000000000000C3A0                 B.EQ            loc_C3AC
.text:000000000000C3A4                 CMP             W21, #1
.text:000000000000C3A8                 B.NE            loc_C678
.text:000000000000C3AC loc_C3AC                                ; CODE XREF: getACDumpNwd+16C↑j
.text:000000000000C3AC                 MOV             W8, #8
.text:000000000000C3B0                 MOV             W9, #0xD
.text:000000000000C3B4                 STRH            W8, [SP,#0x2F0+var_29C]
.text:000000000000C3B8                 ADD             X8, SP, #0x2F0+var_280
.text:000000000000C3BC                 ORR             X8, X8, X9
.text:000000000000C3C0                 MOV             W9, #0x80
.text:000000000000C3C4                 STRB            W9, [SP,#0x2F0+var_2B8]
.text:000000000000C3C8                 MOV             W9, #0xCA
.text:000000000000C3CC                 STRB            W9, [SP,#0x2F0+var_2B8+1]
.text:000000000000C3D0                 MOV             W9, #0xFE
.text:000000000000C3D4                 STRB            W9, [SP,#0x2F0+var_2B8+3]
.text:000000000000C3D8                 MOV             W9, #2
.text:000000000000C3DC                 STRH            W9, [SP,#0x2F0+var_2B8+4]
.text:000000000000C3E0                 ADD             X9, SP, #0x2F0+var_2D2
.text:000000000000C3E4                 STR             X9, [SP,#0x2F0+var_2B0]
.text:000000000000C3E8                 MOV             W9, #0x200
.text:000000000000C3EC                 STRH            W9, [SP,#0x2F0+var_2C0]
.text:000000000000C3F0                 ADD             X9, SP, #0x2F0+s
.text:000000000000C3F4                 STRB            WZR, [SP,#0x2F0+var_2B8+2]
.text:000000000000C3F8                 STR             WZR, [SP,#0x2F0+var_2A8+4]
.text:000000000000C3FC                 STR             X9, [SP,#0x2F0+var_2C8]
.text:000000000000C400                 STR             X8, [SP,#0x2F0+var_298]
.text:000000000000C404 loc_C404                                ; CODE XREF: getACDumpNwd+594↓j
.text:000000000000C404                 MOV             W27, #1
.text:000000000000C408                 B               loc_C450
.text:000000000000C40C ; ---------------------------------------------------------------------------
.text:000000000000C40C loc_C40C                                ; CODE XREF: getACDumpNwd+158↑j
.text:000000000000C40C                                         ; getACDumpNwd+164↑j
.text:000000000000C40C                 MOV             W8, #0xC
.text:000000000000C410                 STRH            W8, [SP,#0x2F0+var_29C]
.text:000000000000C414                 ADD             X8, SP, #0x2F0+var_280
.text:000000000000C418                 STR             X8, [SP,#0x2F0+var_298]
.text:000000000000C41C                 MOV             W8, #0xA0
.text:000000000000C420                 STRB            W8, [SP,#0x2F0+var_2B8]
.text:000000000000C424                 MOV             W8, #0xDA
.text:000000000000C428                 STRB            W8, [SP,#0x2F0+var_2B8+1]
.text:000000000000C42C                 MOV             W8, #0x60 ; '`'
.text:000000000000C430                 STR             W8, [SP,#0x2F0+var_2A8+4]
.text:000000000000C434                 MOV             W8, #0x200
.text:000000000000C438                 STRH            W8, [SP,#0x2F0+var_2C0]
.text:000000000000C43C                 ADD             X8, SP, #0x2F0+s
.text:000000000000C440                 STRB            WZR, [SP,#0x2F0+var_2B8+2]
.text:000000000000C444                 STRB            WZR, [SP,#0x2F0+var_2B8+3]
.text:000000000000C448                 STRB            W27, [SP,#0x2F0+var_2A8]
.text:000000000000C44C                 STR             X8, [SP,#0x2F0+var_2C8]
.text:000000000000C450 loc_C450                                ; CODE XREF: getACDumpNwd+1D4↑j
.text:000000000000C450                                         ; getACDumpNwd+4B4↓j ...
.text:000000000000C450                 ADD             X8, SP, #0x2F0+var_2D0
.text:000000000000C454                 ADD             X0, SP, #0x2F0+var_2A0
.text:000000000000C458                 ADD             X1, SP, #0x2F0+var_2D0
.text:000000000000C45C                 ADD             X25, X8, #0x10
.text:000000000000C460                 ADD             X26, X8, #8
.text:000000000000C464                 BL              .secEseSPI_transceive
.text:000000000000C468                 AND             W3, W0, #0xFFFF
.text:000000000000C46C                 CBZ             W3, loc_C490
.text:000000000000C470                 ADRP            X1, #unk_10DEC@PAGE
.text:000000000000C474                 ADRP            X2, #aGetacdumpnwdFa_0@PAGE ; "getACDumpNwd, failed to SELECT cmd, ret"...
.text:000000000000C478                 ADD             X1, X1, #unk_10DEC@PAGEOFF
.text:000000000000C47C                 ADD             X2, X2, #aGetacdumpnwdFa_0@PAGEOFF ; "getACDumpNwd, failed to SELECT cmd, ret"...
.text:000000000000C480                 MOV             W0, #6
.text:000000000000C484                 BL              .__android_log_print
.text:000000000000C488                 MOV             W20, #0xFFFFFFEF
.text:000000000000C48C                 B               loc_C5C4
.text:000000000000C490 ; ---------------------------------------------------------------------------
.text:000000000000C490 loc_C490                                ; CODE XREF: getACDumpNwd+238↑j
.text:000000000000C490                 ADRP            X22, #a02x@PAGE ; "%02X"
.text:000000000000C494                 MOV             W28, #0x200
.text:000000000000C498                 ADD             X22, X22, #a02x@PAGEOFF ; "%02X"
.text:000000000000C49C loc_C49C                                ; CODE XREF: getACDumpNwd+35C↓j
.text:000000000000C49C                 ADD             X0, SP, #0x2F0+s ; s
.text:000000000000C4A0                 MOV             W2, #0x200 ; n
.text:000000000000C4A4                 MOV             W1, WZR ; c
.text:000000000000C4A8                 STRH            W28, [SP,#0x2F0+var_2C0]
.text:000000000000C4AC                 BL              .memset
.text:000000000000C4B0                 LDR             X0, [SP,#0x2F0+var_2C8] ; s
.text:000000000000C4B4                 MOV             W1, WZR ; c
.text:000000000000C4B8                 MOV             W2, #0x200 ; n
.text:000000000000C4BC                 BL              .memset
.text:000000000000C4C0                 ADD             X0, SP, #0x2F0+var_2B8
.text:000000000000C4C4                 ADD             X1, SP, #0x2F0+var_2D0
.text:000000000000C4C8                 BL              .secEseSPI_transceive
.text:000000000000C4CC                 AND             W3, W0, #0xFFFF
.text:000000000000C4D0                 CBNZ            W3, loc_C59C
.text:000000000000C4D4                 CMP             W21, #9
.text:000000000000C4D8                 B.NE            loc_C4E8
.text:000000000000C4DC                 LDRB            W8, [SP,#0x2F0+var_2B8+3]
.text:000000000000C4E0                 SUB             W8, W8, #1
.text:000000000000C4E4                 STRB            W8, [SP,#0x2F0+var_2B8+3]
.text:000000000000C4E8 loc_C4E8                                ; CODE XREF: getACDumpNwd+2A4↑j
.text:000000000000C4E8                 LDRH            W8, [SP,#0x2F0+var_2C0]
.text:000000000000C4EC                 MOV             W23, WZR
.text:000000000000C4F0                 STRB            WZR, [SP,#0x2F0+var_282]
.text:000000000000C4F4                 STRH            WZR, [SP,#0x2F0+src]
.text:000000000000C4F8                 CBZ             W8, loc_C538
.text:000000000000C4FC loc_C4FC                                ; CODE XREF: getACDumpNwd+300↓j
.text:000000000000C4FC                 LDR             X8, [SP,#0x2F0+var_2C8]
.text:000000000000C500                 ADD             X0, SP, #0x2F0+src ; s
.text:000000000000C504                 MOV             W1, #3  ; maxlen
.text:000000000000C508                 MOV             X2, X22 ; format
.text:000000000000C50C                 LDRB            W3, [X8,W23,UXTW]
.text:000000000000C510                 BL              .snprintf
.text:000000000000C514                 ADD             X1, SP, #0x2F0+src ; src
.text:000000000000C518                 MOV             X0, X20 ; dest
.text:000000000000C51C                 BL              .strcat
.text:000000000000C520                 LDRH            W8, [SP,#0x2F0+var_2C0]
.text:000000000000C524                 ADD             W23, W23, #1
.text:000000000000C528                 STRB            WZR, [SP,#0x2F0+var_282]
.text:000000000000C52C                 STRH            WZR, [SP,#0x2F0+src]
.text:000000000000C530                 CMP             W23, W8
.text:000000000000C534                 B.CC            loc_C4FC
.text:000000000000C538 loc_C538                                ; CODE XREF: getACDumpNwd+2C4↑j
.text:000000000000C538                 LDRB            W3, [SP,#0x2F0+var_2D0]
.text:000000000000C53C                 ADD             X0, SP, #0x2F0+src ; s
.text:000000000000C540                 MOV             W1, #3  ; maxlen
.text:000000000000C544                 MOV             X2, X22 ; format
.text:000000000000C548                 BL              .snprintf
.text:000000000000C54C                 ADD             X1, SP, #0x2F0+src ; src
.text:000000000000C550                 MOV             X0, X20 ; dest
.text:000000000000C554                 BL              .strcat
.text:000000000000C558                 LDRB            W3, [SP,#0x2F0+var_2D0+1]
.text:000000000000C55C                 ADD             X0, SP, #0x2F0+src ; s
.text:000000000000C560                 MOV             W1, #3  ; maxlen
.text:000000000000C564                 MOV             X2, X22 ; format
.text:000000000000C568                 STRB            WZR, [SP,#0x2F0+var_282]
.text:000000000000C56C                 STRH            WZR, [SP,#0x2F0+src]
.text:000000000000C570                 BL              .snprintf
.text:000000000000C574                 ADD             X1, SP, #0x2F0+src ; src
.text:000000000000C578                 MOV             X0, X20 ; dest
.text:000000000000C57C                 BL              .strcat
.text:000000000000C580                 MOV             X0, X20 ; s
.text:000000000000C584                 BL              .strlen
.text:000000000000C588                 SUB             W27, W27, #1
.text:000000000000C58C                 STR             W0, [X19]
.text:000000000000C590                 CBNZ            W27, loc_C49C
.text:000000000000C594                 MOV             W20, WZR
.text:000000000000C598                 B               loc_C5B8
.text:000000000000C59C ; ---------------------------------------------------------------------------
.text:000000000000C59C loc_C59C                                ; CODE XREF: getACDumpNwd+29C↑j
.text:000000000000C59C                 ADRP            X1, #unk_10DEC@PAGE
.text:000000000000C5A0                 ADRP            X2, #aGetacdumpnwdGt_0@PAGE ; "getACDumpNwd, GTO failed to GET ACDUMP,"...
.text:000000000000C5A4                 ADD             X1, X1, #unk_10DEC@PAGEOFF
.text:000000000000C5A8                 ADD             X2, X2, #aGetacdumpnwdGt_0@PAGEOFF ; "getACDumpNwd, GTO failed to GET ACDUMP,"...
.text:000000000000C5AC                 MOV             W0, #6
.text:000000000000C5B0                 BL              .__android_log_print
.text:000000000000C5B4                 MOV             W20, #0xFFFFFFEF
.text:000000000000C5B8 loc_C5B8                                ; CODE XREF: getACDumpNwd+364↑j
.text:000000000000C5B8                 ADRP            X23, #__stack_chk_guard_ptr@PAGE
.text:000000000000C5BC                 LDR             X23, [X23,#__stack_chk_guard_ptr@PAGEOFF]
.text:000000000000C5C0                 LDR             X23, [X23]
.text:000000000000C5C4 loc_C5C4                                ; CODE XREF: getACDumpNwd+100↑j
.text:000000000000C5C4                                         ; getACDumpNwd+258↑j
.text:000000000000C5C4                 LDRH            W8, [SP,#0x2F0+var_2D0]
.text:000000000000C5C8                 ADRP            X19, #unk_10DEC@PAGE
.text:000000000000C5CC                 ADD             X19, X19, #unk_10DEC@PAGEOFF
.text:000000000000C5D0                 ADRP            X2, #aIsattackednwdP@PAGE ; "isAttackedNwd,  pRsp.sw = %02X%02X"
.text:000000000000C5D4                 AND             W3, W8, #0xFF
.text:000000000000C5D8                 LSR             W4, W8, #8
.text:000000000000C5DC                 ADD             X2, X2, #aIsattackednwdP@PAGEOFF ; "isAttackedNwd,  pRsp.sw = %02X%02X"
.text:000000000000C5E0                 MOV             W0, #4
.text:000000000000C5E4                 MOV             X1, X19
.text:000000000000C5E8                 BL              .__android_log_print
.text:000000000000C5EC                 LDR             X8, [X26]
.text:000000000000C5F0                 ADRP            X2, #aIsattackednwdP_2@PAGE ; "isAttackedNwd,  pRsp.pdata = %02X"
.text:000000000000C5F4                 ADD             X2, X2, #aIsattackednwdP_2@PAGEOFF ; "isAttackedNwd,  pRsp.pdata = %02X"
.text:000000000000C5F8                 MOV             W0, #4
.text:000000000000C5FC                 LDRB            W3, [X8]
.text:000000000000C600                 MOV             X1, X19
.text:000000000000C604                 BL              .__android_log_print
.text:000000000000C608                 LDRH            W3, [X25]
.text:000000000000C60C                 ADRP            X2, #aIsattackednwdP_1@PAGE ; "isAttackedNwd,  pRsp.len = %d"
.text:000000000000C610                 ADD             X2, X2, #aIsattackednwdP_1@PAGEOFF ; "isAttackedNwd,  pRsp.len = %d"
.text:000000000000C614                 MOV             W0, #4
.text:000000000000C618                 MOV             X1, X19
.text:000000000000C61C                 BL              .__android_log_print
.text:000000000000C620                 ADRP            X2, #aGetacdumpnwdEn@PAGE ; "getACDumpNwd END"
.text:000000000000C624                 ADD             X2, X2, #aGetacdumpnwdEn@PAGEOFF ; "getACDumpNwd END"
.text:000000000000C628                 MOV             W0, #4
.text:000000000000C62C                 MOV             X1, X19
.text:000000000000C630                 BL              .__android_log_print
.text:000000000000C634                 LDRH            W8, [SP,#0x2F0+var_2D0]
.text:000000000000C638                 AND             W9, W8, #0xFF
.text:000000000000C63C                 CMP             W8, #0x100
.text:000000000000C640                 MOV             W8, #0x90
.text:000000000000C644                 CCMP            W9, W8, #0, CC
.text:000000000000C648                 CSEL            W0, WZR, W20, EQ
.text:000000000000C64C loc_C64C                                ; CODE XREF: getACDumpNwd+548↓j
.text:000000000000C64C                 LDR             X8, [X24]
.text:000000000000C650                 SUB             X8, X23, X8
.text:000000000000C654                 CBNZ            X8, loc_C7CC
.text:000000000000C658                 SUB             SP, X29, #0x50 ; 'P'
.text:000000000000C65C                 LDP             X29, X30, [SP,#0x50+var_s0]
.text:000000000000C660                 LDP             X20, X19, [SP,#0x50+var_10]
.text:000000000000C664                 LDP             X22, X21, [SP,#0x50+var_20]
.text:000000000000C668                 LDP             X24, X23, [SP,#0x50+var_30]
.text:000000000000C66C                 LDP             X26, X25, [SP,#0x50+var_40]
.text:000000000000C670                 LDP             X28, X27, [SP+0x50+var_50],#0x60
.text:000000000000C674                 RET
.text:000000000000C678 ; ---------------------------------------------------------------------------
.text:000000000000C678 loc_C678                                ; CODE XREF: getACDumpNwd+174↑j
.text:000000000000C678                 SUB             W8, W21, #0xF
.text:000000000000C67C                 CMP             W8, #2
.text:000000000000C680                 B.CC            loc_C6EC
.text:000000000000C684                 ORR             W8, W21, #1
.text:000000000000C688                 CMP             W8, #0xD
.text:000000000000C68C                 B.EQ            loc_C6EC
.text:000000000000C690                 CMP             W21, #9
.text:000000000000C694                 B.NE            loc_C74C
.text:000000000000C698                 MOV             W10, #0x80
.text:000000000000C69C                 STRB            W10, [SP,#0x2F0+var_2B8]
.text:000000000000C6A0                 MOV             W10, #7
.text:000000000000C6A4                 MOV             W8, #0xD
.text:000000000000C6A8                 ADD             X9, SP, #0x2F0+var_280
.text:000000000000C6AC                 STRB            W10, [SP,#0x2F0+var_2B8+1]
.text:000000000000C6B0                 MOV             W10, #0x14
.text:000000000000C6B4                 STRB            W10, [SP,#0x2F0+var_2B8+3]
.text:000000000000C6B8                 MOV             W10, #0x200
.text:000000000000C6BC                 STRH            W8, [SP,#0x2F0+var_29C]
.text:000000000000C6C0                 STRH            W8, [SP,#0x2F0+var_2B8+4]
.text:000000000000C6C4                 ADD             X8, SP, #0x2F0+s
.text:000000000000C6C8                 ADD             X9, X9, #0x1A
.text:000000000000C6CC                 STRB            WZR, [SP,#0x2F0+var_2B8+2]
.text:000000000000C6D0                 STRH            W10, [SP,#0x2F0+var_2C0]
.text:000000000000C6D4                 STR             X8, [SP,#0x2F0+var_2C8]
.text:000000000000C6D8                 STR             X9, [SP,#0x2F0+var_298]
.text:000000000000C6DC                 STR             X9, [SP,#0x2F0+var_2B0]
.text:000000000000C6E0                 STR             WZR, [SP,#0x2F0+var_2A8+4]
.text:000000000000C6E4                 MOV             W27, #2
.text:000000000000C6E8                 B               loc_C450
.text:000000000000C6EC ; ---------------------------------------------------------------------------
.text:000000000000C6EC loc_C6EC                                ; CODE XREF: getACDumpNwd+44C↑j
.text:000000000000C6EC                                         ; getACDumpNwd+458↑j
.text:000000000000C6EC                 MOV             W8, #8
.text:000000000000C6F0                 STRH            W8, [SP,#0x2F0+var_29C]
.text:000000000000C6F4                 MOV             W8, #0xCA
.text:000000000000C6F8                 STRB            W8, [SP,#0x2F0+var_2B8+1]
.text:000000000000C6FC                 MOV             W8, #2
.text:000000000000C700                 STRH            W8, [SP,#0x2F0+var_2B8+4]
.text:000000000000C704                 ADD             X8, SP, #0x2F0+var_2D4
.text:000000000000C708                 MOV             W9, #0xD
.text:000000000000C70C                 ADD             X10, SP, #0x2F0+var_280
.text:000000000000C710                 STR             X8, [SP,#0x2F0+var_2B0]
.text:000000000000C714                 MOV             W8, #0x200
.text:000000000000C718                 ORR             X9, X10, X9
.text:000000000000C71C                 MOV             W10, #0xFE
.text:000000000000C720                 MOV             W27, #1
.text:000000000000C724                 STRH            W8, [SP,#0x2F0+var_2C0]
.text:000000000000C728                 ADD             X8, SP, #0x2F0+s
.text:000000000000C72C                 STRB            WZR, [SP,#0x2F0+var_2B8]
.text:000000000000C730                 STRB            WZR, [SP,#0x2F0+var_2B8+2]
.text:000000000000C734                 STRB            W10, [SP,#0x2F0+var_2B8+3]
.text:000000000000C738                 STRB            W27, [SP,#0x2F0+var_2B8+6]
.text:000000000000C73C                 STR             X9, [SP,#0x2F0+var_298]
.text:000000000000C740                 STR             WZR, [SP,#0x2F0+var_2A8+4]
.text:000000000000C744                 STR             X8, [SP,#0x2F0+var_2C8]
.text:000000000000C748                 B               loc_C450
.text:000000000000C74C ; ---------------------------------------------------------------------------
.text:000000000000C74C loc_C74C                                ; CODE XREF: getACDumpNwd+460↑j
.text:000000000000C74C                 CMP             W21, #0xE
.text:000000000000C750                 B.EQ            loc_C780
.text:000000000000C754                 CMP             W8, #0xB
.text:000000000000C758                 B.EQ            loc_C780
.text:000000000000C75C                 ADRP            X1, #unk_10DEC@PAGE
.text:000000000000C760                 ADRP            X2, #aGetacdumpnwdFa@PAGE ; "getACDumpNwd, Failed to identify which "...
.text:000000000000C764                 ADD             X1, X1, #unk_10DEC@PAGEOFF
.text:000000000000C768                 ADD             X2, X2, #aGetacdumpnwdFa@PAGEOFF ; "getACDumpNwd, Failed to identify which "...
.text:000000000000C76C                 MOV             W0, #6
.text:000000000000C770                 MOV             W3, W21
.text:000000000000C774                 BL              .__android_log_print
.text:000000000000C778                 MOV             W0, #1
.text:000000000000C77C                 B               loc_C64C
.text:000000000000C780 ; ---------------------------------------------------------------------------
.text:000000000000C780 loc_C780                                ; CODE XREF: getACDumpNwd+51C↑j
.text:000000000000C780                                         ; getACDumpNwd+524↑j
.text:000000000000C780                 MOV             W10, #0x80
.text:000000000000C784                 MOV             W8, #0xD
.text:000000000000C788                 ADD             X9, SP, #0x2F0+var_280
.text:000000000000C78C                 STRB            W10, [SP,#0x2F0+var_2B8]
.text:000000000000C790                 MOV             W10, #9
.text:000000000000C794                 STRB            W10, [SP,#0x2F0+var_2B8+1]
.text:000000000000C798                 MOV             W10, #0x200
.text:000000000000C79C                 STRH            W8, [SP,#0x2F0+var_29C]
.text:000000000000C7A0                 STRH            W8, [SP,#0x2F0+var_2B8+4]
.text:000000000000C7A4                 ADD             X8, SP, #0x2F0+s
.text:000000000000C7A8                 ADD             X9, X9, #0x1A
.text:000000000000C7AC                 STRB            WZR, [SP,#0x2F0+var_2B8+2]
.text:000000000000C7B0                 STRB            WZR, [SP,#0x2F0+var_2B8+3]
.text:000000000000C7B4                 STRH            W10, [SP,#0x2F0+var_2C0]
.text:000000000000C7B8                 STR             X8, [SP,#0x2F0+var_2C8]
.text:000000000000C7BC                 STR             X9, [SP,#0x2F0+var_298]
.text:000000000000C7C0                 STR             X9, [SP,#0x2F0+var_2B0]
.text:000000000000C7C4                 STR             WZR, [SP,#0x2F0+var_2A8+4]
.text:000000000000C7C8                 B               loc_C404
.text:000000000000C7CC ; ---------------------------------------------------------------------------
.text:000000000000C7CC loc_C7CC                                ; CODE XREF: getACDumpNwd+420↑j
.text:000000000000C7CC                 BL              .__stack_chk_fail
.text:000000000000C7CC ; } // starts at C234
.text:000000000000C7CC ; End of function getACDumpNwd
.text:000000000000C7D0 ; =============== S U B R O U T I N E =======================================
.text:000000000000C7D0 ; Attributes: bp-based frame
.text:000000000000C7D0                 EXPORT getCPLC14mode
.text:000000000000C7D0 getCPLC14mode                           ; CODE XREF: .getCPLC14mode+C↑j
.text:000000000000C7D0                                         ; DATA XREF: LOAD:0000000000000A60↑o ...
.text:000000000000C7D0 var_16860       = -0x16860
.text:000000000000C7D0 var_16858       = -0x16858
.text:000000000000C7D0 var_16854       = -0x16854
.text:000000000000C7D0 var_40          = -0x40
.text:000000000000C7D0 var_30          = -0x30
.text:000000000000C7D0 var_20          = -0x20
.text:000000000000C7D0 var_10          = -0x10
.text:000000000000C7D0 var_s0          =  0
.text:000000000000C7D0 ; __unwind {
.text:000000000000C7D0                 STP             X26, X25, [SP,#-0x10+var_40]!
.text:000000000000C7D4                 STP             X24, X23, [SP,#0x40+var_30]
.text:000000000000C7D8                 STP             X22, X21, [SP,#0x40+var_20]
.text:000000000000C7DC                 STP             X20, X19, [SP,#0x40+var_10]
.text:000000000000C7E0                 STP             X29, X30, [SP,#0x40+var_s0]
.text:000000000000C7E4                 ADD             X29, SP, #0x40
.text:000000000000C7E8                 SUB             SP, SP, #0x16,LSL#12
.text:000000000000C7EC                 SUB             SP, SP, #0x820
.text:000000000000C7F0                 ADRP            X23, #__stack_chk_guard_ptr@PAGE
.text:000000000000C7F4                 LDR             X23, [X23,#__stack_chk_guard_ptr@PAGEOFF]
.text:000000000000C7F8                 MOV             X24, SP
.text:000000000000C7FC                 MOV             X19, X1
.text:000000000000C800                 MOV             X21, X0
.text:000000000000C804                 LDR             X23, [X23]
.text:000000000000C808                 STR             X23, [X24,#0x16860+var_16860]
.text:000000000000C80C                 BL              .isFactoryBinary
.text:000000000000C810                 ADRP            X1, #unk_10DEC@PAGE
.text:000000000000C814                 ADD             X1, X1, #unk_10DEC@PAGEOFF
.text:000000000000C818                 CBZ             W0, loc_C848
.text:000000000000C81C                 ADRP            X2, #aGetcplc14modeF@PAGE ; "getCPLC14mode, Factory Binary"
.text:000000000000C820                 ADD             X2, X2, #aGetcplc14modeF@PAGEOFF ; "getCPLC14mode, Factory Binary"
.text:000000000000C824                 MOV             W0, #4
.text:000000000000C828                 BL              .__android_log_print
.text:000000000000C82C                 BL              .isSWDFactory
.text:000000000000C830                 ADRP            X1, #unk_10DEC@PAGE
.text:000000000000C834                 ADD             X1, X1, #unk_10DEC@PAGEOFF
.text:000000000000C838                 CBZ             W0, loc_C860
.text:000000000000C83C                 ADRP            X2, #aGetcplc14modeS@PAGE ; "getCPLC14mode, Swd Factory"
.text:000000000000C840                 ADD             X2, X2, #aGetcplc14modeS@PAGEOFF ; "getCPLC14mode, Swd Factory"
.text:000000000000C844                 B               loc_C850
.text:000000000000C848 ; ---------------------------------------------------------------------------
.text:000000000000C848 loc_C848                                ; CODE XREF: getCPLC14mode+48↑j
.text:000000000000C848                 ADRP            X2, #aGetcplc14modeN@PAGE ; "getCPLC14mode, Normal Binary"
.text:000000000000C84C                 ADD             X2, X2, #aGetcplc14modeN@PAGEOFF ; "getCPLC14mode, Normal Binary"
.text:000000000000C850 loc_C850                                ; CODE XREF: getCPLC14mode+74↑j
.text:000000000000C850                 MOV             W0, #4
.text:000000000000C854                 BL              .__android_log_print
.text:000000000000C858                 MOV             W20, #1
.text:000000000000C85C                 B               loc_C874
.text:000000000000C860 ; ---------------------------------------------------------------------------
.text:000000000000C860 loc_C860                                ; CODE XREF: getCPLC14mode+68↑j
.text:000000000000C860                 ADRP            X2, #aGetcplc14modeN_0@PAGE ; "getCPLC14mode, Nwd Factory"
.text:000000000000C864                 ADD             X2, X2, #aGetcplc14modeN_0@PAGEOFF ; "getCPLC14mode, Nwd Factory"
.text:000000000000C868                 MOV             W0, #4
.text:000000000000C86C                 BL              .__android_log_print
.text:000000000000C870                 MOV             W20, WZR
.text:000000000000C874 loc_C874                                ; CODE XREF: getCPLC14mode+8C↑j
.text:000000000000C874                 MOV             W0, W20
.text:000000000000C878                 BL              .spiOpen
.text:000000000000C87C                 CMP             W0, #1
.text:000000000000C880                 B.NE            loc_C8D8
.text:000000000000C884                 CBZ             W20, loc_C8F0
.text:000000000000C888                 MOV             W0, #0x18
.text:000000000000C88C                 ADD             X3, SP, #0x16860+var_16858
.text:000000000000C890                 MOV             X1, XZR
.text:000000000000C894                 MOV             W2, WZR
.text:000000000000C898                 ADD             X25, SP, #0x16860+var_16858
.text:000000000000C89C                 BL              .invokeCommand
.text:000000000000C8A0                 CBZ             W0, loc_C948
.text:000000000000C8A4                 LDR             W3, [SP,#0x16860+var_16854]
.text:000000000000C8A8                 ADRP            X19, #unk_10DEC@PAGE
.text:000000000000C8AC                 ADD             X19, X19, #unk_10DEC@PAGEOFF
.text:000000000000C8B0                 ADRP            X2, #(aCmdHandleCcmDa+0x18)@PAGE ; "invokeCommand() failed! [%d]"
.text:000000000000C8B4                 ADD             X2, X2, #(aCmdHandleCcmDa+0x18)@PAGEOFF ; "invokeCommand() failed! [%d]"
.text:000000000000C8B8                 MOV             W0, #6
.text:000000000000C8BC                 MOV             X1, X19
.text:000000000000C8C0                 BL              .__android_log_print
.text:000000000000C8C4                 ADRP            X2, #aGetcplc14modeF_0@PAGE ; "getCPLC14mode, failed getCPLCSwd"
.text:000000000000C8C8                 ADD             X2, X2, #aGetcplc14modeF_0@PAGEOFF ; "getCPLC14mode, failed getCPLCSwd"
.text:000000000000C8CC                 MOV             W0, #6
.text:000000000000C8D0                 MOV             X1, X19
.text:000000000000C8D4                 B               loc_C914
.text:000000000000C8D8 ; ---------------------------------------------------------------------------
.text:000000000000C8D8 loc_C8D8                                ; CODE XREF: getCPLC14mode+B0↑j
.text:000000000000C8D8                 ADRP            X1, #unk_10DEC@PAGE
.text:000000000000C8DC                 ADRP            X2, #aGetcplc14modeS_0@PAGE ; "getCPLC14mode, spi open fail"
.text:000000000000C8E0                 ADD             X1, X1, #unk_10DEC@PAGEOFF
.text:000000000000C8E4                 ADD             X2, X2, #aGetcplc14modeS_0@PAGEOFF ; "getCPLC14mode, spi open fail"
.text:000000000000C8E8                 MOV             W0, #6
.text:000000000000C8EC                 B               loc_C914
.text:000000000000C8F0 ; ---------------------------------------------------------------------------
.text:000000000000C8F0 loc_C8F0                                ; CODE XREF: getCPLC14mode+B4↑j
.text:000000000000C8F0                 MOV             X0, X21
.text:000000000000C8F4                 MOV             X1, X19
.text:000000000000C8F8                 BL              .getCPLCNwd
.text:000000000000C8FC                 CBZ             W0, loc_C918
.text:000000000000C900                 ADRP            X1, #unk_10DEC@PAGE
.text:000000000000C904                 ADRP            X2, #aGetcplc14modeF_1@PAGE ; "getCPLC14mode, failed getCPLCNwd"
.text:000000000000C908                 ADD             X1, X1, #unk_10DEC@PAGEOFF
.text:000000000000C90C                 ADD             X2, X2, #aGetcplc14modeF_1@PAGEOFF ; "getCPLC14mode, failed getCPLCNwd"
.text:000000000000C910                 MOV             W0, #6
.text:000000000000C914 loc_C914                                ; CODE XREF: getCPLC14mode+104↑j
.text:000000000000C914                                         ; getCPLC14mode+11C↑j
.text:000000000000C914                 BL              .__android_log_print
.text:000000000000C918 loc_C918                                ; CODE XREF: getCPLC14mode+12C↑j
.text:000000000000C918                                         ; getCPLC14mode+19C↓j
.text:000000000000C918                 MOV             W0, W20
.text:000000000000C91C                 BL              .spiClose
.text:000000000000C920                 LDR             X8, [X24]
.text:000000000000C924                 SUB             X8, X23, X8
.text:000000000000C928                 CBNZ            X8, loc_C970
.text:000000000000C92C                 SUB             SP, X29, #0x40 ; '@'
.text:000000000000C930                 LDP             X29, X30, [SP,#0x40+var_s0]
.text:000000000000C934                 LDP             X20, X19, [SP,#0x40+var_10]
.text:000000000000C938                 LDP             X22, X21, [SP,#0x40+var_20]
.text:000000000000C93C                 LDP             X24, X23, [SP,#0x40+var_30]
.text:000000000000C940                 LDP             X26, X25, [SP+0x40+var_40],#0x50
.text:000000000000C944                 RET
.text:000000000000C948 ; ---------------------------------------------------------------------------
.text:000000000000C948 loc_C948                                ; CODE XREF: getCPLC14mode+D0↑j
.text:000000000000C948                 MOV             W8, #0x10000
.text:000000000000C94C                 STR             WZR, [SP,#0x16860+var_16854]
.text:000000000000C950                 MOVK            W8, #0x6808
.text:000000000000C954                 LDR             W22, [X25,X8]
.text:000000000000C958                 ADD             X1, X25, #8 ; src
.text:000000000000C95C                 MOV             X0, X21 ; dest
.text:000000000000C960                 MOV             X2, X22 ; n
.text:000000000000C964                 BL              .memcpy
.text:000000000000C968                 STR             W22, [X19]
.text:000000000000C96C                 B               loc_C918
.text:000000000000C970 ; ---------------------------------------------------------------------------
.text:000000000000C970 loc_C970                                ; CODE XREF: getCPLC14mode+158↑j
.text:000000000000C970                 BL              .__stack_chk_fail
.text:000000000000C970 ; } // starts at C7D0
.text:000000000000C970 ; End of function getCPLC14mode
.text:000000000000C974 ; =============== S U B R O U T I N E =======================================
.text:000000000000C974 ; Attributes: bp-based frame
.text:000000000000C974                 EXPORT getRestrictedCheck_NXP
.text:000000000000C974 getRestrictedCheck_NXP                  ; CODE XREF: .getRestrictedCheck_NXP+C↑j
.text:000000000000C974                                         ; DATA XREF: LOAD:0000000000001048↑o ...
.text:000000000000C974 n               = -0x81C
.text:000000000000C974 s               = -0x430
.text:000000000000C974 var_42C         = -0x42C
.text:000000000000C974 var_420         = -0x420
.text:000000000000C974 var_40          = -0x40
.text:000000000000C974 var_30          = -0x30
.text:000000000000C974 var_20          = -0x20
.text:000000000000C974 var_10          = -0x10
.text:000000000000C974 var_s0          =  0
.text:000000000000C974 ; __unwind {
.text:000000000000C974                 STP             X26, X25, [SP,#-0x10+var_40]!
.text:000000000000C978                 STP             X24, X23, [SP,#0x40+var_30]
.text:000000000000C97C                 STP             X22, X21, [SP,#0x40+var_20]
.text:000000000000C980                 STP             X20, X19, [SP,#0x40+var_10]
.text:000000000000C984                 STP             X29, X30, [SP,#0x40+var_s0]
.text:000000000000C988                 ADD             X29, SP, #0x40
.text:000000000000C98C                 SUB             SP, SP, #0x7F0
.text:000000000000C990                 ADRP            X22, #__stack_chk_guard_ptr@PAGE
.text:000000000000C994                 LDR             X22, [X22,#__stack_chk_guard_ptr@PAGEOFF]
.text:000000000000C998                 MOV             X19, X1
.text:000000000000C99C                 ADRP            X1, #unk_10DEC@PAGE
.text:000000000000C9A0                 ADRP            X2, #aSemfactoryStar@PAGE ; "===== [SEMFactory] : start getRestricte"...
.text:000000000000C9A4                 LDR             X22, [X22]
.text:000000000000C9A8                 MOV             X20, X0
.text:000000000000C9AC                 ADD             X23, SP, #0x830+s
.text:000000000000C9B0                 ADD             X1, X1, #unk_10DEC@PAGEOFF
.text:000000000000C9B4                 ADD             X2, X2, #aSemfactoryStar@PAGEOFF ; "===== [SEMFactory] : start getRestricte"...
.text:000000000000C9B8                 MOV             W0, #4
.text:000000000000C9BC                 STR             X22, [X23,#0x3E8]
.text:000000000000C9C0                 BL              .__android_log_print
.text:000000000000C9C4                 ADD             X0, SP, #0x830+s ; s
.text:000000000000C9C8                 MOV             W2, #0x3E8 ; n
.text:000000000000C9CC                 MOV             W1, WZR ; c
.text:000000000000C9D0                 STR             WZR, [SP,#0x830+n]
.text:000000000000C9D4                 BL              .memset
.text:000000000000C9D8                 ADD             X0, SP, #0x830+n+4 ; s
.text:000000000000C9DC                 MOV             W2, #0x3E8 ; n
.text:000000000000C9E0                 MOV             W1, WZR ; c
.text:000000000000C9E4                 BL              .memset
.text:000000000000C9E8                 BL              .getVendor
.text:000000000000C9EC                 MOV             W21, W0
.text:000000000000C9F0                 BL              .isFactoryBinary
.text:000000000000C9F4                 ADRP            X1, #unk_10DEC@PAGE
.text:000000000000C9F8                 ADD             X1, X1, #unk_10DEC@PAGEOFF
.text:000000000000C9FC                 CBZ             W0, loc_CA2C
.text:000000000000CA00                 ADRP            X2, #aIssecurecommun@PAGE ; "isSecureCommunicate, Factory Binary"
.text:000000000000CA04                 ADD             X2, X2, #aIssecurecommun@PAGEOFF ; "isSecureCommunicate, Factory Binary"
.text:000000000000CA08                 MOV             W0, #4
.text:000000000000CA0C                 BL              .__android_log_print
.text:000000000000CA10                 BL              .isSWDFactory
.text:000000000000CA14                 ADRP            X1, #unk_10DEC@PAGE
.text:000000000000CA18                 ADD             X1, X1, #unk_10DEC@PAGEOFF
.text:000000000000CA1C                 CBZ             W0, loc_CA44
.text:000000000000CA20                 ADRP            X2, #aIssecurecommun_0@PAGE ; "isSecureCommunicate, Swd Factory"
.text:000000000000CA24                 ADD             X2, X2, #aIssecurecommun_0@PAGEOFF ; "isSecureCommunicate, Swd Factory"
.text:000000000000CA28                 B               loc_CA34
.text:000000000000CA2C ; ---------------------------------------------------------------------------
.text:000000000000CA2C loc_CA2C                                ; CODE XREF: getRestrictedCheck_NXP+88↑j
.text:000000000000CA2C                 ADRP            X2, #aIssecurecommun_1@PAGE ; "isSecureCommunicate, Normal Binary"
.text:000000000000CA30                 ADD             X2, X2, #aIssecurecommun_1@PAGEOFF ; "isSecureCommunicate, Normal Binary"
.text:000000000000CA34 loc_CA34                                ; CODE XREF: getRestrictedCheck_NXP+B4↑j
.text:000000000000CA34                 MOV             W0, #4
.text:000000000000CA38                 BL              .__android_log_print
.text:000000000000CA3C                 MOV             W24, #1
.text:000000000000CA40                 B               loc_CA58
.text:000000000000CA44 ; ---------------------------------------------------------------------------
.text:000000000000CA44 loc_CA44                                ; CODE XREF: getRestrictedCheck_NXP+A8↑j
.text:000000000000CA44                 ADRP            X2, #aIssecurecommun_2@PAGE ; "isSecureCommunicate, Nwd Factory"
.text:000000000000CA48                 ADD             X2, X2, #aIssecurecommun_2@PAGEOFF ; "isSecureCommunicate, Nwd Factory"
.text:000000000000CA4C                 MOV             W0, #4
.text:000000000000CA50                 BL              .__android_log_print
.text:000000000000CA54                 MOV             W24, WZR
.text:000000000000CA58 loc_CA58                                ; CODE XREF: getRestrictedCheck_NXP+CC↑j
.text:000000000000CA58                 MOV             X25, #0x414E2C414E2C474E
.text:000000000000CA68                 ORR             W8, W21, #8
.text:000000000000CA6C                 ORR             W9, W21, #2
.text:000000000000CA70                 CMP             W21, #0x10
.text:000000000000CA74                 B.EQ            loc_CABC
.text:000000000000CA78                 CMP             W9, #0xF
.text:000000000000CA7C                 B.EQ            loc_CABC
.text:000000000000CA80                 CMP             W21, #1
.text:000000000000CA84                 B.EQ            loc_CABC
.text:000000000000CA88                 CMP             W8, #0xC
.text:000000000000CA8C                 B.EQ            loc_CABC
.text:000000000000CA90                 ADRP            X1, #unk_10DEC@PAGE
.text:000000000000CA94                 ADRP            X2, #aNxpCheckVendor@PAGE ; "===== [NXP] : Check Vendor error : %s :"...
.text:000000000000CA98                 ADD             X1, X1, #unk_10DEC@PAGEOFF
.text:000000000000CA9C                 ADD             X2, X2, #aNxpCheckVendor@PAGEOFF ; "===== [NXP] : Check Vendor error : %s :"...
.text:000000000000CAA0                 MOV             W0, #6
.text:000000000000CAA4                 ADD             X3, SP, #0x830+s
.text:000000000000CAA8                 MOV             W4, #8
.text:000000000000CAAC                 STR             X25, [X23]
.text:000000000000CAB0                 MOV             W21, #8
.text:000000000000CAB4                 BL              .__android_log_print
.text:000000000000CAB8                 B               loc_CD20
.text:000000000000CABC ; ---------------------------------------------------------------------------
.text:000000000000CABC loc_CABC                                ; CODE XREF: getRestrictedCheck_NXP+100↑j
.text:000000000000CABC                                         ; getRestrictedCheck_NXP+108↑j ...
.text:000000000000CABC                 CMP             W21, #0x10
.text:000000000000CAC0                 B.EQ            loc_CAE0
.text:000000000000CAC4                 CMP             W9, #0xF
.text:000000000000CAC8                 B.EQ            loc_CAE0
.text:000000000000CACC                 CMP             W8, #0xC
.text:000000000000CAD0                 B.EQ            loc_CAE0
.text:000000000000CAD4                 CBZ             W24, loc_CAEC
.text:000000000000CAD8                 BL              .isRestricted
.text:000000000000CADC                 B               loc_CAF0
.text:000000000000CAE0 ; ---------------------------------------------------------------------------
.text:000000000000CAE0 loc_CAE0                                ; CODE XREF: getRestrictedCheck_NXP+14C↑j
.text:000000000000CAE0                                         ; getRestrictedCheck_NXP+154↑j ...
.text:000000000000CAE0                 CBZ             W24, loc_CB24
.text:000000000000CAE4                 BL              .isAttacked
.text:000000000000CAE8                 B               loc_CB28
.text:000000000000CAEC ; ---------------------------------------------------------------------------
.text:000000000000CAEC loc_CAEC                                ; CODE XREF: getRestrictedCheck_NXP+160↑j
.text:000000000000CAEC                 BL              .isRestrictedNwd
.text:000000000000CAF0 loc_CAF0                                ; CODE XREF: getRestrictedCheck_NXP+168↑j
.text:000000000000CAF0                 CBZ             W0, loc_CB7C
.text:000000000000CAF4                 CMP             W0, #1
.text:000000000000CAF8                 B.NE            loc_CC54
.text:000000000000CAFC                 MOV             W9, #0x4E2C0000
.text:000000000000CB00                 MOV             W8, #0x2C41
.text:000000000000CB04                 MOVK            W9, #0x4B4F
.text:000000000000CB08                 ADD             X0, SP, #0x830+n+4
.text:000000000000CB0C                 ADD             X1, SP, #0x830+n
.text:000000000000CB10                 STRH            W8, [SP,#0x830+var_42C]
.text:000000000000CB14                 STR             W9, [SP,#0x830+s]
.text:000000000000CB18                 CBZ             W24, loc_CC60
.text:000000000000CB1C                 BL              .getACDump
.text:000000000000CB20                 B               loc_CC64
.text:000000000000CB24 ; ---------------------------------------------------------------------------
.text:000000000000CB24 loc_CB24                                ; CODE XREF: getRestrictedCheck_NXP:loc_CAE0↑j
.text:000000000000CB24                 BL              .isAttackedNwd
.text:000000000000CB28 loc_CB28                                ; CODE XREF: getRestrictedCheck_NXP+174↑j
.text:000000000000CB28                 MOV             W21, W0
.text:000000000000CB2C                 ADRP            X1, #unk_10DEC@PAGE
.text:000000000000CB30                 ADRP            X2, #aNxpV4V52tV52uI@PAGE ; "===== [NXP_V4/V52T/V52U] : isAttacked c"...
.text:000000000000CB34                 ADD             X1, X1, #unk_10DEC@PAGEOFF
.text:000000000000CB38                 ADD             X2, X2, #aNxpV4V52tV52uI@PAGEOFF ; "===== [NXP_V4/V52T/V52U] : isAttacked c"...
.text:000000000000CB3C                 MOV             W0, #4
.text:000000000000CB40                 MOV             W3, W21
.text:000000000000CB44                 BL              .__android_log_print
.text:000000000000CB48                 CBZ             W21, loc_CBA8
.text:000000000000CB4C                 CMP             W21, #1
.text:000000000000CB50                 B.NE            loc_CBB4
.text:000000000000CB54                 MOV             W9, #0x302C0000
.text:000000000000CB58                 MOV             W8, #0x2C30
.text:000000000000CB5C                 MOVK            W9, #0x4B4F
.text:000000000000CB60                 ADD             X0, SP, #0x830+n+4
.text:000000000000CB64                 ADD             X1, SP, #0x830+n
.text:000000000000CB68                 STRH            W8, [SP,#0x830+var_42C]
.text:000000000000CB6C                 STR             W9, [SP,#0x830+s]
.text:000000000000CB70                 CBZ             W24, loc_CC60
.text:000000000000CB74                 BL              .getACDump
.text:000000000000CB78                 B               loc_CC64
.text:000000000000CB7C ; ---------------------------------------------------------------------------
.text:000000000000CB7C loc_CB7C                                ; CODE XREF: getRestrictedCheck_NXP:loc_CAF0↑j
.text:000000000000CB7C                 ADRP            X8, #aNgRestrictedNa@PAGE ; "NG_RESTRICTED,NA,"
.text:000000000000CB80                 ADD             X8, X8, #aNgRestrictedNa@PAGEOFF ; "NG_RESTRICTED,NA,"
.text:000000000000CB84                 LDR             Q0, [X8] ; "NG_RESTRICTED,NA,"
.text:000000000000CB88                 MOV             W8, #0x2C ; ','
.text:000000000000CB8C                 ADD             X0, SP, #0x830+n+4
.text:000000000000CB90                 ADD             X1, SP, #0x830+n
.text:000000000000CB94                 STRB            W8, [SP,#0x830+var_420]
.text:000000000000CB98                 STR             Q0, [X23]
.text:000000000000CB9C                 CBZ             W24, loc_CCDC
.text:000000000000CBA0                 BL              .getACDump
.text:000000000000CBA4                 B               loc_CCE0
.text:000000000000CBA8 ; ---------------------------------------------------------------------------
.text:000000000000CBA8 loc_CBA8                                ; CODE XREF: getRestrictedCheck_NXP+1D4↑j
.text:000000000000CBA8                 CBZ             W24, loc_CBC0
.text:000000000000CBAC                 BL              .isRestricted
.text:000000000000CBB0                 B               loc_CBC4
.text:000000000000CBB4 ; ---------------------------------------------------------------------------
.text:000000000000CBB4 loc_CBB4                                ; CODE XREF: getRestrictedCheck_NXP+1DC↑j
.text:000000000000CBB4                 CBZ             W24, loc_CC1C
.text:000000000000CBB8                 BL              .isRestricted
.text:000000000000CBBC                 B               loc_CC20
.text:000000000000CBC0 ; ---------------------------------------------------------------------------
.text:000000000000CBC0 loc_CBC0                                ; CODE XREF: getRestrictedCheck_NXP:loc_CBA8↑j
.text:000000000000CBC0                 BL              .isRestrictedNwd
.text:000000000000CBC4 loc_CBC4                                ; CODE XREF: getRestrictedCheck_NXP+23C↑j
.text:000000000000CBC4                 MOV             W21, W0
.text:000000000000CBC8                 ADRP            X1, #unk_10DEC@PAGE
.text:000000000000CBCC                 ADRP            X2, #aNxpV4V52tV52uI_0@PAGE ; "===== [NXP_V4/V52T/V52U] : isResticted "...
.text:000000000000CBD0                 ADD             X1, X1, #unk_10DEC@PAGEOFF
.text:000000000000CBD4                 ADD             X2, X2, #aNxpV4V52tV52uI_0@PAGEOFF ; "===== [NXP_V4/V52T/V52U] : isResticted "...
.text:000000000000CBD8                 MOV             W0, #4
.text:000000000000CBDC                 MOV             W3, W21
.text:000000000000CBE0                 BL              .__android_log_print
.text:000000000000CBE4                 CBZ             W21, loc_CC84
.text:000000000000CBE8                 CMP             W21, #1
.text:000000000000CBEC                 B.NE            loc_CC54
.text:000000000000CBF0                 ADRP            X8, #aNgAttacked01@PAGE ; "NG_ATTACKED,01,"
.text:000000000000CBF4                 ADD             X8, X8, #aNgAttacked01@PAGEOFF ; "NG_ATTACKED,01,"
.text:000000000000CBF8                 LDUR            X9, [X8,#7]
.text:000000000000CBFC                 LDR             X8, [X8] ; "NG_ATTACKED,01,"
.text:000000000000CC00                 ADD             X0, SP, #0x830+n+4
.text:000000000000CC04                 ADD             X1, SP, #0x830+n
.text:000000000000CC08                 STUR            X9, [X23,#7]
.text:000000000000CC0C                 STR             X8, [X23]
.text:000000000000CC10                 CBZ             W24, loc_CD00
.text:000000000000CC14                 BL              .getACDump
.text:000000000000CC18                 B               loc_CD04
.text:000000000000CC1C ; ---------------------------------------------------------------------------
.text:000000000000CC1C loc_CC1C                                ; CODE XREF: getRestrictedCheck_NXP:loc_CBB4↑j
.text:000000000000CC1C                 BL              .isRestrictedNwd
.text:000000000000CC20 loc_CC20                                ; CODE XREF: getRestrictedCheck_NXP+248↑j
.text:000000000000CC20                 CBZ             W0, loc_CCB0
.text:000000000000CC24                 CMP             W0, #1
.text:000000000000CC28                 B.NE            loc_CC54
.text:000000000000CC2C                 MOV             W9, #0x4E2C0000
.text:000000000000CC30                 MOV             W8, #0x2C41
.text:000000000000CC34                 MOVK            W9, #0x4B4F
.text:000000000000CC38                 ADD             X0, SP, #0x830+n+4
.text:000000000000CC3C                 ADD             X1, SP, #0x830+n
.text:000000000000CC40                 STRH            W8, [SP,#0x830+var_42C]
.text:000000000000CC44                 STR             W9, [SP,#0x830+s]
.text:000000000000CC48                 CBZ             W24, loc_CC60
.text:000000000000CC4C                 BL              .getACDump
.text:000000000000CC50                 B               loc_CC64
.text:000000000000CC54 ; ---------------------------------------------------------------------------
.text:000000000000CC54 loc_CC54                                ; CODE XREF: getRestrictedCheck_NXP+184↑j
.text:000000000000CC54                                         ; getRestrictedCheck_NXP+278↑j ...
.text:000000000000CC54                 STR             X25, [X23]
.text:000000000000CC58                 MOV             W21, #8
.text:000000000000CC5C                 B               loc_CD20
.text:000000000000CC60 ; ---------------------------------------------------------------------------
.text:000000000000CC60 loc_CC60                                ; CODE XREF: getRestrictedCheck_NXP+1A4↑j
.text:000000000000CC60                                         ; getRestrictedCheck_NXP+1FC↑j ...
.text:000000000000CC60                 BL              .getACDumpNwd
.text:000000000000CC64 loc_CC64                                ; CODE XREF: getRestrictedCheck_NXP+1AC↑j
.text:000000000000CC64                                         ; getRestrictedCheck_NXP+204↑j ...
.text:000000000000CC64                 LDR             W2, [SP,#0x830+n] ; n
.text:000000000000CC68                 ADD             X8, SP, #0x830+s
.text:000000000000CC6C                 ORR             X0, X8, #6 ; dest
.text:000000000000CC70                 ADD             X1, SP, #0x830+n+4 ; src
.text:000000000000CC74                 BL              .strncpy
.text:000000000000CC78                 LDR             W8, [SP,#0x830+n]
.text:000000000000CC7C                 ADD             W21, W8, #6
.text:000000000000CC80                 B               loc_CD20
.text:000000000000CC84 ; ---------------------------------------------------------------------------
.text:000000000000CC84 loc_CC84                                ; CODE XREF: getRestrictedCheck_NXP+270↑j
.text:000000000000CC84                 ADRP            X8, #aNgRestrictedNa@PAGE ; "NG_RESTRICTED,NA,"
.text:000000000000CC88                 ADD             X8, X8, #aNgRestrictedNa@PAGEOFF ; "NG_RESTRICTED,NA,"
.text:000000000000CC8C                 LDR             Q0, [X8] ; "NG_RESTRICTED,NA,"
.text:000000000000CC90                 MOV             W8, #0x2C ; ','
.text:000000000000CC94                 ADD             X0, SP, #0x830+n+4
.text:000000000000CC98                 ADD             X1, SP, #0x830+n
.text:000000000000CC9C                 STRB            W8, [SP,#0x830+var_420]
.text:000000000000CCA0                 STR             Q0, [X23]
.text:000000000000CCA4                 CBZ             W24, loc_CCDC
.text:000000000000CCA8                 BL              .getACDump
.text:000000000000CCAC                 B               loc_CCE0
.text:000000000000CCB0 ; ---------------------------------------------------------------------------
.text:000000000000CCB0 loc_CCB0                                ; CODE XREF: getRestrictedCheck_NXP:loc_CC20↑j
.text:000000000000CCB0                 ADRP            X8, #aNgRestrictedNa@PAGE ; "NG_RESTRICTED,NA,"
.text:000000000000CCB4                 ADD             X8, X8, #aNgRestrictedNa@PAGEOFF ; "NG_RESTRICTED,NA,"
.text:000000000000CCB8                 LDR             Q0, [X8] ; "NG_RESTRICTED,NA,"
.text:000000000000CCBC                 MOV             W8, #0x2C ; ','
.text:000000000000CCC0                 ADD             X0, SP, #0x830+n+4
.text:000000000000CCC4                 ADD             X1, SP, #0x830+n
.text:000000000000CCC8                 STRB            W8, [SP,#0x830+var_420]
.text:000000000000CCCC                 STR             Q0, [X23]
.text:000000000000CCD0                 CBZ             W24, loc_CCDC
.text:000000000000CCD4                 BL              .getACDump
.text:000000000000CCD8                 B               loc_CCE0
.text:000000000000CCDC ; ---------------------------------------------------------------------------
.text:000000000000CCDC loc_CCDC                                ; CODE XREF: getRestrictedCheck_NXP+228↑j
.text:000000000000CCDC                                         ; getRestrictedCheck_NXP+330↑j ...
.text:000000000000CCDC                 BL              .getACDumpNwd
.text:000000000000CCE0 loc_CCE0                                ; CODE XREF: getRestrictedCheck_NXP+230↑j
.text:000000000000CCE0                                         ; getRestrictedCheck_NXP+338↑j ...
.text:000000000000CCE0                 LDR             W2, [SP,#0x830+n] ; n
.text:000000000000CCE4                 ADD             X8, SP, #0x830+s
.text:000000000000CCE8                 ADD             X0, X8, #0x11 ; dest
.text:000000000000CCEC                 ADD             X1, SP, #0x830+n+4 ; src
.text:000000000000CCF0                 BL              .strncpy
.text:000000000000CCF4                 LDR             W8, [SP,#0x830+n]
.text:000000000000CCF8                 ADD             W21, W8, #0x11
.text:000000000000CCFC                 B               loc_CD20
.text:000000000000CD00 ; ---------------------------------------------------------------------------
.text:000000000000CD00 loc_CD00                                ; CODE XREF: getRestrictedCheck_NXP+29C↑j
.text:000000000000CD00                 BL              .getACDumpNwd
.text:000000000000CD04 loc_CD04                                ; CODE XREF: getRestrictedCheck_NXP+2A4↑j
.text:000000000000CD04                 LDR             W2, [SP,#0x830+n] ; n
.text:000000000000CD08                 ADD             X8, SP, #0x830+s
.text:000000000000CD0C                 ORR             X0, X8, #0xF ; dest
.text:000000000000CD10                 ADD             X1, SP, #0x830+n+4 ; src
.text:000000000000CD14                 BL              .strncpy
.text:000000000000CD18                 LDR             W8, [SP,#0x830+n]
.text:000000000000CD1C                 ADD             W21, W8, #0xF
.text:000000000000CD20 loc_CD20                                ; CODE XREF: getRestrictedCheck_NXP+144↑j
.text:000000000000CD20                                         ; getRestrictedCheck_NXP+2E8↑j ...
.text:000000000000CD20                 MOV             W2, W21 ; n
.text:000000000000CD24                 ADD             X1, SP, #0x830+s ; src
.text:000000000000CD28                 MOV             X0, X20 ; dest
.text:000000000000CD2C                 BL              .strncpy
.text:000000000000CD30                 STR             W21, [X19]
.text:000000000000CD34                 LDR             X8, [X23,#0x3E8]
.text:000000000000CD38                 SUB             X8, X22, X8
.text:000000000000CD3C                 CBNZ            X8, loc_CD5C
.text:000000000000CD40                 SUB             SP, X29, #0x40 ; '@'
.text:000000000000CD44                 LDP             X29, X30, [SP,#0x40+var_s0]
.text:000000000000CD48                 LDP             X20, X19, [SP,#0x40+var_10]
.text:000000000000CD4C                 LDP             X22, X21, [SP,#0x40+var_20]
.text:000000000000CD50                 LDP             X24, X23, [SP,#0x40+var_30]
.text:000000000000CD54                 LDP             X26, X25, [SP+0x40+var_40],#0x50
.text:000000000000CD58                 RET
.text:000000000000CD5C ; ---------------------------------------------------------------------------
.text:000000000000CD5C loc_CD5C                                ; CODE XREF: getRestrictedCheck_NXP+3C8↑j
.text:000000000000CD5C                 BL              .__stack_chk_fail
.text:000000000000CD5C ; } // starts at C974
.text:000000000000CD5C ; End of function getRestrictedCheck_NXP
.text:000000000000CD60 ; =============== S U B R O U T I N E =======================================
.text:000000000000CD60 ; Attributes: bp-based frame
.text:000000000000CD60                 EXPORT getRestrictedCheck_Gemalto
.text:000000000000CD60 getRestrictedCheck_Gemalto              ; CODE XREF: .getRestrictedCheck_Gemalto+C↑j
.text:000000000000CD60                                         ; DATA XREF: LOAD:0000000000001060↑o ...
.text:000000000000CD60 n               = -0x81C
.text:000000000000CD60 s               = -0x430
.text:000000000000CD60 var_42C         = -0x42C
.text:000000000000CD60 var_42A         = -0x42A
.text:000000000000CD60 var_420         = -0x420
.text:000000000000CD60 var_41E         = -0x41E
.text:000000000000CD60 var_40          = -0x40
.text:000000000000CD60 var_30          = -0x30
.text:000000000000CD60 var_20          = -0x20
.text:000000000000CD60 var_10          = -0x10
.text:000000000000CD60 var_s0          =  0
.text:000000000000CD60 ; __unwind {
.text:000000000000CD60                 STP             X26, X25, [SP,#-0x10+var_40]!
.text:000000000000CD64                 STP             X24, X23, [SP,#0x40+var_30]
.text:000000000000CD68                 STP             X22, X21, [SP,#0x40+var_20]
.text:000000000000CD6C                 STP             X20, X19, [SP,#0x40+var_10]
.text:000000000000CD70                 STP             X29, X30, [SP,#0x40+var_s0]
.text:000000000000CD74                 ADD             X29, SP, #0x40
.text:000000000000CD78                 SUB             SP, SP, #0x7F0
.text:000000000000CD7C                 ADRP            X22, #__stack_chk_guard_ptr@PAGE
.text:000000000000CD80                 LDR             X22, [X22,#__stack_chk_guard_ptr@PAGEOFF]
.text:000000000000CD84                 MOV             X19, X1
.text:000000000000CD88                 ADRP            X1, #unk_10DEC@PAGE
.text:000000000000CD8C                 ADRP            X2, #aSemfactoryStar_0@PAGE ; "===== [SEMFactory] : start getRestricte"...
.text:000000000000CD90                 LDR             X22, [X22]
.text:000000000000CD94                 MOV             X20, X0
.text:000000000000CD98                 ADD             X23, SP, #0x830+s
.text:000000000000CD9C                 ADD             X1, X1, #unk_10DEC@PAGEOFF
.text:000000000000CDA0                 ADD             X2, X2, #aSemfactoryStar_0@PAGEOFF ; "===== [SEMFactory] : start getRestricte"...
.text:000000000000CDA4                 MOV             W0, #4
.text:000000000000CDA8                 STR             X22, [X23,#0x3E8]
.text:000000000000CDAC                 BL              .__android_log_print
.text:000000000000CDB0                 ADD             X0, SP, #0x830+s ; s
.text:000000000000CDB4                 MOV             W2, #0x3E8 ; n
.text:000000000000CDB8                 MOV             W1, WZR ; c
.text:000000000000CDBC                 STR             WZR, [SP,#0x830+n]
.text:000000000000CDC0                 BL              .memset
.text:000000000000CDC4                 ADD             X0, SP, #0x830+n+4 ; s
.text:000000000000CDC8                 MOV             W2, #0x3E8 ; n
.text:000000000000CDCC                 MOV             W1, WZR ; c
.text:000000000000CDD0                 BL              .memset
.text:000000000000CDD4                 BL              .getVendor
.text:000000000000CDD8                 MOV             W21, W0
.text:000000000000CDDC                 BL              .isFactoryBinary
.text:000000000000CDE0                 MOV             X24, #0x414E2C414E2C0000
.text:000000000000CDEC                 ADRP            X1, #unk_10DEC@PAGE
.text:000000000000CDF0                 MOVK            X24, #0x474E
.text:000000000000CDF4                 ADD             X1, X1, #unk_10DEC@PAGEOFF
.text:000000000000CDF8                 CBZ             W0, loc_CE28
.text:000000000000CDFC                 ADRP            X2, #aIssecurecommun@PAGE ; "isSecureCommunicate, Factory Binary"
.text:000000000000CE00                 ADD             X2, X2, #aIssecurecommun@PAGEOFF ; "isSecureCommunicate, Factory Binary"
.text:000000000000CE04                 MOV             W0, #4
.text:000000000000CE08                 BL              .__android_log_print
.text:000000000000CE0C                 BL              .isSWDFactory
.text:000000000000CE10                 ADRP            X1, #unk_10DEC@PAGE
.text:000000000000CE14                 ADD             X1, X1, #unk_10DEC@PAGEOFF
.text:000000000000CE18                 CBZ             W0, loc_CE40
.text:000000000000CE1C                 ADRP            X2, #aIssecurecommun_0@PAGE ; "isSecureCommunicate, Swd Factory"
.text:000000000000CE20                 ADD             X2, X2, #aIssecurecommun_0@PAGEOFF ; "isSecureCommunicate, Swd Factory"
.text:000000000000CE24                 B               loc_CE30
.text:000000000000CE28 ; ---------------------------------------------------------------------------
.text:000000000000CE28 loc_CE28                                ; CODE XREF: getRestrictedCheck_Gemalto+98↑j
.text:000000000000CE28                 ADRP            X2, #aIssecurecommun_1@PAGE ; "isSecureCommunicate, Normal Binary"
.text:000000000000CE2C                 ADD             X2, X2, #aIssecurecommun_1@PAGEOFF ; "isSecureCommunicate, Normal Binary"
.text:000000000000CE30 loc_CE30                                ; CODE XREF: getRestrictedCheck_Gemalto+C4↑j
.text:000000000000CE30                 MOV             W0, #4
.text:000000000000CE34                 BL              .__android_log_print
.text:000000000000CE38                 MOV             W25, #1
.text:000000000000CE3C                 B               loc_CE54
.text:000000000000CE40 ; ---------------------------------------------------------------------------
.text:000000000000CE40 loc_CE40                                ; CODE XREF: getRestrictedCheck_Gemalto+B8↑j
.text:000000000000CE40                 ADRP            X2, #aIssecurecommun_2@PAGE ; "isSecureCommunicate, Nwd Factory"
.text:000000000000CE44                 ADD             X2, X2, #aIssecurecommun_2@PAGEOFF ; "isSecureCommunicate, Nwd Factory"
.text:000000000000CE48                 MOV             W0, #4
.text:000000000000CE4C                 BL              .__android_log_print
.text:000000000000CE50                 MOV             W25, WZR
.text:000000000000CE54 loc_CE54                                ; CODE XREF: getRestrictedCheck_Gemalto+DC↑j
.text:000000000000CE54                 ORR             W8, W21, #3
.text:000000000000CE58                 CMP             W8, #0xB
.text:000000000000CE5C                 B.NE            loc_CE80
.text:000000000000CE60                 CMP             W21, #0xE
.text:000000000000CE64                 B.HI            loc_CEA4
.text:000000000000CE68                 MOV             W8, #1
.text:000000000000CE6C                 LSL             W8, W8, W21
.text:000000000000CE70                 MOV             W9, #0x4E00
.text:000000000000CE74                 AND             W8, W8, W9
.text:000000000000CE78                 CBNZ            W8, loc_CE98
.text:000000000000CE7C                 B               loc_CEA4
.text:000000000000CE80 ; ---------------------------------------------------------------------------
.text:000000000000CE80 loc_CE80                                ; CODE XREF: getRestrictedCheck_Gemalto+FC↑j
.text:000000000000CE80                 CMP             W21, #3
.text:000000000000CE84                 B.EQ            loc_CEA4
.text:000000000000CE88                 CMP             W21, #5
.text:000000000000CE8C                 B.EQ            loc_CEA4
.text:000000000000CE90                 CMP             W21, #0xE
.text:000000000000CE94                 B.NE            loc_CF30
.text:000000000000CE98 loc_CE98                                ; CODE XREF: getRestrictedCheck_Gemalto+118↑j
.text:000000000000CE98                 CBZ             W25, loc_CEC0
.text:000000000000CE9C                 BL              .isAttacked
.text:000000000000CEA0                 B               loc_CEC4
.text:000000000000CEA4 ; ---------------------------------------------------------------------------
.text:000000000000CEA4 loc_CEA4                                ; CODE XREF: getRestrictedCheck_Gemalto+104↑j
.text:000000000000CEA4                                         ; getRestrictedCheck_Gemalto+11C↑j ...
.text:000000000000CEA4                 CMP             W21, #8
.text:000000000000CEA8                 B.EQ            loc_CEB4
.text:000000000000CEAC                 CMP             W21, #5
.text:000000000000CEB0                 B.NE            loc_CF5C
.text:000000000000CEB4 loc_CEB4                                ; CODE XREF: getRestrictedCheck_Gemalto+148↑j
.text:000000000000CEB4                 CBZ             W25, loc_CF68
.text:000000000000CEB8                 BL              .isAttacked
.text:000000000000CEBC                 B               loc_CF6C
.text:000000000000CEC0 ; ---------------------------------------------------------------------------
.text:000000000000CEC0 loc_CEC0                                ; CODE XREF: getRestrictedCheck_Gemalto:loc_CE98↑j
.text:000000000000CEC0                 BL              .isAttackedNwd
.text:000000000000CEC4 loc_CEC4                                ; CODE XREF: getRestrictedCheck_Gemalto+140↑j
.text:000000000000CEC4                 MOV             W21, W0
.text:000000000000CEC8                 ADRP            X1, #unk_10DEC@PAGE
.text:000000000000CECC                 ADRP            X2, #aGemaltoV5V6uV6@PAGE ; "===== [GEMALTO_V5/V6U/V6T/V51] : isAtta"...
.text:000000000000CED0                 ADD             X1, X1, #unk_10DEC@PAGEOFF
.text:000000000000CED4                 ADD             X2, X2, #aGemaltoV5V6uV6@PAGEOFF ; "===== [GEMALTO_V5/V6U/V6T/V51] : isAtta"...
.text:000000000000CED8                 MOV             W0, #4
.text:000000000000CEDC                 MOV             W3, W21
.text:000000000000CEE0                 BL              .__android_log_print
.text:000000000000CEE4                 CBZ             W21, loc_CF18
.text:000000000000CEE8                 CMP             W21, #1
.text:000000000000CEEC                 B.NE            loc_CF24
.text:000000000000CEF0                 MOV             W9, #0x302C0000
.text:000000000000CEF4                 MOV             W8, #0x2C30
.text:000000000000CEF8                 MOVK            W9, #0x4B4F
.text:000000000000CEFC                 ADD             X0, SP, #0x830+n+4
.text:000000000000CF00                 ADD             X1, SP, #0x830+n
.text:000000000000CF04                 STRH            W8, [SP,#0x830+var_42C]
.text:000000000000CF08                 STR             W9, [SP,#0x830+s]
.text:000000000000CF0C                 CBZ             W25, loc_CFB0
.text:000000000000CF10                 BL              .getACDump
.text:000000000000CF14                 B               loc_CFB4
.text:000000000000CF18 ; ---------------------------------------------------------------------------
.text:000000000000CF18 loc_CF18                                ; CODE XREF: getRestrictedCheck_Gemalto+184↑j
.text:000000000000CF18                 CBZ             W25, loc_CFC4
.text:000000000000CF1C                 BL              .isRestricted
.text:000000000000CF20                 B               loc_CFC8
.text:000000000000CF24 ; ---------------------------------------------------------------------------
.text:000000000000CF24 loc_CF24                                ; CODE XREF: getRestrictedCheck_Gemalto+18C↑j
.text:000000000000CF24                 CBZ             W25, loc_D020
.text:000000000000CF28                 BL              .isRestricted
.text:000000000000CF2C                 B               loc_D024
.text:000000000000CF30 ; ---------------------------------------------------------------------------
.text:000000000000CF30 loc_CF30                                ; CODE XREF: getRestrictedCheck_Gemalto+134↑j
.text:000000000000CF30                 ADRP            X1, #unk_10DEC@PAGE
.text:000000000000CF34                 ADRP            X2, #aGemaltoCheckVe@PAGE ; "===== [GEMALTO] : Check Vendor error : "...
.text:000000000000CF38                 ADD             X1, X1, #unk_10DEC@PAGEOFF
.text:000000000000CF3C                 ADD             X2, X2, #aGemaltoCheckVe@PAGEOFF ; "===== [GEMALTO] : Check Vendor error : "...
.text:000000000000CF40                 MOV             W0, #6
.text:000000000000CF44                 ADD             X3, SP, #0x830+s
.text:000000000000CF48                 MOV             W4, #8
.text:000000000000CF4C                 STR             X24, [X23]
.text:000000000000CF50                 MOV             W21, #8
.text:000000000000CF54                 BL              .__android_log_print
.text:000000000000CF58                 B               loc_D1EC
.text:000000000000CF5C ; ---------------------------------------------------------------------------
.text:000000000000CF5C loc_CF5C                                ; CODE XREF: getRestrictedCheck_Gemalto+150↑j
.text:000000000000CF5C                 CBZ             W25, loc_D070
.text:000000000000CF60                 BL              .isRestricted
.text:000000000000CF64                 B               loc_D074
.text:000000000000CF68 ; ---------------------------------------------------------------------------
.text:000000000000CF68 loc_CF68                                ; CODE XREF: getRestrictedCheck_Gemalto:loc_CEB4↑j
.text:000000000000CF68                 BL              .isAttackedNwd
.text:000000000000CF6C loc_CF6C                                ; CODE XREF: getRestrictedCheck_Gemalto+15C↑j
.text:000000000000CF6C                 MOV             W21, W0
.text:000000000000CF70                 ADRP            X1, #unk_10DEC@PAGE
.text:000000000000CF74                 ADRP            X2, #aGemaltoV3V4Isa@PAGE ; "===== [GEMALTO_V3/V4] : isAttacked chec"...
.text:000000000000CF78                 ADD             X1, X1, #unk_10DEC@PAGEOFF
.text:000000000000CF7C                 ADD             X2, X2, #aGemaltoV3V4Isa@PAGEOFF ; "===== [GEMALTO_V3/V4] : isAttacked chec"...
.text:000000000000CF80                 MOV             W0, #4
.text:000000000000CF84                 MOV             W3, W21
.text:000000000000CF88                 BL              .__android_log_print
.text:000000000000CF8C                 CBZ             W21, loc_D058
.text:000000000000CF90                 CMP             W21, #1
.text:000000000000CF94                 B.NE            loc_D064
.text:000000000000CF98                 MOV             X8, #0x414E2C30302C4B4F
.text:000000000000CFA8                 STR             X8, [X23]
.text:000000000000CFAC                 B               loc_D1E8
.text:000000000000CFB0 ; ---------------------------------------------------------------------------
.text:000000000000CFB0 loc_CFB0                                ; CODE XREF: getRestrictedCheck_Gemalto+1AC↑j
.text:000000000000CFB0                 BL              .getACDumpNwd
.text:000000000000CFB4 loc_CFB4                                ; CODE XREF: getRestrictedCheck_Gemalto+1B4↑j
.text:000000000000CFB4                 LDR             W2, [SP,#0x830+n]
.text:000000000000CFB8                 CBNZ            W0, loc_D1C8
.text:000000000000CFBC                 CBNZ            W2, loc_D1AC
.text:000000000000CFC0                 B               loc_D1C8
.text:000000000000CFC4 ; ---------------------------------------------------------------------------
.text:000000000000CFC4 loc_CFC4                                ; CODE XREF: getRestrictedCheck_Gemalto:loc_CF18↑j
.text:000000000000CFC4                 BL              .isRestrictedNwd
.text:000000000000CFC8 loc_CFC8                                ; CODE XREF: getRestrictedCheck_Gemalto+1C0↑j
.text:000000000000CFC8                 MOV             W21, W0
.text:000000000000CFCC                 ADRP            X1, #unk_10DEC@PAGE
.text:000000000000CFD0                 ADRP            X2, #aGemaltoV5V6uV6_0@PAGE ; "===== [GEMALTO_V5/V6U/V6T/V51] : isRest"...
.text:000000000000CFD4                 ADD             X1, X1, #unk_10DEC@PAGEOFF
.text:000000000000CFD8                 ADD             X2, X2, #aGemaltoV5V6uV6_0@PAGEOFF ; "===== [GEMALTO_V5/V6U/V6T/V51] : isRest"...
.text:000000000000CFDC                 MOV             W0, #4
.text:000000000000CFE0                 MOV             W3, W21
.text:000000000000CFE4                 BL              .__android_log_print
.text:000000000000CFE8                 CBZ             W21, loc_D07C
.text:000000000000CFEC                 CMP             W21, #1
.text:000000000000CFF0                 B.NE            loc_D140
.text:000000000000CFF4                 ADRP            X8, #aNgAttacked01@PAGE ; "NG_ATTACKED,01,"
.text:000000000000CFF8                 ADD             X8, X8, #aNgAttacked01@PAGEOFF ; "NG_ATTACKED,01,"
.text:000000000000CFFC                 LDUR            X9, [X8,#7]
.text:000000000000D000                 LDR             X8, [X8] ; "NG_ATTACKED,01,"
.text:000000000000D004                 ADD             X0, SP, #0x830+n+4
.text:000000000000D008                 ADD             X1, SP, #0x830+n
.text:000000000000D00C                 STUR            X9, [X23,#7]
.text:000000000000D010                 STR             X8, [X23]
.text:000000000000D014                 CBZ             W25, loc_D170
.text:000000000000D018                 BL              .getACDump
.text:000000000000D01C                 B               loc_D174
.text:000000000000D020 ; ---------------------------------------------------------------------------
.text:000000000000D020 loc_D020                                ; CODE XREF: getRestrictedCheck_Gemalto:loc_CF24↑j
.text:000000000000D020                 BL              .isRestrictedNwd
.text:000000000000D024 loc_D024                                ; CODE XREF: getRestrictedCheck_Gemalto+1CC↑j
.text:000000000000D024                 CBZ             W0, loc_D0A8
.text:000000000000D028                 CMP             W0, #1
.text:000000000000D02C                 B.NE            loc_D140
.text:000000000000D030                 MOV             W9, #0x4E2C0000
.text:000000000000D034                 MOV             W8, #0x2C41
.text:000000000000D038                 MOVK            W9, #0x4B4F
.text:000000000000D03C                 ADD             X0, SP, #0x830+n+4
.text:000000000000D040                 ADD             X1, SP, #0x830+n
.text:000000000000D044                 STRH            W8, [SP,#0x830+var_42C]
.text:000000000000D048                 STR             W9, [SP,#0x830+s]
.text:000000000000D04C                 CBZ             W25, loc_D19C
.text:000000000000D050                 BL              .getACDump
.text:000000000000D054                 B               loc_D1A0
.text:000000000000D058 ; ---------------------------------------------------------------------------
.text:000000000000D058 loc_D058                                ; CODE XREF: getRestrictedCheck_Gemalto+22C↑j
.text:000000000000D058                 CBZ             W25, loc_D0D4
.text:000000000000D05C                 BL              .isRestricted
.text:000000000000D060                 B               loc_D0D8
.text:000000000000D064 ; ---------------------------------------------------------------------------
.text:000000000000D064 loc_D064                                ; CODE XREF: getRestrictedCheck_Gemalto+234↑j
.text:000000000000D064                 CBZ             W25, loc_D124
.text:000000000000D068                 BL              .isRestricted
.text:000000000000D06C                 B               loc_D128
.text:000000000000D070 ; ---------------------------------------------------------------------------
.text:000000000000D070 loc_D070                                ; CODE XREF: getRestrictedCheck_Gemalto:loc_CF5C↑j
.text:000000000000D070                 BL              .isRestrictedNwd
.text:000000000000D074 loc_D074                                ; CODE XREF: getRestrictedCheck_Gemalto+204↑j
.text:000000000000D074                 CBNZ            W0, loc_D12C
.text:000000000000D078                 B               loc_D148
.text:000000000000D07C ; ---------------------------------------------------------------------------
.text:000000000000D07C loc_D07C                                ; CODE XREF: getRestrictedCheck_Gemalto+288↑j
.text:000000000000D07C                 ADRP            X8, #aNgRestrictedNa@PAGE ; "NG_RESTRICTED,NA,"
.text:000000000000D080                 ADD             X8, X8, #aNgRestrictedNa@PAGEOFF ; "NG_RESTRICTED,NA,"
.text:000000000000D084                 LDR             Q0, [X8] ; "NG_RESTRICTED,NA,"
.text:000000000000D088                 MOV             W8, #0x2C ; ','
.text:000000000000D08C                 ADD             X0, SP, #0x830+n+4
.text:000000000000D090                 ADD             X1, SP, #0x830+n
.text:000000000000D094                 STRB            W8, [SP,#0x830+var_420]
.text:000000000000D098                 STR             Q0, [X23]
.text:000000000000D09C                 CBZ             W25, loc_D228
.text:000000000000D0A0                 BL              .getACDump
.text:000000000000D0A4                 B               loc_D22C
.text:000000000000D0A8 ; ---------------------------------------------------------------------------
.text:000000000000D0A8 loc_D0A8                                ; CODE XREF: getRestrictedCheck_Gemalto:loc_D024↑j
.text:000000000000D0A8                 ADRP            X8, #aNgRestrictedNa@PAGE ; "NG_RESTRICTED,NA,"
.text:000000000000D0AC                 ADD             X8, X8, #aNgRestrictedNa@PAGEOFF ; "NG_RESTRICTED,NA,"
.text:000000000000D0B0                 LDR             Q0, [X8] ; "NG_RESTRICTED,NA,"
.text:000000000000D0B4                 MOV             W8, #0x2C ; ','
.text:000000000000D0B8                 ADD             X0, SP, #0x830+n+4
.text:000000000000D0BC                 ADD             X1, SP, #0x830+n
.text:000000000000D0C0                 STRB            W8, [SP,#0x830+var_420]
.text:000000000000D0C4                 STR             Q0, [X23]
.text:000000000000D0C8                 CBZ             W25, loc_D23C
.text:000000000000D0CC                 BL              .getACDump
.text:000000000000D0D0                 B               loc_D240
.text:000000000000D0D4 ; ---------------------------------------------------------------------------
.text:000000000000D0D4 loc_D0D4                                ; CODE XREF: getRestrictedCheck_Gemalto:loc_D058↑j
.text:000000000000D0D4                 BL              .isRestrictedNwd
.text:000000000000D0D8 loc_D0D8                                ; CODE XREF: getRestrictedCheck_Gemalto+300↑j
.text:000000000000D0D8                 MOV             W21, W0
.text:000000000000D0DC                 ADRP            X1, #unk_10DEC@PAGE
.text:000000000000D0E0                 ADRP            X2, #aGemaltoV3V4Isr@PAGE ; "===== [GEMALTO_V3/V4] : isResticted che"...
.text:000000000000D0E4                 ADD             X1, X1, #unk_10DEC@PAGEOFF
.text:000000000000D0E8                 ADD             X2, X2, #aGemaltoV3V4Isr@PAGEOFF ; "===== [GEMALTO_V3/V4] : isResticted che"...
.text:000000000000D0EC                 MOV             W0, #4
.text:000000000000D0F0                 MOV             W3, W21
.text:000000000000D0F4                 BL              .__android_log_print
.text:000000000000D0F8                 CBZ             W21, loc_D148
.text:000000000000D0FC                 CMP             W21, #1
.text:000000000000D100                 B.NE            loc_D140
.text:000000000000D104                 ADRP            X8, #aNgAttacked01Na@PAGE ; "NG_ATTACKED,01,NA"
.text:000000000000D108                 ADD             X8, X8, #aNgAttacked01Na@PAGEOFF ; "NG_ATTACKED,01,NA"
.text:000000000000D10C                 LDR             Q0, [X8] ; "NG_ATTACKED,01,NA"
.text:000000000000D110                 MOV             W8, #0x41 ; 'A'
.text:000000000000D114                 STRB            W8, [SP,#0x830+var_420]
.text:000000000000D118                 MOV             W21, #0x11
.text:000000000000D11C                 STR             Q0, [X23]
.text:000000000000D120                 B               loc_D1EC
.text:000000000000D124 ; ---------------------------------------------------------------------------
.text:000000000000D124 loc_D124                                ; CODE XREF: getRestrictedCheck_Gemalto:loc_D064↑j
.text:000000000000D124                 BL              .isRestrictedNwd
.text:000000000000D128 loc_D128                                ; CODE XREF: getRestrictedCheck_Gemalto+30C↑j
.text:000000000000D128                 CBZ             W0, loc_D148
.text:000000000000D12C loc_D12C                                ; CODE XREF: getRestrictedCheck_Gemalto:loc_D074↑j
.text:000000000000D12C                 CMP             W0, #1
.text:000000000000D130                 B.NE            loc_D140
.text:000000000000D134                 ADD             X8, X24, #0x401
.text:000000000000D138                 STR             X8, [X23]
.text:000000000000D13C                 B               loc_D1E8
.text:000000000000D140 ; ---------------------------------------------------------------------------
.text:000000000000D140 loc_D140                                ; CODE XREF: getRestrictedCheck_Gemalto+290↑j
.text:000000000000D140                                         ; getRestrictedCheck_Gemalto+2CC↑j ...
.text:000000000000D140                 STR             X24, [X23]
.text:000000000000D144                 B               loc_D1E8
.text:000000000000D148 ; ---------------------------------------------------------------------------
.text:000000000000D148 loc_D148                                ; CODE XREF: getRestrictedCheck_Gemalto+318↑j
.text:000000000000D148                                         ; getRestrictedCheck_Gemalto+398↑j ...
.text:000000000000D148                 ADRP            X9, #aNgRestrictedNa_0@PAGE ; "NG_RESTRICTED,NA,NA"
.text:000000000000D14C                 ADD             X9, X9, #aNgRestrictedNa_0@PAGEOFF ; "NG_RESTRICTED,NA,NA"
.text:000000000000D150                 LDR             Q0, [X9] ; "NG_RESTRICTED,NA,NA"
.text:000000000000D154                 MOV             W8, #0x41 ; 'A'
.text:000000000000D158                 MOV             W9, #0x4E2C
.text:000000000000D15C                 STRB            W8, [SP,#0x830+var_41E]
.text:000000000000D160                 STRH            W9, [SP,#0x830+var_420]
.text:000000000000D164                 STR             Q0, [X23]
.text:000000000000D168                 MOV             W21, #0x13
.text:000000000000D16C                 B               loc_D1EC
.text:000000000000D170 ; ---------------------------------------------------------------------------
.text:000000000000D170 loc_D170                                ; CODE XREF: getRestrictedCheck_Gemalto+2B4↑j
.text:000000000000D170                 BL              .getACDumpNwd
.text:000000000000D174 loc_D174                                ; CODE XREF: getRestrictedCheck_Gemalto+2BC↑j
.text:000000000000D174                 LDR             W2, [SP,#0x830+n] ; n
.text:000000000000D178                 CBNZ            W0, loc_D290
.text:000000000000D17C                 CBZ             W2, loc_D290
.text:000000000000D180                 ADD             X8, SP, #0x830+s
.text:000000000000D184                 ORR             X0, X8, #0xF ; dest
.text:000000000000D188                 ADD             X1, SP, #0x830+n+4 ; src
.text:000000000000D18C                 BL              .strncpy
.text:000000000000D190                 LDR             W8, [SP,#0x830+n]
.text:000000000000D194                 ADD             W21, W8, #0xF
.text:000000000000D198                 B               loc_D1EC
.text:000000000000D19C ; ---------------------------------------------------------------------------
.text:000000000000D19C loc_D19C                                ; CODE XREF: getRestrictedCheck_Gemalto+2EC↑j
.text:000000000000D19C                 BL              .getACDumpNwd
.text:000000000000D1A0 loc_D1A0                                ; CODE XREF: getRestrictedCheck_Gemalto+2F4↑j
.text:000000000000D1A0                 LDR             W2, [SP,#0x830+n] ; n
.text:000000000000D1A4                 CBNZ            W0, loc_D1C8
.text:000000000000D1A8                 CBZ             W2, loc_D1C8
.text:000000000000D1AC loc_D1AC                                ; CODE XREF: getRestrictedCheck_Gemalto+25C↑j
.text:000000000000D1AC                 ADD             X8, SP, #0x830+s
.text:000000000000D1B0                 ORR             X0, X8, #6 ; dest
.text:000000000000D1B4                 ADD             X1, SP, #0x830+n+4 ; src
.text:000000000000D1B8                 BL              .strncpy
.text:000000000000D1BC                 LDR             W8, [SP,#0x830+n]
.text:000000000000D1C0                 ADD             W21, W8, #6
.text:000000000000D1C4                 B               loc_D1EC
.text:000000000000D1C8 ; ---------------------------------------------------------------------------
.text:000000000000D1C8 loc_D1C8                                ; CODE XREF: getRestrictedCheck_Gemalto+258↑j
.text:000000000000D1C8                                         ; getRestrictedCheck_Gemalto+260↑j ...
.text:000000000000D1C8                 ADRP            X1, #unk_10DEC@PAGE
.text:000000000000D1CC                 ADRP            X2, #aGemaltoV5V6uV6_1@PAGE ; "===== [GEMALTO_V5/V6U/V6T/V51] : ACDump"...
.text:000000000000D1D0                 ADD             X1, X1, #unk_10DEC@PAGEOFF
.text:000000000000D1D4                 ADD             X2, X2, #aGemaltoV5V6uV6_1@PAGEOFF ; "===== [GEMALTO_V5/V6U/V6T/V51] : ACDump"...
.text:000000000000D1D8                 MOV             W0, #6
.text:000000000000D1DC                 BL              .__android_log_print
.text:000000000000D1E0                 MOV             W8, #0x414E
.text:000000000000D1E4                 STRH            W8, [SP,#0x830+var_42A]
.text:000000000000D1E8 loc_D1E8                                ; CODE XREF: getRestrictedCheck_Gemalto+24C↑j
.text:000000000000D1E8                                         ; getRestrictedCheck_Gemalto+3DC↑j ...
.text:000000000000D1E8                 MOV             W21, #8
.text:000000000000D1EC loc_D1EC                                ; CODE XREF: getRestrictedCheck_Gemalto+1F8↑j
.text:000000000000D1EC                                         ; getRestrictedCheck_Gemalto+3C0↑j ...
.text:000000000000D1EC                 MOV             W2, W21 ; n
.text:000000000000D1F0                 ADD             X1, SP, #0x830+s ; src
.text:000000000000D1F4                 MOV             X0, X20 ; dest
.text:000000000000D1F8                 BL              .strncpy
.text:000000000000D1FC                 STR             W21, [X19]
.text:000000000000D200                 LDR             X8, [X23,#0x3E8]
.text:000000000000D204                 SUB             X8, X22, X8
.text:000000000000D208                 CBNZ            X8, loc_D2B8
.text:000000000000D20C                 SUB             SP, X29, #0x40 ; '@'
.text:000000000000D210                 LDP             X29, X30, [SP,#0x40+var_s0]
.text:000000000000D214                 LDP             X20, X19, [SP,#0x40+var_10]
.text:000000000000D218                 LDP             X22, X21, [SP,#0x40+var_20]
.text:000000000000D21C                 LDP             X24, X23, [SP,#0x40+var_30]
.text:000000000000D220                 LDP             X26, X25, [SP+0x40+var_40],#0x50
.text:000000000000D224                 RET
.text:000000000000D228 ; ---------------------------------------------------------------------------
.text:000000000000D228 loc_D228                                ; CODE XREF: getRestrictedCheck_Gemalto+33C↑j
.text:000000000000D228                 BL              .getACDumpNwd
.text:000000000000D22C loc_D22C                                ; CODE XREF: getRestrictedCheck_Gemalto+344↑j
.text:000000000000D22C                 LDR             W2, [SP,#0x830+n]
.text:000000000000D230                 CBNZ            W0, loc_D268
.text:000000000000D234                 CBNZ            W2, loc_D24C
.text:000000000000D238                 B               loc_D268
.text:000000000000D23C ; ---------------------------------------------------------------------------
.text:000000000000D23C loc_D23C                                ; CODE XREF: getRestrictedCheck_Gemalto+368↑j
.text:000000000000D23C                 BL              .getACDumpNwd
.text:000000000000D240 loc_D240                                ; CODE XREF: getRestrictedCheck_Gemalto+370↑j
.text:000000000000D240                 LDR             W2, [SP,#0x830+n] ; n
.text:000000000000D244                 CBNZ            W0, loc_D268
.text:000000000000D248                 CBZ             W2, loc_D268
.text:000000000000D24C loc_D24C                                ; CODE XREF: getRestrictedCheck_Gemalto+4D4↑j
.text:000000000000D24C                 ADD             X8, SP, #0x830+s
.text:000000000000D250                 ADD             X0, X8, #0x11 ; dest
.text:000000000000D254                 ADD             X1, SP, #0x830+n+4 ; src
.text:000000000000D258                 BL              .strncpy
.text:000000000000D25C                 LDR             W8, [SP,#0x830+n]
.text:000000000000D260                 ADD             W21, W8, #0x11
.text:000000000000D264                 B               loc_D1EC
.text:000000000000D268 ; ---------------------------------------------------------------------------
.text:000000000000D268 loc_D268                                ; CODE XREF: getRestrictedCheck_Gemalto+4D0↑j
.text:000000000000D268                                         ; getRestrictedCheck_Gemalto+4D8↑j ...
.text:000000000000D268                 ADRP            X1, #unk_10DEC@PAGE
.text:000000000000D26C                 ADRP            X2, #aGemaltoV5V6uV6_1@PAGE ; "===== [GEMALTO_V5/V6U/V6T/V51] : ACDump"...
.text:000000000000D270                 ADD             X1, X1, #unk_10DEC@PAGEOFF
.text:000000000000D274                 ADD             X2, X2, #aGemaltoV5V6uV6_1@PAGEOFF ; "===== [GEMALTO_V5/V6U/V6T/V51] : ACDump"...
.text:000000000000D278                 MOV             W0, #6
.text:000000000000D27C                 BL              .__android_log_print
.text:000000000000D280                 MOV             W8, #0x414E
.text:000000000000D284                 STURH           W8, [X23,#0x11]
.text:000000000000D288                 MOV             W21, #0x13
.text:000000000000D28C                 B               loc_D1EC
.text:000000000000D290 ; ---------------------------------------------------------------------------
.text:000000000000D290 loc_D290                                ; CODE XREF: getRestrictedCheck_Gemalto+418↑j
.text:000000000000D290                                         ; getRestrictedCheck_Gemalto+41C↑j
.text:000000000000D290                 ADRP            X1, #unk_10DEC@PAGE
.text:000000000000D294                 ADRP            X2, #aGemaltoV5V6uV6_1@PAGE ; "===== [GEMALTO_V5/V6U/V6T/V51] : ACDump"...
.text:000000000000D298                 ADD             X1, X1, #unk_10DEC@PAGEOFF
.text:000000000000D29C                 ADD             X2, X2, #aGemaltoV5V6uV6_1@PAGEOFF ; "===== [GEMALTO_V5/V6U/V6T/V51] : ACDump"...
.text:000000000000D2A0                 MOV             W0, #6
.text:000000000000D2A4                 BL              .__android_log_print
.text:000000000000D2A8                 MOV             W8, #0x414E
.text:000000000000D2AC                 STURH           W8, [X23,#0xF]
.text:000000000000D2B0                 MOV             W21, #0x11
.text:000000000000D2B4                 B               loc_D1EC
.text:000000000000D2B8 ; ---------------------------------------------------------------------------
.text:000000000000D2B8 loc_D2B8                                ; CODE XREF: getRestrictedCheck_Gemalto+4A8↑j
.text:000000000000D2B8                 BL              .__stack_chk_fail
.text:000000000000D2B8 ; } // starts at CD60
.text:000000000000D2B8 ; End of function getRestrictedCheck_Gemalto
.text:000000000000D2BC ; =============== S U B R O U T I N E =======================================
.text:000000000000D2BC ; Attributes: bp-based frame
.text:000000000000D2BC                 EXPORT getRestrictedCheck_OT
.text:000000000000D2BC getRestrictedCheck_OT                   ; CODE XREF: .getRestrictedCheck_OT+C↑j
.text:000000000000D2BC                                         ; DATA XREF: LOAD:0000000000001648↑o ...
.text:000000000000D2BC var_81C         = -0x81C
.text:000000000000D2BC var_818         = -0x818
.text:000000000000D2BC var_7F3         = -0x7F3
.text:000000000000D2BC var_7F2         = -0x7F2
.text:000000000000D2BC var_7F1         = -0x7F1
.text:000000000000D2BC var_7F0         = -0x7F0
.text:000000000000D2BC s               = -0x430
.text:000000000000D2BC var_420         = -0x420
.text:000000000000D2BC var_41E         = -0x41E
.text:000000000000D2BC var_40          = -0x40
.text:000000000000D2BC var_30          = -0x30
.text:000000000000D2BC var_20          = -0x20
.text:000000000000D2BC var_10          = -0x10
.text:000000000000D2BC var_s0          =  0
.text:000000000000D2BC ; __unwind {
.text:000000000000D2BC                 STP             X28, X27, [SP,#-0x10+var_40]!
.text:000000000000D2C0                 STP             X24, X23, [SP,#0x40+var_30]
.text:000000000000D2C4                 STP             X22, X21, [SP,#0x40+var_20]
.text:000000000000D2C8                 STP             X20, X19, [SP,#0x40+var_10]
.text:000000000000D2CC                 STP             X29, X30, [SP,#0x40+var_s0]
.text:000000000000D2D0                 ADD             X29, SP, #0x40
.text:000000000000D2D4                 SUB             SP, SP, #0x7F0
.text:000000000000D2D8                 ADRP            X22, #__stack_chk_guard_ptr@PAGE
.text:000000000000D2DC                 LDR             X22, [X22,#__stack_chk_guard_ptr@PAGEOFF]
.text:000000000000D2E0                 MOV             X19, X1
.text:000000000000D2E4                 ADRP            X1, #unk_10DEC@PAGE
.text:000000000000D2E8                 ADRP            X2, #aSemfactoryStar_0@PAGE ; "===== [SEMFactory] : start getRestricte"...
.text:000000000000D2EC                 LDR             X22, [X22]
.text:000000000000D2F0                 MOV             X20, X0
.text:000000000000D2F4                 ADD             X23, SP, #0x830+s
.text:000000000000D2F8                 ADD             X1, X1, #unk_10DEC@PAGEOFF
.text:000000000000D2FC                 ADD             X2, X2, #aSemfactoryStar_0@PAGEOFF ; "===== [SEMFactory] : start getRestricte"...
.text:000000000000D300                 MOV             W0, #4
.text:000000000000D304                 STR             X22, [X23,#0x3E8]
.text:000000000000D308                 BL              .__android_log_print
.text:000000000000D30C                 ADD             X0, SP, #0x830+s ; s
.text:000000000000D310                 MOV             W2, #0x3E8 ; n
.text:000000000000D314                 MOV             W1, WZR ; c
.text:000000000000D318                 STR             WZR, [SP,#0x830+var_81C]
.text:000000000000D31C                 BL              .memset
.text:000000000000D320                 ADD             X0, SP, #0x830+var_818 ; s
.text:000000000000D324                 MOV             W2, #0x3E8 ; n
.text:000000000000D328                 MOV             W1, WZR ; c
.text:000000000000D32C                 BL              .memset
.text:000000000000D330                 BL              .getVendor
.text:000000000000D334                 MOV             W21, W0
.text:000000000000D338                 BL              .isFactoryBinary
.text:000000000000D33C                 ADRP            X1, #unk_10DEC@PAGE
.text:000000000000D340                 ADD             X1, X1, #unk_10DEC@PAGEOFF
.text:000000000000D344                 CBZ             W0, loc_D374
.text:000000000000D348                 ADRP            X2, #aIssecurecommun@PAGE ; "isSecureCommunicate, Factory Binary"
.text:000000000000D34C                 ADD             X2, X2, #aIssecurecommun@PAGEOFF ; "isSecureCommunicate, Factory Binary"
.text:000000000000D350                 MOV             W0, #4
.text:000000000000D354                 BL              .__android_log_print
.text:000000000000D358                 BL              .isSWDFactory
.text:000000000000D35C                 ADRP            X1, #unk_10DEC@PAGE
.text:000000000000D360                 ADD             X1, X1, #unk_10DEC@PAGEOFF
.text:000000000000D364                 CBZ             W0, loc_D38C
.text:000000000000D368                 ADRP            X2, #aIssecurecommun_0@PAGE ; "isSecureCommunicate, Swd Factory"
.text:000000000000D36C                 ADD             X2, X2, #aIssecurecommun_0@PAGEOFF ; "isSecureCommunicate, Swd Factory"
.text:000000000000D370                 B               loc_D37C
.text:000000000000D374 ; ---------------------------------------------------------------------------
.text:000000000000D374 loc_D374                                ; CODE XREF: getRestrictedCheck_OT+88↑j
.text:000000000000D374                 ADRP            X2, #aIssecurecommun_1@PAGE ; "isSecureCommunicate, Normal Binary"
.text:000000000000D378                 ADD             X2, X2, #aIssecurecommun_1@PAGEOFF ; "isSecureCommunicate, Normal Binary"
.text:000000000000D37C loc_D37C                                ; CODE XREF: getRestrictedCheck_OT+B4↑j
.text:000000000000D37C                 MOV             W0, #4
.text:000000000000D380                 BL              .__android_log_print
.text:000000000000D384                 MOV             W8, #1
.text:000000000000D388                 B               loc_D3A0
.text:000000000000D38C ; ---------------------------------------------------------------------------
.text:000000000000D38C loc_D38C                                ; CODE XREF: getRestrictedCheck_OT+A8↑j
.text:000000000000D38C                 ADRP            X2, #aIssecurecommun_2@PAGE ; "isSecureCommunicate, Nwd Factory"
.text:000000000000D390                 ADD             X2, X2, #aIssecurecommun_2@PAGEOFF ; "isSecureCommunicate, Nwd Factory"
.text:000000000000D394                 MOV             W0, #4
.text:000000000000D398                 BL              .__android_log_print
.text:000000000000D39C                 MOV             W8, WZR
.text:000000000000D3A0 loc_D3A0                                ; CODE XREF: getRestrictedCheck_OT+CC↑j
.text:000000000000D3A0                 MOV             X24, #0x414E2C414E2C474E
.text:000000000000D3B0                 CMP             W21, #7
.text:000000000000D3B4                 B.EQ            loc_D3DC
.text:000000000000D3B8                 ORR             W9, W21, #4
.text:000000000000D3BC                 CMP             W9, #6
.text:000000000000D3C0                 B.EQ            loc_D3DC
.text:000000000000D3C4                 ADRP            X1, #unk_10DEC@PAGE
.text:000000000000D3C8                 ADRP            X2, #aOtCheckVendorE@PAGE ; "===== [OT] : Check Vendor error : %s : "...
.text:000000000000D3CC                 STR             X24, [X23]
.text:000000000000D3D0                 ADD             X1, X1, #unk_10DEC@PAGEOFF
.text:000000000000D3D4                 ADD             X2, X2, #aOtCheckVendorE@PAGEOFF ; "===== [OT] : Check Vendor error : %s : "...
.text:000000000000D3D8                 B               loc_D61C
.text:000000000000D3DC ; ---------------------------------------------------------------------------
.text:000000000000D3DC loc_D3DC                                ; CODE XREF: getRestrictedCheck_OT+F8↑j
.text:000000000000D3DC                                         ; getRestrictedCheck_OT+104↑j
.text:000000000000D3DC                 CBZ             W8, loc_D3F0
.text:000000000000D3E0                 ADD             X0, SP, #0x830+var_818
.text:000000000000D3E4                 ADD             X1, SP, #0x830+var_81C
.text:000000000000D3E8                 BL              .getACDump
.text:000000000000D3EC                 B               loc_D3FC
.text:000000000000D3F0 ; ---------------------------------------------------------------------------
.text:000000000000D3F0 loc_D3F0                                ; CODE XREF: getRestrictedCheck_OT:loc_D3DC↑j
.text:000000000000D3F0                 ADD             X0, SP, #0x830+var_818
.text:000000000000D3F4                 ADD             X1, SP, #0x830+var_81C
.text:000000000000D3F8                 BL              .getACDumpNwd
.text:000000000000D3FC loc_D3FC                                ; CODE XREF: getRestrictedCheck_OT+130↑j
.text:000000000000D3FC                 LDR             W3, [SP,#0x830+var_81C]
.text:000000000000D400                 CMP             W3, #0xB
.text:000000000000D404                 B.CC            loc_D44C
.text:000000000000D408                 CMP             W21, #6
.text:000000000000D40C                 B.NE            loc_D468
.text:000000000000D410                 CMP             W3, #0x27 ; '''
.text:000000000000D414                 B.CC            loc_D4B0
.text:000000000000D418                 LDRB            W8, [SP,#0x830+var_7F3]
.text:000000000000D41C                 CMP             W8, #0x8F
.text:000000000000D420                 B.NE            loc_D4B0
.text:000000000000D424                 LDRB            W8, [SP,#0x830+var_7F2]
.text:000000000000D428                 CMP             W8, #0xF
.text:000000000000D42C                 B.NE            loc_D4B0
.text:000000000000D430                 CMP             W3, #0x28 ; '('
.text:000000000000D434                 B.CS            loc_D520
.text:000000000000D438                 ADRP            X1, #unk_10DEC@PAGE
.text:000000000000D43C                 ADRP            X2, #aOtV30IllegalFo@PAGE ; "===== [OT_V3.0] : Illegal format of res"...
.text:000000000000D440                 ADD             X1, X1, #unk_10DEC@PAGEOFF
.text:000000000000D444                 ADD             X2, X2, #aOtV30IllegalFo@PAGEOFF ; "===== [OT_V3.0] : Illegal format of res"...
.text:000000000000D448                 B               loc_D600
.text:000000000000D44C ; ---------------------------------------------------------------------------
.text:000000000000D44C loc_D44C                                ; CODE XREF: getRestrictedCheck_OT+148↑j
.text:000000000000D44C                 ADRP            X1, #unk_10DEC@PAGE
.text:000000000000D450                 ADRP            X2, #aOtInvaildLengt@PAGE ; "===== [OT] Invaild length of acdump : %"...
.text:000000000000D454                 ADD             X1, X1, #unk_10DEC@PAGEOFF
.text:000000000000D458                 ADD             X2, X2, #aOtInvaildLengt@PAGEOFF ; "===== [OT] Invaild length of acdump : %"...
.text:000000000000D45C                 MOV             W0, #6
.text:000000000000D460                 BL              .__android_log_print
.text:000000000000D464                 B               loc_D608
.text:000000000000D468 ; ---------------------------------------------------------------------------
.text:000000000000D468 loc_D468                                ; CODE XREF: getRestrictedCheck_OT+150↑j
.text:000000000000D468                 CMP             W21, #7
.text:000000000000D46C                 B.NE            loc_D4F8
.text:000000000000D470                 CMP             W3, #0x28 ; '('
.text:000000000000D474                 B.CC            loc_D548
.text:000000000000D478                 LDRB            W8, [SP,#0x830+var_7F3]
.text:000000000000D47C                 CMP             W8, #0x8F
.text:000000000000D480                 B.NE            loc_D548
.text:000000000000D484                 LDRB            W8, [SP,#0x830+var_7F2]
.text:000000000000D488                 CMP             W8, #0xF
.text:000000000000D48C                 B.NE            loc_D548
.text:000000000000D490                 LDRB            W8, [SP,#0x830+var_7F1]
.text:000000000000D494                 CMP             W8, #0xC3
.text:000000000000D498                 B.NE            loc_D548
.text:000000000000D49C                 CMP             W3, #0x29 ; ')'
.text:000000000000D4A0                 B.CC            loc_D680
.text:000000000000D4A4                 LDRB            W8, [SP,#0x830+var_7F0]
.text:000000000000D4A8                 CBNZ            W8, loc_D528
.text:000000000000D4AC                 B               loc_D608
.text:000000000000D4B0 ; ---------------------------------------------------------------------------
.text:000000000000D4B0 loc_D4B0                                ; CODE XREF: getRestrictedCheck_OT+158↑j
.text:000000000000D4B0                                         ; getRestrictedCheck_OT+164↑j ...
.text:000000000000D4B0                 SUB             W9, W3, #1
.text:000000000000D4B4                 ADD             X8, SP, #0x830+var_818
.text:000000000000D4B8                 LDRB            W9, [X8,W9,UXTW]
.text:000000000000D4BC                 CMP             W9, #0x6A ; 'j'
.text:000000000000D4C0                 B.NE            loc_D4E4
.text:000000000000D4C4                 LDRB            W8, [X8,X3]
.text:000000000000D4C8                 CMP             W8, #0x82
.text:000000000000D4CC                 B.NE            loc_D4E4
.text:000000000000D4D0                 ADRP            X1, #unk_10DEC@PAGE
.text:000000000000D4D4                 ADRP            X2, #aOtV30Restricte@PAGE ; "===== [OT_V3.0] : Restricted state"
.text:000000000000D4D8                 ADD             X1, X1, #unk_10DEC@PAGEOFF
.text:000000000000D4DC                 ADD             X2, X2, #aOtV30Restricte@PAGEOFF ; "===== [OT_V3.0] : Restricted state"
.text:000000000000D4E0                 B               loc_D5AC
.text:000000000000D4E4 ; ---------------------------------------------------------------------------
.text:000000000000D4E4 loc_D4E4                                ; CODE XREF: getRestrictedCheck_OT+204↑j
.text:000000000000D4E4                                         ; getRestrictedCheck_OT+210↑j
.text:000000000000D4E4                 ADRP            X1, #unk_10DEC@PAGE
.text:000000000000D4E8                 ADRP            X2, #aOtV30NotCollec@PAGE ; "===== [OT_V3.0] : Not Collect 8F0F"
.text:000000000000D4EC                 ADD             X1, X1, #unk_10DEC@PAGEOFF
.text:000000000000D4F0                 ADD             X2, X2, #aOtV30NotCollec@PAGEOFF ; "===== [OT_V3.0] : Not Collect 8F0F"
.text:000000000000D4F4                 B               loc_D600
.text:000000000000D4F8 ; ---------------------------------------------------------------------------
.text:000000000000D4F8 loc_D4F8                                ; CODE XREF: getRestrictedCheck_OT+1B0↑j
.text:000000000000D4F8                 CMP             W3, #0x27 ; '''
.text:000000000000D4FC                 B.CC            loc_D57C
.text:000000000000D500                 LDRB            W8, [SP,#0x830+var_7F3]
.text:000000000000D504                 CMP             W8, #0x8F
.text:000000000000D508                 B.NE            loc_D57C
.text:000000000000D50C                 LDRB            W8, [SP,#0x830+var_7F2]
.text:000000000000D510                 CMP             W8, #0xF
.text:000000000000D514                 B.NE            loc_D57C
.text:000000000000D518                 CMP             W3, #0x28 ; '('
.text:000000000000D51C                 B.CC            loc_D66C
.text:000000000000D520 loc_D520                                ; CODE XREF: getRestrictedCheck_OT+178↑j
.text:000000000000D520                 LDRB            W8, [SP,#0x830+var_7F1]
.text:000000000000D524                 CBZ             W8, loc_D608
.text:000000000000D528 loc_D528                                ; CODE XREF: getRestrictedCheck_OT+1EC↑j
.text:000000000000D528                 ADRP            X8, #aNgAttacked01Na@PAGE ; "NG_ATTACKED,01,NA"
.text:000000000000D52C                 ADD             X8, X8, #aNgAttacked01Na@PAGEOFF ; "NG_ATTACKED,01,NA"
.text:000000000000D530                 LDR             Q0, [X8] ; "NG_ATTACKED,01,NA"
.text:000000000000D534                 MOV             W8, #0x41 ; 'A'
.text:000000000000D538                 STRB            W8, [SP,#0x830+var_420]
.text:000000000000D53C                 MOV             W21, #0x11
.text:000000000000D540                 STR             Q0, [X23]
.text:000000000000D544                 B               loc_D630
.text:000000000000D548 ; ---------------------------------------------------------------------------
.text:000000000000D548 loc_D548                                ; CODE XREF: getRestrictedCheck_OT+1B8↑j
.text:000000000000D548                                         ; getRestrictedCheck_OT+1C4↑j ...
.text:000000000000D548                 SUB             W9, W3, #1
.text:000000000000D54C                 ADD             X8, SP, #0x830+var_818
.text:000000000000D550                 LDRB            W9, [X8,W9,UXTW]
.text:000000000000D554                 CMP             W9, #0x6A ; 'j'
.text:000000000000D558                 B.NE            loc_D5DC
.text:000000000000D55C                 LDRB            W8, [X8,X3]
.text:000000000000D560                 CMP             W8, #0x82
.text:000000000000D564                 B.NE            loc_D5DC
.text:000000000000D568                 ADRP            X1, #unk_10DEC@PAGE
.text:000000000000D56C                 ADRP            X2, #aOtV31Restricte@PAGE ; "===== [OT_V3.1] : Restricted state"
.text:000000000000D570                 ADD             X1, X1, #unk_10DEC@PAGEOFF
.text:000000000000D574                 ADD             X2, X2, #aOtV31Restricte@PAGEOFF ; "===== [OT_V3.1] : Restricted state"
.text:000000000000D578                 B               loc_D5AC
.text:000000000000D57C ; ---------------------------------------------------------------------------
.text:000000000000D57C loc_D57C                                ; CODE XREF: getRestrictedCheck_OT+240↑j
.text:000000000000D57C                                         ; getRestrictedCheck_OT+24C↑j ...
.text:000000000000D57C                 SUB             W9, W3, #1
.text:000000000000D580                 ADD             X8, SP, #0x830+var_818
.text:000000000000D584                 LDRB            W9, [X8,W9,UXTW]
.text:000000000000D588                 CMP             W9, #0x6A ; 'j'
.text:000000000000D58C                 B.NE            loc_D5F0
.text:000000000000D590                 LDRB            W8, [X8,X3]
.text:000000000000D594                 CMP             W8, #0x82
.text:000000000000D598                 B.NE            loc_D5F0
.text:000000000000D59C                 ADRP            X1, #unk_10DEC@PAGE
.text:000000000000D5A0                 ADRP            X2, #aOtV40Restricte@PAGE ; "===== [OT_V4.0] : Restricted state"
.text:000000000000D5A4                 ADD             X1, X1, #unk_10DEC@PAGEOFF
.text:000000000000D5A8                 ADD             X2, X2, #aOtV40Restricte@PAGEOFF ; "===== [OT_V4.0] : Restricted state"
.text:000000000000D5AC loc_D5AC                                ; CODE XREF: getRestrictedCheck_OT+224↑j
.text:000000000000D5AC                                         ; getRestrictedCheck_OT+2BC↑j
.text:000000000000D5AC                 MOV             W0, #6
.text:000000000000D5B0                 BL              .__android_log_print
.text:000000000000D5B4                 ADRP            X9, #aNgRestrictedNa_0@PAGE ; "NG_RESTRICTED,NA,NA"
.text:000000000000D5B8                 ADD             X9, X9, #aNgRestrictedNa_0@PAGEOFF ; "NG_RESTRICTED,NA,NA"
.text:000000000000D5BC                 LDR             Q0, [X9] ; "NG_RESTRICTED,NA,NA"
.text:000000000000D5C0                 MOV             W8, #0x41 ; 'A'
.text:000000000000D5C4                 MOV             W9, #0x4E2C
.text:000000000000D5C8                 STRB            W8, [SP,#0x830+var_41E]
.text:000000000000D5CC                 STRH            W9, [SP,#0x830+var_420]
.text:000000000000D5D0                 STR             Q0, [X23]
.text:000000000000D5D4                 MOV             W21, #0x13
.text:000000000000D5D8                 B               loc_D630
.text:000000000000D5DC ; ---------------------------------------------------------------------------
.text:000000000000D5DC loc_D5DC                                ; CODE XREF: getRestrictedCheck_OT+29C↑j
.text:000000000000D5DC                                         ; getRestrictedCheck_OT+2A8↑j
.text:000000000000D5DC                 ADRP            X1, #unk_10DEC@PAGE
.text:000000000000D5E0                 ADRP            X2, #aOtV31NotCollec@PAGE ; "===== [OT_V3.1] : Not Collect 8F0FC3"
.text:000000000000D5E4                 ADD             X1, X1, #unk_10DEC@PAGEOFF
.text:000000000000D5E8                 ADD             X2, X2, #aOtV31NotCollec@PAGEOFF ; "===== [OT_V3.1] : Not Collect 8F0FC3"
.text:000000000000D5EC                 B               loc_D600
.text:000000000000D5F0 ; ---------------------------------------------------------------------------
.text:000000000000D5F0 loc_D5F0                                ; CODE XREF: getRestrictedCheck_OT+2D0↑j
.text:000000000000D5F0                                         ; getRestrictedCheck_OT+2DC↑j
.text:000000000000D5F0                 ADRP            X1, #unk_10DEC@PAGE
.text:000000000000D5F4                 ADRP            X2, #aOtV40NotCollec@PAGE ; "===== [OT_V4.0] : Not Collect 8F0F"
.text:000000000000D5F8                 ADD             X1, X1, #unk_10DEC@PAGEOFF
.text:000000000000D5FC                 ADD             X2, X2, #aOtV40NotCollec@PAGEOFF ; "===== [OT_V4.0] : Not Collect 8F0F"
.text:000000000000D600 loc_D600                                ; CODE XREF: getRestrictedCheck_OT+18C↑j
.text:000000000000D600                                         ; getRestrictedCheck_OT+238↑j ...
.text:000000000000D600                 MOV             W0, #6
.text:000000000000D604                 BL              .__android_log_print
.text:000000000000D608 loc_D608                                ; CODE XREF: getRestrictedCheck_OT+1A8↑j
.text:000000000000D608                                         ; getRestrictedCheck_OT+1F0↑j ...
.text:000000000000D608                 ADRP            X1, #unk_10DEC@PAGE
.text:000000000000D60C                 ADRP            X2, #aOtNgNaNaSD@PAGE ; "===== [OT] : [NG,NA,NA] : %s : %d"
.text:000000000000D610                 STR             X24, [X23]
.text:000000000000D614                 ADD             X1, X1, #unk_10DEC@PAGEOFF
.text:000000000000D618                 ADD             X2, X2, #aOtNgNaNaSD@PAGEOFF ; "===== [OT] : [NG,NA,NA] : %s : %d"
.text:000000000000D61C loc_D61C                                ; CODE XREF: getRestrictedCheck_OT+11C↑j
.text:000000000000D61C                 MOV             W0, #6
.text:000000000000D620                 ADD             X3, SP, #0x830+s
.text:000000000000D624                 MOV             W4, #8
.text:000000000000D628                 MOV             W21, #8
.text:000000000000D62C                 BL              .__android_log_print
.text:000000000000D630 loc_D630                                ; CODE XREF: getRestrictedCheck_OT+288↑j
.text:000000000000D630                                         ; getRestrictedCheck_OT+31C↑j
.text:000000000000D630                 ADD             X1, SP, #0x830+s ; src
.text:000000000000D634                 MOV             X0, X20 ; dest
.text:000000000000D638                 MOV             X2, X21 ; n
.text:000000000000D63C                 BL              .strncpy
.text:000000000000D640                 STR             W21, [X19]
.text:000000000000D644                 LDR             X8, [X23,#0x3E8]
.text:000000000000D648                 SUB             X8, X22, X8
.text:000000000000D64C                 CBNZ            X8, loc_D694
.text:000000000000D650                 SUB             SP, X29, #0x40 ; '@'
.text:000000000000D654                 LDP             X29, X30, [SP,#0x40+var_s0]
.text:000000000000D658                 LDP             X20, X19, [SP,#0x40+var_10]
.text:000000000000D65C                 LDP             X22, X21, [SP,#0x40+var_20]
.text:000000000000D660                 LDP             X24, X23, [SP,#0x40+var_30]
.text:000000000000D664                 LDP             X28, X27, [SP+0x40+var_40],#0x50
.text:000000000000D668                 RET
.text:000000000000D66C ; ---------------------------------------------------------------------------
.text:000000000000D66C loc_D66C                                ; CODE XREF: getRestrictedCheck_OT+260↑j
.text:000000000000D66C                 ADRP            X1, #unk_10DEC@PAGE
.text:000000000000D670                 ADRP            X2, #aOtV40IllegalFo@PAGE ; "===== [OT_V4.0] : Illegal format of res"...
.text:000000000000D674                 ADD             X1, X1, #unk_10DEC@PAGEOFF
.text:000000000000D678                 ADD             X2, X2, #aOtV40IllegalFo@PAGEOFF ; "===== [OT_V4.0] : Illegal format of res"...
.text:000000000000D67C                 B               loc_D600
.text:000000000000D680 ; ---------------------------------------------------------------------------
.text:000000000000D680 loc_D680                                ; CODE XREF: getRestrictedCheck_OT+1E4↑j
.text:000000000000D680                 ADRP            X1, #unk_10DEC@PAGE
.text:000000000000D684                 ADRP            X2, #aOtV31IllegalFo@PAGE ; "===== [OT_V3.1] : Illegal format of res"...
.text:000000000000D688                 ADD             X1, X1, #unk_10DEC@PAGEOFF
.text:000000000000D68C                 ADD             X2, X2, #aOtV31IllegalFo@PAGEOFF ; "===== [OT_V3.1] : Illegal format of res"...
.text:000000000000D690                 B               loc_D600
.text:000000000000D694 ; ---------------------------------------------------------------------------
.text:000000000000D694 loc_D694                                ; CODE XREF: getRestrictedCheck_OT+390↑j
.text:000000000000D694                 BL              .__stack_chk_fail
.text:000000000000D694 ; } // starts at D2BC
.text:000000000000D694 ; End of function getRestrictedCheck_OT
.text:000000000000D698 ; =============== S U B R O U T I N E =======================================
.text:000000000000D698 ; Attributes: bp-based frame
.text:000000000000D698                 EXPORT getAttackCountCheck
.text:000000000000D698 getAttackCountCheck                     ; CODE XREF: .getAttackCountCheck+C↑j
.text:000000000000D698                                         ; DATA XREF: LOAD:0000000000001870↑o ...
.text:000000000000D698 n               = -0x81C
.text:000000000000D698 var_7F3         = -0x7F3
.text:000000000000D698 var_7F2         = -0x7F2
.text:000000000000D698 var_7F1         = -0x7F1
.text:000000000000D698 var_7F0         = -0x7F0
.text:000000000000D698 s               = -0x430
.text:000000000000D698 var_42C         = -0x42C
.text:000000000000D698 var_40          = -0x40
.text:000000000000D698 var_30          = -0x30
.text:000000000000D698 var_20          = -0x20
.text:000000000000D698 var_10          = -0x10
.text:000000000000D698 var_s0          =  0
.text:000000000000D698 ; __unwind {
.text:000000000000D698                 STP             X26, X25, [SP,#-0x10+var_40]!
.text:000000000000D69C                 STP             X24, X23, [SP,#0x40+var_30]
.text:000000000000D6A0                 STP             X22, X21, [SP,#0x40+var_20]
.text:000000000000D6A4                 STP             X20, X19, [SP,#0x40+var_10]
.text:000000000000D6A8                 STP             X29, X30, [SP,#0x40+var_s0]
.text:000000000000D6AC                 ADD             X29, SP, #0x40
.text:000000000000D6B0                 SUB             SP, SP, #0x7F0
.text:000000000000D6B4                 ADRP            X23, #__stack_chk_guard_ptr@PAGE
.text:000000000000D6B8                 LDR             X23, [X23,#__stack_chk_guard_ptr@PAGEOFF]
.text:000000000000D6BC                 MOV             X19, X1
.text:000000000000D6C0                 ADRP            X1, #unk_10DEC@PAGE
.text:000000000000D6C4                 ADRP            X2, #aHqmAttackcheck@PAGE ; "===== [HQM_AttackCheck] : start get Att"...
.text:000000000000D6C8                 LDR             X23, [X23]
.text:000000000000D6CC                 MOV             X20, X0
.text:000000000000D6D0                 ADD             X24, SP, #0x830+s
.text:000000000000D6D4                 ADD             X1, X1, #unk_10DEC@PAGEOFF
.text:000000000000D6D8                 ADD             X2, X2, #aHqmAttackcheck@PAGEOFF ; "===== [HQM_AttackCheck] : start get Att"...
.text:000000000000D6DC                 MOV             W0, #4
.text:000000000000D6E0                 STR             X23, [X24,#0x3E8]
.text:000000000000D6E4                 BL              .__android_log_print
.text:000000000000D6E8                 ADD             X0, SP, #0x830+s ; s
.text:000000000000D6EC                 MOV             W2, #0x3E8 ; n
.text:000000000000D6F0                 MOV             W1, WZR ; c
.text:000000000000D6F4                 STR             WZR, [SP,#0x830+n]
.text:000000000000D6F8                 BL              .memset
.text:000000000000D6FC                 ADD             X0, SP, #0x830+n+4 ; s
.text:000000000000D700                 MOV             W2, #0x3E8 ; n
.text:000000000000D704                 MOV             W1, WZR ; c
.text:000000000000D708                 BL              .memset
.text:000000000000D70C                 BL              .getVendor
.text:000000000000D710                 MOV             W22, W0
.text:000000000000D714                 ORR             W8, W22, #1
.text:000000000000D718                 SUB             W9, W22, #0xF
.text:000000000000D71C                 CMP             W8, #0xD
.text:000000000000D720                 CSET            W10, EQ
.text:000000000000D724                 CMP             W9, #2
.text:000000000000D728                 CSET            W9, CC
.text:000000000000D72C                 CMP             W8, #0xB
.text:000000000000D730                 ORR             W8, W9, W10
.text:000000000000D734                 CSET            W9, EQ
.text:000000000000D738                 CMP             W22, #0xE
.text:000000000000D73C                 ORR             W8, W9, W8
.text:000000000000D740                 CSET            W9, EQ
.text:000000000000D744                 ORR             W25, W9, W8
.text:000000000000D748                 EOR             W21, W25, #1
.text:000000000000D74C                 MOV             W0, W21
.text:000000000000D750                 BL              .spiOpen
.text:000000000000D754                 CMP             W0, #1
.text:000000000000D758                 B.NE            loc_D7A4
.text:000000000000D75C                 CMP             W22, #0x10
.text:000000000000D760                 B.EQ            loc_D7C0
.text:000000000000D764                 ORR             W8, W22, #2
.text:000000000000D768                 CMP             W8, #0xF
.text:000000000000D76C                 B.EQ            loc_D7C0
.text:000000000000D770                 ORR             W8, W22, #8
.text:000000000000D774                 CMP             W8, #0xC
.text:000000000000D778                 B.EQ            loc_D7C0
.text:000000000000D77C                 CMP             W22, #0xE
.text:000000000000D780                 B.HI            loc_D8D0
.text:000000000000D784                 MOV             W8, #1
.text:000000000000D788                 LSL             W8, W8, W22
.text:000000000000D78C                 MOV             W9, #0x4E00
.text:000000000000D790                 AND             W9, W8, W9
.text:000000000000D794                 CBZ             W9, loc_D810
.text:000000000000D798                 TBZ             W25, #0, loc_D828
.text:000000000000D79C                 BL              .isAttackedNwd
.text:000000000000D7A0                 B               loc_D82C
.text:000000000000D7A4 ; ---------------------------------------------------------------------------
.text:000000000000D7A4 loc_D7A4                                ; CODE XREF: getAttackCountCheck+C0↑j
.text:000000000000D7A4                 ADRP            X1, #unk_10DEC@PAGE
.text:000000000000D7A8                 ADRP            X2, #aGetattackcount@PAGE ; "getAttackCountCheck, spi open fail"
.text:000000000000D7AC                 ADD             X1, X1, #unk_10DEC@PAGEOFF
.text:000000000000D7B0                 ADD             X2, X2, #aGetattackcount@PAGEOFF ; "getAttackCountCheck, spi open fail"
.text:000000000000D7B4                 MOV             W0, #6
.text:000000000000D7B8                 BL              .__android_log_print
.text:000000000000D7BC                 B               loc_DC08
.text:000000000000D7C0 ; ---------------------------------------------------------------------------
.text:000000000000D7C0 loc_D7C0                                ; CODE XREF: getAttackCountCheck+C8↑j
.text:000000000000D7C0                                         ; getAttackCountCheck+D4↑j ...
.text:000000000000D7C0                 TBZ             W25, #0, loc_D7CC
.text:000000000000D7C4                 BL              .isAttackedNwd
.text:000000000000D7C8                 B               loc_D7D0
.text:000000000000D7CC ; ---------------------------------------------------------------------------
.text:000000000000D7CC loc_D7CC                                ; CODE XREF: getAttackCountCheck:loc_D7C0↑j
.text:000000000000D7CC                 BL              .isAttacked
.text:000000000000D7D0 loc_D7D0                                ; CODE XREF: getAttackCountCheck+130↑j
.text:000000000000D7D0                 MOV             W22, W0
.text:000000000000D7D4                 ADRP            X1, #unk_10DEC@PAGE
.text:000000000000D7D8                 ADRP            X2, #aHqmAttackcheck_0@PAGE ; "===== [HQM_AttackCheck] : NXP isAttacke"...
.text:000000000000D7DC                 ADD             X1, X1, #unk_10DEC@PAGEOFF
.text:000000000000D7E0                 ADD             X2, X2, #aHqmAttackcheck_0@PAGEOFF ; "===== [HQM_AttackCheck] : NXP isAttacke"...
.text:000000000000D7E4                 MOV             W0, #4
.text:000000000000D7E8                 MOV             W3, W22
.text:000000000000D7EC                 BL              .__android_log_print
.text:000000000000D7F0                 CBZ             W22, loc_D864
.text:000000000000D7F4                 CMP             W22, #3
.text:000000000000D7F8                 B.EQ            loc_D888
.text:000000000000D7FC                 CMP             W22, #1
.text:000000000000D800                 B.EQ            loc_D940
.text:000000000000D804                 TBZ             W25, #0, loc_D950
.text:000000000000D808                 BL              .isRestrictedNwd
.text:000000000000D80C                 B               loc_D954
.text:000000000000D810 ; ---------------------------------------------------------------------------
.text:000000000000D810 loc_D810                                ; CODE XREF: getAttackCountCheck+FC↑j
.text:000000000000D810                 MOV             W9, #0x120
.text:000000000000D814                 AND             W8, W8, W9
.text:000000000000D818                 CBZ             W8, loc_D8D0
.text:000000000000D81C                 TBZ             W25, #0, loc_D910
.text:000000000000D820                 BL              .isAttackedNwd
.text:000000000000D824                 B               loc_D914
.text:000000000000D828 ; ---------------------------------------------------------------------------
.text:000000000000D828 loc_D828                                ; CODE XREF: getAttackCountCheck+100↑j
.text:000000000000D828                 BL              .isAttacked
.text:000000000000D82C loc_D82C                                ; CODE XREF: getAttackCountCheck+108↑j
.text:000000000000D82C                 MOV             W22, W0
.text:000000000000D830                 ADRP            X1, #unk_10DEC@PAGE
.text:000000000000D834                 ADRP            X2, #aHqmAttackcheck_1@PAGE ; "===== [HQM_AttackCheck] : Gemalto isAtt"...
.text:000000000000D838                 ADD             X1, X1, #unk_10DEC@PAGEOFF
.text:000000000000D83C                 ADD             X2, X2, #aHqmAttackcheck_1@PAGEOFF ; "===== [HQM_AttackCheck] : Gemalto isAtt"...
.text:000000000000D840                 MOV             W0, #4
.text:000000000000D844                 MOV             W3, W22
.text:000000000000D848                 BL              .__android_log_print
.text:000000000000D84C                 CBZ             W22, loc_D8AC
.text:000000000000D850                 CMP             W22, #1
.text:000000000000D854                 B.EQ            loc_D940
.text:000000000000D858                 TBZ             W25, #0, loc_D980
.text:000000000000D85C                 BL              .isRestrictedNwd
.text:000000000000D860                 B               loc_D984
.text:000000000000D864 ; ---------------------------------------------------------------------------
.text:000000000000D864 loc_D864                                ; CODE XREF: getAttackCountCheck+158↑j
.text:000000000000D864                 MOV             W8, #0x5F ; '_'
.text:000000000000D868                 MOV             W9, #0x3130
.text:000000000000D86C                 ADD             X0, SP, #0x830+n+4
.text:000000000000D870                 ADD             X1, SP, #0x830+n
.text:000000000000D874                 STRB            W8, [SP,#0x830+s+2]
.text:000000000000D878                 STRH            W9, [SP,#0x830+s]
.text:000000000000D87C                 TBNZ            W25, #0, loc_D9D4
.text:000000000000D880                 BL              .getACDump
.text:000000000000D884                 B               loc_D9D8
.text:000000000000D888 ; ---------------------------------------------------------------------------
.text:000000000000D888 loc_D888                                ; CODE XREF: getAttackCountCheck+160↑j
.text:000000000000D888                 MOV             W8, #0x5F ; '_'
.text:000000000000D88C                 MOV             W9, #0x3939
.text:000000000000D890                 ADD             X0, SP, #0x830+n+4
.text:000000000000D894                 ADD             X1, SP, #0x830+n
.text:000000000000D898                 STRB            W8, [SP,#0x830+s+2]
.text:000000000000D89C                 STRH            W9, [SP,#0x830+s]
.text:000000000000D8A0                 TBNZ            W25, #0, loc_D9D4
.text:000000000000D8A4                 BL              .getACDump
.text:000000000000D8A8                 B               loc_D9D8
.text:000000000000D8AC ; ---------------------------------------------------------------------------
.text:000000000000D8AC loc_D8AC                                ; CODE XREF: getAttackCountCheck+1B4↑j
.text:000000000000D8AC                 MOV             W8, #0x5F ; '_'
.text:000000000000D8B0                 MOV             W9, #0x3130
.text:000000000000D8B4                 ADD             X0, SP, #0x830+n+4
.text:000000000000D8B8                 ADD             X1, SP, #0x830+n
.text:000000000000D8BC                 STRB            W8, [SP,#0x830+s+2]
.text:000000000000D8C0                 STRH            W9, [SP,#0x830+s]
.text:000000000000D8C4                 TBNZ            W25, #0, loc_D9D4
.text:000000000000D8C8                 BL              .getACDump
.text:000000000000D8CC                 B               loc_D9D8
.text:000000000000D8D0 ; ---------------------------------------------------------------------------
.text:000000000000D8D0 loc_D8D0                                ; CODE XREF: getAttackCountCheck+E8↑j
.text:000000000000D8D0                                         ; getAttackCountCheck+180↑j
.text:000000000000D8D0                 CMP             W22, #7
.text:000000000000D8D4                 B.EQ            loc_DA10
.text:000000000000D8D8                 ORR             W8, W22, #4
.text:000000000000D8DC                 CMP             W8, #6
.text:000000000000D8E0                 B.EQ            loc_DA10
.text:000000000000D8E4                 ADRP            X1, #unk_10DEC@PAGE
.text:000000000000D8E8                 ADRP            X2, #aHqmAttackcheck_2@PAGE ; "===== [HQM_AttackCheck] : Do not suppor"...
.text:000000000000D8EC                 ADD             X1, X1, #unk_10DEC@PAGEOFF
.text:000000000000D8F0                 ADD             X2, X2, #aHqmAttackcheck_2@PAGEOFF ; "===== [HQM_AttackCheck] : Do not suppor"...
.text:000000000000D8F4                 MOV             W0, #6
.text:000000000000D8F8                 MOV             W3, W22
.text:000000000000D8FC                 BL              .__android_log_print
.text:000000000000D900                 MOV             W9, #0x4E5F0000
.text:000000000000D904                 MOV             W8, #0x41 ; 'A'
.text:000000000000D908                 MOVK            W9, #0x474E
.text:000000000000D90C                 B               loc_DBE8
.text:000000000000D910 ; ---------------------------------------------------------------------------
.text:000000000000D910 loc_D910                                ; CODE XREF: getAttackCountCheck+184↑j
.text:000000000000D910                 BL              .isAttacked
.text:000000000000D914 loc_D914                                ; CODE XREF: getAttackCountCheck+18C↑j
.text:000000000000D914                 MOV             W22, W0
.text:000000000000D918                 ADRP            X1, #unk_10DEC@PAGE
.text:000000000000D91C                 ADRP            X2, #aHqmAttackcheck_1@PAGE ; "===== [HQM_AttackCheck] : Gemalto isAtt"...
.text:000000000000D920                 ADD             X1, X1, #unk_10DEC@PAGEOFF
.text:000000000000D924                 ADD             X2, X2, #aHqmAttackcheck_1@PAGEOFF ; "===== [HQM_AttackCheck] : Gemalto isAtt"...
.text:000000000000D928                 MOV             W0, #4
.text:000000000000D92C                 MOV             W3, W22
.text:000000000000D930                 BL              .__android_log_print
.text:000000000000D934                 CBZ             W22, loc_DBDC
.text:000000000000D938                 CMP             W22, #1
.text:000000000000D93C                 B.NE            loc_D9AC
.text:000000000000D940 loc_D940                                ; CODE XREF: getAttackCountCheck+168↑j
.text:000000000000D940                                         ; getAttackCountCheck+1BC↑j
.text:000000000000D940                 MOV             W8, #0x3030
.text:000000000000D944                 STRH            W8, [SP,#0x830+s]
.text:000000000000D948                 MOV             W22, #2
.text:000000000000D94C                 B               loc_DBF4
.text:000000000000D950 ; ---------------------------------------------------------------------------
.text:000000000000D950 loc_D950                                ; CODE XREF: getAttackCountCheck+16C↑j
.text:000000000000D950                 BL              .isRestricted
.text:000000000000D954 loc_D954                                ; CODE XREF: getAttackCountCheck+174↑j
.text:000000000000D954                 CBZ             W0, loc_D9B8
.text:000000000000D958                 MOV             W9, #0x4E5F0000
.text:000000000000D95C                 MOV             W8, #0x41 ; 'A'
.text:000000000000D960                 MOVK            W9, #0x474E
.text:000000000000D964                 ADRP            X1, #unk_10DEC@PAGE
.text:000000000000D968                 ADRP            X2, #aHqmAttackcheck_3@PAGE ; "===== [HQM_AttackCheck] : NXP Check Fai"...
.text:000000000000D96C                 STRB            W8, [SP,#0x830+var_42C]
.text:000000000000D970                 STR             W9, [SP,#0x830+s]
.text:000000000000D974                 ADD             X1, X1, #unk_10DEC@PAGEOFF
.text:000000000000D978                 ADD             X2, X2, #aHqmAttackcheck_3@PAGEOFF ; "===== [HQM_AttackCheck] : NXP Check Fai"...
.text:000000000000D97C                 B               loc_DA50
.text:000000000000D980 ; ---------------------------------------------------------------------------
.text:000000000000D980 loc_D980                                ; CODE XREF: getAttackCountCheck+1C0↑j
.text:000000000000D980                 BL              .isRestricted
.text:000000000000D984 loc_D984                                ; CODE XREF: getAttackCountCheck+1C8↑j
.text:000000000000D984                 CBNZ            W0, loc_DA2C
.text:000000000000D988                 MOV             W8, #0x5F ; '_'
.text:000000000000D98C                 MOV             W9, #0x4646
.text:000000000000D990                 ADD             X0, SP, #0x830+n+4
.text:000000000000D994                 ADD             X1, SP, #0x830+n
.text:000000000000D998                 STRB            W8, [SP,#0x830+s+2]
.text:000000000000D99C                 STRH            W9, [SP,#0x830+s]
.text:000000000000D9A0                 TBNZ            W25, #0, loc_D9D4
.text:000000000000D9A4                 BL              .getACDump
.text:000000000000D9A8                 B               loc_D9D8
.text:000000000000D9AC ; ---------------------------------------------------------------------------
.text:000000000000D9AC loc_D9AC                                ; CODE XREF: getAttackCountCheck+2A4↑j
.text:000000000000D9AC                 TBZ             W25, #0, loc_DA24
.text:000000000000D9B0                 BL              .isRestrictedNwd
.text:000000000000D9B4                 B               loc_DA28
.text:000000000000D9B8 ; ---------------------------------------------------------------------------
.text:000000000000D9B8 loc_D9B8                                ; CODE XREF: getAttackCountCheck:loc_D954↑j
.text:000000000000D9B8                 MOV             W8, #0x5F ; '_'
.text:000000000000D9BC                 MOV             W9, #0x4646
.text:000000000000D9C0                 ADD             X0, SP, #0x830+n+4
.text:000000000000D9C4                 ADD             X1, SP, #0x830+n
.text:000000000000D9C8                 STRB            W8, [SP,#0x830+s+2]
.text:000000000000D9CC                 STRH            W9, [SP,#0x830+s]
.text:000000000000D9D0                 TBZ             W25, #0, loc_DA68
.text:000000000000D9D4 loc_D9D4                                ; CODE XREF: getAttackCountCheck+1E4↑j
.text:000000000000D9D4                                         ; getAttackCountCheck+208↑j ...
.text:000000000000D9D4                 BL              .getACDumpNwd
.text:000000000000D9D8 loc_D9D8                                ; CODE XREF: getAttackCountCheck+1EC↑j
.text:000000000000D9D8                                         ; getAttackCountCheck+210↑j ...
.text:000000000000D9D8                 LDR             W2, [SP,#0x830+n] ; n
.text:000000000000D9DC                 CMP             W2, #9
.text:000000000000D9E0                 B.HI            loc_D9F4
.text:000000000000D9E4                 MOV             W8, #0x414E
.text:000000000000D9E8                 STURH           W8, [X24,#3]
.text:000000000000D9EC                 MOV             W22, #5
.text:000000000000D9F0                 B               loc_DBF4
.text:000000000000D9F4 ; ---------------------------------------------------------------------------
.text:000000000000D9F4 loc_D9F4                                ; CODE XREF: getAttackCountCheck+348↑j
.text:000000000000D9F4                 ADD             X8, SP, #0x830+s
.text:000000000000D9F8                 ORR             X0, X8, #3 ; dest
.text:000000000000D9FC                 ADD             X1, SP, #0x830+n+4 ; src
.text:000000000000DA00                 BL              .strncpy
.text:000000000000DA04                 LDR             W8, [SP,#0x830+n]
.text:000000000000DA08                 ADD             W22, W8, #3
.text:000000000000DA0C                 B               loc_DBF4
.text:000000000000DA10 ; ---------------------------------------------------------------------------
.text:000000000000DA10 loc_DA10                                ; CODE XREF: getAttackCountCheck+23C↑j
.text:000000000000DA10                                         ; getAttackCountCheck+248↑j
.text:000000000000DA10                 TBZ             W25, #0, loc_DA70
.text:000000000000DA14                 ADD             X0, SP, #0x830+n+4
.text:000000000000DA18                 ADD             X1, SP, #0x830+n
.text:000000000000DA1C                 BL              .getACDumpNwd
.text:000000000000DA20                 B               loc_DA7C
.text:000000000000DA24 ; ---------------------------------------------------------------------------
.text:000000000000DA24 loc_DA24                                ; CODE XREF: getAttackCountCheck:loc_D9AC↑j
.text:000000000000DA24                 BL              .isRestricted
.text:000000000000DA28 loc_DA28                                ; CODE XREF: getAttackCountCheck+31C↑j
.text:000000000000DA28                 CBZ             W0, loc_DAC8
.text:000000000000DA2C loc_DA2C                                ; CODE XREF: getAttackCountCheck:loc_D984↑j
.text:000000000000DA2C                 MOV             W9, #0x4E5F0000
.text:000000000000DA30                 MOV             W8, #0x41 ; 'A'
.text:000000000000DA34                 MOVK            W9, #0x474E
.text:000000000000DA38                 ADRP            X1, #unk_10DEC@PAGE
.text:000000000000DA3C                 ADRP            X2, #aHqmAttackcheck_4@PAGE ; "===== [HQM_AttackCheck] : Gemalto Check"...
.text:000000000000DA40                 STRB            W8, [SP,#0x830+var_42C]
.text:000000000000DA44                 STR             W9, [SP,#0x830+s]
.text:000000000000DA48                 ADD             X1, X1, #unk_10DEC@PAGEOFF
.text:000000000000DA4C                 ADD             X2, X2, #aHqmAttackcheck_4@PAGEOFF ; "===== [HQM_AttackCheck] : Gemalto Check"...
.text:000000000000DA50 loc_DA50                                ; CODE XREF: getAttackCountCheck+2E4↑j
.text:000000000000DA50                 MOV             W0, #6
.text:000000000000DA54                 ADD             X3, SP, #0x830+s
.text:000000000000DA58                 MOV             W4, #5
.text:000000000000DA5C                 MOV             W22, #5
.text:000000000000DA60                 BL              .__android_log_print
.text:000000000000DA64                 B               loc_DBF4
.text:000000000000DA68 ; ---------------------------------------------------------------------------
.text:000000000000DA68 loc_DA68                                ; CODE XREF: getAttackCountCheck+338↑j
.text:000000000000DA68                 BL              .getACDump
.text:000000000000DA6C                 B               loc_D9D8
.text:000000000000DA70 ; ---------------------------------------------------------------------------
.text:000000000000DA70 loc_DA70                                ; CODE XREF: getAttackCountCheck:loc_DA10↑j
.text:000000000000DA70                 ADD             X0, SP, #0x830+n+4
.text:000000000000DA74                 ADD             X1, SP, #0x830+n
.text:000000000000DA78                 BL              .getACDump
.text:000000000000DA7C loc_DA7C                                ; CODE XREF: getAttackCountCheck+388↑j
.text:000000000000DA7C                 LDR             W8, [SP,#0x830+n]
.text:000000000000DA80                 CMP             W8, #0xB
.text:000000000000DA84                 B.CC            loc_DB24
.text:000000000000DA88                 CMP             W22, #6
.text:000000000000DA8C                 B.NE            loc_DAD8
.text:000000000000DA90                 CMP             W8, #0x27 ; '''
.text:000000000000DA94                 B.CC            loc_DB48
.text:000000000000DA98                 LDRB            W9, [SP,#0x830+var_7F3]
.text:000000000000DA9C                 CMP             W9, #0x8F
.text:000000000000DAA0                 B.NE            loc_DB48
.text:000000000000DAA4                 LDRB            W9, [SP,#0x830+var_7F2]
.text:000000000000DAA8                 CMP             W9, #0xF
.text:000000000000DAAC                 B.NE            loc_DB48
.text:000000000000DAB0                 CMP             W8, #0x28 ; '('
.text:000000000000DAB4                 B.CC            loc_DC38
.text:000000000000DAB8                 LDRB            W8, [SP,#0x830+var_7F1]
.text:000000000000DABC                 CBNZ            W8, loc_DBDC
.text:000000000000DAC0                 MOV             W22, #2
.text:000000000000DAC4                 B               loc_DB3C
.text:000000000000DAC8 ; ---------------------------------------------------------------------------
.text:000000000000DAC8 loc_DAC8                                ; CODE XREF: getAttackCountCheck:loc_DA28↑j
.text:000000000000DAC8                 MOV             W9, #0x4E5F0000
.text:000000000000DACC                 MOV             W8, #0x41 ; 'A'
.text:000000000000DAD0                 MOVK            W9, #0x4646
.text:000000000000DAD4                 B               loc_DBE8
.text:000000000000DAD8 ; ---------------------------------------------------------------------------
.text:000000000000DAD8 loc_DAD8                                ; CODE XREF: getAttackCountCheck+3F4↑j
.text:000000000000DAD8                 CMP             W22, #7
.text:000000000000DADC                 B.NE            loc_DB24
.text:000000000000DAE0                 CMP             W8, #0x28 ; '('
.text:000000000000DAE4                 B.CC            loc_DB90
.text:000000000000DAE8                 LDRB            W9, [SP,#0x830+var_7F3]
.text:000000000000DAEC                 CMP             W9, #0x8F
.text:000000000000DAF0                 B.NE            loc_DB90
.text:000000000000DAF4                 LDRB            W9, [SP,#0x830+var_7F2]
.text:000000000000DAF8                 CMP             W9, #0xF
.text:000000000000DAFC                 B.NE            loc_DB90
.text:000000000000DB00                 LDRB            W9, [SP,#0x830+var_7F1]
.text:000000000000DB04                 CMP             W9, #0xC3
.text:000000000000DB08                 B.NE            loc_DB90
.text:000000000000DB0C                 CMP             W8, #0x29 ; ')'
.text:000000000000DB10                 B.CC            loc_DC4C
.text:000000000000DB14                 LDRB            W8, [SP,#0x830+var_7F0]
.text:000000000000DB18                 CBNZ            W8, loc_DBDC
.text:000000000000DB1C                 MOV             W22, #2
.text:000000000000DB20                 B               loc_DB3C
.text:000000000000DB24 ; ---------------------------------------------------------------------------
.text:000000000000DB24 loc_DB24                                ; CODE XREF: getAttackCountCheck+3EC↑j
.text:000000000000DB24                                         ; getAttackCountCheck+444↑j
.text:000000000000DB24                 MOV             W9, #0x4E2C0000
.text:000000000000DB28                 MOV             W8, #0x41 ; 'A'
.text:000000000000DB2C                 MOVK            W9, #0x474E
.text:000000000000DB30                 MOV             W22, #7
.text:000000000000DB34                 STRB            W8, [SP,#0x830+var_42C]
.text:000000000000DB38                 STR             W9, [SP,#0x830+s]
.text:000000000000DB3C loc_DB3C                                ; CODE XREF: getAttackCountCheck+42C↑j
.text:000000000000DB3C                                         ; getAttackCountCheck+488↑j
.text:000000000000DB3C                 MOV             W8, #0x3030
.text:000000000000DB40                 STRH            W8, [SP,#0x830+s]
.text:000000000000DB44                 B               loc_DBF4
.text:000000000000DB48 ; ---------------------------------------------------------------------------
.text:000000000000DB48 loc_DB48                                ; CODE XREF: getAttackCountCheck+3FC↑j
.text:000000000000DB48                                         ; getAttackCountCheck+408↑j ...
.text:000000000000DB48                 SUB             W10, W8, #1
.text:000000000000DB4C                 ADD             X9, SP, #0x830+n+4
.text:000000000000DB50                 LDRB            W10, [X9,W10,UXTW]
.text:000000000000DB54                 CMP             W10, #0x6A ; 'j'
.text:000000000000DB58                 B.NE            loc_DB7C
.text:000000000000DB5C                 LDRB            W8, [X9,X8]
.text:000000000000DB60                 CMP             W8, #0x82
.text:000000000000DB64                 B.NE            loc_DB7C
.text:000000000000DB68                 ADRP            X1, #unk_10DEC@PAGE
.text:000000000000DB6C                 ADRP            X2, #aHqmAttackcheck_5@PAGE ; "===== [HQM_AttackCheck] : OT3.0 : Restr"...
.text:000000000000DB70                 ADD             X1, X1, #unk_10DEC@PAGEOFF
.text:000000000000DB74                 ADD             X2, X2, #aHqmAttackcheck_5@PAGEOFF ; "===== [HQM_AttackCheck] : OT3.0 : Restr"...
.text:000000000000DB78                 B               loc_DBD4
.text:000000000000DB7C ; ---------------------------------------------------------------------------
.text:000000000000DB7C loc_DB7C                                ; CODE XREF: getAttackCountCheck+4C0↑j
.text:000000000000DB7C                                         ; getAttackCountCheck+4CC↑j
.text:000000000000DB7C                 ADRP            X1, #unk_10DEC@PAGE
.text:000000000000DB80                 ADRP            X2, #aHqmAttackcheck_6@PAGE ; "===== [HQM_AttackCheck] : OT3.0 : Not C"...
.text:000000000000DB84                 ADD             X1, X1, #unk_10DEC@PAGEOFF
.text:000000000000DB88                 ADD             X2, X2, #aHqmAttackcheck_6@PAGEOFF ; "===== [HQM_AttackCheck] : OT3.0 : Not C"...
.text:000000000000DB8C                 B               loc_DBD4
.text:000000000000DB90 ; ---------------------------------------------------------------------------
.text:000000000000DB90 loc_DB90                                ; CODE XREF: getAttackCountCheck+44C↑j
.text:000000000000DB90                                         ; getAttackCountCheck+458↑j ...
.text:000000000000DB90                 SUB             W10, W8, #1
.text:000000000000DB94                 ADD             X9, SP, #0x830+n+4
.text:000000000000DB98                 LDRB            W10, [X9,W10,UXTW]
.text:000000000000DB9C                 CMP             W10, #0x6A ; 'j'
.text:000000000000DBA0                 B.NE            loc_DBC4
.text:000000000000DBA4                 LDRB            W8, [X9,X8]
.text:000000000000DBA8                 CMP             W8, #0x82
.text:000000000000DBAC                 B.NE            loc_DBC4
.text:000000000000DBB0                 ADRP            X1, #unk_10DEC@PAGE
.text:000000000000DBB4                 ADRP            X2, #aHqmAttackcheck_7@PAGE ; "===== [HQM_AttackCheck] : OT3.1 : Restr"...
.text:000000000000DBB8                 ADD             X1, X1, #unk_10DEC@PAGEOFF
.text:000000000000DBBC                 ADD             X2, X2, #aHqmAttackcheck_7@PAGEOFF ; "===== [HQM_AttackCheck] : OT3.1 : Restr"...
.text:000000000000DBC0                 B               loc_DBD4
.text:000000000000DBC4 ; ---------------------------------------------------------------------------
.text:000000000000DBC4 loc_DBC4                                ; CODE XREF: getAttackCountCheck+508↑j
.text:000000000000DBC4                                         ; getAttackCountCheck+514↑j
.text:000000000000DBC4                 ADRP            X1, #unk_10DEC@PAGE
.text:000000000000DBC8                 ADRP            X2, #aHqmAttackcheck_8@PAGE ; "===== [HQM_AttackCheck] : OT3.1 : Not C"...
.text:000000000000DBCC                 ADD             X1, X1, #unk_10DEC@PAGEOFF
.text:000000000000DBD0                 ADD             X2, X2, #aHqmAttackcheck_8@PAGEOFF ; "===== [HQM_AttackCheck] : OT3.1 : Not C"...
.text:000000000000DBD4 loc_DBD4                                ; CODE XREF: getAttackCountCheck+4E0↑j
.text:000000000000DBD4                                         ; getAttackCountCheck+4F4↑j ...
.text:000000000000DBD4                 MOV             W0, #6
.text:000000000000DBD8                 BL              .__android_log_print
.text:000000000000DBDC loc_DBDC                                ; CODE XREF: getAttackCountCheck+29C↑j
.text:000000000000DBDC                                         ; getAttackCountCheck+424↑j ...
.text:000000000000DBDC                 MOV             W9, #0x4E5F0000
.text:000000000000DBE0                 MOV             W8, #0x41 ; 'A'
.text:000000000000DBE4                 MOVK            W9, #0x3130
.text:000000000000DBE8 loc_DBE8                                ; CODE XREF: getAttackCountCheck+274↑j
.text:000000000000DBE8                                         ; getAttackCountCheck+43C↑j
.text:000000000000DBE8                 STRB            W8, [SP,#0x830+var_42C]
.text:000000000000DBEC                 STR             W9, [SP,#0x830+s]
.text:000000000000DBF0                 MOV             W22, #5
.text:000000000000DBF4 loc_DBF4                                ; CODE XREF: getAttackCountCheck+2B4↑j
.text:000000000000DBF4                                         ; getAttackCountCheck+358↑j ...
.text:000000000000DBF4                 MOV             W2, W22 ; n
.text:000000000000DBF8                 ADD             X1, SP, #0x830+s ; src
.text:000000000000DBFC                 MOV             X0, X20 ; dest
.text:000000000000DC00                 BL              .strncpy
.text:000000000000DC04                 STR             W22, [X19]
.text:000000000000DC08 loc_DC08                                ; CODE XREF: getAttackCountCheck+124↑j
.text:000000000000DC08                 MOV             W0, W21
.text:000000000000DC0C                 BL              .spiClose
.text:000000000000DC10                 LDR             X8, [X24,#0x3E8]
.text:000000000000DC14                 SUB             X8, X23, X8
.text:000000000000DC18                 CBNZ            X8, loc_DC60
.text:000000000000DC1C                 SUB             SP, X29, #0x40 ; '@'
.text:000000000000DC20                 LDP             X29, X30, [SP,#0x40+var_s0]
.text:000000000000DC24                 LDP             X20, X19, [SP,#0x40+var_10]
.text:000000000000DC28                 LDP             X22, X21, [SP,#0x40+var_20]
.text:000000000000DC2C                 LDP             X24, X23, [SP,#0x40+var_30]
.text:000000000000DC30                 LDP             X26, X25, [SP+0x40+var_40],#0x50
.text:000000000000DC34                 RET
.text:000000000000DC38 ; ---------------------------------------------------------------------------
.text:000000000000DC38 loc_DC38                                ; CODE XREF: getAttackCountCheck+41C↑j
.text:000000000000DC38                 ADRP            X1, #unk_10DEC@PAGE
.text:000000000000DC3C                 ADRP            X2, #aHqmAttackcheck_9@PAGE ; "===== [HQM_AttackCheck] : OT : Illegal "...
.text:000000000000DC40                 ADD             X1, X1, #unk_10DEC@PAGEOFF
.text:000000000000DC44                 ADD             X2, X2, #aHqmAttackcheck_9@PAGEOFF ; "===== [HQM_AttackCheck] : OT : Illegal "...
.text:000000000000DC48                 B               loc_DBD4
.text:000000000000DC4C ; ---------------------------------------------------------------------------
.text:000000000000DC4C loc_DC4C                                ; CODE XREF: getAttackCountCheck+478↑j
.text:000000000000DC4C                 ADRP            X1, #unk_10DEC@PAGE
.text:000000000000DC50                 ADRP            X2, #aHqmAttackcheck_10@PAGE ; "===== [HQM_AttackCheck] : OT3.1 : Illeg"...
.text:000000000000DC54                 ADD             X1, X1, #unk_10DEC@PAGEOFF
.text:000000000000DC58                 ADD             X2, X2, #aHqmAttackcheck_10@PAGEOFF ; "===== [HQM_AttackCheck] : OT3.1 : Illeg"...
.text:000000000000DC5C                 B               loc_DBD4
.text:000000000000DC60 ; ---------------------------------------------------------------------------
.text:000000000000DC60 loc_DC60                                ; CODE XREF: getAttackCountCheck+580↑j
.text:000000000000DC60                 BL              .__stack_chk_fail
.text:000000000000DC60 ; } // starts at D698
.text:000000000000DC60 ; End of function getAttackCountCheck
.text:000000000000DC64 ; =============== S U B R O U T I N E =======================================
.text:000000000000DC64 ; Attributes: bp-based frame
.text:000000000000DC64                 EXPORT printSeState
.text:000000000000DC64 printSeState                            ; CODE XREF: .printSeState+C↑j
.text:000000000000DC64                                         ; DATA XREF: LOAD:00000000000010F0↑o ...
.text:000000000000DC64 var_FD8         = -0xFD8
.text:000000000000DC64 var_FCC         = -0xFCC
.text:000000000000DC64 s               = -0xFC8
.text:000000000000DC64 var_20          = -0x20
.text:000000000000DC64 var_10          = -0x10
.text:000000000000DC64 var_s0          =  0
.text:000000000000DC64 ; __unwind {
.text:000000000000DC64                 STP             X22, X21, [SP,#-0x10+var_20]!
.text:000000000000DC68                 STP             X20, X19, [SP,#0x20+var_10]
.text:000000000000DC6C                 STP             X29, X30, [SP,#0x20+var_s0]
.text:000000000000DC70                 ADD             X29, SP, #0x20
.text:000000000000DC74                 SUB             SP, SP, #0xFC0
.text:000000000000DC78                 ADRP            X20, #__stack_chk_guard_ptr@PAGE
.text:000000000000DC7C                 LDR             X20, [X20,#__stack_chk_guard_ptr@PAGEOFF]
.text:000000000000DC80                 ADD             X21, SP, #0xFE0+var_FD8
.text:000000000000DC84                 ADD             X0, SP, #0xFE0+s ; s
.text:000000000000DC88                 MOV             W2, #0xFA0 ; n
.text:000000000000DC8C                 LDR             X20, [X20]
.text:000000000000DC90                 MOV             W1, WZR ; c
.text:000000000000DC94                 STR             X20, [X21]
.text:000000000000DC98                 STR             WZR, [SP,#0xFE0+var_FCC]
.text:000000000000DC9C                 BL              .memset
.text:000000000000DCA0                 BL              .isRestricted
.text:000000000000DCA4                 MOV             W19, W0
.text:000000000000DCA8                 ADRP            X0, #aPrintsestateIs@PAGE ; "printSeState isrestricted = %d\n"
.text:000000000000DCAC                 ADD             X0, X0, #aPrintsestateIs@PAGEOFF ; "printSeState isrestricted = %d\n"
.text:000000000000DCB0                 MOV             W1, W19
.text:000000000000DCB4                 BL              .printf
.text:000000000000DCB8                 CBZ             W19, loc_DCD8
.text:000000000000DCBC                 ADRP            X1, #unk_10DEC@PAGE
.text:000000000000DCC0                 ADRP            X2, #aPrintsestate00@PAGE ; "printSeState : 00\n"
.text:000000000000DCC4                 ADD             X1, X1, #unk_10DEC@PAGEOFF
.text:000000000000DCC8                 ADD             X2, X2, #aPrintsestate00@PAGEOFF ; "printSeState : 00\n"
.text:000000000000DCCC                 MOV             W0, #6
.text:000000000000DCD0                 BL              .__android_log_print
.text:000000000000DCD4                 B               loc_DD00
.text:000000000000DCD8 ; ---------------------------------------------------------------------------
.text:000000000000DCD8 loc_DCD8                                ; CODE XREF: printSeState+54↑j
.text:000000000000DCD8                 ADD             X0, SP, #0xFE0+s
.text:000000000000DCDC                 ADD             X1, SP, #0xFE0+var_FCC
.text:000000000000DCE0                 BL              .getSEDumpStr
.text:000000000000DCE4                 ADRP            X1, #unk_10DEC@PAGE
.text:000000000000DCE8                 ADRP            X2, #aPrintsestateFf@PAGE ; "printSeState : FF_%s\n"
.text:000000000000DCEC                 ADD             X1, X1, #unk_10DEC@PAGEOFF
.text:000000000000DCF0                 ADD             X2, X2, #aPrintsestateFf@PAGEOFF ; "printSeState : FF_%s\n"
.text:000000000000DCF4                 MOV             W0, #6
.text:000000000000DCF8                 ADD             X3, SP, #0xFE0+s
.text:000000000000DCFC                 BL              .__android_log_print
.text:000000000000DD00 loc_DD00                                ; CODE XREF: printSeState+70↑j
.text:000000000000DD00                 LDR             X8, [X21]
.text:000000000000DD04                 SUB             X8, X20, X8
.text:000000000000DD08                 CBNZ            X8, loc_DD20
.text:000000000000DD0C                 SUB             SP, X29, #0x20 ; ' '
.text:000000000000DD10                 LDP             X29, X30, [SP,#0x20+var_s0]
.text:000000000000DD14                 LDP             X20, X19, [SP,#0x20+var_10]
.text:000000000000DD18                 LDP             X22, X21, [SP+0x20+var_20],#0x30
.text:000000000000DD1C                 RET
.text:000000000000DD20 ; ---------------------------------------------------------------------------
.text:000000000000DD20 loc_DD20                                ; CODE XREF: printSeState+A4↑j
.text:000000000000DD20                 BL              .__stack_chk_fail
.text:000000000000DD20 ; } // starts at DC64
.text:000000000000DD20 ; End of function printSeState
.text:000000000000DD24 ; =============== S U B R O U T I N E =======================================
.text:000000000000DD24 ; Attributes: bp-based frame
.text:000000000000DD24                 EXPORT getSEDumpStr
.text:000000000000DD24 getSEDumpStr                            ; CODE XREF: .getSEDumpStr+C↑j
.text:000000000000DD24                                         ; DATA XREF: LOAD:0000000000001750↑o ...
.text:000000000000DD24 var_440         = -0x440
.text:000000000000DD24 n               = -0x434
.text:000000000000DD24 var_40          = -0x40
.text:000000000000DD24 var_30          = -0x30
.text:000000000000DD24 var_20          = -0x20
.text:000000000000DD24 var_10          = -0x10
.text:000000000000DD24 var_s0          =  0
.text:000000000000DD24 ; __unwind {
.text:000000000000DD24                 STP             X28, X27, [SP,#-0x10+var_40]!
.text:000000000000DD28                 STP             X24, X23, [SP,#0x40+var_30]
.text:000000000000DD2C                 STP             X22, X21, [SP,#0x40+var_20]
.text:000000000000DD30                 STP             X20, X19, [SP,#0x40+var_10]
.text:000000000000DD34                 STP             X29, X30, [SP,#0x40+var_s0]
.text:000000000000DD38                 ADD             X29, SP, #0x40
.text:000000000000DD3C                 SUB             SP, SP, #0x400
.text:000000000000DD40                 ADRP            X23, #__stack_chk_guard_ptr@PAGE
.text:000000000000DD44                 LDR             X23, [X23,#__stack_chk_guard_ptr@PAGEOFF]
.text:000000000000DD48                 MOV             X19, X1
.text:000000000000DD4C                 MOV             X20, X0
.text:000000000000DD50                 MOV             X24, SP
.text:000000000000DD54                 LDR             X23, [X23]
.text:000000000000DD58                 ADD             X0, SP, #0x440+n+4 ; s
.text:000000000000DD5C                 MOV             W2, #0x3E8 ; n
.text:000000000000DD60                 MOV             W1, WZR ; c
.text:000000000000DD64                 STR             X23, [X24,#0x440+var_440]
.text:000000000000DD68                 STR             WZR, [SP,#0x440+n]
.text:000000000000DD6C                 BL              .memset
.text:000000000000DD70                 BL              .isRestricted
.text:000000000000DD74                 CBNZ            W0, loc_DFF0
.text:000000000000DD78                 ADRP            X0, #aGetsedumpstrIs@PAGE ; "getSEDumpStr isrestricted = %d\n"
.text:000000000000DD7C                 MOV             W1, WZR
.text:000000000000DD80                 ADD             X0, X0, #aGetsedumpstrIs@PAGEOFF ; "getSEDumpStr isrestricted = %d\n"
.text:000000000000DD84                 BL              .printf
.text:000000000000DD88                 ADD             X0, SP, #0x440+n+4
.text:000000000000DD8C                 ADD             X1, SP, #0x440+n
.text:000000000000DD90                 BL              .getACDump
.text:000000000000DD94                 LDR             W21, [SP,#0x440+n]
.text:000000000000DD98                 MOV             W22, W0
.text:000000000000DD9C                 ADRP            X0, #aGetsedumpstrGe@PAGE ; "getSEDumpStr getACDump = %d, 0X%08X, %s"...
.text:000000000000DDA0                 ADD             X0, X0, #aGetsedumpstrGe@PAGEOFF ; "getSEDumpStr getACDump = %d, 0X%08X, %s"...
.text:000000000000DDA4                 ADD             X3, SP, #0x440+n+4
.text:000000000000DDA8                 MOV             W1, W22
.text:000000000000DDAC                 MOV             W2, W21
.text:000000000000DDB0                 BL              .printf
.text:000000000000DDB4                 CBNZ            W22, loc_DFD8
.text:000000000000DDB8                 CBZ             W21, loc_DFD8
.text:000000000000DDBC                 ADD             X1, SP, #0x440+n+4 ; src
.text:000000000000DDC0                 MOV             X0, X20 ; dest
.text:000000000000DDC4                 MOV             X2, X21 ; n
.text:000000000000DDC8                 BL              .memcpy
.text:000000000000DDCC                 MOV             W8, #0x5F ; '_'
.text:000000000000DDD0                 STRB            W8, [X20,X21]
.text:000000000000DDD4                 BL              .getVendor
.text:000000000000DDD8                 CMP             W0, #0x10
.text:000000000000DDDC                 B.EQ            loc_DE00
.text:000000000000DDE0                 ORR             W8, W0, #2
.text:000000000000DDE4                 CMP             W8, #0xF
.text:000000000000DDE8                 B.EQ            loc_DE00
.text:000000000000DDEC                 CMP             W0, #1
.text:000000000000DDF0                 B.EQ            loc_DE00
.text:000000000000DDF4                 ORR             W8, W0, #8
.text:000000000000DDF8                 CMP             W8, #0xC
.text:000000000000DDFC                 B.NE            loc_DFF0
.text:000000000000DE00 loc_DE00                                ; CODE XREF: getSEDumpStr+B8↑j
.text:000000000000DE00                                         ; getSEDumpStr+C4↑j ...
.text:000000000000DE00                 ADD             X0, SP, #0x440+n+4 ; s
.text:000000000000DE04                 MOV             W2, #0x3E8 ; n
.text:000000000000DE08                 MOV             W1, WZR ; c
.text:000000000000DE0C                 BL              .memset
.text:000000000000DE10                 ADD             X0, SP, #0x440+n+4
.text:000000000000DE14                 ADD             X1, SP, #0x440+n
.text:000000000000DE18                 MOV             W2, #1
.text:000000000000DE1C                 BL              .getEnhancedACDumpPart
.text:000000000000DE20                 CBNZ            W0, loc_DFF0
.text:000000000000DE24                 LDR             W22, [SP,#0x440+n]
.text:000000000000DE28                 ADD             W21, W21, #1
.text:000000000000DE2C                 ADD             X0, X20, W21,UXTW ; dest
.text:000000000000DE30                 ADD             X1, SP, #0x440+n+4 ; src
.text:000000000000DE34                 MOV             X2, X22 ; n
.text:000000000000DE38                 BL              .memcpy
.text:000000000000DE3C                 ADD             W22, W22, W21
.text:000000000000DE40                 ADD             X0, SP, #0x440+n+4 ; s
.text:000000000000DE44                 MOV             W2, #0x3E8 ; n
.text:000000000000DE48                 MOV             W1, WZR ; c
.text:000000000000DE4C                 STR             W22, [X19]
.text:000000000000DE50                 BL              .memset
.text:000000000000DE54                 ADD             X0, SP, #0x440+n+4
.text:000000000000DE58                 ADD             X1, SP, #0x440+n
.text:000000000000DE5C                 MOV             W2, #2
.text:000000000000DE60                 BL              .getEnhancedACDumpPart
.text:000000000000DE64                 CBNZ            W0, loc_DFF0
.text:000000000000DE68                 LDR             W21, [SP,#0x440+n]
.text:000000000000DE6C                 ADD             X0, X20, W22,UXTW ; dest
.text:000000000000DE70                 ADD             X1, SP, #0x440+n+4 ; src
.text:000000000000DE74                 MOV             X2, X21 ; n
.text:000000000000DE78                 BL              .memcpy
.text:000000000000DE7C                 ADD             W22, W21, W22
.text:000000000000DE80                 ADD             X0, SP, #0x440+n+4 ; s
.text:000000000000DE84                 MOV             W2, #0x3E8 ; n
.text:000000000000DE88                 MOV             W1, WZR ; c
.text:000000000000DE8C                 STR             W22, [X19]
.text:000000000000DE90                 BL              .memset
.text:000000000000DE94                 ADD             X0, SP, #0x440+n+4
.text:000000000000DE98                 ADD             X1, SP, #0x440+n
.text:000000000000DE9C                 MOV             W2, #3
.text:000000000000DEA0                 BL              .getEnhancedACDumpPart
.text:000000000000DEA4                 CBNZ            W0, loc_DFF0
.text:000000000000DEA8                 LDR             W21, [SP,#0x440+n]
.text:000000000000DEAC                 ADD             X0, X20, W22,UXTW ; dest
.text:000000000000DEB0                 ADD             X1, SP, #0x440+n+4 ; src
.text:000000000000DEB4                 MOV             X2, X21 ; n
.text:000000000000DEB8                 BL              .memcpy
.text:000000000000DEBC                 ADD             W22, W21, W22
.text:000000000000DEC0                 ADD             X0, SP, #0x440+n+4 ; s
.text:000000000000DEC4                 MOV             W2, #0x3E8 ; n
.text:000000000000DEC8                 MOV             W1, WZR ; c
.text:000000000000DECC                 STR             W22, [X19]
.text:000000000000DED0                 BL              .memset
.text:000000000000DED4                 ADD             X0, SP, #0x440+n+4
.text:000000000000DED8                 ADD             X1, SP, #0x440+n
.text:000000000000DEDC                 MOV             W2, #4
.text:000000000000DEE0                 BL              .getEnhancedACDumpPart
.text:000000000000DEE4                 CBNZ            W0, loc_DFF0
.text:000000000000DEE8                 LDR             W21, [SP,#0x440+n]
.text:000000000000DEEC                 ADD             X0, X20, W22,UXTW ; dest
.text:000000000000DEF0                 ADD             X1, SP, #0x440+n+4 ; src
.text:000000000000DEF4                 MOV             X2, X21 ; n
.text:000000000000DEF8                 BL              .memcpy
.text:000000000000DEFC                 ADD             W22, W21, W22
.text:000000000000DF00                 ADD             X0, SP, #0x440+n+4 ; s
.text:000000000000DF04                 MOV             W2, #0x3E8 ; n
.text:000000000000DF08                 MOV             W1, WZR ; c
.text:000000000000DF0C                 STR             W22, [X19]
.text:000000000000DF10                 BL              .memset
.text:000000000000DF14                 ADD             X0, SP, #0x440+n+4
.text:000000000000DF18                 ADD             X1, SP, #0x440+n
.text:000000000000DF1C                 MOV             W2, #5
.text:000000000000DF20                 BL              .getEnhancedACDumpPart
.text:000000000000DF24                 CBNZ            W0, loc_DFF0
.text:000000000000DF28                 LDR             W21, [SP,#0x440+n]
.text:000000000000DF2C                 ADD             X0, X20, W22,UXTW ; dest
.text:000000000000DF30                 ADD             X1, SP, #0x440+n+4 ; src
.text:000000000000DF34                 MOV             X2, X21 ; n
.text:000000000000DF38                 BL              .memcpy
.text:000000000000DF3C                 ADD             W22, W21, W22
.text:000000000000DF40                 ADD             X0, SP, #0x440+n+4 ; s
.text:000000000000DF44                 MOV             W2, #0x3E8 ; n
.text:000000000000DF48                 MOV             W1, WZR ; c
.text:000000000000DF4C                 STR             W22, [X19]
.text:000000000000DF50                 BL              .memset
.text:000000000000DF54                 ADD             X0, SP, #0x440+n+4
.text:000000000000DF58                 ADD             X1, SP, #0x440+n
.text:000000000000DF5C                 MOV             W2, #6
.text:000000000000DF60                 BL              .getEnhancedACDumpPart
.text:000000000000DF64                 CBNZ            W0, loc_DFF0
.text:000000000000DF68                 LDR             W21, [SP,#0x440+n]
.text:000000000000DF6C                 ADD             X0, X20, W22,UXTW ; dest
.text:000000000000DF70                 ADD             X1, SP, #0x440+n+4 ; src
.text:000000000000DF74                 MOV             X2, X21 ; n
.text:000000000000DF78                 BL              .memcpy
.text:000000000000DF7C                 ADD             W22, W21, W22
.text:000000000000DF80                 ADD             X0, SP, #0x440+n+4 ; s
.text:000000000000DF84                 MOV             W2, #0x3E8 ; n
.text:000000000000DF88                 MOV             W1, WZR ; c
.text:000000000000DF8C                 STR             W22, [X19]
.text:000000000000DF90                 BL              .memset
.text:000000000000DF94                 ADD             X0, SP, #0x440+n+4
.text:000000000000DF98                 ADD             X1, SP, #0x440+n
.text:000000000000DF9C                 MOV             W2, #7
.text:000000000000DFA0                 BL              .getEnhancedACDumpPart
.text:000000000000DFA4                 CBNZ            W0, loc_DFF0
.text:000000000000DFA8                 LDR             W21, [SP,#0x440+n]
.text:000000000000DFAC                 ADD             X0, X20, W22,UXTW ; dest
.text:000000000000DFB0                 ADD             X1, SP, #0x440+n+4 ; src
.text:000000000000DFB4                 MOV             X2, X21 ; n
.text:000000000000DFB8                 BL              .memcpy
.text:000000000000DFBC                 ADD             W8, W21, W22
.text:000000000000DFC0                 ADD             X0, SP, #0x440+n+4 ; s
.text:000000000000DFC4                 MOV             W2, #0x3E8 ; n
.text:000000000000DFC8                 MOV             W1, WZR ; c
.text:000000000000DFCC                 STR             W8, [X19]
.text:000000000000DFD0                 BL              .memset
.text:000000000000DFD4                 B               loc_DFF0
.text:000000000000DFD8 ; ---------------------------------------------------------------------------
.text:000000000000DFD8 loc_DFD8                                ; CODE XREF: getSEDumpStr+90↑j
.text:000000000000DFD8                                         ; getSEDumpStr+94↑j
.text:000000000000DFD8                 ADRP            X1, #unk_10DEC@PAGE
.text:000000000000DFDC                 ADRP            X2, #aGetsestatusstr@PAGE ; "getSEStatusStr : failed to getSEDumpStr"
.text:000000000000DFE0                 ADD             X1, X1, #unk_10DEC@PAGEOFF
.text:000000000000DFE4                 ADD             X2, X2, #aGetsestatusstr@PAGEOFF ; "getSEStatusStr : failed to getSEDumpStr"
.text:000000000000DFE8                 MOV             W0, #6
.text:000000000000DFEC                 BL              .__android_log_print
.text:000000000000DFF0 loc_DFF0                                ; CODE XREF: getSEDumpStr+50↑j
.text:000000000000DFF0                                         ; getSEDumpStr+D8↑j ...
.text:000000000000DFF0                 LDR             X8, [X24]
.text:000000000000DFF4                 SUB             X8, X23, X8
.text:000000000000DFF8                 CBNZ            X8, loc_E018
.text:000000000000DFFC                 SUB             SP, X29, #0x40 ; '@'
.text:000000000000E000                 LDP             X29, X30, [SP,#0x40+var_s0]
.text:000000000000E004                 LDP             X20, X19, [SP,#0x40+var_10]
.text:000000000000E008                 LDP             X22, X21, [SP,#0x40+var_20]
.text:000000000000E00C                 LDP             X24, X23, [SP,#0x40+var_30]
.text:000000000000E010                 LDP             X28, X27, [SP+0x40+var_40],#0x50
.text:000000000000E014                 RET
.text:000000000000E018 ; ---------------------------------------------------------------------------
.text:000000000000E018 loc_E018                                ; CODE XREF: getSEDumpStr+2D4↑j
.text:000000000000E018                 BL              .__stack_chk_fail
.text:000000000000E018 ; } // starts at DD24
.text:000000000000E018 ; End of function getSEDumpStr
.text:000000000000E01C ; =============== S U B R O U T I N E =======================================
.text:000000000000E01C ; Attributes: bp-based frame
.text:000000000000E01C                 EXPORT getRestrictedCheck05mode
.text:000000000000E01C getRestrictedCheck05mode                ; CODE XREF: .getRestrictedCheck05mode+C↑j
.text:000000000000E01C                                         ; DATA XREF: LOAD:0000000000001738↑o ...
.text:000000000000E01C var_20          = -0x20
.text:000000000000E01C var_10          = -0x10
.text:000000000000E01C var_s0          =  0
.text:000000000000E01C ; __unwind {
.text:000000000000E01C                 STP             X22, X21, [SP,#-0x10+var_20]!
.text:000000000000E020                 STP             X20, X19, [SP,#0x20+var_10]
.text:000000000000E024                 STP             X29, X30, [SP,#0x20+var_s0]
.text:000000000000E028                 ADD             X29, SP, #0x20
.text:000000000000E02C                 MOV             X19, X1
.text:000000000000E030                 MOV             X20, X0
.text:000000000000E034                 BL              .isFactoryBinary
.text:000000000000E038                 ADRP            X1, #unk_10DEC@PAGE
.text:000000000000E03C                 ADD             X1, X1, #unk_10DEC@PAGEOFF
.text:000000000000E040                 CBZ             W0, loc_E070
.text:000000000000E044                 ADRP            X2, #aGetrestrictedc_3@PAGE ; "getRestrictedCheck05mode, Factory Binar"...
.text:000000000000E048                 ADD             X2, X2, #aGetrestrictedc_3@PAGEOFF ; "getRestrictedCheck05mode, Factory Binar"...
.text:000000000000E04C                 MOV             W0, #4
.text:000000000000E050                 BL              .__android_log_print
.text:000000000000E054                 BL              .isSWDFactory
.text:000000000000E058                 ADRP            X1, #unk_10DEC@PAGE
.text:000000000000E05C                 ADD             X1, X1, #unk_10DEC@PAGEOFF
.text:000000000000E060                 CBZ             W0, loc_E088
.text:000000000000E064                 ADRP            X2, #aGetrestrictedc_4@PAGE ; "getRestrictedCheck05mode, Swd Factory"
.text:000000000000E068                 ADD             X2, X2, #aGetrestrictedc_4@PAGEOFF ; "getRestrictedCheck05mode, Swd Factory"
.text:000000000000E06C                 B               loc_E078
.text:000000000000E070 ; ---------------------------------------------------------------------------
.text:000000000000E070 loc_E070                                ; CODE XREF: getRestrictedCheck05mode+24↑j
.text:000000000000E070                 ADRP            X2, #aGetrestrictedc_5@PAGE ; "getRestrictedCheck05mode, Normal Binary"
.text:000000000000E074                 ADD             X2, X2, #aGetrestrictedc_5@PAGEOFF ; "getRestrictedCheck05mode, Normal Binary"
.text:000000000000E078 loc_E078                                ; CODE XREF: getRestrictedCheck05mode+50↑j
.text:000000000000E078                 MOV             W0, #4
.text:000000000000E07C                 BL              .__android_log_print
.text:000000000000E080                 MOV             W21, #1
.text:000000000000E084                 B               loc_E09C
.text:000000000000E088 ; ---------------------------------------------------------------------------
.text:000000000000E088 loc_E088                                ; CODE XREF: getRestrictedCheck05mode+44↑j
.text:000000000000E088                 ADRP            X2, #aGetrestrictedc_6@PAGE ; "getRestrictedCheck05mode, Nwd Factory"
.text:000000000000E08C                 ADD             X2, X2, #aGetrestrictedc_6@PAGEOFF ; "getRestrictedCheck05mode, Nwd Factory"
.text:000000000000E090                 MOV             W0, #4
.text:000000000000E094                 BL              .__android_log_print
.text:000000000000E098                 MOV             W21, WZR
.text:000000000000E09C loc_E09C                                ; CODE XREF: getRestrictedCheck05mode+68↑j
.text:000000000000E09C                 MOV             W0, W21
.text:000000000000E0A0                 BL              .spiOpen
.text:000000000000E0A4                 CMP             W0, #1
.text:000000000000E0A8                 B.NE            loc_E128
.text:000000000000E0AC                 BL              .getVendor
.text:000000000000E0B0                 MOV             W8, W0
.text:000000000000E0B4                 CMP             W8, #0x10
.text:000000000000E0B8                 B.EQ            loc_E144
.text:000000000000E0BC                 ORR             W9, W8, #2
.text:000000000000E0C0                 CMP             W9, #0xF
.text:000000000000E0C4                 B.EQ            loc_E144
.text:000000000000E0C8                 CMP             W8, #1
.text:000000000000E0CC                 B.EQ            loc_E144
.text:000000000000E0D0                 ORR             W9, W8, #8
.text:000000000000E0D4                 CMP             W9, #0xC
.text:000000000000E0D8                 B.EQ            loc_E144
.text:000000000000E0DC                 CMP             W8, #7
.text:000000000000E0E0                 B.EQ            loc_E154
.text:000000000000E0E4                 ORR             W9, W8, #4
.text:000000000000E0E8                 CMP             W9, #6
.text:000000000000E0EC                 B.EQ            loc_E154
.text:000000000000E0F0                 ORR             W9, W8, #3
.text:000000000000E0F4                 CMP             W9, #0xB
.text:000000000000E0F8                 B.EQ            loc_E118
.text:000000000000E0FC                 CMP             W8, #0xE
.text:000000000000E100                 B.HI            loc_E174
.text:000000000000E104                 MOV             W9, #1
.text:000000000000E108                 LSL             W9, W9, W8
.text:000000000000E10C                 MOV             W10, #0x4028
.text:000000000000E110                 AND             W9, W9, W10
.text:000000000000E114                 CBZ             W9, loc_E174
.text:000000000000E118 loc_E118                                ; CODE XREF: getRestrictedCheck05mode+DC↑j
.text:000000000000E118                 MOV             X0, X20
.text:000000000000E11C                 MOV             X1, X19
.text:000000000000E120                 BL              .getRestrictedCheck_Gemalto
.text:000000000000E124                 B               loc_E160
.text:000000000000E128 ; ---------------------------------------------------------------------------
.text:000000000000E128 loc_E128                                ; CODE XREF: getRestrictedCheck05mode+8C↑j
.text:000000000000E128                 ADRP            X1, #unk_10DEC@PAGE
.text:000000000000E12C                 ADRP            X2, #aGetrestrictedc_7@PAGE ; "getRestrictedCheck05mode, spi open fail"
.text:000000000000E130                 ADD             X1, X1, #unk_10DEC@PAGEOFF
.text:000000000000E134                 ADD             X2, X2, #aGetrestrictedc_7@PAGEOFF ; "getRestrictedCheck05mode, spi open fail"
.text:000000000000E138                 MOV             W0, #6
.text:000000000000E13C                 BL              .__android_log_print
.text:000000000000E140                 B               loc_E160
.text:000000000000E144 ; ---------------------------------------------------------------------------
.text:000000000000E144 loc_E144                                ; CODE XREF: getRestrictedCheck05mode+9C↑j
.text:000000000000E144                                         ; getRestrictedCheck05mode+A8↑j ...
.text:000000000000E144                 MOV             X0, X20
.text:000000000000E148                 MOV             X1, X19
.text:000000000000E14C                 BL              .getRestrictedCheck_NXP
.text:000000000000E150                 B               loc_E160
.text:000000000000E154 ; ---------------------------------------------------------------------------
.text:000000000000E154 loc_E154                                ; CODE XREF: getRestrictedCheck05mode+C4↑j
.text:000000000000E154                                         ; getRestrictedCheck05mode+D0↑j
.text:000000000000E154                 MOV             X0, X20
.text:000000000000E158                 MOV             X1, X19
.text:000000000000E15C                 BL              .getRestrictedCheck_OT
.text:000000000000E160 loc_E160                                ; CODE XREF: getRestrictedCheck05mode+108↑j
.text:000000000000E160                                         ; getRestrictedCheck05mode+124↑j ...
.text:000000000000E160                 LDP             X29, X30, [SP,#0x20+var_s0]
.text:000000000000E164                 LDP             X20, X19, [SP,#0x20+var_10]
.text:000000000000E168                 MOV             W0, W21
.text:000000000000E16C                 LDP             X22, X21, [SP+0x20+var_20],#0x30
.text:000000000000E170                 B               .spiClose
.text:000000000000E174 ; ---------------------------------------------------------------------------
.text:000000000000E174 loc_E174                                ; CODE XREF: getRestrictedCheck05mode+E4↑j
.text:000000000000E174                                         ; getRestrictedCheck05mode+F8↑j
.text:000000000000E174                 ADRP            X1, #unk_10DEC@PAGE
.text:000000000000E178                 ADRP            X2, #aGetrestrictedc_8@PAGE ; "getRestrictedCheck05mode, Failed to ide"...
.text:000000000000E17C                 ADD             X1, X1, #unk_10DEC@PAGEOFF
.text:000000000000E180                 ADD             X2, X2, #aGetrestrictedc_8@PAGEOFF ; "getRestrictedCheck05mode, Failed to ide"...
.text:000000000000E184                 MOV             W0, #6
.text:000000000000E188                 MOV             W3, W8
.text:000000000000E18C                 BL              .__android_log_print
.text:000000000000E190                 B               loc_E160
.text:000000000000E190 ; } // starts at E01C
.text:000000000000E190 ; End of function getRestrictedCheck05mode
.text:000000000000E194 ; =============== S U B R O U T I N E =======================================
.text:000000000000E194 ; Attributes: bp-based frame
.text:000000000000E194                 EXPORT getHQMMemory
.text:000000000000E194 getHQMMemory                            ; CODE XREF: .getHQMMemory+C↑j
.text:000000000000E194                                         ; DATA XREF: LOAD:00000000000017F8↑o ...
.text:000000000000E194 var_16850       = -0x16850
.text:000000000000E194 s               = -0x16848
.text:000000000000E194 var_16844       = -0x16844
.text:000000000000E194 var_30          = -0x30
.text:000000000000E194 var_20          = -0x20
.text:000000000000E194 var_10          = -0x10
.text:000000000000E194 var_s0          =  0
.text:000000000000E194 ; __unwind {
.text:000000000000E194                 STP             X24, X23, [SP,#-0x10+var_30]!
.text:000000000000E198                 STP             X22, X21, [SP,#0x30+var_20]
.text:000000000000E19C                 STP             X20, X19, [SP,#0x30+var_10]
.text:000000000000E1A0                 STP             X29, X30, [SP,#0x30+var_s0]
.text:000000000000E1A4                 ADD             X29, SP, #0x30
.text:000000000000E1A8                 SUB             SP, SP, #0x16,LSL#12
.text:000000000000E1AC                 SUB             SP, SP, #0x820
.text:000000000000E1B0                 ADRP            X21, #__stack_chk_guard_ptr@PAGE
.text:000000000000E1B4                 LDR             X21, [X21,#__stack_chk_guard_ptr@PAGEOFF]
.text:000000000000E1B8                 MOV             W2, #0x10000
.text:000000000000E1BC                 MOV             X20, X1
.text:000000000000E1C0                 MOV             X19, X0
.text:000000000000E1C4                 LDR             X21, [X21]
.text:000000000000E1C8                 MOV             X22, SP
.text:000000000000E1CC                 ADD             X0, SP, #0x16850+s ; s
.text:000000000000E1D0                 MOVK            W2, #0x680C ; n
.text:000000000000E1D4                 MOV             W1, WZR ; c
.text:000000000000E1D8                 STR             X21, [X22,#0x16850+var_16850]
.text:000000000000E1DC                 ADD             X23, SP, #0x16850+s
.text:000000000000E1E0                 BL              .memset
.text:000000000000E1E4                 MOV             W8, #0xFFFFFFFF
.text:000000000000E1E8                 MOV             X1, XZR
.text:000000000000E1EC                 MOV             W0, #0xC8
.text:000000000000E1F0                 ADD             X3, SP, #0x16850+s
.text:000000000000E1F4                 MOV             W2, WZR
.text:000000000000E1F8                 STR             W8, [SP,#0x16850+var_16844]
.text:000000000000E1FC                 BL              .invokeCommand
.text:000000000000E200                 CBZ             W0, loc_E228
.text:000000000000E204                 LDR             W3, [SP,#0x16850+var_16844]
.text:000000000000E208                 ADRP            X1, #unk_10DEC@PAGE
.text:000000000000E20C                 ADRP            X2, #(aCmdHandleCcmDa+0x18)@PAGE ; "invokeCommand() failed! [%d]"
.text:000000000000E210                 ADD             X1, X1, #unk_10DEC@PAGEOFF
.text:000000000000E214                 ADD             X2, X2, #(aCmdHandleCcmDa+0x18)@PAGEOFF ; "invokeCommand() failed! [%d]"
.text:000000000000E218                 MOV             W0, #6
.text:000000000000E21C                 BL              .__android_log_print
.text:000000000000E220                 MOV             W0, #0xFFFFFFFF
.text:000000000000E224                 B               loc_E280
.text:000000000000E228 ; ---------------------------------------------------------------------------
.text:000000000000E228 loc_E228                                ; CODE XREF: getHQMMemory+6C↑j
.text:000000000000E228                 MOV             W8, #0x16808
.text:000000000000E230                 LDR             W2, [X23,X8] ; n
.text:000000000000E234                 CBZ             W2, loc_E248
.text:000000000000E238                 LDR             W8, [SP,#0x16850+var_16844]
.text:000000000000E23C                 CBZ             W8, loc_E268
.text:000000000000E240                 MOV             W0, #0xFFFFFFFF
.text:000000000000E244                 B               loc_E280
.text:000000000000E248 ; ---------------------------------------------------------------------------
.text:000000000000E248 loc_E248                                ; CODE XREF: getHQMMemory+A0↑j
.text:000000000000E248                 ADRP            X1, #unk_10DEC@PAGE
.text:000000000000E24C                 ADRP            X2, #aInvalidReturn@PAGE ; "Invalid return"
.text:000000000000E250                 ADD             X1, X1, #unk_10DEC@PAGEOFF
.text:000000000000E254                 ADD             X2, X2, #aInvalidReturn@PAGEOFF ; "Invalid return"
.text:000000000000E258                 MOV             W0, #6
.text:000000000000E25C                 BL              .__android_log_print
.text:000000000000E260                 MOV             W0, #0xFFFFFFFF
.text:000000000000E264                 B               loc_E280
.text:000000000000E268 ; ---------------------------------------------------------------------------
.text:000000000000E268 loc_E268                                ; CODE XREF: getHQMMemory+A8↑j
.text:000000000000E268                 ADD             X8, SP, #0x16850+s
.text:000000000000E26C                 ADD             X1, X8, #8 ; src
.text:000000000000E270                 MOV             X0, X19 ; dest
.text:000000000000E274                 STR             W2, [X20]
.text:000000000000E278                 BL              .memcpy
.text:000000000000E27C                 MOV             W0, WZR
.text:000000000000E280 loc_E280                                ; CODE XREF: getHQMMemory+90↑j
.text:000000000000E280                                         ; getHQMMemory+B0↑j ...
.text:000000000000E280                 LDR             X8, [X22]
.text:000000000000E284                 SUB             X8, X21, X8
.text:000000000000E288                 CBNZ            X8, loc_E2A4
.text:000000000000E28C                 SUB             SP, X29, #0x30 ; '0'
.text:000000000000E290                 LDP             X29, X30, [SP,#0x30+var_s0]
.text:000000000000E294                 LDP             X20, X19, [SP,#0x30+var_10]
.text:000000000000E298                 LDP             X22, X21, [SP,#0x30+var_20]
.text:000000000000E29C                 LDP             X24, X23, [SP+0x30+var_30],#0x40
.text:000000000000E2A0                 RET
.text:000000000000E2A4 ; ---------------------------------------------------------------------------
.text:000000000000E2A4 loc_E2A4                                ; CODE XREF: getHQMMemory+F4↑j
.text:000000000000E2A4                 BL              .__stack_chk_fail
.text:000000000000E2A4 ; } // starts at E194
.text:000000000000E2A4 ; End of function getHQMMemory
.text:000000000000E2A8 ; =============== S U B R O U T I N E =======================================
.text:000000000000E2A8 ; Attributes: bp-based frame
.text:000000000000E2A8                 EXPORT sendDataNwd
.text:000000000000E2A8 sendDataNwd                             ; CODE XREF: .sendDataNwd+C↑j
.text:000000000000E2A8                                         ; DATA XREF: LOAD:00000000000017C8↑o ...
.text:000000000000E2A8 var_8070        = -0x8070
.text:000000000000E2A8 var_8068        = -0x8068
.text:000000000000E2A8 src             = -0x8060
.text:000000000000E2A8 n               = -0x8058
.text:000000000000E2A8 s               = -0x804A
.text:000000000000E2A8 var_40          = -0x40
.text:000000000000E2A8 var_30          = -0x30
.text:000000000000E2A8 var_20          = -0x20
.text:000000000000E2A8 var_10          = -0x10
.text:000000000000E2A8 var_s0          =  0
.text:000000000000E2A8 ; __unwind {
.text:000000000000E2A8                 STP             X26, X25, [SP,#-0x10+var_40]!
.text:000000000000E2AC                 STP             X24, X23, [SP,#0x40+var_30]
.text:000000000000E2B0                 STP             X22, X21, [SP,#0x40+var_20]
.text:000000000000E2B4                 STP             X20, X19, [SP,#0x40+var_10]
.text:000000000000E2B8                 STP             X29, X30, [SP,#0x40+var_s0]
.text:000000000000E2BC                 ADD             X29, SP, #0x40
.text:000000000000E2C0                 SUB             SP, SP, #8,LSL#12
.text:000000000000E2C4                 SUB             SP, SP, #0x30
.text:000000000000E2C8                 ADRP            X23, #__stack_chk_guard_ptr@PAGE
.text:000000000000E2CC                 LDR             X23, [X23,#__stack_chk_guard_ptr@PAGEOFF]
.text:000000000000E2D0                 MOV             X20, X2
.text:000000000000E2D4                 MOV             W21, W1
.text:000000000000E2D8                 MOV             X22, X0
.text:000000000000E2DC                 LDR             X23, [X23]
.text:000000000000E2E0                 MOV             X24, SP
.text:000000000000E2E4                 ADD             X0, SP, #0x8070+s ; s
.text:000000000000E2E8                 MOV             W2, #0x8002 ; n
.text:000000000000E2EC                 MOV             W1, WZR ; c
.text:000000000000E2F0                 MOV             X19, X3
.text:000000000000E2F4                 STR             X23, [X24,#0x8070+var_8070]
.text:000000000000E2F8                 BL              .memset
.text:000000000000E2FC                 ADRP            X1, #unk_10DEC@PAGE
.text:000000000000E300                 ADRP            X2, #aSStart@PAGE ; "%s, START"
.text:000000000000E304                 ADRP            X3, #aSenddatanwd_0@PAGE ; "sendDataNwd"
.text:000000000000E308                 ADD             X1, X1, #unk_10DEC@PAGEOFF
.text:000000000000E30C                 ADD             X2, X2, #aSStart@PAGEOFF ; "%s, START"
.text:000000000000E310                 ADD             X3, X3, #aSenddatanwd_0@PAGEOFF ; "sendDataNwd"
.text:000000000000E314                 MOV             W0, #4
.text:000000000000E318                 BL              .__android_log_print
.text:000000000000E31C                 CBZ             X22, loc_E390
.text:000000000000E320                 AND             W8, W21, #0xFFFF
.text:000000000000E324                 CBZ             W8, loc_E390
.text:000000000000E328                 CBZ             X20, loc_E390
.text:000000000000E32C                 CBZ             X19, loc_E390
.text:000000000000E330                 ADD             X0, SP, #0x8070+s ; s
.text:000000000000E334                 MOV             W2, #0x8002 ; n
.text:000000000000E338                 MOV             W1, WZR ; c
.text:000000000000E33C                 STP             XZR, XZR, [SP,#0x8070+src]
.text:000000000000E340                 STR             XZR, [SP,#0x8070+var_8068]
.text:000000000000E344                 ADD             X25, SP, #0x8070+s
.text:000000000000E348                 BL              .memset
.text:000000000000E34C                 ADD             X2, SP, #0x8070+var_8068
.text:000000000000E350                 MOV             X0, X22
.text:000000000000E354                 MOV             W1, W21
.text:000000000000E358                 STR             X25, [SP,#0x8070+src]
.text:000000000000E35C                 BL              .secEseAPDUTransmit
.text:000000000000E360                 AND             W21, W0, #0xFFFF
.text:000000000000E364                 CBZ             W21, loc_E3B8
.text:000000000000E368                 ADRP            X1, #unk_10DEC@PAGE
.text:000000000000E36C                 ADRP            X2, #aSFailedToCommu@PAGE ; "%s FAILED to communicate : 0x%x\n"
.text:000000000000E370                 ADRP            X3, #aSenddatanwd_0@PAGE ; "sendDataNwd"
.text:000000000000E374                 ADD             X1, X1, #unk_10DEC@PAGEOFF
.text:000000000000E378                 ADD             X2, X2, #aSFailedToCommu@PAGEOFF ; "%s FAILED to communicate : 0x%x\n"
.text:000000000000E37C                 ADD             X3, X3, #aSenddatanwd_0@PAGEOFF ; "sendDataNwd"
.text:000000000000E380                 MOV             W0, #6
.text:000000000000E384                 MOV             W4, W21
.text:000000000000E388                 BL              .__android_log_print
.text:000000000000E38C                 B               loc_E3F0
.text:000000000000E390 ; ---------------------------------------------------------------------------
.text:000000000000E390 loc_E390                                ; CODE XREF: sendDataNwd+74↑j
.text:000000000000E390                                         ; sendDataNwd+7C↑j ...
.text:000000000000E390                 ADRP            X1, #unk_10DEC@PAGE
.text:000000000000E394                 ADRP            X2, #aSInvalidParame@PAGE ; "%s, Invalid parameter!"
.text:000000000000E398                 ADRP            X3, #aSenddatanwd_0@PAGE ; "sendDataNwd"
.text:000000000000E39C                 ADD             X1, X1, #unk_10DEC@PAGEOFF
.text:000000000000E3A0                 ADD             X2, X2, #aSInvalidParame@PAGEOFF ; "%s, Invalid parameter!"
.text:000000000000E3A4                 ADD             X3, X3, #aSenddatanwd_0@PAGEOFF ; "sendDataNwd"
.text:000000000000E3A8                 MOV             W0, #6
.text:000000000000E3AC                 BL              .__android_log_print
.text:000000000000E3B0                 MOV             W21, #0xFFFFFFFF
.text:000000000000E3B4                 B               loc_E410
.text:000000000000E3B8 ; ---------------------------------------------------------------------------
.text:000000000000E3B8 loc_E3B8                                ; CODE XREF: sendDataNwd+BC↑j
.text:000000000000E3B8                 LDRH            W22, [SP,#0x8070+n]
.text:000000000000E3BC                 MOV             X0, X20 ; dest
.text:000000000000E3C0                 STRH            W22, [X19]
.text:000000000000E3C4                 LDR             X1, [SP,#0x8070+src] ; src
.text:000000000000E3C8                 MOV             X2, X22 ; n
.text:000000000000E3CC                 BL              .memcpy
.text:000000000000E3D0                 LDRH            W8, [SP,#0x8070+var_8068]
.text:000000000000E3D4                 ADD             X9, X20, X22
.text:000000000000E3D8                 STRB            W8, [X9]
.text:000000000000E3DC                 LSR             W8, W8, #8
.text:000000000000E3E0                 STRB            W8, [X9,#1]
.text:000000000000E3E4                 LDRH            W8, [X19]
.text:000000000000E3E8                 ADD             W8, W8, #2
.text:000000000000E3EC                 STRH            W8, [X19]
.text:000000000000E3F0 loc_E3F0                                ; CODE XREF: sendDataNwd+E4↑j
.text:000000000000E3F0                 ADRP            X1, #unk_10DEC@PAGE
.text:000000000000E3F4                 ADRP            X2, #aSEnd@PAGE ; "%s, END"
.text:000000000000E3F8                 ADRP            X3, #aSenddatanwd_0@PAGE ; "sendDataNwd"
.text:000000000000E3FC                 ADD             X1, X1, #unk_10DEC@PAGEOFF
.text:000000000000E400                 ADD             X2, X2, #aSEnd@PAGEOFF ; "%s, END"
.text:000000000000E404                 ADD             X3, X3, #aSenddatanwd_0@PAGEOFF ; "sendDataNwd"
.text:000000000000E408                 MOV             W0, #4
.text:000000000000E40C                 BL              .__android_log_print
.text:000000000000E410 loc_E410                                ; CODE XREF: sendDataNwd+10C↑j
.text:000000000000E410                 LDR             X8, [X24]
.text:000000000000E414                 SUB             X8, X23, X8
.text:000000000000E418                 CBNZ            X8, loc_E43C
.text:000000000000E41C                 MOV             W0, W21
.text:000000000000E420                 SUB             SP, X29, #0x40 ; '@'
.text:000000000000E424                 LDP             X29, X30, [SP,#0x40+var_s0]
.text:000000000000E428                 LDP             X20, X19, [SP,#0x40+var_10]
.text:000000000000E42C                 LDP             X22, X21, [SP,#0x40+var_20]
.text:000000000000E430                 LDP             X24, X23, [SP,#0x40+var_30]
.text:000000000000E434                 LDP             X26, X25, [SP+0x40+var_40],#0x50
.text:000000000000E438                 RET
.text:000000000000E43C ; ---------------------------------------------------------------------------
.text:000000000000E43C loc_E43C                                ; CODE XREF: sendDataNwd+170↑j
.text:000000000000E43C                 BL              .__stack_chk_fail
.text:000000000000E43C ; } // starts at E2A8
.text:000000000000E43C ; End of function sendDataNwd
.text:000000000000E440 ; =============== S U B R O U T I N E =======================================
.text:000000000000E440 ; Attributes: bp-based frame
.text:000000000000E440                 EXPORT coldReset
.text:000000000000E440 coldReset                               ; CODE XREF: .coldReset+C↑j
.text:000000000000E440                                         ; DATA XREF: LOAD:0000000000000E20↑o ...
.text:000000000000E440 var_10          = -0x10
.text:000000000000E440 var_s0          =  0
.text:000000000000E440 ; __unwind {
.text:000000000000E440                 STP             X20, X19, [SP,#-0x10+var_10]!
.text:000000000000E444                 STP             X29, X30, [SP,#0x10+var_s0]
.text:000000000000E448                 ADD             X29, SP, #0x10
.text:000000000000E44C                 BL              .secEseSPI_coldreset
.text:000000000000E450                 AND             W19, W0, #0xFFFF
.text:000000000000E454                 CBZ             W19, loc_E474
.text:000000000000E458                 ADRP            X1, #unk_10DEC@PAGE
.text:000000000000E45C                 ADRP            X2, #aColdresetFaile@PAGE ; "coldReset failed! %d"
.text:000000000000E460                 ADD             X1, X1, #unk_10DEC@PAGEOFF
.text:000000000000E464                 ADD             X2, X2, #aColdresetFaile@PAGEOFF ; "coldReset failed! %d"
.text:000000000000E468                 MOV             W0, #6
.text:000000000000E46C                 MOV             W3, W19
.text:000000000000E470                 BL              .__android_log_print
.text:000000000000E474 loc_E474                                ; CODE XREF: coldReset+14↑j
.text:000000000000E474                 LDP             X29, X30, [SP,#0x10+var_s0]
.text:000000000000E478                 MOV             W0, W19
.text:000000000000E47C                 LDP             X20, X19, [SP+0x10+var_10],#0x20
.text:000000000000E480                 RET
.text:000000000000E480 ; } // starts at E440
.text:000000000000E480 ; End of function coldReset
.text:000000000000E484 ; =============== S U B R O U T I N E =======================================
.text:000000000000E484 ; Attributes: bp-based frame
.text:000000000000E484                 EXPORT checkColdReset
.text:000000000000E484 checkColdReset                          ; CODE XREF: .checkColdReset+C↑j
.text:000000000000E484                                         ; DATA XREF: LOAD:00000000000008F8↑o ...
.text:000000000000E484 var_160         = -0x160
.text:000000000000E484 var_158         = -0x158
.text:000000000000E484 var_150         = -0x150
.text:000000000000E484 var_148         = -0x148
.text:000000000000E484 var_144         = -0x144
.text:000000000000E484 var_140         = -0x140
.text:000000000000E484 var_13C         = -0x13C
.text:000000000000E484 s               = -0x138
.text:000000000000E484 var_38          = -0x38
.text:000000000000E484 var_32          = -0x32
.text:000000000000E484 var_28          = -0x28
.text:000000000000E484 var_20          = -0x20
.text:000000000000E484 var_10          = -0x10
.text:000000000000E484 var_s0          =  0
.text:000000000000E484 ; __unwind {
.text:000000000000E484                 STP             X28, X27, [SP,#-0x10+var_20]!
.text:000000000000E488                 STP             X20, X19, [SP,#0x20+var_10]
.text:000000000000E48C                 STP             X29, X30, [SP,#0x20+var_s0]
.text:000000000000E490                 ADD             X29, SP, #0x20
.text:000000000000E494                 SUB             SP, SP, #0x140
.text:000000000000E498                 ADRP            X20, #__stack_chk_guard_ptr@PAGE
.text:000000000000E49C                 LDR             X20, [X20,#__stack_chk_guard_ptr@PAGEOFF]
.text:000000000000E4A0                 MOV             X11, #0xA00800040000
.text:000000000000E4A8                 MOV             W12, #0x7F9F0000
.text:000000000000E4AC                 LDR             X20, [X20]
.text:000000000000E4B0                 MOV             W8, #1
.text:000000000000E4B4                 MOV             W9, #0x7000
.text:000000000000E4B8                 MOV             W10, #0x51010000
.text:000000000000E4BC                 MOVK            X11, #0xA400
.text:000000000000E4C0                 MOVK            W12, #0xCA80
.text:000000000000E4C4                 ADD             X0, SP, #0x160+s ; s
.text:000000000000E4C8                 MOV             W2, #0x100 ; n
.text:000000000000E4CC                 MOV             W1, WZR ; c
.text:000000000000E4D0                 STUR            X20, [X29,#var_28]
.text:000000000000E4D4                 STRB            W8, [SP,#0x160+var_13C]
.text:000000000000E4D8                 STR             W9, [SP,#0x160+var_140]
.text:000000000000E4DC                 STUR            X10, [X29,#var_32]
.text:000000000000E4E0                 STUR            X11, [X29,#-0x38]
.text:000000000000E4E4                 STRB            WZR, [SP,#0x160+var_144]
.text:000000000000E4E8                 STR             W12, [SP,#0x160+var_148]
.text:000000000000E4EC                 BL              .memset
.text:000000000000E4F0                 BL              .getVendor
.text:000000000000E4F4                 MOV             W8, W0
.text:000000000000E4F8                 CBZ             W8, loc_E534
.text:000000000000E4FC                 AND             W9, W8, #0xFFFFFFFE
.text:000000000000E500                 CMP             W9, #0xA
.text:000000000000E504                 B.NE            loc_E554
.text:000000000000E508                 BL              .secEseSPI_open
.text:000000000000E50C                 AND             W3, W0, #0xFFFF
.text:000000000000E510                 CBZ             W3, loc_E59C
.text:000000000000E514                 ADRP            X1, #unk_10DEC@PAGE
.text:000000000000E518                 ADRP            X2, #aSecesespiOpenI@PAGE ; "secEseSPI_open is failed : %d"
.text:000000000000E51C                 ADD             X1, X1, #unk_10DEC@PAGEOFF
.text:000000000000E520                 ADD             X2, X2, #aSecesespiOpenI@PAGEOFF ; "secEseSPI_open is failed : %d"
.text:000000000000E524                 MOV             W0, #6
.text:000000000000E528                 BL              .__android_log_print
.text:000000000000E52C                 MOV             W19, #0xFFFFFF6A
.text:000000000000E530                 B               loc_E574
.text:000000000000E534 ; ---------------------------------------------------------------------------
.text:000000000000E534 loc_E534                                ; CODE XREF: checkColdReset+74↑j
.text:000000000000E534                 ADRP            X1, #unk_10DEC@PAGE
.text:000000000000E538                 ADRP            X2, #aFailedToGetVen@PAGE ; "Failed to get vendor"
.text:000000000000E53C                 ADD             X1, X1, #unk_10DEC@PAGEOFF
.text:000000000000E540                 ADD             X2, X2, #aFailedToGetVen@PAGEOFF ; "Failed to get vendor"
.text:000000000000E544                 MOV             W0, #6
.text:000000000000E548                 BL              .__android_log_print
.text:000000000000E54C                 MOV             W19, #0xFFFFFF67
.text:000000000000E550                 B               loc_E574
.text:000000000000E554 ; ---------------------------------------------------------------------------
.text:000000000000E554 loc_E554                                ; CODE XREF: checkColdReset+80↑j
.text:000000000000E554                 ADRP            X1, #unk_10DEC@PAGE
.text:000000000000E558                 ADRP            X2, #aSkipColdrestTe@PAGE ; "Skip coldrest test, not supported vendo"...
.text:000000000000E55C                 ADD             X1, X1, #unk_10DEC@PAGEOFF
.text:000000000000E560                 ADD             X2, X2, #aSkipColdrestTe@PAGEOFF ; "Skip coldrest test, not supported vendo"...
.text:000000000000E564                 MOV             W0, #4
.text:000000000000E568                 MOV             W3, W8
.text:000000000000E56C                 BL              .__android_log_print
.text:000000000000E570                 MOV             W19, #0xFFFFFF2C
.text:000000000000E574 loc_E574                                ; CODE XREF: checkColdReset+AC↑j
.text:000000000000E574                                         ; checkColdReset+CC↑j ...
.text:000000000000E574                 BL              .secEseSPI_close
.text:000000000000E578                 LDUR            X8, [X29,#var_28]
.text:000000000000E57C                 SUB             X8, X20, X8
.text:000000000000E580                 CBNZ            X8, loc_E750
.text:000000000000E584                 MOV             W0, W19
.text:000000000000E588                 SUB             SP, X29, #0x20 ; ' '
.text:000000000000E58C                 LDP             X29, X30, [SP,#0x20+var_s0]
.text:000000000000E590                 LDP             X20, X19, [SP,#0x20+var_10]
.text:000000000000E594                 LDP             X28, X27, [SP+0x20+var_20],#0x30
.text:000000000000E598                 RET
.text:000000000000E59C ; ---------------------------------------------------------------------------
.text:000000000000E59C loc_E59C                                ; CODE XREF: checkColdReset+8C↑j
.text:000000000000E59C                 ADD             X8, SP, #0x160+s
.text:000000000000E5A0                 ADD             X0, SP, #0x160+var_140
.text:000000000000E5A4                 MOV             W1, #5
.text:000000000000E5A8                 MOV             X2, SP
.text:000000000000E5AC                 STR             X8, [SP,#0x160+var_158]
.text:000000000000E5B0                 BL              .secEseAPDUTransmit
.text:000000000000E5B4                 LDRH            W8, [SP,#0x160+var_160]
.text:000000000000E5B8                 LSR             W6, W8, #8
.text:000000000000E5BC                 ORR             W9, W0, W6
.text:000000000000E5C0                 AND             W9, W9, #0xFFFF
.text:000000000000E5C4                 CBNZ            W9, loc_E64C
.text:000000000000E5C8                 AND             W9, W8, #0xFF
.text:000000000000E5CC                 CMP             W9, #0x90
.text:000000000000E5D0                 B.NE            loc_E64C
.text:000000000000E5D4                 LDR             X8, [SP,#0x160+var_158]
.text:000000000000E5D8                 SUB             X0, X29, #-var_38
.text:000000000000E5DC                 MOV             W1, #0xE
.text:000000000000E5E0                 MOV             X2, SP
.text:000000000000E5E4                 LDRB            W19, [X8]
.text:000000000000E5E8                 ADD             X8, SP, #0x160+s
.text:000000000000E5EC                 STP             XZR, XZR, [SP,#0x160+var_158]
.text:000000000000E5F0                 STP             XZR, X8, [SP,#0x160+var_160]
.text:000000000000E5F4                 STURB           W19, [X29,#var_38]
.text:000000000000E5F8                 BL              .secEseAPDUTransmit
.text:000000000000E5FC                 LDRH            W8, [SP,#0x160+var_160]
.text:000000000000E600                 LSR             W6, W8, #8
.text:000000000000E604                 ORR             W9, W0, W6
.text:000000000000E608                 AND             W9, W9, #0xFFFF
.text:000000000000E60C                 CBNZ            W9, loc_E678
.text:000000000000E610                 AND             W9, W8, #0xFF
.text:000000000000E614                 CMP             W9, #0x90
.text:000000000000E618                 B.NE            loc_E678
.text:000000000000E61C                 STP             XZR, XZR, [SP,#0x160+var_158]
.text:000000000000E620                 STR             XZR, [SP,#0x160+var_160]
.text:000000000000E624                 BL              .secEseSPI_coldreset
.text:000000000000E628                 AND             W3, W0, #0xFFFF
.text:000000000000E62C                 CBZ             W3, loc_E6A4
.text:000000000000E630                 ADRP            X1, #unk_10DEC@PAGE
.text:000000000000E634                 ADRP            X2, #aColdResetIsFai@PAGE ; "cold reset is failed : %d"
.text:000000000000E638                 ADD             X1, X1, #unk_10DEC@PAGEOFF
.text:000000000000E63C                 ADD             X2, X2, #aColdResetIsFai@PAGEOFF ; "cold reset is failed : %d"
.text:000000000000E640                 MOV             W0, #6
.text:000000000000E644                 BL              .__android_log_print
.text:000000000000E648                 B               loc_E728
.text:000000000000E64C ; ---------------------------------------------------------------------------
.text:000000000000E64C loc_E64C                                ; CODE XREF: checkColdReset+140↑j
.text:000000000000E64C                                         ; checkColdReset+14C↑j
.text:000000000000E64C                 LDRH            W4, [SP,#0x160+var_150]
.text:000000000000E650                 ADRP            X1, #unk_10DEC@PAGE
.text:000000000000E654                 ADRP            X2, #aSeceseapdutran_0@PAGE ; "secEseAPDUTransmit - manageChannelOpen "...
.text:000000000000E658                 AND             W3, W0, #0xFFFF
.text:000000000000E65C                 AND             W5, W8, #0xFF
.text:000000000000E660                 ADD             X1, X1, #unk_10DEC@PAGEOFF
.text:000000000000E664                 ADD             X2, X2, #aSeceseapdutran_0@PAGEOFF ; "secEseAPDUTransmit - manageChannelOpen "...
.text:000000000000E668                 MOV             W0, #6
.text:000000000000E66C                 BL              .__android_log_print
.text:000000000000E670                 MOV             W19, #0xFFFFFF6A
.text:000000000000E674                 B               loc_E574
.text:000000000000E678 ; ---------------------------------------------------------------------------
.text:000000000000E678 loc_E678                                ; CODE XREF: checkColdReset+188↑j
.text:000000000000E678                                         ; checkColdReset+194↑j
.text:000000000000E678                 LDRH            W4, [SP,#0x160+var_150]
.text:000000000000E67C                 ADRP            X1, #unk_10DEC@PAGE
.text:000000000000E680                 ADRP            X2, #aSeceseapdutran_1@PAGE ; "secEseAPDUTransmit - selectISD ret : 0x"...
.text:000000000000E684                 AND             W3, W0, #0xFFFF
.text:000000000000E688                 AND             W5, W8, #0xFF
.text:000000000000E68C                 ADD             X1, X1, #unk_10DEC@PAGEOFF
.text:000000000000E690                 ADD             X2, X2, #aSeceseapdutran_1@PAGEOFF ; "secEseAPDUTransmit - selectISD ret : 0x"...
.text:000000000000E694                 MOV             W0, #6
.text:000000000000E698                 BL              .__android_log_print
.text:000000000000E69C                 MOV             W19, #0xFFFFFF69
.text:000000000000E6A0                 B               loc_E574
.text:000000000000E6A4 ; ---------------------------------------------------------------------------
.text:000000000000E6A4 loc_E6A4                                ; CODE XREF: checkColdReset+1A8↑j
.text:000000000000E6A4                 MOV             W0, #1  ; seconds
.text:000000000000E6A8                 BL              .sleep
.text:000000000000E6AC                 ADD             X8, SP, #0x160+s
.text:000000000000E6B0                 ORR             W9, W19, #0x80
.text:000000000000E6B4                 ADD             X0, SP, #0x160+var_148
.text:000000000000E6B8                 MOV             W1, #5
.text:000000000000E6BC                 MOV             X2, SP
.text:000000000000E6C0                 STR             X8, [SP,#0x160+var_158]
.text:000000000000E6C4                 STRB            W9, [SP,#0x160+var_148]
.text:000000000000E6C8                 BL              .secEseAPDUTransmit
.text:000000000000E6CC                 LDRH            W8, [SP,#0x160+var_160]
.text:000000000000E6D0                 LDRH            W4, [SP,#0x160+var_150]
.text:000000000000E6D4                 ADRP            X1, #unk_10DEC@PAGE
.text:000000000000E6D8                 ADRP            X2, #aSeceseapdutran_2@PAGE ; "secEseAPDUTransmit - getCPLC after cold"...
.text:000000000000E6DC                 AND             W3, W0, #0xFFFF
.text:000000000000E6E0                 AND             W5, W8, #0xFF
.text:000000000000E6E4                 LSR             W6, W8, #8
.text:000000000000E6E8                 ADD             X1, X1, #unk_10DEC@PAGEOFF
.text:000000000000E6EC                 ADD             X2, X2, #aSeceseapdutran_2@PAGEOFF ; "secEseAPDUTransmit - getCPLC after cold"...
.text:000000000000E6F0                 MOV             W0, #4
.text:000000000000E6F4                 BL              .__android_log_print
.text:000000000000E6F8                 LDRH            W8, [SP,#0x160+var_160]
.text:000000000000E6FC                 AND             W9, W8, #0xFF
.text:000000000000E700                 CMP             W9, #0x90
.text:000000000000E704                 B.NE            loc_E730
.text:000000000000E708                 CMP             W8, #0x100
.text:000000000000E70C                 B.CS            loc_E730
.text:000000000000E710                 ADRP            X1, #unk_10DEC@PAGE
.text:000000000000E714                 ADRP            X2, #aFailToDoColdre@PAGE ; "fail to do coldreset"
.text:000000000000E718                 ADD             X1, X1, #unk_10DEC@PAGEOFF
.text:000000000000E71C                 ADD             X2, X2, #aFailToDoColdre@PAGEOFF ; "fail to do coldreset"
.text:000000000000E720                 MOV             W0, #6
.text:000000000000E724                 BL              .__android_log_print
.text:000000000000E728 loc_E728                                ; CODE XREF: checkColdReset+1C4↑j
.text:000000000000E728                 MOV             W19, #0xFFFFFF68
.text:000000000000E72C                 B               loc_E574
.text:000000000000E730 ; ---------------------------------------------------------------------------
.text:000000000000E730 loc_E730                                ; CODE XREF: checkColdReset+280↑j
.text:000000000000E730                                         ; checkColdReset+288↑j
.text:000000000000E730                 ADRP            X1, #unk_10DEC@PAGE
.text:000000000000E734                 ADRP            X2, #aColdresetSucce@PAGE ; "coldreset success"
.text:000000000000E738                 ADD             X1, X1, #unk_10DEC@PAGEOFF
.text:000000000000E73C                 ADD             X2, X2, #aColdresetSucce@PAGEOFF ; "coldreset success"
.text:000000000000E740                 MOV             W0, #4
.text:000000000000E744                 BL              .__android_log_print
.text:000000000000E748                 MOV             W19, WZR
.text:000000000000E74C                 B               loc_E574
.text:000000000000E750 ; ---------------------------------------------------------------------------
.text:000000000000E750 loc_E750                                ; CODE XREF: checkColdReset+FC↑j
.text:000000000000E750                 BL              .__stack_chk_fail
.text:000000000000E750 ; } // starts at E484
.text:000000000000E750 ; End of function checkColdReset
.text:000000000000E754 ; =============== S U B R O U T I N E =======================================
.text:000000000000E754 ; Attributes: bp-based frame
.text:000000000000E754                 EXPORT semFactory
.text:000000000000E754 semFactory                              ; CODE XREF: .semFactory+C↑j
.text:000000000000E754                                         ; DATA XREF: LOAD:0000000000000B20↑o ...
.text:000000000000E754 var_1E0         = -0x1E0
.text:000000000000E754 var_1C8         = -0x1C8
.text:000000000000E754 var_1C0         = -0x1C0
.text:000000000000E754 var_1B0         = -0x1B0
.text:000000000000E754 var_1A0         = -0x1A0
.text:000000000000E754 var_190         = -0x190
.text:000000000000E754 var_170         = -0x170
.text:000000000000E754 var_158         = -0x158
.text:000000000000E754 buf             = -0x150
.text:000000000000E754 var_13C         = -0x13C
.text:000000000000E754 var_135         = -0x135
.text:000000000000E754 s               = -0x134
.text:000000000000E754 var_132         = -0x132
.text:000000000000E754 var_131         = -0x131
.text:000000000000E754 var_121         = -0x121
.text:000000000000E754 s1              = -0xD0
.text:000000000000E754 var_C8          = -0xC8
.text:000000000000E754 var_C4          = -0xC4
.text:000000000000E754 s2              = -0x68
.text:000000000000E754 var_60          = -0x60
.text:000000000000E754 var_50          = -0x50
.text:000000000000E754 var_40          = -0x40
.text:000000000000E754 var_30          = -0x30
.text:000000000000E754 var_20          = -0x20
.text:000000000000E754 var_10          = -0x10
.text:000000000000E754 var_s0          =  0
.text:000000000000E754 ; __unwind {
.text:000000000000E754                 STP             X28, X27, [SP,#-0x10+var_50]!
.text:000000000000E758                 STP             X26, X25, [SP,#0x50+var_40]
.text:000000000000E75C                 STP             X24, X23, [SP,#0x50+var_30]
.text:000000000000E760                 STP             X22, X21, [SP,#0x50+var_20]
.text:000000000000E764                 STP             X20, X19, [SP,#0x50+var_10]
.text:000000000000E768                 STP             X29, X30, [SP,#0x50+var_s0]
.text:000000000000E76C                 ADD             X29, SP, #0x50
.text:000000000000E770                 SUB             SP, SP, #0x1A0
.text:000000000000E774                 ADRP            X23, #__stack_chk_guard_ptr@PAGE
.text:000000000000E778                 LDR             X23, [X23,#__stack_chk_guard_ptr@PAGEOFF]
.text:000000000000E77C                 ADRP            X1, #unk_10DEC@PAGE
.text:000000000000E780                 ADRP            X2, #aStartSemfactor@PAGE ; "start semFactory"
.text:000000000000E784                 SUB             X28, X29, #-s2
.text:000000000000E788                 LDR             X23, [X23]
.text:000000000000E78C                 ADD             X1, X1, #unk_10DEC@PAGEOFF
.text:000000000000E790                 ADD             X2, X2, #aStartSemfactor@PAGEOFF ; "start semFactory"
.text:000000000000E794                 MOV             W0, #4
.text:000000000000E798                 STR             X23, [X28,#0x10]
.text:000000000000E79C                 BL              .__android_log_print
.text:000000000000E7A0                 BL              .isFactoryBinary
.text:000000000000E7A4                 CMP             W0, #1
.text:000000000000E7A8                 B.NE            loc_E820
.text:000000000000E7AC                 MOVI            V0.4S, #0xF
.text:000000000000E7B0                 ADD             X26, SP, #0x1F0+s
.text:000000000000E7B4                 STR             Q0, [SP,#0x1F0+var_170]
.text:000000000000E7B8                 MOVI            V0.16B, #0x9F
.text:000000000000E7BC                 MOVI            V1.8H, #0x37 ; '7'
.text:000000000000E7C0                 STP             Q1, Q0, [SP,#0x1F0+var_190]
.text:000000000000E7C4                 MOVI            V1.8H, #9
.text:000000000000E7C8                 ADD             X8, X26, #3
.text:000000000000E7CC                 ADRP            X20, #unk_10DEC@PAGE
.text:000000000000E7D0                 STR             Q1, [SP,#0x1F0+var_1A0]
.text:000000000000E7D4                 MOVI            V1.16B, #0x37 ; '7'
.text:000000000000E7D8                 ADRP            X25, #aFailedToCloseS@PAGE ; "failed to close spi: %x"
.text:000000000000E7DC                 ADRP            X27, #aSemfactoryFact@PAGE ; "semFactory - Factory Step : spi open ch"...
.text:000000000000E7E0                 STR             X8, [SP,#0x1F0+buf]
.text:000000000000E7E4                 ADD             X8, X26, #0x2C ; ','
.text:000000000000E7E8                 MOV             W24, WZR
.text:000000000000E7EC                 MOV             W19, WZR
.text:000000000000E7F0                 ADD             X20, X20, #unk_10DEC@PAGEOFF
.text:000000000000E7F4                 STR             Q1, [SP,#0x1F0+var_1B0]
.text:000000000000E7F8                 MOVI            V1.16B, #0x30 ; '0'
.text:000000000000E7FC                 ADD             X25, X25, #aFailedToCloseS@PAGEOFF ; "failed to close spi: %x"
.text:000000000000E800                 ADD             X27, X27, #aSemfactoryFact@PAGEOFF ; "semFactory - Factory Step : spi open ch"...
.text:000000000000E804                 STR             X8, [SP,#0x1F0+var_158]
.text:000000000000E808                 ADD             X8, X26, #0x23 ; '#'
.text:000000000000E80C                 EXT             V0.16B, V0.16B, V0.16B, #8
.text:000000000000E810                 STR             Q1, [SP,#0x1F0+var_1C0]
.text:000000000000E814                 STR             X8, [SP,#0x1F0+var_1C8]
.text:000000000000E818                 STR             Q0, [SP,#0x1F0+var_1E0]
.text:000000000000E81C                 B               loc_EBE4
.text:000000000000E820 ; ---------------------------------------------------------------------------
.text:000000000000E820 loc_E820                                ; CODE XREF: semFactory+54↑j
.text:000000000000E820                 LDR             X8, [X28,#0x10]
.text:000000000000E824                 SUB             X8, X23, X8
.text:000000000000E828                 CBNZ            X8, loc_EF40
.text:000000000000E82C                 ADRP            X1, #unk_10DEC@PAGE
.text:000000000000E830                 ADRP            X2, #aInvalidApiNotF@PAGE ; "Invalid API, not factory bianry"
.text:000000000000E834                 ADD             X1, X1, #unk_10DEC@PAGEOFF
.text:000000000000E838                 ADD             X2, X2, #aInvalidApiNotF@PAGEOFF ; "Invalid API, not factory bianry"
.text:000000000000E83C                 MOV             W0, #6
.text:000000000000E840                 SUB             SP, X29, #0x50 ; 'P'
.text:000000000000E844                 LDP             X29, X30, [SP,#0x50+var_s0]
.text:000000000000E848                 LDP             X20, X19, [SP,#0x50+var_10]
.text:000000000000E84C                 LDP             X22, X21, [SP,#0x50+var_20]
.text:000000000000E850                 LDP             X24, X23, [SP,#0x50+var_30]
.text:000000000000E854                 LDP             X26, X25, [SP,#0x50+var_40]
.text:000000000000E858                 LDP             X28, X27, [SP+0x50+var_50],#0x60
.text:000000000000E85C                 B               .__android_log_print
.text:000000000000E860 ; ---------------------------------------------------------------------------
.text:000000000000E860 loc_E860                                ; CODE XREF: semFactory+62C↓j
.text:000000000000E860                 ADRP            X2, #aSkipCplcCheckC@PAGE ; "Skip CPLC check code"
.text:000000000000E864                 MOV             W0, #4
.text:000000000000E868                 MOV             X1, X20
.text:000000000000E86C                 ADD             X2, X2, #aSkipCplcCheckC@PAGEOFF ; "Skip CPLC check code"
.text:000000000000E870                 BL              .__android_log_print
.text:000000000000E874 loc_E874                                ; CODE XREF: semFactory+678↓j
.text:000000000000E874                 ADRP            X22, #aEfsSecEfsSemDa@PAGE ; "/efs/sec_efs/sem_data"
.text:000000000000E878                 ADD             X22, X22, #aEfsSecEfsSemDa@PAGEOFF ; "/efs/sec_efs/sem_data"
.text:000000000000E87C                 MOV             W1, WZR ; type
.text:000000000000E880                 MOV             X0, X22 ; name
.text:000000000000E884                 BL              .access
.text:000000000000E888                 CMN             W0, #1
.text:000000000000E88C                 B.NE            loc_E8E8
.text:000000000000E890                 MOV             W1, #0x241 ; oflag
.text:000000000000E894                 MOV             W2, #0x1A4
.text:000000000000E898                 MOV             X0, X22 ; file
.text:000000000000E89C                 BL              .open
.text:000000000000E8A0                 MOV             W21, W0
.text:000000000000E8A4                 CMN             W21, #1
.text:000000000000E8A8                 B.EQ            loc_E8D0
.text:000000000000E8AC                 LDR             X1, [SP,#0x1F0+buf] ; buf
.text:000000000000E8B0                 MOV             W2, #0x2A ; '*' ; n
.text:000000000000E8B4                 MOV             W0, W21 ; fd
.text:000000000000E8B8                 BL              .write
.text:000000000000E8BC                 MOV             W0, W21 ; fd
.text:000000000000E8C0                 BL              .fsync
.text:000000000000E8C4                 MOV             W0, W21 ; fd
.text:000000000000E8C8                 BL              .close
.text:000000000000E8CC                 B               loc_E8E8
.text:000000000000E8D0 ; ---------------------------------------------------------------------------
.text:000000000000E8D0 loc_E8D0                                ; CODE XREF: semFactory+154↑j
.text:000000000000E8D0                 ADRP            X2, #aFailedToOpenFi@PAGE ; "failed to open file : %s"
.text:000000000000E8D4                 MOV             W0, #6
.text:000000000000E8D8                 MOV             X1, X20
.text:000000000000E8DC                 ADD             X2, X2, #aFailedToOpenFi@PAGEOFF ; "failed to open file : %s"
.text:000000000000E8E0                 MOV             X3, X22
.text:000000000000E8E4                 BL              .__android_log_print
.text:000000000000E8E8 loc_E8E8                                ; CODE XREF: semFactory+138↑j
.text:000000000000E8E8                                         ; semFactory+178↑j
.text:000000000000E8E8                 ADRP            X0, #aDataSemHwparam@PAGE ; "/data/sem/hwparam_cplc"
.text:000000000000E8EC                 MOV             W1, WZR ; type
.text:000000000000E8F0                 ADD             X0, X0, #aDataSemHwparam@PAGEOFF ; "/data/sem/hwparam_cplc"
.text:000000000000E8F4                 BL              .access
.text:000000000000E8F8                 CMN             W0, #1
.text:000000000000E8FC                 B.NE            loc_EBC0
.text:000000000000E900                 ADRP            X0, #aDataSem@PAGE ; "/data/sem"
.text:000000000000E904                 MOV             W1, #0x1FD ; mode
.text:000000000000E908                 ADD             X0, X0, #aDataSem@PAGEOFF ; "/data/sem"
.text:000000000000E90C                 BL              .mkdir
.text:000000000000E910                 CBZ             W0, loc_E928
.text:000000000000E914                 ADRP            X2, #aFailedToMakeFo@PAGE ; "failed to make folder"
.text:000000000000E918                 MOV             W0, #6
.text:000000000000E91C                 MOV             X1, X20
.text:000000000000E920                 ADD             X2, X2, #aFailedToMakeFo@PAGEOFF ; "failed to make folder"
.text:000000000000E924                 BL              .__android_log_print
.text:000000000000E928 loc_E928                                ; CODE XREF: semFactory+1BC↑j
.text:000000000000E928                 ADRP            X0, #aDataSemHwparam@PAGE ; "/data/sem/hwparam_cplc"
.text:000000000000E92C                 MOV             W1, #0x241 ; oflag
.text:000000000000E930                 MOV             W2, #0x1A4
.text:000000000000E934                 ADD             X0, X0, #aDataSemHwparam@PAGEOFF ; "/data/sem/hwparam_cplc"
.text:000000000000E938                 BL              .open
.text:000000000000E93C                 MOV             W21, W0
.text:000000000000E940                 CMN             W21, #1
.text:000000000000E944                 B.EQ            loc_EB8C
.text:000000000000E948                 MOV             W0, #0x55 ; 'U' ; size
.text:000000000000E94C                 BL              .malloc
.text:000000000000E950                 MOV             X22, X0
.text:000000000000E954                 CBZ             X22, loc_EBA4
.text:000000000000E958                 LDR             X8, [SP,#0x1F0+var_158]
.text:000000000000E95C                 CMP             X22, X8
.text:000000000000E960                 B.HI            loc_E97C
.text:000000000000E964                 LDR             X9, [SP,#0x1F0+buf]
.text:000000000000E968                 ADD             X8, X22, #0x53 ; 'S'
.text:000000000000E96C                 MOV             W10, WZR
.text:000000000000E970                 CMP             X9, X8
.text:000000000000E974                 MOV             X8, X22
.text:000000000000E978                 B.LS            loc_EB20
.text:000000000000E97C loc_E97C                                ; CODE XREF: semFactory+20C↑j
.text:000000000000E97C                 LDUR            Q0, [SP,#0x1F0+var_131]
.text:000000000000E980                 LDP             Q21, Q20, [SP,#0x1F0+var_190]
.text:000000000000E984                 LDR             Q25, [SP,#0x1F0+var_1E0]
.text:000000000000E988                 LDR             Q19, [SP,#0x1F0+var_170]
.text:000000000000E98C                 USHLL           V3.8H, V0.8B, #0
.text:000000000000E990                 USHLL2          V4.8H, V0.16B, #0
.text:000000000000E994                 CMHI            V5.8B, V0.8B, V20.8B
.text:000000000000E998                 EXT             V0.16B, V0.16B, V0.16B, #8
.text:000000000000E99C                 USHLL           V5.8H, V5.8B, #0
.text:000000000000E9A0                 CMHI            V0.8B, V0.8B, V25.8B
.text:000000000000E9A4                 MOV             V1.16B, V21.16B
.text:000000000000E9A8                 USHR            V7.8H, V3.8H, #4
.text:000000000000E9AC                 SHL             V5.8H, V5.8H, #0xF
.text:000000000000E9B0                 USHLL           V0.8H, V0.8B, #0
.text:000000000000E9B4                 MOV             V2.16B, V21.16B
.text:000000000000E9B8                 USHR            V6.8H, V4.8H, #4
.text:000000000000E9BC                 USHLL           V16.4S, V3.4H, #0
.text:000000000000E9C0                 USHLL           V18.4S, V4.4H, #0
.text:000000000000E9C4                 USRA            V1.8H, V3.8H, #4
.text:000000000000E9C8                 ORR             V7.8H, #0x30
.text:000000000000E9CC                 SSHR            V5.8H, V5.8H, #0xF
.text:000000000000E9D0                 SHL             V0.8H, V0.8H, #0xF
.text:000000000000E9D4                 USHLL2          V17.4S, V3.8H, #0
.text:000000000000E9D8                 USHLL2          V3.4S, V4.8H, #0
.text:000000000000E9DC                 USRA            V2.8H, V4.8H, #4
.text:000000000000E9E0                 AND             V4.16B, V18.16B, V19.16B
.text:000000000000E9E4                 AND             V16.16B, V16.16B, V19.16B
.text:000000000000E9E8                 ORR             V6.8H, #0x30
.text:000000000000E9EC                 SSHR            V0.8H, V0.8H, #0xF
.text:000000000000E9F0                 BSL             V5.16B, V1.16B, V7.16B
.text:000000000000E9F4                 AND             V3.16B, V3.16B, V19.16B
.text:000000000000E9F8                 AND             V17.16B, V17.16B, V19.16B
.text:000000000000E9FC                 XTN             V16.4H, V16.4S
.text:000000000000EA00                 XTN             V4.4H, V4.4S
.text:000000000000EA04                 BSL             V0.16B, V2.16B, V6.16B
.text:000000000000EA08                 XTN             V1.8B, V5.8H
.text:000000000000EA0C                 XTN2            V1.16B, V0.8H
.text:000000000000EA10                 XTN2            V16.8H, V17.4S
.text:000000000000EA14                 XTN2            V4.8H, V3.4S
.text:000000000000EA18                 LDP             Q23, Q22, [SP,#0x1F0+var_1B0]
.text:000000000000EA1C                 XTN             V5.8B, V16.8H
.text:000000000000EA20                 MOV             X9, X22
.text:000000000000EA24                 ADD             X8, X22, #0x40 ; '@'
.text:000000000000EA28                 CMHI            V3.8H, V16.8H, V22.8H
.text:000000000000EA2C                 CMHI            V0.8H, V4.8H, V22.8H
.text:000000000000EA30                 XTN             V3.8B, V3.8H
.text:000000000000EA34                 XTN2            V3.16B, V0.8H
.text:000000000000EA38                 XTN2            V5.16B, V4.8H
.text:000000000000EA3C                 LDR             Q24, [SP,#0x1F0+var_1C0]
.text:000000000000EA40                 SHL             V0.16B, V3.16B, #7
.text:000000000000EA44                 ADD             V3.16B, V5.16B, V23.16B
.text:000000000000EA48                 SSHR            V2.16B, V0.16B, #7
.text:000000000000EA4C                 ORR             V4.16B, V5.16B, V24.16B
.text:000000000000EA50                 BSL             V2.16B, V3.16B, V4.16B
.text:000000000000EA54                 ST2             {V1.16B-V2.16B}, [X9],#0x20
.text:000000000000EA58                 LDUR            Q0, [SP,#0x1F0+var_121]
.text:000000000000EA5C                 MOV             V1.16B, V21.16B
.text:000000000000EA60                 MOV             V2.16B, V21.16B
.text:000000000000EA64                 MOV             W10, #0x20 ; ' '
.text:000000000000EA68                 USHLL           V3.8H, V0.8B, #0
.text:000000000000EA6C                 USHLL2          V4.8H, V0.16B, #0
.text:000000000000EA70                 CMHI            V5.8B, V0.8B, V20.8B
.text:000000000000EA74                 EXT             V0.16B, V0.16B, V0.16B, #8
.text:000000000000EA78                 USHLL           V5.8H, V5.8B, #0
.text:000000000000EA7C                 CMHI            V0.8B, V0.8B, V25.8B
.text:000000000000EA80                 USHR            V7.8H, V3.8H, #4
.text:000000000000EA84                 SHL             V5.8H, V5.8H, #0xF
.text:000000000000EA88                 USHLL           V0.8H, V0.8B, #0
.text:000000000000EA8C                 USHR            V6.8H, V4.8H, #4
.text:000000000000EA90                 USHLL           V16.4S, V3.4H, #0
.text:000000000000EA94                 USRA            V1.8H, V3.8H, #4
.text:000000000000EA98                 ORR             V7.8H, #0x30
.text:000000000000EA9C                 SSHR            V5.8H, V5.8H, #0xF
.text:000000000000EAA0                 SHL             V0.8H, V0.8H, #0xF
.text:000000000000EAA4                 USHLL2          V17.4S, V3.8H, #0
.text:000000000000EAA8                 USHLL           V18.4S, V4.4H, #0
.text:000000000000EAAC                 USRA            V2.8H, V4.8H, #4
.text:000000000000EAB0                 AND             V16.16B, V16.16B, V19.16B
.text:000000000000EAB4                 ORR             V6.8H, #0x30
.text:000000000000EAB8                 SSHR            V0.8H, V0.8H, #0xF
.text:000000000000EABC                 BSL             V5.16B, V1.16B, V7.16B
.text:000000000000EAC0                 USHLL2          V3.4S, V4.8H, #0
.text:000000000000EAC4                 AND             V4.16B, V18.16B, V19.16B
.text:000000000000EAC8                 AND             V17.16B, V17.16B, V19.16B
.text:000000000000EACC                 XTN             V16.4H, V16.4S
.text:000000000000EAD0                 BSL             V0.16B, V2.16B, V6.16B
.text:000000000000EAD4                 XTN             V1.8B, V5.8H
.text:000000000000EAD8                 AND             V3.16B, V3.16B, V19.16B
.text:000000000000EADC                 XTN             V4.4H, V4.4S
.text:000000000000EAE0                 XTN2            V1.16B, V0.8H
.text:000000000000EAE4                 XTN2            V16.8H, V17.4S
.text:000000000000EAE8                 XTN2            V4.8H, V3.4S
.text:000000000000EAEC                 CMHI            V3.8H, V16.8H, V22.8H
.text:000000000000EAF0                 CMHI            V0.8H, V4.8H, V22.8H
.text:000000000000EAF4                 XTN             V3.8B, V3.8H
.text:000000000000EAF8                 XTN             V5.8B, V16.8H
.text:000000000000EAFC                 XTN2            V3.16B, V0.8H
.text:000000000000EB00                 XTN2            V5.16B, V4.8H
.text:000000000000EB04                 SHL             V0.16B, V3.16B, #7
.text:000000000000EB08                 ADD             V3.16B, V5.16B, V23.16B
.text:000000000000EB0C                 ORR             V4.16B, V5.16B, V24.16B
.text:000000000000EB10                 SSHR            V2.16B, V0.16B, #7
.text:000000000000EB14                 BSL             V2.16B, V3.16B, V4.16B
.text:000000000000EB18                 ST2             {V1.16B-V2.16B}, [X9]
.text:000000000000EB1C                 LDR             X9, [SP,#0x1F0+var_1C8]
.text:000000000000EB20 loc_EB20                                ; CODE XREF: semFactory+224↑j
.text:000000000000EB20                 MOV             W11, #0x2A ; '*'
.text:000000000000EB24                 SUB             W10, W11, W10
.text:000000000000EB28 loc_EB28                                ; CODE XREF: semFactory+414↓j
.text:000000000000EB28                 LDRB            W11, [X9],#1
.text:000000000000EB2C                 MOV             W12, #0x30 ; '0'
.text:000000000000EB30                 SUB             W10, W10, #1
.text:000000000000EB34                 LSR             W13, W11, #4
.text:000000000000EB38                 AND             W14, W11, #0xF
.text:000000000000EB3C                 CMP             W11, #0x9F
.text:000000000000EB40                 BFXIL           W12, W11, #0, #4
.text:000000000000EB44                 ADD             W11, W13, #0x37 ; '7'
.text:000000000000EB48                 ORR             W13, W13, #0x30
.text:000000000000EB4C                 ADD             W15, W14, #0x37 ; '7'
.text:000000000000EB50                 CSEL            W11, W11, W13, HI
.text:000000000000EB54                 CMP             W14, #9
.text:000000000000EB58                 STRB            W11, [X8]
.text:000000000000EB5C                 CSEL            W11, W15, W12, HI
.text:000000000000EB60                 STRB            W11, [X8,#1]
.text:000000000000EB64                 ADD             X8, X8, #2
.text:000000000000EB68                 CBNZ            W10, loc_EB28
.text:000000000000EB6C                 MOV             W2, #0x54 ; 'T' ; n
.text:000000000000EB70                 MOV             W0, W21 ; fd
.text:000000000000EB74                 MOV             X1, X22 ; buf
.text:000000000000EB78                 STRB            WZR, [X22,#0x54]
.text:000000000000EB7C                 BL              .write
.text:000000000000EB80                 MOV             X0, X22 ; ptr
.text:000000000000EB84                 BL              .free
.text:000000000000EB88                 B               loc_EBB8
.text:000000000000EB8C ; ---------------------------------------------------------------------------
.text:000000000000EB8C loc_EB8C                                ; CODE XREF: semFactory+1F0↑j
.text:000000000000EB8C                 ADRP            X2, #aFailedToOpenFi_0@PAGE ; "failed to open file"
.text:000000000000EB90                 MOV             W0, #6
.text:000000000000EB94                 MOV             X1, X20
.text:000000000000EB98                 ADD             X2, X2, #aFailedToOpenFi_0@PAGEOFF ; "failed to open file"
.text:000000000000EB9C                 BL              .__android_log_print
.text:000000000000EBA0                 B               loc_EBC0
.text:000000000000EBA4 ; ---------------------------------------------------------------------------
.text:000000000000EBA4 loc_EBA4                                ; CODE XREF: semFactory+200↑j
.text:000000000000EBA4                 ADRP            X2, #aFailedToConver@PAGE ; "failed to convert String"
.text:000000000000EBA8                 MOV             W0, #6
.text:000000000000EBAC                 MOV             X1, X20
.text:000000000000EBB0                 ADD             X2, X2, #aFailedToConver@PAGEOFF ; "failed to convert String"
.text:000000000000EBB4                 BL              .__android_log_print
.text:000000000000EBB8 loc_EBB8                                ; CODE XREF: semFactory+434↑j
.text:000000000000EBB8                 MOV             W0, W21 ; fd
.text:000000000000EBBC                 BL              .close
.text:000000000000EBC0 loc_EBC0                                ; CODE XREF: semFactory+1A8↑j
.text:000000000000EBC0                                         ; semFactory+44C↑j
.text:000000000000EBC0                 MOV             W0, WZR
.text:000000000000EBC4                 BL              .set_system_prop_bap_state
.text:000000000000EBC8                 ADRP            X2, #aSemfactoryCplc@PAGE ; "semFactory - CPLC check OK.(Final one)"
.text:000000000000EBCC                 MOV             W0, #4
.text:000000000000EBD0                 MOV             X1, X20
.text:000000000000EBD4                 ADD             X2, X2, #aSemfactoryCplc@PAGEOFF ; "semFactory - CPLC check OK.(Final one)"
.text:000000000000EBD8                 BL              .__android_log_print
.text:000000000000EBDC                 MOV             W24, WZR
.text:000000000000EBE0                 B               loc_EE10
.text:000000000000EBE4 ; ---------------------------------------------------------------------------
.text:000000000000EBE4 loc_EBE4                                ; CODE XREF: semFactory+C8↑j
.text:000000000000EBE4                                         ; semFactory+704↓j
.text:000000000000EBE4                 BL              .secEseSPI_open
.text:000000000000EBE8                 AND             W8, W0, #0xFFFF
.text:000000000000EBEC                 CBZ             W8, loc_EC1C
.text:000000000000EBF0                 CMP             W8, #0x33 ; '3'
.text:000000000000EBF4                 B.EQ            loc_EC7C
.text:000000000000EBF8                 CMP             W8, #0x6F ; 'o'
.text:000000000000EBFC                 B.NE            loc_EC98
.text:000000000000EC00                 ADRP            X2, #aOpenspidrvSece@PAGE ; "_openSpiDrv secEseSPI_open failed : Alr"...
.text:000000000000EC04                 MOV             W0, #6
.text:000000000000EC08                 MOV             X1, X20
.text:000000000000EC0C                 ADD             X2, X2, #aOpenspidrvSece@PAGEOFF ; "_openSpiDrv secEseSPI_open failed : Alr"...
.text:000000000000EC10                 BL              .__android_log_print
.text:000000000000EC14                 MOV             W21, #0xFFFFFF38
.text:000000000000EC18                 B               loc_ECB4
.text:000000000000EC1C ; ---------------------------------------------------------------------------
.text:000000000000EC1C loc_EC1C                                ; CODE XREF: semFactory+498↑j
.text:000000000000EC1C                 ADRP            X2, #aSemfactoryFact_0@PAGE ; "semFactory - Factory Step : spi open ch"...
.text:000000000000EC20                 MOV             W0, #4
.text:000000000000EC24                 MOV             X1, X20
.text:000000000000EC28                 ADD             X2, X2, #aSemfactoryFact_0@PAGEOFF ; "semFactory - Factory Step : spi open ch"...
.text:000000000000EC2C                 BL              .__android_log_print
.text:000000000000EC30                 ADD             X0, SP, #0x1F0+s ; s
.text:000000000000EC34                 MOV             W2, #0x64 ; 'd' ; n
.text:000000000000EC38                 MOV             W1, WZR ; c
.text:000000000000EC3C                 BL              .memset
.text:000000000000EC40                 ADRP            X2, #aStartIsdevicef@PAGE ; "start isDeviceFinalESE"
.text:000000000000EC44                 MOV             W0, #4
.text:000000000000EC48                 MOV             X1, X20
.text:000000000000EC4C                 ADD             X2, X2, #aStartIsdevicef@PAGEOFF ; "start isDeviceFinalESE"
.text:000000000000EC50                 STR             WZR, [SP,#0x1F0+var_13C]
.text:000000000000EC54                 BL              .__android_log_print
.text:000000000000EC58                 ADD             X0, SP, #0x1F0+s
.text:000000000000EC5C                 ADD             X1, SP, #0x1F0+var_13C
.text:000000000000EC60                 BL              .getCPLCNwd
.text:000000000000EC64                 CBZ             W0, loc_ECF0
.text:000000000000EC68                 ADRP            X2, #aGetcplcFailed@PAGE ; "getCPLC failed."
.text:000000000000EC6C                 MOV             W0, #6
.text:000000000000EC70                 MOV             X1, X20
.text:000000000000EC74                 ADD             X2, X2, #aGetcplcFailed@PAGEOFF ; "getCPLC failed."
.text:000000000000EC78                 B               loc_EE00
.text:000000000000EC7C ; ---------------------------------------------------------------------------
.text:000000000000EC7C loc_EC7C                                ; CODE XREF: semFactory+4A0↑j
.text:000000000000EC7C                 ADRP            X2, #aOpenspidrvSece_0@PAGE ; "_openSpiDrv secEseSPI_open failed : Not"...
.text:000000000000EC80                 MOV             W0, #6
.text:000000000000EC84                 MOV             X1, X20
.text:000000000000EC88                 ADD             X2, X2, #aOpenspidrvSece_0@PAGEOFF ; "_openSpiDrv secEseSPI_open failed : Not"...
.text:000000000000EC8C                 BL              .__android_log_print
.text:000000000000EC90                 MOV             W21, #0xFFFFFF9C
.text:000000000000EC94                 B               loc_ECB4
.text:000000000000EC98 ; ---------------------------------------------------------------------------
.text:000000000000EC98 loc_EC98                                ; CODE XREF: semFactory+4A8↑j
.text:000000000000EC98                 ADRP            X2, #aFailedToOpenSp@PAGE ; "failed to open spi: %x"
.text:000000000000EC9C                 AND             W3, W0, #0xFFFF
.text:000000000000ECA0                 MOV             W0, #6
.text:000000000000ECA4                 MOV             X1, X20
.text:000000000000ECA8                 ADD             X2, X2, #aFailedToOpenSp@PAGEOFF ; "failed to open spi: %x"
.text:000000000000ECAC                 BL              .__android_log_print
.text:000000000000ECB0                 MOV             W21, WZR
.text:000000000000ECB4 loc_ECB4                                ; CODE XREF: semFactory+4C4↑j
.text:000000000000ECB4                                         ; semFactory+540↑j
.text:000000000000ECB4                 MOV             W0, #6
.text:000000000000ECB8                 MOV             X1, X20
.text:000000000000ECBC                 MOV             X2, X27
.text:000000000000ECC0                 BL              .__android_log_print
.text:000000000000ECC4                 BL              .secEseSPI_close
.text:000000000000ECC8                 AND             W3, W0, #0xFFFF
.text:000000000000ECCC                 CBZ             W3, loc_ECE8
.text:000000000000ECD0                 MOV             W0, #6
.text:000000000000ECD4                 MOV             X1, X20
.text:000000000000ECD8                 MOV             X2, X25
.text:000000000000ECDC                 BL              .__android_log_print
.text:000000000000ECE0                 MOV             W22, WZR
.text:000000000000ECE4                 B               loc_EE48
.text:000000000000ECE8 ; ---------------------------------------------------------------------------
.text:000000000000ECE8 loc_ECE8                                ; CODE XREF: semFactory+578↑j
.text:000000000000ECE8                 MOV             W22, #1
.text:000000000000ECEC                 B               loc_EE48
.text:000000000000ECF0 ; ---------------------------------------------------------------------------
.text:000000000000ECF0 loc_ECF0                                ; CODE XREF: semFactory+510↑j
.text:000000000000ECF0                 LDR             W21, [SP,#0x1F0+var_13C]
.text:000000000000ECF4                 ADRP            X2, #aCplclengD@PAGE ; "cplcleng = %d"
.text:000000000000ECF8                 MOV             W0, #4
.text:000000000000ECFC                 MOV             X1, X20
.text:000000000000ED00                 ADD             X2, X2, #aCplclengD@PAGEOFF ; "cplcleng = %d"
.text:000000000000ED04                 MOV             W3, W21
.text:000000000000ED08                 BL              .__android_log_print
.text:000000000000ED0C                 CMP             W21, #0x2D ; '-'
.text:000000000000ED10                 B.NE            loc_EDF0
.text:000000000000ED14                 LDRB            W8, [SP,#0x1F0+var_132]
.text:000000000000ED18                 ADRP            X1, #(aIsattackednwdP_0+0x25)@PAGE ; "%02X%02X%02X%02X"
.text:000000000000ED1C                 SUB             X0, X29, #-s1 ; s
.text:000000000000ED20                 ADD             X1, X1, #(aIsattackednwdP_0+0x25)@PAGEOFF ; format
.text:000000000000ED24                 ADD             X8, X26, X8
.text:000000000000ED28                 LDURB           W2, [X8,#-1]
.text:000000000000ED2C                 LDRB            W3, [X8]
.text:000000000000ED30                 LDRB            W4, [X8,#1]
.text:000000000000ED34                 LDRB            W5, [X8,#2]
.text:000000000000ED38                 STURB           WZR, [X29,#var_C8]
.text:000000000000ED3C                 STUR            XZR, [X29,#s1]
.text:000000000000ED40                 BL              .sprintf
.text:000000000000ED44                 SUB             X0, X29, #-var_C4 ; s
.text:000000000000ED48                 MOV             W2, #0x5C ; '\' ; n
.text:000000000000ED4C                 MOV             W1, WZR ; c
.text:000000000000ED50                 BL              .memset
.text:000000000000ED54                 MOV             W8, #0x5C ; '\'
.text:000000000000ED58                 SUB             X0, X29, #-var_C4
.text:000000000000ED5C                 ADD             X1, SP, #0x1F0+var_135
.text:000000000000ED60                 STRB            W8, [SP,#0x1F0+var_135]
.text:000000000000ED64                 BL              .getCosNameStr
.text:000000000000ED68                 SUB             X0, X29, #-var_C4 ; s
.text:000000000000ED6C                 MOV             W1, #0x5F ; '_' ; c
.text:000000000000ED70                 BL              .strchr
.text:000000000000ED74                 MOV             X21, X0
.text:000000000000ED78                 BL              .strlen
.text:000000000000ED7C                 MOV             X22, X0
.text:000000000000ED80                 CBZ             W22, loc_E860
.text:000000000000ED84                 CMP             W22, #1
.text:000000000000ED88                 B.LS            loc_EDD0
.text:000000000000ED8C                 MOV             X26, X23
.text:000000000000ED90                 MOV             W24, #1
.text:000000000000ED94                 MOV             W23, #1
.text:000000000000ED98 loc_ED98                                ; CODE XREF: semFactory+66C↓j
.text:000000000000ED98                 LDR             X8, [X21,W23,UXTW]
.text:000000000000ED9C                 SUB             X0, X29, #-s1 ; s1
.text:000000000000EDA0                 SUB             X1, X29, #-s2 ; s2
.text:000000000000EDA4                 STR             X8, [X28]
.text:000000000000EDA8                 STURB           WZR, [X29,#var_60]
.text:000000000000EDAC                 BL              .strcmp
.text:000000000000EDB0                 CMP             W0, #0
.text:000000000000EDB4                 ADD             W23, W23, #9
.text:000000000000EDB8                 CSEL            W24, WZR, W24, EQ
.text:000000000000EDBC                 CMP             W23, W22
.text:000000000000EDC0                 B.CC            loc_ED98
.text:000000000000EDC4                 MOV             X23, X26
.text:000000000000EDC8                 ADD             X26, SP, #0x1F0+s
.text:000000000000EDCC                 CBZ             W24, loc_E874
.text:000000000000EDD0 loc_EDD0                                ; CODE XREF: semFactory+634↑j
.text:000000000000EDD0                 ADRP            X2, #aNotAFinalOne@PAGE ; "NOT a FINAL one"
.text:000000000000EDD4                 MOV             W0, #6
.text:000000000000EDD8                 MOV             X1, X20
.text:000000000000EDDC                 ADD             X2, X2, #aNotAFinalOne@PAGEOFF ; "NOT a FINAL one"
.text:000000000000EDE0                 BL              .__android_log_print
.text:000000000000EDE4                 MOV             W0, #2
.text:000000000000EDE8                 MOV             W24, #2
.text:000000000000EDEC                 B               loc_EE0C
.text:000000000000EDF0 ; ---------------------------------------------------------------------------
.text:000000000000EDF0 loc_EDF0                                ; CODE XREF: semFactory+5BC↑j
.text:000000000000EDF0                 ADRP            X2, #aCplcSizeIncorr@PAGE ; "CPLC size incorrect"
.text:000000000000EDF4                 MOV             W0, #6
.text:000000000000EDF8                 MOV             X1, X20
.text:000000000000EDFC                 ADD             X2, X2, #aCplcSizeIncorr@PAGEOFF ; "CPLC size incorrect"
.text:000000000000EE00 loc_EE00                                ; CODE XREF: semFactory+524↑j
.text:000000000000EE00                 BL              .__android_log_print
.text:000000000000EE04                 MOV             W0, #1
.text:000000000000EE08                 MOV             W24, #1
.text:000000000000EE0C loc_EE0C                                ; CODE XREF: semFactory+698↑j
.text:000000000000EE0C                 BL              .set_system_prop_bap_state
.text:000000000000EE10 loc_EE10                                ; CODE XREF: semFactory+48C↑j
.text:000000000000EE10                 BL              .secEseSPI_close
.text:000000000000EE14                 AND             W3, W0, #0xFFFF
.text:000000000000EE18                 CBZ             W3, loc_EE60
.text:000000000000EE1C                 MOV             W0, #6
.text:000000000000EE20                 MOV             X1, X20
.text:000000000000EE24                 MOV             X2, X25
.text:000000000000EE28                 BL              .__android_log_print
.text:000000000000EE2C                 ADRP            X2, #aSemfactoryFact_1@PAGE ; "semFactory - Factory Step : spi close c"...
.text:000000000000EE30                 MOV             W0, #6
.text:000000000000EE34                 MOV             X1, X20
.text:000000000000EE38                 ADD             X2, X2, #aSemfactoryFact_1@PAGEOFF ; "semFactory - Factory Step : spi close c"...
.text:000000000000EE3C                 BL              .__android_log_print
.text:000000000000EE40                 MOV             W22, WZR
.text:000000000000EE44                 MOV             W21, #1
.text:000000000000EE48 loc_EE48                                ; CODE XREF: semFactory+590↑j
.text:000000000000EE48                                         ; semFactory+598↑j
.text:000000000000EE48                 MOV             W0, #1  ; seconds
.text:000000000000EE4C                 BL              .sleep
.text:000000000000EE50                 ADD             W19, W19, #1
.text:000000000000EE54                 CMP             W19, #5
.text:000000000000EE58                 B.LT            loc_EBE4
.text:000000000000EE5C                 B               loc_EE80
.text:000000000000EE60 ; ---------------------------------------------------------------------------
.text:000000000000EE60 loc_EE60                                ; CODE XREF: semFactory+6C4↑j
.text:000000000000EE60                 ADRP            X1, #unk_10DEC@PAGE
.text:000000000000EE64                 ADRP            X2, #aSemfactoryFact_2@PAGE ; "semFactory - Factory Step : spi close c"...
.text:000000000000EE68                 ADD             X1, X1, #unk_10DEC@PAGEOFF
.text:000000000000EE6C                 ADD             X2, X2, #aSemfactoryFact_2@PAGEOFF ; "semFactory - Factory Step : spi close c"...
.text:000000000000EE70                 MOV             W0, #4
.text:000000000000EE74                 BL              .__android_log_print
.text:000000000000EE78                 MOV             W21, #1
.text:000000000000EE7C                 MOV             W22, #1
.text:000000000000EE80 loc_EE80                                ; CODE XREF: semFactory+708↑j
.text:000000000000EE80                 ADRP            X1, #unk_10DEC@PAGE
.text:000000000000EE84                 ADRP            X2, #aSemfactoryFact_3@PAGE ; "semFactory - Factory Step : factoryRetr"...
.text:000000000000EE88                 ADD             X1, X1, #unk_10DEC@PAGEOFF
.text:000000000000EE8C                 ADD             X2, X2, #aSemfactoryFact_3@PAGEOFF ; "semFactory - Factory Step : factoryRetr"...
.text:000000000000EE90                 MOV             W0, #4
.text:000000000000EE94                 MOV             W3, W19
.text:000000000000EE98                 MOV             W4, W21
.text:000000000000EE9C                 MOV             W5, W22
.text:000000000000EEA0                 BL              .__android_log_print
.text:000000000000EEA4                 ORR             W8, W24, #2
.text:000000000000EEA8                 CMP             W8, #2
.text:000000000000EEAC                 B.NE            loc_EEC4
.text:000000000000EEB0                 CMP             W21, #1
.text:000000000000EEB4                 B.NE            loc_EECC
.text:000000000000EEB8                 CBZ             W22, loc_EECC
.text:000000000000EEBC                 MOV             W0, WZR
.text:000000000000EEC0                 B               loc_EEF4
.text:000000000000EEC4 ; ---------------------------------------------------------------------------
.text:000000000000EEC4 loc_EEC4                                ; CODE XREF: semFactory+758↑j
.text:000000000000EEC4                 MOV             W0, #4
.text:000000000000EEC8                 B               loc_EEF4
.text:000000000000EECC ; ---------------------------------------------------------------------------
.text:000000000000EECC loc_EECC                                ; CODE XREF: semFactory+760↑j
.text:000000000000EECC                                         ; semFactory+764↑j
.text:000000000000EECC                 CBNZ            W21, loc_EEDC
.text:000000000000EED0                 CBZ             W22, loc_EEDC
.text:000000000000EED4                 MOV             W0, #1
.text:000000000000EED8                 B               loc_EEF4
.text:000000000000EEDC ; ---------------------------------------------------------------------------
.text:000000000000EEDC loc_EEDC                                ; CODE XREF: semFactory:loc_EECC↑j
.text:000000000000EEDC                                         ; semFactory+77C↑j
.text:000000000000EEDC                 CMP             W21, #1
.text:000000000000EEE0                 B.NE            loc_EEF0
.text:000000000000EEE4                 CBNZ            W22, loc_EEF0
.text:000000000000EEE8                 MOV             W0, #2
.text:000000000000EEEC                 B               loc_EEF4
.text:000000000000EEF0 ; ---------------------------------------------------------------------------
.text:000000000000EEF0 loc_EEF0                                ; CODE XREF: semFactory+78C↑j
.text:000000000000EEF0                                         ; semFactory+790↑j
.text:000000000000EEF0                 MOV             W0, #3
.text:000000000000EEF4 loc_EEF4                                ; CODE XREF: semFactory+76C↑j
.text:000000000000EEF4                                         ; semFactory+774↑j ...
.text:000000000000EEF4                 BL              .set_system_prop_ese_driver_state
.text:000000000000EEF8                 BL              .set_system_prop_ese_ap_cold_reset
.text:000000000000EEFC                 ADRP            X1, #unk_10DEC@PAGE
.text:000000000000EF00                 ADRP            X2, #aSemfactoryEnd@PAGE ; "semFactory - END"
.text:000000000000EF04                 ADD             X1, X1, #unk_10DEC@PAGEOFF
.text:000000000000EF08                 ADD             X2, X2, #aSemfactoryEnd@PAGEOFF ; "semFactory - END"
.text:000000000000EF0C                 MOV             W0, #4
.text:000000000000EF10                 BL              .__android_log_print
.text:000000000000EF14                 LDR             X8, [X28,#0x10]
.text:000000000000EF18                 SUB             X8, X23, X8
.text:000000000000EF1C                 CBNZ            X8, loc_EF40
.text:000000000000EF20                 SUB             SP, X29, #0x50 ; 'P'
.text:000000000000EF24                 LDP             X29, X30, [SP,#0x50+var_s0]
.text:000000000000EF28                 LDP             X20, X19, [SP,#0x50+var_10]
.text:000000000000EF2C                 LDP             X22, X21, [SP,#0x50+var_20]
.text:000000000000EF30                 LDP             X24, X23, [SP,#0x50+var_30]
.text:000000000000EF34                 LDP             X26, X25, [SP,#0x50+var_40]
.text:000000000000EF38                 LDP             X28, X27, [SP+0x50+var_50],#0x60
.text:000000000000EF3C                 RET
.text:000000000000EF40 ; ---------------------------------------------------------------------------
.text:000000000000EF40 loc_EF40                                ; CODE XREF: semFactory+D4↑j
.text:000000000000EF40                                         ; semFactory+7C8↑j
.text:000000000000EF40                 BL              .__stack_chk_fail
.text:000000000000EF40 ; } // starts at E754
.text:000000000000EF40 ; End of function semFactory
.text:000000000000EF44 ; =============== S U B R O U T I N E =======================================
.text:000000000000EF44 ; Attributes: bp-based frame
.text:000000000000EF44                 EXPORT checkSeState
.text:000000000000EF44 checkSeState                            ; CODE XREF: .checkSeState+C↑j
.text:000000000000EF44                                         ; DATA XREF: LOAD:0000000000000FE8↑o ...
.text:000000000000EF44 var_2D0A8       = -0x2D0A8
.text:000000000000EF44 s               = -0x2D0A0
.text:000000000000EF44 var_2D09C       = -0x2D09C
.text:000000000000EF44 var_50          = -0x50
.text:000000000000EF44 var_40          = -0x40
.text:000000000000EF44 var_30          = -0x30
.text:000000000000EF44 var_20          = -0x20
.text:000000000000EF44 var_10          = -0x10
.text:000000000000EF44 var_s0          =  0
.text:000000000000EF44 ; __unwind {
.text:000000000000EF44                 STP             X28, X27, [SP,#-0x10+var_50]!
.text:000000000000EF48                 STP             X26, X25, [SP,#0x50+var_40]
.text:000000000000EF4C                 STP             X24, X23, [SP,#0x50+var_30]
.text:000000000000EF50                 STP             X22, X21, [SP,#0x50+var_20]
.text:000000000000EF54                 STP             X20, X19, [SP,#0x50+var_10]
.text:000000000000EF58                 STP             X29, X30, [SP,#0x50+var_s0]
.text:000000000000EF5C                 ADD             X29, SP, #0x50
.text:000000000000EF60                 SUB             SP, SP, #0x2D,LSL#12
.text:000000000000EF64                 SUB             SP, SP, #0x60
.text:000000000000EF68                 ADRP            X25, #__stack_chk_guard_ptr@PAGE
.text:000000000000EF6C                 LDR             X25, [X25,#__stack_chk_guard_ptr@PAGEOFF]
.text:000000000000EF70                 MOV             X21, X2
.text:000000000000EF74                 MOV             W2, #0x10000
.text:000000000000EF78                 MOV             W22, W1
.text:000000000000EF7C                 LDR             X25, [X25]
.text:000000000000EF80                 MOV             X23, X0
.text:000000000000EF84                 ADD             X26, SP, #0x2D0B0+var_2D0A8
.text:000000000000EF88                 ADD             X0, SP, #0x2D0B0+s ; s
.text:000000000000EF8C                 MOVK            W2, #0x680C ; n
.text:000000000000EF90                 MOV             W1, WZR ; c
.text:000000000000EF94                 MOV             X19, X4
.text:000000000000EF98                 MOV             W20, W3
.text:000000000000EF9C                 STR             X25, [X26]
.text:000000000000EFA0                 BL              .memset
.text:000000000000EFA4                 MOV             W8, #0xFFFFFFFF
.text:000000000000EFA8                 STR             W8, [SP,#0x2D0B0+var_2D09C]
.text:000000000000EFAC                 BL              .isSupportScpKm
.text:000000000000EFB0                 CBZ             W0, loc_EFE4
.text:000000000000EFB4                 BL              ._openSecureSpi
.text:000000000000EFB8                 MOV             W24, W0
.text:000000000000EFBC                 CMN             W24, #0xC8
.text:000000000000EFC0                 B.EQ            loc_EFD0
.text:000000000000EFC4                 CBZ             W24, loc_EFD0
.text:000000000000EFC8                 CMN             W24, #0x64 ; 'd'
.text:000000000000EFCC                 B.NE            loc_F008
.text:000000000000EFD0 loc_EFD0                                ; CODE XREF: checkSeState+7C↑j
.text:000000000000EFD0                                         ; checkSeState+80↑j
.text:000000000000EFD0                 ADRP            X1, #unk_10DEC@PAGE
.text:000000000000EFD4                 ADRP            X2, #aOpensecurespiF@PAGE ; "_openSecureSpi failed!"
.text:000000000000EFD8                 ADD             X1, X1, #unk_10DEC@PAGEOFF
.text:000000000000EFDC                 ADD             X2, X2, #aOpensecurespiF@PAGEOFF ; "_openSecureSpi failed!"
.text:000000000000EFE0                 B               loc_F060
.text:000000000000EFE4 ; ---------------------------------------------------------------------------
.text:000000000000EFE4 loc_EFE4                                ; CODE XREF: checkSeState+6C↑j
.text:000000000000EFE4                 ADRP            X1, #unk_10DEC@PAGE
.text:000000000000EFE8                 ADRP            X2, #aChecksestateIs@PAGE ; "checkSeState is not supported"
.text:000000000000EFEC                 ADD             X1, X1, #unk_10DEC@PAGEOFF
.text:000000000000EFF0                 ADD             X2, X2, #aChecksestateIs@PAGEOFF ; "checkSeState is not supported"
.text:000000000000EFF4                 MOV             W0, #6
.text:000000000000EFF8                 BL              .__android_log_print
.text:000000000000EFFC                 MOV             W0, #0xFFFFFF6C
.text:000000000000F000                 STR             W0, [SP,#0x2D0B0+var_2D09C]
.text:000000000000F004                 B               loc_F088
.text:000000000000F008 ; ---------------------------------------------------------------------------
.text:000000000000F008 loc_F008                                ; CODE XREF: checkSeState+88↑j
.text:000000000000F008                 ADD             X0, SP, #0x2D0B0+var_2D09C+2,LSL#12
.text:000000000000F00C                 MOV             W2, #0x10000
.text:000000000000F010                 ADD             X27, SP, #0x2D0B0+var_2D09C+2,LSL#12
.text:000000000000F014                 ADD             X0, X0, #0x848 ; s
.text:000000000000F018                 MOVK            W2, #0x680C ; n
.text:000000000000F01C                 MOV             W1, WZR ; c
.text:000000000000F020                 ADD             X27, X27, #0x820
.text:000000000000F024                 BL              .memset
.text:000000000000F028                 ADD             X3, SP, #0x2D0B0+var_2D09C+2,LSL#12
.text:000000000000F02C                 MOV             W8, #0xFFFFFFFF
.text:000000000000F030                 MOV             X1, XZR
.text:000000000000F034                 MOV             W0, #0xA
.text:000000000000F038                 ADD             X3, X3, #0x848
.text:000000000000F03C                 MOV             W2, WZR
.text:000000000000F040                 STR             W8, [X27,#0x2C]
.text:000000000000F044                 BL              .invokeCommand
.text:000000000000F048                 LDR             W8, [X27,#0x2C]
.text:000000000000F04C                 CBZ             W8, loc_F0B4
.text:000000000000F050                 ADRP            X1, #unk_10DEC@PAGE
.text:000000000000F054                 ADRP            X2, #aSpiinitFailed@PAGE ; "spiInit failed!"
.text:000000000000F058                 ADD             X1, X1, #unk_10DEC@PAGEOFF
.text:000000000000F05C                 ADD             X2, X2, #aSpiinitFailed@PAGEOFF ; "spiInit failed!"
.text:000000000000F060 loc_F060                                ; CODE XREF: checkSeState+9C↑j
.text:000000000000F060                 MOV             W0, #6
.text:000000000000F064                 BL              .__android_log_print
.text:000000000000F068 loc_F068                                ; CODE XREF: checkSeState+174↓j
.text:000000000000F068                 ADRP            X1, #unk_10DEC@PAGE
.text:000000000000F06C                 ADRP            X2, #aOpensecurespiF_0@PAGE ; "openSecureSpi failed"
.text:000000000000F070                 ADD             X1, X1, #unk_10DEC@PAGEOFF
.text:000000000000F074                 ADD             X2, X2, #aOpensecurespiF_0@PAGEOFF ; "openSecureSpi failed"
.text:000000000000F078                 MOV             W0, #6
.text:000000000000F07C                 BL              .__android_log_print
.text:000000000000F080                 MOV             W0, #0xFFFFFF74
.text:000000000000F084                 STR             W0, [SP,#0x2D0B0+var_2D09C]
.text:000000000000F088 loc_F088                                ; CODE XREF: checkSeState+C0↑j
.text:000000000000F088                                         ; checkSeState+2F4↓j
.text:000000000000F088                 LDR             X8, [X26]
.text:000000000000F08C                 SUB             X8, X25, X8
.text:000000000000F090                 CBNZ            X8, loc_F23C
.text:000000000000F094                 SUB             SP, X29, #0x50 ; 'P'
.text:000000000000F098                 LDP             X29, X30, [SP,#0x50+var_s0]
.text:000000000000F09C                 LDP             X20, X19, [SP,#0x50+var_10]
.text:000000000000F0A0                 LDP             X22, X21, [SP,#0x50+var_20]
.text:000000000000F0A4                 LDP             X24, X23, [SP,#0x50+var_30]
.text:000000000000F0A8                 LDP             X26, X25, [SP,#0x50+var_40]
.text:000000000000F0AC                 LDP             X28, X27, [SP+0x50+var_50],#0x60
.text:000000000000F0B0                 RET
.text:000000000000F0B4 ; ---------------------------------------------------------------------------
.text:000000000000F0B4 loc_F0B4                                ; CODE XREF: checkSeState+108↑j
.text:000000000000F0B4                 CMP             W24, #1
.text:000000000000F0B8                 B.NE            loc_F068
.text:000000000000F0BC                 CMP             W22, #0x10
.text:000000000000F0C0                 B.HI            loc_F148
.text:000000000000F0C4                 CMP             W20, #0x11
.text:000000000000F0C8                 B.CS            loc_F148
.text:000000000000F0CC                 ADD             X24, SP, #0x2D0B0+var_2D09C+2,LSL#12
.text:000000000000F0D0                 ADD             X24, X24, #0x820
.text:000000000000F0D4                 ADD             X0, X24, #4 ; dest
.text:000000000000F0D8                 MOV             W2, W22 ; n
.text:000000000000F0DC                 MOV             X1, X23 ; src
.text:000000000000F0E0                 STR             W22, [X27]
.text:000000000000F0E4                 BL              .memcpy
.text:000000000000F0E8                 ADD             W8, W22, #4
.text:000000000000F0EC                 ADD             W22, W22, #8
.text:000000000000F0F0                 ADD             X0, X24, W22,UXTW ; dest
.text:000000000000F0F4                 MOV             W2, W20 ; n
.text:000000000000F0F8                 MOV             X1, X21 ; src
.text:000000000000F0FC                 STR             W20, [X24,W8,UXTW]
.text:000000000000F100                 BL              .memcpy
.text:000000000000F104                 ADD             X1, SP, #0x2D0B0+var_2D09C+2,LSL#12
.text:000000000000F108                 ADD             W2, W22, W20
.text:000000000000F10C                 MOV             W0, #0x12C
.text:000000000000F110                 ADD             X1, X1, #0x820
.text:000000000000F114                 ADD             X3, SP, #0x2D0B0+s
.text:000000000000F118                 BL              .invokeCommand
.text:000000000000F11C                 LDR             W3, [SP,#0x2D0B0+var_2D09C]
.text:000000000000F120                 CBZ             W3, loc_F16C
.text:000000000000F124                 ADRP            X1, #unk_10DEC@PAGE
.text:000000000000F128                 ADRP            X2, #aChecksestateFa@PAGE ; "checkSeState() failed to invoke cmd, re"...
.text:000000000000F12C                 MOV             W8, #0xFFFFFF74
.text:000000000000F130                 ADD             X1, X1, #unk_10DEC@PAGEOFF
.text:000000000000F134                 ADD             X2, X2, #aChecksestateFa@PAGEOFF ; "checkSeState() failed to invoke cmd, re"...
.text:000000000000F138                 MOV             W0, #6
.text:000000000000F13C                 STR             W8, [X19]
.text:000000000000F140                 BL              .__android_log_print
.text:000000000000F144                 B               loc_F230
.text:000000000000F148 ; ---------------------------------------------------------------------------
.text:000000000000F148 loc_F148                                ; CODE XREF: checkSeState+17C↑j
.text:000000000000F148                                         ; checkSeState+184↑j
.text:000000000000F148                 ADRP            X1, #unk_10DEC@PAGE
.text:000000000000F14C                 ADRP            X2, #aAidLengthIsOve@PAGE ; "AID length is over the buffer size"
.text:000000000000F150                 ADD             X1, X1, #unk_10DEC@PAGEOFF
.text:000000000000F154                 ADD             X2, X2, #aAidLengthIsOve@PAGEOFF ; "AID length is over the buffer size"
.text:000000000000F158                 MOV             W0, #6
.text:000000000000F15C                 BL              .__android_log_print
.text:000000000000F160                 MOV             W8, #0xFFFFFFE7
.text:000000000000F164                 STR             W8, [SP,#0x2D0B0+var_2D09C]
.text:000000000000F168                 B               loc_F230
.text:000000000000F16C ; ---------------------------------------------------------------------------
.text:000000000000F16C loc_F16C                                ; CODE XREF: checkSeState+1DC↑j
.text:000000000000F16C                 LDR             W8, [SP,#0x2D0B0+s]
.text:000000000000F170                 STR             W8, [X19]
.text:000000000000F174                 CMP             W8, #5  ; switch 6 cases
.text:000000000000F178                 B.HI            def_F18C ; jumptable 000000000000F18C default case
.text:000000000000F17C                 ADRP            X9, #jpt_F18C@PAGE
.text:000000000000F180                 ADD             X9, X9, #jpt_F18C@PAGEOFF
.text:000000000000F184                 LDRSW           X8, [X9,X8,LSL#2]
.text:000000000000F188                 ADD             X8, X8, X9
.text:000000000000F18C                 BR              X8      ; switch jump
.text:000000000000F190 ; ---------------------------------------------------------------------------
.text:000000000000F190 loc_F190                                ; CODE XREF: checkSeState+248↑j
.text:000000000000F190                                         ; DATA XREF: .rodata:jpt_F18C↓o
.text:000000000000F190                 ADRP            X1, #unk_10DEC@PAGE ; jumptable 000000000000F18C case 0
.text:000000000000F194                 ADRP            X2, #aAssociatedSsdI@PAGE ; "Associated SSD is selectable and applet"...
.text:000000000000F198                 ADD             X1, X1, #unk_10DEC@PAGEOFF
.text:000000000000F19C                 ADD             X2, X2, #aAssociatedSsdI@PAGEOFF ; "Associated SSD is selectable and applet"...
.text:000000000000F1A0                 B               loc_F228
.text:000000000000F1A4 ; ---------------------------------------------------------------------------
.text:000000000000F1A4 def_F18C                                ; CODE XREF: checkSeState+234↑j
.text:000000000000F1A4                 ADRP            X1, #unk_10DEC@PAGE ; jumptable 000000000000F18C default case
.text:000000000000F1A8                 ADRP            X2, #aIncorrectResul@PAGE ; "Incorrect result value"
.text:000000000000F1AC                 ADD             X1, X1, #unk_10DEC@PAGEOFF
.text:000000000000F1B0                 ADD             X2, X2, #aIncorrectResul@PAGEOFF ; "Incorrect result value"
.text:000000000000F1B4                 MOV             W0, #6
.text:000000000000F1B8                 BL              .__android_log_print
.text:000000000000F1BC                 MOV             W8, #0xFFFFFF74
.text:000000000000F1C0                 STR             W8, [X19]
.text:000000000000F1C4                 B               loc_F230
.text:000000000000F1C8 ; ---------------------------------------------------------------------------
.text:000000000000F1C8 loc_F1C8                                ; CODE XREF: checkSeState+248↑j
.text:000000000000F1C8                                         ; DATA XREF: .rodata:0000000000011F58↓o
.text:000000000000F1C8                 ADRP            X1, #unk_10DEC@PAGE ; jumptable 000000000000F18C case 1
.text:000000000000F1CC                 ADRP            X2, #aAssociatedSsdI_0@PAGE ; "Associated SSD is selectable and applet"...
.text:000000000000F1D0                 ADD             X1, X1, #unk_10DEC@PAGEOFF
.text:000000000000F1D4                 ADD             X2, X2, #aAssociatedSsdI_0@PAGEOFF ; "Associated SSD is selectable and applet"...
.text:000000000000F1D8                 B               loc_F228
.text:000000000000F1DC ; ---------------------------------------------------------------------------
.text:000000000000F1DC loc_F1DC                                ; CODE XREF: checkSeState+248↑j
.text:000000000000F1DC                                         ; DATA XREF: .rodata:0000000000011F5C↓o
.text:000000000000F1DC                 ADRP            X1, #unk_10DEC@PAGE ; jumptable 000000000000F18C case 2
.text:000000000000F1E0                 ADRP            X2, #aAssociatedSsdI_1@PAGE ; "Associated SSD is not selectable and ap"...
.text:000000000000F1E4                 ADD             X1, X1, #unk_10DEC@PAGEOFF
.text:000000000000F1E8                 ADD             X2, X2, #aAssociatedSsdI_1@PAGEOFF ; "Associated SSD is not selectable and ap"...
.text:000000000000F1EC                 B               loc_F228
.text:000000000000F1F0 ; ---------------------------------------------------------------------------
.text:000000000000F1F0 loc_F1F0                                ; CODE XREF: checkSeState+248↑j
.text:000000000000F1F0                                         ; DATA XREF: .rodata:0000000000011F60↓o
.text:000000000000F1F0                 ADRP            X1, #unk_10DEC@PAGE ; jumptable 000000000000F18C case 3
.text:000000000000F1F4                 ADRP            X2, #aAssociatedSsdI_2@PAGE ; "Associated SSD is not selectable and ap"...
.text:000000000000F1F8                 ADD             X1, X1, #unk_10DEC@PAGEOFF
.text:000000000000F1FC                 ADD             X2, X2, #aAssociatedSsdI_2@PAGEOFF ; "Associated SSD is not selectable and ap"...
.text:000000000000F200                 B               loc_F228
.text:000000000000F204 ; ---------------------------------------------------------------------------
.text:000000000000F204 loc_F204                                ; CODE XREF: checkSeState+248↑j
.text:000000000000F204                                         ; DATA XREF: .rodata:0000000000011F64↓o
.text:000000000000F204                 ADRP            X1, #unk_10DEC@PAGE ; jumptable 000000000000F18C case 4
.text:000000000000F208                 ADRP            X2, #aAssociatedSsdI_3@PAGE ; "Associated SSD is not exist and applet "...
.text:000000000000F20C                 ADD             X1, X1, #unk_10DEC@PAGEOFF
.text:000000000000F210                 ADD             X2, X2, #aAssociatedSsdI_3@PAGEOFF ; "Associated SSD is not exist and applet "...
.text:000000000000F214                 B               loc_F228
.text:000000000000F218 ; ---------------------------------------------------------------------------
.text:000000000000F218 loc_F218                                ; CODE XREF: checkSeState+248↑j
.text:000000000000F218                                         ; DATA XREF: .rodata:0000000000011F68↓o
.text:000000000000F218                 ADRP            X1, #unk_10DEC@PAGE ; jumptable 000000000000F18C case 5
.text:000000000000F21C                 ADRP            X2, #aAssociatedSsdI_4@PAGE ; "Associated SSD is not exist and applet "...
.text:000000000000F220                 ADD             X1, X1, #unk_10DEC@PAGEOFF
.text:000000000000F224                 ADD             X2, X2, #aAssociatedSsdI_4@PAGEOFF ; "Associated SSD is not exist and applet "...
.text:000000000000F228 loc_F228                                ; CODE XREF: checkSeState+25C↑j
.text:000000000000F228                                         ; checkSeState+294↑j ...
.text:000000000000F228                 MOV             W0, #4
.text:000000000000F22C                 BL              .__android_log_print
.text:000000000000F230 loc_F230                                ; CODE XREF: checkSeState+200↑j
.text:000000000000F230                                         ; checkSeState+224↑j ...
.text:000000000000F230                 BL              .closeSecureSpi
.text:000000000000F234                 LDR             W0, [SP,#0x2D0B0+var_2D09C]
.text:000000000000F238                 B               loc_F088
.text:000000000000F23C ; ---------------------------------------------------------------------------
.text:000000000000F23C loc_F23C                                ; CODE XREF: checkSeState+14C↑j
.text:000000000000F23C                 BL              .__stack_chk_fail
.text:000000000000F23C ; } // starts at EF44
.text:000000000000F23C ; End of function checkSeState
.text:000000000000F240 ; =============== S U B R O U T I N E =======================================
.text:000000000000F240 ; Attributes: bp-based frame
.text:000000000000F240                 EXPORT startRequestCredentials
.text:000000000000F240 startRequestCredentials                 ; CODE XREF: .startRequestCredentials+C↑j
.text:000000000000F240                                         ; DATA XREF: LOAD:0000000000001810↑o ...
.text:000000000000F240 var_2D250       = -0x2D250
.text:000000000000F240 var_2D248       = -0x2D248
.text:000000000000F240 buf             = -0x2D240
.text:000000000000F240 s               = -0x2D178
.text:000000000000F240 var_2D174       = -0x2D174
.text:000000000000F240 var_50          = -0x50
.text:000000000000F240 var_40          = -0x40
.text:000000000000F240 var_30          = -0x30
.text:000000000000F240 var_20          = -0x20
.text:000000000000F240 var_10          = -0x10
.text:000000000000F240 var_s0          =  0
.text:000000000000F240 ; __unwind {
.text:000000000000F240                 STP             X28, X27, [SP,#-0x10+var_50]!
.text:000000000000F244                 STP             X26, X25, [SP,#0x50+var_40]
.text:000000000000F248                 STP             X24, X23, [SP,#0x50+var_30]
.text:000000000000F24C                 STP             X22, X21, [SP,#0x50+var_20]
.text:000000000000F250                 STP             X20, X19, [SP,#0x50+var_10]
.text:000000000000F254                 STP             X29, X30, [SP,#0x50+var_s0]
.text:000000000000F258                 ADD             X29, SP, #0x50
.text:000000000000F25C                 SUB             SP, SP, #0x2D,LSL#12
.text:000000000000F260                 SUB             SP, SP, #0x210
.text:000000000000F264                 ADRP            X27, #__stack_chk_guard_ptr@PAGE
.text:000000000000F268                 LDR             X27, [X27,#__stack_chk_guard_ptr@PAGEOFF]
.text:000000000000F26C                 MOV             X23, X2
.text:000000000000F270                 MOV             W2, #0x10000
.text:000000000000F274                 MOV             W24, W1
.text:000000000000F278                 LDR             X27, [X27]
.text:000000000000F27C                 MOV             X25, X0
.text:000000000000F280                 ADD             X26, SP, #0x2D260+var_2D248
.text:000000000000F284                 ADD             X0, SP, #0x2D260+s ; s
.text:000000000000F288                 MOVK            W2, #0x680C ; n
.text:000000000000F28C                 MOV             W1, WZR ; c
.text:000000000000F290                 MOV             X19, X6
.text:000000000000F294                 MOV             X20, X5
.text:000000000000F298                 MOV             X21, X4
.text:000000000000F29C                 MOV             W22, W3
.text:000000000000F2A0                 STR             X27, [X26]
.text:000000000000F2A4                 BL              .memset
.text:000000000000F2A8                 MOV             W8, #0xFFFFFFFF
.text:000000000000F2AC                 ADD             X0, SP, #0x2D260+buf ; s
.text:000000000000F2B0                 MOV             W2, #0xC8 ; n
.text:000000000000F2B4                 MOV             W1, WZR ; c
.text:000000000000F2B8                 STR             W8, [SP,#0x2D260+var_2D174]
.text:000000000000F2BC                 BL              .memset
.text:000000000000F2C0                 BL              .isSupportScpKm
.text:000000000000F2C4                 CBZ             W0, loc_F300
.text:000000000000F2C8                 ADRP            X0, #aEfsSecEfsSspDa@PAGE ; "/efs/sec_efs/ssp_data"
.text:000000000000F2CC                 MOV             W1, WZR ; type
.text:000000000000F2D0                 ADD             X0, X0, #aEfsSecEfsSspDa@PAGEOFF ; "/efs/sec_efs/ssp_data"
.text:000000000000F2D4                 BL              .access
.text:000000000000F2D8                 CBZ             W0, loc_F324
.text:000000000000F2DC                 ADRP            X1, #unk_10DEC@PAGE
.text:000000000000F2E0                 ADRP            X2, #aSspKeyDoesNotE@PAGE ; "SSP key does not exist"
.text:000000000000F2E4                 ADD             X1, X1, #unk_10DEC@PAGEOFF
.text:000000000000F2E8                 ADD             X2, X2, #aSspKeyDoesNotE@PAGEOFF ; "SSP key does not exist"
.text:000000000000F2EC                 MOV             W0, #6
.text:000000000000F2F0                 BL              .__android_log_print
.text:000000000000F2F4                 MOV             W0, #0xFFFFFFFE
.text:000000000000F2F8                 STR             W0, [SP,#0x2D260+var_2D174]
.text:000000000000F2FC                 B               loc_F454
.text:000000000000F300 ; ---------------------------------------------------------------------------
.text:000000000000F300 loc_F300                                ; CODE XREF: startRequestCredentials+84↑j
.text:000000000000F300                 ADRP            X1, #unk_10DEC@PAGE
.text:000000000000F304                 ADRP            X2, #aStartrequestcr@PAGE ; "startRequestCredentials is not supporte"...
.text:000000000000F308                 ADD             X1, X1, #unk_10DEC@PAGEOFF
.text:000000000000F30C                 ADD             X2, X2, #aStartrequestcr@PAGEOFF ; "startRequestCredentials is not supporte"...
.text:000000000000F310                 MOV             W0, #6
.text:000000000000F314                 BL              .__android_log_print
.text:000000000000F318                 MOV             W0, #0xFFFFFF6C
.text:000000000000F31C                 STR             W0, [SP,#0x2D260+var_2D174]
.text:000000000000F320                 B               loc_F454
.text:000000000000F324 ; ---------------------------------------------------------------------------
.text:000000000000F324 loc_F324                                ; CODE XREF: startRequestCredentials+98↑j
.text:000000000000F324                 ADRP            X0, #aEfsSecEfsSspDa@PAGE ; "/efs/sec_efs/ssp_data"
.text:000000000000F328                 MOV             W1, WZR ; oflag
.text:000000000000F32C                 ADD             X0, X0, #aEfsSecEfsSspDa@PAGEOFF ; "/efs/sec_efs/ssp_data"
.text:000000000000F330                 BL              .open
.text:000000000000F334                 MOV             W27, W0
.text:000000000000F338                 CMN             W27, #1
.text:000000000000F33C                 B.EQ            loc_F394
.text:000000000000F340                 ADD             X1, SP, #0x2D260+buf ; buf
.text:000000000000F344                 MOV             W2, #0xC8 ; nbytes
.text:000000000000F348                 MOV             W0, W27 ; fd
.text:000000000000F34C                 BL              .read
.text:000000000000F350                 MOV             X28, X0
.text:000000000000F354                 MOV             W0, W27 ; fd
.text:000000000000F358                 BL              .close
.text:000000000000F35C                 STR             X28, [SP,#0x2D260+var_2D250]
.text:000000000000F360                 TBNZ            W28, #0x1F, loc_F3B4
.text:000000000000F364                 BL              ._openSecureSpi
.text:000000000000F368                 MOV             W27, W0
.text:000000000000F36C                 CMN             W27, #0xC8
.text:000000000000F370                 B.EQ            loc_F380
.text:000000000000F374                 CBZ             W27, loc_F380
.text:000000000000F378                 CMN             W27, #0x64 ; 'd'
.text:000000000000F37C                 B.NE            loc_F3C8
.text:000000000000F380 loc_F380                                ; CODE XREF: startRequestCredentials+130↑j
.text:000000000000F380                                         ; startRequestCredentials+134↑j
.text:000000000000F380                 ADRP            X1, #unk_10DEC@PAGE
.text:000000000000F384                 ADRP            X2, #aOpensecurespiF@PAGE ; "_openSecureSpi failed!"
.text:000000000000F388                 ADD             X1, X1, #unk_10DEC@PAGEOFF
.text:000000000000F38C                 ADD             X2, X2, #aOpensecurespiF@PAGEOFF ; "_openSecureSpi failed!"
.text:000000000000F390                 B               loc_F420
.text:000000000000F394 ; ---------------------------------------------------------------------------
.text:000000000000F394 loc_F394                                ; CODE XREF: startRequestCredentials+FC↑j
.text:000000000000F394                 ADRP            X1, #unk_10DEC@PAGE
.text:000000000000F398                 ADRP            X2, #aFailedToOpenFi@PAGE ; "failed to open file : %s"
.text:000000000000F39C                 ADRP            X3, #aEfsSecEfsSspDa@PAGE ; "/efs/sec_efs/ssp_data"
.text:000000000000F3A0                 ADD             X1, X1, #unk_10DEC@PAGEOFF
.text:000000000000F3A4                 ADD             X2, X2, #aFailedToOpenFi@PAGEOFF ; "failed to open file : %s"
.text:000000000000F3A8                 ADD             X3, X3, #aEfsSecEfsSspDa@PAGEOFF ; "/efs/sec_efs/ssp_data"
.text:000000000000F3AC                 MOV             W0, #6
.text:000000000000F3B0                 BL              .__android_log_print
.text:000000000000F3B4 loc_F3B4                                ; CODE XREF: startRequestCredentials+120↑j
.text:000000000000F3B4                 ADRP            X1, #unk_10DEC@PAGE
.text:000000000000F3B8                 ADRP            X2, #aFailedToReadKo@PAGE ; "failed to read kotp!"
.text:000000000000F3BC                 ADD             X1, X1, #unk_10DEC@PAGEOFF
.text:000000000000F3C0                 ADD             X2, X2, #aFailedToReadKo@PAGEOFF ; "failed to read kotp!"
.text:000000000000F3C4                 B               loc_F438
.text:000000000000F3C8 ; ---------------------------------------------------------------------------
.text:000000000000F3C8 loc_F3C8                                ; CODE XREF: startRequestCredentials+13C↑j
.text:000000000000F3C8                 ADD             X0, SP, #0x2D260+var_2D250+6,LSL#12
.text:000000000000F3CC                 MOV             W2, #0x10000
.text:000000000000F3D0                 ADD             X28, SP, #0x2D260+var_2D250+6,LSL#12
.text:000000000000F3D4                 ADD             X0, X0, #0x9F8 ; s
.text:000000000000F3D8                 MOVK            W2, #0x680C ; n
.text:000000000000F3DC                 MOV             W1, WZR ; c
.text:000000000000F3E0                 ADD             X28, X28, #0x8F4
.text:000000000000F3E4                 BL              .memset
.text:000000000000F3E8                 ADD             X3, SP, #0x2D260+var_2D250+6,LSL#12
.text:000000000000F3EC                 MOV             W8, #0xFFFFFFFF
.text:000000000000F3F0                 MOV             X1, XZR
.text:000000000000F3F4                 MOV             W0, #0xA
.text:000000000000F3F8                 ADD             X3, X3, #0x9F8
.text:000000000000F3FC                 MOV             W2, WZR
.text:000000000000F400                 STR             W8, [X28,#0x108]
.text:000000000000F404                 BL              .invokeCommand
.text:000000000000F408                 LDR             W8, [X28,#0x108]
.text:000000000000F40C                 CBZ             W8, loc_F480
.text:000000000000F410                 ADRP            X1, #unk_10DEC@PAGE
.text:000000000000F414                 ADRP            X2, #aSpiinitFailed@PAGE ; "spiInit failed!"
.text:000000000000F418                 ADD             X1, X1, #unk_10DEC@PAGEOFF
.text:000000000000F41C                 ADD             X2, X2, #aSpiinitFailed@PAGEOFF ; "spiInit failed!"
.text:000000000000F420 loc_F420                                ; CODE XREF: startRequestCredentials+150↑j
.text:000000000000F420                 MOV             W0, #6
.text:000000000000F424                 BL              .__android_log_print
.text:000000000000F428 loc_F428                                ; CODE XREF: startRequestCredentials+244↓j
.text:000000000000F428                 ADRP            X1, #unk_10DEC@PAGE
.text:000000000000F42C                 ADRP            X2, #aOpensecurespiF_0@PAGE ; "openSecureSpi failed"
.text:000000000000F430                 ADD             X1, X1, #unk_10DEC@PAGEOFF
.text:000000000000F434                 ADD             X2, X2, #aOpensecurespiF_0@PAGEOFF ; "openSecureSpi failed"
.text:000000000000F438 loc_F438                                ; CODE XREF: startRequestCredentials+184↑j
.text:000000000000F438                 MOV             W0, #6
.text:000000000000F43C                 BL              .__android_log_print
.text:000000000000F440                 MOV             W0, #0xFFFFFF72
.text:000000000000F444                 STR             W0, [SP,#0x2D260+var_2D174]
.text:000000000000F448                 ADRP            X27, #__stack_chk_guard_ptr@PAGE
.text:000000000000F44C                 LDR             X27, [X27,#__stack_chk_guard_ptr@PAGEOFF]
.text:000000000000F450                 LDR             X27, [X27]
.text:000000000000F454 loc_F454                                ; CODE XREF: startRequestCredentials+BC↑j
.text:000000000000F454                                         ; startRequestCredentials+E0↑j ...
.text:000000000000F454                 LDR             X8, [X26]
.text:000000000000F458                 SUB             X8, X27, X8
.text:000000000000F45C                 CBNZ            X8, loc_F614
.text:000000000000F460                 SUB             SP, X29, #0x50 ; 'P'
.text:000000000000F464                 LDP             X29, X30, [SP,#0x50+var_s0]
.text:000000000000F468                 LDP             X20, X19, [SP,#0x50+var_10]
.text:000000000000F46C                 LDP             X22, X21, [SP,#0x50+var_20]
.text:000000000000F470                 LDP             X24, X23, [SP,#0x50+var_30]
.text:000000000000F474                 LDP             X26, X25, [SP,#0x50+var_40]
.text:000000000000F478                 LDP             X28, X27, [SP+0x50+var_50],#0x60
.text:000000000000F47C                 RET
.text:000000000000F480 ; ---------------------------------------------------------------------------
.text:000000000000F480 loc_F480                                ; CODE XREF: startRequestCredentials+1CC↑j
.text:000000000000F480                 CMP             W27, #1
.text:000000000000F484                 B.NE            loc_F428
.text:000000000000F488                 LDR             X27, [SP,#0x2D260+var_2D250]
.text:000000000000F48C                 ADD             X1, SP, #0x2D260+buf ; src
.text:000000000000F490                 STR             W27, [X28]
.text:000000000000F494                 ADD             X28, SP, #0x2D260+var_2D250+6,LSL#12
.text:000000000000F498                 ADD             X28, X28, #0x8F4
.text:000000000000F49C                 ADD             X0, X28, #4 ; dest
.text:000000000000F4A0                 AND             X2, X27, #0xFFFFFFFF ; n
.text:000000000000F4A4                 BL              .memcpy
.text:000000000000F4A8                 ADD             W8, W27, #4
.text:000000000000F4AC                 ADD             W27, W27, #8
.text:000000000000F4B0                 ADD             X0, X28, W27,UXTW ; dest
.text:000000000000F4B4                 MOV             W2, W24 ; n
.text:000000000000F4B8                 MOV             X1, X25 ; src
.text:000000000000F4BC                 STR             W24, [X28,W8,UXTW]
.text:000000000000F4C0                 BL              .memcpy
.text:000000000000F4C4                 ADD             W8, W27, W24
.text:000000000000F4C8                 ADD             W24, W8, #4
.text:000000000000F4CC                 ADD             X0, X28, W24,UXTW ; dest
.text:000000000000F4D0                 MOV             W2, W22 ; n
.text:000000000000F4D4                 MOV             X1, X23 ; src
.text:000000000000F4D8                 STR             W22, [X28,W8,UXTW]
.text:000000000000F4DC                 BL              .memcpy
.text:000000000000F4E0                 MOV             X0, X21 ; s
.text:000000000000F4E4                 ADD             W23, W24, W22
.text:000000000000F4E8                 BL              .strlen
.text:000000000000F4EC                 MOV             X22, X0
.text:000000000000F4F0                 STR             W22, [X28,W23,UXTW]
.text:000000000000F4F4                 ADD             W23, W23, #4
.text:000000000000F4F8                 ADD             X0, X28, W23,UXTW ; dest
.text:000000000000F4FC                 AND             X2, X22, #0xFFFFFFFF ; n
.text:000000000000F500                 MOV             X1, X21 ; src
.text:000000000000F504                 BL              .memcpy
.text:000000000000F508                 ADD             X1, SP, #0x2D260+var_2D250+6,LSL#12
.text:000000000000F50C                 ADD             W2, W22, W23
.text:000000000000F510                 MOV             W0, #0x12D
.text:000000000000F514                 ADD             X1, X1, #0x8F4
.text:000000000000F518                 ADD             X3, SP, #0x2D260+s
.text:000000000000F51C                 ADD             X21, SP, #0x2D260+s
.text:000000000000F520                 BL              .invokeCommand
.text:000000000000F524                 LDR             W3, [SP,#0x2D260+var_2D174]
.text:000000000000F528                 CBZ             W3, loc_F548
.text:000000000000F52C                 ADRP            X1, #unk_10DEC@PAGE
.text:000000000000F530                 ADRP            X2, #aCmdRequestCred@PAGE ; "CMD_REQUEST_CREDENTIALS failed to invok"...
.text:000000000000F534                 ADD             X1, X1, #unk_10DEC@PAGEOFF
.text:000000000000F538                 ADD             X2, X2, #aCmdRequestCred@PAGEOFF ; "CMD_REQUEST_CREDENTIALS failed to invok"...
.text:000000000000F53C                 MOV             W0, #6
.text:000000000000F540                 BL              .__android_log_print
.text:000000000000F544                 B               loc_F57C
.text:000000000000F548 ; ---------------------------------------------------------------------------
.text:000000000000F548 loc_F548                                ; CODE XREF: startRequestCredentials+2E8↑j
.text:000000000000F548                 MOV             W8, #0x16808
.text:000000000000F550                 LDR             W2, [X21,X8] ; n
.text:000000000000F554                 CMP             W2, #0x12D
.text:000000000000F558                 B.CC            loc_F594
.text:000000000000F55C                 ADRP            X1, #unk_10DEC@PAGE
.text:000000000000F560                 ADRP            X2, #aInternalkeyblo@PAGE ; "internalKeyBlobsLen is over the buffer "...
.text:000000000000F564                 ADD             X1, X1, #unk_10DEC@PAGEOFF
.text:000000000000F568                 ADD             X2, X2, #aInternalkeyblo@PAGEOFF ; "internalKeyBlobsLen is over the buffer "...
.text:000000000000F56C                 MOV             W0, #6
.text:000000000000F570                 BL              .__android_log_print
.text:000000000000F574                 MOV             W8, #0xFFFFFFE7
.text:000000000000F578                 STR             W8, [SP,#0x2D260+var_2D174]
.text:000000000000F57C loc_F57C                                ; CODE XREF: startRequestCredentials+304↑j
.text:000000000000F57C                 ADRP            X27, #__stack_chk_guard_ptr@PAGE
.text:000000000000F580                 LDR             X27, [X27,#__stack_chk_guard_ptr@PAGEOFF]
.text:000000000000F584                 LDR             X27, [X27]
.text:000000000000F588 loc_F588                                ; CODE XREF: startRequestCredentials+38C↓j
.text:000000000000F588                                         ; startRequestCredentials+3D0↓j
.text:000000000000F588                 BL              .closeSecureSpi
.text:000000000000F58C                 LDR             W0, [SP,#0x2D260+var_2D174]
.text:000000000000F590                 B               loc_F454
.text:000000000000F594 ; ---------------------------------------------------------------------------
.text:000000000000F594 loc_F594                                ; CODE XREF: startRequestCredentials+318↑j
.text:000000000000F594                 ADRP            X27, #__stack_chk_guard_ptr@PAGE
.text:000000000000F598                 LDR             W8, [X19]
.text:000000000000F59C                 LDR             X27, [X27,#__stack_chk_guard_ptr@PAGEOFF]
.text:000000000000F5A0                 CMP             W2, W8
.text:000000000000F5A4                 LDR             X27, [X27]
.text:000000000000F5A8                 B.LS            loc_F5D0
.text:000000000000F5AC                 ADRP            X1, #unk_10DEC@PAGE
.text:000000000000F5B0                 ADRP            X2, #aKeyblobsIsOver@PAGE ; "keyBlobs is over the buffer size"
.text:000000000000F5B4                 ADD             X1, X1, #unk_10DEC@PAGEOFF
.text:000000000000F5B8                 ADD             X2, X2, #aKeyblobsIsOver@PAGEOFF ; "keyBlobs is over the buffer size"
.text:000000000000F5BC                 MOV             W0, #6
.text:000000000000F5C0                 BL              .__android_log_print
.text:000000000000F5C4                 MOV             W8, #0xFFFFFFE7
.text:000000000000F5C8                 STR             W8, [SP,#0x2D260+var_2D174]
.text:000000000000F5CC                 B               loc_F588
.text:000000000000F5D0 ; ---------------------------------------------------------------------------
.text:000000000000F5D0 loc_F5D0                                ; CODE XREF: startRequestCredentials+368↑j
.text:000000000000F5D0                 CBZ             W2, loc_F5F0
.text:000000000000F5D4                 ADD             X8, SP, #0x2D260+s
.text:000000000000F5D8                 ADD             X1, X8, #8 ; src
.text:000000000000F5DC                 MOV             X0, X20 ; dest
.text:000000000000F5E0                 STR             W2, [X19]
.text:000000000000F5E4                 BL              .memcpy
.text:000000000000F5E8                 MOV             W0, WZR
.text:000000000000F5EC                 B               loc_F454
.text:000000000000F5F0 ; ---------------------------------------------------------------------------
.text:000000000000F5F0 loc_F5F0                                ; CODE XREF: startRequestCredentials:loc_F5D0↑j
.text:000000000000F5F0                 ADRP            X1, #unk_10DEC@PAGE
.text:000000000000F5F4                 ADRP            X2, #aKeyblobsSizeIs@PAGE ; "keyBlobs size is 0"
.text:000000000000F5F8                 ADD             X1, X1, #unk_10DEC@PAGEOFF
.text:000000000000F5FC                 ADD             X2, X2, #aKeyblobsSizeIs@PAGEOFF ; "keyBlobs size is 0"
.text:000000000000F600                 MOV             W0, #6
.text:000000000000F604                 BL              .__android_log_print
.text:000000000000F608                 MOV             W8, #0xFFFFFF72
.text:000000000000F60C                 STR             W8, [SP,#0x2D260+var_2D174]
.text:000000000000F610                 B               loc_F588
.text:000000000000F614 ; ---------------------------------------------------------------------------
.text:000000000000F614 loc_F614                                ; CODE XREF: startRequestCredentials+21C↑j
.text:000000000000F614                 BL              .__stack_chk_fail
.text:000000000000F614 ; } // starts at F240
.text:000000000000F614 ; End of function startRequestCredentials
.text:000000000000F618 ; =============== S U B R O U T I N E =======================================
.text:000000000000F618 ; Attributes: bp-based frame
.text:000000000000F618                 EXPORT endRequestCredentials
.text:000000000000F618 endRequestCredentials                   ; CODE XREF: .endRequestCredentials+C↑j
.text:000000000000F618                                         ; DATA XREF: LOAD:00000000000016C0↑o ...
.text:000000000000F618 var_s0          =  0
.text:000000000000F618 ; __unwind {
.text:000000000000F618                 STP             X29, X30, [SP,#-0x10+var_s0]!
.text:000000000000F61C                 MOV             X29, SP
.text:000000000000F620                 BL              .isSupportScpKm
.text:000000000000F624                 CBZ             W0, loc_F630
.text:000000000000F628                 LDP             X29, X30, [SP+var_s0],#0x10
.text:000000000000F62C                 B               .closeSecureSpi
.text:000000000000F630 ; ---------------------------------------------------------------------------
.text:000000000000F630 loc_F630                                ; CODE XREF: endRequestCredentials+C↑j
.text:000000000000F630                 ADRP            X1, #unk_10DEC@PAGE
.text:000000000000F634                 ADRP            X2, #aEndrequestcred_0@PAGE ; "endRequestCredentials is not supported"
.text:000000000000F638                 ADD             X1, X1, #unk_10DEC@PAGEOFF
.text:000000000000F63C                 ADD             X2, X2, #aEndrequestcred_0@PAGEOFF ; "endRequestCredentials is not supported"
.text:000000000000F640                 MOV             W0, #6
.text:000000000000F644                 LDP             X29, X30, [SP+var_s0],#0x10
.text:000000000000F648                 B               .__android_log_print
.text:000000000000F648 ; } // starts at F618
.text:000000000000F648 ; End of function endRequestCredentials
.text:000000000000F64C ; =============== S U B R O U T I N E =======================================
.text:000000000000F64C ; Attributes: bp-based frame
.text:000000000000F64C                 EXPORT startAttestation
.text:000000000000F64C startAttestation                        ; CODE XREF: .startAttestation+C↑j
.text:000000000000F64C                                         ; DATA XREF: LOAD:0000000000000F28↑o ...
.text:000000000000F64C var_17BFF       = -0x17BFF
.text:000000000000F64C var_17BF4       = -0x17BF4
.text:000000000000F64C var_17BF0       = -0x17BF0
.text:000000000000F64C var_16864       = -0x16864
.text:000000000000F64C var_50          = -0x50
.text:000000000000F64C var_40          = -0x40
.text:000000000000F64C var_30          = -0x30
.text:000000000000F64C var_20          = -0x20
.text:000000000000F64C var_10          = -0x10
.text:000000000000F64C var_s0          =  0
.text:000000000000F64C ; __unwind {
.text:000000000000F64C                 STP             X28, X27, [SP,#-0x10+var_50]!
.text:000000000000F650                 STP             X26, X25, [SP,#0x50+var_40]
.text:000000000000F654                 STP             X24, X23, [SP,#0x50+var_30]
.text:000000000000F658                 STP             X22, X21, [SP,#0x50+var_20]
.text:000000000000F65C                 STP             X20, X19, [SP,#0x50+var_10]
.text:000000000000F660                 STP             X29, X30, [SP,#0x50+var_s0]
.text:000000000000F664                 ADD             X29, SP, #0x50
.text:000000000000F668                 SUB             SP, SP, #0x17,LSL#12
.text:000000000000F66C                 SUB             SP, SP, #0xBB0
.text:000000000000F670                 ADRP            X25, #__stack_chk_guard_ptr@PAGE
.text:000000000000F674                 LDR             X25, [X25,#__stack_chk_guard_ptr@PAGEOFF]
.text:000000000000F678                 MOV             X20, X2
.text:000000000000F67C                 MOV             X22, X0
.text:000000000000F680                 ADD             X0, SP, #0x17C00+var_17BFF,LSL#12
.text:000000000000F684                 LDR             X25, [X25]
.text:000000000000F688                 MOV             W2, #0x10000
.text:000000000000F68C                 MOV             X21, X1
.text:000000000000F690                 MOV             X26, SP
.text:000000000000F694                 ADD             X0, X0, #0x398 ; s
.text:000000000000F698                 MOVK            W2, #0x680C ; n
.text:000000000000F69C                 MOV             W1, WZR ; c
.text:000000000000F6A0                 MOV             X19, X3
.text:000000000000F6A4                 STR             X25, [X26]
.text:000000000000F6A8                 BL              .memset
.text:000000000000F6AC                 MOV             W8, #0xFFFFFFFF
.text:000000000000F6B0                 STR             W8, [SP,#0x17C00+var_16864]
.text:000000000000F6B4                 STR             WZR, [SP,#0x17C00+var_17BF4]
.text:000000000000F6B8                 BL              .checkAndCreateSKMSServiceKey
.text:000000000000F6BC                 CBZ             W0, loc_F6EC
.text:000000000000F6C0                 ADRP            X1, #unk_10DEC@PAGE
.text:000000000000F6C4                 ADD             X1, X1, #unk_10DEC@PAGEOFF
.text:000000000000F6C8                 CMN             W0, #4
.text:000000000000F6CC                 B.NE            loc_F740
.text:000000000000F6D0                 ADRP            X2, #aStartattestati_0@PAGE ; "startAttestation : checkAndCreateSKMSSe"...
.text:000000000000F6D4                 ADD             X2, X2, #aStartattestati_0@PAGEOFF ; "startAttestation : checkAndCreateSKMSSe"...
.text:000000000000F6D8                 MOV             W0, #6
.text:000000000000F6DC                 BL              .__android_log_print
.text:000000000000F6E0                 MOV             W0, #0xFFFFFFF2
.text:000000000000F6E4                 STR             W0, [SP,#0x17C00+var_16864]
.text:000000000000F6E8                 B               loc_F7E4
.text:000000000000F6EC ; ---------------------------------------------------------------------------
.text:000000000000F6EC loc_F6EC                                ; CODE XREF: startAttestation+70↑j
.text:000000000000F6EC                 ADD             X0, SP, #0x17C00+var_17BF0
.text:000000000000F6F0                 ADD             X1, SP, #0x17C00+var_17BF4
.text:000000000000F6F4                 BL              .readSKMSServiceKeyObject
.text:000000000000F6F8                 TBNZ            W0, #0x1F, loc_F75C
.text:000000000000F6FC                 LDR             W2, [SP,#0x17C00+var_17BF4]
.text:000000000000F700                 MOV             W8, #0x1389
.text:000000000000F704                 CMP             W2, W8
.text:000000000000F708                 B.CS            loc_F7B8
.text:000000000000F70C                 ADD             X3, SP, #0x17C00+var_17BFF,LSL#12
.text:000000000000F710                 MOV             W0, #0x98
.text:000000000000F714                 ADD             X1, SP, #0x17C00+var_17BF0
.text:000000000000F718                 ADD             X3, X3, #0x398
.text:000000000000F71C                 ADD             X23, SP, #0x17C00+var_17BFF,LSL#12
.text:000000000000F720                 ADD             X23, X23, #0x398
.text:000000000000F724                 BL              .invokeCommand
.text:000000000000F728                 CBZ             W0, loc_F780
.text:000000000000F72C                 ADRP            X1, #unk_10DEC@PAGE
.text:000000000000F730                 ADRP            X2, #aInvokecommandC@PAGE ; "invokeCommand(CMD_SKMS_REWRAPPED_SERVIC"...
.text:000000000000F734                 ADD             X1, X1, #unk_10DEC@PAGEOFF
.text:000000000000F738                 ADD             X2, X2, #aInvokecommandC@PAGEOFF ; "invokeCommand(CMD_SKMS_REWRAPPED_SERVIC"...
.text:000000000000F73C                 B               loc_F7D4
.text:000000000000F740 ; ---------------------------------------------------------------------------
.text:000000000000F740 loc_F740                                ; CODE XREF: startAttestation+80↑j
.text:000000000000F740                 ADRP            X2, #aStartattestati_1@PAGE ; "startAttestation : checkAndCreateSKMSSe"...
.text:000000000000F744                 ADD             X2, X2, #aStartattestati_1@PAGEOFF ; "startAttestation : checkAndCreateSKMSSe"...
.text:000000000000F748                 MOV             W0, #6
.text:000000000000F74C                 BL              .__android_log_print
.text:000000000000F750                 MOV             W0, #0xFFFFFF1F
.text:000000000000F754                 STR             W0, [SP,#0x17C00+var_16864]
.text:000000000000F758                 B               loc_F7E4
.text:000000000000F75C ; ---------------------------------------------------------------------------
.text:000000000000F75C loc_F75C                                ; CODE XREF: startAttestation+AC↑j
.text:000000000000F75C                 ADRP            X1, #unk_10DEC@PAGE
.text:000000000000F760                 ADRP            X2, #aStartattestati_2@PAGE ; "startAttestation : readSKMSServiceKeyOb"...
.text:000000000000F764                 ADD             X1, X1, #unk_10DEC@PAGEOFF
.text:000000000000F768                 ADD             X2, X2, #aStartattestati_2@PAGEOFF ; "startAttestation : readSKMSServiceKeyOb"...
.text:000000000000F76C                 MOV             W0, #6
.text:000000000000F770                 BL              .__android_log_print
.text:000000000000F774                 MOV             W0, #0xFFFFFF24
.text:000000000000F778                 STR             W0, [SP,#0x17C00+var_16864]
.text:000000000000F77C                 B               loc_F7E4
.text:000000000000F780 ; ---------------------------------------------------------------------------
.text:000000000000F780 loc_F780                                ; CODE XREF: startAttestation+DC↑j
.text:000000000000F780                 MOV             W8, #0x16808
.text:000000000000F788                 ADD             X27, X23, X8
.text:000000000000F78C                 LDR             W24, [X27]
.text:000000000000F790                 CBZ             W24, loc_F7C4
.text:000000000000F794                 LDR             W8, [X21]
.text:000000000000F798                 CMP             W24, W8
.text:000000000000F79C                 B.LS            loc_F810
.text:000000000000F7A0                 ADRP            X1, #unk_10DEC@PAGE
.text:000000000000F7A4                 ADRP            X2, #aBufdrkBufferIs@PAGE ; "bufDRK buffer is not enough"
.text:000000000000F7A8                 ADD             X1, X1, #unk_10DEC@PAGEOFF
.text:000000000000F7AC                 ADD             X2, X2, #aBufdrkBufferIs@PAGEOFF ; "bufDRK buffer is not enough"
.text:000000000000F7B0 loc_F7B0                                ; CODE XREF: startAttestation+238↓j
.text:000000000000F7B0                 MOV             W0, #6
.text:000000000000F7B4                 BL              .__android_log_print
.text:000000000000F7B8 loc_F7B8                                ; CODE XREF: startAttestation+BC↑j
.text:000000000000F7B8                 MOV             W0, #0xFFFFFF38
.text:000000000000F7BC                 STR             W0, [SP,#0x17C00+var_16864]
.text:000000000000F7C0                 B               loc_F7E4
.text:000000000000F7C4 ; ---------------------------------------------------------------------------
.text:000000000000F7C4 loc_F7C4                                ; CODE XREF: startAttestation+144↑j
.text:000000000000F7C4                 ADRP            X1, #unk_10DEC@PAGE
.text:000000000000F7C8                 ADRP            X2, #aInvalidCmdSkms@PAGE ; "Invalid CMD_SKMS_REWRAPPED_SERVICEKEY_U"...
.text:000000000000F7CC                 ADD             X1, X1, #unk_10DEC@PAGEOFF
.text:000000000000F7D0                 ADD             X2, X2, #aInvalidCmdSkms@PAGEOFF ; "Invalid CMD_SKMS_REWRAPPED_SERVICEKEY_U"...
.text:000000000000F7D4 loc_F7D4                                ; CODE XREF: startAttestation+F0↑j
.text:000000000000F7D4                 MOV             W0, #6
.text:000000000000F7D8                 BL              .__android_log_print
.text:000000000000F7DC                 MOV             W0, #0xFFFFFF20
.text:000000000000F7E0                 STR             W0, [SP,#0x17C00+var_16864]
.text:000000000000F7E4 loc_F7E4                                ; CODE XREF: startAttestation+9C↑j
.text:000000000000F7E4                                         ; startAttestation+10C↑j ...
.text:000000000000F7E4                 LDR             X8, [X26]
.text:000000000000F7E8                 SUB             X8, X25, X8
.text:000000000000F7EC                 CBNZ            X8, loc_F918
.text:000000000000F7F0                 SUB             SP, X29, #0x50 ; 'P'
.text:000000000000F7F4                 LDP             X29, X30, [SP,#0x50+var_s0]
.text:000000000000F7F8                 LDP             X20, X19, [SP,#0x50+var_10]
.text:000000000000F7FC                 LDP             X22, X21, [SP,#0x50+var_20]
.text:000000000000F800                 LDP             X24, X23, [SP,#0x50+var_30]
.text:000000000000F804                 LDP             X26, X25, [SP,#0x50+var_40]
.text:000000000000F808                 LDP             X28, X27, [SP+0x50+var_50],#0x60
.text:000000000000F80C                 RET
.text:000000000000F810 ; ---------------------------------------------------------------------------
.text:000000000000F810 loc_F810                                ; CODE XREF: startAttestation+150↑j
.text:000000000000F810                 ADD             X8, SP, #0x17C00+var_17BFF,LSL#12
.text:000000000000F814                 ADD             X8, X8, #0x398
.text:000000000000F818                 ADD             X23, X8, #8
.text:000000000000F81C                 MOV             X0, X22 ; dest
.text:000000000000F820                 MOV             X1, X23 ; src
.text:000000000000F824                 MOV             X2, X24 ; n
.text:000000000000F828                 BL              .memcpy
.text:000000000000F82C                 STR             W24, [X21]
.text:000000000000F830                 LDR             W2, [SP,#0x17C00+var_17BF4]
.text:000000000000F834                 ADD             X3, SP, #0x17C00+var_17BFF,LSL#12
.text:000000000000F838                 MOV             W0, #0x99
.text:000000000000F83C                 ADD             X1, SP, #0x17C00+var_17BF0
.text:000000000000F840                 ADD             X3, X3, #0x398
.text:000000000000F844                 BL              .invokeCommand
.text:000000000000F848                 CBZ             W0, loc_F860
.text:000000000000F84C                 ADRP            X1, #unk_10DEC@PAGE
.text:000000000000F850                 ADRP            X2, #aInvokecommandC_0@PAGE ; "invokeCommand(CMD_SKMS_REWRAPPED_SERVIC"...
.text:000000000000F854                 ADD             X1, X1, #unk_10DEC@PAGEOFF
.text:000000000000F858                 ADD             X2, X2, #aInvokecommandC_0@PAGEOFF ; "invokeCommand(CMD_SKMS_REWRAPPED_SERVIC"...
.text:000000000000F85C                 B               loc_F898
.text:000000000000F860 ; ---------------------------------------------------------------------------
.text:000000000000F860 loc_F860                                ; CODE XREF: startAttestation+1FC↑j
.text:000000000000F860                 LDR             W21, [X27]
.text:000000000000F864                 CBZ             W21, loc_F888
.text:000000000000F868                 LDR             W8, [X19]
.text:000000000000F86C                 CMP             W21, W8
.text:000000000000F870                 B.LS            loc_F8AC
.text:000000000000F874                 ADRP            X1, #unk_10DEC@PAGE
.text:000000000000F878                 ADRP            X2, #aBufsvcBufferIs@PAGE ; "bufSVC buffer is not enough"
.text:000000000000F87C                 ADD             X1, X1, #unk_10DEC@PAGEOFF
.text:000000000000F880                 ADD             X2, X2, #aBufsvcBufferIs@PAGEOFF ; "bufSVC buffer is not enough"
.text:000000000000F884                 B               loc_F7B0
.text:000000000000F888 ; ---------------------------------------------------------------------------
.text:000000000000F888 loc_F888                                ; CODE XREF: startAttestation+218↑j
.text:000000000000F888                 ADRP            X1, #unk_10DEC@PAGE
.text:000000000000F88C                 ADRP            X2, #aInvalidCmdSkms_0@PAGE ; "Invalid CMD_SKMS_REWRAPPED_SERVICEKEY_U"...
.text:000000000000F890                 ADD             X1, X1, #unk_10DEC@PAGEOFF
.text:000000000000F894                 ADD             X2, X2, #aInvalidCmdSkms_0@PAGEOFF ; "Invalid CMD_SKMS_REWRAPPED_SERVICEKEY_U"...
.text:000000000000F898 loc_F898                                ; CODE XREF: startAttestation+210↑j
.text:000000000000F898                 MOV             W0, #6
.text:000000000000F89C                 BL              .__android_log_print
.text:000000000000F8A0                 MOV             W0, #0xFFFFFF21
.text:000000000000F8A4                 STR             W0, [SP,#0x17C00+var_16864]
.text:000000000000F8A8                 B               loc_F7E4
.text:000000000000F8AC ; ---------------------------------------------------------------------------
.text:000000000000F8AC loc_F8AC                                ; CODE XREF: startAttestation+224↑j
.text:000000000000F8AC                 MOV             X0, X20 ; dest
.text:000000000000F8B0                 MOV             X1, X23 ; src
.text:000000000000F8B4                 MOV             X2, X21 ; n
.text:000000000000F8B8                 BL              .memcpy
.text:000000000000F8BC                 STR             W21, [X19]
.text:000000000000F8C0                 LDR             W3, [SP,#0x17C00+var_16864]
.text:000000000000F8C4                 CBZ             W3, loc_F8E4
.text:000000000000F8C8                 ADRP            X1, #unk_10DEC@PAGE
.text:000000000000F8CC                 ADRP            X2, #aStartattestati_3@PAGE ; "startAttestation() failed to invoke cmd"...
.text:000000000000F8D0                 ADD             X1, X1, #unk_10DEC@PAGEOFF
.text:000000000000F8D4                 ADD             X2, X2, #aStartattestati_3@PAGEOFF ; "startAttestation() failed to invoke cmd"...
.text:000000000000F8D8                 MOV             W0, #6
.text:000000000000F8DC                 BL              .__android_log_print
.text:000000000000F8E0                 B               loc_F8EC
.text:000000000000F8E4 ; ---------------------------------------------------------------------------
.text:000000000000F8E4 loc_F8E4                                ; CODE XREF: startAttestation+278↑j
.text:000000000000F8E4                 BL              .verifySKMSServiceKeyCertChain
.text:000000000000F8E8                 CBZ             W0, loc_F8F4
.text:000000000000F8EC loc_F8EC                                ; CODE XREF: startAttestation+294↑j
.text:000000000000F8EC                 LDR             W0, [SP,#0x17C00+var_16864]
.text:000000000000F8F0                 B               loc_F7E4
.text:000000000000F8F4 ; ---------------------------------------------------------------------------
.text:000000000000F8F4 loc_F8F4                                ; CODE XREF: startAttestation+29C↑j
.text:000000000000F8F4                 ADRP            X1, #unk_10DEC@PAGE
.text:000000000000F8F8                 ADRP            X2, #aVerifyCertChai@PAGE ; "Verify Cert Chain is failed"
.text:000000000000F8FC                 ADD             X1, X1, #unk_10DEC@PAGEOFF
.text:000000000000F900                 ADD             X2, X2, #aVerifyCertChai@PAGEOFF ; "Verify Cert Chain is failed"
.text:000000000000F904                 MOV             W0, #6
.text:000000000000F908                 BL              .__android_log_print
.text:000000000000F90C                 MOV             W0, #0xFFFFFFF8
.text:000000000000F910                 STR             W0, [SP,#0x17C00+var_16864]
.text:000000000000F914                 B               loc_F7E4
.text:000000000000F918 ; ---------------------------------------------------------------------------
.text:000000000000F918 loc_F918                                ; CODE XREF: startAttestation+1A0↑j
.text:000000000000F918                 BL              .__stack_chk_fail
.text:000000000000F918 ; } // starts at F64C
.text:000000000000F918 ; End of function startAttestation
.text:000000000000F91C ; =============== S U B R O U T I N E =======================================
.text:000000000000F91C ; Attributes: bp-based frame
.text:000000000000F91C                 EXPORT contAttestation
.text:000000000000F91C contAttestation                         ; CODE XREF: .contAttestation+C↑j
.text:000000000000F91C                                         ; DATA XREF: LOAD:0000000000000E80↑o ...
.text:000000000000F91C var_17C5F       = -0x17C5F
.text:000000000000F91C s2              = -0x17C54
.text:000000000000F91C var_17C50       = -0x17C50
.text:000000000000F91C var_17C4E       = -0x17C4E
.text:000000000000F91C var_17BF9       = -0x17BF9
.text:000000000000F91C s               = -0x17BF0
.text:000000000000F91C var_16864       = -0x16864
.text:000000000000F91C var_50          = -0x50
.text:000000000000F91C var_40          = -0x40
.text:000000000000F91C var_30          = -0x30
.text:000000000000F91C var_20          = -0x20
.text:000000000000F91C var_10          = -0x10
.text:000000000000F91C var_s0          =  0
.text:000000000000F91C ; __unwind {
.text:000000000000F91C                 STP             X28, X27, [SP,#-0x10+var_50]!
.text:000000000000F920                 STP             X26, X25, [SP,#0x50+var_40]
.text:000000000000F924                 STP             X24, X23, [SP,#0x50+var_30]
.text:000000000000F928                 STP             X22, X21, [SP,#0x50+var_20]
.text:000000000000F92C                 STP             X20, X19, [SP,#0x50+var_10]
.text:000000000000F930                 STP             X29, X30, [SP,#0x50+var_s0]
.text:000000000000F934                 ADD             X29, SP, #0x50
.text:000000000000F938                 SUB             SP, SP, #0x17,LSL#12
.text:000000000000F93C                 SUB             SP, SP, #0xC10
.text:000000000000F940                 ADRP            X23, #__stack_chk_guard_ptr@PAGE
.text:000000000000F944                 LDR             X23, [X23,#__stack_chk_guard_ptr@PAGEOFF]
.text:000000000000F948                 MOV             X19, X0
.text:000000000000F94C                 ADD             X0, SP, #0x17C60+var_17C5F,LSL#12
.text:000000000000F950                 MOV             W2, #0x10000
.text:000000000000F954                 LDR             X23, [X23]
.text:000000000000F958                 MOV             X20, X1
.text:000000000000F95C                 MOV             X24, SP
.text:000000000000F960                 ADD             X0, X0, #0x3F8 ; s
.text:000000000000F964                 MOVK            W2, #0x680C ; n
.text:000000000000F968                 MOV             W1, WZR ; c
.text:000000000000F96C                 STR             X23, [X24]
.text:000000000000F970                 BL              .memset
.text:000000000000F974                 MOV             W8, #0xFFFFFFFF
.text:000000000000F978                 ADD             X0, SP, #0x17C60+s ; s
.text:000000000000F97C                 MOV             W2, #0x1388 ; n
.text:000000000000F980                 MOV             W1, WZR ; c
.text:000000000000F984                 STR             W8, [SP,#0x17C60+var_16864]
.text:000000000000F988                 BL              .memset
.text:000000000000F98C                 ADD             X0, SP, #0x17C60+s2 ; s
.text:000000000000F990                 MOV             W2, #0x64 ; 'd' ; n
.text:000000000000F994                 MOV             W1, WZR ; c
.text:000000000000F998                 BL              .memset
.text:000000000000F99C                 BL              .checkAndCreateSKMSServiceKey
.text:000000000000F9A0                 CBZ             W0, loc_F9D0
.text:000000000000F9A4                 ADRP            X1, #unk_10DEC@PAGE
.text:000000000000F9A8                 ADD             X1, X1, #unk_10DEC@PAGEOFF
.text:000000000000F9AC                 CMN             W0, #4
.text:000000000000F9B0                 B.NE            loc_FA14
.text:000000000000F9B4                 ADRP            X2, #aStartattestati_0@PAGE ; "startAttestation : checkAndCreateSKMSSe"...
.text:000000000000F9B8                 ADD             X2, X2, #aStartattestati_0@PAGEOFF ; "startAttestation : checkAndCreateSKMSSe"...
.text:000000000000F9BC                 MOV             W0, #6
.text:000000000000F9C0                 BL              .__android_log_print
.text:000000000000F9C4                 MOV             W0, #0xFFFFFFF2
.text:000000000000F9C8                 STR             W0, [SP,#0x17C60+var_16864]
.text:000000000000F9CC                 B               loc_FA2C
.text:000000000000F9D0 ; ---------------------------------------------------------------------------
.text:000000000000F9D0 loc_F9D0                                ; CODE XREF: contAttestation+84↑j
.text:000000000000F9D0                 ADD             X3, SP, #0x17C60+var_17C5F,LSL#12
.text:000000000000F9D4                 MOV             X1, XZR
.text:000000000000F9D8                 MOV             W0, #0x18
.text:000000000000F9DC                 ADD             X3, X3, #0x3F8
.text:000000000000F9E0                 MOV             W2, WZR
.text:000000000000F9E4                 BL              .invokeCommand
.text:000000000000F9E8                 LDR             W3, [SP,#0x17C60+var_16864]
.text:000000000000F9EC                 CBZ             W0, loc_FA58
.text:000000000000F9F0                 ADRP            X1, #unk_10DEC@PAGE
.text:000000000000F9F4                 ADRP            X2, #aInvokecommandC_1@PAGE ; "invokeCommand(CMD_GET_CPLC) failed! [%d"...
.text:000000000000F9F8                 ADD             X1, X1, #unk_10DEC@PAGEOFF
.text:000000000000F9FC                 ADD             X2, X2, #aInvokecommandC_1@PAGEOFF ; "invokeCommand(CMD_GET_CPLC) failed! [%d"...
.text:000000000000FA00                 MOV             W0, #6
.text:000000000000FA04                 BL              .__android_log_print
.text:000000000000FA08                 MOV             W0, #0xFFFFFF27
.text:000000000000FA0C                 STR             W0, [SP,#0x17C60+var_16864]
.text:000000000000FA10                 B               loc_FA2C
.text:000000000000FA14 ; ---------------------------------------------------------------------------
.text:000000000000FA14 loc_FA14                                ; CODE XREF: contAttestation+94↑j
.text:000000000000FA14                 ADRP            X2, #aStartattestati_1@PAGE ; "startAttestation : checkAndCreateSKMSSe"...
.text:000000000000FA18                 ADD             X2, X2, #aStartattestati_1@PAGEOFF ; "startAttestation : checkAndCreateSKMSSe"...
.text:000000000000FA1C                 MOV             W0, #6
.text:000000000000FA20                 BL              .__android_log_print
.text:000000000000FA24                 MOV             W0, #0xFFFFFF1F
.text:000000000000FA28                 STR             W0, [SP,#0x17C60+var_16864]
.text:000000000000FA2C loc_FA2C                                ; CODE XREF: contAttestation+B0↑j
.text:000000000000FA2C                                         ; contAttestation+F4↑j ...
.text:000000000000FA2C                 LDR             X8, [X24]
.text:000000000000FA30                 SUB             X8, X23, X8
.text:000000000000FA34                 CBNZ            X8, loc_FC5C
.text:000000000000FA38                 SUB             SP, X29, #0x50 ; 'P'
.text:000000000000FA3C                 LDP             X29, X30, [SP,#0x50+var_s0]
.text:000000000000FA40                 LDP             X20, X19, [SP,#0x50+var_10]
.text:000000000000FA44                 LDP             X22, X21, [SP,#0x50+var_20]
.text:000000000000FA48                 LDP             X24, X23, [SP,#0x50+var_30]
.text:000000000000FA4C                 LDP             X26, X25, [SP,#0x50+var_40]
.text:000000000000FA50                 LDP             X28, X27, [SP+0x50+var_50],#0x60
.text:000000000000FA54                 RET
.text:000000000000FA58 ; ---------------------------------------------------------------------------
.text:000000000000FA58 loc_FA58                                ; CODE XREF: contAttestation+D0↑j
.text:000000000000FA58                 MOV             W22, #0x54 ; 'T'
.text:000000000000FA5C                 CBNZ            W3, loc_FADC
.text:000000000000FA60                 MOV             W8, #0x10000
.text:000000000000FA64                 ADD             X25, SP, #0x17C60+var_17C5F,LSL#12
.text:000000000000FA68                 MOVK            W8, #0x6808
.text:000000000000FA6C                 ADD             X25, X25, #0x3F8
.text:000000000000FA70                 LDR             W8, [X25,X8]
.text:000000000000FA74                 CMP             W8, #0x2D ; '-'
.text:000000000000FA78                 B.NE            loc_FB30
.text:000000000000FA7C                 MOV             W10, #0x636C0000
.text:000000000000FA80                 ADD             X11, SP, #0x17C60+s2
.text:000000000000FA84                 ADRP            X22, #a02x@PAGE ; "%02X"
.text:000000000000FA88                 MOV             W8, #0x22 ; '"'
.text:000000000000FA8C                 MOV             W9, #0x3A22
.text:000000000000FA90                 MOVK            W10, #0x7063
.text:000000000000FA94                 MOV             W26, #0xB
.text:000000000000FA98                 ADD             X21, X11, #7
.text:000000000000FA9C                 ADD             X22, X22, #a02x@PAGEOFF ; "%02X"
.text:000000000000FAA0                 STRB            W8, [SP,#0x17C60+var_17C4E]
.text:000000000000FAA4                 STRH            W9, [SP,#0x17C60+var_17C50]
.text:000000000000FAA8                 STR             W10, [SP,#0x17C60+s2]
.text:000000000000FAAC loc_FAAC                                ; CODE XREF: contAttestation+1B0↓j
.text:000000000000FAAC                 LDRB            W3, [X25,X26]
.text:000000000000FAB0                 MOV             W1, #3  ; maxlen
.text:000000000000FAB4                 MOV             X0, X21 ; s
.text:000000000000FAB8                 MOV             X2, X22 ; format
.text:000000000000FABC                 BL              .snprintf
.text:000000000000FAC0                 ADD             X21, X21, #2
.text:000000000000FAC4                 ADD             X26, X26, #1
.text:000000000000FAC8                 CMP             X26, #0x35 ; '5'
.text:000000000000FACC                 B.NE            loc_FAAC
.text:000000000000FAD0                 MOV             W8, #0x22 ; '"'
.text:000000000000FAD4                 MOV             W22, #0x5B ; '['
.text:000000000000FAD8                 STRB            W8, [SP,#0x17C60+var_17BF9]
.text:000000000000FADC loc_FADC                                ; CODE XREF: contAttestation+140↑j
.text:000000000000FADC                 LDRSW           X21, [X20]
.text:000000000000FAE0                 CMP             W21, #0x55 ; 'U'
.text:000000000000FAE4                 B.CC            loc_FBE4
.text:000000000000FAE8                 ADRP            X1, #(aDataSemHwparam+0x12)@PAGE ; "cplc"
.text:000000000000FAEC                 ADD             X1, X1, #(aDataSemHwparam+0x12)@PAGEOFF ; needle
.text:000000000000FAF0                 MOV             X0, X19 ; haystack
.text:000000000000FAF4                 BL              .strstr
.text:000000000000FAF8                 CBZ             X0, loc_FB54
.text:000000000000FAFC                 ADD             X1, SP, #0x17C60+s2 ; s2
.text:000000000000FB00                 MOV             X2, X22 ; n
.text:000000000000FB04                 BL              .strncmp
.text:000000000000FB08                 CBZ             W0, loc_FB78
.text:000000000000FB0C                 ADRP            X1, #unk_10DEC@PAGE
.text:000000000000FB10                 ADRP            X2, #aNotMatchedCplc@PAGE ; "not matched cplc nwd vs. swd !"
.text:000000000000FB14                 ADD             X1, X1, #unk_10DEC@PAGEOFF
.text:000000000000FB18                 ADD             X2, X2, #aNotMatchedCplc@PAGEOFF ; "not matched cplc nwd vs. swd !"
.text:000000000000FB1C                 MOV             W0, #6
.text:000000000000FB20                 BL              .__android_log_print
.text:000000000000FB24                 MOV             W0, #0xFFFFFF25
.text:000000000000FB28                 STR             W0, [SP,#0x17C60+var_16864]
.text:000000000000FB2C                 B               loc_FA2C
.text:000000000000FB30 ; ---------------------------------------------------------------------------
.text:000000000000FB30 loc_FB30                                ; CODE XREF: contAttestation+15C↑j
.text:000000000000FB30                 ADRP            X1, #unk_10DEC@PAGE
.text:000000000000FB34                 ADRP            X2, #aGetWrongTzCplc@PAGE ; "get wrong tz cplc response!"
.text:000000000000FB38                 ADD             X1, X1, #unk_10DEC@PAGEOFF
.text:000000000000FB3C                 ADD             X2, X2, #aGetWrongTzCplc@PAGEOFF ; "get wrong tz cplc response!"
.text:000000000000FB40                 MOV             W0, #6
.text:000000000000FB44                 BL              .__android_log_print
.text:000000000000FB48                 MOV             W0, #0xFFFFFF26
.text:000000000000FB4C                 STR             W0, [SP,#0x17C60+var_16864]
.text:000000000000FB50                 B               loc_FA2C
.text:000000000000FB54 ; ---------------------------------------------------------------------------
.text:000000000000FB54 loc_FB54                                ; CODE XREF: contAttestation+1DC↑j
.text:000000000000FB54                 ADRP            X1, #unk_10DEC@PAGE
.text:000000000000FB58                 ADRP            X2, #aCanTFindNwdCpl@PAGE ; "can't find nwd cplc!"
.text:000000000000FB5C                 ADD             X1, X1, #unk_10DEC@PAGEOFF
.text:000000000000FB60                 ADD             X2, X2, #aCanTFindNwdCpl@PAGEOFF ; "can't find nwd cplc!"
.text:000000000000FB64                 MOV             W0, #6
.text:000000000000FB68                 BL              .__android_log_print
.text:000000000000FB6C                 MOV             W0, #0xFFFFFF1E
.text:000000000000FB70                 STR             W0, [SP,#0x17C60+var_16864]
.text:000000000000FB74                 B               loc_FA2C
.text:000000000000FB78 ; ---------------------------------------------------------------------------
.text:000000000000FB78 loc_FB78                                ; CODE XREF: contAttestation+1EC↑j
.text:000000000000FB78                 ADD             X8, SP, #0x17C60+s
.text:000000000000FB7C                 ADD             X0, X8, #2 ; dest
.text:000000000000FB80                 MOV             X1, X19 ; src
.text:000000000000FB84                 MOV             X2, X21 ; n
.text:000000000000FB88                 STRH            W21, [SP,#0x17C60+s]
.text:000000000000FB8C                 BL              .memcpy
.text:000000000000FB90                 ADD             X3, SP, #0x17C60+var_17C5F,LSL#12
.text:000000000000FB94                 ADD             W2, W21, #2
.text:000000000000FB98                 MOV             W0, #0x9A
.text:000000000000FB9C                 ADD             X1, SP, #0x17C60+s
.text:000000000000FBA0                 ADD             X3, X3, #0x3F8
.text:000000000000FBA4                 ADD             X21, SP, #0x17C60+var_17C5F,LSL#12
.text:000000000000FBA8                 ADD             X21, X21, #0x3F8
.text:000000000000FBAC                 BL              .invokeCommand
.text:000000000000FBB0                 CBZ             W0, loc_FBC8
.text:000000000000FBB4                 ADRP            X1, #unk_10DEC@PAGE
.text:000000000000FBB8                 ADRP            X2, #aInvokecommandC_2@PAGE ; "invokeCommand(CMD_SKMS_REQ_SIGN) is fai"...
.text:000000000000FBBC                 ADD             X1, X1, #unk_10DEC@PAGEOFF
.text:000000000000FBC0                 ADD             X2, X2, #aInvokecommandC_2@PAGEOFF ; "invokeCommand(CMD_SKMS_REQ_SIGN) is fai"...
.text:000000000000FBC4                 B               loc_FC18
.text:000000000000FBC8 ; ---------------------------------------------------------------------------
.text:000000000000FBC8 loc_FBC8                                ; CODE XREF: contAttestation+294↑j
.text:000000000000FBC8                 MOV             W8, #0x16808
.text:000000000000FBD0                 LDR             W21, [X21,X8]
.text:000000000000FBD4                 CBZ             W21, loc_FC08
.text:000000000000FBD8                 LDR             W2, [X20] ; n
.text:000000000000FBDC                 CMP             W21, W2
.text:000000000000FBE0                 B.LS            loc_FC2C
.text:000000000000FBE4 loc_FBE4                                ; CODE XREF: contAttestation+1C8↑j
.text:000000000000FBE4                 ADRP            X1, #unk_10DEC@PAGE
.text:000000000000FBE8                 ADRP            X2, #aBufBufferIsNot@PAGE ; "buf buffer is not enough"
.text:000000000000FBEC                 ADD             X1, X1, #unk_10DEC@PAGEOFF
.text:000000000000FBF0                 ADD             X2, X2, #aBufBufferIsNot@PAGEOFF ; "buf buffer is not enough"
.text:000000000000FBF4                 MOV             W0, #6
.text:000000000000FBF8                 BL              .__android_log_print
.text:000000000000FBFC                 MOV             W0, #0xFFFFFF38
.text:000000000000FC00                 STR             W0, [SP,#0x17C60+var_16864]
.text:000000000000FC04                 B               loc_FA2C
.text:000000000000FC08 ; ---------------------------------------------------------------------------
.text:000000000000FC08 loc_FC08                                ; CODE XREF: contAttestation+2B8↑j
.text:000000000000FC08                 ADRP            X1, #unk_10DEC@PAGE
.text:000000000000FC0C                 ADRP            X2, #aInvalidCmdSkms_1@PAGE ; "Invalid CMD_SKMS_REQ_SIGN response"
.text:000000000000FC10                 ADD             X1, X1, #unk_10DEC@PAGEOFF
.text:000000000000FC14                 ADD             X2, X2, #aInvalidCmdSkms_1@PAGEOFF ; "Invalid CMD_SKMS_REQ_SIGN response"
.text:000000000000FC18 loc_FC18                                ; CODE XREF: contAttestation+2A8↑j
.text:000000000000FC18                 MOV             W0, #6
.text:000000000000FC1C                 BL              .__android_log_print
.text:000000000000FC20                 MOV             W0, #0xFFFFFF22
.text:000000000000FC24                 STR             W0, [SP,#0x17C60+var_16864]
.text:000000000000FC28                 B               loc_FA2C
.text:000000000000FC2C ; ---------------------------------------------------------------------------
.text:000000000000FC2C loc_FC2C                                ; CODE XREF: contAttestation+2C4↑j
.text:000000000000FC2C                 MOV             W1, WZR ; c
.text:000000000000FC30                 MOV             X0, X19 ; s
.text:000000000000FC34                 BL              .memset
.text:000000000000FC38                 ADD             X8, SP, #0x17C60+var_17C5F,LSL#12
.text:000000000000FC3C                 ADD             X8, X8, #0x3F8
.text:000000000000FC40                 ADD             X1, X8, #8 ; src
.text:000000000000FC44                 MOV             X0, X19 ; dest
.text:000000000000FC48                 MOV             X2, X21 ; n
.text:000000000000FC4C                 STR             W21, [X20]
.text:000000000000FC50                 BL              .memcpy
.text:000000000000FC54                 LDR             W0, [SP,#0x17C60+var_16864]
.text:000000000000FC58                 B               loc_FA2C
.text:000000000000FC5C ; ---------------------------------------------------------------------------
.text:000000000000FC5C loc_FC5C                                ; CODE XREF: contAttestation+118↑j
.text:000000000000FC5C                 BL              .__stack_chk_fail
.text:000000000000FC5C ; } // starts at F91C
.text:000000000000FC5C ; End of function contAttestation
.text:000000000000FC60 ; =============== S U B R O U T I N E =======================================
.text:000000000000FC60 ; Attributes: bp-based frame
.text:000000000000FC60                 EXPORT checkAndCreateSEMServiceKey
.text:000000000000FC60 checkAndCreateSEMServiceKey             ; DATA XREF: LOAD:0000000000001888↑o
.text:000000000000FC60 var_DD8         = -0xDD8
.text:000000000000FC60 s               = -0xDD4
.text:000000000000FC60 var_28          = -0x28
.text:000000000000FC60 var_20          = -0x20
.text:000000000000FC60 var_10          = -0x10
.text:000000000000FC60 var_s0          =  0
.text:000000000000FC60 ; __unwind {
.text:000000000000FC60                 STP             X28, X27, [SP,#-0x10+var_20]!
.text:000000000000FC64                 STP             X20, X19, [SP,#0x20+var_10]
.text:000000000000FC68                 STP             X29, X30, [SP,#0x20+var_s0]
.text:000000000000FC6C                 ADD             X29, SP, #0x20
.text:000000000000FC70                 SUB             SP, SP, #0xDC0
.text:000000000000FC74                 ADRP            X20, #__stack_chk_guard_ptr@PAGE
.text:000000000000FC78                 LDR             X20, [X20,#__stack_chk_guard_ptr@PAGEOFF]
.text:000000000000FC7C                 ADD             X0, SP, #0xDE0+s ; s
.text:000000000000FC80                 MOV             W2, #0xDAC ; n
.text:000000000000FC84                 MOV             W1, WZR ; c
.text:000000000000FC88                 LDR             X20, [X20]
.text:000000000000FC8C                 STUR            X20, [X29,#var_28]
.text:000000000000FC90                 BL              .memset
.text:000000000000FC94                 ADRP            X0, #aEfsSecEfsSemSk@PAGE ; "/efs/sec_efs/sem_sk.dat"
.text:000000000000FC98                 ADD             X0, X0, #aEfsSecEfsSemSk@PAGEOFF ; "/efs/sec_efs/sem_sk.dat"
.text:000000000000FC9C                 BL              .c_access
.text:000000000000FCA0                 ADRP            X1, #aSemSeviceKey@PAGE ; "SEM_SEVICE_KEY"
.text:000000000000FCA4                 ADD             X1, X1, #aSemSeviceKey@PAGEOFF ; "SEM_SEVICE_KEY"
.text:000000000000FCA8                 CBZ             W0, loc_FCDC
.text:000000000000FCAC                 ADRP            X2, #aThereIsNoSemSe@PAGE ; "There is no SEM service key. Generate i"...
.text:000000000000FCB0                 ADD             X2, X2, #aThereIsNoSemSe@PAGEOFF ; "There is no SEM service key. Generate i"...
.text:000000000000FCB4                 MOV             W0, #4
.text:000000000000FCB8                 BL              .__android_log_print
.text:000000000000FCBC                 BL              .generateSEMServiceKey
.text:000000000000FCC0                 MOV             W19, W0
.text:000000000000FCC4                 CBZ             W19, loc_FCF4
.text:000000000000FCC8                 ADRP            X1, #aSemSeviceKey@PAGE ; "SEM_SEVICE_KEY"
.text:000000000000FCCC                 ADRP            X2, #aFailedToGenera@PAGE ; "Failed to generateSEMServiceKey."
.text:000000000000FCD0                 ADD             X1, X1, #aSemSeviceKey@PAGEOFF ; "SEM_SEVICE_KEY"
.text:000000000000FCD4                 ADD             X2, X2, #aFailedToGenera@PAGEOFF ; "Failed to generateSEMServiceKey."
.text:000000000000FCD8                 B               loc_FD18
.text:000000000000FCDC ; ---------------------------------------------------------------------------
.text:000000000000FCDC loc_FCDC                                ; CODE XREF: checkAndCreateSEMServiceKey+48↑j
.text:000000000000FCDC                 ADRP            X2, #aSemServiceKeyI@PAGE ; "SEM service key is exist."
.text:000000000000FCE0                 ADD             X2, X2, #aSemServiceKeyI@PAGEOFF ; "SEM service key is exist."
.text:000000000000FCE4 loc_FCE4                                ; CODE XREF: checkAndCreateSEMServiceKey+FC↓j
.text:000000000000FCE4                 MOV             W0, #4
.text:000000000000FCE8                 BL              .__android_log_print
.text:000000000000FCEC                 MOV             W19, WZR
.text:000000000000FCF0                 B               loc_FD20
.text:000000000000FCF4 ; ---------------------------------------------------------------------------
.text:000000000000FCF4 loc_FCF4                                ; CODE XREF: checkAndCreateSEMServiceKey+64↑j
.text:000000000000FCF4                 ADD             X0, SP, #0xDE0+s
.text:000000000000FCF8                 ADD             X1, SP, #0xDE0+var_DD8
.text:000000000000FCFC                 BL              .getSEMServiceKey
.text:000000000000FD00                 MOV             W19, W0
.text:000000000000FD04                 CBZ             W19, loc_FD44
.text:000000000000FD08                 ADRP            X1, #aSemSeviceKey@PAGE ; "SEM_SEVICE_KEY"
.text:000000000000FD0C                 ADRP            X2, #aFailedToGetsem@PAGE ; "Failed to getSEMServiceKey"
.text:000000000000FD10                 ADD             X1, X1, #aSemSeviceKey@PAGEOFF ; "SEM_SEVICE_KEY"
.text:000000000000FD14                 ADD             X2, X2, #aFailedToGetsem@PAGEOFF ; "Failed to getSEMServiceKey"
.text:000000000000FD18 loc_FD18                                ; CODE XREF: checkAndCreateSEMServiceKey+78↑j
.text:000000000000FD18                 MOV             W0, #6
.text:000000000000FD1C                 BL              .__android_log_print
.text:000000000000FD20 loc_FD20                                ; CODE XREF: checkAndCreateSEMServiceKey+90↑j
.text:000000000000FD20                                         ; checkAndCreateSEMServiceKey+114↓j
.text:000000000000FD20                 LDUR            X8, [X29,#var_28]
.text:000000000000FD24                 SUB             X8, X20, X8
.text:000000000000FD28                 CBNZ            X8, loc_FD78
.text:000000000000FD2C                 MOV             W0, W19
.text:000000000000FD30                 SUB             SP, X29, #0x20 ; ' '
.text:000000000000FD34                 LDP             X29, X30, [SP,#0x20+var_s0]
.text:000000000000FD38                 LDP             X20, X19, [SP,#0x20+var_10]
.text:000000000000FD3C                 LDP             X28, X27, [SP+0x20+var_20],#0x30
.text:000000000000FD40                 RET
.text:000000000000FD44 ; ---------------------------------------------------------------------------
.text:000000000000FD44 loc_FD44                                ; CODE XREF: checkAndCreateSEMServiceKey+A4↑j
.text:000000000000FD44                 BL              .verifySEMServiceKeyCertChain
.text:000000000000FD48                 ADRP            X1, #aSemSeviceKey@PAGE ; "SEM_SEVICE_KEY"
.text:000000000000FD4C                 ADD             X1, X1, #aSemSeviceKey@PAGEOFF ; "SEM_SEVICE_KEY"
.text:000000000000FD50                 CBZ             W0, loc_FD60
.text:000000000000FD54                 ADRP            X2, #aCertChainVerif@PAGE ; "Cert chain verification is success"
.text:000000000000FD58                 ADD             X2, X2, #aCertChainVerif@PAGEOFF ; "Cert chain verification is success"
.text:000000000000FD5C                 B               loc_FCE4
.text:000000000000FD60 ; ---------------------------------------------------------------------------
.text:000000000000FD60 loc_FD60                                ; CODE XREF: checkAndCreateSEMServiceKey+F0↑j
.text:000000000000FD60                 ADRP            X2, #aVerifyCertChai@PAGE ; "Verify Cert Chain is failed"
.text:000000000000FD64                 ADD             X2, X2, #aVerifyCertChai@PAGEOFF ; "Verify Cert Chain is failed"
.text:000000000000FD68                 MOV             W0, #6
.text:000000000000FD6C                 BL              .__android_log_print
.text:000000000000FD70                 MOV             W19, #0xFFFFFF9B
.text:000000000000FD74                 B               loc_FD20
.text:000000000000FD78 ; ---------------------------------------------------------------------------
.text:000000000000FD78 loc_FD78                                ; CODE XREF: checkAndCreateSEMServiceKey+C8↑j
.text:000000000000FD78                 BL              .__stack_chk_fail
.text:000000000000FD78 ; } // starts at FC60
.text:000000000000FD78 ; End of function checkAndCreateSEMServiceKey
.text:000000000000FD7C ; =============== S U B R O U T I N E =======================================
.text:000000000000FD7C ; Attributes: bp-based frame
.text:000000000000FD7C                 EXPORT getSEMServiceKey
.text:000000000000FD7C getSEMServiceKey                        ; CODE XREF: .getSEMServiceKey+C↑j
.text:000000000000FD7C                                         ; DATA XREF: LOAD:0000000000000850↑o ...
.text:000000000000FD7C var_16850       = -0x16850
.text:000000000000FD7C var_16848       = -0x16848
.text:000000000000FD7C var_16844       = -0x16844
.text:000000000000FD7C n               = -0x16840
.text:000000000000FD7C var_30          = -0x30
.text:000000000000FD7C var_20          = -0x20
.text:000000000000FD7C var_10          = -0x10
.text:000000000000FD7C var_s0          =  0
.text:000000000000FD7C ; __unwind {
.text:000000000000FD7C                 STP             X24, X23, [SP,#-0x10+var_30]!
.text:000000000000FD80                 STP             X22, X21, [SP,#0x30+var_20]
.text:000000000000FD84                 STP             X20, X19, [SP,#0x30+var_10]
.text:000000000000FD88                 STP             X29, X30, [SP,#0x30+var_s0]
.text:000000000000FD8C                 ADD             X29, SP, #0x30
.text:000000000000FD90                 SUB             SP, SP, #0x16,LSL#12
.text:000000000000FD94                 SUB             SP, SP, #0x820
.text:000000000000FD98                 ADRP            X22, #__stack_chk_guard_ptr@PAGE
.text:000000000000FD9C                 LDR             X22, [X22,#__stack_chk_guard_ptr@PAGEOFF]
.text:000000000000FDA0                 MOV             X20, X0
.text:000000000000FDA4                 ADRP            X0, #aEfsSecEfsSemSk@PAGE ; "/efs/sec_efs/sem_sk.dat"
.text:000000000000FDA8                 MOV             X21, X1
.text:000000000000FDAC                 LDR             X22, [X22]
.text:000000000000FDB0                 MOV             X23, SP
.text:000000000000FDB4                 ADD             X0, X0, #aEfsSecEfsSemSk@PAGEOFF ; "/efs/sec_efs/sem_sk.dat"
.text:000000000000FDB8                 MOV             W2, #0xDAC
.text:000000000000FDBC                 MOV             X1, X20
.text:000000000000FDC0                 STR             X22, [X23,#0x16850+var_16850]
.text:000000000000FDC4                 BL              .c_readFile
.text:000000000000FDC8                 MOV             W19, W0
.text:000000000000FDCC                 STR             W19, [X21]
.text:000000000000FDD0                 TBNZ            W19, #0x1F, loc_FE34
.text:000000000000FDD4                 MOV             W0, #0x1A
.text:000000000000FDD8                 ADD             X3, SP, #0x16850+var_16848
.text:000000000000FDDC                 MOV             X1, X20
.text:000000000000FDE0                 MOV             W2, W19
.text:000000000000FDE4                 ADD             X21, SP, #0x16850+var_16848
.text:000000000000FDE8                 BL              .invokeCommand
.text:000000000000FDEC                 LDR             W8, [SP,#0x16850+var_16844]
.text:000000000000FDF0                 CBZ             W8, loc_FE50
.text:000000000000FDF4                 ADRP            X1, #aSemSeviceKey@PAGE ; "SEM_SEVICE_KEY"
.text:000000000000FDF8                 ADRP            X2, #aUnwraprewappae_0@PAGE ; "unwrapRewappaedSEMServiceKey is failed"
.text:000000000000FDFC                 ADD             X1, X1, #aSemSeviceKey@PAGEOFF ; "SEM_SEVICE_KEY"
.text:000000000000FE00                 ADD             X2, X2, #aUnwraprewappae_0@PAGEOFF ; "unwrapRewappaedSEMServiceKey is failed"
.text:000000000000FE04                 MOV             W0, #6
.text:000000000000FE08                 BL              .__android_log_print
.text:000000000000FE0C                 LDR             W8, [SP,#0x16850+var_16844]
.text:000000000000FE10                 CBZ             W8, loc_FE98
.text:000000000000FE14                 ADRP            X1, #aSemSeviceKey@PAGE ; "SEM_SEVICE_KEY"
.text:000000000000FE18                 ADRP            X2, #aUnwrapServiceK@PAGE ; "Unwrap service key failed"
.text:000000000000FE1C                 ADD             X1, X1, #aSemSeviceKey@PAGEOFF ; "SEM_SEVICE_KEY"
.text:000000000000FE20                 ADD             X2, X2, #aUnwrapServiceK@PAGEOFF ; "Unwrap service key failed"
.text:000000000000FE24                 MOV             W0, #6
.text:000000000000FE28                 BL              .__android_log_print
.text:000000000000FE2C                 MOV             W19, #0xFFFFFF9C
.text:000000000000FE30                 B               loc_FE9C
.text:000000000000FE34 ; ---------------------------------------------------------------------------
.text:000000000000FE34 loc_FE34                                ; CODE XREF: getSEMServiceKey+54↑j
.text:000000000000FE34                 ADRP            X1, #aSemSeviceKey@PAGE ; "SEM_SEVICE_KEY"
.text:000000000000FE38                 ADRP            X2, #aReadServiceKey@PAGE ; "Read service key failed"
.text:000000000000FE3C                 ADD             X1, X1, #aSemSeviceKey@PAGEOFF ; "SEM_SEVICE_KEY"
.text:000000000000FE40                 ADD             X2, X2, #aReadServiceKey@PAGEOFF ; "Read service key failed"
.text:000000000000FE44                 MOV             W0, #6
.text:000000000000FE48                 BL              .__android_log_print
.text:000000000000FE4C                 B               loc_FE9C
.text:000000000000FE50 ; ---------------------------------------------------------------------------
.text:000000000000FE50 loc_FE50                                ; CODE XREF: getSEMServiceKey+74↑j
.text:000000000000FE50                 LDRH            W2, [SP,#0x16850+n] ; n
.text:000000000000FE54                 ADRP            X0, #unk_273A0@PAGE
.text:000000000000FE58                 ADD             X8, X21, #8
.text:000000000000FE5C                 ADRP            X9, #word_2739E@PAGE
.text:000000000000FE60                 ADD             X1, X21, #0xA ; src
.text:000000000000FE64                 ADD             X0, X0, #unk_273A0@PAGEOFF ; dest
.text:000000000000FE68                 ADD             X19, X2, X8
.text:000000000000FE6C                 STRH            W2, [X9,#word_2739E@PAGEOFF]
.text:000000000000FE70                 BL              .memcpy
.text:000000000000FE74                 LDRH            W2, [X19,#2] ; n
.text:000000000000FE78                 ADRP            X0, #unk_27BA2@PAGE
.text:000000000000FE7C                 ADRP            X8, #word_27BA0@PAGE
.text:000000000000FE80                 ADD             X1, X19, #4 ; src
.text:000000000000FE84                 ADD             X0, X0, #unk_27BA2@PAGEOFF ; dest
.text:000000000000FE88                 STRH            W2, [X8,#word_27BA0@PAGEOFF]
.text:000000000000FE8C                 BL              .memcpy
.text:000000000000FE90                 MOV             W19, WZR
.text:000000000000FE94                 B               loc_FE9C
.text:000000000000FE98 ; ---------------------------------------------------------------------------
.text:000000000000FE98 loc_FE98                                ; CODE XREF: getSEMServiceKey+94↑j
.text:000000000000FE98                 MOV             W19, WZR
.text:000000000000FE9C loc_FE9C                                ; CODE XREF: getSEMServiceKey+B4↑j
.text:000000000000FE9C                                         ; getSEMServiceKey+D0↑j ...
.text:000000000000FE9C                 LDR             X8, [X23]
.text:000000000000FEA0                 SUB             X8, X22, X8
.text:000000000000FEA4                 CBNZ            X8, loc_FEC4
.text:000000000000FEA8                 MOV             W0, W19
.text:000000000000FEAC                 SUB             SP, X29, #0x30 ; '0'
.text:000000000000FEB0                 LDP             X29, X30, [SP,#0x30+var_s0]
.text:000000000000FEB4                 LDP             X20, X19, [SP,#0x30+var_10]
.text:000000000000FEB8                 LDP             X22, X21, [SP,#0x30+var_20]
.text:000000000000FEBC                 LDP             X24, X23, [SP+0x30+var_30],#0x40
.text:000000000000FEC0                 RET
.text:000000000000FEC4 ; ---------------------------------------------------------------------------
.text:000000000000FEC4 loc_FEC4                                ; CODE XREF: getSEMServiceKey+128↑j
.text:000000000000FEC4                 BL              .__stack_chk_fail
.text:000000000000FEC4 ; } // starts at FD7C
.text:000000000000FEC4 ; End of function getSEMServiceKey
.text:000000000000FEC8 ; =============== S U B R O U T I N E =======================================
.text:000000000000FEC8 ; Attributes: bp-based frame
.text:000000000000FEC8                 EXPORT checkAndCreateSKMSServiceKey
.text:000000000000FEC8 checkAndCreateSKMSServiceKey            ; CODE XREF: .checkAndCreateSKMSServiceKey+C↑j
.text:000000000000FEC8                                         ; DATA XREF: LOAD:00000000000011F8↑o ...
.text:000000000000FEC8 var_28          = -0x28
.text:000000000000FEC8 var_20          = -0x20
.text:000000000000FEC8 var_10          = -0x10
.text:000000000000FEC8 var_s0          =  0
.text:000000000000FEC8 ; __unwind {
.text:000000000000FEC8                 STP             X28, X27, [SP,#-0x10+var_20]!
.text:000000000000FECC                 STP             X20, X19, [SP,#0x20+var_10]
.text:000000000000FED0                 STP             X29, X30, [SP,#0x20+var_s0]
.text:000000000000FED4                 ADD             X29, SP, #0x20
.text:000000000000FED8                 SUB             SP, SP, #1,LSL#12
.text:000000000000FEDC                 SUB             SP, SP, #0x390
.text:000000000000FEE0                 ADRP            X20, #__stack_chk_guard_ptr@PAGE
.text:000000000000FEE4                 LDR             X20, [X20,#__stack_chk_guard_ptr@PAGEOFF]
.text:000000000000FEE8                 MOV             X0, SP  ; s
.text:000000000000FEEC                 MOV             W2, #0x1388 ; n
.text:000000000000FEF0                 MOV             W1, WZR ; c
.text:000000000000FEF4                 LDR             X20, [X20]
.text:000000000000FEF8                 STUR            X20, [X29,#var_28]
.text:000000000000FEFC                 BL              .memset
.text:000000000000FF00                 ADRP            X0, #aEfsSecEfsSkmsS@PAGE ; "/efs/sec_efs/skms_sk.dat"
.text:000000000000FF04                 ADD             X0, X0, #aEfsSecEfsSkmsS@PAGEOFF ; "/efs/sec_efs/skms_sk.dat"
.text:000000000000FF08                 BL              .c_access
.text:000000000000FF0C                 ADRP            X1, #aSemSeviceKey@PAGE ; "SEM_SEVICE_KEY"
.text:000000000000FF10                 ADD             X1, X1, #aSemSeviceKey@PAGEOFF ; "SEM_SEVICE_KEY"
.text:000000000000FF14                 CBZ             W0, loc_FF48
.text:000000000000FF18                 ADRP            X2, #aThereIsNoSkmsS@PAGE ; "There is no SKMS service key. Generate "...
.text:000000000000FF1C                 ADD             X2, X2, #aThereIsNoSkmsS@PAGEOFF ; "There is no SKMS service key. Generate "...
.text:000000000000FF20                 MOV             W0, #4
.text:000000000000FF24                 BL              .__android_log_print
.text:000000000000FF28 loc_FF28                                ; CODE XREF: checkAndCreateSKMSServiceKey+158↓j
.text:000000000000FF28                 BL              .generateSKMSServiceKey
.text:000000000000FF2C                 MOV             W19, W0
.text:000000000000FF30                 CBZ             W19, loc_FF98
.text:000000000000FF34                 ADRP            X1, #aSemSeviceKey@PAGE ; "SEM_SEVICE_KEY"
.text:000000000000FF38                 ADRP            X2, #aFailedToGenera_0@PAGE ; "Failed to generateSKMSServiceKey."
.text:000000000000FF3C                 ADD             X1, X1, #aSemSeviceKey@PAGEOFF ; "SEM_SEVICE_KEY"
.text:000000000000FF40                 ADD             X2, X2, #aFailedToGenera_0@PAGEOFF ; "Failed to generateSKMSServiceKey."
.text:000000000000FF44                 B               loc_1006C
.text:000000000000FF48 ; ---------------------------------------------------------------------------
.text:000000000000FF48 loc_FF48                                ; CODE XREF: checkAndCreateSKMSServiceKey+4C↑j
.text:000000000000FF48                 ADRP            X2, #aSkmsServiceKey@PAGE ; "SKMS service key is exist."
.text:000000000000FF4C                 ADD             X2, X2, #aSkmsServiceKey@PAGEOFF ; "SKMS service key is exist."
.text:000000000000FF50                 MOV             W0, #4
.text:000000000000FF54                 BL              .__android_log_print
.text:000000000000FF58                 ADRP            X0, #aEfsSecEfsSkmsS@PAGE ; "/efs/sec_efs/skms_sk.dat"
.text:000000000000FF5C                 ADD             X0, X0, #aEfsSecEfsSkmsS@PAGEOFF ; "/efs/sec_efs/skms_sk.dat"
.text:000000000000FF60                 MOV             X1, SP
.text:000000000000FF64                 MOV             W2, #0x1388
.text:000000000000FF68                 BL              .c_readFile
.text:000000000000FF6C                 MOV             W8, W0
.text:000000000000FF70                 TBNZ            W8, #0x1F, loc_FFE4
.text:000000000000FF74                 MOV             X0, SP
.text:000000000000FF78                 MOV             W1, W8
.text:000000000000FF7C                 BL              .unwrapRewrappedSKMSServiceKey
.text:000000000000FF80                 CBZ             W0, loc_10098
.text:000000000000FF84                 ADRP            X1, #aSemSeviceKey@PAGE ; "SEM_SEVICE_KEY"
.text:000000000000FF88                 ADRP            X2, #aUnwrapRsaServi@PAGE ; "Unwrap RSA service key failed"
.text:000000000000FF8C                 ADD             X1, X1, #aSemSeviceKey@PAGEOFF ; "SEM_SEVICE_KEY"
.text:000000000000FF90                 ADD             X2, X2, #aUnwrapRsaServi@PAGEOFF ; "Unwrap RSA service key failed"
.text:000000000000FF94                 B               loc_FFF4
.text:000000000000FF98 ; ---------------------------------------------------------------------------
.text:000000000000FF98 loc_FF98                                ; CODE XREF: checkAndCreateSKMSServiceKey+68↑j
.text:000000000000FF98                 ADRP            X0, #aEfsSecEfsSkmsS@PAGE ; "/efs/sec_efs/skms_sk.dat"
.text:000000000000FF9C                 ADD             X0, X0, #aEfsSecEfsSkmsS@PAGEOFF ; "/efs/sec_efs/skms_sk.dat"
.text:000000000000FFA0                 MOV             X1, SP
.text:000000000000FFA4                 MOV             W2, #0x1388
.text:000000000000FFA8                 BL              .c_readFile
.text:000000000000FFAC                 MOV             W19, W0
.text:000000000000FFB0                 TBNZ            W19, #0x1F, loc_10044
.text:000000000000FFB4                 MOV             X0, SP
.text:000000000000FFB8                 MOV             W1, W19
.text:000000000000FFBC                 BL              .unwrapRewrappedSKMSServiceKey
.text:000000000000FFC0                 CBZ             W0, loc_100B4
.text:000000000000FFC4                 ADRP            X1, #aSemSeviceKey@PAGE ; "SEM_SEVICE_KEY"
.text:000000000000FFC8                 ADRP            X2, #aUnwrapRsaServi@PAGE ; "Unwrap RSA service key failed"
.text:000000000000FFCC                 ADD             X1, X1, #aSemSeviceKey@PAGEOFF ; "SEM_SEVICE_KEY"
.text:000000000000FFD0                 ADD             X2, X2, #aUnwrapRsaServi@PAGEOFF ; "Unwrap RSA service key failed"
.text:000000000000FFD4                 MOV             W0, #6
.text:000000000000FFD8                 BL              .__android_log_print
.text:000000000000FFDC                 MOV             W19, #0xFFFFFF9C
.text:000000000000FFE0                 B               loc_1005C
.text:000000000000FFE4 ; ---------------------------------------------------------------------------
.text:000000000000FFE4 loc_FFE4                                ; CODE XREF: checkAndCreateSKMSServiceKey+A8↑j
.text:000000000000FFE4                 ADRP            X1, #aSemSeviceKey@PAGE ; "SEM_SEVICE_KEY"
.text:000000000000FFE8                 ADRP            X2, #aReadRsaService@PAGE ; "Read RSA service key failed"
.text:000000000000FFEC                 ADD             X1, X1, #aSemSeviceKey@PAGEOFF ; "SEM_SEVICE_KEY"
.text:000000000000FFF0                 ADD             X2, X2, #aReadRsaService@PAGEOFF ; "Read RSA service key failed"
.text:000000000000FFF4 loc_FFF4                                ; CODE XREF: checkAndCreateSKMSServiceKey+CC↑j
.text:000000000000FFF4                 MOV             W0, #6
.text:000000000000FFF8                 BL              .__android_log_print
.text:000000000000FFFC                 ADRP            X1, #aSemSeviceKey@PAGE ; "SEM_SEVICE_KEY"
.text:0000000000010000                 ADRP            X2, #aFailedToGetskm@PAGE ; "Failed to getSKMSServiceKey"
.text:0000000000010004                 ADD             X1, X1, #aSemSeviceKey@PAGEOFF ; "SEM_SEVICE_KEY"
.text:0000000000010008                 ADD             X2, X2, #aFailedToGetskm@PAGEOFF ; "Failed to getSKMSServiceKey"
.text:000000000001000C loc_1000C                               ; CODE XREF: checkAndCreateSKMSServiceKey+1E8↓j
.text:000000000001000C                 MOV             W0, #6
.text:0000000000010010                 BL              .__android_log_print
.text:0000000000010014                 ADRP            X0, #aEfsSecEfsSkmsS@PAGE ; "/efs/sec_efs/skms_sk.dat"
.text:0000000000010018                 ADD             X0, X0, #aEfsSecEfsSkmsS@PAGEOFF ; "/efs/sec_efs/skms_sk.dat"
.text:000000000001001C                 BL              .c_remove
.text:0000000000010020                 CBZ             W0, loc_FF28
.text:0000000000010024                 ADRP            X1, #aSemSeviceKey@PAGE ; "SEM_SEVICE_KEY"
.text:0000000000010028                 ADRP            X2, #aFailedToDelete@PAGE ; "Failed to delete SKMSServiceKey"
.text:000000000001002C                 ADD             X1, X1, #aSemSeviceKey@PAGEOFF ; "SEM_SEVICE_KEY"
.text:0000000000010030                 ADD             X2, X2, #aFailedToDelete@PAGEOFF ; "Failed to delete SKMSServiceKey"
.text:0000000000010034                 MOV             W0, #6
.text:0000000000010038                 BL              .__android_log_print
.text:000000000001003C                 MOV             W19, #0xFFFFFF99
.text:0000000000010040                 B               loc_10074
.text:0000000000010044 ; ---------------------------------------------------------------------------
.text:0000000000010044 loc_10044                               ; CODE XREF: checkAndCreateSKMSServiceKey+E8↑j
.text:0000000000010044                 ADRP            X1, #aSemSeviceKey@PAGE ; "SEM_SEVICE_KEY"
.text:0000000000010048                 ADRP            X2, #aReadRsaService@PAGE ; "Read RSA service key failed"
.text:000000000001004C                 ADD             X1, X1, #aSemSeviceKey@PAGEOFF ; "SEM_SEVICE_KEY"
.text:0000000000010050                 ADD             X2, X2, #aReadRsaService@PAGEOFF ; "Read RSA service key failed"
.text:0000000000010054                 MOV             W0, #6
.text:0000000000010058                 BL              .__android_log_print
.text:000000000001005C loc_1005C                               ; CODE XREF: checkAndCreateSKMSServiceKey+118↑j
.text:000000000001005C                 ADRP            X1, #aSemSeviceKey@PAGE ; "SEM_SEVICE_KEY"
.text:0000000000010060                 ADRP            X2, #aFailedToGetskm@PAGE ; "Failed to getSKMSServiceKey"
.text:0000000000010064                 ADD             X1, X1, #aSemSeviceKey@PAGEOFF ; "SEM_SEVICE_KEY"
.text:0000000000010068                 ADD             X2, X2, #aFailedToGetskm@PAGEOFF ; "Failed to getSKMSServiceKey"
.text:000000000001006C loc_1006C                               ; CODE XREF: checkAndCreateSKMSServiceKey+7C↑j
.text:000000000001006C                 MOV             W0, #6
.text:0000000000010070                 BL              .__android_log_print
.text:0000000000010074 loc_10074                               ; CODE XREF: checkAndCreateSKMSServiceKey+178↑j
.text:0000000000010074                                         ; checkAndCreateSKMSServiceKey+210↓j ...
.text:0000000000010074                 LDUR            X8, [X29,#var_28]
.text:0000000000010078                 SUB             X8, X20, X8
.text:000000000001007C                 CBNZ            X8, loc_100FC
.text:0000000000010080                 MOV             W0, W19
.text:0000000000010084                 SUB             SP, X29, #0x20 ; ' '
.text:0000000000010088                 LDP             X29, X30, [SP,#0x20+var_s0]
.text:000000000001008C                 LDP             X20, X19, [SP,#0x20+var_10]
.text:0000000000010090                 LDP             X28, X27, [SP+0x20+var_20],#0x30
.text:0000000000010094                 RET
.text:0000000000010098 ; ---------------------------------------------------------------------------
.text:0000000000010098 loc_10098                               ; CODE XREF: checkAndCreateSKMSServiceKey+B8↑j
.text:0000000000010098                 BL              .verifySKMSServiceKeyCertChain
.text:000000000001009C                 CBNZ            W0, loc_100BC
.text:00000000000100A0                 ADRP            X1, #aSemSeviceKey@PAGE ; "SEM_SEVICE_KEY"
.text:00000000000100A4                 ADRP            X2, #aVerifyCertChai@PAGE ; "Verify Cert Chain is failed"
.text:00000000000100A8                 ADD             X1, X1, #aSemSeviceKey@PAGEOFF ; "SEM_SEVICE_KEY"
.text:00000000000100AC                 ADD             X2, X2, #aVerifyCertChai@PAGEOFF ; "Verify Cert Chain is failed"
.text:00000000000100B0                 B               loc_1000C
.text:00000000000100B4 ; ---------------------------------------------------------------------------
.text:00000000000100B4 loc_100B4                               ; CODE XREF: checkAndCreateSKMSServiceKey+F8↑j
.text:00000000000100B4                 BL              .verifySKMSServiceKeyCertChain
.text:00000000000100B8                 CBZ             W0, loc_100DC
.text:00000000000100BC loc_100BC                               ; CODE XREF: checkAndCreateSKMSServiceKey+1D4↑j
.text:00000000000100BC                 ADRP            X1, #aSemSeviceKey@PAGE ; "SEM_SEVICE_KEY"
.text:00000000000100C0                 ADRP            X2, #aCertChainVerif@PAGE ; "Cert chain verification is success"
.text:00000000000100C4                 ADD             X1, X1, #aSemSeviceKey@PAGEOFF ; "SEM_SEVICE_KEY"
.text:00000000000100C8                 ADD             X2, X2, #aCertChainVerif@PAGEOFF ; "Cert chain verification is success"
.text:00000000000100CC                 MOV             W0, #4
.text:00000000000100D0                 BL              .__android_log_print
.text:00000000000100D4                 MOV             W19, WZR
.text:00000000000100D8                 B               loc_10074
.text:00000000000100DC ; ---------------------------------------------------------------------------
.text:00000000000100DC loc_100DC                               ; CODE XREF: checkAndCreateSKMSServiceKey+1F0↑j
.text:00000000000100DC                 ADRP            X1, #aSemSeviceKey@PAGE ; "SEM_SEVICE_KEY"
.text:00000000000100E0                 ADRP            X2, #aVerifyCertChai@PAGE ; "Verify Cert Chain is failed"
.text:00000000000100E4                 ADD             X1, X1, #aSemSeviceKey@PAGEOFF ; "SEM_SEVICE_KEY"
.text:00000000000100E8                 ADD             X2, X2, #aVerifyCertChai@PAGEOFF ; "Verify Cert Chain is failed"
.text:00000000000100EC                 MOV             W0, #6
.text:00000000000100F0                 BL              .__android_log_print
.text:00000000000100F4                 MOV             W19, #0xFFFFFF9B
.text:00000000000100F8                 B               loc_10074
.text:00000000000100FC ; ---------------------------------------------------------------------------
.text:00000000000100FC loc_100FC                               ; CODE XREF: checkAndCreateSKMSServiceKey+1B4↑j
.text:00000000000100FC                 BL              .__stack_chk_fail
.text:00000000000100FC ; } // starts at FEC8
.text:00000000000100FC ; End of function checkAndCreateSKMSServiceKey
.text:0000000000010100 ; =============== S U B R O U T I N E =======================================
.text:0000000000010100 ; Attributes: bp-based frame
.text:0000000000010100                 EXPORT getSKMSServiceKey
.text:0000000000010100 getSKMSServiceKey                       ; DATA XREF: LOAD:0000000000001120↑o
.text:0000000000010100 var_20          = -0x20
.text:0000000000010100 var_10          = -0x10
.text:0000000000010100 var_s0          =  0
.text:0000000000010100 ; __unwind {
.text:0000000000010100                 STP             X22, X21, [SP,#-0x10+var_20]!
.text:0000000000010104                 STP             X20, X19, [SP,#0x20+var_10]
.text:0000000000010108                 STP             X29, X30, [SP,#0x20+var_s0]
.text:000000000001010C                 ADD             X29, SP, #0x20
.text:0000000000010110                 MOV             X20, X0
.text:0000000000010114                 ADRP            X0, #aEfsSecEfsSkmsS@PAGE ; "/efs/sec_efs/skms_sk.dat"
.text:0000000000010118                 MOV             X21, X1
.text:000000000001011C                 ADD             X0, X0, #aEfsSecEfsSkmsS@PAGEOFF ; "/efs/sec_efs/skms_sk.dat"
.text:0000000000010120                 MOV             W2, #0x1388
.text:0000000000010124                 MOV             X1, X20
.text:0000000000010128                 BL              .c_readFile
.text:000000000001012C                 MOV             W19, W0
.text:0000000000010130                 STR             W19, [X21]
.text:0000000000010134                 TBNZ            W19, #0x1F, loc_10168
.text:0000000000010138                 MOV             X0, X20
.text:000000000001013C                 MOV             W1, W19
.text:0000000000010140                 BL              .unwrapRewrappedSKMSServiceKey
.text:0000000000010144                 CBZ             W0, loc_10184
.text:0000000000010148                 ADRP            X1, #aSemSeviceKey@PAGE ; "SEM_SEVICE_KEY"
.text:000000000001014C                 ADRP            X2, #aUnwrapRsaServi@PAGE ; "Unwrap RSA service key failed"
.text:0000000000010150                 ADD             X1, X1, #aSemSeviceKey@PAGEOFF ; "SEM_SEVICE_KEY"
.text:0000000000010154                 ADD             X2, X2, #aUnwrapRsaServi@PAGEOFF ; "Unwrap RSA service key failed"
.text:0000000000010158                 MOV             W0, #6
.text:000000000001015C                 BL              .__android_log_print
.text:0000000000010160                 MOV             W19, #0xFFFFFF9C
.text:0000000000010164                 B               loc_10188
.text:0000000000010168 ; ---------------------------------------------------------------------------
.text:0000000000010168 loc_10168                               ; CODE XREF: getSKMSServiceKey+34↑j
.text:0000000000010168                 ADRP            X1, #aSemSeviceKey@PAGE ; "SEM_SEVICE_KEY"
.text:000000000001016C                 ADRP            X2, #aReadRsaService@PAGE ; "Read RSA service key failed"
.text:0000000000010170                 ADD             X1, X1, #aSemSeviceKey@PAGEOFF ; "SEM_SEVICE_KEY"
.text:0000000000010174                 ADD             X2, X2, #aReadRsaService@PAGEOFF ; "Read RSA service key failed"
.text:0000000000010178                 MOV             W0, #6
.text:000000000001017C                 BL              .__android_log_print
.text:0000000000010180                 B               loc_10188
.text:0000000000010184 ; ---------------------------------------------------------------------------
.text:0000000000010184 loc_10184                               ; CODE XREF: getSKMSServiceKey+44↑j
.text:0000000000010184                 MOV             W19, WZR
.text:0000000000010188 loc_10188                               ; CODE XREF: getSKMSServiceKey+64↑j
.text:0000000000010188                                         ; getSKMSServiceKey+80↑j
.text:0000000000010188                 MOV             W0, W19
.text:000000000001018C                 LDP             X29, X30, [SP,#0x20+var_s0]
.text:0000000000010190                 LDP             X20, X19, [SP,#0x20+var_10]
.text:0000000000010194                 LDP             X22, X21, [SP+0x20+var_20],#0x30
.text:0000000000010198                 RET
.text:0000000000010198 ; } // starts at 10100
.text:0000000000010198 ; End of function getSKMSServiceKey
.text:000000000001019C ; =============== S U B R O U T I N E =======================================
.text:000000000001019C ; Attributes: bp-based frame
.text:000000000001019C                 EXPORT generateSEMServiceKey
.text:000000000001019C generateSEMServiceKey                   ; CODE XREF: .generateSEMServiceKey+C↑j
.text:000000000001019C                                         ; DATA XREF: LOAD:0000000000000C10↑o ...
.text:000000000001019C var_DE0         = -0xDE0
.text:000000000001019C s               = -0xDD4
.text:000000000001019C var_20          = -0x20
.text:000000000001019C var_10          = -0x10
.text:000000000001019C var_s0          =  0
.text:000000000001019C ; __unwind {
.text:000000000001019C                 STP             X22, X21, [SP,#-0x10+var_20]!
.text:00000000000101A0                 STP             X20, X19, [SP,#0x20+var_10]
.text:00000000000101A4                 STP             X29, X30, [SP,#0x20+var_s0]
.text:00000000000101A8                 ADD             X29, SP, #0x20
.text:00000000000101AC                 SUB             SP, SP, #0xDC0
.text:00000000000101B0                 ADRP            X20, #__stack_chk_guard_ptr@PAGE
.text:00000000000101B4                 LDR             X20, [X20,#__stack_chk_guard_ptr@PAGEOFF]
.text:00000000000101B8                 MOV             X21, SP
.text:00000000000101BC                 ADD             X0, SP, #0xDE0+s ; s
.text:00000000000101C0                 MOV             W2, #0xDAC ; n
.text:00000000000101C4                 LDR             X20, [X20]
.text:00000000000101C8                 MOV             W1, WZR ; c
.text:00000000000101CC                 STR             X20, [X21,#0xDE0+var_DE0]
.text:00000000000101D0                 BL              .memset
.text:00000000000101D4                 ADRP            X1, #aSemSeviceKey@PAGE ; "SEM_SEVICE_KEY"
.text:00000000000101D8                 ADRP            X2, #aGenerateSemSer@PAGE ; "Generate SEM service key"
.text:00000000000101DC                 ADD             X1, X1, #aSemSeviceKey@PAGEOFF ; "SEM_SEVICE_KEY"
.text:00000000000101E0                 ADD             X2, X2, #aGenerateSemSer@PAGEOFF ; "Generate SEM service key"
.text:00000000000101E4                 MOV             W0, #4
.text:00000000000101E8                 BL              .__android_log_print
.text:00000000000101EC                 MOV             W0, #1
.text:00000000000101F0                 BL              .isExistDeviceRootKey
.text:00000000000101F4                 ADRP            X1, #aSemSeviceKey@PAGE ; "SEM_SEVICE_KEY"
.text:00000000000101F8                 ADD             X1, X1, #aSemSeviceKey@PAGEOFF ; "SEM_SEVICE_KEY"
.text:00000000000101FC                 CBZ             W0, loc_1026C
.text:0000000000010200                 CMP             W0, #1
.text:0000000000010204                 B.NE            loc_10278
.text:0000000000010208                 ADRP            X2, #aDrkIsExistKeep@PAGE ; "DRK is exist. Keep going"
.text:000000000001020C                 ADD             X2, X2, #aDrkIsExistKeep@PAGEOFF ; "DRK is exist. Keep going"
.text:0000000000010210                 MOV             W0, #4
.text:0000000000010214                 BL              .__android_log_print
.text:0000000000010218                 ADRP            X0, #unk_10DEC@PAGE
.text:000000000001021C                 MOV             W2, WZR
.text:0000000000010220                 ADD             X0, X0, #unk_10DEC@PAGEOFF
.text:0000000000010224                 MOV             W1, #4
.text:0000000000010228                 ADD             X3, SP, #0xDE0+s
.text:000000000001022C                 MOV             W4, #0xDAC
.text:0000000000010230                 BL              .createServiceKeySession
.text:0000000000010234                 MOV             W19, W0
.text:0000000000010238                 TBNZ            W19, #0x1F, loc_102D0
.text:000000000001023C                 ADD             X0, SP, #0xDE0+s
.text:0000000000010240                 MOV             W1, W19
.text:0000000000010244                 BL              .rewrapSEMServiceKey
.text:0000000000010248                 CBZ             W0, loc_102F0
.text:000000000001024C                 ADRP            X1, #aSemSeviceKey@PAGE ; "SEM_SEVICE_KEY"
.text:0000000000010250                 ADRP            X2, #aUnwrapServiceK@PAGE ; "Unwrap service key failed"
.text:0000000000010254                 ADD             X1, X1, #aSemSeviceKey@PAGEOFF ; "SEM_SEVICE_KEY"
.text:0000000000010258                 ADD             X2, X2, #aUnwrapServiceK@PAGEOFF ; "Unwrap service key failed"
.text:000000000001025C                 MOV             W0, #6
.text:0000000000010260                 BL              .__android_log_print
.text:0000000000010264                 MOV             W19, #0xFFFFFF9C
.text:0000000000010268                 B               loc_1028C
.text:000000000001026C ; ---------------------------------------------------------------------------
.text:000000000001026C loc_1026C                               ; CODE XREF: generateSEMServiceKey+60↑j
.text:000000000001026C                 ADRP            X2, #aDrkIsNotExist@PAGE ; "DRK is not exist."
.text:0000000000010270                 ADD             X2, X2, #aDrkIsNotExist@PAGEOFF ; "DRK is not exist."
.text:0000000000010274                 B               loc_10280
.text:0000000000010278 ; ---------------------------------------------------------------------------
.text:0000000000010278 loc_10278                               ; CODE XREF: generateSEMServiceKey+68↑j
.text:0000000000010278                 ADRP            X2, #aFailedToCheckD@PAGE ; "Failed to check DRK."
.text:000000000001027C                 ADD             X2, X2, #aFailedToCheckD@PAGEOFF ; "Failed to check DRK."
.text:0000000000010280 loc_10280                               ; CODE XREF: generateSEMServiceKey+D8↑j
.text:0000000000010280                 MOV             W0, #6
.text:0000000000010284                 BL              .__android_log_print
.text:0000000000010288                 MOV             W19, #0xFFFFFFFC
.text:000000000001028C loc_1028C                               ; CODE XREF: generateSEMServiceKey+CC↑j
.text:000000000001028C                                         ; generateSEMServiceKey+150↓j ...
.text:000000000001028C                 BL              .releaseServiceKeySession
.text:0000000000010290                 CBZ             W0, loc_102AC
.text:0000000000010294                 ADRP            X1, #aSemSeviceKey@PAGE ; "SEM_SEVICE_KEY"
.text:0000000000010298                 ADRP            X2, #aFailedToReleas@PAGE ; "Failed to releaseServiceKeySession."
.text:000000000001029C                 ADD             X1, X1, #aSemSeviceKey@PAGEOFF ; "SEM_SEVICE_KEY"
.text:00000000000102A0                 ADD             X2, X2, #aFailedToReleas@PAGEOFF ; "Failed to releaseServiceKeySession."
.text:00000000000102A4                 MOV             W0, #6
.text:00000000000102A8                 BL              .__android_log_print
.text:00000000000102AC loc_102AC                               ; CODE XREF: generateSEMServiceKey+F4↑j
.text:00000000000102AC                 LDR             X8, [X21]
.text:00000000000102B0                 SUB             X8, X20, X8
.text:00000000000102B4                 CBNZ            X8, loc_102F8
.text:00000000000102B8                 MOV             W0, W19
.text:00000000000102BC                 SUB             SP, X29, #0x20 ; ' '
.text:00000000000102C0                 LDP             X29, X30, [SP,#0x20+var_s0]
.text:00000000000102C4                 LDP             X20, X19, [SP,#0x20+var_10]
.text:00000000000102C8                 LDP             X22, X21, [SP+0x20+var_20],#0x30
.text:00000000000102CC                 RET
.text:00000000000102D0 ; ---------------------------------------------------------------------------
.text:00000000000102D0 loc_102D0                               ; CODE XREF: generateSEMServiceKey+9C↑j
.text:00000000000102D0                 ADRP            X1, #aSemSeviceKey@PAGE ; "SEM_SEVICE_KEY"
.text:00000000000102D4                 ADRP            X2, #aFailedToCreate@PAGE ; "Failed to createServiceKeySession. ret "...
.text:00000000000102D8                 ADD             X1, X1, #aSemSeviceKey@PAGEOFF ; "SEM_SEVICE_KEY"
.text:00000000000102DC                 ADD             X2, X2, #aFailedToCreate@PAGEOFF ; "Failed to createServiceKeySession. ret "...
.text:00000000000102E0                 MOV             W0, #6
.text:00000000000102E4                 MOV             W3, W19
.text:00000000000102E8                 BL              .__android_log_print
.text:00000000000102EC                 B               loc_1028C
.text:00000000000102F0 ; ---------------------------------------------------------------------------
.text:00000000000102F0 loc_102F0                               ; CODE XREF: generateSEMServiceKey+AC↑j
.text:00000000000102F0                 MOV             W19, WZR
.text:00000000000102F4                 B               loc_1028C
.text:00000000000102F8 ; ---------------------------------------------------------------------------
.text:00000000000102F8 loc_102F8                               ; CODE XREF: generateSEMServiceKey+118↑j
.text:00000000000102F8                 BL              .__stack_chk_fail
.text:00000000000102F8 ; } // starts at 1019C
.text:00000000000102F8 ; End of function generateSEMServiceKey
.text:00000000000102FC ; =============== S U B R O U T I N E =======================================
.text:00000000000102FC ; Attributes: bp-based frame
.text:00000000000102FC                 EXPORT rewrapSEMServiceKey
.text:00000000000102FC rewrapSEMServiceKey                     ; CODE XREF: .rewrapSEMServiceKey+C↑j
.text:00000000000102FC                                         ; DATA XREF: LOAD:0000000000000880↑o ...
.text:00000000000102FC var_17600       = -0x17600
.text:00000000000102FC s               = -0x175F4
.text:00000000000102FC var_16848       = -0x16848
.text:00000000000102FC var_16844       = -0x16844
.text:00000000000102FC var_30          = -0x30
.text:00000000000102FC var_20          = -0x20
.text:00000000000102FC var_10          = -0x10
.text:00000000000102FC var_s0          =  0
.text:00000000000102FC ; __unwind {
.text:00000000000102FC                 STP             X24, X23, [SP,#-0x10+var_30]!
.text:0000000000010300                 STP             X22, X21, [SP,#0x30+var_20]
.text:0000000000010304                 STP             X20, X19, [SP,#0x30+var_10]
.text:0000000000010308                 STP             X29, X30, [SP,#0x30+var_s0]
.text:000000000001030C                 ADD             X29, SP, #0x30
.text:0000000000010310                 SUB             SP, SP, #0x17,LSL#12
.text:0000000000010314                 SUB             SP, SP, #0x5D0
.text:0000000000010318                 ADRP            X21, #__stack_chk_guard_ptr@PAGE
.text:000000000001031C                 LDR             X21, [X21,#__stack_chk_guard_ptr@PAGEOFF]
.text:0000000000010320                 MOV             W19, W1
.text:0000000000010324                 MOV             X20, X0
.text:0000000000010328                 MOV             X22, SP
.text:000000000001032C                 LDR             X21, [X21]
.text:0000000000010330                 ADD             X0, SP, #0x17600+s ; s
.text:0000000000010334                 MOV             W2, #0xDAC ; n
.text:0000000000010338                 MOV             W1, WZR ; c
.text:000000000001033C                 STR             X21, [X22,#0x17600+var_17600]
.text:0000000000010340                 BL              .memset
.text:0000000000010344                 MOV             W0, #0x19
.text:0000000000010348                 ADD             X3, SP, #0x17600+var_16848
.text:000000000001034C                 MOV             X1, X20
.text:0000000000010350                 MOV             W2, W19
.text:0000000000010354                 ADD             X23, SP, #0x17600+var_16848
.text:0000000000010358                 BL              .invokeCommand
.text:000000000001035C                 LDR             W8, [SP,#0x17600+var_16844]
.text:0000000000010360                 CBZ             W8, loc_10380
.text:0000000000010364                 ADRP            X1, #aSemSeviceKey@PAGE ; "SEM_SEVICE_KEY"
.text:0000000000010368                 ADRP            X2, #aRewrapsemservi_0@PAGE ; "rewrapSEMServiceKey is failed"
.text:000000000001036C                 ADD             X1, X1, #aSemSeviceKey@PAGEOFF ; "SEM_SEVICE_KEY"
.text:0000000000010370                 ADD             X2, X2, #aRewrapsemservi_0@PAGEOFF ; "rewrapSEMServiceKey is failed"
.text:0000000000010374                 MOV             W0, #6
.text:0000000000010378                 BL              .__android_log_print
.text:000000000001037C                 B               loc_103E0
.text:0000000000010380 ; ---------------------------------------------------------------------------
.text:0000000000010380 loc_10380                               ; CODE XREF: rewrapSEMServiceKey+64↑j
.text:0000000000010380                 MOV             W8, #0x16808
.text:0000000000010388                 LDR             W19, [X23,X8]
.text:000000000001038C                 ADD             X1, X23, #8 ; src
.text:0000000000010390                 ADD             X0, SP, #0x17600+s ; dest
.text:0000000000010394                 MOV             X2, X19 ; n
.text:0000000000010398                 BL              .memcpy
.text:000000000001039C                 ADRP            X0, #aEfsSecEfsSemSk@PAGE ; "/efs/sec_efs/sem_sk.dat"
.text:00000000000103A0                 ADD             X0, X0, #aEfsSecEfsSemSk@PAGEOFF ; "/efs/sec_efs/sem_sk.dat"
.text:00000000000103A4                 ADD             X1, SP, #0x17600+s
.text:00000000000103A8                 MOV             W2, W19
.text:00000000000103AC                 BL              .c_writeFile
.text:00000000000103B0                 MOV             W8, W0
.text:00000000000103B4                 CMP             W8, W19
.text:00000000000103B8                 B.EQ            loc_103E0
.text:00000000000103BC                 ADRP            X1, #aSemSeviceKey@PAGE ; "SEM_SEVICE_KEY"
.text:00000000000103C0                 ADRP            X2, #aFailToWriteWri@PAGE ; "Fail to write. written size = %d"
.text:00000000000103C4                 ADD             X1, X1, #aSemSeviceKey@PAGEOFF ; "SEM_SEVICE_KEY"
.text:00000000000103C8                 ADD             X2, X2, #aFailToWriteWri@PAGEOFF ; "Fail to write. written size = %d"
.text:00000000000103CC                 MOV             W0, #6
.text:00000000000103D0                 MOV             W3, W8
.text:00000000000103D4                 BL              .__android_log_print
.text:00000000000103D8                 MOV             W8, #0xFFFFFFFF
.text:00000000000103DC                 STR             W8, [SP,#0x17600+var_16844]
.text:00000000000103E0 loc_103E0                               ; CODE XREF: rewrapSEMServiceKey+80↑j
.text:00000000000103E0                                         ; rewrapSEMServiceKey+BC↑j
.text:00000000000103E0                 LDR             W0, [SP,#0x17600+var_16844]
.text:00000000000103E4                 LDR             X8, [X22]
.text:00000000000103E8                 SUB             X8, X21, X8
.text:00000000000103EC                 CBNZ            X8, loc_10408
.text:00000000000103F0                 SUB             SP, X29, #0x30 ; '0'
.text:00000000000103F4                 LDP             X29, X30, [SP,#0x30+var_s0]
.text:00000000000103F8                 LDP             X20, X19, [SP,#0x30+var_10]
.text:00000000000103FC                 LDP             X22, X21, [SP,#0x30+var_20]
.text:0000000000010400                 LDP             X24, X23, [SP+0x30+var_30],#0x40
.text:0000000000010404                 RET
.text:0000000000010408 ; ---------------------------------------------------------------------------
.text:0000000000010408 loc_10408                               ; CODE XREF: rewrapSEMServiceKey+F0↑j
.text:0000000000010408                 BL              .__stack_chk_fail
.text:0000000000010408 ; } // starts at 102FC
.text:0000000000010408 ; End of function rewrapSEMServiceKey
.text:000000000001040C ; =============== S U B R O U T I N E =======================================
.text:000000000001040C ; Attributes: bp-based frame
.text:000000000001040C                 EXPORT generateSKMSServiceKey
.text:000000000001040C generateSKMSServiceKey                  ; CODE XREF: .generateSKMSServiceKey+C↑j
.text:000000000001040C                                         ; DATA XREF: LOAD:0000000000001390↑o ...
.text:000000000001040C var_28          = -0x28
.text:000000000001040C var_20          = -0x20
.text:000000000001040C var_10          = -0x10
.text:000000000001040C var_s0          =  0
.text:000000000001040C ; __unwind {
.text:000000000001040C                 STP             X28, X27, [SP,#-0x10+var_20]!
.text:0000000000010410                 STP             X20, X19, [SP,#0x20+var_10]
.text:0000000000010414                 STP             X29, X30, [SP,#0x20+var_s0]
.text:0000000000010418                 ADD             X29, SP, #0x20
.text:000000000001041C                 SUB             SP, SP, #1,LSL#12
.text:0000000000010420                 SUB             SP, SP, #0x390
.text:0000000000010424                 ADRP            X20, #__stack_chk_guard_ptr@PAGE
.text:0000000000010428                 LDR             X20, [X20,#__stack_chk_guard_ptr@PAGEOFF]
.text:000000000001042C                 MOV             X0, SP  ; s
.text:0000000000010430                 MOV             W2, #0x1388 ; n
.text:0000000000010434                 MOV             W1, WZR ; c
.text:0000000000010438                 LDR             X20, [X20]
.text:000000000001043C                 STUR            X20, [X29,#var_28]
.text:0000000000010440                 BL              .memset
.text:0000000000010444                 ADRP            X1, #aSemSeviceKey@PAGE ; "SEM_SEVICE_KEY"
.text:0000000000010448                 ADRP            X2, #aGenerateSkmsSe@PAGE ; "Generate SKMS service key"
.text:000000000001044C                 ADD             X1, X1, #aSemSeviceKey@PAGEOFF ; "SEM_SEVICE_KEY"
.text:0000000000010450                 ADD             X2, X2, #aGenerateSkmsSe@PAGEOFF ; "Generate SKMS service key"
.text:0000000000010454                 MOV             W0, #4
.text:0000000000010458                 BL              .__android_log_print
.text:000000000001045C                 MOV             W0, #1
.text:0000000000010460                 BL              .isExistDeviceRootKey
.text:0000000000010464                 ADRP            X1, #aSemSeviceKey@PAGE ; "SEM_SEVICE_KEY"
.text:0000000000010468                 ADD             X1, X1, #aSemSeviceKey@PAGEOFF ; "SEM_SEVICE_KEY"
.text:000000000001046C                 CBZ             W0, loc_104E0
.text:0000000000010470                 CMP             W0, #1
.text:0000000000010474                 B.NE            loc_104EC
.text:0000000000010478                 ADRP            X2, #aDrkIsExistKeep@PAGE ; "DRK is exist. Keep going"
.text:000000000001047C                 ADD             X2, X2, #aDrkIsExistKeep@PAGEOFF ; "DRK is exist. Keep going"
.text:0000000000010480                 MOV             W0, #4
.text:0000000000010484                 BL              .__android_log_print
.text:0000000000010488                 ADRP            X0, #unk_10DEC@PAGE
.text:000000000001048C                 MOV             W2, WZR
.text:0000000000010490                 ADD             X0, X0, #unk_10DEC@PAGEOFF
.text:0000000000010494                 MOV             W1, #1
.text:0000000000010498                 MOV             X3, SP
.text:000000000001049C                 MOV             W4, #0x1388
.text:00000000000104A0                 BL              .createServiceKeySession
.text:00000000000104A4                 MOV             W19, W0
.text:00000000000104A8                 TBNZ            W19, #0x1F, loc_10544
.text:00000000000104AC                 CBZ             W19, loc_10564
.text:00000000000104B0                 MOV             X0, SP
.text:00000000000104B4                 MOV             W1, W19
.text:00000000000104B8                 BL              .rewrapSKMSServiceKey
.text:00000000000104BC                 CBZ             W0, loc_10584
.text:00000000000104C0                 ADRP            X1, #aSemSeviceKey@PAGE ; "SEM_SEVICE_KEY"
.text:00000000000104C4                 ADRP            X2, #aUnwrapServiceK@PAGE ; "Unwrap service key failed"
.text:00000000000104C8                 ADD             X1, X1, #aSemSeviceKey@PAGEOFF ; "SEM_SEVICE_KEY"
.text:00000000000104CC                 ADD             X2, X2, #aUnwrapServiceK@PAGEOFF ; "Unwrap service key failed"
.text:00000000000104D0                 MOV             W0, #6
.text:00000000000104D4                 BL              .__android_log_print
.text:00000000000104D8                 MOV             W19, #0xFFFFFF9C
.text:00000000000104DC                 B               loc_10500
.text:00000000000104E0 ; ---------------------------------------------------------------------------
.text:00000000000104E0 loc_104E0                               ; CODE XREF: generateSKMSServiceKey+60↑j
.text:00000000000104E0                 ADRP            X2, #aDrkIsNotExist@PAGE ; "DRK is not exist."
.text:00000000000104E4                 ADD             X2, X2, #aDrkIsNotExist@PAGEOFF ; "DRK is not exist."
.text:00000000000104E8                 B               loc_104F4
.text:00000000000104EC ; ---------------------------------------------------------------------------
.text:00000000000104EC loc_104EC                               ; CODE XREF: generateSKMSServiceKey+68↑j
.text:00000000000104EC                 ADRP            X2, #aFailedToCheckD@PAGE ; "Failed to check DRK."
.text:00000000000104F0                 ADD             X2, X2, #aFailedToCheckD@PAGEOFF ; "Failed to check DRK."
.text:00000000000104F4 loc_104F4                               ; CODE XREF: generateSKMSServiceKey+DC↑j
.text:00000000000104F4                 MOV             W0, #6
.text:00000000000104F8                 BL              .__android_log_print
.text:00000000000104FC                 MOV             W19, #0xFFFFFFFC
.text:0000000000010500 loc_10500                               ; CODE XREF: generateSKMSServiceKey+D0↑j
.text:0000000000010500                                         ; generateSKMSServiceKey+154↓j ...
.text:0000000000010500                 BL              .releaseServiceKeySession
.text:0000000000010504                 CBZ             W0, loc_10520
.text:0000000000010508                 ADRP            X1, #aSemSeviceKey@PAGE ; "SEM_SEVICE_KEY"
.text:000000000001050C                 ADRP            X2, #aFailedToReleas@PAGE ; "Failed to releaseServiceKeySession."
.text:0000000000010510                 ADD             X1, X1, #aSemSeviceKey@PAGEOFF ; "SEM_SEVICE_KEY"
.text:0000000000010514                 ADD             X2, X2, #aFailedToReleas@PAGEOFF ; "Failed to releaseServiceKeySession."
.text:0000000000010518                 MOV             W0, #6
.text:000000000001051C                 BL              .__android_log_print
.text:0000000000010520 loc_10520                               ; CODE XREF: generateSKMSServiceKey+F8↑j
.text:0000000000010520                 LDUR            X8, [X29,#var_28]
.text:0000000000010524                 SUB             X8, X20, X8
.text:0000000000010528                 CBNZ            X8, loc_1058C
.text:000000000001052C                 MOV             W0, W19
.text:0000000000010530                 SUB             SP, X29, #0x20 ; ' '
.text:0000000000010534                 LDP             X29, X30, [SP,#0x20+var_s0]
.text:0000000000010538                 LDP             X20, X19, [SP,#0x20+var_10]
.text:000000000001053C                 LDP             X28, X27, [SP+0x20+var_20],#0x30
.text:0000000000010540                 RET
.text:0000000000010544 ; ---------------------------------------------------------------------------
.text:0000000000010544 loc_10544                               ; CODE XREF: generateSKMSServiceKey+9C↑j
.text:0000000000010544                 ADRP            X1, #aSemSeviceKey@PAGE ; "SEM_SEVICE_KEY"
.text:0000000000010548                 ADRP            X2, #aFailedToCreate@PAGE ; "Failed to createServiceKeySession. ret "...
.text:000000000001054C                 ADD             X1, X1, #aSemSeviceKey@PAGEOFF ; "SEM_SEVICE_KEY"
.text:0000000000010550                 ADD             X2, X2, #aFailedToCreate@PAGEOFF ; "Failed to createServiceKeySession. ret "...
.text:0000000000010554                 MOV             W0, #6
.text:0000000000010558                 MOV             W3, W19
.text:000000000001055C                 BL              .__android_log_print
.text:0000000000010560                 B               loc_10500
.text:0000000000010564 ; ---------------------------------------------------------------------------
.text:0000000000010564 loc_10564                               ; CODE XREF: generateSKMSServiceKey+A0↑j
.text:0000000000010564                 ADRP            X1, #aSemSeviceKey@PAGE ; "SEM_SEVICE_KEY"
.text:0000000000010568                 ADRP            X2, #aWrappedfilelen@PAGE ; "wrappedFileLen length 0!"
.text:000000000001056C                 ADD             X1, X1, #aSemSeviceKey@PAGEOFF ; "SEM_SEVICE_KEY"
.text:0000000000010570                 ADD             X2, X2, #aWrappedfilelen@PAGEOFF ; "wrappedFileLen length 0!"
.text:0000000000010574                 MOV             W0, #6
.text:0000000000010578                 BL              .__android_log_print
.text:000000000001057C                 MOV             W19, WZR
.text:0000000000010580                 B               loc_10500
.text:0000000000010584 ; ---------------------------------------------------------------------------
.text:0000000000010584 loc_10584                               ; CODE XREF: generateSKMSServiceKey+B0↑j
.text:0000000000010584                 MOV             W19, WZR
.text:0000000000010588                 B               loc_10500
.text:000000000001058C ; ---------------------------------------------------------------------------
.text:000000000001058C loc_1058C                               ; CODE XREF: generateSKMSServiceKey+11C↑j
.text:000000000001058C                 BL              .__stack_chk_fail
.text:000000000001058C ; } // starts at 1040C
.text:000000000001058C ; End of function generateSKMSServiceKey
.text:0000000000010590 ; =============== S U B R O U T I N E =======================================
.text:0000000000010590 ; Attributes: bp-based frame
.text:0000000000010590                 EXPORT rewrapSKMSServiceKey
.text:0000000000010590 rewrapSKMSServiceKey                    ; CODE XREF: .rewrapSKMSServiceKey+C↑j
.text:0000000000010590                                         ; DATA XREF: LOAD:0000000000001378↑o ...
.text:0000000000010590 var_17BDF       = -0x17BDF
.text:0000000000010590 var_17BD8       = -0x17BD8
.text:0000000000010590 s               = -0x17BD0
.text:0000000000010590 var_16844       = -0x16844
.text:0000000000010590 var_30          = -0x30
.text:0000000000010590 var_20          = -0x20
.text:0000000000010590 var_10          = -0x10
.text:0000000000010590 var_s0          =  0
.text:0000000000010590 ; __unwind {
.text:0000000000010590                 STP             X24, X23, [SP,#-0x10+var_30]!
.text:0000000000010594                 STP             X22, X21, [SP,#0x30+var_20]
.text:0000000000010598                 STP             X20, X19, [SP,#0x30+var_10]
.text:000000000001059C                 STP             X29, X30, [SP,#0x30+var_s0]
.text:00000000000105A0                 ADD             X29, SP, #0x30
.text:00000000000105A4                 SUB             SP, SP, #0x17,LSL#12
.text:00000000000105A8                 SUB             SP, SP, #0xBB0
.text:00000000000105AC                 ADRP            X21, #__stack_chk_guard_ptr@PAGE
.text:00000000000105B0                 LDR             X21, [X21,#__stack_chk_guard_ptr@PAGEOFF]
.text:00000000000105B4                 MOV             W19, W1
.text:00000000000105B8                 MOV             X20, X0
.text:00000000000105BC                 ADD             X22, SP, #0x17BE0+var_17BD8
.text:00000000000105C0                 LDR             X21, [X21]
.text:00000000000105C4                 ADD             X0, SP, #0x17BE0+s ; s
.text:00000000000105C8                 MOV             W2, #0x1388 ; n
.text:00000000000105CC                 MOV             W1, WZR ; c
.text:00000000000105D0                 STR             X21, [X22]
.text:00000000000105D4                 BL              .memset
.text:00000000000105D8                 CMP             W19, #0
.text:00000000000105DC                 B.LE            loc_10628
.text:00000000000105E0                 ADD             X3, SP, #0x17BE0+var_17BDF,LSL#12
.text:00000000000105E4                 MOV             W0, #0x96
.text:00000000000105E8                 ADD             X3, X3, #0x398
.text:00000000000105EC                 ADD             X23, SP, #0x17BE0+var_17BDF,LSL#12
.text:00000000000105F0                 MOV             X1, X20
.text:00000000000105F4                 MOV             W2, W19
.text:00000000000105F8                 ADD             X23, X23, #0x398
.text:00000000000105FC                 BL              .invokeCommand
.text:0000000000010600                 LDR             W8, [SP,#0x17BE0+var_16844]
.text:0000000000010604                 CBZ             W8, loc_1063C
.text:0000000000010608                 ADRP            X1, #aSemSeviceKey@PAGE ; "SEM_SEVICE_KEY"
.text:000000000001060C                 ADRP            X2, #aRewrapskmsserv_0@PAGE ; "rewrapSKMSServiceKey is failed"
.text:0000000000010610                 ADD             X1, X1, #aSemSeviceKey@PAGEOFF ; "SEM_SEVICE_KEY"
.text:0000000000010614                 ADD             X2, X2, #aRewrapskmsserv_0@PAGEOFF ; "rewrapSKMSServiceKey is failed"
.text:0000000000010618                 MOV             W0, #6
.text:000000000001061C                 BL              .__android_log_print
.text:0000000000010620 loc_10620                               ; CODE XREF: rewrapSKMSServiceKey+138↓j
.text:0000000000010620                                         ; rewrapSKMSServiceKey+160↓j
.text:0000000000010620                 LDR             W0, [SP,#0x17BE0+var_16844]
.text:0000000000010624                 B               loc_10670
.text:0000000000010628 ; ---------------------------------------------------------------------------
.text:0000000000010628 loc_10628                               ; CODE XREF: rewrapSKMSServiceKey+4C↑j
.text:0000000000010628                 ADRP            X1, #aSemSeviceKey@PAGE ; "SEM_SEVICE_KEY"
.text:000000000001062C                 ADRP            X2, #aInsufficientIn@PAGE ; "Insufficient inBufLen buffer"
.text:0000000000010630                 ADD             X1, X1, #aSemSeviceKey@PAGEOFF ; "SEM_SEVICE_KEY"
.text:0000000000010634                 ADD             X2, X2, #aInsufficientIn@PAGEOFF ; "Insufficient inBufLen buffer"
.text:0000000000010638                 B               loc_10664
.text:000000000001063C ; ---------------------------------------------------------------------------
.text:000000000001063C loc_1063C                               ; CODE XREF: rewrapSKMSServiceKey+74↑j
.text:000000000001063C                 MOV             W8, #0x16808
.text:0000000000010644                 LDR             W19, [X23,X8]
.text:0000000000010648                 MOV             W8, #0x1389
.text:000000000001064C                 CMP             W19, W8
.text:0000000000010650                 B.CC            loc_10694
.text:0000000000010654                 ADRP            X1, #aSemSeviceKey@PAGE ; "SEM_SEVICE_KEY"
.text:0000000000010658                 ADRP            X2, #aInsufficientRe@PAGE ; "Insufficient rewrappedFileBuf buffer"
.text:000000000001065C                 ADD             X1, X1, #aSemSeviceKey@PAGEOFF ; "SEM_SEVICE_KEY"
.text:0000000000010660                 ADD             X2, X2, #aInsufficientRe@PAGEOFF ; "Insufficient rewrappedFileBuf buffer"
.text:0000000000010664 loc_10664                               ; CODE XREF: rewrapSKMSServiceKey+A8↑j
.text:0000000000010664                 MOV             W0, #6
.text:0000000000010668                 BL              .__android_log_print
.text:000000000001066C                 MOV             W0, #0xFFFFFF38
.text:0000000000010670 loc_10670                               ; CODE XREF: rewrapSKMSServiceKey+94↑j
.text:0000000000010670                 LDR             X8, [X22]
.text:0000000000010674                 SUB             X8, X21, X8
.text:0000000000010678                 CBNZ            X8, loc_106F4
.text:000000000001067C                 SUB             SP, X29, #0x30 ; '0'
.text:0000000000010680                 LDP             X29, X30, [SP,#0x30+var_s0]
.text:0000000000010684                 LDP             X20, X19, [SP,#0x30+var_10]
.text:0000000000010688                 LDP             X22, X21, [SP,#0x30+var_20]
.text:000000000001068C                 LDP             X24, X23, [SP+0x30+var_30],#0x40
.text:0000000000010690                 RET
.text:0000000000010694 ; ---------------------------------------------------------------------------
.text:0000000000010694 loc_10694                               ; CODE XREF: rewrapSKMSServiceKey+C0↑j
.text:0000000000010694                 ADD             X8, SP, #0x17BE0+var_17BDF,LSL#12
.text:0000000000010698                 ADD             X8, X8, #0x398
.text:000000000001069C                 ADD             X1, X8, #8 ; src
.text:00000000000106A0                 ADD             X0, SP, #0x17BE0+s ; dest
.text:00000000000106A4                 MOV             X2, X19 ; n
.text:00000000000106A8                 BL              .memcpy
.text:00000000000106AC                 ADRP            X0, #aEfsSecEfsSkmsS@PAGE ; "/efs/sec_efs/skms_sk.dat"
.text:00000000000106B0                 ADD             X0, X0, #aEfsSecEfsSkmsS@PAGEOFF ; "/efs/sec_efs/skms_sk.dat"
.text:00000000000106B4                 ADD             X1, SP, #0x17BE0+s
.text:00000000000106B8                 MOV             W2, W19
.text:00000000000106BC                 BL              .c_writeFile
.text:00000000000106C0                 MOV             W8, W0
.text:00000000000106C4                 CMP             W8, W19
.text:00000000000106C8                 B.EQ            loc_10620
.text:00000000000106CC                 ADRP            X1, #aSemSeviceKey@PAGE ; "SEM_SEVICE_KEY"
.text:00000000000106D0                 ADRP            X2, #aFailToWriteWri@PAGE ; "Fail to write. written size = %d"
.text:00000000000106D4                 ADD             X1, X1, #aSemSeviceKey@PAGEOFF ; "SEM_SEVICE_KEY"
.text:00000000000106D8                 ADD             X2, X2, #aFailToWriteWri@PAGEOFF ; "Fail to write. written size = %d"
.text:00000000000106DC                 MOV             W0, #6
.text:00000000000106E0                 MOV             W3, W8
.text:00000000000106E4                 BL              .__android_log_print
.text:00000000000106E8                 MOV             W8, #0xFFFFFFFF
.text:00000000000106EC                 STR             W8, [SP,#0x17BE0+var_16844]
.text:00000000000106F0                 B               loc_10620
.text:00000000000106F4 ; ---------------------------------------------------------------------------
.text:00000000000106F4 loc_106F4                               ; CODE XREF: rewrapSKMSServiceKey+E8↑j
.text:00000000000106F4                 BL              .__stack_chk_fail
.text:00000000000106F4 ; } // starts at 10590
.text:00000000000106F4 ; End of function rewrapSKMSServiceKey
.text:00000000000106F8 ; =============== S U B R O U T I N E =======================================
.text:00000000000106F8 ; Attributes: bp-based frame
.text:00000000000106F8                 EXPORT readSEMServiceKeyObject
.text:00000000000106F8 readSEMServiceKeyObject                 ; DATA XREF: LOAD:00000000000016F0↑o
.text:00000000000106F8 var_10          = -0x10
.text:00000000000106F8 var_s0          =  0
.text:00000000000106F8 ; __unwind {
.text:00000000000106F8                 STP             X20, X19, [SP,#-0x10+var_10]!
.text:00000000000106FC                 STP             X29, X30, [SP,#0x10+var_s0]
.text:0000000000010700                 ADD             X29, SP, #0x10
.text:0000000000010704                 MOV             X8, X0
.text:0000000000010708                 ADRP            X0, #aEfsSecEfsSemSk@PAGE ; "/efs/sec_efs/sem_sk.dat"
.text:000000000001070C                 MOV             X19, X1
.text:0000000000010710                 ADD             X0, X0, #aEfsSecEfsSemSk@PAGEOFF ; "/efs/sec_efs/sem_sk.dat"
.text:0000000000010714                 MOV             W2, #0xDAC
.text:0000000000010718                 MOV             X1, X8
.text:000000000001071C                 BL              .c_readFile
.text:0000000000010720                 STR             W0, [X19]
.text:0000000000010724                 LDP             X29, X30, [SP,#0x10+var_s0]
.text:0000000000010728                 LDP             X20, X19, [SP+0x10+var_10],#0x20
.text:000000000001072C                 RET
.text:000000000001072C ; } // starts at 106F8
.text:000000000001072C ; End of function readSEMServiceKeyObject
.text:0000000000010730 ; =============== S U B R O U T I N E =======================================
.text:0000000000010730 ; Attributes: bp-based frame
.text:0000000000010730                 EXPORT readSKMSServiceKeyObject
.text:0000000000010730 readSKMSServiceKeyObject                ; CODE XREF: .readSKMSServiceKeyObject+C↑j
.text:0000000000010730                                         ; DATA XREF: LOAD:00000000000008C8↑o ...
.text:0000000000010730 var_10          = -0x10
.text:0000000000010730 var_s0          =  0
.text:0000000000010730 ; __unwind {
.text:0000000000010730                 STP             X20, X19, [SP,#-0x10+var_10]!
.text:0000000000010734                 STP             X29, X30, [SP,#0x10+var_s0]
.text:0000000000010738                 ADD             X29, SP, #0x10
.text:000000000001073C                 MOV             X8, X0
.text:0000000000010740                 ADRP            X0, #aEfsSecEfsSkmsS@PAGE ; "/efs/sec_efs/skms_sk.dat"
.text:0000000000010744                 MOV             X19, X1
.text:0000000000010748                 ADD             X0, X0, #aEfsSecEfsSkmsS@PAGEOFF ; "/efs/sec_efs/skms_sk.dat"
.text:000000000001074C                 MOV             W2, #0x1388
.text:0000000000010750                 MOV             X1, X8
.text:0000000000010754                 BL              .c_readFile
.text:0000000000010758                 STR             W0, [X19]
.text:000000000001075C                 LDP             X29, X30, [SP,#0x10+var_s0]
.text:0000000000010760                 LDP             X20, X19, [SP+0x10+var_10],#0x20
.text:0000000000010764                 RET
.text:0000000000010764 ; } // starts at 10730
.text:0000000000010764 ; End of function readSKMSServiceKeyObject
.text:0000000000010768 ; =============== S U B R O U T I N E =======================================
.text:0000000000010768 ; Attributes: bp-based frame
.text:0000000000010768                 EXPORT unwrapRewappaedSEMServiceKey
.text:0000000000010768 unwrapRewappaedSEMServiceKey            ; DATA XREF: LOAD:00000000000018D0↑o
.text:0000000000010768 var_16850       = -0x16850
.text:0000000000010768 var_16848       = -0x16848
.text:0000000000010768 var_16844       = -0x16844
.text:0000000000010768 n               = -0x16840
.text:0000000000010768 var_30          = -0x30
.text:0000000000010768 var_20          = -0x20
.text:0000000000010768 var_10          = -0x10
.text:0000000000010768 var_s0          =  0
.text:0000000000010768 ; __unwind {
.text:0000000000010768                 STP             X28, X27, [SP,#-0x10+var_30]!
.text:000000000001076C                 STP             X22, X21, [SP,#0x30+var_20]
.text:0000000000010770                 STP             X20, X19, [SP,#0x30+var_10]
.text:0000000000010774                 STP             X29, X30, [SP,#0x30+var_s0]
.text:0000000000010778                 ADD             X29, SP, #0x30
.text:000000000001077C                 SUB             SP, SP, #0x16,LSL#12
.text:0000000000010780                 SUB             SP, SP, #0x820
.text:0000000000010784                 ADRP            X19, #__stack_chk_guard_ptr@PAGE
.text:0000000000010788                 LDR             X19, [X19,#__stack_chk_guard_ptr@PAGEOFF]
.text:000000000001078C                 MOV             W8, W1
.text:0000000000010790                 MOV             X9, X0
.text:0000000000010794                 MOV             X20, SP
.text:0000000000010798                 LDR             X19, [X19]
.text:000000000001079C                 MOV             W0, #0x1A
.text:00000000000107A0                 ADD             X3, SP, #0x16850+var_16848
.text:00000000000107A4                 MOV             X1, X9
.text:00000000000107A8                 MOV             W2, W8
.text:00000000000107AC                 STR             X19, [X20,#0x16850+var_16850]
.text:00000000000107B0                 ADD             X21, SP, #0x16850+var_16848
.text:00000000000107B4                 BL              .invokeCommand
.text:00000000000107B8                 LDR             W8, [SP,#0x16850+var_16844]
.text:00000000000107BC                 CBZ             W8, loc_107E0
.text:00000000000107C0                 ADRP            X1, #aSemSeviceKey@PAGE ; "SEM_SEVICE_KEY"
.text:00000000000107C4                 ADRP            X2, #aUnwraprewappae_0@PAGE ; "unwrapRewappaedSEMServiceKey is failed"
.text:00000000000107C8                 ADD             X1, X1, #aSemSeviceKey@PAGEOFF ; "SEM_SEVICE_KEY"
.text:00000000000107CC                 ADD             X2, X2, #aUnwraprewappae_0@PAGEOFF ; "unwrapRewappaedSEMServiceKey is failed"
.text:00000000000107D0                 MOV             W0, #6
.text:00000000000107D4                 BL              .__android_log_print
.text:00000000000107D8                 LDR             W0, [SP,#0x16850+var_16844]
.text:00000000000107DC                 B               loc_10824
.text:00000000000107E0 ; ---------------------------------------------------------------------------
.text:00000000000107E0 loc_107E0                               ; CODE XREF: unwrapRewappaedSEMServiceKey+54↑j
.text:00000000000107E0                 LDRH            W2, [SP,#0x16850+n] ; n
.text:00000000000107E4                 ADRP            X0, #unk_273A0@PAGE
.text:00000000000107E8                 ADD             X8, X21, #8
.text:00000000000107EC                 ADRP            X9, #word_2739E@PAGE
.text:00000000000107F0                 ADD             X1, X21, #0xA ; src
.text:00000000000107F4                 ADD             X0, X0, #unk_273A0@PAGEOFF ; dest
.text:00000000000107F8                 ADD             X22, X2, X8
.text:00000000000107FC                 STRH            W2, [X9,#word_2739E@PAGEOFF]
.text:0000000000010800                 BL              .memcpy
.text:0000000000010804                 LDRH            W2, [X22,#2] ; n
.text:0000000000010808                 ADRP            X0, #unk_27BA2@PAGE
.text:000000000001080C                 ADRP            X8, #word_27BA0@PAGE
.text:0000000000010810                 ADD             X1, X22, #4 ; src
.text:0000000000010814                 ADD             X0, X0, #unk_27BA2@PAGEOFF ; dest
.text:0000000000010818                 STRH            W2, [X8,#word_27BA0@PAGEOFF]
.text:000000000001081C                 BL              .memcpy
.text:0000000000010820                 MOV             W0, WZR
.text:0000000000010824 loc_10824                               ; CODE XREF: unwrapRewappaedSEMServiceKey+74↑j
.text:0000000000010824                 LDR             X8, [X20]
.text:0000000000010828                 SUB             X8, X19, X8
.text:000000000001082C                 CBNZ            X8, loc_10848
.text:0000000000010830                 SUB             SP, X29, #0x30 ; '0'
.text:0000000000010834                 LDP             X29, X30, [SP,#0x30+var_s0]
.text:0000000000010838                 LDP             X20, X19, [SP,#0x30+var_10]
.text:000000000001083C                 LDP             X22, X21, [SP,#0x30+var_20]
.text:0000000000010840                 LDP             X28, X27, [SP+0x30+var_30],#0x40
.text:0000000000010844                 RET
.text:0000000000010848 ; ---------------------------------------------------------------------------
.text:0000000000010848 loc_10848                               ; CODE XREF: unwrapRewappaedSEMServiceKey+C4↑j
.text:0000000000010848                 BL              .__stack_chk_fail
.text:0000000000010848 ; } // starts at 10768
.text:0000000000010848 ; End of function unwrapRewappaedSEMServiceKey
.text:000000000001084C ; =============== S U B R O U T I N E =======================================
.text:000000000001084C ; Attributes: bp-based frame
.text:000000000001084C                 EXPORT unwrapRewrappedSKMSServiceKey
.text:000000000001084C unwrapRewrappedSKMSServiceKey           ; CODE XREF: .unwrapRewrappedSKMSServiceKey+C↑j
.text:000000000001084C                                         ; DATA XREF: LOAD:00000000000017B0↑o ...
.text:000000000001084C var_16840       = -0x16840
.text:000000000001084C var_16838       = -0x16838
.text:000000000001084C var_16834       = -0x16834
.text:000000000001084C n               = -0x16830
.text:000000000001084C var_20          = -0x20
.text:000000000001084C var_10          = -0x10
.text:000000000001084C var_s0          =  0
.text:000000000001084C ; __unwind {
.text:000000000001084C                 STP             X22, X21, [SP,#-0x10+var_20]!
.text:0000000000010850                 STP             X20, X19, [SP,#0x20+var_10]
.text:0000000000010854                 STP             X29, X30, [SP,#0x20+var_s0]
.text:0000000000010858                 ADD             X29, SP, #0x20
.text:000000000001085C                 SUB             SP, SP, #0x16,LSL#12
.text:0000000000010860                 SUB             SP, SP, #0x820
.text:0000000000010864                 ADRP            X19, #__stack_chk_guard_ptr@PAGE
.text:0000000000010868                 LDR             X19, [X19,#__stack_chk_guard_ptr@PAGEOFF]
.text:000000000001086C                 MOV             W8, W1
.text:0000000000010870                 MOV             X9, X0
.text:0000000000010874                 MOV             X20, SP
.text:0000000000010878                 LDR             X19, [X19]
.text:000000000001087C                 MOV             W0, #0x97
.text:0000000000010880                 ADD             X3, SP, #0x16840+var_16838
.text:0000000000010884                 MOV             X1, X9
.text:0000000000010888                 MOV             W2, W8
.text:000000000001088C                 STR             X19, [X20,#0x16840+var_16840]
.text:0000000000010890                 ADD             X21, SP, #0x16840+var_16838
.text:0000000000010894                 BL              .invokeCommand
.text:0000000000010898                 LDR             W8, [SP,#0x16840+var_16834]
.text:000000000001089C                 CBZ             W8, loc_108C0
.text:00000000000108A0                 ADRP            X1, #aSemSeviceKey@PAGE ; "SEM_SEVICE_KEY"
.text:00000000000108A4                 ADRP            X2, #aUnwraprewrappe_0@PAGE ; "unwrapRewrappedSKMSServiceKey is failed"
.text:00000000000108A8                 ADD             X1, X1, #aSemSeviceKey@PAGEOFF ; "SEM_SEVICE_KEY"
.text:00000000000108AC                 ADD             X2, X2, #aUnwraprewrappe_0@PAGEOFF ; "unwrapRewrappedSKMSServiceKey is failed"
.text:00000000000108B0                 MOV             W0, #6
.text:00000000000108B4                 BL              .__android_log_print
.text:00000000000108B8                 LDR             W0, [SP,#0x16840+var_16834]
.text:00000000000108BC                 B               loc_10938
.text:00000000000108C0 ; ---------------------------------------------------------------------------
.text:00000000000108C0 loc_108C0                               ; CODE XREF: unwrapRewrappedSKMSServiceKey+50↑j
.text:00000000000108C0                 MOV             W8, #0x16808
.text:00000000000108C8                 LDR             W8, [X21,X8]
.text:00000000000108CC                 CBZ             W8, loc_1091C
.text:00000000000108D0                 LDRH            W2, [SP,#0x16840+n] ; n
.text:00000000000108D4                 ADD             X8, SP, #0x16840+var_16838
.text:00000000000108D8                 ADRP            X0, #unk_273A0@PAGE
.text:00000000000108DC                 ADRP            X9, #word_2739E@PAGE
.text:00000000000108E0                 ADD             X10, X8, #8
.text:00000000000108E4                 ADD             X1, X8, #0xA ; src
.text:00000000000108E8                 ADD             X0, X0, #unk_273A0@PAGEOFF ; dest
.text:00000000000108EC                 ADD             X21, X2, X10
.text:00000000000108F0                 STRH            W2, [X9,#word_2739E@PAGEOFF]
.text:00000000000108F4                 BL              .memcpy
.text:00000000000108F8                 LDRH            W2, [X21,#2] ; n
.text:00000000000108FC                 ADRP            X0, #unk_283A4@PAGE
.text:0000000000010900                 ADRP            X8, #word_283A2@PAGE
.text:0000000000010904                 ADD             X1, X21, #4 ; src
.text:0000000000010908                 ADD             X0, X0, #unk_283A4@PAGEOFF ; dest
.text:000000000001090C                 STRH            W2, [X8,#word_283A2@PAGEOFF]
.text:0000000000010910                 BL              .memcpy
.text:0000000000010914                 MOV             W0, WZR
.text:0000000000010918                 B               loc_10938
.text:000000000001091C ; ---------------------------------------------------------------------------
.text:000000000001091C loc_1091C                               ; CODE XREF: unwrapRewrappedSKMSServiceKey+80↑j
.text:000000000001091C                 ADRP            X1, #aSemSeviceKey@PAGE ; "SEM_SEVICE_KEY"
.text:0000000000010920                 ADRP            X2, #aReturnedRespon@PAGE ; "returned response buffer wrongly"
.text:0000000000010924                 ADD             X1, X1, #aSemSeviceKey@PAGEOFF ; "SEM_SEVICE_KEY"
.text:0000000000010928                 ADD             X2, X2, #aReturnedRespon@PAGEOFF ; "returned response buffer wrongly"
.text:000000000001092C                 MOV             W0, #6
.text:0000000000010930                 BL              .__android_log_print
.text:0000000000010934                 MOV             W0, #0xFFFFFF38
.text:0000000000010938 loc_10938                               ; CODE XREF: unwrapRewrappedSKMSServiceKey+70↑j
.text:0000000000010938                                         ; unwrapRewrappedSKMSServiceKey+CC↑j
.text:0000000000010938                 LDR             X8, [X20]
.text:000000000001093C                 SUB             X8, X19, X8
.text:0000000000010940                 CBNZ            X8, loc_10958
.text:0000000000010944                 SUB             SP, X29, #0x20 ; ' '
.text:0000000000010948                 LDP             X29, X30, [SP,#0x20+var_s0]
.text:000000000001094C                 LDP             X20, X19, [SP,#0x20+var_10]
.text:0000000000010950                 LDP             X22, X21, [SP+0x20+var_20],#0x30
.text:0000000000010954                 RET
.text:0000000000010958 ; ---------------------------------------------------------------------------
.text:0000000000010958 loc_10958                               ; CODE XREF: unwrapRewrappedSKMSServiceKey+F4↑j
.text:0000000000010958                 BL              .__stack_chk_fail
.text:0000000000010958 ; } // starts at 1084C
.text:0000000000010958 ; End of function unwrapRewrappedSKMSServiceKey
.text:000000000001095C ; =============== S U B R O U T I N E =======================================
.text:000000000001095C ; Attributes: bp-based frame
.text:000000000001095C                 EXPORT readCertFile
.text:000000000001095C readCertFile                            ; CODE XREF: .readCertFile+C↑j
.text:000000000001095C                                         ; DATA XREF: LOAD:0000000000001918↑o ...
.text:000000000001095C var_10          = -0x10
.text:000000000001095C var_s0          =  0
.text:000000000001095C ; __unwind {
.text:000000000001095C                 STP             X20, X19, [SP,#-0x10+var_10]!
.text:0000000000010960                 STP             X29, X30, [SP,#0x10+var_s0]
.text:0000000000010964                 ADD             X29, SP, #0x10
.text:0000000000010968                 MOV             X20, X0
.text:000000000001096C                 BL              .BIO_s_file
.text:0000000000010970                 BL              .BIO_new
.text:0000000000010974                 MOV             X19, X0
.text:0000000000010978                 CBZ             X19, loc_109B0
.text:000000000001097C                 MOV             W1, #0x6C ; 'l'
.text:0000000000010980                 MOV             W2, #3
.text:0000000000010984                 MOV             X0, X19
.text:0000000000010988                 MOV             X3, X20
.text:000000000001098C                 BL              .BIO_ctrl
.text:0000000000010990                 CMP             X0, #0
.text:0000000000010994                 B.LE            loc_109D0
.text:0000000000010998                 MOV             X1, XZR
.text:000000000001099C                 MOV             X0, X19
.text:00000000000109A0                 BL              .d2i_X509_bio
.text:00000000000109A4                 CBZ             X0, loc_109E4
.text:00000000000109A8                 MOV             W20, #1
.text:00000000000109AC                 B               loc_10A04
.text:00000000000109B0 ; ---------------------------------------------------------------------------
.text:00000000000109B0 loc_109B0                               ; CODE XREF: readCertFile+1C↑j
.text:00000000000109B0                 ADRP            X1, #aSemSeviceKey@PAGE ; "SEM_SEVICE_KEY"
.text:00000000000109B4                 ADRP            X2, #aVerifycertBioN@PAGE ; "verifyCert - BIO_new error"
.text:00000000000109B8                 ADD             X1, X1, #aSemSeviceKey@PAGEOFF ; "SEM_SEVICE_KEY"
.text:00000000000109BC                 ADD             X2, X2, #aVerifycertBioN@PAGEOFF ; "verifyCert - BIO_new error"
.text:00000000000109C0                 MOV             W0, #6
.text:00000000000109C4                 BL              .__android_log_print
.text:00000000000109C8                 MOV             W20, WZR
.text:00000000000109CC                 B               loc_10A0C
.text:00000000000109D0 ; ---------------------------------------------------------------------------
.text:00000000000109D0 loc_109D0                               ; CODE XREF: readCertFile+38↑j
.text:00000000000109D0                 ADRP            X1, #aSemSeviceKey@PAGE ; "SEM_SEVICE_KEY"
.text:00000000000109D4                 ADRP            X2, #aVerifycertBioR@PAGE ; "verifyCert - BIO_read_filename error : "...
.text:00000000000109D8                 ADD             X1, X1, #aSemSeviceKey@PAGEOFF ; "SEM_SEVICE_KEY"
.text:00000000000109DC                 ADD             X2, X2, #aVerifycertBioR@PAGEOFF ; "verifyCert - BIO_read_filename error : "...
.text:00000000000109E0                 B               loc_109F4
.text:00000000000109E4 ; ---------------------------------------------------------------------------
.text:00000000000109E4 loc_109E4                               ; CODE XREF: readCertFile+48↑j
.text:00000000000109E4                 ADRP            X1, #aSemSeviceKey@PAGE ; "SEM_SEVICE_KEY"
.text:00000000000109E8                 ADRP            X2, #aVerifycertD2iX@PAGE ; "verifyCert - d2i_X509_bio error : %s"
.text:00000000000109EC                 ADD             X1, X1, #aSemSeviceKey@PAGEOFF ; "SEM_SEVICE_KEY"
.text:00000000000109F0                 ADD             X2, X2, #aVerifycertD2iX@PAGEOFF ; "verifyCert - d2i_X509_bio error : %s"
.text:00000000000109F4 loc_109F4                               ; CODE XREF: readCertFile+84↑j
.text:00000000000109F4                 MOV             W0, #6
.text:00000000000109F8                 MOV             X3, X20
.text:00000000000109FC                 BL              .__android_log_print
.text:0000000000010A00                 MOV             W20, WZR
.text:0000000000010A04 loc_10A04                               ; CODE XREF: readCertFile+50↑j
.text:0000000000010A04                 MOV             X0, X19
.text:0000000000010A08                 BL              .BIO_free
.text:0000000000010A0C loc_10A0C                               ; CODE XREF: readCertFile+70↑j
.text:0000000000010A0C                 LDP             X29, X30, [SP,#0x10+var_s0]
.text:0000000000010A10                 MOV             W0, W20
.text:0000000000010A14                 LDP             X20, X19, [SP+0x10+var_10],#0x20
.text:0000000000010A18                 RET
.text:0000000000010A18 ; } // starts at 1095C
.text:0000000000010A18 ; End of function readCertFile
.text:0000000000010A1C ; =============== S U B R O U T I N E =======================================
.text:0000000000010A1C ; Attributes: bp-based frame
.text:0000000000010A1C                 EXPORT verifyCert
.text:0000000000010A1C verifyCert                              ; CODE XREF: .verifyCert+C↑j
.text:0000000000010A1C                                         ; DATA XREF: LOAD:0000000000000B50↑o ...
.text:0000000000010A1C var_20          = -0x20
.text:0000000000010A1C var_10          = -0x10
.text:0000000000010A1C var_s0          =  0
.text:0000000000010A1C ; __unwind {
.text:0000000000010A1C                 STP             X22, X21, [SP,#-0x10+var_20]!
.text:0000000000010A20                 STP             X20, X19, [SP,#0x20+var_10]
.text:0000000000010A24                 STP             X29, X30, [SP,#0x20+var_s0]
.text:0000000000010A28                 ADD             X29, SP, #0x20
.text:0000000000010A2C                 MOV             X20, X2
.text:0000000000010A30                 MOV             X21, X0
.text:0000000000010A34                 MOV             X0, X20
.text:0000000000010A38                 MOV             X19, X1
.text:0000000000010A3C                 BL              .readCertFile
.text:0000000000010A40                 CBZ             W0, loc_10A6C
.text:0000000000010A44                 CBZ             X19, loc_10A88
.text:0000000000010A48                 MOV             X0, X19
.text:0000000000010A4C                 BL              .readCertFile
.text:0000000000010A50                 CMP             W0, #1
.text:0000000000010A54                 B.NE            loc_10AF8
.text:0000000000010A58                 BL              .sk_new_null
.text:0000000000010A5C                 MOV             X1, XZR
.text:0000000000010A60                 MOV             X19, X0
.text:0000000000010A64                 BL              .sk_push
.text:0000000000010A68                 B               loc_10A8C
.text:0000000000010A6C ; ---------------------------------------------------------------------------
.text:0000000000010A6C loc_10A6C                               ; CODE XREF: verifyCert+24↑j
.text:0000000000010A6C                 ADRP            X1, #aSemSeviceKey@PAGE ; "SEM_SEVICE_KEY"
.text:0000000000010A70                 ADRP            X2, #aVerifycertRead@PAGE ; "verifyCert - Read %s file error"
.text:0000000000010A74                 ADD             X1, X1, #aSemSeviceKey@PAGEOFF ; "SEM_SEVICE_KEY"
.text:0000000000010A78                 ADD             X2, X2, #aVerifycertRead@PAGEOFF ; "verifyCert - Read %s file error"
.text:0000000000010A7C                 MOV             W0, #6
.text:0000000000010A80                 MOV             X3, X20
.text:0000000000010A84                 B               loc_10B10
.text:0000000000010A88 ; ---------------------------------------------------------------------------
.text:0000000000010A88 loc_10A88                               ; CODE XREF: verifyCert+28↑j
.text:0000000000010A88                 MOV             X19, XZR
.text:0000000000010A8C loc_10A8C                               ; CODE XREF: verifyCert+4C↑j
.text:0000000000010A8C                 BL              .X509_STORE_new
.text:0000000000010A90                 MOV             X20, X0
.text:0000000000010A94                 CBZ             X20, loc_10B1C
.text:0000000000010A98                 BL              .X509_LOOKUP_file
.text:0000000000010A9C                 MOV             X1, X0
.text:0000000000010AA0                 MOV             X0, X20
.text:0000000000010AA4                 BL              .X509_STORE_add_lookup
.text:0000000000010AA8                 CBZ             X0, loc_10B3C
.text:0000000000010AAC                 MOV             X4, XZR
.text:0000000000010AB0                 MOV             W1, #1
.text:0000000000010AB4                 MOV             W3, #2
.text:0000000000010AB8                 MOV             X2, X21
.text:0000000000010ABC                 BL              .X509_LOOKUP_ctrl
.text:0000000000010AC0                 CBZ             W0, loc_10B50
.text:0000000000010AC4                 BL              .X509_STORE_CTX_new
.text:0000000000010AC8                 MOV             X21, X0
.text:0000000000010ACC                 CBZ             X21, loc_10B64
.text:0000000000010AD0                 MOV             X2, XZR
.text:0000000000010AD4                 MOV             X0, X21
.text:0000000000010AD8                 MOV             X1, X20
.text:0000000000010ADC                 MOV             X3, X19
.text:0000000000010AE0                 BL              .X509_STORE_CTX_init
.text:0000000000010AE4                 CBZ             W0, loc_10BBC
.text:0000000000010AE8                 MOV             X0, X21
.text:0000000000010AEC                 BL              .X509_verify_cert
.text:0000000000010AF0                 MOV             W22, W0
.text:0000000000010AF4                 B               loc_10B84
.text:0000000000010AF8 ; ---------------------------------------------------------------------------
.text:0000000000010AF8 loc_10AF8                               ; CODE XREF: verifyCert+38↑j
.text:0000000000010AF8                 ADRP            X1, #aSemSeviceKey@PAGE ; "SEM_SEVICE_KEY"
.text:0000000000010AFC                 ADRP            X2, #aVerifycertRead@PAGE ; "verifyCert - Read %s file error"
.text:0000000000010B00                 ADD             X1, X1, #aSemSeviceKey@PAGEOFF ; "SEM_SEVICE_KEY"
.text:0000000000010B04                 ADD             X2, X2, #aVerifycertRead@PAGEOFF ; "verifyCert - Read %s file error"
.text:0000000000010B08                 MOV             W0, #6
.text:0000000000010B0C                 MOV             X3, X19
.text:0000000000010B10 loc_10B10                               ; CODE XREF: verifyCert+68↑j
.text:0000000000010B10                 BL              .__android_log_print
.text:0000000000010B14                 MOV             W22, WZR
.text:0000000000010B18                 B               loc_10BA8
.text:0000000000010B1C ; ---------------------------------------------------------------------------
.text:0000000000010B1C loc_10B1C                               ; CODE XREF: verifyCert+78↑j
.text:0000000000010B1C                 ADRP            X1, #aSemSeviceKey@PAGE ; "SEM_SEVICE_KEY"
.text:0000000000010B20                 ADRP            X2, #aVerifycertX509@PAGE ; "verifyCert - X509_STORE_new error"
.text:0000000000010B24                 ADD             X1, X1, #aSemSeviceKey@PAGEOFF ; "SEM_SEVICE_KEY"
.text:0000000000010B28                 ADD             X2, X2, #aVerifycertX509@PAGEOFF ; "verifyCert - X509_STORE_new error"
.text:0000000000010B2C                 MOV             W0, #6
.text:0000000000010B30                 BL              .__android_log_print
.text:0000000000010B34                 MOV             X20, XZR
.text:0000000000010B38                 B               loc_10B7C
.text:0000000000010B3C ; ---------------------------------------------------------------------------
.text:0000000000010B3C loc_10B3C                               ; CODE XREF: verifyCert+8C↑j
.text:0000000000010B3C                 ADRP            X1, #aSemSeviceKey@PAGE ; "SEM_SEVICE_KEY"
.text:0000000000010B40                 ADRP            X2, #aVerifycertX509_0@PAGE ; "verifyCert - X509_STORE_add_lookup erro"...
.text:0000000000010B44                 ADD             X1, X1, #aSemSeviceKey@PAGEOFF ; "SEM_SEVICE_KEY"
.text:0000000000010B48                 ADD             X2, X2, #aVerifycertX509_0@PAGEOFF ; "verifyCert - X509_STORE_add_lookup erro"...
.text:0000000000010B4C                 B               loc_10B74
.text:0000000000010B50 ; ---------------------------------------------------------------------------
.text:0000000000010B50 loc_10B50                               ; CODE XREF: verifyCert+A4↑j
.text:0000000000010B50                 ADRP            X1, #aSemSeviceKey@PAGE ; "SEM_SEVICE_KEY"
.text:0000000000010B54                 ADRP            X2, #aVerifycertX509_1@PAGE ; "verifyCert - X509_LOOKUP_load_file erro"...
.text:0000000000010B58                 ADD             X1, X1, #aSemSeviceKey@PAGEOFF ; "SEM_SEVICE_KEY"
.text:0000000000010B5C                 ADD             X2, X2, #aVerifycertX509_1@PAGEOFF ; "verifyCert - X509_LOOKUP_load_file erro"...
.text:0000000000010B60                 B               loc_10B74
.text:0000000000010B64 ; ---------------------------------------------------------------------------
.text:0000000000010B64 loc_10B64                               ; CODE XREF: verifyCert+B0↑j
.text:0000000000010B64                 ADRP            X1, #aSemSeviceKey@PAGE ; "SEM_SEVICE_KEY"
.text:0000000000010B68                 ADRP            X2, #aVerifycertX509_2@PAGE ; "verifyCert - X509_STORE_CTX_new error"
.text:0000000000010B6C                 ADD             X1, X1, #aSemSeviceKey@PAGEOFF ; "SEM_SEVICE_KEY"
.text:0000000000010B70                 ADD             X2, X2, #aVerifycertX509_2@PAGEOFF ; "verifyCert - X509_STORE_CTX_new error"
.text:0000000000010B74 loc_10B74                               ; CODE XREF: verifyCert+130↑j
.text:0000000000010B74                                         ; verifyCert+144↑j
.text:0000000000010B74                 MOV             W0, #6
.text:0000000000010B78                 BL              .__android_log_print
.text:0000000000010B7C loc_10B7C                               ; CODE XREF: verifyCert+11C↑j
.text:0000000000010B7C                 MOV             X21, XZR
.text:0000000000010B80                 MOV             W22, WZR
.text:0000000000010B84 loc_10B84                               ; CODE XREF: verifyCert+D8↑j
.text:0000000000010B84                                         ; verifyCert+1BC↓j
.text:0000000000010B84                 CBZ             X19, loc_10B90
.text:0000000000010B88                 MOV             X0, X19
.text:0000000000010B8C                 BL              .sk_free
.text:0000000000010B90 loc_10B90                               ; CODE XREF: verifyCert:loc_10B84↑j
.text:0000000000010B90                 CBZ             X21, loc_10B9C
.text:0000000000010B94                 MOV             X0, X21
.text:0000000000010B98                 BL              .X509_STORE_CTX_free
.text:0000000000010B9C loc_10B9C                               ; CODE XREF: verifyCert:loc_10B90↑j
.text:0000000000010B9C                 CBZ             X20, loc_10BA8
.text:0000000000010BA0                 MOV             X0, X20
.text:0000000000010BA4                 BL              .X509_STORE_free
.text:0000000000010BA8 loc_10BA8                               ; CODE XREF: verifyCert+FC↑j
.text:0000000000010BA8                                         ; verifyCert:loc_10B9C↑j
.text:0000000000010BA8                 LDP             X29, X30, [SP,#0x20+var_s0]
.text:0000000000010BAC                 LDP             X20, X19, [SP,#0x20+var_10]
.text:0000000000010BB0                 MOV             W0, W22
.text:0000000000010BB4                 LDP             X22, X21, [SP+0x20+var_20],#0x30
.text:0000000000010BB8                 RET
.text:0000000000010BBC ; ---------------------------------------------------------------------------
.text:0000000000010BBC loc_10BBC                               ; CODE XREF: verifyCert+C8↑j
.text:0000000000010BBC                 ADRP            X1, #aSemSeviceKey@PAGE ; "SEM_SEVICE_KEY"
.text:0000000000010BC0                 ADRP            X2, #aVerifycertX509_3@PAGE ; "verifyCert - X509_STORE_CTX_init error"
.text:0000000000010BC4                 ADD             X1, X1, #aSemSeviceKey@PAGEOFF ; "SEM_SEVICE_KEY"
.text:0000000000010BC8                 ADD             X2, X2, #aVerifycertX509_3@PAGEOFF ; "verifyCert - X509_STORE_CTX_init error"
.text:0000000000010BCC                 MOV             W0, #6
.text:0000000000010BD0                 BL              .__android_log_print
.text:0000000000010BD4                 MOV             W22, WZR
.text:0000000000010BD8                 B               loc_10B84
.text:0000000000010BD8 ; } // starts at 10A1C
.text:0000000000010BD8 ; End of function verifyCert
.text:0000000000010BDC ; =============== S U B R O U T I N E =======================================
.text:0000000000010BDC ; Attributes: bp-based frame
.text:0000000000010BDC                 EXPORT verifySEMServiceKeyCertChain
.text:0000000000010BDC verifySEMServiceKeyCertChain            ; CODE XREF: .verifySEMServiceKeyCertChain+C↑j
.text:0000000000010BDC                                         ; DATA XREF: LOAD:0000000000001330↑o ...
.text:0000000000010BDC var_20          = -0x20
.text:0000000000010BDC var_10          = -0x10
.text:0000000000010BDC var_s0          =  0
.text:0000000000010BDC ; __unwind {
.text:0000000000010BDC                 STP             X22, X21, [SP,#-0x10+var_20]!
.text:0000000000010BE0                 STP             X20, X19, [SP,#0x20+var_10]
.text:0000000000010BE4                 STP             X29, X30, [SP,#0x20+var_s0]
.text:0000000000010BE8                 ADD             X29, SP, #0x20
.text:0000000000010BEC                 ADRP            X20, #aEfsSecEfsRootC@PAGE ; "/efs/sec_efs/root_cert.der"
.text:0000000000010BF0                 ADD             X20, X20, #aEfsSecEfsRootC@PAGEOFF ; "/efs/sec_efs/root_cert.der"
.text:0000000000010BF4                 ADRP            X1, #unk_27008@PAGE
.text:0000000000010BF8                 ADD             X1, X1, #unk_27008@PAGEOFF
.text:0000000000010BFC                 MOV             W2, #0x396
.text:0000000000010C00                 MOV             X0, X20
.text:0000000000010C04                 BL              .semWriteFile
.text:0000000000010C08                 ADRP            X8, #word_2739E@PAGE
.text:0000000000010C0C                 LDRH            W2, [X8,#word_2739E@PAGEOFF]
.text:0000000000010C10                 ADRP            X19, #aEfsSecEfsDrkCe@PAGE ; "/efs/sec_efs/drk_cert.der"
.text:0000000000010C14                 ADD             X19, X19, #aEfsSecEfsDrkCe@PAGEOFF ; "/efs/sec_efs/drk_cert.der"
.text:0000000000010C18                 ADRP            X1, #unk_273A0@PAGE
.text:0000000000010C1C                 ADD             X1, X1, #unk_273A0@PAGEOFF
.text:0000000000010C20                 MOV             X0, X19
.text:0000000000010C24                 BL              .semWriteFile
.text:0000000000010C28                 ADRP            X8, #word_27BA0@PAGE
.text:0000000000010C2C                 LDRH            W2, [X8,#word_27BA0@PAGEOFF]
.text:0000000000010C30                 ADRP            X21, #aEfsSecEfsServi@PAGE ; "/efs/sec_efs/service_cert.der"
.text:0000000000010C34                 ADD             X21, X21, #aEfsSecEfsServi@PAGEOFF ; "/efs/sec_efs/service_cert.der"
.text:0000000000010C38                 ADRP            X1, #unk_27BA2@PAGE
.text:0000000000010C3C                 ADD             X1, X1, #unk_27BA2@PAGEOFF
.text:0000000000010C40                 MOV             X0, X21
.text:0000000000010C44                 BL              .semWriteFile
.text:0000000000010C48                 MOV             X0, X20
.text:0000000000010C4C                 MOV             X1, X19
.text:0000000000010C50                 MOV             X2, X21
.text:0000000000010C54                 BL              .verifyCert
.text:0000000000010C58                 MOV             W19, W0
.text:0000000000010C5C                 MOV             X0, X20 ; filename
.text:0000000000010C60                 BL              .remove
.text:0000000000010C64                 CBZ             W0, loc_10C80
.text:0000000000010C68                 ADRP            X1, #aSemSeviceKey@PAGE ; "SEM_SEVICE_KEY"
.text:0000000000010C6C                 ADRP            X2, #aFailToRemoveRo@PAGE ; "fail to remove : ROOT_CERT_PATH"
.text:0000000000010C70                 ADD             X1, X1, #aSemSeviceKey@PAGEOFF ; "SEM_SEVICE_KEY"
.text:0000000000010C74                 ADD             X2, X2, #aFailToRemoveRo@PAGEOFF ; "fail to remove : ROOT_CERT_PATH"
.text:0000000000010C78                 MOV             W0, #6
.text:0000000000010C7C                 BL              .__android_log_print
.text:0000000000010C80 loc_10C80                               ; CODE XREF: verifySEMServiceKeyCertChain+88↑j
.text:0000000000010C80                 ADRP            X0, #aEfsSecEfsDrkCe@PAGE ; "/efs/sec_efs/drk_cert.der"
.text:0000000000010C84                 ADD             X0, X0, #aEfsSecEfsDrkCe@PAGEOFF ; "/efs/sec_efs/drk_cert.der"
.text:0000000000010C88                 BL              .remove
.text:0000000000010C8C                 CBZ             W0, loc_10CA8
.text:0000000000010C90                 ADRP            X1, #aSemSeviceKey@PAGE ; "SEM_SEVICE_KEY"
.text:0000000000010C94                 ADRP            X2, #aFailToRemoveDr@PAGE ; "fail to remove : DRK_CERT_PATH"
.text:0000000000010C98                 ADD             X1, X1, #aSemSeviceKey@PAGEOFF ; "SEM_SEVICE_KEY"
.text:0000000000010C9C                 ADD             X2, X2, #aFailToRemoveDr@PAGEOFF ; "fail to remove : DRK_CERT_PATH"
.text:0000000000010CA0                 MOV             W0, #6
.text:0000000000010CA4                 BL              .__android_log_print
.text:0000000000010CA8 loc_10CA8                               ; CODE XREF: verifySEMServiceKeyCertChain+B0↑j
.text:0000000000010CA8                 ADRP            X0, #aEfsSecEfsServi@PAGE ; "/efs/sec_efs/service_cert.der"
.text:0000000000010CAC                 ADD             X0, X0, #aEfsSecEfsServi@PAGEOFF ; "/efs/sec_efs/service_cert.der"
.text:0000000000010CB0                 BL              .remove
.text:0000000000010CB4                 CBZ             W0, loc_10CD0
.text:0000000000010CB8                 ADRP            X1, #aSemSeviceKey@PAGE ; "SEM_SEVICE_KEY"
.text:0000000000010CBC                 ADRP            X2, #aFailToRemoveSe@PAGE ; "fail to remove : SERVICE_CERT_PATH"
.text:0000000000010CC0                 ADD             X1, X1, #aSemSeviceKey@PAGEOFF ; "SEM_SEVICE_KEY"
.text:0000000000010CC4                 ADD             X2, X2, #aFailToRemoveSe@PAGEOFF ; "fail to remove : SERVICE_CERT_PATH"
.text:0000000000010CC8                 MOV             W0, #6
.text:0000000000010CCC                 BL              .__android_log_print
.text:0000000000010CD0 loc_10CD0                               ; CODE XREF: verifySEMServiceKeyCertChain+D8↑j
.text:0000000000010CD0                 MOV             W0, W19
.text:0000000000010CD4                 LDP             X29, X30, [SP,#0x20+var_s0]
.text:0000000000010CD8                 LDP             X20, X19, [SP,#0x20+var_10]
.text:0000000000010CDC                 LDP             X22, X21, [SP+0x20+var_20],#0x30
.text:0000000000010CE0                 RET
.text:0000000000010CE0 ; } // starts at 10BDC
.text:0000000000010CE0 ; End of function verifySEMServiceKeyCertChain
.text:0000000000010CE4 ; =============== S U B R O U T I N E =======================================
.text:0000000000010CE4 ; Attributes: bp-based frame
.text:0000000000010CE4                 EXPORT verifySKMSServiceKeyCertChain
.text:0000000000010CE4 verifySKMSServiceKeyCertChain           ; CODE XREF: .verifySKMSServiceKeyCertChain+C↑j
.text:0000000000010CE4                                         ; DATA XREF: LOAD:00000000000007F0↑o ...
.text:0000000000010CE4 var_20          = -0x20
.text:0000000000010CE4 var_10          = -0x10
.text:0000000000010CE4 var_s0          =  0
.text:0000000000010CE4 ; __unwind {
.text:0000000000010CE4                 STP             X22, X21, [SP,#-0x10+var_20]!
.text:0000000000010CE8                 STP             X20, X19, [SP,#0x20+var_10]
.text:0000000000010CEC                 STP             X29, X30, [SP,#0x20+var_s0]
.text:0000000000010CF0                 ADD             X29, SP, #0x20
.text:0000000000010CF4                 ADRP            X20, #aEfsSecEfsRootC@PAGE ; "/efs/sec_efs/root_cert.der"
.text:0000000000010CF8                 ADD             X20, X20, #aEfsSecEfsRootC@PAGEOFF ; "/efs/sec_efs/root_cert.der"
.text:0000000000010CFC                 ADRP            X1, #unk_27008@PAGE
.text:0000000000010D00                 ADD             X1, X1, #unk_27008@PAGEOFF
.text:0000000000010D04                 MOV             W2, #0x396
.text:0000000000010D08                 MOV             X0, X20
.text:0000000000010D0C                 BL              .semWriteFile
.text:0000000000010D10                 ADRP            X8, #word_2739E@PAGE
.text:0000000000010D14                 LDRH            W2, [X8,#word_2739E@PAGEOFF]
.text:0000000000010D18                 ADRP            X19, #aEfsSecEfsDrkCe@PAGE ; "/efs/sec_efs/drk_cert.der"
.text:0000000000010D1C                 ADD             X19, X19, #aEfsSecEfsDrkCe@PAGEOFF ; "/efs/sec_efs/drk_cert.der"
.text:0000000000010D20                 ADRP            X1, #unk_273A0@PAGE
.text:0000000000010D24                 ADD             X1, X1, #unk_273A0@PAGEOFF
.text:0000000000010D28                 MOV             X0, X19
.text:0000000000010D2C                 BL              .semWriteFile
.text:0000000000010D30                 ADRP            X8, #word_283A2@PAGE
.text:0000000000010D34                 LDRH            W2, [X8,#word_283A2@PAGEOFF]
.text:0000000000010D38                 ADRP            X21, #aEfsSecEfsServi@PAGE ; "/efs/sec_efs/service_cert.der"
.text:0000000000010D3C                 ADD             X21, X21, #aEfsSecEfsServi@PAGEOFF ; "/efs/sec_efs/service_cert.der"
.text:0000000000010D40                 ADRP            X1, #unk_283A4@PAGE
.text:0000000000010D44                 ADD             X1, X1, #unk_283A4@PAGEOFF
.text:0000000000010D48                 MOV             X0, X21
.text:0000000000010D4C                 BL              .semWriteFile
.text:0000000000010D50                 MOV             X0, X20
.text:0000000000010D54                 MOV             X1, X19
.text:0000000000010D58                 MOV             X2, X21
.text:0000000000010D5C                 BL              .verifyCert
.text:0000000000010D60                 MOV             W19, W0
.text:0000000000010D64                 MOV             X0, X20 ; filename
.text:0000000000010D68                 BL              .remove
.text:0000000000010D6C                 CBZ             W0, loc_10D88
.text:0000000000010D70                 ADRP            X1, #aSemSeviceKey@PAGE ; "SEM_SEVICE_KEY"
.text:0000000000010D74                 ADRP            X2, #aFailToRemoveRo@PAGE ; "fail to remove : ROOT_CERT_PATH"
.text:0000000000010D78                 ADD             X1, X1, #aSemSeviceKey@PAGEOFF ; "SEM_SEVICE_KEY"
.text:0000000000010D7C                 ADD             X2, X2, #aFailToRemoveRo@PAGEOFF ; "fail to remove : ROOT_CERT_PATH"
.text:0000000000010D80                 MOV             W0, #6
.text:0000000000010D84                 BL              .__android_log_print
.text:0000000000010D88 loc_10D88                               ; CODE XREF: verifySKMSServiceKeyCertChain+88↑j
.text:0000000000010D88                 ADRP            X0, #aEfsSecEfsDrkCe@PAGE ; "/efs/sec_efs/drk_cert.der"
.text:0000000000010D8C                 ADD             X0, X0, #aEfsSecEfsDrkCe@PAGEOFF ; "/efs/sec_efs/drk_cert.der"
.text:0000000000010D90                 BL              .remove
.text:0000000000010D94                 CBZ             W0, loc_10DB0
.text:0000000000010D98                 ADRP            X1, #aSemSeviceKey@PAGE ; "SEM_SEVICE_KEY"
.text:0000000000010D9C                 ADRP            X2, #aFailToRemoveDr@PAGE ; "fail to remove : DRK_CERT_PATH"
.text:0000000000010DA0                 ADD             X1, X1, #aSemSeviceKey@PAGEOFF ; "SEM_SEVICE_KEY"
.text:0000000000010DA4                 ADD             X2, X2, #aFailToRemoveDr@PAGEOFF ; "fail to remove : DRK_CERT_PATH"
.text:0000000000010DA8                 MOV             W0, #6
.text:0000000000010DAC                 BL              .__android_log_print
.text:0000000000010DB0 loc_10DB0                               ; CODE XREF: verifySKMSServiceKeyCertChain+B0↑j
.text:0000000000010DB0                 ADRP            X0, #aEfsSecEfsServi@PAGE ; "/efs/sec_efs/service_cert.der"
.text:0000000000010DB4                 ADD             X0, X0, #aEfsSecEfsServi@PAGEOFF ; "/efs/sec_efs/service_cert.der"
.text:0000000000010DB8                 BL              .remove
.text:0000000000010DBC                 CBZ             W0, loc_10DD8
.text:0000000000010DC0                 ADRP            X1, #aSemSeviceKey@PAGE ; "SEM_SEVICE_KEY"
.text:0000000000010DC4                 ADRP            X2, #aFailToRemoveSe@PAGE ; "fail to remove : SERVICE_CERT_PATH"
.text:0000000000010DC8                 ADD             X1, X1, #aSemSeviceKey@PAGEOFF ; "SEM_SEVICE_KEY"
.text:0000000000010DCC                 ADD             X2, X2, #aFailToRemoveSe@PAGEOFF ; "fail to remove : SERVICE_CERT_PATH"
.text:0000000000010DD0                 MOV             W0, #6
.text:0000000000010DD4                 BL              .__android_log_print
.text:0000000000010DD8 loc_10DD8                               ; CODE XREF: verifySKMSServiceKeyCertChain+D8↑j
.text:0000000000010DD8                 MOV             W0, W19
.text:0000000000010DDC                 LDP             X29, X30, [SP,#0x20+var_s0]
.text:0000000000010DE0                 LDP             X20, X19, [SP,#0x20+var_10]
.text:0000000000010DE4                 LDP             X22, X21, [SP+0x20+var_20],#0x30
.text:0000000000010DE8                 RET
.text:0000000000010DE8 ; } // starts at 10CE4
.text:0000000000010DE8 ; End of function verifySKMSServiceKeyCertChain
.text:0000000000010DE8 ; .text         ends
